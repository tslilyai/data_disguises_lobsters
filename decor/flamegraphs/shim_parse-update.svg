<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="998" onload="init(evt)" viewBox="0 0 1200 998" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="998" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="981.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="981.00"> </text><svg id="frames" x="10" width="1180"><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.12%)</title><rect x="0.0000%" y="901" width="0.1171%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="911.50"></text></g><g><title>&lt;mysql::conn::ConnMut as core::ops::deref::Deref&gt;::deref (1 samples, 0.12%)</title><rect x="0.0000%" y="885" width="0.1171%" height="15" fill="rgb(217,0,24)"/><text x="0.2500%" y="895.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (2 samples, 0.23%)</title><rect x="0.1171%" y="901" width="0.2342%" height="15" fill="rgb(221,193,54)"/><text x="0.3671%" y="911.50"></text></g><g><title>std::sys_common::net::TcpStream::read (2 samples, 0.23%)</title><rect x="0.1171%" y="885" width="0.2342%" height="15" fill="rgb(248,212,6)"/><text x="0.3671%" y="895.50"></text></g><g><title>std::sys::unix::net::Socket::read (2 samples, 0.23%)</title><rect x="0.1171%" y="869" width="0.2342%" height="15" fill="rgb(208,68,35)"/><text x="0.3671%" y="879.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (2 samples, 0.23%)</title><rect x="0.1171%" y="853" width="0.2342%" height="15" fill="rgb(232,128,0)"/><text x="0.3671%" y="863.50"></text></g><g><title>__libc_recv (2 samples, 0.23%)</title><rect x="0.1171%" y="837" width="0.2342%" height="15" fill="rgb(207,160,47)"/><text x="0.3671%" y="847.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.23%)</title><rect x="0.1171%" y="821" width="0.2342%" height="15" fill="rgb(228,23,34)"/><text x="0.3671%" y="831.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.12%)</title><rect x="0.3513%" y="901" width="0.1171%" height="15" fill="rgb(218,30,26)"/><text x="0.6013%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="0.4684%" y="901" width="0.1171%" height="15" fill="rgb(220,122,19)"/><text x="0.7184%" y="911.50"></text></g><g><title>[[heap]] (6 samples, 0.70%)</title><rect x="0.0000%" y="917" width="0.7026%" height="15" fill="rgb(250,228,42)"/><text x="0.2500%" y="927.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (1 samples, 0.12%)</title><rect x="0.5855%" y="901" width="0.1171%" height="15" fill="rgb(240,193,28)"/><text x="0.8355%" y="911.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.12%)</title><rect x="0.7026%" y="901" width="0.1171%" height="15" fill="rgb(216,20,37)"/><text x="0.9526%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.12%)</title><rect x="0.7026%" y="885" width="0.1171%" height="15" fill="rgb(206,188,39)"/><text x="0.9526%" y="895.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.12%)</title><rect x="0.7026%" y="869" width="0.1171%" height="15" fill="rgb(217,207,13)"/><text x="0.9526%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.12%)</title><rect x="0.7026%" y="853" width="0.1171%" height="15" fill="rgb(231,73,38)"/><text x="0.9526%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.12%)</title><rect x="0.7026%" y="837" width="0.1171%" height="15" fill="rgb(225,20,46)"/><text x="0.9526%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.12%)</title><rect x="0.7026%" y="821" width="0.1171%" height="15" fill="rgb(210,31,41)"/><text x="0.9526%" y="831.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.12%)</title><rect x="0.7026%" y="805" width="0.1171%" height="15" fill="rgb(221,200,47)"/><text x="0.9526%" y="815.50"></text></g><g><title>__libc_send (1 samples, 0.12%)</title><rect x="0.8197%" y="901" width="0.1171%" height="15" fill="rgb(226,26,5)"/><text x="1.0697%" y="911.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.12%)</title><rect x="0.8197%" y="885" width="0.1171%" height="15" fill="rgb(249,33,26)"/><text x="1.0697%" y="895.50"></text></g><g><title>[[stack]] (3 samples, 0.35%)</title><rect x="0.7026%" y="917" width="0.3513%" height="15" fill="rgb(235,183,28)"/><text x="0.9526%" y="927.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.12%)</title><rect x="0.9368%" y="901" width="0.1171%" height="15" fill="rgb(221,5,38)"/><text x="1.1868%" y="911.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (1 samples, 0.12%)</title><rect x="1.0539%" y="901" width="0.1171%" height="15" fill="rgb(247,18,42)"/><text x="1.3039%" y="911.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.12%)</title><rect x="1.1710%" y="901" width="0.1171%" height="15" fill="rgb(241,131,45)"/><text x="1.4210%" y="911.50"></text></g><g><title>std::sys_common::net::TcpStream::read (1 samples, 0.12%)</title><rect x="1.1710%" y="885" width="0.1171%" height="15" fill="rgb(249,31,29)"/><text x="1.4210%" y="895.50"></text></g><g><title>std::sys::unix::net::Socket::read (1 samples, 0.12%)</title><rect x="1.1710%" y="869" width="0.1171%" height="15" fill="rgb(225,111,53)"/><text x="1.4210%" y="879.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (1 samples, 0.12%)</title><rect x="1.1710%" y="853" width="0.1171%" height="15" fill="rgb(238,160,17)"/><text x="1.4210%" y="863.50"></text></g><g><title>__libc_recv (1 samples, 0.12%)</title><rect x="1.1710%" y="837" width="0.1171%" height="15" fill="rgb(214,148,48)"/><text x="1.4210%" y="847.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.12%)</title><rect x="1.1710%" y="821" width="0.1171%" height="15" fill="rgb(232,36,49)"/><text x="1.4210%" y="831.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.23%)</title><rect x="1.2881%" y="901" width="0.2342%" height="15" fill="rgb(209,103,24)"/><text x="1.5381%" y="911.50"></text></g><g><title>__libc_send (2 samples, 0.23%)</title><rect x="1.5222%" y="901" width="0.2342%" height="15" fill="rgb(229,88,8)"/><text x="1.7722%" y="911.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.12%)</title><rect x="1.6393%" y="885" width="0.1171%" height="15" fill="rgb(213,181,19)"/><text x="1.8893%" y="895.50"></text></g><g><title>_int_free (2 samples, 0.23%)</title><rect x="1.7564%" y="901" width="0.2342%" height="15" fill="rgb(254,191,54)"/><text x="2.0064%" y="911.50"></text></g><g><title>_int_malloc (1 samples, 0.12%)</title><rect x="1.9906%" y="901" width="0.1171%" height="15" fill="rgb(241,83,37)"/><text x="2.2406%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="2.1077%" y="901" width="0.1171%" height="15" fill="rgb(233,36,39)"/><text x="2.3577%" y="911.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.12%)</title><rect x="2.2248%" y="901" width="0.1171%" height="15" fill="rgb(226,3,54)"/><text x="2.4748%" y="911.50"></text></g><g><title>core::fmt::write (1 samples, 0.12%)</title><rect x="2.3419%" y="901" width="0.1171%" height="15" fill="rgb(245,192,40)"/><text x="2.5919%" y="911.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (1 samples, 0.12%)</title><rect x="2.4590%" y="901" width="0.1171%" height="15" fill="rgb(238,167,29)"/><text x="2.7090%" y="911.50"></text></g><g><title>mysql_common::packets::OkPacket::into_owned (1 samples, 0.12%)</title><rect x="2.5761%" y="901" width="0.1171%" height="15" fill="rgb(232,182,51)"/><text x="2.8261%" y="911.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.12%)</title><rect x="2.6932%" y="901" width="0.1171%" height="15" fill="rgb(231,60,39)"/><text x="2.9432%" y="911.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.23%)</title><rect x="2.8103%" y="901" width="0.2342%" height="15" fill="rgb(208,69,12)"/><text x="3.0603%" y="911.50"></text></g><g><title>[anon] (18 samples, 2.11%)</title><rect x="1.0539%" y="917" width="2.1077%" height="15" fill="rgb(235,93,37)"/><text x="1.3039%" y="927.50">[..</text></g><g><title>std::io::Write::write_all (1 samples, 0.12%)</title><rect x="3.0445%" y="901" width="0.1171%" height="15" fill="rgb(213,116,39)"/><text x="3.2945%" y="911.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.12%)</title><rect x="3.1616%" y="917" width="0.1171%" height="15" fill="rgb(222,207,29)"/><text x="3.4116%" y="927.50"></text></g><g><title>__GI__IO_default_xsputn (1 samples, 0.12%)</title><rect x="3.1616%" y="901" width="0.1171%" height="15" fill="rgb(206,96,30)"/><text x="3.4116%" y="911.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.12%)</title><rect x="3.2787%" y="901" width="0.1171%" height="15" fill="rgb(218,138,4)"/><text x="3.5287%" y="911.50"></text></g><g><title>_int_realloc (1 samples, 0.12%)</title><rect x="3.3958%" y="901" width="0.1171%" height="15" fill="rgb(250,191,14)"/><text x="3.6458%" y="911.50"></text></g><g><title>[lobsters] (3 samples, 0.35%)</title><rect x="3.2787%" y="917" width="0.3513%" height="15" fill="rgb(239,60,40)"/><text x="3.5287%" y="927.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.12%)</title><rect x="3.5129%" y="901" width="0.1171%" height="15" fill="rgb(206,27,48)"/><text x="3.7629%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.23%)</title><rect x="3.6300%" y="901" width="0.2342%" height="15" fill="rgb(225,35,8)"/><text x="3.8800%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.12%)</title><rect x="3.8642%" y="901" width="0.1171%" height="15" fill="rgb(250,213,24)"/><text x="4.1142%" y="911.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (1 samples, 0.12%)</title><rect x="3.9813%" y="853" width="0.1171%" height="15" fill="rgb(247,123,22)"/><text x="4.2313%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.12%)</title><rect x="3.9813%" y="837" width="0.1171%" height="15" fill="rgb(231,138,38)"/><text x="4.2313%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.12%)</title><rect x="3.9813%" y="821" width="0.1171%" height="15" fill="rgb(231,145,46)"/><text x="4.2313%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="4.0984%" y="837" width="0.1171%" height="15" fill="rgb(251,118,11)"/><text x="4.3484%" y="847.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.12%)</title><rect x="4.0984%" y="821" width="0.1171%" height="15" fill="rgb(217,147,25)"/><text x="4.3484%" y="831.50"></text></g><g><title>_int_malloc (1 samples, 0.12%)</title><rect x="4.0984%" y="805" width="0.1171%" height="15" fill="rgb(247,81,37)"/><text x="4.3484%" y="815.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.12%)</title><rect x="4.0984%" y="789" width="0.1171%" height="15" fill="rgb(209,12,38)"/><text x="4.3484%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="4.2155%" y="821" width="0.1171%" height="15" fill="rgb(227,1,9)"/><text x="4.4655%" y="831.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.12%)</title><rect x="4.2155%" y="805" width="0.1171%" height="15" fill="rgb(248,47,43)"/><text x="4.4655%" y="815.50"></text></g><g><title>_int_realloc (1 samples, 0.12%)</title><rect x="4.2155%" y="789" width="0.1171%" height="15" fill="rgb(221,10,30)"/><text x="4.4655%" y="799.50"></text></g><g><title>page_fault (1 samples, 0.12%)</title><rect x="4.2155%" y="773" width="0.1171%" height="15" fill="rgb(210,229,1)"/><text x="4.4655%" y="783.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.12%)</title><rect x="4.2155%" y="757" width="0.1171%" height="15" fill="rgb(222,148,37)"/><text x="4.4655%" y="767.50"></text></g><g><title>handle_mm_fault (1 samples, 0.12%)</title><rect x="4.2155%" y="741" width="0.1171%" height="15" fill="rgb(234,67,33)"/><text x="4.4655%" y="751.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.12%)</title><rect x="4.2155%" y="725" width="0.1171%" height="15" fill="rgb(247,98,35)"/><text x="4.4655%" y="735.50"></text></g><g><title>mem_cgroup_try_charge_delay (1 samples, 0.12%)</title><rect x="4.2155%" y="709" width="0.1171%" height="15" fill="rgb(247,138,52)"/><text x="4.4655%" y="719.50"></text></g><g><title>mem_cgroup_try_charge (1 samples, 0.12%)</title><rect x="4.2155%" y="693" width="0.1171%" height="15" fill="rgb(213,79,30)"/><text x="4.4655%" y="703.50"></text></g><g><title>get_mem_cgroup_from_mm (1 samples, 0.12%)</title><rect x="4.2155%" y="677" width="0.1171%" height="15" fill="rgb(246,177,23)"/><text x="4.4655%" y="687.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (4 samples, 0.47%)</title><rect x="3.9813%" y="901" width="0.4684%" height="15" fill="rgb(230,62,27)"/><text x="4.2313%" y="911.50"></text></g><g><title>decor::Shim::create_schema (4 samples, 0.47%)</title><rect x="3.9813%" y="885" width="0.4684%" height="15" fill="rgb(216,154,8)"/><text x="4.2313%" y="895.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (4 samples, 0.47%)</title><rect x="3.9813%" y="869" width="0.4684%" height="15" fill="rgb(244,35,45)"/><text x="4.2313%" y="879.50"></text></g><g><title>sql_parser::parser::parse_statements (3 samples, 0.35%)</title><rect x="4.0984%" y="853" width="0.3513%" height="15" fill="rgb(251,115,12)"/><text x="4.3484%" y="863.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (2 samples, 0.23%)</title><rect x="4.2155%" y="837" width="0.2342%" height="15" fill="rgb(240,54,50)"/><text x="4.4655%" y="847.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_number (1 samples, 0.12%)</title><rect x="4.3326%" y="821" width="0.1171%" height="15" fill="rgb(233,84,52)"/><text x="4.5826%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="4.3326%" y="805" width="0.1171%" height="15" fill="rgb(207,117,47)"/><text x="4.5826%" y="815.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.12%)</title><rect x="4.3326%" y="789" width="0.1171%" height="15" fill="rgb(249,43,39)"/><text x="4.5826%" y="799.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (1 samples, 0.12%)</title><rect x="4.4496%" y="869" width="0.1171%" height="15" fill="rgb(209,38,44)"/><text x="4.6996%" y="879.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (1 samples, 0.12%)</title><rect x="4.4496%" y="853" width="0.1171%" height="15" fill="rgb(236,212,23)"/><text x="4.6996%" y="863.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (1 samples, 0.12%)</title><rect x="4.4496%" y="837" width="0.1171%" height="15" fill="rgb(242,79,21)"/><text x="4.6996%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.12%)</title><rect x="4.4496%" y="821" width="0.1171%" height="15" fill="rgb(211,96,35)"/><text x="4.6996%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.12%)</title><rect x="4.4496%" y="805" width="0.1171%" height="15" fill="rgb(253,215,40)"/><text x="4.6996%" y="815.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.12%)</title><rect x="4.4496%" y="789" width="0.1171%" height="15" fill="rgb(211,81,21)"/><text x="4.6996%" y="799.50"></text></g><g><title>_int_malloc (1 samples, 0.12%)</title><rect x="4.4496%" y="773" width="0.1171%" height="15" fill="rgb(208,190,38)"/><text x="4.6996%" y="783.50"></text></g><g><title>sysmalloc (1 samples, 0.12%)</title><rect x="4.4496%" y="757" width="0.1171%" height="15" fill="rgb(235,213,38)"/><text x="4.6996%" y="767.50"></text></g><g><title>page_fault (1 samples, 0.12%)</title><rect x="4.4496%" y="741" width="0.1171%" height="15" fill="rgb(237,122,38)"/><text x="4.6996%" y="751.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.12%)</title><rect x="4.4496%" y="725" width="0.1171%" height="15" fill="rgb(244,218,35)"/><text x="4.6996%" y="735.50"></text></g><g><title>handle_mm_fault (1 samples, 0.12%)</title><rect x="4.4496%" y="709" width="0.1171%" height="15" fill="rgb(240,68,47)"/><text x="4.6996%" y="719.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.12%)</title><rect x="4.4496%" y="693" width="0.1171%" height="15" fill="rgb(210,16,53)"/><text x="4.6996%" y="703.50"></text></g><g><title>mem_cgroup_try_charge_delay (1 samples, 0.12%)</title><rect x="4.4496%" y="677" width="0.1171%" height="15" fill="rgb(235,124,12)"/><text x="4.6996%" y="687.50"></text></g><g><title>mem_cgroup_try_charge (1 samples, 0.12%)</title><rect x="4.4496%" y="661" width="0.1171%" height="15" fill="rgb(224,169,11)"/><text x="4.6996%" y="671.50"></text></g><g><title>try_charge (1 samples, 0.12%)</title><rect x="4.4496%" y="645" width="0.1171%" height="15" fill="rgb(250,166,2)"/><text x="4.6996%" y="655.50"></text></g><g><title>page_counter_try_charge (1 samples, 0.12%)</title><rect x="4.4496%" y="629" width="0.1171%" height="15" fill="rgb(242,216,29)"/><text x="4.6996%" y="639.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (2 samples, 0.23%)</title><rect x="4.4496%" y="901" width="0.2342%" height="15" fill="rgb(230,116,27)"/><text x="4.6996%" y="911.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (2 samples, 0.23%)</title><rect x="4.4496%" y="885" width="0.2342%" height="15" fill="rgb(228,99,48)"/><text x="4.6996%" y="895.50"></text></g><g><title>sql_parser::parser::parse_statements (1 samples, 0.12%)</title><rect x="4.5667%" y="869" width="0.1171%" height="15" fill="rgb(253,11,6)"/><text x="4.8167%" y="879.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (1 samples, 0.12%)</title><rect x="4.5667%" y="853" width="0.1171%" height="15" fill="rgb(247,143,39)"/><text x="4.8167%" y="863.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (1 samples, 0.12%)</title><rect x="4.5667%" y="837" width="0.1171%" height="15" fill="rgb(236,97,10)"/><text x="4.8167%" y="847.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (1 samples, 0.12%)</title><rect x="4.5667%" y="821" width="0.1171%" height="15" fill="rgb(233,208,19)"/><text x="4.8167%" y="831.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.12%)</title><rect x="4.5667%" y="805" width="0.1171%" height="15" fill="rgb(216,164,2)"/><text x="4.8167%" y="815.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.23%)</title><rect x="4.6838%" y="901" width="0.2342%" height="15" fill="rgb(220,129,5)"/><text x="4.9338%" y="911.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (1 samples, 0.12%)</title><rect x="4.9180%" y="901" width="0.1171%" height="15" fill="rgb(242,17,10)"/><text x="5.1680%" y="911.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::UpdateStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.12%)</title><rect x="5.0351%" y="901" width="0.1171%" height="15" fill="rgb(242,107,0)"/><text x="5.2851%" y="911.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.23%)</title><rect x="5.1522%" y="901" width="0.2342%" height="15" fill="rgb(251,28,31)"/><text x="5.4022%" y="911.50"></text></g><g><title>__libc_recv (1 samples, 0.12%)</title><rect x="5.3864%" y="901" width="0.1171%" height="15" fill="rgb(233,223,10)"/><text x="5.6364%" y="911.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.12%)</title><rect x="5.3864%" y="885" width="0.1171%" height="15" fill="rgb(215,21,27)"/><text x="5.6364%" y="895.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.12%)</title><rect x="5.5035%" y="741" width="0.1171%" height="15" fill="rgb(232,23,21)"/><text x="5.7535%" y="751.50"></text></g><g><title>hwloc_topology_destroy (1 samples, 0.12%)</title><rect x="5.5035%" y="725" width="0.1171%" height="15" fill="rgb(244,5,23)"/><text x="5.7535%" y="735.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.12%)</title><rect x="5.5035%" y="709" width="0.1171%" height="15" fill="rgb(226,81,46)"/><text x="5.7535%" y="719.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.12%)</title><rect x="5.5035%" y="693" width="0.1171%" height="15" fill="rgb(247,70,30)"/><text x="5.7535%" y="703.50"></text></g><g><title>dlclose (1 samples, 0.12%)</title><rect x="5.5035%" y="677" width="0.1171%" height="15" fill="rgb(212,68,19)"/><text x="5.7535%" y="687.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.12%)</title><rect x="5.5035%" y="661" width="0.1171%" height="15" fill="rgb(240,187,13)"/><text x="5.7535%" y="671.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.12%)</title><rect x="5.5035%" y="645" width="0.1171%" height="15" fill="rgb(223,113,26)"/><text x="5.7535%" y="655.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.12%)</title><rect x="5.5035%" y="629" width="0.1171%" height="15" fill="rgb(206,192,2)"/><text x="5.7535%" y="639.50"></text></g><g><title>_dl_close (1 samples, 0.12%)</title><rect x="5.5035%" y="613" width="0.1171%" height="15" fill="rgb(241,108,4)"/><text x="5.7535%" y="623.50"></text></g><g><title>_dl_close_worker (1 samples, 0.12%)</title><rect x="5.5035%" y="597" width="0.1171%" height="15" fill="rgb(247,173,49)"/><text x="5.7535%" y="607.50"></text></g><g><title>_dl_unmap (1 samples, 0.12%)</title><rect x="5.5035%" y="581" width="0.1171%" height="15" fill="rgb(224,114,35)"/><text x="5.7535%" y="591.50"></text></g><g><title>munmap (1 samples, 0.12%)</title><rect x="5.5035%" y="565" width="0.1171%" height="15" fill="rgb(245,159,27)"/><text x="5.7535%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.12%)</title><rect x="5.5035%" y="549" width="0.1171%" height="15" fill="rgb(245,172,44)"/><text x="5.7535%" y="559.50"></text></g><g><title>do_syscall_64 (1 samples, 0.12%)</title><rect x="5.5035%" y="533" width="0.1171%" height="15" fill="rgb(236,23,11)"/><text x="5.7535%" y="543.50"></text></g><g><title>__x64_sys_munmap (1 samples, 0.12%)</title><rect x="5.5035%" y="517" width="0.1171%" height="15" fill="rgb(205,117,38)"/><text x="5.7535%" y="527.50"></text></g><g><title>__vm_munmap (1 samples, 0.12%)</title><rect x="5.5035%" y="501" width="0.1171%" height="15" fill="rgb(237,72,25)"/><text x="5.7535%" y="511.50"></text></g><g><title>__do_munmap (1 samples, 0.12%)</title><rect x="5.5035%" y="485" width="0.1171%" height="15" fill="rgb(244,70,9)"/><text x="5.7535%" y="495.50"></text></g><g><title>unmap_region (1 samples, 0.12%)</title><rect x="5.5035%" y="469" width="0.1171%" height="15" fill="rgb(217,125,39)"/><text x="5.7535%" y="479.50"></text></g><g><title>unmap_vmas (1 samples, 0.12%)</title><rect x="5.5035%" y="453" width="0.1171%" height="15" fill="rgb(235,36,10)"/><text x="5.7535%" y="463.50"></text></g><g><title>unmap_page_range (1 samples, 0.12%)</title><rect x="5.5035%" y="437" width="0.1171%" height="15" fill="rgb(251,123,47)"/><text x="5.7535%" y="447.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::encode (2 samples, 0.23%)</title><rect x="5.6206%" y="693" width="0.2342%" height="15" fill="rgb(221,13,13)"/><text x="5.8706%" y="703.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::encode (2 samples, 0.23%)</title><rect x="5.6206%" y="677" width="0.2342%" height="15" fill="rgb(238,131,9)"/><text x="5.8706%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.12%)</title><rect x="5.8548%" y="693" width="0.1171%" height="15" fill="rgb(211,50,8)"/><text x="6.1048%" y="703.50"></text></g><g><title>fput_many (2 samples, 0.23%)</title><rect x="6.5574%" y="565" width="0.2342%" height="15" fill="rgb(245,182,24)"/><text x="6.8074%" y="575.50"></text></g><g><title>import_single_range (1 samples, 0.12%)</title><rect x="6.7916%" y="565" width="0.1171%" height="15" fill="rgb(242,14,37)"/><text x="7.0416%" y="575.50"></text></g><g><title>inet_sendmsg (1 samples, 0.12%)</title><rect x="6.9087%" y="549" width="0.1171%" height="15" fill="rgb(246,228,12)"/><text x="7.1587%" y="559.50"></text></g><g><title>_raw_spin_unlock_bh (1 samples, 0.12%)</title><rect x="7.0258%" y="533" width="0.1171%" height="15" fill="rgb(213,55,15)"/><text x="7.2758%" y="543.50"></text></g><g><title>lock_sock_nested (1 samples, 0.12%)</title><rect x="7.1429%" y="533" width="0.1171%" height="15" fill="rgb(209,9,3)"/><text x="7.3929%" y="543.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.12%)</title><rect x="7.1429%" y="517" width="0.1171%" height="15" fill="rgb(230,59,30)"/><text x="7.3929%" y="527.50"></text></g><g><title>preempt_count_add (1 samples, 0.12%)</title><rect x="7.1429%" y="501" width="0.1171%" height="15" fill="rgb(209,121,21)"/><text x="7.3929%" y="511.50"></text></g><g><title>in_lock_functions (1 samples, 0.12%)</title><rect x="7.1429%" y="485" width="0.1171%" height="15" fill="rgb(220,109,13)"/><text x="7.3929%" y="495.50"></text></g><g><title>__ip_local_out (1 samples, 0.12%)</title><rect x="7.6112%" y="453" width="0.1171%" height="15" fill="rgb(232,18,1)"/><text x="7.8612%" y="463.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.12%)</title><rect x="7.7283%" y="453" width="0.1171%" height="15" fill="rgb(215,41,42)"/><text x="7.9783%" y="463.50"></text></g><g><title>__sk_dst_check (1 samples, 0.12%)</title><rect x="7.8454%" y="453" width="0.1171%" height="15" fill="rgb(224,123,36)"/><text x="8.0954%" y="463.50"></text></g><g><title>ipv4_dst_check (1 samples, 0.12%)</title><rect x="7.8454%" y="437" width="0.1171%" height="15" fill="rgb(240,125,3)"/><text x="8.0954%" y="447.50"></text></g><g><title>enqueue_to_backlog (1 samples, 0.12%)</title><rect x="8.5480%" y="341" width="0.1171%" height="15" fill="rgb(205,98,50)"/><text x="8.7980%" y="351.50"></text></g><g><title>__dev_queue_xmit (5 samples, 0.59%)</title><rect x="8.1967%" y="421" width="0.5855%" height="15" fill="rgb(205,185,37)"/><text x="8.4467%" y="431.50"></text></g><g><title>dev_hard_start_xmit (3 samples, 0.35%)</title><rect x="8.4309%" y="405" width="0.3513%" height="15" fill="rgb(238,207,15)"/><text x="8.6809%" y="415.50"></text></g><g><title>loopback_xmit (3 samples, 0.35%)</title><rect x="8.4309%" y="389" width="0.3513%" height="15" fill="rgb(213,199,42)"/><text x="8.6809%" y="399.50"></text></g><g><title>netif_rx (2 samples, 0.23%)</title><rect x="8.5480%" y="373" width="0.2342%" height="15" fill="rgb(235,201,11)"/><text x="8.7980%" y="383.50"></text></g><g><title>netif_rx_internal (2 samples, 0.23%)</title><rect x="8.5480%" y="357" width="0.2342%" height="15" fill="rgb(207,46,11)"/><text x="8.7980%" y="367.50"></text></g><g><title>ktime_get_with_offset (1 samples, 0.12%)</title><rect x="8.6651%" y="341" width="0.1171%" height="15" fill="rgb(241,35,35)"/><text x="8.9151%" y="351.50"></text></g><g><title>read_tsc (1 samples, 0.12%)</title><rect x="8.6651%" y="325" width="0.1171%" height="15" fill="rgb(243,32,47)"/><text x="8.9151%" y="335.50"></text></g><g><title>irqtime_account_irq (1 samples, 0.12%)</title><rect x="8.7822%" y="357" width="0.1171%" height="15" fill="rgb(247,202,23)"/><text x="9.0322%" y="367.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.12%)</title><rect x="8.7822%" y="341" width="0.1171%" height="15" fill="rgb(219,102,11)"/><text x="9.0322%" y="351.50"></text></g><g><title>sched_clock (1 samples, 0.12%)</title><rect x="8.7822%" y="325" width="0.1171%" height="15" fill="rgb(243,110,44)"/><text x="9.0322%" y="335.50"></text></g><g><title>native_sched_clock (1 samples, 0.12%)</title><rect x="8.7822%" y="309" width="0.1171%" height="15" fill="rgb(222,74,54)"/><text x="9.0322%" y="319.50"></text></g><g><title>__netif_receive_skb_core (2 samples, 0.23%)</title><rect x="9.1335%" y="309" width="0.2342%" height="15" fill="rgb(216,99,12)"/><text x="9.3835%" y="319.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.12%)</title><rect x="9.3677%" y="261" width="0.1171%" height="15" fill="rgb(226,22,26)"/><text x="9.6177%" y="271.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.12%)</title><rect x="9.4848%" y="261" width="0.1171%" height="15" fill="rgb(217,163,10)"/><text x="9.7348%" y="271.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.12%)</title><rect x="9.6019%" y="245" width="0.1171%" height="15" fill="rgb(213,25,53)"/><text x="9.8519%" y="255.50"></text></g><g><title>__inet_lookup_established (2 samples, 0.23%)</title><rect x="9.9532%" y="229" width="0.2342%" height="15" fill="rgb(252,105,26)"/><text x="10.2032%" y="239.50"></text></g><g><title>sk_filter_trim_cap (1 samples, 0.12%)</title><rect x="10.1874%" y="229" width="0.1171%" height="15" fill="rgb(220,39,43)"/><text x="10.4374%" y="239.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (1 samples, 0.12%)</title><rect x="10.1874%" y="213" width="0.1171%" height="15" fill="rgb(229,68,48)"/><text x="10.4374%" y="223.50"></text></g><g><title>__tcp_ack_snd_check (1 samples, 0.12%)</title><rect x="10.5386%" y="197" width="0.1171%" height="15" fill="rgb(252,8,32)"/><text x="10.7886%" y="207.50"></text></g><g><title>sk_reset_timer (1 samples, 0.12%)</title><rect x="10.6557%" y="197" width="0.1171%" height="15" fill="rgb(223,20,43)"/><text x="10.9057%" y="207.50"></text></g><g><title>__mod_timer (1 samples, 0.12%)</title><rect x="10.6557%" y="181" width="0.1171%" height="15" fill="rgb(229,81,49)"/><text x="10.9057%" y="191.50"></text></g><g><title>_raw_spin_unlock_irqrestore (1 samples, 0.12%)</title><rect x="10.8899%" y="133" width="0.1171%" height="15" fill="rgb(236,28,36)"/><text x="11.1399%" y="143.50"></text></g><g><title>psi_task_change (9 samples, 1.05%)</title><rect x="11.0070%" y="117" width="1.0539%" height="15" fill="rgb(249,185,26)"/><text x="11.2570%" y="127.50"></text></g><g><title>psi_group_change (7 samples, 0.82%)</title><rect x="11.2412%" y="101" width="0.8197%" height="15" fill="rgb(249,174,33)"/><text x="11.4912%" y="111.50"></text></g><g><title>record_times (3 samples, 0.35%)</title><rect x="11.7096%" y="85" width="0.3513%" height="15" fill="rgb(233,201,37)"/><text x="11.9596%" y="95.50"></text></g><g><title>sched_clock_cpu (2 samples, 0.23%)</title><rect x="11.8267%" y="69" width="0.2342%" height="15" fill="rgb(221,78,26)"/><text x="12.0767%" y="79.50"></text></g><g><title>enqueue_task (11 samples, 1.29%)</title><rect x="11.0070%" y="133" width="1.2881%" height="15" fill="rgb(250,127,30)"/><text x="11.2570%" y="143.50"></text></g><g><title>uclamp_rq_inc_id (2 samples, 0.23%)</title><rect x="12.0609%" y="117" width="0.2342%" height="15" fill="rgb(230,49,44)"/><text x="12.3109%" y="127.50"></text></g><g><title>reweight_entity (1 samples, 0.12%)</title><rect x="12.7635%" y="101" width="0.1171%" height="15" fill="rgb(229,67,23)"/><text x="13.0135%" y="111.50"></text></g><g><title>enqueue_task_fair (7 samples, 0.82%)</title><rect x="12.2951%" y="133" width="0.8197%" height="15" fill="rgb(249,83,47)"/><text x="12.5451%" y="143.50"></text></g><g><title>enqueue_entity (6 samples, 0.70%)</title><rect x="12.4122%" y="117" width="0.7026%" height="15" fill="rgb(215,43,3)"/><text x="12.6622%" y="127.50"></text></g><g><title>update_load_avg (2 samples, 0.23%)</title><rect x="12.8806%" y="101" width="0.2342%" height="15" fill="rgb(238,154,13)"/><text x="13.1306%" y="111.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.12%)</title><rect x="12.9977%" y="85" width="0.1171%" height="15" fill="rgb(219,56,2)"/><text x="13.2477%" y="95.50"></text></g><g><title>ttwu_do_wakeup (3 samples, 0.35%)</title><rect x="13.1148%" y="133" width="0.3513%" height="15" fill="rgb(233,0,4)"/><text x="13.3648%" y="143.50"></text></g><g><title>check_preempt_curr (2 samples, 0.23%)</title><rect x="13.2319%" y="117" width="0.2342%" height="15" fill="rgb(235,30,7)"/><text x="13.4819%" y="127.50"></text></g><g><title>resched_curr (2 samples, 0.23%)</title><rect x="13.2319%" y="101" width="0.2342%" height="15" fill="rgb(250,79,13)"/><text x="13.4819%" y="111.50"></text></g><g><title>__wake_up_common (26 samples, 3.04%)</title><rect x="10.7728%" y="165" width="3.0445%" height="15" fill="rgb(211,146,34)"/><text x="11.0228%" y="175.50">__w..</text></g><g><title>try_to_wake_up (26 samples, 3.04%)</title><rect x="10.7728%" y="149" width="3.0445%" height="15" fill="rgb(228,22,38)"/><text x="11.0228%" y="159.50">try..</text></g><g><title>update_rq_clock (3 samples, 0.35%)</title><rect x="13.4660%" y="133" width="0.3513%" height="15" fill="rgb(235,168,5)"/><text x="13.7160%" y="143.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.12%)</title><rect x="13.7002%" y="117" width="0.1171%" height="15" fill="rgb(221,155,16)"/><text x="13.9502%" y="127.50"></text></g><g><title>sched_clock (1 samples, 0.12%)</title><rect x="13.7002%" y="101" width="0.1171%" height="15" fill="rgb(215,215,53)"/><text x="13.9502%" y="111.50"></text></g><g><title>native_sched_clock (1 samples, 0.12%)</title><rect x="13.7002%" y="85" width="0.1171%" height="15" fill="rgb(223,4,10)"/><text x="13.9502%" y="95.50"></text></g><g><title>sock_def_readable (28 samples, 3.28%)</title><rect x="10.7728%" y="197" width="3.2787%" height="15" fill="rgb(234,103,6)"/><text x="11.0228%" y="207.50">soc..</text></g><g><title>__wake_up_common_lock (28 samples, 3.28%)</title><rect x="10.7728%" y="181" width="3.2787%" height="15" fill="rgb(227,97,0)"/><text x="11.0228%" y="191.50">__w..</text></g><g><title>_raw_spin_lock_irqsave (2 samples, 0.23%)</title><rect x="13.8173%" y="165" width="0.2342%" height="15" fill="rgb(234,150,53)"/><text x="14.0673%" y="175.50"></text></g><g><title>kfree (1 samples, 0.12%)</title><rect x="14.7541%" y="165" width="0.1171%" height="15" fill="rgb(228,201,54)"/><text x="15.0041%" y="175.50"></text></g><g><title>__kfree_skb (5 samples, 0.59%)</title><rect x="14.7541%" y="181" width="0.5855%" height="15" fill="rgb(222,22,37)"/><text x="15.0041%" y="191.50"></text></g><g><title>skb_release_data (4 samples, 0.47%)</title><rect x="14.8712%" y="165" width="0.4684%" height="15" fill="rgb(237,53,32)"/><text x="15.1212%" y="175.50"></text></g><g><title>kmem_cache_free (2 samples, 0.23%)</title><rect x="15.3396%" y="181" width="0.2342%" height="15" fill="rgb(233,25,53)"/><text x="15.5896%" y="191.50"></text></g><g><title>__slab_free (2 samples, 0.23%)</title><rect x="15.3396%" y="165" width="0.2342%" height="15" fill="rgb(210,40,34)"/><text x="15.5896%" y="175.50"></text></g><g><title>tcp_ack_update_rtt (1 samples, 0.12%)</title><rect x="15.5738%" y="181" width="0.1171%" height="15" fill="rgb(241,220,44)"/><text x="15.8238%" y="191.50"></text></g><g><title>tcp_newly_delivered (1 samples, 0.12%)</title><rect x="15.6909%" y="181" width="0.1171%" height="15" fill="rgb(235,28,35)"/><text x="15.9409%" y="191.50"></text></g><g><title>tcp_rack_update_reo_wnd (2 samples, 0.23%)</title><rect x="15.8080%" y="181" width="0.2342%" height="15" fill="rgb(210,56,17)"/><text x="16.0580%" y="191.50"></text></g><g><title>tcp_rate_gen (1 samples, 0.12%)</title><rect x="16.0422%" y="181" width="0.1171%" height="15" fill="rgb(224,130,29)"/><text x="16.2922%" y="191.50"></text></g><g><title>tcp_rearm_rto (1 samples, 0.12%)</title><rect x="16.1593%" y="181" width="0.1171%" height="15" fill="rgb(235,212,8)"/><text x="16.4093%" y="191.50"></text></g><g><title>tcp_schedule_loss_probe (1 samples, 0.12%)</title><rect x="16.2763%" y="181" width="0.1171%" height="15" fill="rgb(223,33,50)"/><text x="16.5263%" y="191.50"></text></g><g><title>tcp_ack (21 samples, 2.46%)</title><rect x="14.0515%" y="197" width="2.4590%" height="15" fill="rgb(219,149,13)"/><text x="14.3015%" y="207.50">tc..</text></g><g><title>tcp_schedule_loss_probe.part.0 (1 samples, 0.12%)</title><rect x="16.3934%" y="181" width="0.1171%" height="15" fill="rgb(250,156,29)"/><text x="16.6434%" y="191.50"></text></g><g><title>ip_local_deliver (62 samples, 7.26%)</title><rect x="9.3677%" y="293" width="7.2600%" height="15" fill="rgb(216,193,19)"/><text x="9.6177%" y="303.50">ip_local_d..</text></g><g><title>ip_local_deliver_finish (62 samples, 7.26%)</title><rect x="9.3677%" y="277" width="7.2600%" height="15" fill="rgb(216,135,14)"/><text x="9.6177%" y="287.50">ip_local_d..</text></g><g><title>ip_protocol_deliver_rcu (60 samples, 7.03%)</title><rect x="9.6019%" y="261" width="7.0258%" height="15" fill="rgb(241,47,5)"/><text x="9.8519%" y="271.50">ip_protoc..</text></g><g><title>tcp_v4_rcv (59 samples, 6.91%)</title><rect x="9.7190%" y="245" width="6.9087%" height="15" fill="rgb(233,42,35)"/><text x="9.9690%" y="255.50">tcp_v4_rcv</text></g><g><title>tcp_v4_do_rcv (54 samples, 6.32%)</title><rect x="10.3044%" y="229" width="6.3232%" height="15" fill="rgb(231,13,6)"/><text x="10.5544%" y="239.50">tcp_v4_d..</text></g><g><title>tcp_rcv_established (54 samples, 6.32%)</title><rect x="10.3044%" y="213" width="6.3232%" height="15" fill="rgb(207,181,40)"/><text x="10.5544%" y="223.50">tcp_rcv_..</text></g><g><title>tcp_check_space (1 samples, 0.12%)</title><rect x="16.5105%" y="197" width="0.1171%" height="15" fill="rgb(254,173,49)"/><text x="16.7605%" y="207.50"></text></g><g><title>ip_rcv_core (1 samples, 0.12%)</title><rect x="16.6276%" y="293" width="0.1171%" height="15" fill="rgb(221,1,38)"/><text x="16.8776%" y="303.50"></text></g><g><title>__netif_receive_skb_one_core (69 samples, 8.08%)</title><rect x="9.0164%" y="325" width="8.0796%" height="15" fill="rgb(206,124,46)"/><text x="9.2664%" y="335.50">__netif_rec..</text></g><g><title>ip_rcv (66 samples, 7.73%)</title><rect x="9.3677%" y="309" width="7.7283%" height="15" fill="rgb(249,21,11)"/><text x="9.6177%" y="319.50">ip_rcv</text></g><g><title>ip_rcv_finish (3 samples, 0.35%)</title><rect x="16.7447%" y="293" width="0.3513%" height="15" fill="rgb(222,201,40)"/><text x="16.9947%" y="303.50"></text></g><g><title>ip_rcv_finish_core.constprop.0 (3 samples, 0.35%)</title><rect x="16.7447%" y="277" width="0.3513%" height="15" fill="rgb(235,61,29)"/><text x="16.9947%" y="287.50"></text></g><g><title>ip_finish_output2 (79 samples, 9.25%)</title><rect x="7.9625%" y="437" width="9.2506%" height="15" fill="rgb(219,207,3)"/><text x="8.2125%" y="447.50">ip_finish_out..</text></g><g><title>__local_bh_enable_ip (72 samples, 8.43%)</title><rect x="8.7822%" y="421" width="8.4309%" height="15" fill="rgb(222,56,46)"/><text x="9.0322%" y="431.50">__local_bh_e..</text></g><g><title>do_softirq (72 samples, 8.43%)</title><rect x="8.7822%" y="405" width="8.4309%" height="15" fill="rgb(239,76,54)"/><text x="9.0322%" y="415.50">do_softirq</text></g><g><title>do_softirq_own_stack (72 samples, 8.43%)</title><rect x="8.7822%" y="389" width="8.4309%" height="15" fill="rgb(231,124,27)"/><text x="9.0322%" y="399.50">do_softirq_o..</text></g><g><title>__do_softirq (72 samples, 8.43%)</title><rect x="8.7822%" y="373" width="8.4309%" height="15" fill="rgb(249,195,6)"/><text x="9.0322%" y="383.50">__do_softirq</text></g><g><title>net_rx_action (71 samples, 8.31%)</title><rect x="8.8993%" y="357" width="8.3138%" height="15" fill="rgb(237,174,47)"/><text x="9.1493%" y="367.50">net_rx_action</text></g><g><title>process_backlog (71 samples, 8.31%)</title><rect x="8.8993%" y="341" width="8.3138%" height="15" fill="rgb(206,201,31)"/><text x="9.1493%" y="351.50">process_back..</text></g><g><title>_raw_spin_unlock (1 samples, 0.12%)</title><rect x="17.0960%" y="325" width="0.1171%" height="15" fill="rgb(231,57,52)"/><text x="17.3460%" y="335.50"></text></g><g><title>preempt_count_sub (1 samples, 0.12%)</title><rect x="17.0960%" y="309" width="0.1171%" height="15" fill="rgb(248,177,22)"/><text x="17.3460%" y="319.50"></text></g><g><title>__ip_queue_xmit (83 samples, 9.72%)</title><rect x="7.6112%" y="469" width="9.7190%" height="15" fill="rgb(215,211,37)"/><text x="7.8612%" y="479.50">__ip_queue_xmit</text></g><g><title>ip_output (80 samples, 9.37%)</title><rect x="7.9625%" y="453" width="9.3677%" height="15" fill="rgb(241,128,51)"/><text x="8.2125%" y="463.50">ip_output</text></g><g><title>ip_finish_output (1 samples, 0.12%)</title><rect x="17.2131%" y="437" width="0.1171%" height="15" fill="rgb(227,165,31)"/><text x="17.4631%" y="447.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (1 samples, 0.12%)</title><rect x="17.2131%" y="421" width="0.1171%" height="15" fill="rgb(228,167,24)"/><text x="17.4631%" y="431.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.12%)</title><rect x="17.2131%" y="405" width="0.1171%" height="15" fill="rgb(228,143,12)"/><text x="17.4631%" y="415.50"></text></g><g><title>__tcp_transmit_skb (85 samples, 9.95%)</title><rect x="7.6112%" y="485" width="9.9532%" height="15" fill="rgb(249,149,8)"/><text x="7.8612%" y="495.50">__tcp_transmit..</text></g><g><title>skb_clone (2 samples, 0.23%)</title><rect x="17.3302%" y="469" width="0.2342%" height="15" fill="rgb(243,35,44)"/><text x="17.5802%" y="479.50"></text></g><g><title>__copy_skb_header (1 samples, 0.12%)</title><rect x="17.4473%" y="453" width="0.1171%" height="15" fill="rgb(246,89,9)"/><text x="17.6973%" y="463.50"></text></g><g><title>__tcp_push_pending_frames (88 samples, 10.30%)</title><rect x="7.3770%" y="517" width="10.3044%" height="15" fill="rgb(233,213,13)"/><text x="7.6270%" y="527.50">__tcp_push_pend..</text></g><g><title>tcp_write_xmit (88 samples, 10.30%)</title><rect x="7.3770%" y="501" width="10.3044%" height="15" fill="rgb(233,141,41)"/><text x="7.6270%" y="511.50">tcp_write_xmit</text></g><g><title>tcp_schedule_loss_probe.part.0 (1 samples, 0.12%)</title><rect x="17.5644%" y="485" width="0.1171%" height="15" fill="rgb(239,167,4)"/><text x="17.8144%" y="495.50"></text></g><g><title>sk_reset_timer (1 samples, 0.12%)</title><rect x="17.5644%" y="469" width="0.1171%" height="15" fill="rgb(209,217,16)"/><text x="17.8144%" y="479.50"></text></g><g><title>__slab_alloc.constprop.0 (1 samples, 0.12%)</title><rect x="18.0328%" y="469" width="0.1171%" height="15" fill="rgb(219,88,35)"/><text x="18.2828%" y="479.50"></text></g><g><title>___slab_alloc (1 samples, 0.12%)</title><rect x="18.0328%" y="453" width="0.1171%" height="15" fill="rgb(220,193,23)"/><text x="18.2828%" y="463.50"></text></g><g><title>sk_stream_alloc_skb (5 samples, 0.59%)</title><rect x="17.6815%" y="517" width="0.5855%" height="15" fill="rgb(230,90,52)"/><text x="17.9315%" y="527.50"></text></g><g><title>__alloc_skb (5 samples, 0.59%)</title><rect x="17.6815%" y="501" width="0.5855%" height="15" fill="rgb(252,106,19)"/><text x="17.9315%" y="511.50"></text></g><g><title>__kmalloc_node_track_caller (4 samples, 0.47%)</title><rect x="17.7986%" y="485" width="0.4684%" height="15" fill="rgb(206,74,20)"/><text x="18.0486%" y="495.50"></text></g><g><title>should_failslab (1 samples, 0.12%)</title><rect x="18.1499%" y="469" width="0.1171%" height="15" fill="rgb(230,138,44)"/><text x="18.3999%" y="479.50"></text></g><g><title>skb_do_copy_data_nocache (1 samples, 0.12%)</title><rect x="18.2670%" y="517" width="0.1171%" height="15" fill="rgb(235,182,43)"/><text x="18.5170%" y="527.50"></text></g><g><title>_copy_from_iter_full (1 samples, 0.12%)</title><rect x="18.2670%" y="501" width="0.1171%" height="15" fill="rgb(242,16,51)"/><text x="18.5170%" y="511.50"></text></g><g><title>iov_iter_advance (1 samples, 0.12%)</title><rect x="18.2670%" y="485" width="0.1171%" height="15" fill="rgb(248,9,4)"/><text x="18.5170%" y="495.50"></text></g><g><title>skb_entail (1 samples, 0.12%)</title><rect x="18.3841%" y="517" width="0.1171%" height="15" fill="rgb(210,31,22)"/><text x="18.6341%" y="527.50"></text></g><g><title>tcp_push (1 samples, 0.12%)</title><rect x="18.5012%" y="517" width="0.1171%" height="15" fill="rgb(239,54,39)"/><text x="18.7512%" y="527.50"></text></g><g><title>ipv4_mtu (2 samples, 0.23%)</title><rect x="18.7354%" y="485" width="0.2342%" height="15" fill="rgb(230,99,41)"/><text x="18.9854%" y="495.50"></text></g><g><title>sock_sendmsg (104 samples, 12.18%)</title><rect x="6.9087%" y="565" width="12.1780%" height="15" fill="rgb(253,106,12)"/><text x="7.1587%" y="575.50">sock_sendmsg</text></g><g><title>tcp_sendmsg (103 samples, 12.06%)</title><rect x="7.0258%" y="549" width="12.0609%" height="15" fill="rgb(213,46,41)"/><text x="7.2758%" y="559.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (101 samples, 11.83%)</title><rect x="7.2600%" y="533" width="11.8267%" height="15" fill="rgb(215,133,35)"/><text x="7.5100%" y="543.50">tcp_sendmsg_locked</text></g><g><title>tcp_send_mss (4 samples, 0.47%)</title><rect x="18.6183%" y="517" width="0.4684%" height="15" fill="rgb(213,28,5)"/><text x="18.8683%" y="527.50"></text></g><g><title>tcp_current_mss (4 samples, 0.47%)</title><rect x="18.6183%" y="501" width="0.4684%" height="15" fill="rgb(215,77,49)"/><text x="18.8683%" y="511.50"></text></g><g><title>tcp_established_options (1 samples, 0.12%)</title><rect x="18.9696%" y="485" width="0.1171%" height="15" fill="rgb(248,100,22)"/><text x="19.2196%" y="495.50"></text></g><g><title>__x64_sys_sendto (115 samples, 13.47%)</title><rect x="6.2061%" y="597" width="13.4660%" height="15" fill="rgb(208,67,9)"/><text x="6.4561%" y="607.50">__x64_sys_sendto</text></g><g><title>__sys_sendto (114 samples, 13.35%)</title><rect x="6.3232%" y="581" width="13.3489%" height="15" fill="rgb(219,133,21)"/><text x="6.5732%" y="591.50">__sys_sendto</text></g><g><title>sockfd_lookup_light (5 samples, 0.59%)</title><rect x="19.0867%" y="565" width="0.5855%" height="15" fill="rgb(246,46,29)"/><text x="19.3367%" y="575.50"></text></g><g><title>__fget_light (3 samples, 0.35%)</title><rect x="19.3208%" y="549" width="0.3513%" height="15" fill="rgb(246,185,52)"/><text x="19.5708%" y="559.50"></text></g><g><title>kfree (1 samples, 0.12%)</title><rect x="19.9063%" y="565" width="0.1171%" height="15" fill="rgb(252,136,11)"/><text x="20.1563%" y="575.50"></text></g><g><title>do_syscall_64 (119 samples, 13.93%)</title><rect x="6.2061%" y="613" width="13.9344%" height="15" fill="rgb(219,138,53)"/><text x="6.4561%" y="623.50">do_syscall_64</text></g><g><title>syscall_slow_exit_work (4 samples, 0.47%)</title><rect x="19.6721%" y="597" width="0.4684%" height="15" fill="rgb(211,51,23)"/><text x="19.9221%" y="607.50"></text></g><g><title>__audit_syscall_exit (4 samples, 0.47%)</title><rect x="19.6721%" y="581" width="0.4684%" height="15" fill="rgb(247,221,28)"/><text x="19.9221%" y="591.50"></text></g><g><title>path_put (1 samples, 0.12%)</title><rect x="20.0234%" y="565" width="0.1171%" height="15" fill="rgb(251,222,45)"/><text x="20.2734%" y="575.50"></text></g><g><title>dput (1 samples, 0.12%)</title><rect x="20.0234%" y="549" width="0.1171%" height="15" fill="rgb(217,162,53)"/><text x="20.2734%" y="559.50"></text></g><g><title>__libc_start_main (135 samples, 15.81%)</title><rect x="5.5035%" y="901" width="15.8080%" height="15" fill="rgb(229,93,14)"/><text x="5.7535%" y="911.50">__libc_start_main</text></g><g><title>main (135 samples, 15.81%)</title><rect x="5.5035%" y="885" width="15.8080%" height="15" fill="rgb(209,67,49)"/><text x="5.7535%" y="895.50">main</text></g><g><title>std::rt::lang_start_internal (135 samples, 15.81%)</title><rect x="5.5035%" y="869" width="15.8080%" height="15" fill="rgb(213,87,29)"/><text x="5.7535%" y="879.50">std::rt::lang_start_inte..</text></g><g><title>std::panic::catch_unwind (135 samples, 15.81%)</title><rect x="5.5035%" y="853" width="15.8080%" height="15" fill="rgb(205,151,52)"/><text x="5.7535%" y="863.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (135 samples, 15.81%)</title><rect x="5.5035%" y="837" width="15.8080%" height="15" fill="rgb(253,215,39)"/><text x="5.7535%" y="847.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (135 samples, 15.81%)</title><rect x="5.5035%" y="821" width="15.8080%" height="15" fill="rgb(221,220,41)"/><text x="5.7535%" y="831.50">std::panicking::try::do_..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (135 samples, 15.81%)</title><rect x="5.5035%" y="805" width="15.8080%" height="15" fill="rgb(218,133,21)"/><text x="5.7535%" y="815.50">core::ops::function::imp..</text></g><g><title>std::rt::lang_start::_{{closure}} (135 samples, 15.81%)</title><rect x="5.5035%" y="789" width="15.8080%" height="15" fill="rgb(221,193,43)"/><text x="5.7535%" y="799.50">std::rt::lang_start::_{{..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (135 samples, 15.81%)</title><rect x="5.5035%" y="773" width="15.8080%" height="15" fill="rgb(240,128,52)"/><text x="5.7535%" y="783.50">std::sys_common::backtra..</text></g><g><title>lobsters::main (135 samples, 15.81%)</title><rect x="5.5035%" y="757" width="15.8080%" height="15" fill="rgb(253,114,12)"/><text x="5.7535%" y="767.50">lobsters::main</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (134 samples, 15.69%)</title><rect x="5.6206%" y="741" width="15.6909%" height="15" fill="rgb(215,223,47)"/><text x="5.8706%" y="751.50">mysql::conn::queryable::..</text></g><g><title>mysql::conn::Conn::_query (134 samples, 15.69%)</title><rect x="5.6206%" y="725" width="15.6909%" height="15" fill="rgb(248,225,23)"/><text x="5.8706%" y="735.50">mysql::conn::Conn::_query</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (134 samples, 15.69%)</title><rect x="5.6206%" y="709" width="15.6909%" height="15" fill="rgb(250,108,0)"/><text x="5.8706%" y="719.50">mysql_common::proto::syn..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (131 samples, 15.34%)</title><rect x="5.9719%" y="693" width="15.3396%" height="15" fill="rgb(228,208,7)"/><text x="6.2219%" y="703.50">std::io::buffered::BufW..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (131 samples, 15.34%)</title><rect x="5.9719%" y="677" width="15.3396%" height="15" fill="rgb(244,45,10)"/><text x="6.2219%" y="687.50">&lt;std::net::tcp::TcpStre..</text></g><g><title>std::sys_common::net::TcpStream::write (131 samples, 15.34%)</title><rect x="5.9719%" y="661" width="15.3396%" height="15" fill="rgb(207,125,25)"/><text x="6.2219%" y="671.50">std::sys_common::net::T..</text></g><g><title>__libc_send (131 samples, 15.34%)</title><rect x="5.9719%" y="645" width="15.3396%" height="15" fill="rgb(210,195,18)"/><text x="6.2219%" y="655.50">__libc_send</text></g><g><title>entry_SYSCALL_64 (130 samples, 15.22%)</title><rect x="6.0890%" y="629" width="15.2225%" height="15" fill="rgb(249,80,12)"/><text x="6.3390%" y="639.50">entry_SYSCALL_64</text></g><g><title>prepare_exit_to_usermode (10 samples, 1.17%)</title><rect x="20.1405%" y="613" width="1.1710%" height="15" fill="rgb(221,65,9)"/><text x="20.3905%" y="623.50"></text></g><g><title>__rdl_alloc (3 samples, 0.35%)</title><rect x="21.3115%" y="901" width="0.3513%" height="15" fill="rgb(235,49,36)"/><text x="21.5615%" y="911.50"></text></g><g><title>_int_free (2 samples, 0.23%)</title><rect x="21.6628%" y="901" width="0.2342%" height="15" fill="rgb(225,32,20)"/><text x="21.9128%" y="911.50"></text></g><g><title>alloc::string::String::push (2 samples, 0.23%)</title><rect x="21.8970%" y="901" width="0.2342%" height="15" fill="rgb(215,141,46)"/><text x="22.1470%" y="911.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.12%)</title><rect x="22.1311%" y="901" width="0.1171%" height="15" fill="rgb(250,160,47)"/><text x="22.3811%" y="911.50"></text></g><g><title>core::fmt::write (1 samples, 0.12%)</title><rect x="22.2482%" y="901" width="0.1171%" height="15" fill="rgb(216,222,40)"/><text x="22.4982%" y="911.50"></text></g><g><title>__kfree_skb (1 samples, 0.12%)</title><rect x="22.7166%" y="549" width="0.1171%" height="15" fill="rgb(234,217,39)"/><text x="22.9666%" y="559.50"></text></g><g><title>skb_release_head_state (1 samples, 0.12%)</title><rect x="22.7166%" y="533" width="0.1171%" height="15" fill="rgb(207,178,40)"/><text x="22.9666%" y="543.50"></text></g><g><title>dst_release (1 samples, 0.12%)</title><rect x="22.7166%" y="517" width="0.1171%" height="15" fill="rgb(221,136,13)"/><text x="22.9666%" y="527.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.12%)</title><rect x="22.8337%" y="549" width="0.1171%" height="15" fill="rgb(249,199,10)"/><text x="23.0837%" y="559.50"></text></g><g><title>__local_bh_enable_ip (2 samples, 0.23%)</title><rect x="23.0679%" y="533" width="0.2342%" height="15" fill="rgb(249,222,13)"/><text x="23.3179%" y="543.50"></text></g><g><title>preempt_count_sub (2 samples, 0.23%)</title><rect x="23.0679%" y="517" width="0.2342%" height="15" fill="rgb(244,185,38)"/><text x="23.3179%" y="527.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.12%)</title><rect x="23.3021%" y="533" width="0.1171%" height="15" fill="rgb(236,202,9)"/><text x="23.5521%" y="543.50"></text></g><g><title>release_sock (1 samples, 0.12%)</title><rect x="23.4192%" y="533" width="0.1171%" height="15" fill="rgb(250,229,37)"/><text x="23.6692%" y="543.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.12%)</title><rect x="23.4192%" y="517" width="0.1171%" height="15" fill="rgb(206,174,23)"/><text x="23.6692%" y="527.50"></text></g><g><title>preempt_count_add (1 samples, 0.12%)</title><rect x="23.4192%" y="501" width="0.1171%" height="15" fill="rgb(211,33,43)"/><text x="23.6692%" y="511.50"></text></g><g><title>in_lock_functions (1 samples, 0.12%)</title><rect x="23.4192%" y="485" width="0.1171%" height="15" fill="rgb(245,58,50)"/><text x="23.6692%" y="495.50"></text></g><g><title>remove_wait_queue (1 samples, 0.12%)</title><rect x="23.5363%" y="533" width="0.1171%" height="15" fill="rgb(244,68,36)"/><text x="23.7863%" y="543.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.12%)</title><rect x="23.5363%" y="517" width="0.1171%" height="15" fill="rgb(232,229,15)"/><text x="23.7863%" y="527.50"></text></g><g><title>__perf_event_task_sched_out (3 samples, 0.35%)</title><rect x="24.0047%" y="469" width="0.3513%" height="15" fill="rgb(254,30,23)"/><text x="24.2547%" y="479.50"></text></g><g><title>ctx_sched_out (3 samples, 0.35%)</title><rect x="24.0047%" y="453" width="0.3513%" height="15" fill="rgb(235,160,14)"/><text x="24.2547%" y="463.50"></text></g><g><title>x86_pmu_disable (2 samples, 0.23%)</title><rect x="24.1218%" y="437" width="0.2342%" height="15" fill="rgb(212,155,44)"/><text x="24.3718%" y="447.50"></text></g><g><title>__calc_delta (2 samples, 0.23%)</title><rect x="24.5902%" y="421" width="0.2342%" height="15" fill="rgb(226,2,50)"/><text x="24.8402%" y="431.50"></text></g><g><title>__cgroup_account_cputime (1 samples, 0.12%)</title><rect x="24.8244%" y="421" width="0.1171%" height="15" fill="rgb(234,177,6)"/><text x="25.0744%" y="431.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.12%)</title><rect x="24.8244%" y="405" width="0.1171%" height="15" fill="rgb(217,24,9)"/><text x="25.0744%" y="415.50"></text></g><g><title>update_curr (4 samples, 0.47%)</title><rect x="24.5902%" y="437" width="0.4684%" height="15" fill="rgb(220,13,46)"/><text x="24.8402%" y="447.50"></text></g><g><title>cpuacct_charge (1 samples, 0.12%)</title><rect x="24.9415%" y="421" width="0.1171%" height="15" fill="rgb(239,221,27)"/><text x="25.1915%" y="431.50"></text></g><g><title>dequeue_task_fair (7 samples, 0.82%)</title><rect x="24.3560%" y="469" width="0.8197%" height="15" fill="rgb(222,198,25)"/><text x="24.6060%" y="479.50"></text></g><g><title>dequeue_entity (5 samples, 0.59%)</title><rect x="24.5902%" y="453" width="0.5855%" height="15" fill="rgb(211,99,13)"/><text x="24.8402%" y="463.50"></text></g><g><title>update_load_avg (1 samples, 0.12%)</title><rect x="25.0585%" y="437" width="0.1171%" height="15" fill="rgb(232,111,31)"/><text x="25.3085%" y="447.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.12%)</title><rect x="25.0585%" y="421" width="0.1171%" height="15" fill="rgb(245,82,37)"/><text x="25.3085%" y="431.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (1 samples, 0.12%)</title><rect x="25.2927%" y="437" width="0.1171%" height="15" fill="rgb(227,149,46)"/><text x="25.5427%" y="447.50"></text></g><g><title>native_write_msr (1 samples, 0.12%)</title><rect x="25.2927%" y="421" width="0.1171%" height="15" fill="rgb(218,36,50)"/><text x="25.5427%" y="431.50"></text></g><g><title>finish_task_switch (3 samples, 0.35%)</title><rect x="25.1756%" y="469" width="0.3513%" height="15" fill="rgb(226,80,48)"/><text x="25.4256%" y="479.50"></text></g><g><title>__perf_event_task_sched_in (3 samples, 0.35%)</title><rect x="25.1756%" y="453" width="0.3513%" height="15" fill="rgb(238,224,15)"/><text x="25.4256%" y="463.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.12%)</title><rect x="25.4098%" y="437" width="0.1171%" height="15" fill="rgb(241,136,10)"/><text x="25.6598%" y="447.50"></text></g><g><title>preempt_count_sub (1 samples, 0.12%)</title><rect x="25.4098%" y="421" width="0.1171%" height="15" fill="rgb(208,32,45)"/><text x="25.6598%" y="431.50"></text></g><g><title>pick_next_task_fair (2 samples, 0.23%)</title><rect x="25.5269%" y="469" width="0.2342%" height="15" fill="rgb(207,135,9)"/><text x="25.7769%" y="479.50"></text></g><g><title>newidle_balance (1 samples, 0.12%)</title><rect x="25.6440%" y="453" width="0.1171%" height="15" fill="rgb(206,86,44)"/><text x="25.8940%" y="463.50"></text></g><g><title>pick_next_task_idle (1 samples, 0.12%)</title><rect x="25.7611%" y="469" width="0.1171%" height="15" fill="rgb(245,177,15)"/><text x="26.0111%" y="479.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.12%)</title><rect x="25.7611%" y="453" width="0.1171%" height="15" fill="rgb(206,64,50)"/><text x="26.0111%" y="463.50"></text></g><g><title>put_prev_task_fair (2 samples, 0.23%)</title><rect x="25.8782%" y="469" width="0.2342%" height="15" fill="rgb(234,36,40)"/><text x="26.1282%" y="479.50"></text></g><g><title>rcu_note_context_switch (1 samples, 0.12%)</title><rect x="26.1124%" y="469" width="0.1171%" height="15" fill="rgb(213,64,8)"/><text x="26.3624%" y="479.50"></text></g><g><title>uclamp_rq_dec_id (2 samples, 0.23%)</title><rect x="26.2295%" y="469" width="0.2342%" height="15" fill="rgb(210,75,36)"/><text x="26.4795%" y="479.50"></text></g><g><title>sk_wait_data (33 samples, 3.86%)</title><rect x="22.9508%" y="549" width="3.8642%" height="15" fill="rgb(229,88,21)"/><text x="23.2008%" y="559.50">sk_w..</text></g><g><title>wait_woken (27 samples, 3.16%)</title><rect x="23.6534%" y="533" width="3.1616%" height="15" fill="rgb(252,204,47)"/><text x="23.9034%" y="543.50">wai..</text></g><g><title>schedule_timeout (26 samples, 3.04%)</title><rect x="23.7705%" y="517" width="3.0445%" height="15" fill="rgb(208,77,27)"/><text x="24.0205%" y="527.50">sch..</text></g><g><title>schedule (26 samples, 3.04%)</title><rect x="23.7705%" y="501" width="3.0445%" height="15" fill="rgb(221,76,26)"/><text x="24.0205%" y="511.50">sch..</text></g><g><title>__schedule (26 samples, 3.04%)</title><rect x="23.7705%" y="485" width="3.0445%" height="15" fill="rgb(225,139,18)"/><text x="24.0205%" y="495.50">__s..</text></g><g><title>update_rq_clock (3 samples, 0.35%)</title><rect x="26.4637%" y="469" width="0.3513%" height="15" fill="rgb(230,137,11)"/><text x="26.7137%" y="479.50"></text></g><g><title>sched_clock_cpu (2 samples, 0.23%)</title><rect x="26.5808%" y="453" width="0.2342%" height="15" fill="rgb(212,28,1)"/><text x="26.8308%" y="463.50"></text></g><g><title>sched_clock (2 samples, 0.23%)</title><rect x="26.5808%" y="437" width="0.2342%" height="15" fill="rgb(248,164,17)"/><text x="26.8308%" y="447.50"></text></g><g><title>native_sched_clock (2 samples, 0.23%)</title><rect x="26.5808%" y="421" width="0.2342%" height="15" fill="rgb(222,171,42)"/><text x="26.8308%" y="431.50"></text></g><g><title>inet_recvmsg (41 samples, 4.80%)</title><rect x="22.4824%" y="581" width="4.8009%" height="15" fill="rgb(243,84,45)"/><text x="22.7324%" y="591.50">inet_r..</text></g><g><title>tcp_recvmsg (41 samples, 4.80%)</title><rect x="22.4824%" y="565" width="4.8009%" height="15" fill="rgb(252,49,23)"/><text x="22.7324%" y="575.50">tcp_re..</text></g><g><title>skb_copy_datagram_iter (4 samples, 0.47%)</title><rect x="26.8150%" y="549" width="0.4684%" height="15" fill="rgb(215,19,7)"/><text x="27.0650%" y="559.50"></text></g><g><title>__skb_datagram_iter (4 samples, 0.47%)</title><rect x="26.8150%" y="533" width="0.4684%" height="15" fill="rgb(238,81,41)"/><text x="27.0650%" y="543.50"></text></g><g><title>_copy_to_iter (1 samples, 0.12%)</title><rect x="27.1663%" y="517" width="0.1171%" height="15" fill="rgb(210,199,37)"/><text x="27.4163%" y="527.50"></text></g><g><title>__x64_sys_recvfrom (43 samples, 5.04%)</title><rect x="22.3653%" y="613" width="5.0351%" height="15" fill="rgb(244,192,49)"/><text x="22.6153%" y="623.50">__x64_..</text></g><g><title>__sys_recvfrom (43 samples, 5.04%)</title><rect x="22.3653%" y="597" width="5.0351%" height="15" fill="rgb(226,211,11)"/><text x="22.6153%" y="607.50">__sys_..</text></g><g><title>sock_recvmsg (1 samples, 0.12%)</title><rect x="27.2834%" y="581" width="0.1171%" height="15" fill="rgb(236,162,54)"/><text x="27.5334%" y="591.50"></text></g><g><title>do_syscall_64 (44 samples, 5.15%)</title><rect x="22.3653%" y="629" width="5.1522%" height="15" fill="rgb(220,229,9)"/><text x="22.6153%" y="639.50">do_sys..</text></g><g><title>syscall_slow_exit_work (1 samples, 0.12%)</title><rect x="27.4005%" y="613" width="0.1171%" height="15" fill="rgb(250,87,22)"/><text x="27.6505%" y="623.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.12%)</title><rect x="27.4005%" y="597" width="0.1171%" height="15" fill="rgb(239,43,17)"/><text x="27.6505%" y="607.50"></text></g><g><title>unroll_tree_refs (1 samples, 0.12%)</title><rect x="27.4005%" y="581" width="0.1171%" height="15" fill="rgb(231,177,25)"/><text x="27.6505%" y="591.50"></text></g><g><title>entry_SYSCALL_64 (46 samples, 5.39%)</title><rect x="22.3653%" y="645" width="5.3864%" height="15" fill="rgb(219,179,1)"/><text x="22.6153%" y="655.50">entry_S..</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.23%)</title><rect x="27.5176%" y="629" width="0.2342%" height="15" fill="rgb(238,219,53)"/><text x="27.7676%" y="639.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (47 samples, 5.50%)</title><rect x="22.3653%" y="901" width="5.5035%" height="15" fill="rgb(232,167,36)"/><text x="22.6153%" y="911.50">core::o..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (47 samples, 5.50%)</title><rect x="22.3653%" y="885" width="5.5035%" height="15" fill="rgb(244,19,51)"/><text x="22.6153%" y="895.50">std::sy..</text></g><g><title>decor::Shim::run_on_tcp (47 samples, 5.50%)</title><rect x="22.3653%" y="869" width="5.5035%" height="15" fill="rgb(224,6,22)"/><text x="22.6153%" y="879.50">decor::..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (47 samples, 5.50%)</title><rect x="22.3653%" y="853" width="5.5035%" height="15" fill="rgb(224,145,5)"/><text x="22.6153%" y="863.50">msql_sr..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (47 samples, 5.50%)</title><rect x="22.3653%" y="837" width="5.5035%" height="15" fill="rgb(234,130,49)"/><text x="22.6153%" y="847.50">&lt;decor:..</text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (47 samples, 5.50%)</title><rect x="22.3653%" y="821" width="5.5035%" height="15" fill="rgb(254,6,2)"/><text x="22.6153%" y="831.50">&lt;mysql:..</text></g><g><title>mysql::conn::Conn::_query (47 samples, 5.50%)</title><rect x="22.3653%" y="805" width="5.5035%" height="15" fill="rgb(208,96,46)"/><text x="22.6153%" y="815.50">mysql::..</text></g><g><title>mysql::conn::Conn::handle_result_set (47 samples, 5.50%)</title><rect x="22.3653%" y="789" width="5.5035%" height="15" fill="rgb(239,3,39)"/><text x="22.6153%" y="799.50">mysql::..</text></g><g><title>mysql::conn::Conn::read_packet (47 samples, 5.50%)</title><rect x="22.3653%" y="773" width="5.5035%" height="15" fill="rgb(233,210,1)"/><text x="22.6153%" y="783.50">mysql::..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (47 samples, 5.50%)</title><rect x="22.3653%" y="757" width="5.5035%" height="15" fill="rgb(244,137,37)"/><text x="22.6153%" y="767.50">&lt;mysql_..</text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (47 samples, 5.50%)</title><rect x="22.3653%" y="741" width="5.5035%" height="15" fill="rgb(240,136,2)"/><text x="22.6153%" y="751.50">&lt;std::i..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (47 samples, 5.50%)</title><rect x="22.3653%" y="725" width="5.5035%" height="15" fill="rgb(239,18,37)"/><text x="22.6153%" y="735.50">&lt;std::n..</text></g><g><title>std::sys_common::net::TcpStream::read (47 samples, 5.50%)</title><rect x="22.3653%" y="709" width="5.5035%" height="15" fill="rgb(218,185,22)"/><text x="22.6153%" y="719.50">std::sy..</text></g><g><title>std::sys::unix::net::Socket::read (47 samples, 5.50%)</title><rect x="22.3653%" y="693" width="5.5035%" height="15" fill="rgb(225,218,4)"/><text x="22.6153%" y="703.50">std::sy..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (47 samples, 5.50%)</title><rect x="22.3653%" y="677" width="5.5035%" height="15" fill="rgb(230,182,32)"/><text x="22.6153%" y="687.50">std::sy..</text></g><g><title>__libc_recv (47 samples, 5.50%)</title><rect x="22.3653%" y="661" width="5.5035%" height="15" fill="rgb(242,56,43)"/><text x="22.6153%" y="671.50">__libc_..</text></g><g><title>syscall_return_via_sysret (1 samples, 0.12%)</title><rect x="27.7518%" y="645" width="0.1171%" height="15" fill="rgb(233,99,24)"/><text x="28.0018%" y="655.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.12%)</title><rect x="27.8689%" y="901" width="0.1171%" height="15" fill="rgb(234,209,42)"/><text x="28.1189%" y="911.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (2 samples, 0.23%)</title><rect x="27.9859%" y="901" width="0.2342%" height="15" fill="rgb(227,7,12)"/><text x="28.2359%" y="911.50"></text></g><g><title>sql_parser::parser::parse_statements (2 samples, 0.23%)</title><rect x="27.9859%" y="885" width="0.2342%" height="15" fill="rgb(245,203,43)"/><text x="28.2359%" y="895.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (2 samples, 0.23%)</title><rect x="27.9859%" y="869" width="0.2342%" height="15" fill="rgb(238,205,33)"/><text x="28.2359%" y="879.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (2 samples, 0.23%)</title><rect x="27.9859%" y="853" width="0.2342%" height="15" fill="rgb(231,56,7)"/><text x="28.2359%" y="863.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.12%)</title><rect x="28.1030%" y="837" width="0.1171%" height="15" fill="rgb(244,186,29)"/><text x="28.3530%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.12%)</title><rect x="28.1030%" y="821" width="0.1171%" height="15" fill="rgb(234,111,31)"/><text x="28.3530%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.12%)</title><rect x="28.1030%" y="805" width="0.1171%" height="15" fill="rgb(241,149,10)"/><text x="28.3530%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.12%)</title><rect x="28.1030%" y="789" width="0.1171%" height="15" fill="rgb(249,206,44)"/><text x="28.3530%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.12%)</title><rect x="28.1030%" y="773" width="0.1171%" height="15" fill="rgb(251,153,30)"/><text x="28.3530%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.12%)</title><rect x="28.1030%" y="757" width="0.1171%" height="15" fill="rgb(239,152,38)"/><text x="28.3530%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.12%)</title><rect x="28.1030%" y="741" width="0.1171%" height="15" fill="rgb(249,139,47)"/><text x="28.3530%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.12%)</title><rect x="28.1030%" y="725" width="0.1171%" height="15" fill="rgb(244,64,35)"/><text x="28.3530%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.12%)</title><rect x="28.1030%" y="709" width="0.1171%" height="15" fill="rgb(216,46,15)"/><text x="28.3530%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.12%)</title><rect x="28.1030%" y="693" width="0.1171%" height="15" fill="rgb(250,74,19)"/><text x="28.3530%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.12%)</title><rect x="28.1030%" y="677" width="0.1171%" height="15" fill="rgb(249,42,33)"/><text x="28.3530%" y="687.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.12%)</title><rect x="28.1030%" y="661" width="0.1171%" height="15" fill="rgb(242,149,17)"/><text x="28.3530%" y="671.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.12%)</title><rect x="28.1030%" y="645" width="0.1171%" height="15" fill="rgb(244,29,21)"/><text x="28.3530%" y="655.50"></text></g><g><title>_int_malloc (1 samples, 0.12%)</title><rect x="28.1030%" y="629" width="0.1171%" height="15" fill="rgb(220,130,37)"/><text x="28.3530%" y="639.50"></text></g><g><title>hwloc::Topology::new (1 samples, 0.12%)</title><rect x="28.2201%" y="885" width="0.1171%" height="15" fill="rgb(211,67,2)"/><text x="28.4701%" y="895.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.12%)</title><rect x="28.2201%" y="869" width="0.1171%" height="15" fill="rgb(235,68,52)"/><text x="28.4701%" y="879.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.12%)</title><rect x="28.2201%" y="853" width="0.1171%" height="15" fill="rgb(246,142,3)"/><text x="28.4701%" y="863.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.12%)</title><rect x="28.2201%" y="837" width="0.1171%" height="15" fill="rgb(241,25,7)"/><text x="28.4701%" y="847.50"></text></g><g><title>dlopen (1 samples, 0.12%)</title><rect x="28.2201%" y="821" width="0.1171%" height="15" fill="rgb(242,119,39)"/><text x="28.4701%" y="831.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.12%)</title><rect x="28.2201%" y="805" width="0.1171%" height="15" fill="rgb(241,98,45)"/><text x="28.4701%" y="815.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.12%)</title><rect x="28.2201%" y="789" width="0.1171%" height="15" fill="rgb(254,28,30)"/><text x="28.4701%" y="799.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.12%)</title><rect x="28.2201%" y="773" width="0.1171%" height="15" fill="rgb(241,142,54)"/><text x="28.4701%" y="783.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.12%)</title><rect x="28.2201%" y="757" width="0.1171%" height="15" fill="rgb(222,85,15)"/><text x="28.4701%" y="767.50"></text></g><g><title>_dl_open (1 samples, 0.12%)</title><rect x="28.2201%" y="741" width="0.1171%" height="15" fill="rgb(210,85,47)"/><text x="28.4701%" y="751.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.12%)</title><rect x="28.2201%" y="725" width="0.1171%" height="15" fill="rgb(224,206,25)"/><text x="28.4701%" y="735.50"></text></g><g><title>dl_open_worker (1 samples, 0.12%)</title><rect x="28.2201%" y="709" width="0.1171%" height="15" fill="rgb(243,201,19)"/><text x="28.4701%" y="719.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.12%)</title><rect x="28.2201%" y="693" width="0.1171%" height="15" fill="rgb(236,59,4)"/><text x="28.4701%" y="703.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.12%)</title><rect x="28.2201%" y="677" width="0.1171%" height="15" fill="rgb(254,179,45)"/><text x="28.4701%" y="687.50"></text></g><g><title>do_lookup_x (1 samples, 0.12%)</title><rect x="28.2201%" y="661" width="0.1171%" height="15" fill="rgb(226,14,10)"/><text x="28.4701%" y="671.50"></text></g><g><title>_int_free (1 samples, 0.12%)</title><rect x="28.3372%" y="837" width="0.1171%" height="15" fill="rgb(244,27,41)"/><text x="28.5872%" y="847.50"></text></g><g><title>mysql::conn::Conn::handle_ok (1 samples, 0.12%)</title><rect x="28.4543%" y="837" width="0.1171%" height="15" fill="rgb(235,35,32)"/><text x="28.7043%" y="847.50"></text></g><g><title>mysql_common::packets::OkPacket::into_owned (1 samples, 0.12%)</title><rect x="28.4543%" y="821" width="0.1171%" height="15" fill="rgb(218,68,31)"/><text x="28.7043%" y="831.50"></text></g><g><title>__x86_indirect_thunk_rax (1 samples, 0.12%)</title><rect x="29.1569%" y="709" width="0.1171%" height="15" fill="rgb(207,120,37)"/><text x="29.4069%" y="719.50"></text></g><g><title>import_single_range (2 samples, 0.23%)</title><rect x="29.5082%" y="645" width="0.2342%" height="15" fill="rgb(227,98,0)"/><text x="29.7582%" y="655.50"></text></g><g><title>dst_release (1 samples, 0.12%)</title><rect x="30.5621%" y="581" width="0.1171%" height="15" fill="rgb(207,7,3)"/><text x="30.8121%" y="591.50"></text></g><g><title>__kfree_skb (4 samples, 0.47%)</title><rect x="30.5621%" y="613" width="0.4684%" height="15" fill="rgb(206,98,19)"/><text x="30.8121%" y="623.50"></text></g><g><title>skb_release_head_state (4 samples, 0.47%)</title><rect x="30.5621%" y="597" width="0.4684%" height="15" fill="rgb(217,5,26)"/><text x="30.8121%" y="607.50"></text></g><g><title>sock_rfree (3 samples, 0.35%)</title><rect x="30.6792%" y="581" width="0.3513%" height="15" fill="rgb(235,190,38)"/><text x="30.9292%" y="591.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.12%)</title><rect x="31.0304%" y="613" width="0.1171%" height="15" fill="rgb(247,86,24)"/><text x="31.2804%" y="623.50"></text></g><g><title>preempt_count_sub (1 samples, 0.12%)</title><rect x="31.0304%" y="597" width="0.1171%" height="15" fill="rgb(205,101,16)"/><text x="31.2804%" y="607.50"></text></g><g><title>kfree_skbmem (1 samples, 0.12%)</title><rect x="31.1475%" y="613" width="0.1171%" height="15" fill="rgb(246,168,33)"/><text x="31.3975%" y="623.50"></text></g><g><title>lock_sock_nested (1 samples, 0.12%)</title><rect x="31.2646%" y="613" width="0.1171%" height="15" fill="rgb(231,114,1)"/><text x="31.5146%" y="623.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.12%)</title><rect x="31.2646%" y="597" width="0.1171%" height="15" fill="rgb(207,184,53)"/><text x="31.5146%" y="607.50"></text></g><g><title>preempt_count_add (1 samples, 0.12%)</title><rect x="31.2646%" y="581" width="0.1171%" height="15" fill="rgb(224,95,51)"/><text x="31.5146%" y="591.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.12%)</title><rect x="31.4988%" y="597" width="0.1171%" height="15" fill="rgb(212,188,45)"/><text x="31.7488%" y="607.50"></text></g><g><title>_raw_spin_lock_bh (2 samples, 0.23%)</title><rect x="31.6159%" y="597" width="0.2342%" height="15" fill="rgb(223,154,38)"/><text x="31.8659%" y="607.50"></text></g><g><title>preempt_count_add (1 samples, 0.12%)</title><rect x="31.7330%" y="581" width="0.1171%" height="15" fill="rgb(251,22,52)"/><text x="31.9830%" y="591.50"></text></g><g><title>_raw_spin_unlock_irqrestore (1 samples, 0.12%)</title><rect x="31.8501%" y="597" width="0.1171%" height="15" fill="rgb(229,209,22)"/><text x="32.1001%" y="607.50"></text></g><g><title>preempt_count_sub (1 samples, 0.12%)</title><rect x="31.8501%" y="581" width="0.1171%" height="15" fill="rgb(234,138,34)"/><text x="32.1001%" y="591.50"></text></g><g><title>remove_wait_queue (1 samples, 0.12%)</title><rect x="31.9672%" y="597" width="0.1171%" height="15" fill="rgb(212,95,11)"/><text x="32.2172%" y="607.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.12%)</title><rect x="31.9672%" y="581" width="0.1171%" height="15" fill="rgb(240,179,47)"/><text x="32.2172%" y="591.50"></text></g><g><title>intel_pmu_disable_all (1 samples, 0.12%)</title><rect x="32.5527%" y="501" width="0.1171%" height="15" fill="rgb(240,163,11)"/><text x="32.8027%" y="511.50"></text></g><g><title>native_write_msr (1 samples, 0.12%)</title><rect x="32.5527%" y="485" width="0.1171%" height="15" fill="rgb(236,37,12)"/><text x="32.8027%" y="495.50"></text></g><g><title>sched_clock_cpu (2 samples, 0.23%)</title><rect x="32.6698%" y="501" width="0.2342%" height="15" fill="rgb(232,164,16)"/><text x="32.9198%" y="511.50"></text></g><g><title>sched_clock (2 samples, 0.23%)</title><rect x="32.6698%" y="485" width="0.2342%" height="15" fill="rgb(244,205,15)"/><text x="32.9198%" y="495.50"></text></g><g><title>native_sched_clock (2 samples, 0.23%)</title><rect x="32.6698%" y="469" width="0.2342%" height="15" fill="rgb(223,117,47)"/><text x="32.9198%" y="479.50"></text></g><g><title>__perf_event_task_sched_out (4 samples, 0.47%)</title><rect x="32.5527%" y="533" width="0.4684%" height="15" fill="rgb(244,107,35)"/><text x="32.8027%" y="543.50"></text></g><g><title>ctx_sched_out (4 samples, 0.47%)</title><rect x="32.5527%" y="517" width="0.4684%" height="15" fill="rgb(205,140,8)"/><text x="32.8027%" y="527.50"></text></g><g><title>x86_pmu_disable (1 samples, 0.12%)</title><rect x="32.9040%" y="501" width="0.1171%" height="15" fill="rgb(228,84,46)"/><text x="33.1540%" y="511.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.12%)</title><rect x="32.9040%" y="485" width="0.1171%" height="15" fill="rgb(254,188,9)"/><text x="33.1540%" y="495.50"></text></g><g><title>reweight_entity (1 samples, 0.12%)</title><rect x="33.1382%" y="501" width="0.1171%" height="15" fill="rgb(206,112,54)"/><text x="33.3882%" y="511.50"></text></g><g><title>__calc_delta (1 samples, 0.12%)</title><rect x="33.2553%" y="485" width="0.1171%" height="15" fill="rgb(216,84,49)"/><text x="33.5053%" y="495.50"></text></g><g><title>__cgroup_account_cputime (1 samples, 0.12%)</title><rect x="33.3724%" y="485" width="0.1171%" height="15" fill="rgb(214,194,35)"/><text x="33.6224%" y="495.50"></text></g><g><title>preempt_count_sub (1 samples, 0.12%)</title><rect x="33.3724%" y="469" width="0.1171%" height="15" fill="rgb(249,28,3)"/><text x="33.6224%" y="479.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.12%)</title><rect x="33.4895%" y="485" width="0.1171%" height="15" fill="rgb(222,56,52)"/><text x="33.7395%" y="495.50"></text></g><g><title>update_curr (4 samples, 0.47%)</title><rect x="33.2553%" y="501" width="0.4684%" height="15" fill="rgb(245,217,50)"/><text x="33.5053%" y="511.50"></text></g><g><title>cpuacct_charge (1 samples, 0.12%)</title><rect x="33.6066%" y="485" width="0.1171%" height="15" fill="rgb(213,201,24)"/><text x="33.8566%" y="495.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.12%)</title><rect x="33.7237%" y="485" width="0.1171%" height="15" fill="rgb(248,116,28)"/><text x="33.9737%" y="495.50"></text></g><g><title>dequeue_task_fair (8 samples, 0.94%)</title><rect x="33.0211%" y="533" width="0.9368%" height="15" fill="rgb(219,72,43)"/><text x="33.2711%" y="543.50"></text></g><g><title>dequeue_entity (8 samples, 0.94%)</title><rect x="33.0211%" y="517" width="0.9368%" height="15" fill="rgb(209,138,14)"/><text x="33.2711%" y="527.50"></text></g><g><title>update_load_avg (2 samples, 0.23%)</title><rect x="33.7237%" y="501" width="0.2342%" height="15" fill="rgb(222,18,33)"/><text x="33.9737%" y="511.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.12%)</title><rect x="33.8407%" y="485" width="0.1171%" height="15" fill="rgb(213,199,7)"/><text x="34.0907%" y="495.50"></text></g><g><title>psi_task_change (6 samples, 0.70%)</title><rect x="33.9578%" y="533" width="0.7026%" height="15" fill="rgb(250,110,10)"/><text x="34.2078%" y="543.50"></text></g><g><title>psi_group_change (5 samples, 0.59%)</title><rect x="34.0749%" y="517" width="0.5855%" height="15" fill="rgb(248,123,6)"/><text x="34.3249%" y="527.50"></text></g><g><title>record_times (1 samples, 0.12%)</title><rect x="34.5433%" y="501" width="0.1171%" height="15" fill="rgb(206,91,31)"/><text x="34.7933%" y="511.50"></text></g><g><title>rcu_note_context_switch (1 samples, 0.12%)</title><rect x="34.6604%" y="533" width="0.1171%" height="15" fill="rgb(211,154,13)"/><text x="34.9104%" y="543.50"></text></g><g><title>rcu_preempt_deferred_qs (1 samples, 0.12%)</title><rect x="34.6604%" y="517" width="0.1171%" height="15" fill="rgb(225,148,7)"/><text x="34.9104%" y="527.50"></text></g><g><title>sk_wait_data (33 samples, 3.86%)</title><rect x="31.3817%" y="613" width="3.8642%" height="15" fill="rgb(220,160,43)"/><text x="31.6317%" y="623.50">sk_w..</text></g><g><title>wait_woken (27 samples, 3.16%)</title><rect x="32.0843%" y="597" width="3.1616%" height="15" fill="rgb(213,52,39)"/><text x="32.3343%" y="607.50">wai..</text></g><g><title>schedule_timeout (24 samples, 2.81%)</title><rect x="32.4356%" y="581" width="2.8103%" height="15" fill="rgb(243,137,7)"/><text x="32.6856%" y="591.50">sc..</text></g><g><title>schedule (23 samples, 2.69%)</title><rect x="32.5527%" y="565" width="2.6932%" height="15" fill="rgb(230,79,13)"/><text x="32.8027%" y="575.50">sc..</text></g><g><title>__schedule (23 samples, 2.69%)</title><rect x="32.5527%" y="549" width="2.6932%" height="15" fill="rgb(247,105,23)"/><text x="32.8027%" y="559.50">__..</text></g><g><title>uclamp_rq_dec_id (4 samples, 0.47%)</title><rect x="34.7775%" y="533" width="0.4684%" height="15" fill="rgb(223,179,41)"/><text x="35.0275%" y="543.50"></text></g><g><title>_copy_to_iter (1 samples, 0.12%)</title><rect x="35.4801%" y="581" width="0.1171%" height="15" fill="rgb(218,9,34)"/><text x="35.7301%" y="591.50"></text></g><g><title>copy_user_generic_unrolled (1 samples, 0.12%)</title><rect x="35.4801%" y="565" width="0.1171%" height="15" fill="rgb(222,106,8)"/><text x="35.7301%" y="575.50"></text></g><g><title>page_fault (1 samples, 0.12%)</title><rect x="35.4801%" y="549" width="0.1171%" height="15" fill="rgb(211,220,0)"/><text x="35.7301%" y="559.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.12%)</title><rect x="35.4801%" y="533" width="0.1171%" height="15" fill="rgb(229,52,16)"/><text x="35.7301%" y="543.50"></text></g><g><title>handle_mm_fault (1 samples, 0.12%)</title><rect x="35.4801%" y="517" width="0.1171%" height="15" fill="rgb(212,155,18)"/><text x="35.7301%" y="527.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.12%)</title><rect x="35.4801%" y="501" width="0.1171%" height="15" fill="rgb(242,21,14)"/><text x="35.7301%" y="511.50"></text></g><g><title>__lru_cache_add (1 samples, 0.12%)</title><rect x="35.4801%" y="485" width="0.1171%" height="15" fill="rgb(222,19,48)"/><text x="35.7301%" y="495.50"></text></g><g><title>skb_copy_datagram_iter (6 samples, 0.70%)</title><rect x="35.2459%" y="613" width="0.7026%" height="15" fill="rgb(232,45,27)"/><text x="35.4959%" y="623.50"></text></g><g><title>__skb_datagram_iter (5 samples, 0.59%)</title><rect x="35.3630%" y="597" width="0.5855%" height="15" fill="rgb(249,103,42)"/><text x="35.6130%" y="607.50"></text></g><g><title>simple_copy_to_iter (3 samples, 0.35%)</title><rect x="35.5972%" y="581" width="0.3513%" height="15" fill="rgb(246,81,33)"/><text x="35.8472%" y="591.50"></text></g><g><title>__check_object_size (3 samples, 0.35%)</title><rect x="35.5972%" y="565" width="0.3513%" height="15" fill="rgb(252,33,42)"/><text x="35.8472%" y="575.50"></text></g><g><title>__virt_addr_valid (1 samples, 0.12%)</title><rect x="35.8314%" y="549" width="0.1171%" height="15" fill="rgb(209,212,41)"/><text x="36.0814%" y="559.50"></text></g><g><title>inet_recvmsg (54 samples, 6.32%)</title><rect x="29.7424%" y="645" width="6.3232%" height="15" fill="rgb(207,154,6)"/><text x="29.9924%" y="655.50">inet_rec..</text></g><g><title>tcp_recvmsg (54 samples, 6.32%)</title><rect x="29.7424%" y="629" width="6.3232%" height="15" fill="rgb(223,64,47)"/><text x="29.9924%" y="639.50">tcp_recv..</text></g><g><title>tcp_recv_timestamp (1 samples, 0.12%)</title><rect x="35.9485%" y="613" width="0.1171%" height="15" fill="rgb(211,161,38)"/><text x="36.1985%" y="623.50"></text></g><g><title>__x64_sys_recvfrom (59 samples, 6.91%)</title><rect x="29.2740%" y="677" width="6.9087%" height="15" fill="rgb(219,138,40)"/><text x="29.5240%" y="687.50">__x64_sys..</text></g><g><title>__sys_recvfrom (59 samples, 6.91%)</title><rect x="29.2740%" y="661" width="6.9087%" height="15" fill="rgb(241,228,46)"/><text x="29.5240%" y="671.50">__sys_rec..</text></g><g><title>sockfd_lookup_light (1 samples, 0.12%)</title><rect x="36.0656%" y="645" width="0.1171%" height="15" fill="rgb(223,209,38)"/><text x="36.3156%" y="655.50"></text></g><g><title>__fget_light (1 samples, 0.12%)</title><rect x="36.0656%" y="629" width="0.1171%" height="15" fill="rgb(236,164,45)"/><text x="36.3156%" y="639.50"></text></g><g><title>__fget_files (1 samples, 0.12%)</title><rect x="36.0656%" y="613" width="0.1171%" height="15" fill="rgb(231,15,5)"/><text x="36.3156%" y="623.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.12%)</title><rect x="36.0656%" y="597" width="0.1171%" height="15" fill="rgb(252,35,15)"/><text x="36.3156%" y="607.50"></text></g><g><title>do_syscall_64 (62 samples, 7.26%)</title><rect x="29.2740%" y="693" width="7.2600%" height="15" fill="rgb(248,181,18)"/><text x="29.5240%" y="703.50">do_syscall..</text></g><g><title>syscall_trace_enter (3 samples, 0.35%)</title><rect x="36.1827%" y="677" width="0.3513%" height="15" fill="rgb(233,39,42)"/><text x="36.4327%" y="687.50"></text></g><g><title>entry_SYSCALL_64 (67 samples, 7.85%)</title><rect x="29.2740%" y="709" width="7.8454%" height="15" fill="rgb(238,110,33)"/><text x="29.5240%" y="719.50">entry_SYSCA..</text></g><g><title>prepare_exit_to_usermode (5 samples, 0.59%)</title><rect x="36.5340%" y="693" width="0.5855%" height="15" fill="rgb(233,195,10)"/><text x="36.7840%" y="703.50"></text></g><g><title>__libc_recv (71 samples, 8.31%)</title><rect x="28.9227%" y="725" width="8.3138%" height="15" fill="rgb(254,105,3)"/><text x="29.1727%" y="735.50">__libc_recv</text></g><g><title>syscall_return_via_sysret (1 samples, 0.12%)</title><rect x="37.1194%" y="709" width="0.1171%" height="15" fill="rgb(221,225,9)"/><text x="37.3694%" y="719.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (73 samples, 8.55%)</title><rect x="28.8056%" y="805" width="8.5480%" height="15" fill="rgb(224,227,45)"/><text x="29.0556%" y="815.50">&lt;std::io::bu..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (72 samples, 8.43%)</title><rect x="28.9227%" y="789" width="8.4309%" height="15" fill="rgb(229,198,43)"/><text x="29.1727%" y="799.50">&lt;std::net::t..</text></g><g><title>std::sys_common::net::TcpStream::read (72 samples, 8.43%)</title><rect x="28.9227%" y="773" width="8.4309%" height="15" fill="rgb(206,209,35)"/><text x="29.1727%" y="783.50">std::sys_com..</text></g><g><title>std::sys::unix::net::Socket::read (72 samples, 8.43%)</title><rect x="28.9227%" y="757" width="8.4309%" height="15" fill="rgb(245,195,53)"/><text x="29.1727%" y="767.50">std::sys::un..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (72 samples, 8.43%)</title><rect x="28.9227%" y="741" width="8.4309%" height="15" fill="rgb(240,92,26)"/><text x="29.1727%" y="751.50">std::sys::un..</text></g><g><title>std::sys::unix::cvt (1 samples, 0.12%)</title><rect x="37.2365%" y="725" width="0.1171%" height="15" fill="rgb(207,40,23)"/><text x="37.4865%" y="735.50"></text></g><g><title>&lt;isize as std::sys::unix::IsMinusOne&gt;::is_minus_one (1 samples, 0.12%)</title><rect x="37.2365%" y="709" width="0.1171%" height="15" fill="rgb(223,111,35)"/><text x="37.4865%" y="719.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (81 samples, 9.48%)</title><rect x="28.5714%" y="821" width="9.4848%" height="15" fill="rgb(229,147,28)"/><text x="28.8214%" y="831.50">&lt;mysql_common:..</text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (6 samples, 0.70%)</title><rect x="37.3536%" y="805" width="0.7026%" height="15" fill="rgb(211,29,28)"/><text x="37.6036%" y="815.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (4 samples, 0.47%)</title><rect x="37.5878%" y="789" width="0.4684%" height="15" fill="rgb(228,72,33)"/><text x="37.8378%" y="799.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (4 samples, 0.47%)</title><rect x="37.5878%" y="773" width="0.4684%" height="15" fill="rgb(205,214,31)"/><text x="37.8378%" y="783.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.12%)</title><rect x="37.9391%" y="757" width="0.1171%" height="15" fill="rgb(224,111,15)"/><text x="38.1891%" y="767.50"></text></g><g><title>bytes::bytes_mut::BytesMut::set_start (1 samples, 0.12%)</title><rect x="37.9391%" y="741" width="0.1171%" height="15" fill="rgb(253,21,26)"/><text x="38.1891%" y="751.50"></text></g><g><title>mysql::conn::Conn::read_packet (82 samples, 9.60%)</title><rect x="28.5714%" y="837" width="9.6019%" height="15" fill="rgb(245,139,43)"/><text x="28.8214%" y="847.50">mysql::conn::C..</text></g><g><title>std::io::error::Error::_new (1 samples, 0.12%)</title><rect x="38.0562%" y="821" width="0.1171%" height="15" fill="rgb(252,170,7)"/><text x="38.3062%" y="831.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.12%)</title><rect x="38.0562%" y="805" width="0.1171%" height="15" fill="rgb(231,118,14)"/><text x="38.3062%" y="815.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.12%)</title><rect x="38.0562%" y="789" width="0.1171%" height="15" fill="rgb(238,83,0)"/><text x="38.3062%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.12%)</title><rect x="38.0562%" y="773" width="0.1171%" height="15" fill="rgb(221,39,39)"/><text x="38.3062%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.12%)</title><rect x="38.0562%" y="757" width="0.1171%" height="15" fill="rgb(222,119,46)"/><text x="38.3062%" y="767.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.12%)</title><rect x="38.0562%" y="741" width="0.1171%" height="15" fill="rgb(222,165,49)"/><text x="38.3062%" y="751.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.12%)</title><rect x="38.0562%" y="725" width="0.1171%" height="15" fill="rgb(219,113,52)"/><text x="38.3062%" y="735.50"></text></g><g><title>lobsters::main (86 samples, 10.07%)</title><rect x="28.2201%" y="901" width="10.0703%" height="15" fill="rgb(214,7,15)"/><text x="28.4701%" y="911.50">lobsters::main</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (85 samples, 9.95%)</title><rect x="28.3372%" y="885" width="9.9532%" height="15" fill="rgb(235,32,4)"/><text x="28.5872%" y="895.50">mysql::conn::q..</text></g><g><title>mysql::conn::Conn::_query (85 samples, 9.95%)</title><rect x="28.3372%" y="869" width="9.9532%" height="15" fill="rgb(238,90,54)"/><text x="28.5872%" y="879.50">mysql::conn::C..</text></g><g><title>mysql::conn::Conn::handle_result_set (85 samples, 9.95%)</title><rect x="28.3372%" y="853" width="9.9532%" height="15" fill="rgb(213,208,19)"/><text x="28.5872%" y="863.50">mysql::conn::C..</text></g><g><title>mysql_common::packets::parse_ok_packet (1 samples, 0.12%)</title><rect x="38.1733%" y="837" width="0.1171%" height="15" fill="rgb(233,156,4)"/><text x="38.4233%" y="847.50"></text></g><g><title>mysql_common::io::ReadMysqlExt::read_lenenc_int (1 samples, 0.12%)</title><rect x="38.1733%" y="821" width="0.1171%" height="15" fill="rgb(207,194,5)"/><text x="38.4233%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.12%)</title><rect x="38.4075%" y="837" width="0.1171%" height="15" fill="rgb(206,111,30)"/><text x="38.6575%" y="847.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (1 samples, 0.12%)</title><rect x="38.4075%" y="821" width="0.1171%" height="15" fill="rgb(243,70,54)"/><text x="38.6575%" y="831.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (3 samples, 0.35%)</title><rect x="38.2904%" y="853" width="0.3513%" height="15" fill="rgb(242,28,8)"/><text x="38.5404%" y="863.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (1 samples, 0.12%)</title><rect x="38.5246%" y="837" width="0.1171%" height="15" fill="rgb(219,106,18)"/><text x="38.7746%" y="847.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (1 samples, 0.12%)</title><rect x="38.5246%" y="821" width="0.1171%" height="15" fill="rgb(244,222,10)"/><text x="38.7746%" y="831.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (1 samples, 0.12%)</title><rect x="38.5246%" y="805" width="0.1171%" height="15" fill="rgb(236,179,52)"/><text x="38.7746%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.12%)</title><rect x="38.5246%" y="789" width="0.1171%" height="15" fill="rgb(213,23,39)"/><text x="38.7746%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.12%)</title><rect x="38.5246%" y="773" width="0.1171%" height="15" fill="rgb(238,48,10)"/><text x="38.7746%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.12%)</title><rect x="38.5246%" y="757" width="0.1171%" height="15" fill="rgb(251,196,23)"/><text x="38.7746%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.12%)</title><rect x="38.5246%" y="741" width="0.1171%" height="15" fill="rgb(250,152,24)"/><text x="38.7746%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.12%)</title><rect x="38.5246%" y="725" width="0.1171%" height="15" fill="rgb(209,150,17)"/><text x="38.7746%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.12%)</title><rect x="38.5246%" y="709" width="0.1171%" height="15" fill="rgb(234,202,34)"/><text x="38.7746%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.12%)</title><rect x="38.5246%" y="693" width="0.1171%" height="15" fill="rgb(253,148,53)"/><text x="38.7746%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.12%)</title><rect x="38.5246%" y="677" width="0.1171%" height="15" fill="rgb(218,129,16)"/><text x="38.7746%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.12%)</title><rect x="38.5246%" y="661" width="0.1171%" height="15" fill="rgb(216,85,19)"/><text x="38.7746%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.12%)</title><rect x="38.5246%" y="645" width="0.1171%" height="15" fill="rgb(235,228,7)"/><text x="38.7746%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.12%)</title><rect x="38.5246%" y="629" width="0.1171%" height="15" fill="rgb(245,175,0)"/><text x="38.7746%" y="639.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.12%)</title><rect x="38.5246%" y="613" width="0.1171%" height="15" fill="rgb(208,168,36)"/><text x="38.7746%" y="623.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.12%)</title><rect x="38.5246%" y="597" width="0.1171%" height="15" fill="rgb(246,171,24)"/><text x="38.7746%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="38.8759%" y="821" width="0.1171%" height="15" fill="rgb(215,142,24)"/><text x="39.1259%" y="831.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.12%)</title><rect x="38.8759%" y="805" width="0.1171%" height="15" fill="rgb(250,187,7)"/><text x="39.1259%" y="815.50"></text></g><g><title>_int_realloc (1 samples, 0.12%)</title><rect x="38.8759%" y="789" width="0.1171%" height="15" fill="rgb(228,66,33)"/><text x="39.1259%" y="799.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="38.8759%" y="773" width="0.1171%" height="15" fill="rgb(234,215,21)"/><text x="39.1259%" y="783.50"></text></g><g><title>error_entry (1 samples, 0.12%)</title><rect x="38.8759%" y="757" width="0.1171%" height="15" fill="rgb(222,191,20)"/><text x="39.1259%" y="767.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_number (2 samples, 0.23%)</title><rect x="38.9930%" y="821" width="0.2342%" height="15" fill="rgb(245,79,54)"/><text x="39.2430%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.23%)</title><rect x="38.9930%" y="805" width="0.2342%" height="15" fill="rgb(240,10,37)"/><text x="39.2430%" y="815.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.23%)</title><rect x="38.9930%" y="789" width="0.2342%" height="15" fill="rgb(214,192,32)"/><text x="39.2430%" y="799.50"></text></g><g><title>_int_malloc (2 samples, 0.23%)</title><rect x="38.9930%" y="773" width="0.2342%" height="15" fill="rgb(209,36,54)"/><text x="39.2430%" y="783.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (9 samples, 1.05%)</title><rect x="38.2904%" y="901" width="1.0539%" height="15" fill="rgb(220,10,11)"/><text x="38.5404%" y="911.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (9 samples, 1.05%)</title><rect x="38.2904%" y="885" width="1.0539%" height="15" fill="rgb(221,106,17)"/><text x="38.5404%" y="895.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (9 samples, 1.05%)</title><rect x="38.2904%" y="869" width="1.0539%" height="15" fill="rgb(251,142,44)"/><text x="38.5404%" y="879.50"></text></g><g><title>sql_parser::parser::parse_statements (6 samples, 0.70%)</title><rect x="38.6417%" y="853" width="0.7026%" height="15" fill="rgb(238,13,15)"/><text x="38.8917%" y="863.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (5 samples, 0.59%)</title><rect x="38.7588%" y="837" width="0.5855%" height="15" fill="rgb(208,107,27)"/><text x="39.0088%" y="847.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.12%)</title><rect x="39.2272%" y="821" width="0.1171%" height="15" fill="rgb(205,136,37)"/><text x="39.4772%" y="831.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.12%)</title><rect x="39.3443%" y="901" width="0.1171%" height="15" fill="rgb(250,205,27)"/><text x="39.5943%" y="911.50"></text></g><g><title>mysql::conn::Conn::handle_ok (2 samples, 0.23%)</title><rect x="39.4614%" y="901" width="0.2342%" height="15" fill="rgb(210,80,43)"/><text x="39.7114%" y="911.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.12%)</title><rect x="39.6956%" y="901" width="0.1171%" height="15" fill="rgb(247,160,36)"/><text x="39.9456%" y="911.50"></text></g><g><title>mysql_common::packets::OkPacket::into_owned (1 samples, 0.12%)</title><rect x="39.8126%" y="901" width="0.1171%" height="15" fill="rgb(234,13,49)"/><text x="40.0626%" y="911.50"></text></g><g><title>mysql_common::packets::parse_ok_packet (1 samples, 0.12%)</title><rect x="39.9297%" y="901" width="0.1171%" height="15" fill="rgb(234,122,0)"/><text x="40.1797%" y="911.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.12%)</title><rect x="40.0468%" y="901" width="0.1171%" height="15" fill="rgb(207,146,38)"/><text x="40.2968%" y="911.50"></text></g><g><title>regex::compile::Compiler::c_repeat_range (1 samples, 0.12%)</title><rect x="40.1639%" y="853" width="0.1171%" height="15" fill="rgb(207,177,25)"/><text x="40.4139%" y="863.50"></text></g><g><title>regex::compile::Compiler::c_class (1 samples, 0.12%)</title><rect x="40.1639%" y="837" width="0.1171%" height="15" fill="rgb(211,178,42)"/><text x="40.4139%" y="847.50"></text></g><g><title>regex::compile::CompileClass::c_utf8_seq (1 samples, 0.12%)</title><rect x="40.1639%" y="821" width="0.1171%" height="15" fill="rgb(230,69,54)"/><text x="40.4139%" y="831.50"></text></g><g><title>regex::exec::ExecBuilder::build (2 samples, 0.23%)</title><rect x="40.1639%" y="901" width="0.2342%" height="15" fill="rgb(214,135,41)"/><text x="40.4139%" y="911.50"></text></g><g><title>regex::compile::Compiler::compile (2 samples, 0.23%)</title><rect x="40.1639%" y="885" width="0.2342%" height="15" fill="rgb(237,67,25)"/><text x="40.4139%" y="895.50"></text></g><g><title>regex::compile::Compiler::c (2 samples, 0.23%)</title><rect x="40.1639%" y="869" width="0.2342%" height="15" fill="rgb(222,189,50)"/><text x="40.4139%" y="879.50"></text></g><g><title>regex::compile::Compiler::fill (1 samples, 0.12%)</title><rect x="40.2810%" y="853" width="0.1171%" height="15" fill="rgb(245,148,34)"/><text x="40.5310%" y="863.50"></text></g><g><title>regex::compile::Compiler::fill (1 samples, 0.12%)</title><rect x="40.2810%" y="837" width="0.1171%" height="15" fill="rgb(222,29,6)"/><text x="40.5310%" y="847.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.12%)</title><rect x="40.3981%" y="901" width="0.1171%" height="15" fill="rgb(221,189,43)"/><text x="40.6481%" y="911.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="40.5152%" y="821" width="0.1171%" height="15" fill="rgb(207,36,27)"/><text x="40.7652%" y="831.50"></text></g><g><title>_int_free (1 samples, 0.12%)</title><rect x="40.6323%" y="821" width="0.1171%" height="15" fill="rgb(217,90,24)"/><text x="40.8823%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (13 samples, 1.52%)</title><rect x="40.7494%" y="821" width="1.5222%" height="15" fill="rgb(224,66,35)"/><text x="40.9994%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::expected (13 samples, 1.52%)</title><rect x="40.7494%" y="805" width="1.5222%" height="15" fill="rgb(221,13,50)"/><text x="40.9994%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (13 samples, 1.52%)</title><rect x="40.7494%" y="789" width="1.5222%" height="15" fill="rgb(236,68,49)"/><text x="40.9994%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (13 samples, 1.52%)</title><rect x="40.7494%" y="773" width="1.5222%" height="15" fill="rgb(229,146,28)"/><text x="40.9994%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (13 samples, 1.52%)</title><rect x="40.7494%" y="757" width="1.5222%" height="15" fill="rgb(225,31,38)"/><text x="40.9994%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (13 samples, 1.52%)</title><rect x="40.7494%" y="741" width="1.5222%" height="15" fill="rgb(250,208,3)"/><text x="40.9994%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (13 samples, 1.52%)</title><rect x="40.7494%" y="725" width="1.5222%" height="15" fill="rgb(246,54,23)"/><text x="40.9994%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (13 samples, 1.52%)</title><rect x="40.7494%" y="709" width="1.5222%" height="15" fill="rgb(243,76,11)"/><text x="40.9994%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (13 samples, 1.52%)</title><rect x="40.7494%" y="693" width="1.5222%" height="15" fill="rgb(245,21,50)"/><text x="40.9994%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 1.52%)</title><rect x="40.7494%" y="677" width="1.5222%" height="15" fill="rgb(228,9,43)"/><text x="40.9994%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (13 samples, 1.52%)</title><rect x="40.7494%" y="661" width="1.5222%" height="15" fill="rgb(208,100,47)"/><text x="40.9994%" y="671.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (16 samples, 1.87%)</title><rect x="40.5152%" y="901" width="1.8735%" height="15" fill="rgb(232,26,8)"/><text x="40.7652%" y="911.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_query_body (16 samples, 1.87%)</title><rect x="40.5152%" y="885" width="1.8735%" height="15" fill="rgb(216,166,38)"/><text x="40.7652%" y="895.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (16 samples, 1.87%)</title><rect x="40.5152%" y="869" width="1.8735%" height="15" fill="rgb(251,202,51)"/><text x="40.7652%" y="879.50">s..</text></g><g><title>sql_parser::parser::Parser::check_descent (16 samples, 1.87%)</title><rect x="40.5152%" y="853" width="1.8735%" height="15" fill="rgb(254,216,34)"/><text x="40.7652%" y="863.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_prefix (16 samples, 1.87%)</title><rect x="40.5152%" y="837" width="1.8735%" height="15" fill="rgb(251,32,27)"/><text x="40.7652%" y="847.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_value (1 samples, 0.12%)</title><rect x="42.2717%" y="821" width="0.1171%" height="15" fill="rgb(208,127,28)"/><text x="42.5217%" y="831.50"></text></g><g><title>_int_free (1 samples, 0.12%)</title><rect x="42.2717%" y="805" width="0.1171%" height="15" fill="rgb(224,137,22)"/><text x="42.5217%" y="815.50"></text></g><g><title>__GI___mprotect (1 samples, 0.12%)</title><rect x="42.3888%" y="581" width="0.1171%" height="15" fill="rgb(254,70,32)"/><text x="42.6388%" y="591.50"></text></g><g><title>syscall_return_via_sysret (1 samples, 0.12%)</title><rect x="42.3888%" y="565" width="0.1171%" height="15" fill="rgb(229,75,37)"/><text x="42.6388%" y="575.50"></text></g><g><title>__lru_cache_add (1 samples, 0.12%)</title><rect x="42.5059%" y="517" width="0.1171%" height="15" fill="rgb(252,64,23)"/><text x="42.7559%" y="527.50"></text></g><g><title>pagevec_lru_move_fn (1 samples, 0.12%)</title><rect x="42.5059%" y="501" width="0.1171%" height="15" fill="rgb(232,162,48)"/><text x="42.7559%" y="511.50"></text></g><g><title>__pagevec_lru_add_fn (1 samples, 0.12%)</title><rect x="42.5059%" y="485" width="0.1171%" height="15" fill="rgb(246,160,12)"/><text x="42.7559%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.47%)</title><rect x="42.3888%" y="805" width="0.4684%" height="15" fill="rgb(247,166,0)"/><text x="42.6388%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.47%)</title><rect x="42.3888%" y="789" width="0.4684%" height="15" fill="rgb(249,219,21)"/><text x="42.6388%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (4 samples, 0.47%)</title><rect x="42.3888%" y="773" width="0.4684%" height="15" fill="rgb(205,209,3)"/><text x="42.6388%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.47%)</title><rect x="42.3888%" y="757" width="0.4684%" height="15" fill="rgb(243,44,1)"/><text x="42.6388%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.47%)</title><rect x="42.3888%" y="741" width="0.4684%" height="15" fill="rgb(206,159,16)"/><text x="42.6388%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (4 samples, 0.47%)</title><rect x="42.3888%" y="725" width="0.4684%" height="15" fill="rgb(244,77,30)"/><text x="42.6388%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.47%)</title><rect x="42.3888%" y="709" width="0.4684%" height="15" fill="rgb(218,69,12)"/><text x="42.6388%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.47%)</title><rect x="42.3888%" y="693" width="0.4684%" height="15" fill="rgb(212,87,7)"/><text x="42.6388%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (4 samples, 0.47%)</title><rect x="42.3888%" y="677" width="0.4684%" height="15" fill="rgb(245,114,25)"/><text x="42.6388%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.47%)</title><rect x="42.3888%" y="661" width="0.4684%" height="15" fill="rgb(210,61,42)"/><text x="42.6388%" y="671.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.47%)</title><rect x="42.3888%" y="645" width="0.4684%" height="15" fill="rgb(211,52,33)"/><text x="42.6388%" y="655.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.47%)</title><rect x="42.3888%" y="629" width="0.4684%" height="15" fill="rgb(234,58,33)"/><text x="42.6388%" y="639.50"></text></g><g><title>_int_malloc (4 samples, 0.47%)</title><rect x="42.3888%" y="613" width="0.4684%" height="15" fill="rgb(220,115,36)"/><text x="42.6388%" y="623.50"></text></g><g><title>sysmalloc (4 samples, 0.47%)</title><rect x="42.3888%" y="597" width="0.4684%" height="15" fill="rgb(243,153,54)"/><text x="42.6388%" y="607.50"></text></g><g><title>page_fault (3 samples, 0.35%)</title><rect x="42.5059%" y="581" width="0.3513%" height="15" fill="rgb(251,47,18)"/><text x="42.7559%" y="591.50"></text></g><g><title>do_user_addr_fault (3 samples, 0.35%)</title><rect x="42.5059%" y="565" width="0.3513%" height="15" fill="rgb(242,102,42)"/><text x="42.7559%" y="575.50"></text></g><g><title>handle_mm_fault (3 samples, 0.35%)</title><rect x="42.5059%" y="549" width="0.3513%" height="15" fill="rgb(234,31,38)"/><text x="42.7559%" y="559.50"></text></g><g><title>__handle_mm_fault (3 samples, 0.35%)</title><rect x="42.5059%" y="533" width="0.3513%" height="15" fill="rgb(221,117,51)"/><text x="42.7559%" y="543.50"></text></g><g><title>alloc_pages_vma (2 samples, 0.23%)</title><rect x="42.6230%" y="517" width="0.2342%" height="15" fill="rgb(212,20,18)"/><text x="42.8730%" y="527.50"></text></g><g><title>__alloc_pages_nodemask (2 samples, 0.23%)</title><rect x="42.6230%" y="501" width="0.2342%" height="15" fill="rgb(245,133,36)"/><text x="42.8730%" y="511.50"></text></g><g><title>get_page_from_freelist (2 samples, 0.23%)</title><rect x="42.6230%" y="485" width="0.2342%" height="15" fill="rgb(212,6,19)"/><text x="42.8730%" y="495.50"></text></g><g><title>prep_new_page (1 samples, 0.12%)</title><rect x="42.7400%" y="469" width="0.1171%" height="15" fill="rgb(218,1,36)"/><text x="42.9900%" y="479.50"></text></g><g><title>kernel_init_free_pages (1 samples, 0.12%)</title><rect x="42.7400%" y="453" width="0.1171%" height="15" fill="rgb(246,84,54)"/><text x="42.9900%" y="463.50"></text></g><g><title>clear_page_erms (1 samples, 0.12%)</title><rect x="42.7400%" y="437" width="0.1171%" height="15" fill="rgb(242,110,6)"/><text x="42.9900%" y="447.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (5 samples, 0.59%)</title><rect x="42.3888%" y="901" width="0.5855%" height="15" fill="rgb(214,47,5)"/><text x="42.6388%" y="911.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (5 samples, 0.59%)</title><rect x="42.3888%" y="885" width="0.5855%" height="15" fill="rgb(218,159,25)"/><text x="42.6388%" y="895.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (5 samples, 0.59%)</title><rect x="42.3888%" y="869" width="0.5855%" height="15" fill="rgb(215,211,28)"/><text x="42.6388%" y="879.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (5 samples, 0.59%)</title><rect x="42.3888%" y="853" width="0.5855%" height="15" fill="rgb(238,59,32)"/><text x="42.6388%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (5 samples, 0.59%)</title><rect x="42.3888%" y="837" width="0.5855%" height="15" fill="rgb(226,82,3)"/><text x="42.6388%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::expected (5 samples, 0.59%)</title><rect x="42.3888%" y="821" width="0.5855%" height="15" fill="rgb(240,164,32)"/><text x="42.6388%" y="831.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.12%)</title><rect x="42.8571%" y="805" width="0.1171%" height="15" fill="rgb(232,46,7)"/><text x="43.1071%" y="815.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.12%)</title><rect x="42.8571%" y="789" width="0.1171%" height="15" fill="rgb(229,129,53)"/><text x="43.1071%" y="799.50"></text></g><g><title>core::fmt::write (1 samples, 0.12%)</title><rect x="42.8571%" y="773" width="0.1171%" height="15" fill="rgb(234,188,29)"/><text x="43.1071%" y="783.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.12%)</title><rect x="42.8571%" y="757" width="0.1171%" height="15" fill="rgb(246,141,4)"/><text x="43.1071%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.12%)</title><rect x="42.8571%" y="741" width="0.1171%" height="15" fill="rgb(229,23,39)"/><text x="43.1071%" y="751.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.12%)</title><rect x="42.8571%" y="725" width="0.1171%" height="15" fill="rgb(206,12,3)"/><text x="43.1071%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.12%)</title><rect x="42.8571%" y="709" width="0.1171%" height="15" fill="rgb(252,226,20)"/><text x="43.1071%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.12%)</title><rect x="42.8571%" y="693" width="0.1171%" height="15" fill="rgb(216,123,35)"/><text x="43.1071%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.12%)</title><rect x="42.8571%" y="677" width="0.1171%" height="15" fill="rgb(212,68,40)"/><text x="43.1071%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.12%)</title><rect x="42.8571%" y="661" width="0.1171%" height="15" fill="rgb(254,125,32)"/><text x="43.1071%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="42.8571%" y="645" width="0.1171%" height="15" fill="rgb(253,97,22)"/><text x="43.1071%" y="655.50"></text></g><g><title>mysql::conn::Conn::handle_ok (1 samples, 0.12%)</title><rect x="42.9742%" y="709" width="0.1171%" height="15" fill="rgb(241,101,14)"/><text x="43.2242%" y="719.50"></text></g><g><title>mysql_common::packets::OkPacket::into_owned (1 samples, 0.12%)</title><rect x="42.9742%" y="693" width="0.1171%" height="15" fill="rgb(238,103,29)"/><text x="43.2242%" y="703.50"></text></g><g><title>__rust_alloc (1 samples, 0.12%)</title><rect x="42.9742%" y="677" width="0.1171%" height="15" fill="rgb(233,195,47)"/><text x="43.2242%" y="687.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (2 samples, 0.23%)</title><rect x="42.9742%" y="757" width="0.2342%" height="15" fill="rgb(246,218,30)"/><text x="43.2242%" y="767.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.23%)</title><rect x="42.9742%" y="741" width="0.2342%" height="15" fill="rgb(219,145,47)"/><text x="43.2242%" y="751.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (2 samples, 0.23%)</title><rect x="42.9742%" y="725" width="0.2342%" height="15" fill="rgb(243,12,26)"/><text x="43.2242%" y="735.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.12%)</title><rect x="43.0913%" y="709" width="0.1171%" height="15" fill="rgb(214,87,16)"/><text x="43.3413%" y="719.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.12%)</title><rect x="43.0913%" y="693" width="0.1171%" height="15" fill="rgb(208,99,42)"/><text x="43.3413%" y="703.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.12%)</title><rect x="43.0913%" y="677" width="0.1171%" height="15" fill="rgb(253,99,2)"/><text x="43.3413%" y="687.50"></text></g><g><title>start_thread (3 samples, 0.35%)</title><rect x="42.9742%" y="901" width="0.3513%" height="15" fill="rgb(220,168,23)"/><text x="43.2242%" y="911.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (3 samples, 0.35%)</title><rect x="42.9742%" y="885" width="0.3513%" height="15" fill="rgb(242,38,24)"/><text x="43.2242%" y="895.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (3 samples, 0.35%)</title><rect x="42.9742%" y="869" width="0.3513%" height="15" fill="rgb(225,182,9)"/><text x="43.2242%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (3 samples, 0.35%)</title><rect x="42.9742%" y="853" width="0.3513%" height="15" fill="rgb(243,178,37)"/><text x="43.2242%" y="863.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (3 samples, 0.35%)</title><rect x="42.9742%" y="837" width="0.3513%" height="15" fill="rgb(232,139,19)"/><text x="43.2242%" y="847.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3 samples, 0.35%)</title><rect x="42.9742%" y="821" width="0.3513%" height="15" fill="rgb(225,201,24)"/><text x="43.2242%" y="831.50"></text></g><g><title>decor::Shim::run_on_tcp (3 samples, 0.35%)</title><rect x="42.9742%" y="805" width="0.3513%" height="15" fill="rgb(221,47,46)"/><text x="43.2242%" y="815.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (3 samples, 0.35%)</title><rect x="42.9742%" y="789" width="0.3513%" height="15" fill="rgb(249,23,13)"/><text x="43.2242%" y="799.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (3 samples, 0.35%)</title><rect x="42.9742%" y="773" width="0.3513%" height="15" fill="rgb(219,9,5)"/><text x="43.2242%" y="783.50"></text></g><g><title>decor::answer_rows (1 samples, 0.12%)</title><rect x="43.2084%" y="757" width="0.1171%" height="15" fill="rgb(254,171,16)"/><text x="43.4584%" y="767.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="43.2084%" y="741" width="0.1171%" height="15" fill="rgb(230,171,20)"/><text x="43.4584%" y="751.50"></text></g><g><title>mysql::conn::query_result::QueryResult&lt;T&gt;::handle_next (1 samples, 0.12%)</title><rect x="43.2084%" y="725" width="0.1171%" height="15" fill="rgb(210,71,41)"/><text x="43.4584%" y="735.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.12%)</title><rect x="43.2084%" y="709" width="0.1171%" height="15" fill="rgb(206,173,20)"/><text x="43.4584%" y="719.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (2 samples, 0.23%)</title><rect x="43.3255%" y="901" width="0.2342%" height="15" fill="rgb(233,88,34)"/><text x="43.5755%" y="911.50"></text></g><g><title>__GI___openat (1 samples, 0.12%)</title><rect x="43.5597%" y="693" width="0.1171%" height="15" fill="rgb(223,209,46)"/><text x="43.8097%" y="703.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.12%)</title><rect x="43.5597%" y="677" width="0.1171%" height="15" fill="rgb(250,43,18)"/><text x="43.8097%" y="687.50"></text></g><g><title>do_syscall_64 (1 samples, 0.12%)</title><rect x="43.5597%" y="661" width="0.1171%" height="15" fill="rgb(208,13,10)"/><text x="43.8097%" y="671.50"></text></g><g><title>__x64_sys_openat (1 samples, 0.12%)</title><rect x="43.5597%" y="645" width="0.1171%" height="15" fill="rgb(212,200,36)"/><text x="43.8097%" y="655.50"></text></g><g><title>do_sys_openat2 (1 samples, 0.12%)</title><rect x="43.5597%" y="629" width="0.1171%" height="15" fill="rgb(225,90,30)"/><text x="43.8097%" y="639.50"></text></g><g><title>do_filp_open (1 samples, 0.12%)</title><rect x="43.5597%" y="613" width="0.1171%" height="15" fill="rgb(236,182,39)"/><text x="43.8097%" y="623.50"></text></g><g><title>path_openat (1 samples, 0.12%)</title><rect x="43.5597%" y="597" width="0.1171%" height="15" fill="rgb(212,144,35)"/><text x="43.8097%" y="607.50"></text></g><g><title>link_path_walk (1 samples, 0.12%)</title><rect x="43.5597%" y="581" width="0.1171%" height="15" fill="rgb(228,63,44)"/><text x="43.8097%" y="591.50"></text></g><g><title>inode_permission.part.0 (1 samples, 0.12%)</title><rect x="43.5597%" y="565" width="0.1171%" height="15" fill="rgb(228,109,6)"/><text x="43.8097%" y="575.50"></text></g><g><title>kernfs_iop_permission (1 samples, 0.12%)</title><rect x="43.5597%" y="549" width="0.1171%" height="15" fill="rgb(238,117,24)"/><text x="43.8097%" y="559.50"></text></g><g><title>std::rt::lang_start_internal (2 samples, 0.23%)</title><rect x="43.5597%" y="901" width="0.2342%" height="15" fill="rgb(242,26,26)"/><text x="43.8097%" y="911.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.23%)</title><rect x="43.5597%" y="885" width="0.2342%" height="15" fill="rgb(221,92,48)"/><text x="43.8097%" y="895.50"></text></g><g><title>std::panicking::try (2 samples, 0.23%)</title><rect x="43.5597%" y="869" width="0.2342%" height="15" fill="rgb(209,209,32)"/><text x="43.8097%" y="879.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.23%)</title><rect x="43.5597%" y="853" width="0.2342%" height="15" fill="rgb(221,70,22)"/><text x="43.8097%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (2 samples, 0.23%)</title><rect x="43.5597%" y="837" width="0.2342%" height="15" fill="rgb(248,145,5)"/><text x="43.8097%" y="847.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (2 samples, 0.23%)</title><rect x="43.5597%" y="821" width="0.2342%" height="15" fill="rgb(226,116,26)"/><text x="43.8097%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2 samples, 0.23%)</title><rect x="43.5597%" y="805" width="0.2342%" height="15" fill="rgb(244,5,17)"/><text x="43.8097%" y="815.50"></text></g><g><title>lobsters::main (2 samples, 0.23%)</title><rect x="43.5597%" y="789" width="0.2342%" height="15" fill="rgb(252,159,33)"/><text x="43.8097%" y="799.50"></text></g><g><title>hwloc::Topology::new (2 samples, 0.23%)</title><rect x="43.5597%" y="773" width="0.2342%" height="15" fill="rgb(206,71,0)"/><text x="43.8097%" y="783.50"></text></g><g><title>hwloc_topology_load (2 samples, 0.23%)</title><rect x="43.5597%" y="757" width="0.2342%" height="15" fill="rgb(233,118,54)"/><text x="43.8097%" y="767.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.23%)</title><rect x="43.5597%" y="741" width="0.2342%" height="15" fill="rgb(234,83,48)"/><text x="43.8097%" y="751.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.23%)</title><rect x="43.5597%" y="725" width="0.2342%" height="15" fill="rgb(228,3,54)"/><text x="43.8097%" y="735.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.23%)</title><rect x="43.5597%" y="709" width="0.2342%" height="15" fill="rgb(226,155,13)"/><text x="43.8097%" y="719.50"></text></g><g><title>faccessat (1 samples, 0.12%)</title><rect x="43.6768%" y="693" width="0.1171%" height="15" fill="rgb(241,28,37)"/><text x="43.9268%" y="703.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.12%)</title><rect x="43.6768%" y="677" width="0.1171%" height="15" fill="rgb(233,93,10)"/><text x="43.9268%" y="687.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.12%)</title><rect x="43.6768%" y="661" width="0.1171%" height="15" fill="rgb(225,113,19)"/><text x="43.9268%" y="671.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (2 samples, 0.23%)</title><rect x="43.7939%" y="853" width="0.2342%" height="15" fill="rgb(241,2,18)"/><text x="44.0439%" y="863.50"></text></g><g><title>decor::Shim::create_schema (2 samples, 0.23%)</title><rect x="43.7939%" y="837" width="0.2342%" height="15" fill="rgb(228,207,21)"/><text x="44.0439%" y="847.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (2 samples, 0.23%)</title><rect x="43.7939%" y="821" width="0.2342%" height="15" fill="rgb(213,211,35)"/><text x="44.0439%" y="831.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (2 samples, 0.23%)</title><rect x="43.7939%" y="805" width="0.2342%" height="15" fill="rgb(209,83,10)"/><text x="44.0439%" y="815.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.23%)</title><rect x="43.7939%" y="789" width="0.2342%" height="15" fill="rgb(209,164,1)"/><text x="44.0439%" y="799.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (2 samples, 0.23%)</title><rect x="43.7939%" y="773" width="0.2342%" height="15" fill="rgb(213,184,43)"/><text x="44.0439%" y="783.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (2 samples, 0.23%)</title><rect x="43.7939%" y="757" width="0.2342%" height="15" fill="rgb(231,61,34)"/><text x="44.0439%" y="767.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (2 samples, 0.23%)</title><rect x="43.7939%" y="741" width="0.2342%" height="15" fill="rgb(235,75,3)"/><text x="44.0439%" y="751.50"></text></g><g><title>std::sys_common::net::TcpStream::write (2 samples, 0.23%)</title><rect x="43.7939%" y="725" width="0.2342%" height="15" fill="rgb(220,106,47)"/><text x="44.0439%" y="735.50"></text></g><g><title>__libc_send (2 samples, 0.23%)</title><rect x="43.7939%" y="709" width="0.2342%" height="15" fill="rgb(210,196,33)"/><text x="44.0439%" y="719.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.23%)</title><rect x="43.7939%" y="693" width="0.2342%" height="15" fill="rgb(229,154,42)"/><text x="44.0439%" y="703.50"></text></g><g><title>do_syscall_64 (2 samples, 0.23%)</title><rect x="43.7939%" y="677" width="0.2342%" height="15" fill="rgb(228,114,26)"/><text x="44.0439%" y="687.50"></text></g><g><title>__x64_sys_sendto (2 samples, 0.23%)</title><rect x="43.7939%" y="661" width="0.2342%" height="15" fill="rgb(208,144,1)"/><text x="44.0439%" y="671.50"></text></g><g><title>__sys_sendto (2 samples, 0.23%)</title><rect x="43.7939%" y="645" width="0.2342%" height="15" fill="rgb(239,112,37)"/><text x="44.0439%" y="655.50"></text></g><g><title>sock_sendmsg (2 samples, 0.23%)</title><rect x="43.7939%" y="629" width="0.2342%" height="15" fill="rgb(210,96,50)"/><text x="44.0439%" y="639.50"></text></g><g><title>tcp_sendmsg (2 samples, 0.23%)</title><rect x="43.7939%" y="613" width="0.2342%" height="15" fill="rgb(222,178,2)"/><text x="44.0439%" y="623.50"></text></g><g><title>tcp_sendmsg_locked (2 samples, 0.23%)</title><rect x="43.7939%" y="597" width="0.2342%" height="15" fill="rgb(226,74,18)"/><text x="44.0439%" y="607.50"></text></g><g><title>__tcp_push_pending_frames (2 samples, 0.23%)</title><rect x="43.7939%" y="581" width="0.2342%" height="15" fill="rgb(225,67,54)"/><text x="44.0439%" y="591.50"></text></g><g><title>tcp_write_xmit (2 samples, 0.23%)</title><rect x="43.7939%" y="565" width="0.2342%" height="15" fill="rgb(251,92,32)"/><text x="44.0439%" y="575.50"></text></g><g><title>__tcp_transmit_skb (2 samples, 0.23%)</title><rect x="43.7939%" y="549" width="0.2342%" height="15" fill="rgb(228,149,22)"/><text x="44.0439%" y="559.50"></text></g><g><title>__ip_queue_xmit (2 samples, 0.23%)</title><rect x="43.7939%" y="533" width="0.2342%" height="15" fill="rgb(243,54,13)"/><text x="44.0439%" y="543.50"></text></g><g><title>ip_output (2 samples, 0.23%)</title><rect x="43.7939%" y="517" width="0.2342%" height="15" fill="rgb(243,180,28)"/><text x="44.0439%" y="527.50"></text></g><g><title>ip_finish_output2 (2 samples, 0.23%)</title><rect x="43.7939%" y="501" width="0.2342%" height="15" fill="rgb(208,167,24)"/><text x="44.0439%" y="511.50"></text></g><g><title>__local_bh_enable_ip (2 samples, 0.23%)</title><rect x="43.7939%" y="485" width="0.2342%" height="15" fill="rgb(245,73,45)"/><text x="44.0439%" y="495.50"></text></g><g><title>do_softirq (2 samples, 0.23%)</title><rect x="43.7939%" y="469" width="0.2342%" height="15" fill="rgb(237,203,48)"/><text x="44.0439%" y="479.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.23%)</title><rect x="43.7939%" y="453" width="0.2342%" height="15" fill="rgb(211,197,16)"/><text x="44.0439%" y="463.50"></text></g><g><title>__do_softirq (2 samples, 0.23%)</title><rect x="43.7939%" y="437" width="0.2342%" height="15" fill="rgb(243,99,51)"/><text x="44.0439%" y="447.50"></text></g><g><title>net_rx_action (2 samples, 0.23%)</title><rect x="43.7939%" y="421" width="0.2342%" height="15" fill="rgb(215,123,29)"/><text x="44.0439%" y="431.50"></text></g><g><title>process_backlog (2 samples, 0.23%)</title><rect x="43.7939%" y="405" width="0.2342%" height="15" fill="rgb(239,186,37)"/><text x="44.0439%" y="415.50"></text></g><g><title>__netif_receive_skb_one_core (2 samples, 0.23%)</title><rect x="43.7939%" y="389" width="0.2342%" height="15" fill="rgb(252,136,39)"/><text x="44.0439%" y="399.50"></text></g><g><title>ip_rcv (2 samples, 0.23%)</title><rect x="43.7939%" y="373" width="0.2342%" height="15" fill="rgb(223,213,32)"/><text x="44.0439%" y="383.50"></text></g><g><title>ip_local_deliver (2 samples, 0.23%)</title><rect x="43.7939%" y="357" width="0.2342%" height="15" fill="rgb(233,115,5)"/><text x="44.0439%" y="367.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.23%)</title><rect x="43.7939%" y="341" width="0.2342%" height="15" fill="rgb(207,226,44)"/><text x="44.0439%" y="351.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.23%)</title><rect x="43.7939%" y="325" width="0.2342%" height="15" fill="rgb(208,126,0)"/><text x="44.0439%" y="335.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.23%)</title><rect x="43.7939%" y="309" width="0.2342%" height="15" fill="rgb(244,66,21)"/><text x="44.0439%" y="319.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.23%)</title><rect x="43.7939%" y="293" width="0.2342%" height="15" fill="rgb(222,97,12)"/><text x="44.0439%" y="303.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.23%)</title><rect x="43.7939%" y="277" width="0.2342%" height="15" fill="rgb(219,213,19)"/><text x="44.0439%" y="287.50"></text></g><g><title>tcp_ack (2 samples, 0.23%)</title><rect x="43.7939%" y="261" width="0.2342%" height="15" fill="rgb(252,169,30)"/><text x="44.0439%" y="271.50"></text></g><g><title>tcp_ack_update_rtt (1 samples, 0.12%)</title><rect x="43.9110%" y="245" width="0.1171%" height="15" fill="rgb(206,32,51)"/><text x="44.1610%" y="255.50"></text></g><g><title>[unknown] (346 samples, 40.52%)</title><rect x="3.6300%" y="917" width="40.5152%" height="15" fill="rgb(250,172,42)"/><text x="3.8800%" y="927.50">[unknown]</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3 samples, 0.35%)</title><rect x="43.7939%" y="901" width="0.3513%" height="15" fill="rgb(209,34,43)"/><text x="44.0439%" y="911.50"></text></g><g><title>decor::Shim::run_on_tcp (3 samples, 0.35%)</title><rect x="43.7939%" y="885" width="0.3513%" height="15" fill="rgb(223,11,35)"/><text x="44.0439%" y="895.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (3 samples, 0.35%)</title><rect x="43.7939%" y="869" width="0.3513%" height="15" fill="rgb(251,219,26)"/><text x="44.0439%" y="879.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (1 samples, 0.12%)</title><rect x="44.0281%" y="853" width="0.1171%" height="15" fill="rgb(231,119,3)"/><text x="44.2781%" y="863.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (1 samples, 0.12%)</title><rect x="44.0281%" y="837" width="0.1171%" height="15" fill="rgb(216,97,11)"/><text x="44.2781%" y="847.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.12%)</title><rect x="44.0281%" y="821" width="0.1171%" height="15" fill="rgb(223,59,9)"/><text x="44.2781%" y="831.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.12%)</title><rect x="44.0281%" y="805" width="0.1171%" height="15" fill="rgb(233,93,31)"/><text x="44.2781%" y="815.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (1 samples, 0.12%)</title><rect x="44.1452%" y="805" width="0.1171%" height="15" fill="rgb(239,81,33)"/><text x="44.3952%" y="815.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.12%)</title><rect x="44.1452%" y="789" width="0.1171%" height="15" fill="rgb(213,120,34)"/><text x="44.3952%" y="799.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.12%)</title><rect x="44.1452%" y="773" width="0.1171%" height="15" fill="rgb(243,49,53)"/><text x="44.3952%" y="783.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.12%)</title><rect x="44.1452%" y="757" width="0.1171%" height="15" fill="rgb(247,216,33)"/><text x="44.3952%" y="767.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="44.1452%" y="741" width="0.1171%" height="15" fill="rgb(226,26,14)"/><text x="44.3952%" y="751.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.12%)</title><rect x="44.1452%" y="725" width="0.1171%" height="15" fill="rgb(215,49,53)"/><text x="44.3952%" y="735.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.12%)</title><rect x="44.1452%" y="709" width="0.1171%" height="15" fill="rgb(245,162,40)"/><text x="44.3952%" y="719.50"></text></g><g><title>std::sys_common::net::TcpStream::read (1 samples, 0.12%)</title><rect x="44.1452%" y="693" width="0.1171%" height="15" fill="rgb(229,68,17)"/><text x="44.3952%" y="703.50"></text></g><g><title>std::sys::unix::net::Socket::read (1 samples, 0.12%)</title><rect x="44.1452%" y="677" width="0.1171%" height="15" fill="rgb(213,182,10)"/><text x="44.3952%" y="687.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (1 samples, 0.12%)</title><rect x="44.1452%" y="661" width="0.1171%" height="15" fill="rgb(245,125,30)"/><text x="44.3952%" y="671.50"></text></g><g><title>__libc_recv (1 samples, 0.12%)</title><rect x="44.1452%" y="645" width="0.1171%" height="15" fill="rgb(232,202,2)"/><text x="44.3952%" y="655.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.12%)</title><rect x="44.1452%" y="629" width="0.1171%" height="15" fill="rgb(237,140,51)"/><text x="44.3952%" y="639.50"></text></g><g><title>do_syscall_64 (1 samples, 0.12%)</title><rect x="44.1452%" y="613" width="0.1171%" height="15" fill="rgb(236,157,25)"/><text x="44.3952%" y="623.50"></text></g><g><title>__x64_sys_recvfrom (1 samples, 0.12%)</title><rect x="44.1452%" y="597" width="0.1171%" height="15" fill="rgb(219,209,0)"/><text x="44.3952%" y="607.50"></text></g><g><title>__sys_recvfrom (1 samples, 0.12%)</title><rect x="44.1452%" y="581" width="0.1171%" height="15" fill="rgb(240,116,54)"/><text x="44.3952%" y="591.50"></text></g><g><title>inet_recvmsg (1 samples, 0.12%)</title><rect x="44.1452%" y="565" width="0.1171%" height="15" fill="rgb(216,10,36)"/><text x="44.3952%" y="575.50"></text></g><g><title>tcp_recvmsg (1 samples, 0.12%)</title><rect x="44.1452%" y="549" width="0.1171%" height="15" fill="rgb(222,72,44)"/><text x="44.3952%" y="559.50"></text></g><g><title>sk_wait_data (1 samples, 0.12%)</title><rect x="44.1452%" y="533" width="0.1171%" height="15" fill="rgb(232,159,9)"/><text x="44.3952%" y="543.50"></text></g><g><title>wait_woken (1 samples, 0.12%)</title><rect x="44.1452%" y="517" width="0.1171%" height="15" fill="rgb(210,39,32)"/><text x="44.3952%" y="527.50"></text></g><g><title>schedule_timeout (1 samples, 0.12%)</title><rect x="44.1452%" y="501" width="0.1171%" height="15" fill="rgb(216,194,45)"/><text x="44.3952%" y="511.50"></text></g><g><title>schedule (1 samples, 0.12%)</title><rect x="44.1452%" y="485" width="0.1171%" height="15" fill="rgb(218,18,35)"/><text x="44.3952%" y="495.50"></text></g><g><title>__schedule (1 samples, 0.12%)</title><rect x="44.1452%" y="469" width="0.1171%" height="15" fill="rgb(207,83,51)"/><text x="44.3952%" y="479.50"></text></g><g><title>psi_task_change (1 samples, 0.12%)</title><rect x="44.1452%" y="453" width="0.1171%" height="15" fill="rgb(225,63,43)"/><text x="44.3952%" y="463.50"></text></g><g><title>psi_group_change (1 samples, 0.12%)</title><rect x="44.1452%" y="437" width="0.1171%" height="15" fill="rgb(207,57,36)"/><text x="44.3952%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.12%)</title><rect x="44.3794%" y="757" width="0.1171%" height="15" fill="rgb(216,99,33)"/><text x="44.6294%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (1 samples, 0.12%)</title><rect x="44.3794%" y="741" width="0.1171%" height="15" fill="rgb(225,42,16)"/><text x="44.6294%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.12%)</title><rect x="44.3794%" y="725" width="0.1171%" height="15" fill="rgb(220,201,45)"/><text x="44.6294%" y="735.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.12%)</title><rect x="44.3794%" y="709" width="0.1171%" height="15" fill="rgb(225,33,4)"/><text x="44.6294%" y="719.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.12%)</title><rect x="44.3794%" y="693" width="0.1171%" height="15" fill="rgb(224,33,50)"/><text x="44.6294%" y="703.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (2 samples, 0.23%)</title><rect x="44.3794%" y="773" width="0.2342%" height="15" fill="rgb(246,198,51)"/><text x="44.6294%" y="783.50"></text></g><g><title>decor::Shim::create_schema (1 samples, 0.12%)</title><rect x="44.4965%" y="757" width="0.1171%" height="15" fill="rgb(205,22,4)"/><text x="44.7465%" y="767.50"></text></g><g><title>core::fmt::write (1 samples, 0.12%)</title><rect x="44.4965%" y="741" width="0.1171%" height="15" fill="rgb(206,3,8)"/><text x="44.7465%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (1 samples, 0.12%)</title><rect x="44.4965%" y="725" width="0.1171%" height="15" fill="rgb(251,23,15)"/><text x="44.7465%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::CreateTableStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.12%)</title><rect x="44.4965%" y="709" width="0.1171%" height="15" fill="rgb(252,88,28)"/><text x="44.7465%" y="719.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.12%)</title><rect x="44.4965%" y="693" width="0.1171%" height="15" fill="rgb(212,127,14)"/><text x="44.7465%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.12%)</title><rect x="44.4965%" y="677" width="0.1171%" height="15" fill="rgb(247,145,37)"/><text x="44.7465%" y="687.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.12%)</title><rect x="44.4965%" y="661" width="0.1171%" height="15" fill="rgb(209,117,53)"/><text x="44.7465%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="44.4965%" y="645" width="0.1171%" height="15" fill="rgb(212,90,42)"/><text x="44.7465%" y="655.50"></text></g><g><title>mysql::conn::Conn::handle_ok (1 samples, 0.12%)</title><rect x="44.8478%" y="709" width="0.1171%" height="15" fill="rgb(218,164,37)"/><text x="45.0978%" y="719.50"></text></g><g><title>__GI___libc_free (1 samples, 0.12%)</title><rect x="44.8478%" y="693" width="0.1171%" height="15" fill="rgb(246,65,34)"/><text x="45.0978%" y="703.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.12%)</title><rect x="44.9649%" y="709" width="0.1171%" height="15" fill="rgb(231,100,33)"/><text x="45.2149%" y="719.50"></text></g><g><title>__GI___libc_free (1 samples, 0.12%)</title><rect x="44.9649%" y="693" width="0.1171%" height="15" fill="rgb(228,126,14)"/><text x="45.2149%" y="703.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (4 samples, 0.47%)</title><rect x="44.7307%" y="725" width="0.4684%" height="15" fill="rgb(215,173,21)"/><text x="44.9807%" y="735.50"></text></g><g><title>mysql_common::packets::parse_ok_packet (1 samples, 0.12%)</title><rect x="45.0820%" y="709" width="0.1171%" height="15" fill="rgb(210,6,40)"/><text x="45.3320%" y="719.50"></text></g><g><title>__ip_local_out (1 samples, 0.12%)</title><rect x="45.6674%" y="469" width="0.1171%" height="15" fill="rgb(212,48,18)"/><text x="45.9174%" y="479.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.12%)</title><rect x="46.1358%" y="405" width="0.1171%" height="15" fill="rgb(230,214,11)"/><text x="46.3858%" y="415.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.23%)</title><rect x="46.1358%" y="421" width="0.2342%" height="15" fill="rgb(254,105,39)"/><text x="46.3858%" y="431.50"></text></g><g><title>loopback_xmit (1 samples, 0.12%)</title><rect x="46.2529%" y="405" width="0.1171%" height="15" fill="rgb(245,158,5)"/><text x="46.5029%" y="415.50"></text></g><g><title>netif_rx (1 samples, 0.12%)</title><rect x="46.2529%" y="389" width="0.1171%" height="15" fill="rgb(249,208,11)"/><text x="46.5029%" y="399.50"></text></g><g><title>netif_rx_internal (1 samples, 0.12%)</title><rect x="46.2529%" y="373" width="0.1171%" height="15" fill="rgb(210,39,28)"/><text x="46.5029%" y="383.50"></text></g><g><title>ktime_get_with_offset (1 samples, 0.12%)</title><rect x="46.2529%" y="357" width="0.1171%" height="15" fill="rgb(211,56,53)"/><text x="46.5029%" y="367.50"></text></g><g><title>read_tsc (1 samples, 0.12%)</title><rect x="46.2529%" y="341" width="0.1171%" height="15" fill="rgb(226,201,30)"/><text x="46.5029%" y="351.50"></text></g><g><title>__dev_queue_xmit (3 samples, 0.35%)</title><rect x="46.1358%" y="437" width="0.3513%" height="15" fill="rgb(239,101,34)"/><text x="46.3858%" y="447.50"></text></g><g><title>validate_xmit_skb (1 samples, 0.12%)</title><rect x="46.3700%" y="421" width="0.1171%" height="15" fill="rgb(226,209,5)"/><text x="46.6200%" y="431.50"></text></g><g><title>__kfree_skb_flush (2 samples, 0.23%)</title><rect x="46.8384%" y="357" width="0.2342%" height="15" fill="rgb(250,105,47)"/><text x="47.0884%" y="367.50"></text></g><g><title>__netif_receive_skb_core (1 samples, 0.12%)</title><rect x="47.0726%" y="325" width="0.1171%" height="15" fill="rgb(230,72,3)"/><text x="47.3226%" y="335.50"></text></g><g><title>__inet_lookup_established (1 samples, 0.12%)</title><rect x="47.6581%" y="245" width="0.1171%" height="15" fill="rgb(232,218,39)"/><text x="47.9081%" y="255.50"></text></g><g><title>sk_reset_timer (2 samples, 0.23%)</title><rect x="47.8923%" y="213" width="0.2342%" height="15" fill="rgb(248,166,6)"/><text x="48.1423%" y="223.50"></text></g><g><title>__mod_timer (2 samples, 0.23%)</title><rect x="47.8923%" y="197" width="0.2342%" height="15" fill="rgb(247,89,20)"/><text x="48.1423%" y="207.50"></text></g><g><title>lock_timer_base.constprop.0 (1 samples, 0.12%)</title><rect x="48.0094%" y="181" width="0.1171%" height="15" fill="rgb(248,130,54)"/><text x="48.2594%" y="191.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.12%)</title><rect x="48.0094%" y="165" width="0.1171%" height="15" fill="rgb(234,196,4)"/><text x="48.2594%" y="175.50"></text></g><g><title>psi_task_change (2 samples, 0.23%)</title><rect x="48.3607%" y="117" width="0.2342%" height="15" fill="rgb(250,143,31)"/><text x="48.6107%" y="127.50"></text></g><g><title>psi_group_change (2 samples, 0.23%)</title><rect x="48.3607%" y="101" width="0.2342%" height="15" fill="rgb(211,110,34)"/><text x="48.6107%" y="111.50"></text></g><g><title>record_times (2 samples, 0.23%)</title><rect x="48.3607%" y="85" width="0.2342%" height="15" fill="rgb(215,124,48)"/><text x="48.6107%" y="95.50"></text></g><g><title>sched_clock_cpu (2 samples, 0.23%)</title><rect x="48.3607%" y="69" width="0.2342%" height="15" fill="rgb(216,46,13)"/><text x="48.6107%" y="79.50"></text></g><g><title>sched_clock (1 samples, 0.12%)</title><rect x="48.4778%" y="53" width="0.1171%" height="15" fill="rgb(205,184,25)"/><text x="48.7278%" y="63.50"></text></g><g><title>native_sched_clock (1 samples, 0.12%)</title><rect x="48.4778%" y="37" width="0.1171%" height="15" fill="rgb(228,1,10)"/><text x="48.7278%" y="47.50"></text></g><g><title>enqueue_task (3 samples, 0.35%)</title><rect x="48.3607%" y="133" width="0.3513%" height="15" fill="rgb(213,116,27)"/><text x="48.6107%" y="143.50"></text></g><g><title>uclamp_rq_inc_id (1 samples, 0.12%)</title><rect x="48.5948%" y="117" width="0.1171%" height="15" fill="rgb(241,95,50)"/><text x="48.8448%" y="127.50"></text></g><g><title>account_entity_enqueue (1 samples, 0.12%)</title><rect x="48.7119%" y="101" width="0.1171%" height="15" fill="rgb(238,48,32)"/><text x="48.9619%" y="111.50"></text></g><g><title>enqueue_task_fair (2 samples, 0.23%)</title><rect x="48.7119%" y="133" width="0.2342%" height="15" fill="rgb(235,113,49)"/><text x="48.9619%" y="143.50"></text></g><g><title>enqueue_entity (2 samples, 0.23%)</title><rect x="48.7119%" y="117" width="0.2342%" height="15" fill="rgb(205,127,43)"/><text x="48.9619%" y="127.50"></text></g><g><title>update_load_avg (1 samples, 0.12%)</title><rect x="48.8290%" y="101" width="0.1171%" height="15" fill="rgb(250,162,2)"/><text x="49.0790%" y="111.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.12%)</title><rect x="48.8290%" y="85" width="0.1171%" height="15" fill="rgb(220,13,41)"/><text x="49.0790%" y="95.50"></text></g><g><title>select_task_rq_fair (3 samples, 0.35%)</title><rect x="48.9461%" y="133" width="0.3513%" height="15" fill="rgb(249,221,25)"/><text x="49.1961%" y="143.50"></text></g><g><title>available_idle_cpu (2 samples, 0.23%)</title><rect x="49.0632%" y="117" width="0.2342%" height="15" fill="rgb(215,208,19)"/><text x="49.3132%" y="127.50"></text></g><g><title>ttwu_do_wakeup (1 samples, 0.12%)</title><rect x="49.2974%" y="133" width="0.1171%" height="15" fill="rgb(236,175,2)"/><text x="49.5474%" y="143.50"></text></g><g><title>check_preempt_curr (1 samples, 0.12%)</title><rect x="49.2974%" y="117" width="0.1171%" height="15" fill="rgb(241,52,2)"/><text x="49.5474%" y="127.50"></text></g><g><title>resched_curr (1 samples, 0.12%)</title><rect x="49.2974%" y="101" width="0.1171%" height="15" fill="rgb(248,140,14)"/><text x="49.5474%" y="111.50"></text></g><g><title>sock_def_readable (12 samples, 1.41%)</title><rect x="48.1265%" y="213" width="1.4052%" height="15" fill="rgb(253,22,42)"/><text x="48.3765%" y="223.50"></text></g><g><title>__wake_up_common_lock (12 samples, 1.41%)</title><rect x="48.1265%" y="197" width="1.4052%" height="15" fill="rgb(234,61,47)"/><text x="48.3765%" y="207.50"></text></g><g><title>__wake_up_common (11 samples, 1.29%)</title><rect x="48.2436%" y="181" width="1.2881%" height="15" fill="rgb(208,226,15)"/><text x="48.4936%" y="191.50"></text></g><g><title>pollwake (11 samples, 1.29%)</title><rect x="48.2436%" y="165" width="1.2881%" height="15" fill="rgb(217,221,4)"/><text x="48.4936%" y="175.50"></text></g><g><title>try_to_wake_up (11 samples, 1.29%)</title><rect x="48.2436%" y="149" width="1.2881%" height="15" fill="rgb(212,174,34)"/><text x="48.4936%" y="159.50"></text></g><g><title>update_rq_clock (1 samples, 0.12%)</title><rect x="49.4145%" y="133" width="0.1171%" height="15" fill="rgb(253,83,4)"/><text x="49.6645%" y="143.50"></text></g><g><title>__slab_free (1 samples, 0.12%)</title><rect x="49.7658%" y="165" width="0.1171%" height="15" fill="rgb(250,195,49)"/><text x="50.0158%" y="175.50"></text></g><g><title>kfree (2 samples, 0.23%)</title><rect x="49.7658%" y="181" width="0.2342%" height="15" fill="rgb(241,192,25)"/><text x="50.0158%" y="191.50"></text></g><g><title>slab_free_freelist_hook (1 samples, 0.12%)</title><rect x="49.8829%" y="165" width="0.1171%" height="15" fill="rgb(208,124,10)"/><text x="50.1329%" y="175.50"></text></g><g><title>__kfree_skb (6 samples, 0.70%)</title><rect x="49.7658%" y="197" width="0.7026%" height="15" fill="rgb(222,33,0)"/><text x="50.0158%" y="207.50"></text></g><g><title>skb_release_data (4 samples, 0.47%)</title><rect x="50.0000%" y="181" width="0.4684%" height="15" fill="rgb(234,209,28)"/><text x="50.2500%" y="191.50"></text></g><g><title>bictcp_cong_avoid (1 samples, 0.12%)</title><rect x="50.4684%" y="197" width="0.1171%" height="15" fill="rgb(224,11,23)"/><text x="50.7184%" y="207.50"></text></g><g><title>tcp_newly_delivered (1 samples, 0.12%)</title><rect x="50.5855%" y="197" width="0.1171%" height="15" fill="rgb(232,99,1)"/><text x="50.8355%" y="207.50"></text></g><g><title>tcp_rate_gen (1 samples, 0.12%)</title><rect x="50.7026%" y="197" width="0.1171%" height="15" fill="rgb(237,95,45)"/><text x="50.9526%" y="207.50"></text></g><g><title>tcp_ack (12 samples, 1.41%)</title><rect x="49.5316%" y="213" width="1.4052%" height="15" fill="rgb(208,109,11)"/><text x="49.7816%" y="223.50"></text></g><g><title>tcp_update_pacing_rate (1 samples, 0.12%)</title><rect x="50.8197%" y="197" width="0.1171%" height="15" fill="rgb(216,190,48)"/><text x="51.0697%" y="207.50"></text></g><g><title>__ip_queue_xmit (48 samples, 5.62%)</title><rect x="45.4333%" y="485" width="5.6206%" height="15" fill="rgb(251,171,36)"/><text x="45.6833%" y="495.50">__ip_qu..</text></g><g><title>ip_output (45 samples, 5.27%)</title><rect x="45.7845%" y="469" width="5.2693%" height="15" fill="rgb(230,62,22)"/><text x="46.0345%" y="479.50">ip_out..</text></g><g><title>ip_finish_output2 (44 samples, 5.15%)</title><rect x="45.9016%" y="453" width="5.1522%" height="15" fill="rgb(225,114,35)"/><text x="46.1516%" y="463.50">ip_fin..</text></g><g><title>__local_bh_enable_ip (39 samples, 4.57%)</title><rect x="46.4871%" y="437" width="4.5667%" height="15" fill="rgb(215,118,42)"/><text x="46.7371%" y="447.50">__loc..</text></g><g><title>do_softirq (39 samples, 4.57%)</title><rect x="46.4871%" y="421" width="4.5667%" height="15" fill="rgb(243,119,21)"/><text x="46.7371%" y="431.50">do_so..</text></g><g><title>do_softirq_own_stack (38 samples, 4.45%)</title><rect x="46.6042%" y="405" width="4.4496%" height="15" fill="rgb(252,177,53)"/><text x="46.8542%" y="415.50">do_so..</text></g><g><title>__do_softirq (38 samples, 4.45%)</title><rect x="46.6042%" y="389" width="4.4496%" height="15" fill="rgb(237,209,29)"/><text x="46.8542%" y="399.50">__do_..</text></g><g><title>net_rx_action (37 samples, 4.33%)</title><rect x="46.7213%" y="373" width="4.3326%" height="15" fill="rgb(212,65,23)"/><text x="46.9713%" y="383.50">net_r..</text></g><g><title>process_backlog (34 samples, 3.98%)</title><rect x="47.0726%" y="357" width="3.9813%" height="15" fill="rgb(230,222,46)"/><text x="47.3226%" y="367.50">proc..</text></g><g><title>__netif_receive_skb_one_core (34 samples, 3.98%)</title><rect x="47.0726%" y="341" width="3.9813%" height="15" fill="rgb(215,135,32)"/><text x="47.3226%" y="351.50">__ne..</text></g><g><title>ip_rcv (33 samples, 3.86%)</title><rect x="47.1897%" y="325" width="3.8642%" height="15" fill="rgb(246,101,22)"/><text x="47.4397%" y="335.50">ip_r..</text></g><g><title>ip_local_deliver (32 samples, 3.75%)</title><rect x="47.3068%" y="309" width="3.7471%" height="15" fill="rgb(206,107,13)"/><text x="47.5568%" y="319.50">ip_l..</text></g><g><title>ip_local_deliver_finish (31 samples, 3.63%)</title><rect x="47.4239%" y="293" width="3.6300%" height="15" fill="rgb(250,100,44)"/><text x="47.6739%" y="303.50">ip_l..</text></g><g><title>ip_protocol_deliver_rcu (31 samples, 3.63%)</title><rect x="47.4239%" y="277" width="3.6300%" height="15" fill="rgb(231,147,38)"/><text x="47.6739%" y="287.50">ip_p..</text></g><g><title>tcp_v4_rcv (30 samples, 3.51%)</title><rect x="47.5410%" y="261" width="3.5129%" height="15" fill="rgb(229,8,40)"/><text x="47.7910%" y="271.50">tcp..</text></g><g><title>tcp_v4_do_rcv (28 samples, 3.28%)</title><rect x="47.7752%" y="245" width="3.2787%" height="15" fill="rgb(221,135,30)"/><text x="48.0252%" y="255.50">tcp..</text></g><g><title>tcp_rcv_established (28 samples, 3.28%)</title><rect x="47.7752%" y="229" width="3.2787%" height="15" fill="rgb(249,193,18)"/><text x="48.0252%" y="239.50">tcp..</text></g><g><title>tcp_mstamp_refresh (1 samples, 0.12%)</title><rect x="50.9368%" y="213" width="0.1171%" height="15" fill="rgb(209,133,39)"/><text x="51.1868%" y="223.50"></text></g><g><title>ktime_get (1 samples, 0.12%)</title><rect x="50.9368%" y="197" width="0.1171%" height="15" fill="rgb(232,100,14)"/><text x="51.1868%" y="207.50"></text></g><g><title>__tcp_transmit_skb (49 samples, 5.74%)</title><rect x="45.4333%" y="501" width="5.7377%" height="15" fill="rgb(224,185,1)"/><text x="45.6833%" y="511.50">__tcp_t..</text></g><g><title>tcp_v4_send_check (1 samples, 0.12%)</title><rect x="51.0539%" y="485" width="0.1171%" height="15" fill="rgb(223,139,8)"/><text x="51.3039%" y="495.50"></text></g><g><title>ktime_get (2 samples, 0.23%)</title><rect x="51.1710%" y="501" width="0.2342%" height="15" fill="rgb(232,213,38)"/><text x="51.4210%" y="511.50"></text></g><g><title>read_tsc (1 samples, 0.12%)</title><rect x="51.2881%" y="485" width="0.1171%" height="15" fill="rgb(207,94,22)"/><text x="51.5381%" y="495.50"></text></g><g><title>__tcp_push_pending_frames (52 samples, 6.09%)</title><rect x="45.4333%" y="533" width="6.0890%" height="15" fill="rgb(219,183,54)"/><text x="45.6833%" y="543.50">__tcp_pu..</text></g><g><title>tcp_write_xmit (52 samples, 6.09%)</title><rect x="45.4333%" y="517" width="6.0890%" height="15" fill="rgb(216,185,54)"/><text x="45.6833%" y="527.50">tcp_writ..</text></g><g><title>tcp_event_new_data_sent (1 samples, 0.12%)</title><rect x="51.4052%" y="501" width="0.1171%" height="15" fill="rgb(254,217,39)"/><text x="51.6552%" y="511.50"></text></g><g><title>sk_reset_timer (1 samples, 0.12%)</title><rect x="51.4052%" y="485" width="0.1171%" height="15" fill="rgb(240,178,23)"/><text x="51.6552%" y="495.50"></text></g><g><title>skb_do_copy_data_nocache (2 samples, 0.23%)</title><rect x="51.5222%" y="533" width="0.2342%" height="15" fill="rgb(218,11,47)"/><text x="51.7722%" y="543.50"></text></g><g><title>_copy_from_iter_full (2 samples, 0.23%)</title><rect x="51.5222%" y="517" width="0.2342%" height="15" fill="rgb(218,51,51)"/><text x="51.7722%" y="527.50"></text></g><g><title>iov_iter_advance (1 samples, 0.12%)</title><rect x="51.6393%" y="501" width="0.1171%" height="15" fill="rgb(238,126,27)"/><text x="51.8893%" y="511.50"></text></g><g><title>sock_sendmsg (55 samples, 6.44%)</title><rect x="45.4333%" y="581" width="6.4403%" height="15" fill="rgb(249,202,22)"/><text x="45.6833%" y="591.50">sock_sen..</text></g><g><title>tcp_sendmsg (55 samples, 6.44%)</title><rect x="45.4333%" y="565" width="6.4403%" height="15" fill="rgb(254,195,49)"/><text x="45.6833%" y="575.50">tcp_send..</text></g><g><title>tcp_sendmsg_locked (55 samples, 6.44%)</title><rect x="45.4333%" y="549" width="6.4403%" height="15" fill="rgb(208,123,14)"/><text x="45.6833%" y="559.50">tcp_send..</text></g><g><title>tcp_stream_memory_free (1 samples, 0.12%)</title><rect x="51.7564%" y="533" width="0.1171%" height="15" fill="rgb(224,200,8)"/><text x="52.0064%" y="543.50"></text></g><g><title>do_syscall_64 (56 samples, 6.56%)</title><rect x="45.4333%" y="629" width="6.5574%" height="15" fill="rgb(217,61,36)"/><text x="45.6833%" y="639.50">do_syscal..</text></g><g><title>__x64_sys_sendto (56 samples, 6.56%)</title><rect x="45.4333%" y="613" width="6.5574%" height="15" fill="rgb(206,35,45)"/><text x="45.6833%" y="623.50">__x64_sys..</text></g><g><title>__sys_sendto (56 samples, 6.56%)</title><rect x="45.4333%" y="597" width="6.5574%" height="15" fill="rgb(217,65,33)"/><text x="45.6833%" y="607.50">__sys_sen..</text></g><g><title>sockfd_lookup_light (1 samples, 0.12%)</title><rect x="51.8735%" y="581" width="0.1171%" height="15" fill="rgb(222,158,48)"/><text x="52.1235%" y="591.50"></text></g><g><title>__fget_light (1 samples, 0.12%)</title><rect x="51.8735%" y="565" width="0.1171%" height="15" fill="rgb(254,2,54)"/><text x="52.1235%" y="575.50"></text></g><g><title>__fget_files (1 samples, 0.12%)</title><rect x="51.8735%" y="549" width="0.1171%" height="15" fill="rgb(250,143,38)"/><text x="52.1235%" y="559.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (64 samples, 7.49%)</title><rect x="44.6136%" y="757" width="7.4941%" height="15" fill="rgb(248,25,0)"/><text x="44.8636%" y="767.50">&lt;mysql::co..</text></g><g><title>mysql::conn::Conn::_query (63 samples, 7.38%)</title><rect x="44.7307%" y="741" width="7.3770%" height="15" fill="rgb(206,152,27)"/><text x="44.9807%" y="751.50">mysql::con..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (59 samples, 6.91%)</title><rect x="45.1991%" y="725" width="6.9087%" height="15" fill="rgb(240,77,30)"/><text x="45.4491%" y="735.50">mysql_com..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (58 samples, 6.79%)</title><rect x="45.3162%" y="709" width="6.7916%" height="15" fill="rgb(231,5,3)"/><text x="45.5662%" y="719.50">std::io::..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (58 samples, 6.79%)</title><rect x="45.3162%" y="693" width="6.7916%" height="15" fill="rgb(207,226,32)"/><text x="45.5662%" y="703.50">&lt;std::net..</text></g><g><title>std::sys_common::net::TcpStream::write (58 samples, 6.79%)</title><rect x="45.3162%" y="677" width="6.7916%" height="15" fill="rgb(222,207,47)"/><text x="45.5662%" y="687.50">std::sys_..</text></g><g><title>__libc_send (58 samples, 6.79%)</title><rect x="45.3162%" y="661" width="6.7916%" height="15" fill="rgb(229,115,45)"/><text x="45.5662%" y="671.50">__libc_se..</text></g><g><title>entry_SYSCALL_64 (58 samples, 6.79%)</title><rect x="45.3162%" y="645" width="6.7916%" height="15" fill="rgb(224,191,6)"/><text x="45.5662%" y="655.50">entry_SYS..</text></g><g><title>prepare_exit_to_usermode (1 samples, 0.12%)</title><rect x="51.9906%" y="629" width="0.1171%" height="15" fill="rgb(230,227,24)"/><text x="52.2406%" y="639.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.12%)</title><rect x="52.1077%" y="757" width="0.1171%" height="15" fill="rgb(228,80,19)"/><text x="52.3577%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="52.2248%" y="757" width="0.1171%" height="15" fill="rgb(247,229,0)"/><text x="52.4748%" y="767.50"></text></g><g><title>_int_free (1 samples, 0.12%)</title><rect x="52.3419%" y="757" width="0.1171%" height="15" fill="rgb(237,194,15)"/><text x="52.5919%" y="767.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.12%)</title><rect x="52.4590%" y="741" width="0.1171%" height="15" fill="rgb(219,203,20)"/><text x="52.7090%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (5 samples, 0.59%)</title><rect x="52.5761%" y="693" width="0.5855%" height="15" fill="rgb(234,128,8)"/><text x="52.8261%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (5 samples, 0.59%)</title><rect x="52.5761%" y="677" width="0.5855%" height="15" fill="rgb(248,202,8)"/><text x="52.8261%" y="687.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (5 samples, 0.59%)</title><rect x="52.5761%" y="661" width="0.5855%" height="15" fill="rgb(206,104,37)"/><text x="52.8261%" y="671.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (4 samples, 0.47%)</title><rect x="52.6932%" y="645" width="0.4684%" height="15" fill="rgb(223,8,27)"/><text x="52.9432%" y="655.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (4 samples, 0.47%)</title><rect x="52.6932%" y="629" width="0.4684%" height="15" fill="rgb(216,217,28)"/><text x="52.9432%" y="639.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (4 samples, 0.47%)</title><rect x="52.6932%" y="613" width="0.4684%" height="15" fill="rgb(249,199,1)"/><text x="52.9432%" y="623.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (4 samples, 0.47%)</title><rect x="52.6932%" y="597" width="0.4684%" height="15" fill="rgb(240,85,17)"/><text x="52.9432%" y="607.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (3 samples, 0.35%)</title><rect x="52.8103%" y="581" width="0.3513%" height="15" fill="rgb(206,108,45)"/><text x="53.0603%" y="591.50"></text></g><g><title>_int_free (1 samples, 0.12%)</title><rect x="53.2787%" y="661" width="0.1171%" height="15" fill="rgb(245,210,41)"/><text x="53.5287%" y="671.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="53.3958%" y="645" width="0.1171%" height="15" fill="rgb(206,13,37)"/><text x="53.6458%" y="655.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.12%)</title><rect x="53.3958%" y="629" width="0.1171%" height="15" fill="rgb(250,61,18)"/><text x="53.6458%" y="639.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (2 samples, 0.23%)</title><rect x="53.3958%" y="661" width="0.2342%" height="15" fill="rgb(235,172,48)"/><text x="53.6458%" y="671.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.12%)</title><rect x="53.5129%" y="645" width="0.1171%" height="15" fill="rgb(249,201,17)"/><text x="53.7629%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.12%)</title><rect x="53.5129%" y="629" width="0.1171%" height="15" fill="rgb(219,208,6)"/><text x="53.7629%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (1 samples, 0.12%)</title><rect x="53.5129%" y="613" width="0.1171%" height="15" fill="rgb(248,31,23)"/><text x="53.7629%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (5 samples, 0.59%)</title><rect x="53.1616%" y="693" width="0.5855%" height="15" fill="rgb(245,15,42)"/><text x="53.4116%" y="703.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (5 samples, 0.59%)</title><rect x="53.1616%" y="677" width="0.5855%" height="15" fill="rgb(222,217,39)"/><text x="53.4116%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (1 samples, 0.12%)</title><rect x="53.6300%" y="661" width="0.1171%" height="15" fill="rgb(210,219,27)"/><text x="53.8800%" y="671.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.12%)</title><rect x="53.7471%" y="677" width="0.1171%" height="15" fill="rgb(252,166,36)"/><text x="53.9971%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (12 samples, 1.41%)</title><rect x="52.5761%" y="709" width="1.4052%" height="15" fill="rgb(245,132,34)"/><text x="52.8261%" y="719.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.23%)</title><rect x="53.7471%" y="693" width="0.2342%" height="15" fill="rgb(236,54,3)"/><text x="53.9971%" y="703.50"></text></g><g><title>_int_free (1 samples, 0.12%)</title><rect x="53.8642%" y="677" width="0.1171%" height="15" fill="rgb(241,173,43)"/><text x="54.1142%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (16 samples, 1.87%)</title><rect x="52.5761%" y="725" width="1.8735%" height="15" fill="rgb(215,190,9)"/><text x="52.8261%" y="735.50">&lt;..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (4 samples, 0.47%)</title><rect x="53.9813%" y="709" width="0.4684%" height="15" fill="rgb(242,101,16)"/><text x="54.2313%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.35%)</title><rect x="54.0984%" y="693" width="0.3513%" height="15" fill="rgb(223,190,21)"/><text x="54.3484%" y="703.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.35%)</title><rect x="54.0984%" y="677" width="0.3513%" height="15" fill="rgb(215,228,25)"/><text x="54.3484%" y="687.50"></text></g><g><title>_int_realloc (2 samples, 0.23%)</title><rect x="54.2155%" y="661" width="0.2342%" height="15" fill="rgb(225,36,22)"/><text x="54.4655%" y="671.50"></text></g><g><title>_int_malloc (1 samples, 0.12%)</title><rect x="54.3326%" y="645" width="0.1171%" height="15" fill="rgb(251,106,46)"/><text x="54.5826%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.12%)</title><rect x="54.4496%" y="725" width="0.1171%" height="15" fill="rgb(208,90,1)"/><text x="54.6996%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Values as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.12%)</title><rect x="54.4496%" y="709" width="0.1171%" height="15" fill="rgb(243,10,4)"/><text x="54.6996%" y="719.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.12%)</title><rect x="54.4496%" y="693" width="0.1171%" height="15" fill="rgb(212,137,27)"/><text x="54.6996%" y="703.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.12%)</title><rect x="54.4496%" y="677" width="0.1171%" height="15" fill="rgb(231,220,49)"/><text x="54.6996%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.12%)</title><rect x="54.5667%" y="725" width="0.1171%" height="15" fill="rgb(237,96,20)"/><text x="54.8167%" y="735.50"></text></g><g><title>__GI___libc_free (1 samples, 0.12%)</title><rect x="54.6838%" y="677" width="0.1171%" height="15" fill="rgb(239,229,30)"/><text x="54.9338%" y="687.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.12%)</title><rect x="54.9180%" y="661" width="0.1171%" height="15" fill="rgb(219,65,33)"/><text x="55.1680%" y="671.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.12%)</title><rect x="55.0351%" y="533" width="0.1171%" height="15" fill="rgb(243,134,7)"/><text x="55.2851%" y="543.50"></text></g><g><title>alloc::string::String::with_capacity (2 samples, 0.23%)</title><rect x="55.0351%" y="661" width="0.2342%" height="15" fill="rgb(216,177,54)"/><text x="55.2851%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.23%)</title><rect x="55.0351%" y="645" width="0.2342%" height="15" fill="rgb(211,160,20)"/><text x="55.2851%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.23%)</title><rect x="55.0351%" y="629" width="0.2342%" height="15" fill="rgb(239,85,39)"/><text x="55.2851%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.23%)</title><rect x="55.0351%" y="613" width="0.2342%" height="15" fill="rgb(232,125,22)"/><text x="55.2851%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.23%)</title><rect x="55.0351%" y="597" width="0.2342%" height="15" fill="rgb(244,57,34)"/><text x="55.2851%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.23%)</title><rect x="55.0351%" y="581" width="0.2342%" height="15" fill="rgb(214,203,32)"/><text x="55.2851%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.23%)</title><rect x="55.0351%" y="565" width="0.2342%" height="15" fill="rgb(207,58,43)"/><text x="55.2851%" y="575.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.23%)</title><rect x="55.0351%" y="549" width="0.2342%" height="15" fill="rgb(215,193,15)"/><text x="55.2851%" y="559.50"></text></g><g><title>__rdl_alloc (1 samples, 0.12%)</title><rect x="55.1522%" y="533" width="0.1171%" height="15" fill="rgb(232,15,44)"/><text x="55.4022%" y="543.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.12%)</title><rect x="55.1522%" y="517" width="0.1171%" height="15" fill="rgb(212,3,48)"/><text x="55.4022%" y="527.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (1 samples, 0.12%)</title><rect x="55.5035%" y="613" width="0.1171%" height="15" fill="rgb(218,128,7)"/><text x="55.7535%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (9 samples, 1.05%)</title><rect x="54.6838%" y="709" width="1.0539%" height="15" fill="rgb(226,216,39)"/><text x="54.9338%" y="719.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (9 samples, 1.05%)</title><rect x="54.6838%" y="693" width="1.0539%" height="15" fill="rgb(243,47,51)"/><text x="54.9338%" y="703.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (8 samples, 0.94%)</title><rect x="54.8009%" y="677" width="0.9368%" height="15" fill="rgb(241,183,40)"/><text x="55.0509%" y="687.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (4 samples, 0.47%)</title><rect x="55.2693%" y="661" width="0.4684%" height="15" fill="rgb(231,217,32)"/><text x="55.5193%" y="671.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (4 samples, 0.47%)</title><rect x="55.2693%" y="645" width="0.4684%" height="15" fill="rgb(229,61,38)"/><text x="55.5193%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (4 samples, 0.47%)</title><rect x="55.2693%" y="629" width="0.4684%" height="15" fill="rgb(225,210,5)"/><text x="55.5193%" y="639.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table::{{closure}} (1 samples, 0.12%)</title><rect x="55.6206%" y="613" width="0.1171%" height="15" fill="rgb(231,79,45)"/><text x="55.8706%" y="623.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for char&gt;::cmp (1 samples, 0.12%)</title><rect x="55.6206%" y="597" width="0.1171%" height="15" fill="rgb(224,100,7)"/><text x="55.8706%" y="607.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.12%)</title><rect x="55.8548%" y="661" width="0.1171%" height="15" fill="rgb(241,198,18)"/><text x="56.1048%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.35%)</title><rect x="55.7377%" y="709" width="0.3513%" height="15" fill="rgb(252,97,53)"/><text x="55.9877%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.35%)</title><rect x="55.7377%" y="693" width="0.3513%" height="15" fill="rgb(220,88,7)"/><text x="55.9877%" y="703.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (3 samples, 0.35%)</title><rect x="55.7377%" y="677" width="0.3513%" height="15" fill="rgb(213,176,14)"/><text x="55.9877%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="55.9719%" y="661" width="0.1171%" height="15" fill="rgb(246,73,7)"/><text x="56.2219%" y="671.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.12%)</title><rect x="55.9719%" y="645" width="0.1171%" height="15" fill="rgb(245,64,36)"/><text x="56.2219%" y="655.50"></text></g><g><title>_int_realloc (1 samples, 0.12%)</title><rect x="55.9719%" y="629" width="0.1171%" height="15" fill="rgb(245,80,10)"/><text x="56.2219%" y="639.50"></text></g><g><title>_int_malloc (1 samples, 0.12%)</title><rect x="55.9719%" y="613" width="0.1171%" height="15" fill="rgb(232,107,50)"/><text x="56.2219%" y="623.50"></text></g><g><title>_int_free (1 samples, 0.12%)</title><rect x="56.0890%" y="693" width="0.1171%" height="15" fill="rgb(253,3,0)"/><text x="56.3390%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.23%)</title><rect x="56.2061%" y="693" width="0.2342%" height="15" fill="rgb(212,99,53)"/><text x="56.4561%" y="703.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.23%)</title><rect x="56.2061%" y="677" width="0.2342%" height="15" fill="rgb(249,111,54)"/><text x="56.4561%" y="687.50"></text></g><g><title>_int_realloc (2 samples, 0.23%)</title><rect x="56.2061%" y="661" width="0.2342%" height="15" fill="rgb(249,55,30)"/><text x="56.4561%" y="671.50"></text></g><g><title>_int_free (1 samples, 0.12%)</title><rect x="56.3232%" y="645" width="0.1171%" height="15" fill="rgb(237,47,42)"/><text x="56.5732%" y="655.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.12%)</title><rect x="56.4403%" y="677" width="0.1171%" height="15" fill="rgb(211,20,18)"/><text x="56.6903%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="56.4403%" y="661" width="0.1171%" height="15" fill="rgb(231,203,46)"/><text x="56.6903%" y="671.50"></text></g><g><title>__rust_alloc (1 samples, 0.12%)</title><rect x="56.4403%" y="645" width="0.1171%" height="15" fill="rgb(237,142,3)"/><text x="56.6903%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="56.5574%" y="677" width="0.1171%" height="15" fill="rgb(241,107,1)"/><text x="56.8074%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.12%)</title><rect x="56.5574%" y="661" width="0.1171%" height="15" fill="rgb(229,83,13)"/><text x="56.8074%" y="671.50"></text></g><g><title>core::fmt::write (37 samples, 4.33%)</title><rect x="52.4590%" y="757" width="4.3326%" height="15" fill="rgb(241,91,40)"/><text x="52.7090%" y="767.50">core:..</text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (36 samples, 4.22%)</title><rect x="52.5761%" y="741" width="4.2155%" height="15" fill="rgb(225,3,45)"/><text x="52.8261%" y="751.50">&lt;sql_..</text></g><g><title>&lt;sql_parser::ast::defs::statement::UpdateStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (18 samples, 2.11%)</title><rect x="54.6838%" y="725" width="2.1077%" height="15" fill="rgb(244,223,14)"/><text x="54.9338%" y="735.50">&lt;..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (6 samples, 0.70%)</title><rect x="56.0890%" y="709" width="0.7026%" height="15" fill="rgb(224,124,37)"/><text x="56.3390%" y="719.50"></text></g><g><title>core::fmt::write (3 samples, 0.35%)</title><rect x="56.4403%" y="693" width="0.3513%" height="15" fill="rgb(251,171,30)"/><text x="56.6903%" y="703.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (1 samples, 0.12%)</title><rect x="56.6745%" y="677" width="0.1171%" height="15" fill="rgb(236,46,54)"/><text x="56.9245%" y="687.50"></text></g><g><title>_int_free (1 samples, 0.12%)</title><rect x="56.7916%" y="741" width="0.1171%" height="15" fill="rgb(245,213,5)"/><text x="57.0416%" y="751.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.23%)</title><rect x="56.7916%" y="757" width="0.2342%" height="15" fill="rgb(230,144,27)"/><text x="57.0416%" y="767.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.12%)</title><rect x="56.9087%" y="741" width="0.1171%" height="15" fill="rgb(220,86,6)"/><text x="57.1587%" y="751.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.12%)</title><rect x="56.9087%" y="725" width="0.1171%" height="15" fill="rgb(240,20,13)"/><text x="57.1587%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.12%)</title><rect x="57.0258%" y="741" width="0.1171%" height="15" fill="rgb(217,89,34)"/><text x="57.2758%" y="751.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="57.1429%" y="741" width="0.1171%" height="15" fill="rgb(229,13,5)"/><text x="57.3929%" y="751.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (109 samples, 12.76%)</title><rect x="44.6136%" y="773" width="12.7635%" height="15" fill="rgb(244,67,35)"/><text x="44.8636%" y="783.50">&lt;decor::Shim as msq..</text></g><g><title>decor::answer_rows (3 samples, 0.35%)</title><rect x="57.0258%" y="757" width="0.3513%" height="15" fill="rgb(221,40,2)"/><text x="57.2758%" y="767.50"></text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::finish (1 samples, 0.12%)</title><rect x="57.2600%" y="741" width="0.1171%" height="15" fill="rgb(237,157,21)"/><text x="57.5100%" y="751.50"></text></g><g><title>msql_srv::writers::write_ok_packet (1 samples, 0.12%)</title><rect x="57.2600%" y="725" width="0.1171%" height="15" fill="rgb(222,94,11)"/><text x="57.5100%" y="735.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.12%)</title><rect x="57.2600%" y="709" width="0.1171%" height="15" fill="rgb(249,113,6)"/><text x="57.5100%" y="719.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.12%)</title><rect x="57.3770%" y="773" width="0.1171%" height="15" fill="rgb(238,137,36)"/><text x="57.6270%" y="783.50"></text></g><g><title>__libc_close (1 samples, 0.12%)</title><rect x="57.3770%" y="757" width="0.1171%" height="15" fill="rgb(210,102,26)"/><text x="57.6270%" y="767.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.12%)</title><rect x="57.3770%" y="741" width="0.1171%" height="15" fill="rgb(218,30,30)"/><text x="57.6270%" y="751.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.12%)</title><rect x="57.3770%" y="725" width="0.1171%" height="15" fill="rgb(214,67,26)"/><text x="57.6270%" y="735.50"></text></g><g><title>task_work_run (1 samples, 0.12%)</title><rect x="57.3770%" y="709" width="0.1171%" height="15" fill="rgb(251,9,53)"/><text x="57.6270%" y="719.50"></text></g><g><title>__fput (1 samples, 0.12%)</title><rect x="57.3770%" y="693" width="0.1171%" height="15" fill="rgb(228,204,25)"/><text x="57.6270%" y="703.50"></text></g><g><title>sock_close (1 samples, 0.12%)</title><rect x="57.3770%" y="677" width="0.1171%" height="15" fill="rgb(207,153,8)"/><text x="57.6270%" y="687.50"></text></g><g><title>__sock_release (1 samples, 0.12%)</title><rect x="57.3770%" y="661" width="0.1171%" height="15" fill="rgb(242,9,16)"/><text x="57.6270%" y="671.50"></text></g><g><title>inet_release (1 samples, 0.12%)</title><rect x="57.3770%" y="645" width="0.1171%" height="15" fill="rgb(217,211,10)"/><text x="57.6270%" y="655.50"></text></g><g><title>tcp_close (1 samples, 0.12%)</title><rect x="57.3770%" y="629" width="0.1171%" height="15" fill="rgb(219,228,52)"/><text x="57.6270%" y="639.50"></text></g><g><title>__tcp_push_pending_frames (1 samples, 0.12%)</title><rect x="57.3770%" y="613" width="0.1171%" height="15" fill="rgb(231,92,29)"/><text x="57.6270%" y="623.50"></text></g><g><title>tcp_write_xmit (1 samples, 0.12%)</title><rect x="57.3770%" y="597" width="0.1171%" height="15" fill="rgb(232,8,23)"/><text x="57.6270%" y="607.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.12%)</title><rect x="57.3770%" y="581" width="0.1171%" height="15" fill="rgb(216,211,34)"/><text x="57.6270%" y="591.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.12%)</title><rect x="57.3770%" y="565" width="0.1171%" height="15" fill="rgb(236,151,0)"/><text x="57.6270%" y="575.50"></text></g><g><title>ip_output (1 samples, 0.12%)</title><rect x="57.3770%" y="549" width="0.1171%" height="15" fill="rgb(209,168,3)"/><text x="57.6270%" y="559.50"></text></g><g><title>ip_finish_output2 (1 samples, 0.12%)</title><rect x="57.3770%" y="533" width="0.1171%" height="15" fill="rgb(208,129,28)"/><text x="57.6270%" y="543.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.12%)</title><rect x="57.3770%" y="517" width="0.1171%" height="15" fill="rgb(229,78,22)"/><text x="57.6270%" y="527.50"></text></g><g><title>do_softirq (1 samples, 0.12%)</title><rect x="57.3770%" y="501" width="0.1171%" height="15" fill="rgb(228,187,13)"/><text x="57.6270%" y="511.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.12%)</title><rect x="57.3770%" y="485" width="0.1171%" height="15" fill="rgb(240,119,24)"/><text x="57.6270%" y="495.50"></text></g><g><title>__do_softirq (1 samples, 0.12%)</title><rect x="57.3770%" y="469" width="0.1171%" height="15" fill="rgb(209,194,42)"/><text x="57.6270%" y="479.50"></text></g><g><title>net_rx_action (1 samples, 0.12%)</title><rect x="57.3770%" y="453" width="0.1171%" height="15" fill="rgb(247,200,46)"/><text x="57.6270%" y="463.50"></text></g><g><title>process_backlog (1 samples, 0.12%)</title><rect x="57.3770%" y="437" width="0.1171%" height="15" fill="rgb(218,76,16)"/><text x="57.6270%" y="447.50"></text></g><g><title>__kfree_skb (1 samples, 0.12%)</title><rect x="58.0796%" y="565" width="0.1171%" height="15" fill="rgb(225,21,48)"/><text x="58.3296%" y="575.50"></text></g><g><title>skb_release_data (1 samples, 0.12%)</title><rect x="58.0796%" y="549" width="0.1171%" height="15" fill="rgb(239,223,50)"/><text x="58.3296%" y="559.50"></text></g><g><title>__dev_queue_xmit (1 samples, 0.12%)</title><rect x="58.3138%" y="501" width="0.1171%" height="15" fill="rgb(244,45,21)"/><text x="58.5638%" y="511.50"></text></g><g><title>irqtime_account_irq (1 samples, 0.12%)</title><rect x="58.4309%" y="437" width="0.1171%" height="15" fill="rgb(232,33,43)"/><text x="58.6809%" y="447.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.12%)</title><rect x="58.4309%" y="421" width="0.1171%" height="15" fill="rgb(209,8,3)"/><text x="58.6809%" y="431.50"></text></g><g><title>__kfree_skb_flush (1 samples, 0.12%)</title><rect x="58.5480%" y="421" width="0.1171%" height="15" fill="rgb(214,25,53)"/><text x="58.7980%" y="431.50"></text></g><g><title>__tcp_transmit_skb (5 samples, 0.59%)</title><rect x="58.1967%" y="565" width="0.5855%" height="15" fill="rgb(254,186,54)"/><text x="58.4467%" y="575.50"></text></g><g><title>__ip_queue_xmit (5 samples, 0.59%)</title><rect x="58.1967%" y="549" width="0.5855%" height="15" fill="rgb(208,174,49)"/><text x="58.4467%" y="559.50"></text></g><g><title>ip_output (5 samples, 0.59%)</title><rect x="58.1967%" y="533" width="0.5855%" height="15" fill="rgb(233,191,51)"/><text x="58.4467%" y="543.50"></text></g><g><title>ip_finish_output2 (4 samples, 0.47%)</title><rect x="58.3138%" y="517" width="0.4684%" height="15" fill="rgb(222,134,10)"/><text x="58.5638%" y="527.50"></text></g><g><title>__local_bh_enable_ip (3 samples, 0.35%)</title><rect x="58.4309%" y="501" width="0.3513%" height="15" fill="rgb(230,226,20)"/><text x="58.6809%" y="511.50"></text></g><g><title>do_softirq (3 samples, 0.35%)</title><rect x="58.4309%" y="485" width="0.3513%" height="15" fill="rgb(251,111,25)"/><text x="58.6809%" y="495.50"></text></g><g><title>do_softirq_own_stack (3 samples, 0.35%)</title><rect x="58.4309%" y="469" width="0.3513%" height="15" fill="rgb(224,40,46)"/><text x="58.6809%" y="479.50"></text></g><g><title>__do_softirq (3 samples, 0.35%)</title><rect x="58.4309%" y="453" width="0.3513%" height="15" fill="rgb(236,108,47)"/><text x="58.6809%" y="463.50"></text></g><g><title>net_rx_action (2 samples, 0.23%)</title><rect x="58.5480%" y="437" width="0.2342%" height="15" fill="rgb(234,93,0)"/><text x="58.7980%" y="447.50"></text></g><g><title>process_backlog (1 samples, 0.12%)</title><rect x="58.6651%" y="421" width="0.1171%" height="15" fill="rgb(224,213,32)"/><text x="58.9151%" y="431.50"></text></g><g><title>__netif_receive_skb_one_core (1 samples, 0.12%)</title><rect x="58.6651%" y="405" width="0.1171%" height="15" fill="rgb(251,11,48)"/><text x="58.9151%" y="415.50"></text></g><g><title>ip_rcv (1 samples, 0.12%)</title><rect x="58.6651%" y="389" width="0.1171%" height="15" fill="rgb(236,173,5)"/><text x="58.9151%" y="399.50"></text></g><g><title>ip_local_deliver (1 samples, 0.12%)</title><rect x="58.6651%" y="373" width="0.1171%" height="15" fill="rgb(230,95,12)"/><text x="58.9151%" y="383.50"></text></g><g><title>ip_local_deliver_finish (1 samples, 0.12%)</title><rect x="58.6651%" y="357" width="0.1171%" height="15" fill="rgb(232,209,1)"/><text x="58.9151%" y="367.50"></text></g><g><title>ip_protocol_deliver_rcu (1 samples, 0.12%)</title><rect x="58.6651%" y="341" width="0.1171%" height="15" fill="rgb(232,6,1)"/><text x="58.9151%" y="351.50"></text></g><g><title>tcp_v4_rcv (1 samples, 0.12%)</title><rect x="58.6651%" y="325" width="0.1171%" height="15" fill="rgb(210,224,50)"/><text x="58.9151%" y="335.50"></text></g><g><title>tcp_v4_do_rcv (1 samples, 0.12%)</title><rect x="58.6651%" y="309" width="0.1171%" height="15" fill="rgb(228,127,35)"/><text x="58.9151%" y="319.50"></text></g><g><title>tcp_rcv_established (1 samples, 0.12%)</title><rect x="58.6651%" y="293" width="0.1171%" height="15" fill="rgb(245,102,45)"/><text x="58.9151%" y="303.50"></text></g><g><title>tcp_ack (1 samples, 0.12%)</title><rect x="58.6651%" y="277" width="0.1171%" height="15" fill="rgb(214,1,49)"/><text x="58.9151%" y="287.50"></text></g><g><title>tcp_ack_update_rtt (1 samples, 0.12%)</title><rect x="58.6651%" y="261" width="0.1171%" height="15" fill="rgb(226,163,40)"/><text x="58.9151%" y="271.50"></text></g><g><title>lock_sock_nested (1 samples, 0.12%)</title><rect x="58.7822%" y="565" width="0.1171%" height="15" fill="rgb(239,212,28)"/><text x="59.0322%" y="575.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.12%)</title><rect x="58.7822%" y="549" width="0.1171%" height="15" fill="rgb(220,20,13)"/><text x="59.0322%" y="559.50"></text></g><g><title>preempt_count_add (1 samples, 0.12%)</title><rect x="58.7822%" y="533" width="0.1171%" height="15" fill="rgb(210,164,35)"/><text x="59.0322%" y="543.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.12%)</title><rect x="59.0164%" y="549" width="0.1171%" height="15" fill="rgb(248,109,41)"/><text x="59.2664%" y="559.50"></text></g><g><title>preempt_count_add (1 samples, 0.12%)</title><rect x="59.0164%" y="533" width="0.1171%" height="15" fill="rgb(238,23,50)"/><text x="59.2664%" y="543.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.12%)</title><rect x="59.1335%" y="549" width="0.1171%" height="15" fill="rgb(211,48,49)"/><text x="59.3835%" y="559.50"></text></g><g><title>preempt_count_sub (1 samples, 0.12%)</title><rect x="59.1335%" y="533" width="0.1171%" height="15" fill="rgb(223,36,21)"/><text x="59.3835%" y="543.50"></text></g><g><title>add_wait_queue (1 samples, 0.12%)</title><rect x="59.2506%" y="549" width="0.1171%" height="15" fill="rgb(207,123,46)"/><text x="59.5006%" y="559.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.12%)</title><rect x="59.2506%" y="533" width="0.1171%" height="15" fill="rgb(240,218,32)"/><text x="59.5006%" y="543.50"></text></g><g><title>preempt_count_add (1 samples, 0.12%)</title><rect x="59.2506%" y="517" width="0.1171%" height="15" fill="rgb(252,5,43)"/><text x="59.5006%" y="527.50"></text></g><g><title>remove_wait_queue (1 samples, 0.12%)</title><rect x="59.3677%" y="549" width="0.1171%" height="15" fill="rgb(252,84,19)"/><text x="59.6177%" y="559.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.12%)</title><rect x="59.3677%" y="533" width="0.1171%" height="15" fill="rgb(243,152,39)"/><text x="59.6177%" y="543.50"></text></g><g><title>preempt_count_add (1 samples, 0.12%)</title><rect x="59.3677%" y="517" width="0.1171%" height="15" fill="rgb(234,160,15)"/><text x="59.6177%" y="527.50"></text></g><g><title>dequeue_task_fair (2 samples, 0.23%)</title><rect x="59.7190%" y="485" width="0.2342%" height="15" fill="rgb(237,34,20)"/><text x="59.9690%" y="495.50"></text></g><g><title>dequeue_entity (2 samples, 0.23%)</title><rect x="59.7190%" y="469" width="0.2342%" height="15" fill="rgb(229,97,13)"/><text x="59.9690%" y="479.50"></text></g><g><title>update_curr (1 samples, 0.12%)</title><rect x="59.8361%" y="453" width="0.1171%" height="15" fill="rgb(234,71,50)"/><text x="60.0861%" y="463.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.12%)</title><rect x="59.8361%" y="437" width="0.1171%" height="15" fill="rgb(253,155,4)"/><text x="60.0861%" y="447.50"></text></g><g><title>finish_task_switch (1 samples, 0.12%)</title><rect x="59.9532%" y="485" width="0.1171%" height="15" fill="rgb(222,185,37)"/><text x="60.2032%" y="495.50"></text></g><g><title>__perf_event_task_sched_in (1 samples, 0.12%)</title><rect x="59.9532%" y="469" width="0.1171%" height="15" fill="rgb(251,177,13)"/><text x="60.2032%" y="479.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (1 samples, 0.12%)</title><rect x="59.9532%" y="453" width="0.1171%" height="15" fill="rgb(250,179,40)"/><text x="60.2032%" y="463.50"></text></g><g><title>psi_task_change (2 samples, 0.23%)</title><rect x="60.0703%" y="485" width="0.2342%" height="15" fill="rgb(242,44,2)"/><text x="60.3203%" y="495.50"></text></g><g><title>psi_group_change (2 samples, 0.23%)</title><rect x="60.0703%" y="469" width="0.2342%" height="15" fill="rgb(216,177,13)"/><text x="60.3203%" y="479.50"></text></g><g><title>sk_wait_data (14 samples, 1.64%)</title><rect x="58.8993%" y="565" width="1.6393%" height="15" fill="rgb(216,106,43)"/><text x="59.1493%" y="575.50"></text></g><g><title>wait_woken (9 samples, 1.05%)</title><rect x="59.4848%" y="549" width="1.0539%" height="15" fill="rgb(216,183,2)"/><text x="59.7348%" y="559.50"></text></g><g><title>schedule_timeout (9 samples, 1.05%)</title><rect x="59.4848%" y="533" width="1.0539%" height="15" fill="rgb(249,75,3)"/><text x="59.7348%" y="543.50"></text></g><g><title>schedule (9 samples, 1.05%)</title><rect x="59.4848%" y="517" width="1.0539%" height="15" fill="rgb(219,67,39)"/><text x="59.7348%" y="527.50"></text></g><g><title>__schedule (9 samples, 1.05%)</title><rect x="59.4848%" y="501" width="1.0539%" height="15" fill="rgb(253,228,2)"/><text x="59.7348%" y="511.50"></text></g><g><title>uclamp_rq_dec_id (2 samples, 0.23%)</title><rect x="60.3044%" y="485" width="0.2342%" height="15" fill="rgb(235,138,27)"/><text x="60.5544%" y="495.50"></text></g><g><title>do_syscall_64 (26 samples, 3.04%)</title><rect x="57.6112%" y="645" width="3.0445%" height="15" fill="rgb(236,97,51)"/><text x="57.8612%" y="655.50">do_..</text></g><g><title>__x64_sys_recvfrom (25 samples, 2.93%)</title><rect x="57.7283%" y="629" width="2.9274%" height="15" fill="rgb(240,80,30)"/><text x="57.9783%" y="639.50">__..</text></g><g><title>__sys_recvfrom (25 samples, 2.93%)</title><rect x="57.7283%" y="613" width="2.9274%" height="15" fill="rgb(230,178,19)"/><text x="57.9783%" y="623.50">__..</text></g><g><title>inet_recvmsg (24 samples, 2.81%)</title><rect x="57.8454%" y="597" width="2.8103%" height="15" fill="rgb(210,190,27)"/><text x="58.0954%" y="607.50">in..</text></g><g><title>tcp_recvmsg (24 samples, 2.81%)</title><rect x="57.8454%" y="581" width="2.8103%" height="15" fill="rgb(222,107,31)"/><text x="58.0954%" y="591.50">tc..</text></g><g><title>skb_copy_datagram_iter (1 samples, 0.12%)</title><rect x="60.5386%" y="565" width="0.1171%" height="15" fill="rgb(216,127,34)"/><text x="60.7886%" y="575.50"></text></g><g><title>__skb_datagram_iter (1 samples, 0.12%)</title><rect x="60.5386%" y="549" width="0.1171%" height="15" fill="rgb(234,116,52)"/><text x="60.7886%" y="559.50"></text></g><g><title>_copy_to_iter (1 samples, 0.12%)</title><rect x="60.5386%" y="533" width="0.1171%" height="15" fill="rgb(222,124,15)"/><text x="60.7886%" y="543.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (29 samples, 3.40%)</title><rect x="57.4941%" y="757" width="3.3958%" height="15" fill="rgb(231,179,28)"/><text x="57.7441%" y="767.50">&lt;st..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (28 samples, 3.28%)</title><rect x="57.6112%" y="741" width="3.2787%" height="15" fill="rgb(226,93,45)"/><text x="57.8612%" y="751.50">&lt;st..</text></g><g><title>std::sys_common::net::TcpStream::read (28 samples, 3.28%)</title><rect x="57.6112%" y="725" width="3.2787%" height="15" fill="rgb(215,8,51)"/><text x="57.8612%" y="735.50">std..</text></g><g><title>std::sys::unix::net::Socket::read (28 samples, 3.28%)</title><rect x="57.6112%" y="709" width="3.2787%" height="15" fill="rgb(223,106,5)"/><text x="57.8612%" y="719.50">std..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (28 samples, 3.28%)</title><rect x="57.6112%" y="693" width="3.2787%" height="15" fill="rgb(250,191,5)"/><text x="57.8612%" y="703.50">std..</text></g><g><title>__libc_recv (28 samples, 3.28%)</title><rect x="57.6112%" y="677" width="3.2787%" height="15" fill="rgb(242,132,44)"/><text x="57.8612%" y="687.50">__l..</text></g><g><title>entry_SYSCALL_64 (28 samples, 3.28%)</title><rect x="57.6112%" y="661" width="3.2787%" height="15" fill="rgb(251,152,29)"/><text x="57.8612%" y="671.50">ent..</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.23%)</title><rect x="60.6557%" y="645" width="0.2342%" height="15" fill="rgb(218,179,5)"/><text x="60.9057%" y="655.50"></text></g><g><title>msql_srv::packet::PacketReader&lt;R&gt;::next (30 samples, 3.51%)</title><rect x="57.4941%" y="773" width="3.5129%" height="15" fill="rgb(227,67,19)"/><text x="57.7441%" y="783.50">msq..</text></g><g><title>msql_srv::packet::packet (1 samples, 0.12%)</title><rect x="60.8899%" y="757" width="0.1171%" height="15" fill="rgb(233,119,31)"/><text x="61.1399%" y="767.50"></text></g><g><title>__local_bh_enable_ip (2 samples, 0.23%)</title><rect x="61.3583%" y="613" width="0.2342%" height="15" fill="rgb(241,120,22)"/><text x="61.6083%" y="623.50"></text></g><g><title>preempt_count_sub (2 samples, 0.23%)</title><rect x="61.3583%" y="597" width="0.2342%" height="15" fill="rgb(224,102,30)"/><text x="61.6083%" y="607.50"></text></g><g><title>release_sock (1 samples, 0.12%)</title><rect x="61.5925%" y="613" width="0.1171%" height="15" fill="rgb(210,164,37)"/><text x="61.8425%" y="623.50"></text></g><g><title>__ip_local_out (1 samples, 0.12%)</title><rect x="62.6464%" y="533" width="0.1171%" height="15" fill="rgb(226,191,16)"/><text x="62.8964%" y="543.50"></text></g><g><title>ip_send_check (1 samples, 0.12%)</title><rect x="62.6464%" y="517" width="0.1171%" height="15" fill="rgb(214,40,45)"/><text x="62.8964%" y="527.50"></text></g><g><title>ip_finish_output (1 samples, 0.12%)</title><rect x="62.9977%" y="517" width="0.1171%" height="15" fill="rgb(244,29,26)"/><text x="63.2477%" y="527.50"></text></g><g><title>dev_hard_start_xmit (1 samples, 0.12%)</title><rect x="63.3489%" y="485" width="0.1171%" height="15" fill="rgb(216,16,5)"/><text x="63.5989%" y="495.50"></text></g><g><title>preempt_count_add (1 samples, 0.12%)</title><rect x="63.4660%" y="485" width="0.1171%" height="15" fill="rgb(249,76,35)"/><text x="63.7160%" y="495.50"></text></g><g><title>__dev_queue_xmit (4 samples, 0.47%)</title><rect x="63.3489%" y="501" width="0.4684%" height="15" fill="rgb(207,11,44)"/><text x="63.5989%" y="511.50"></text></g><g><title>validate_xmit_xfrm (2 samples, 0.23%)</title><rect x="63.5831%" y="485" width="0.2342%" height="15" fill="rgb(228,190,49)"/><text x="63.8331%" y="495.50"></text></g><g><title>__netif_receive_skb_core (2 samples, 0.23%)</title><rect x="63.9344%" y="389" width="0.2342%" height="15" fill="rgb(214,173,12)"/><text x="64.1844%" y="399.50"></text></g><g><title>tcp_filter (1 samples, 0.12%)</title><rect x="64.1686%" y="309" width="0.1171%" height="15" fill="rgb(218,26,35)"/><text x="64.4186%" y="319.50"></text></g><g><title>sk_reset_timer (2 samples, 0.23%)</title><rect x="64.2857%" y="277" width="0.2342%" height="15" fill="rgb(220,200,19)"/><text x="64.5357%" y="287.50"></text></g><g><title>__mod_timer (2 samples, 0.23%)</title><rect x="64.2857%" y="261" width="0.2342%" height="15" fill="rgb(239,95,49)"/><text x="64.5357%" y="271.50"></text></g><g><title>enqueue_task (7 samples, 0.82%)</title><rect x="64.8712%" y="213" width="0.8197%" height="15" fill="rgb(235,85,53)"/><text x="65.1212%" y="223.50"></text></g><g><title>psi_task_change (6 samples, 0.70%)</title><rect x="64.9883%" y="197" width="0.7026%" height="15" fill="rgb(233,133,31)"/><text x="65.2383%" y="207.50"></text></g><g><title>psi_group_change (6 samples, 0.70%)</title><rect x="64.9883%" y="181" width="0.7026%" height="15" fill="rgb(218,25,20)"/><text x="65.2383%" y="191.50"></text></g><g><title>record_times (4 samples, 0.47%)</title><rect x="65.2225%" y="165" width="0.4684%" height="15" fill="rgb(252,210,38)"/><text x="65.4725%" y="175.50"></text></g><g><title>sched_clock_cpu (2 samples, 0.23%)</title><rect x="65.4567%" y="149" width="0.2342%" height="15" fill="rgb(242,134,21)"/><text x="65.7067%" y="159.50"></text></g><g><title>sched_clock (2 samples, 0.23%)</title><rect x="65.4567%" y="133" width="0.2342%" height="15" fill="rgb(213,28,48)"/><text x="65.7067%" y="143.50"></text></g><g><title>native_sched_clock (1 samples, 0.12%)</title><rect x="65.5738%" y="117" width="0.1171%" height="15" fill="rgb(250,196,2)"/><text x="65.8238%" y="127.50"></text></g><g><title>enqueue_task_fair (1 samples, 0.12%)</title><rect x="65.6909%" y="213" width="0.1171%" height="15" fill="rgb(227,5,17)"/><text x="65.9409%" y="223.50"></text></g><g><title>enqueue_entity (1 samples, 0.12%)</title><rect x="65.6909%" y="197" width="0.1171%" height="15" fill="rgb(221,226,24)"/><text x="65.9409%" y="207.50"></text></g><g><title>preempt_count_sub (1 samples, 0.12%)</title><rect x="65.8080%" y="213" width="0.1171%" height="15" fill="rgb(211,5,48)"/><text x="66.0580%" y="223.50"></text></g><g><title>__wake_up_common (12 samples, 1.41%)</title><rect x="64.7541%" y="245" width="1.4052%" height="15" fill="rgb(219,150,6)"/><text x="65.0041%" y="255.50"></text></g><g><title>try_to_wake_up (12 samples, 1.41%)</title><rect x="64.7541%" y="229" width="1.4052%" height="15" fill="rgb(251,46,16)"/><text x="65.0041%" y="239.50"></text></g><g><title>update_rq_clock (2 samples, 0.23%)</title><rect x="65.9251%" y="213" width="0.2342%" height="15" fill="rgb(220,204,40)"/><text x="66.1751%" y="223.50"></text></g><g><title>sock_def_readable (15 samples, 1.76%)</title><rect x="64.5199%" y="277" width="1.7564%" height="15" fill="rgb(211,85,2)"/><text x="64.7699%" y="287.50"></text></g><g><title>__wake_up_common_lock (13 samples, 1.52%)</title><rect x="64.7541%" y="261" width="1.5222%" height="15" fill="rgb(229,17,7)"/><text x="65.0041%" y="271.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.12%)</title><rect x="66.1593%" y="245" width="0.1171%" height="15" fill="rgb(239,72,28)"/><text x="66.4093%" y="255.50"></text></g><g><title>__kfree_skb (2 samples, 0.23%)</title><rect x="66.5105%" y="261" width="0.2342%" height="15" fill="rgb(230,47,54)"/><text x="66.7605%" y="271.50"></text></g><g><title>skb_release_data (2 samples, 0.23%)</title><rect x="66.5105%" y="245" width="0.2342%" height="15" fill="rgb(214,50,8)"/><text x="66.7605%" y="255.50"></text></g><g><title>tcp_ack (5 samples, 0.59%)</title><rect x="66.2763%" y="277" width="0.5855%" height="15" fill="rgb(216,198,43)"/><text x="66.5263%" y="287.50"></text></g><g><title>tcp_update_pacing_rate (1 samples, 0.12%)</title><rect x="66.7447%" y="261" width="0.1171%" height="15" fill="rgb(234,20,35)"/><text x="66.9947%" y="271.50"></text></g><g><title>__netif_receive_skb_one_core (27 samples, 3.16%)</title><rect x="63.9344%" y="405" width="3.1616%" height="15" fill="rgb(254,45,19)"/><text x="64.1844%" y="415.50">__n..</text></g><g><title>ip_rcv (25 samples, 2.93%)</title><rect x="64.1686%" y="389" width="2.9274%" height="15" fill="rgb(219,14,44)"/><text x="64.4186%" y="399.50">ip..</text></g><g><title>ip_local_deliver (25 samples, 2.93%)</title><rect x="64.1686%" y="373" width="2.9274%" height="15" fill="rgb(217,220,26)"/><text x="64.4186%" y="383.50">ip..</text></g><g><title>ip_local_deliver_finish (25 samples, 2.93%)</title><rect x="64.1686%" y="357" width="2.9274%" height="15" fill="rgb(213,158,28)"/><text x="64.4186%" y="367.50">ip..</text></g><g><title>ip_protocol_deliver_rcu (25 samples, 2.93%)</title><rect x="64.1686%" y="341" width="2.9274%" height="15" fill="rgb(252,51,52)"/><text x="64.4186%" y="351.50">ip..</text></g><g><title>tcp_v4_rcv (25 samples, 2.93%)</title><rect x="64.1686%" y="325" width="2.9274%" height="15" fill="rgb(246,89,16)"/><text x="64.4186%" y="335.50">tc..</text></g><g><title>tcp_v4_do_rcv (24 samples, 2.81%)</title><rect x="64.2857%" y="309" width="2.8103%" height="15" fill="rgb(216,158,49)"/><text x="64.5357%" y="319.50">tc..</text></g><g><title>tcp_rcv_established (24 samples, 2.81%)</title><rect x="64.2857%" y="293" width="2.8103%" height="15" fill="rgb(236,107,19)"/><text x="64.5357%" y="303.50">tc..</text></g><g><title>tcp_queue_rcv (2 samples, 0.23%)</title><rect x="66.8618%" y="277" width="0.2342%" height="15" fill="rgb(228,185,30)"/><text x="67.1118%" y="287.50"></text></g><g><title>ip_finish_output2 (36 samples, 4.22%)</title><rect x="63.1148%" y="517" width="4.2155%" height="15" fill="rgb(246,134,8)"/><text x="63.3648%" y="527.50">ip_fi..</text></g><g><title>__local_bh_enable_ip (30 samples, 3.51%)</title><rect x="63.8173%" y="501" width="3.5129%" height="15" fill="rgb(214,143,50)"/><text x="64.0673%" y="511.50">__l..</text></g><g><title>do_softirq (30 samples, 3.51%)</title><rect x="63.8173%" y="485" width="3.5129%" height="15" fill="rgb(228,75,8)"/><text x="64.0673%" y="495.50">do_..</text></g><g><title>do_softirq_own_stack (30 samples, 3.51%)</title><rect x="63.8173%" y="469" width="3.5129%" height="15" fill="rgb(207,175,4)"/><text x="64.0673%" y="479.50">do_..</text></g><g><title>__do_softirq (30 samples, 3.51%)</title><rect x="63.8173%" y="453" width="3.5129%" height="15" fill="rgb(205,108,24)"/><text x="64.0673%" y="463.50">__d..</text></g><g><title>net_rx_action (30 samples, 3.51%)</title><rect x="63.8173%" y="437" width="3.5129%" height="15" fill="rgb(244,120,49)"/><text x="64.0673%" y="447.50">net..</text></g><g><title>process_backlog (30 samples, 3.51%)</title><rect x="63.8173%" y="421" width="3.5129%" height="15" fill="rgb(223,47,38)"/><text x="64.0673%" y="431.50">pro..</text></g><g><title>__rcu_read_unlock (2 samples, 0.23%)</title><rect x="67.0960%" y="405" width="0.2342%" height="15" fill="rgb(229,179,11)"/><text x="67.3460%" y="415.50"></text></g><g><title>__tcp_transmit_skb (44 samples, 5.15%)</title><rect x="62.4122%" y="565" width="5.1522%" height="15" fill="rgb(231,122,1)"/><text x="62.6622%" y="575.50">__tcp_..</text></g><g><title>__ip_queue_xmit (43 samples, 5.04%)</title><rect x="62.5293%" y="549" width="5.0351%" height="15" fill="rgb(245,119,9)"/><text x="62.7793%" y="559.50">__ip_q..</text></g><g><title>ip_output (41 samples, 4.80%)</title><rect x="62.7635%" y="533" width="4.8009%" height="15" fill="rgb(241,163,25)"/><text x="63.0135%" y="543.50">ip_out..</text></g><g><title>ip_finish_output (2 samples, 0.23%)</title><rect x="67.3302%" y="517" width="0.2342%" height="15" fill="rgb(217,214,3)"/><text x="67.5802%" y="527.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (2 samples, 0.23%)</title><rect x="67.3302%" y="501" width="0.2342%" height="15" fill="rgb(240,86,28)"/><text x="67.5802%" y="511.50"></text></g><g><title>preempt_count_add (1 samples, 0.12%)</title><rect x="67.4473%" y="485" width="0.1171%" height="15" fill="rgb(215,47,9)"/><text x="67.6973%" y="495.50"></text></g><g><title>tcp_event_new_data_sent (1 samples, 0.12%)</title><rect x="67.5644%" y="565" width="0.1171%" height="15" fill="rgb(252,25,45)"/><text x="67.8144%" y="575.50"></text></g><g><title>tcp_rearm_rto (1 samples, 0.12%)</title><rect x="67.5644%" y="549" width="0.1171%" height="15" fill="rgb(251,164,9)"/><text x="67.8144%" y="559.50"></text></g><g><title>__tcp_push_pending_frames (48 samples, 5.62%)</title><rect x="62.2951%" y="597" width="5.6206%" height="15" fill="rgb(233,194,0)"/><text x="62.5451%" y="607.50">__tcp_p..</text></g><g><title>tcp_write_xmit (48 samples, 5.62%)</title><rect x="62.2951%" y="581" width="5.6206%" height="15" fill="rgb(249,111,24)"/><text x="62.5451%" y="591.50">tcp_wri..</text></g><g><title>tcp_schedule_loss_probe.part.0 (2 samples, 0.23%)</title><rect x="67.6815%" y="565" width="0.2342%" height="15" fill="rgb(250,223,3)"/><text x="67.9315%" y="575.50"></text></g><g><title>__kmalloc_node_track_caller (2 samples, 0.23%)</title><rect x="67.9157%" y="565" width="0.2342%" height="15" fill="rgb(236,178,37)"/><text x="68.1657%" y="575.50"></text></g><g><title>sk_stream_alloc_skb (3 samples, 0.35%)</title><rect x="67.9157%" y="597" width="0.3513%" height="15" fill="rgb(241,158,50)"/><text x="68.1657%" y="607.50"></text></g><g><title>__alloc_skb (3 samples, 0.35%)</title><rect x="67.9157%" y="581" width="0.3513%" height="15" fill="rgb(213,121,41)"/><text x="68.1657%" y="591.50"></text></g><g><title>__ksize (1 samples, 0.12%)</title><rect x="68.1499%" y="565" width="0.1171%" height="15" fill="rgb(240,92,3)"/><text x="68.3999%" y="575.50"></text></g><g><title>do_syscall_64 (63 samples, 7.38%)</title><rect x="61.0070%" y="693" width="7.3770%" height="15" fill="rgb(205,123,3)"/><text x="61.2570%" y="703.50">do_syscall..</text></g><g><title>__x64_sys_sendto (62 samples, 7.26%)</title><rect x="61.1241%" y="677" width="7.2600%" height="15" fill="rgb(205,97,47)"/><text x="61.3741%" y="687.50">__x64_sys_..</text></g><g><title>__sys_sendto (61 samples, 7.14%)</title><rect x="61.2412%" y="661" width="7.1429%" height="15" fill="rgb(247,152,14)"/><text x="61.4912%" y="671.50">__sys_send..</text></g><g><title>sock_sendmsg (60 samples, 7.03%)</title><rect x="61.3583%" y="645" width="7.0258%" height="15" fill="rgb(248,195,53)"/><text x="61.6083%" y="655.50">sock_send..</text></g><g><title>tcp_sendmsg (60 samples, 7.03%)</title><rect x="61.3583%" y="629" width="7.0258%" height="15" fill="rgb(226,201,16)"/><text x="61.6083%" y="639.50">tcp_sendm..</text></g><g><title>tcp_sendmsg_locked (57 samples, 6.67%)</title><rect x="61.7096%" y="613" width="6.6745%" height="15" fill="rgb(205,98,0)"/><text x="61.9596%" y="623.50">tcp_sendm..</text></g><g><title>tcp_stream_memory_free (1 samples, 0.12%)</title><rect x="68.2670%" y="597" width="0.1171%" height="15" fill="rgb(214,191,48)"/><text x="68.5170%" y="607.50"></text></g><g><title>entry_SYSCALL_64 (64 samples, 7.49%)</title><rect x="61.0070%" y="709" width="7.4941%" height="15" fill="rgb(237,112,39)"/><text x="61.2570%" y="719.50">entry_SYSC..</text></g><g><title>prepare_exit_to_usermode (1 samples, 0.12%)</title><rect x="68.3841%" y="693" width="0.1171%" height="15" fill="rgb(247,203,27)"/><text x="68.6341%" y="703.50"></text></g><g><title>decor::Shim::run_on_tcp (208 samples, 24.36%)</title><rect x="44.2623%" y="805" width="24.3560%" height="15" fill="rgb(235,124,28)"/><text x="44.5123%" y="815.50">decor::Shim::run_on_tcp</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (208 samples, 24.36%)</title><rect x="44.2623%" y="789" width="24.3560%" height="15" fill="rgb(208,207,46)"/><text x="44.5123%" y="799.50">msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (65 samples, 7.61%)</title><rect x="61.0070%" y="773" width="7.6112%" height="15" fill="rgb(234,176,4)"/><text x="61.2570%" y="783.50">std::io::b..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (65 samples, 7.61%)</title><rect x="61.0070%" y="757" width="7.6112%" height="15" fill="rgb(230,133,28)"/><text x="61.2570%" y="767.50">&lt;std::net:..</text></g><g><title>std::sys_common::net::TcpStream::write (65 samples, 7.61%)</title><rect x="61.0070%" y="741" width="7.6112%" height="15" fill="rgb(211,137,40)"/><text x="61.2570%" y="751.50">std::sys_c..</text></g><g><title>__libc_send (65 samples, 7.61%)</title><rect x="61.0070%" y="725" width="7.6112%" height="15" fill="rgb(254,35,13)"/><text x="61.2570%" y="735.50">__libc_send</text></g><g><title>syscall_return_via_sysret (1 samples, 0.12%)</title><rect x="68.5012%" y="709" width="0.1171%" height="15" fill="rgb(225,49,51)"/><text x="68.7512%" y="719.50"></text></g><g><title>__GI___clone (210 samples, 24.59%)</title><rect x="44.1452%" y="917" width="24.5902%" height="15" fill="rgb(251,10,15)"/><text x="44.3952%" y="927.50">__GI___clone</text></g><g><title>start_thread (210 samples, 24.59%)</title><rect x="44.1452%" y="901" width="24.5902%" height="15" fill="rgb(228,207,15)"/><text x="44.3952%" y="911.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (210 samples, 24.59%)</title><rect x="44.1452%" y="885" width="24.5902%" height="15" fill="rgb(241,99,19)"/><text x="44.3952%" y="895.50">std::sys::unix::thread::Thread::new::th..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (210 samples, 24.59%)</title><rect x="44.1452%" y="869" width="24.5902%" height="15" fill="rgb(207,104,49)"/><text x="44.3952%" y="879.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::fun..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (210 samples, 24.59%)</title><rect x="44.1452%" y="853" width="24.5902%" height="15" fill="rgb(234,99,18)"/><text x="44.3952%" y="863.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::fun..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (210 samples, 24.59%)</title><rect x="44.1452%" y="837" width="24.5902%" height="15" fill="rgb(213,191,49)"/><text x="44.3952%" y="847.50">core::ops::function::FnOnce::call_once{..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (210 samples, 24.59%)</title><rect x="44.1452%" y="821" width="24.5902%" height="15" fill="rgb(210,226,19)"/><text x="44.3952%" y="831.50">std::sys_common::backtrace::__rust_begi..</text></g><g><title>mysql::conn::Conn::new (1 samples, 0.12%)</title><rect x="68.6183%" y="805" width="0.1171%" height="15" fill="rgb(229,97,18)"/><text x="68.8683%" y="815.50"></text></g><g><title>mysql::conn::Conn::connect_stream (1 samples, 0.12%)</title><rect x="68.6183%" y="789" width="0.1171%" height="15" fill="rgb(211,167,15)"/><text x="68.8683%" y="799.50"></text></g><g><title>mysql::io::Stream::connect_tcp (1 samples, 0.12%)</title><rect x="68.6183%" y="773" width="0.1171%" height="15" fill="rgb(210,169,34)"/><text x="68.8683%" y="783.50"></text></g><g><title>net2::tcp::TcpBuilder::new_v4 (1 samples, 0.12%)</title><rect x="68.6183%" y="757" width="0.1171%" height="15" fill="rgb(241,121,31)"/><text x="68.8683%" y="767.50"></text></g><g><title>net2::sys::Socket::new (1 samples, 0.12%)</title><rect x="68.6183%" y="741" width="0.1171%" height="15" fill="rgb(232,40,11)"/><text x="68.8683%" y="751.50"></text></g><g><title>__GI___socket (1 samples, 0.12%)</title><rect x="68.6183%" y="725" width="0.1171%" height="15" fill="rgb(205,86,26)"/><text x="68.8683%" y="735.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.12%)</title><rect x="68.6183%" y="709" width="0.1171%" height="15" fill="rgb(231,126,28)"/><text x="68.8683%" y="719.50"></text></g><g><title>do_syscall_64 (1 samples, 0.12%)</title><rect x="68.6183%" y="693" width="0.1171%" height="15" fill="rgb(219,221,18)"/><text x="68.8683%" y="703.50"></text></g><g><title>__x64_sys_socket (1 samples, 0.12%)</title><rect x="68.6183%" y="677" width="0.1171%" height="15" fill="rgb(211,40,0)"/><text x="68.8683%" y="687.50"></text></g><g><title>__sys_socket (1 samples, 0.12%)</title><rect x="68.6183%" y="661" width="0.1171%" height="15" fill="rgb(239,85,43)"/><text x="68.8683%" y="671.50"></text></g><g><title>__sock_create (1 samples, 0.12%)</title><rect x="68.6183%" y="645" width="0.1171%" height="15" fill="rgb(231,55,21)"/><text x="68.8683%" y="655.50"></text></g><g><title>inet_create (1 samples, 0.12%)</title><rect x="68.6183%" y="629" width="0.1171%" height="15" fill="rgb(225,184,43)"/><text x="68.8683%" y="639.50"></text></g><g><title>__GI___libc_free (1 samples, 0.12%)</title><rect x="68.8525%" y="741" width="0.1171%" height="15" fill="rgb(251,158,41)"/><text x="69.1025%" y="751.50"></text></g><g><title>_int_free (1 samples, 0.12%)</title><rect x="68.9696%" y="741" width="0.1171%" height="15" fill="rgb(234,159,37)"/><text x="69.2196%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.12%)</title><rect x="69.0867%" y="597" width="0.1171%" height="15" fill="rgb(216,204,22)"/><text x="69.3367%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="69.0867%" y="581" width="0.1171%" height="15" fill="rgb(214,17,3)"/><text x="69.3367%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.12%)</title><rect x="69.0867%" y="565" width="0.1171%" height="15" fill="rgb(212,111,17)"/><text x="69.3367%" y="575.50"></text></g><g><title>alloc::fmt::format (2 samples, 0.23%)</title><rect x="69.0867%" y="741" width="0.2342%" height="15" fill="rgb(221,157,24)"/><text x="69.3367%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.23%)</title><rect x="69.0867%" y="725" width="0.2342%" height="15" fill="rgb(252,16,13)"/><text x="69.3367%" y="735.50"></text></g><g><title>core::fmt::write (2 samples, 0.23%)</title><rect x="69.0867%" y="709" width="0.2342%" height="15" fill="rgb(221,62,2)"/><text x="69.3367%" y="719.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.23%)</title><rect x="69.0867%" y="693" width="0.2342%" height="15" fill="rgb(247,87,22)"/><text x="69.3367%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.23%)</title><rect x="69.0867%" y="677" width="0.2342%" height="15" fill="rgb(215,73,9)"/><text x="69.3367%" y="687.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.23%)</title><rect x="69.0867%" y="661" width="0.2342%" height="15" fill="rgb(207,175,33)"/><text x="69.3367%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.23%)</title><rect x="69.0867%" y="645" width="0.2342%" height="15" fill="rgb(243,129,54)"/><text x="69.3367%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.23%)</title><rect x="69.0867%" y="629" width="0.2342%" height="15" fill="rgb(227,119,45)"/><text x="69.3367%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (2 samples, 0.23%)</title><rect x="69.0867%" y="613" width="0.2342%" height="15" fill="rgb(205,109,36)"/><text x="69.3367%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.12%)</title><rect x="69.2037%" y="597" width="0.1171%" height="15" fill="rgb(205,6,39)"/><text x="69.4537%" y="607.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="69.2037%" y="581" width="0.1171%" height="15" fill="rgb(221,32,16)"/><text x="69.4537%" y="591.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.23%)</title><rect x="69.3208%" y="661" width="0.2342%" height="15" fill="rgb(228,144,50)"/><text x="69.5708%" y="671.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.12%)</title><rect x="69.4379%" y="645" width="0.1171%" height="15" fill="rgb(229,201,53)"/><text x="69.6879%" y="655.50"></text></g><g><title>__GI___libc_free (1 samples, 0.12%)</title><rect x="69.6721%" y="645" width="0.1171%" height="15" fill="rgb(249,153,27)"/><text x="69.9221%" y="655.50"></text></g><g><title>__mmdrop (1 samples, 0.12%)</title><rect x="70.1405%" y="453" width="0.1171%" height="15" fill="rgb(227,106,25)"/><text x="70.3905%" y="463.50"></text></g><g><title>pgd_free (1 samples, 0.12%)</title><rect x="70.1405%" y="437" width="0.1171%" height="15" fill="rgb(230,65,29)"/><text x="70.3905%" y="447.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (230 samples, 26.93%)</title><rect x="70.3747%" y="437" width="26.9321%" height="15" fill="rgb(221,57,46)"/><text x="70.6247%" y="447.50">__intel_pmu_enable_all.constprop.0</text></g><g><title>native_write_msr (228 samples, 26.70%)</title><rect x="70.6089%" y="421" width="26.6979%" height="15" fill="rgb(229,161,17)"/><text x="70.8589%" y="431.50">native_write_msr</text></g><g><title>__perf_event_task_sched_in (232 samples, 27.17%)</title><rect x="70.2576%" y="453" width="27.1663%" height="15" fill="rgb(222,213,11)"/><text x="70.5076%" y="463.50">__perf_event_task_sched_in</text></g><g><title>_raw_spin_unlock (1 samples, 0.12%)</title><rect x="97.3068%" y="437" width="0.1171%" height="15" fill="rgb(235,35,13)"/><text x="97.5568%" y="447.50"></text></g><g><title>preempt_count_sub (1 samples, 0.12%)</title><rect x="97.3068%" y="421" width="0.1171%" height="15" fill="rgb(233,158,34)"/><text x="97.5568%" y="431.50"></text></g><g><title>hwloc::Topology::new (241 samples, 28.22%)</title><rect x="69.3208%" y="741" width="28.2201%" height="15" fill="rgb(215,151,48)"/><text x="69.5708%" y="751.50">hwloc::Topology::new</text></g><g><title>hwloc_topology_load (241 samples, 28.22%)</title><rect x="69.3208%" y="725" width="28.2201%" height="15" fill="rgb(229,84,14)"/><text x="69.5708%" y="735.50">hwloc_topology_load</text></g><g><title>[libhwloc.so.15.2.0] (241 samples, 28.22%)</title><rect x="69.3208%" y="709" width="28.2201%" height="15" fill="rgb(229,68,14)"/><text x="69.5708%" y="719.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (241 samples, 28.22%)</title><rect x="69.3208%" y="693" width="28.2201%" height="15" fill="rgb(243,106,26)"/><text x="69.5708%" y="703.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (241 samples, 28.22%)</title><rect x="69.3208%" y="677" width="28.2201%" height="15" fill="rgb(206,45,38)"/><text x="69.5708%" y="687.50">[libhwloc.so.15.2.0]</text></g><g><title>hwloc_linux_set_tid_cpubind (239 samples, 27.99%)</title><rect x="69.5550%" y="661" width="27.9859%" height="15" fill="rgb(226,6,15)"/><text x="69.8050%" y="671.50">hwloc_linux_set_tid_cpubind</text></g><g><title>__GI___sched_setaffinity_new (237 samples, 27.75%)</title><rect x="69.7892%" y="645" width="27.7518%" height="15" fill="rgb(232,22,54)"/><text x="70.0392%" y="655.50">__GI___sched_setaffinity_new</text></g><g><title>entry_SYSCALL_64 (235 samples, 27.52%)</title><rect x="70.0234%" y="629" width="27.5176%" height="15" fill="rgb(229,222,32)"/><text x="70.2734%" y="639.50">entry_SYSCALL_64</text></g><g><title>do_syscall_64 (235 samples, 27.52%)</title><rect x="70.0234%" y="613" width="27.5176%" height="15" fill="rgb(228,62,29)"/><text x="70.2734%" y="623.50">do_syscall_64</text></g><g><title>__x64_sys_sched_setaffinity (235 samples, 27.52%)</title><rect x="70.0234%" y="597" width="27.5176%" height="15" fill="rgb(251,103,34)"/><text x="70.2734%" y="607.50">__x64_sys_sched_setaffinity</text></g><g><title>sched_setaffinity (235 samples, 27.52%)</title><rect x="70.0234%" y="581" width="27.5176%" height="15" fill="rgb(233,12,30)"/><text x="70.2734%" y="591.50">sched_setaffinity</text></g><g><title>__set_cpus_allowed_ptr (235 samples, 27.52%)</title><rect x="70.0234%" y="565" width="27.5176%" height="15" fill="rgb(238,52,0)"/><text x="70.2734%" y="575.50">__set_cpus_allowed_ptr</text></g><g><title>stop_one_cpu (235 samples, 27.52%)</title><rect x="70.0234%" y="549" width="27.5176%" height="15" fill="rgb(223,98,5)"/><text x="70.2734%" y="559.50">stop_one_cpu</text></g><g><title>cpu_stop_queue_work (235 samples, 27.52%)</title><rect x="70.0234%" y="533" width="27.5176%" height="15" fill="rgb(228,75,37)"/><text x="70.2734%" y="543.50">cpu_stop_queue_work</text></g><g><title>preempt_schedule_thunk (235 samples, 27.52%)</title><rect x="70.0234%" y="517" width="27.5176%" height="15" fill="rgb(205,115,49)"/><text x="70.2734%" y="527.50">preempt_schedule_thunk</text></g><g><title>preempt_schedule_common (235 samples, 27.52%)</title><rect x="70.0234%" y="501" width="27.5176%" height="15" fill="rgb(250,154,43)"/><text x="70.2734%" y="511.50">preempt_schedule_common</text></g><g><title>__schedule (235 samples, 27.52%)</title><rect x="70.0234%" y="485" width="27.5176%" height="15" fill="rgb(226,43,29)"/><text x="70.2734%" y="495.50">__schedule</text></g><g><title>finish_task_switch (235 samples, 27.52%)</title><rect x="70.0234%" y="469" width="27.5176%" height="15" fill="rgb(249,228,39)"/><text x="70.2734%" y="479.50">finish_task_switch</text></g><g><title>_raw_spin_unlock_irq (1 samples, 0.12%)</title><rect x="97.4239%" y="453" width="0.1171%" height="15" fill="rgb(216,79,43)"/><text x="97.6739%" y="463.50"></text></g><g><title>apic_timer_interrupt (1 samples, 0.12%)</title><rect x="97.4239%" y="437" width="0.1171%" height="15" fill="rgb(228,95,12)"/><text x="97.6739%" y="447.50"></text></g><g><title>smp_apic_timer_interrupt (1 samples, 0.12%)</title><rect x="97.4239%" y="421" width="0.1171%" height="15" fill="rgb(249,221,15)"/><text x="97.6739%" y="431.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.12%)</title><rect x="97.4239%" y="405" width="0.1171%" height="15" fill="rgb(233,34,13)"/><text x="97.6739%" y="415.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.12%)</title><rect x="97.4239%" y="389" width="0.1171%" height="15" fill="rgb(214,103,39)"/><text x="97.6739%" y="399.50"></text></g><g><title>tick_sched_timer (1 samples, 0.12%)</title><rect x="97.4239%" y="373" width="0.1171%" height="15" fill="rgb(251,126,39)"/><text x="97.6739%" y="383.50"></text></g><g><title>tick_sched_handle (1 samples, 0.12%)</title><rect x="97.4239%" y="357" width="0.1171%" height="15" fill="rgb(214,216,36)"/><text x="97.6739%" y="367.50"></text></g><g><title>update_process_times (1 samples, 0.12%)</title><rect x="97.4239%" y="341" width="0.1171%" height="15" fill="rgb(220,221,8)"/><text x="97.6739%" y="351.50"></text></g><g><title>trigger_load_balance (1 samples, 0.12%)</title><rect x="97.4239%" y="325" width="0.1171%" height="15" fill="rgb(240,216,3)"/><text x="97.6739%" y="335.50"></text></g><g><title>nohz_balance_exit_idle (1 samples, 0.12%)</title><rect x="97.4239%" y="309" width="0.1171%" height="15" fill="rgb(232,218,17)"/><text x="97.6739%" y="319.50"></text></g><g><title>lobsters::init_database (1 samples, 0.12%)</title><rect x="97.5410%" y="741" width="0.1171%" height="15" fill="rgb(229,163,45)"/><text x="97.7910%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="97.5410%" y="725" width="0.1171%" height="15" fill="rgb(231,110,42)"/><text x="97.7910%" y="735.50"></text></g><g><title>page_fault (1 samples, 0.12%)</title><rect x="97.5410%" y="709" width="0.1171%" height="15" fill="rgb(208,170,48)"/><text x="97.7910%" y="719.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.12%)</title><rect x="97.5410%" y="693" width="0.1171%" height="15" fill="rgb(239,116,25)"/><text x="97.7910%" y="703.50"></text></g><g><title>handle_mm_fault (1 samples, 0.12%)</title><rect x="97.5410%" y="677" width="0.1171%" height="15" fill="rgb(219,200,50)"/><text x="97.7910%" y="687.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.12%)</title><rect x="97.5410%" y="661" width="0.1171%" height="15" fill="rgb(245,200,0)"/><text x="97.7910%" y="671.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.12%)</title><rect x="97.5410%" y="645" width="0.1171%" height="15" fill="rgb(245,119,33)"/><text x="97.7910%" y="655.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.12%)</title><rect x="97.5410%" y="629" width="0.1171%" height="15" fill="rgb(231,125,12)"/><text x="97.7910%" y="639.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.12%)</title><rect x="97.5410%" y="613" width="0.1171%" height="15" fill="rgb(216,96,41)"/><text x="97.7910%" y="623.50"></text></g><g><title>prep_new_page (1 samples, 0.12%)</title><rect x="97.5410%" y="597" width="0.1171%" height="15" fill="rgb(248,43,45)"/><text x="97.7910%" y="607.50"></text></g><g><title>kernel_init_free_pages (1 samples, 0.12%)</title><rect x="97.5410%" y="581" width="0.1171%" height="15" fill="rgb(217,222,7)"/><text x="97.7910%" y="591.50"></text></g><g><title>clear_page_erms (1 samples, 0.12%)</title><rect x="97.5410%" y="565" width="0.1171%" height="15" fill="rgb(233,28,6)"/><text x="97.7910%" y="575.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="97.8923%" y="709" width="0.1171%" height="15" fill="rgb(231,218,15)"/><text x="98.1423%" y="719.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (5 samples, 0.59%)</title><rect x="97.6581%" y="741" width="0.5855%" height="15" fill="rgb(226,171,48)"/><text x="97.9081%" y="751.50"></text></g><g><title>mysql::conn::Conn::_query (4 samples, 0.47%)</title><rect x="97.7752%" y="725" width="0.4684%" height="15" fill="rgb(235,201,9)"/><text x="98.0252%" y="735.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (2 samples, 0.23%)</title><rect x="98.0094%" y="709" width="0.2342%" height="15" fill="rgb(217,80,15)"/><text x="98.2594%" y="719.50"></text></g><g><title>__libc_start_main (253 samples, 29.63%)</title><rect x="68.7354%" y="901" width="29.6253%" height="15" fill="rgb(219,152,8)"/><text x="68.9854%" y="911.50">__libc_start_main</text></g><g><title>main (253 samples, 29.63%)</title><rect x="68.7354%" y="885" width="29.6253%" height="15" fill="rgb(243,107,38)"/><text x="68.9854%" y="895.50">main</text></g><g><title>std::rt::lang_start_internal (253 samples, 29.63%)</title><rect x="68.7354%" y="869" width="29.6253%" height="15" fill="rgb(231,17,5)"/><text x="68.9854%" y="879.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (253 samples, 29.63%)</title><rect x="68.7354%" y="853" width="29.6253%" height="15" fill="rgb(209,25,54)"/><text x="68.9854%" y="863.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (253 samples, 29.63%)</title><rect x="68.7354%" y="837" width="29.6253%" height="15" fill="rgb(219,0,2)"/><text x="68.9854%" y="847.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (253 samples, 29.63%)</title><rect x="68.7354%" y="821" width="29.6253%" height="15" fill="rgb(246,9,5)"/><text x="68.9854%" y="831.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (253 samples, 29.63%)</title><rect x="68.7354%" y="805" width="29.6253%" height="15" fill="rgb(226,159,4)"/><text x="68.9854%" y="815.50">core::ops::function::impls::&lt;impl core::ops::fun..</text></g><g><title>std::rt::lang_start::_{{closure}} (253 samples, 29.63%)</title><rect x="68.7354%" y="789" width="29.6253%" height="15" fill="rgb(219,175,34)"/><text x="68.9854%" y="799.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (253 samples, 29.63%)</title><rect x="68.7354%" y="773" width="29.6253%" height="15" fill="rgb(236,10,46)"/><text x="68.9854%" y="783.50">std::sys_common::backtrace::__rust_begin_short_b..</text></g><g><title>lobsters::main (253 samples, 29.63%)</title><rect x="68.7354%" y="757" width="29.6253%" height="15" fill="rgb(240,211,16)"/><text x="68.9854%" y="767.50">lobsters::main</text></g><g><title>std::net::each_addr (1 samples, 0.12%)</title><rect x="98.2436%" y="741" width="0.1171%" height="15" fill="rgb(205,3,43)"/><text x="98.4936%" y="751.50"></text></g><g><title>std::sys_common::net::TcpListener::bind (1 samples, 0.12%)</title><rect x="98.2436%" y="725" width="0.1171%" height="15" fill="rgb(245,7,22)"/><text x="98.4936%" y="735.50"></text></g><g><title>__bind (1 samples, 0.12%)</title><rect x="98.2436%" y="709" width="0.1171%" height="15" fill="rgb(239,132,32)"/><text x="98.4936%" y="719.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.12%)</title><rect x="98.2436%" y="693" width="0.1171%" height="15" fill="rgb(228,202,34)"/><text x="98.4936%" y="703.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.12%)</title><rect x="98.2436%" y="677" width="0.1171%" height="15" fill="rgb(254,200,22)"/><text x="98.4936%" y="687.50"></text></g><g><title>_start (254 samples, 29.74%)</title><rect x="68.7354%" y="917" width="29.7424%" height="15" fill="rgb(219,10,39)"/><text x="68.9854%" y="927.50">_start</text></g><g><title>_dl_start (1 samples, 0.12%)</title><rect x="98.3607%" y="901" width="0.1171%" height="15" fill="rgb(226,210,39)"/><text x="98.6107%" y="911.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.12%)</title><rect x="98.3607%" y="885" width="0.1171%" height="15" fill="rgb(208,219,16)"/><text x="98.6107%" y="895.50"></text></g><g><title>dl_main (1 samples, 0.12%)</title><rect x="98.3607%" y="869" width="0.1171%" height="15" fill="rgb(216,158,51)"/><text x="98.6107%" y="879.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.12%)</title><rect x="98.3607%" y="853" width="0.1171%" height="15" fill="rgb(233,14,44)"/><text x="98.6107%" y="863.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.12%)</title><rect x="98.3607%" y="837" width="0.1171%" height="15" fill="rgb(237,97,39)"/><text x="98.6107%" y="847.50"></text></g><g><title>do_lookup_x (1 samples, 0.12%)</title><rect x="98.3607%" y="821" width="0.1171%" height="15" fill="rgb(218,198,43)"/><text x="98.6107%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="98.4778%" y="917" width="0.1171%" height="15" fill="rgb(231,104,20)"/><text x="98.7278%" y="927.50"></text></g><g><title>call_function_single_interrupt (1 samples, 0.12%)</title><rect x="98.5948%" y="917" width="0.1171%" height="15" fill="rgb(254,36,13)"/><text x="98.8448%" y="927.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.12%)</title><rect x="98.8290%" y="805" width="0.1171%" height="15" fill="rgb(248,14,50)"/><text x="99.0790%" y="815.50"></text></g><g><title>release_pages (1 samples, 0.12%)</title><rect x="98.8290%" y="789" width="0.1171%" height="15" fill="rgb(217,107,29)"/><text x="99.0790%" y="799.50"></text></g><g><title>free_unref_page_list (1 samples, 0.12%)</title><rect x="98.8290%" y="773" width="0.1171%" height="15" fill="rgb(251,169,33)"/><text x="99.0790%" y="783.50"></text></g><g><title>free_pcppages_bulk (1 samples, 0.12%)</title><rect x="98.8290%" y="757" width="0.1171%" height="15" fill="rgb(217,108,32)"/><text x="99.0790%" y="767.50"></text></g><g><title>__free_one_page (1 samples, 0.12%)</title><rect x="98.8290%" y="741" width="0.1171%" height="15" fill="rgb(219,66,42)"/><text x="99.0790%" y="751.50"></text></g><g><title>[vmlinux] (3 samples, 0.35%)</title><rect x="98.8290%" y="885" width="0.3513%" height="15" fill="rgb(206,180,7)"/><text x="99.0790%" y="895.50"></text></g><g><title>do_group_exit (3 samples, 0.35%)</title><rect x="98.8290%" y="869" width="0.3513%" height="15" fill="rgb(208,226,31)"/><text x="99.0790%" y="879.50"></text></g><g><title>do_exit (3 samples, 0.35%)</title><rect x="98.8290%" y="853" width="0.3513%" height="15" fill="rgb(218,26,49)"/><text x="99.0790%" y="863.50"></text></g><g><title>mmput (3 samples, 0.35%)</title><rect x="98.8290%" y="837" width="0.3513%" height="15" fill="rgb(233,197,48)"/><text x="99.0790%" y="847.50"></text></g><g><title>exit_mmap (3 samples, 0.35%)</title><rect x="98.8290%" y="821" width="0.3513%" height="15" fill="rgb(252,181,51)"/><text x="99.0790%" y="831.50"></text></g><g><title>unmap_vmas (2 samples, 0.23%)</title><rect x="98.9461%" y="805" width="0.2342%" height="15" fill="rgb(253,90,19)"/><text x="99.1961%" y="815.50"></text></g><g><title>unmap_page_range (2 samples, 0.23%)</title><rect x="98.9461%" y="789" width="0.2342%" height="15" fill="rgb(215,171,30)"/><text x="99.1961%" y="799.50"></text></g><g><title>lobsters (848 samples, 99.30%)</title><rect x="0.0000%" y="933" width="99.2974%" height="15" fill="rgb(214,222,9)"/><text x="0.2500%" y="943.50">lobsters</text></g><g><title>entry_SYSCALL_64 (5 samples, 0.59%)</title><rect x="98.7119%" y="917" width="0.5855%" height="15" fill="rgb(223,3,22)"/><text x="98.9619%" y="927.50"></text></g><g><title>do_syscall_64 (4 samples, 0.47%)</title><rect x="98.8290%" y="901" width="0.4684%" height="15" fill="rgb(225,196,46)"/><text x="99.0790%" y="911.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.12%)</title><rect x="99.1803%" y="885" width="0.1171%" height="15" fill="rgb(209,110,37)"/><text x="99.4303%" y="895.50"></text></g><g><title>do_execve (1 samples, 0.12%)</title><rect x="99.1803%" y="869" width="0.1171%" height="15" fill="rgb(249,89,12)"/><text x="99.4303%" y="879.50"></text></g><g><title>__do_execve_file (1 samples, 0.12%)</title><rect x="99.1803%" y="853" width="0.1171%" height="15" fill="rgb(226,27,33)"/><text x="99.4303%" y="863.50"></text></g><g><title>search_binary_handler.part.0 (1 samples, 0.12%)</title><rect x="99.1803%" y="837" width="0.1171%" height="15" fill="rgb(213,82,22)"/><text x="99.4303%" y="847.50"></text></g><g><title>load_elf_binary (1 samples, 0.12%)</title><rect x="99.1803%" y="821" width="0.1171%" height="15" fill="rgb(248,140,0)"/><text x="99.4303%" y="831.50"></text></g><g><title>__clear_user (1 samples, 0.12%)</title><rect x="99.1803%" y="805" width="0.1171%" height="15" fill="rgb(228,106,3)"/><text x="99.4303%" y="815.50"></text></g><g><title>page_fault (1 samples, 0.12%)</title><rect x="99.1803%" y="789" width="0.1171%" height="15" fill="rgb(209,23,37)"/><text x="99.4303%" y="799.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.12%)</title><rect x="99.1803%" y="773" width="0.1171%" height="15" fill="rgb(241,93,50)"/><text x="99.4303%" y="783.50"></text></g><g><title>handle_mm_fault (1 samples, 0.12%)</title><rect x="99.1803%" y="757" width="0.1171%" height="15" fill="rgb(253,46,43)"/><text x="99.4303%" y="767.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.12%)</title><rect x="99.1803%" y="741" width="0.1171%" height="15" fill="rgb(226,206,43)"/><text x="99.4303%" y="751.50"></text></g><g><title>__do_fault (1 samples, 0.12%)</title><rect x="99.1803%" y="725" width="0.1171%" height="15" fill="rgb(217,54,7)"/><text x="99.4303%" y="735.50"></text></g><g><title>[[ext4]] (1 samples, 0.12%)</title><rect x="99.1803%" y="709" width="0.1171%" height="15" fill="rgb(223,5,52)"/><text x="99.4303%" y="719.50"></text></g><g><title>filemap_fault (1 samples, 0.12%)</title><rect x="99.1803%" y="693" width="0.1171%" height="15" fill="rgb(206,52,46)"/><text x="99.4303%" y="703.50"></text></g><g><title>pagecache_get_page (1 samples, 0.12%)</title><rect x="99.1803%" y="677" width="0.1171%" height="15" fill="rgb(253,136,11)"/><text x="99.4303%" y="687.50"></text></g><g><title>find_get_entry (1 samples, 0.12%)</title><rect x="99.1803%" y="661" width="0.1171%" height="15" fill="rgb(208,106,33)"/><text x="99.4303%" y="671.50"></text></g><g><title>all (854 samples, 100%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(206,54,4)"/><text x="0.2500%" y="959.50"></text></g><g><title>perf (6 samples, 0.70%)</title><rect x="99.2974%" y="933" width="0.7026%" height="15" fill="rgb(213,3,15)"/><text x="99.5474%" y="943.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.70%)</title><rect x="99.2974%" y="917" width="0.7026%" height="15" fill="rgb(252,211,39)"/><text x="99.5474%" y="927.50"></text></g><g><title>do_syscall_64 (6 samples, 0.70%)</title><rect x="99.2974%" y="901" width="0.7026%" height="15" fill="rgb(223,6,36)"/><text x="99.5474%" y="911.50"></text></g><g><title>__x64_sys_execve (6 samples, 0.70%)</title><rect x="99.2974%" y="885" width="0.7026%" height="15" fill="rgb(252,169,45)"/><text x="99.5474%" y="895.50"></text></g><g><title>do_execve (6 samples, 0.70%)</title><rect x="99.2974%" y="869" width="0.7026%" height="15" fill="rgb(212,48,26)"/><text x="99.5474%" y="879.50"></text></g><g><title>__do_execve_file (6 samples, 0.70%)</title><rect x="99.2974%" y="853" width="0.7026%" height="15" fill="rgb(251,102,48)"/><text x="99.5474%" y="863.50"></text></g><g><title>search_binary_handler.part.0 (6 samples, 0.70%)</title><rect x="99.2974%" y="837" width="0.7026%" height="15" fill="rgb(243,208,16)"/><text x="99.5474%" y="847.50"></text></g><g><title>load_elf_binary (6 samples, 0.70%)</title><rect x="99.2974%" y="821" width="0.7026%" height="15" fill="rgb(219,96,24)"/><text x="99.5474%" y="831.50"></text></g><g><title>setup_new_exec (6 samples, 0.70%)</title><rect x="99.2974%" y="805" width="0.7026%" height="15" fill="rgb(219,33,29)"/><text x="99.5474%" y="815.50"></text></g><g><title>perf_event_exec (6 samples, 0.70%)</title><rect x="99.2974%" y="789" width="0.7026%" height="15" fill="rgb(223,176,5)"/><text x="99.5474%" y="799.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (6 samples, 0.70%)</title><rect x="99.2974%" y="773" width="0.7026%" height="15" fill="rgb(228,140,14)"/><text x="99.5474%" y="783.50"></text></g><g><title>native_write_msr (6 samples, 0.70%)</title><rect x="99.2974%" y="757" width="0.7026%" height="15" fill="rgb(217,179,31)"/><text x="99.5474%" y="767.50"></text></g></svg></svg>