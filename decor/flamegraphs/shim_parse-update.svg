<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="998" onload="init(evt)" viewBox="0 0 1200 998" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="998" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="981.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="981.00"> </text><svg id="frames" x="10" width="1180"><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.28%)</title><rect x="0.0000%" y="901" width="0.2793%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="911.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (3 samples, 0.42%)</title><rect x="0.2793%" y="901" width="0.4190%" height="15" fill="rgb(217,0,24)"/><text x="0.5293%" y="911.50"></text></g><g><title>&lt;std::io::buffered::BufWriter&lt;W&gt;::flush_buf::BufGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="0.6983%" y="901" width="0.1397%" height="15" fill="rgb(221,193,54)"/><text x="0.9483%" y="911.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.14%)</title><rect x="0.8380%" y="901" width="0.1397%" height="15" fill="rgb(248,212,6)"/><text x="1.0880%" y="911.50"></text></g><g><title>std::sys_common::net::TcpStream::read (1 samples, 0.14%)</title><rect x="0.8380%" y="885" width="0.1397%" height="15" fill="rgb(208,68,35)"/><text x="1.0880%" y="895.50"></text></g><g><title>std::sys::unix::net::Socket::read (1 samples, 0.14%)</title><rect x="0.8380%" y="869" width="0.1397%" height="15" fill="rgb(232,128,0)"/><text x="1.0880%" y="879.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (1 samples, 0.14%)</title><rect x="0.8380%" y="853" width="0.1397%" height="15" fill="rgb(207,160,47)"/><text x="1.0880%" y="863.50"></text></g><g><title>__libc_recv (1 samples, 0.14%)</title><rect x="0.8380%" y="837" width="0.1397%" height="15" fill="rgb(228,23,34)"/><text x="1.0880%" y="847.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="0.8380%" y="821" width="0.1397%" height="15" fill="rgb(218,30,26)"/><text x="1.0880%" y="831.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="0.9777%" y="901" width="0.1397%" height="15" fill="rgb(220,122,19)"/><text x="1.2277%" y="911.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.14%)</title><rect x="1.1173%" y="901" width="0.1397%" height="15" fill="rgb(250,228,42)"/><text x="1.3673%" y="911.50"></text></g><g><title>__rdl_alloc (1 samples, 0.14%)</title><rect x="1.2570%" y="901" width="0.1397%" height="15" fill="rgb(240,193,28)"/><text x="1.5070%" y="911.50"></text></g><g><title>_int_free (2 samples, 0.28%)</title><rect x="1.3966%" y="901" width="0.2793%" height="15" fill="rgb(216,20,37)"/><text x="1.6466%" y="911.50"></text></g><g><title>_int_malloc (1 samples, 0.14%)</title><rect x="1.6760%" y="901" width="0.1397%" height="15" fill="rgb(206,188,39)"/><text x="1.9260%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.42%)</title><rect x="1.8156%" y="901" width="0.4190%" height="15" fill="rgb(217,207,13)"/><text x="2.0656%" y="911.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (2 samples, 0.28%)</title><rect x="2.2346%" y="901" width="0.2793%" height="15" fill="rgb(231,73,38)"/><text x="2.4846%" y="911.50"></text></g><g><title>core::fmt::Formatter::pad (2 samples, 0.28%)</title><rect x="2.5140%" y="901" width="0.2793%" height="15" fill="rgb(225,20,46)"/><text x="2.7640%" y="911.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.14%)</title><rect x="2.7933%" y="901" width="0.1397%" height="15" fill="rgb(210,31,41)"/><text x="3.0433%" y="911.50"></text></g><g><title>core::str::pattern::StrSearcher::new (1 samples, 0.14%)</title><rect x="2.9330%" y="901" width="0.1397%" height="15" fill="rgb(221,200,47)"/><text x="3.1830%" y="911.50"></text></g><g><title>mysql_common::packets::parse_ok_packet (1 samples, 0.14%)</title><rect x="3.0726%" y="901" width="0.1397%" height="15" fill="rgb(226,26,5)"/><text x="3.3226%" y="911.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.14%)</title><rect x="3.2123%" y="901" width="0.1397%" height="15" fill="rgb(249,33,26)"/><text x="3.4623%" y="911.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.14%)</title><rect x="3.3520%" y="901" width="0.1397%" height="15" fill="rgb(235,183,28)"/><text x="3.6020%" y="911.50"></text></g><g><title>sql_parser::parser::Parser::get_next_precedence (2 samples, 0.28%)</title><rect x="3.4916%" y="901" width="0.2793%" height="15" fill="rgb(221,5,38)"/><text x="3.7416%" y="911.50"></text></g><g><title>sql_parser::parser::Parser::parse_identifier (1 samples, 0.14%)</title><rect x="3.7709%" y="901" width="0.1397%" height="15" fill="rgb(247,18,42)"/><text x="4.0209%" y="911.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (1 samples, 0.14%)</title><rect x="3.9106%" y="901" width="0.1397%" height="15" fill="rgb(241,131,45)"/><text x="4.1606%" y="911.50"></text></g><g><title>sql_parser::parser::Parser::parse_one_of_keywords (1 samples, 0.14%)</title><rect x="4.0503%" y="901" width="0.1397%" height="15" fill="rgb(249,31,29)"/><text x="4.3003%" y="911.50"></text></g><g><title>[anon] (31 samples, 4.33%)</title><rect x="0.0000%" y="917" width="4.3296%" height="15" fill="rgb(225,111,53)"/><text x="0.2500%" y="927.50">[anon]</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_word (1 samples, 0.14%)</title><rect x="4.1899%" y="901" width="0.1397%" height="15" fill="rgb(238,160,17)"/><text x="4.4399%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="4.3296%" y="901" width="0.1397%" height="15" fill="rgb(214,148,48)"/><text x="4.5796%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="4.3296%" y="885" width="0.1397%" height="15" fill="rgb(232,36,49)"/><text x="4.5796%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.14%)</title><rect x="4.3296%" y="869" width="0.1397%" height="15" fill="rgb(209,103,24)"/><text x="4.5796%" y="879.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.14%)</title><rect x="4.3296%" y="853" width="0.1397%" height="15" fill="rgb(229,88,8)"/><text x="4.5796%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.14%)</title><rect x="4.3296%" y="837" width="0.1397%" height="15" fill="rgb(213,181,19)"/><text x="4.5796%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.14%)</title><rect x="4.3296%" y="821" width="0.1397%" height="15" fill="rgb(254,191,54)"/><text x="4.5796%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="4.3296%" y="805" width="0.1397%" height="15" fill="rgb(241,83,37)"/><text x="4.5796%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.14%)</title><rect x="4.3296%" y="789" width="0.1397%" height="15" fill="rgb(233,36,39)"/><text x="4.5796%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.14%)</title><rect x="4.3296%" y="773" width="0.1397%" height="15" fill="rgb(226,3,54)"/><text x="4.5796%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.14%)</title><rect x="4.3296%" y="757" width="0.1397%" height="15" fill="rgb(245,192,40)"/><text x="4.5796%" y="767.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.14%)</title><rect x="4.3296%" y="741" width="0.1397%" height="15" fill="rgb(238,167,29)"/><text x="4.5796%" y="751.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.14%)</title><rect x="4.4693%" y="901" width="0.1397%" height="15" fill="rgb(232,182,51)"/><text x="4.7193%" y="911.50"></text></g><g><title>[lobsters] (3 samples, 0.42%)</title><rect x="4.3296%" y="917" width="0.4190%" height="15" fill="rgb(231,60,39)"/><text x="4.5796%" y="927.50"></text></g><g><title>core::fmt::write (1 samples, 0.14%)</title><rect x="4.6089%" y="901" width="0.1397%" height="15" fill="rgb(208,69,12)"/><text x="4.8589%" y="911.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.14%)</title><rect x="4.7486%" y="901" width="0.1397%" height="15" fill="rgb(235,93,37)"/><text x="4.9986%" y="911.50"></text></g><g><title>sql_parser::parser::Parser::parse_identifier (2 samples, 0.28%)</title><rect x="5.0279%" y="853" width="0.2793%" height="15" fill="rgb(213,116,39)"/><text x="5.2779%" y="863.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (2 samples, 0.28%)</title><rect x="5.0279%" y="837" width="0.2793%" height="15" fill="rgb(222,207,29)"/><text x="5.2779%" y="847.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_lower (2 samples, 0.28%)</title><rect x="5.0279%" y="821" width="0.2793%" height="15" fill="rgb(206,96,30)"/><text x="5.2779%" y="831.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.28%)</title><rect x="5.0279%" y="805" width="0.2793%" height="15" fill="rgb(218,138,4)"/><text x="5.2779%" y="815.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.28%)</title><rect x="5.0279%" y="789" width="0.2793%" height="15" fill="rgb(250,191,14)"/><text x="5.2779%" y="799.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (2 samples, 0.28%)</title><rect x="6.0056%" y="837" width="0.2793%" height="15" fill="rgb(239,60,40)"/><text x="6.2556%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.28%)</title><rect x="6.0056%" y="821" width="0.2793%" height="15" fill="rgb(206,27,48)"/><text x="6.2556%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.28%)</title><rect x="6.0056%" y="805" width="0.2793%" height="15" fill="rgb(225,35,8)"/><text x="6.2556%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.28%)</title><rect x="6.0056%" y="789" width="0.2793%" height="15" fill="rgb(250,213,24)"/><text x="6.2556%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.28%)</title><rect x="6.0056%" y="773" width="0.2793%" height="15" fill="rgb(247,123,22)"/><text x="6.2556%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.28%)</title><rect x="6.0056%" y="757" width="0.2793%" height="15" fill="rgb(231,138,38)"/><text x="6.2556%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.28%)</title><rect x="6.0056%" y="741" width="0.2793%" height="15" fill="rgb(231,145,46)"/><text x="6.2556%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.28%)</title><rect x="6.0056%" y="725" width="0.2793%" height="15" fill="rgb(251,118,11)"/><text x="6.2556%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.28%)</title><rect x="6.0056%" y="709" width="0.2793%" height="15" fill="rgb(217,147,25)"/><text x="6.2556%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.28%)</title><rect x="6.0056%" y="693" width="0.2793%" height="15" fill="rgb(247,81,37)"/><text x="6.2556%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.28%)</title><rect x="6.0056%" y="677" width="0.2793%" height="15" fill="rgb(209,12,38)"/><text x="6.2556%" y="687.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.28%)</title><rect x="6.0056%" y="661" width="0.2793%" height="15" fill="rgb(227,1,9)"/><text x="6.2556%" y="671.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.28%)</title><rect x="6.0056%" y="645" width="0.2793%" height="15" fill="rgb(248,47,43)"/><text x="6.2556%" y="655.50"></text></g><g><title>_int_malloc (1 samples, 0.14%)</title><rect x="6.1453%" y="629" width="0.1397%" height="15" fill="rgb(221,10,30)"/><text x="6.3953%" y="639.50"></text></g><g><title>__memcmp_avx2_movbe (4 samples, 0.56%)</title><rect x="6.2849%" y="837" width="0.5587%" height="15" fill="rgb(210,229,1)"/><text x="6.5349%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (12 samples, 1.68%)</title><rect x="5.3073%" y="853" width="1.6760%" height="15" fill="rgb(222,148,37)"/><text x="5.5573%" y="863.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.14%)</title><rect x="6.8436%" y="837" width="0.1397%" height="15" fill="rgb(234,67,33)"/><text x="7.0936%" y="847.50"></text></g><g><title>_int_free (1 samples, 0.14%)</title><rect x="6.8436%" y="821" width="0.1397%" height="15" fill="rgb(247,98,35)"/><text x="7.0936%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.14%)</title><rect x="6.9832%" y="837" width="0.1397%" height="15" fill="rgb(247,138,52)"/><text x="7.2332%" y="847.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.14%)</title><rect x="7.2626%" y="805" width="0.1397%" height="15" fill="rgb(213,79,30)"/><text x="7.5126%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.14%)</title><rect x="7.2626%" y="789" width="0.1397%" height="15" fill="rgb(246,177,23)"/><text x="7.5126%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.14%)</title><rect x="7.2626%" y="773" width="0.1397%" height="15" fill="rgb(230,62,27)"/><text x="7.5126%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="7.2626%" y="757" width="0.1397%" height="15" fill="rgb(216,154,8)"/><text x="7.5126%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.14%)</title><rect x="7.2626%" y="741" width="0.1397%" height="15" fill="rgb(244,35,45)"/><text x="7.5126%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.14%)</title><rect x="7.2626%" y="725" width="0.1397%" height="15" fill="rgb(251,115,12)"/><text x="7.5126%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.14%)</title><rect x="7.2626%" y="709" width="0.1397%" height="15" fill="rgb(240,54,50)"/><text x="7.5126%" y="719.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.14%)</title><rect x="7.2626%" y="693" width="0.1397%" height="15" fill="rgb(233,84,52)"/><text x="7.5126%" y="703.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="7.2626%" y="677" width="0.1397%" height="15" fill="rgb(207,117,47)"/><text x="7.5126%" y="687.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (19 samples, 2.65%)</title><rect x="4.8883%" y="901" width="2.6536%" height="15" fill="rgb(249,43,39)"/><text x="5.1383%" y="911.50">&lt;d..</text></g><g><title>sql_parser::parser::parse_statements (19 samples, 2.65%)</title><rect x="4.8883%" y="885" width="2.6536%" height="15" fill="rgb(209,38,44)"/><text x="5.1383%" y="895.50">sq..</text></g><g><title>sql_parser::parser::Parser::parse_statement (19 samples, 2.65%)</title><rect x="4.8883%" y="869" width="2.6536%" height="15" fill="rgb(236,212,23)"/><text x="5.1383%" y="879.50">sq..</text></g><g><title>sql_parser::parser::Parser::parse_object_name (4 samples, 0.56%)</title><rect x="6.9832%" y="853" width="0.5587%" height="15" fill="rgb(242,79,21)"/><text x="7.2332%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::parse_identifier (3 samples, 0.42%)</title><rect x="7.1229%" y="837" width="0.4190%" height="15" fill="rgb(211,96,35)"/><text x="7.3729%" y="847.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (3 samples, 0.42%)</title><rect x="7.1229%" y="821" width="0.4190%" height="15" fill="rgb(253,215,40)"/><text x="7.3729%" y="831.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_lower (1 samples, 0.14%)</title><rect x="7.4022%" y="805" width="0.1397%" height="15" fill="rgb(211,81,21)"/><text x="7.6522%" y="815.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (1 samples, 0.14%)</title><rect x="7.4022%" y="789" width="0.1397%" height="15" fill="rgb(208,190,38)"/><text x="7.6522%" y="799.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.14%)</title><rect x="7.4022%" y="773" width="0.1397%" height="15" fill="rgb(235,213,38)"/><text x="7.6522%" y="783.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (1 samples, 0.14%)</title><rect x="7.4022%" y="757" width="0.1397%" height="15" fill="rgb(237,122,38)"/><text x="7.6522%" y="767.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="7.5419%" y="901" width="0.1397%" height="15" fill="rgb(244,218,35)"/><text x="7.7919%" y="911.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.14%)</title><rect x="7.6816%" y="901" width="0.1397%" height="15" fill="rgb(240,68,47)"/><text x="7.9316%" y="911.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="7.8212%" y="725" width="0.1397%" height="15" fill="rgb(210,16,53)"/><text x="8.0712%" y="735.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::encode (1 samples, 0.14%)</title><rect x="7.9609%" y="693" width="0.1397%" height="15" fill="rgb(235,124,12)"/><text x="8.2109%" y="703.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::encode (1 samples, 0.14%)</title><rect x="7.9609%" y="677" width="0.1397%" height="15" fill="rgb(224,169,11)"/><text x="8.2109%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.14%)</title><rect x="8.1006%" y="693" width="0.1397%" height="15" fill="rgb(250,166,2)"/><text x="8.3506%" y="703.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.14%)</title><rect x="8.2402%" y="533" width="0.1397%" height="15" fill="rgb(242,216,29)"/><text x="8.4902%" y="543.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.14%)</title><rect x="8.2402%" y="517" width="0.1397%" height="15" fill="rgb(230,116,27)"/><text x="8.4902%" y="527.50"></text></g><g><title>release_sock (1 samples, 0.14%)</title><rect x="8.3799%" y="533" width="0.1397%" height="15" fill="rgb(228,99,48)"/><text x="8.6299%" y="543.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.14%)</title><rect x="8.3799%" y="517" width="0.1397%" height="15" fill="rgb(253,11,6)"/><text x="8.6299%" y="527.50"></text></g><g><title>preempt_count_add (1 samples, 0.14%)</title><rect x="8.3799%" y="501" width="0.1397%" height="15" fill="rgb(247,143,39)"/><text x="8.6299%" y="511.50"></text></g><g><title>in_lock_functions (1 samples, 0.14%)</title><rect x="8.3799%" y="485" width="0.1397%" height="15" fill="rgb(236,97,10)"/><text x="8.6299%" y="495.50"></text></g><g><title>__ip_local_out (1 samples, 0.14%)</title><rect x="8.6592%" y="453" width="0.1397%" height="15" fill="rgb(233,208,19)"/><text x="8.9092%" y="463.50"></text></g><g><title>ip_send_check (1 samples, 0.14%)</title><rect x="8.6592%" y="437" width="0.1397%" height="15" fill="rgb(216,164,2)"/><text x="8.9092%" y="447.50"></text></g><g><title>__netif_receive_skb_core (2 samples, 0.28%)</title><rect x="9.0782%" y="309" width="0.2793%" height="15" fill="rgb(220,129,5)"/><text x="9.3282%" y="319.50"></text></g><g><title>psi_task_change (2 samples, 0.28%)</title><rect x="9.4972%" y="117" width="0.2793%" height="15" fill="rgb(242,17,10)"/><text x="9.7472%" y="127.50"></text></g><g><title>psi_group_change (2 samples, 0.28%)</title><rect x="9.4972%" y="101" width="0.2793%" height="15" fill="rgb(242,107,0)"/><text x="9.7472%" y="111.50"></text></g><g><title>record_times (2 samples, 0.28%)</title><rect x="9.4972%" y="85" width="0.2793%" height="15" fill="rgb(251,28,31)"/><text x="9.7472%" y="95.50"></text></g><g><title>sched_clock_cpu (2 samples, 0.28%)</title><rect x="9.4972%" y="69" width="0.2793%" height="15" fill="rgb(233,223,10)"/><text x="9.7472%" y="79.50"></text></g><g><title>sched_clock (1 samples, 0.14%)</title><rect x="9.6369%" y="53" width="0.1397%" height="15" fill="rgb(215,21,27)"/><text x="9.8869%" y="63.50"></text></g><g><title>native_sched_clock (1 samples, 0.14%)</title><rect x="9.6369%" y="37" width="0.1397%" height="15" fill="rgb(232,23,21)"/><text x="9.8869%" y="47.50"></text></g><g><title>__wake_up_common (4 samples, 0.56%)</title><rect x="9.4972%" y="165" width="0.5587%" height="15" fill="rgb(244,5,23)"/><text x="9.7472%" y="175.50"></text></g><g><title>try_to_wake_up (4 samples, 0.56%)</title><rect x="9.4972%" y="149" width="0.5587%" height="15" fill="rgb(226,81,46)"/><text x="9.7472%" y="159.50"></text></g><g><title>enqueue_task (4 samples, 0.56%)</title><rect x="9.4972%" y="133" width="0.5587%" height="15" fill="rgb(247,70,30)"/><text x="9.7472%" y="143.50"></text></g><g><title>uclamp_rq_inc_id (2 samples, 0.28%)</title><rect x="9.7765%" y="117" width="0.2793%" height="15" fill="rgb(212,68,19)"/><text x="10.0265%" y="127.50"></text></g><g><title>sock_def_readable (5 samples, 0.70%)</title><rect x="9.4972%" y="197" width="0.6983%" height="15" fill="rgb(240,187,13)"/><text x="9.7472%" y="207.50"></text></g><g><title>__wake_up_common_lock (5 samples, 0.70%)</title><rect x="9.4972%" y="181" width="0.6983%" height="15" fill="rgb(223,113,26)"/><text x="9.7472%" y="191.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.14%)</title><rect x="10.0559%" y="165" width="0.1397%" height="15" fill="rgb(206,192,2)"/><text x="10.3059%" y="175.50"></text></g><g><title>skb_release_data (2 samples, 0.28%)</title><rect x="10.6145%" y="165" width="0.2793%" height="15" fill="rgb(241,108,4)"/><text x="10.8645%" y="175.50"></text></g><g><title>__kfree_skb (3 samples, 0.42%)</title><rect x="10.6145%" y="181" width="0.4190%" height="15" fill="rgb(247,173,49)"/><text x="10.8645%" y="191.50"></text></g><g><title>skb_release_head_state (1 samples, 0.14%)</title><rect x="10.8939%" y="165" width="0.1397%" height="15" fill="rgb(224,114,35)"/><text x="11.1439%" y="175.50"></text></g><g><title>tcp_ack (7 samples, 0.98%)</title><rect x="10.1955%" y="197" width="0.9777%" height="15" fill="rgb(245,159,27)"/><text x="10.4455%" y="207.50"></text></g><g><title>kmem_cache_free (1 samples, 0.14%)</title><rect x="11.0335%" y="181" width="0.1397%" height="15" fill="rgb(245,172,44)"/><text x="11.2835%" y="191.50"></text></g><g><title>__slab_free (1 samples, 0.14%)</title><rect x="11.0335%" y="165" width="0.1397%" height="15" fill="rgb(236,23,11)"/><text x="11.2835%" y="175.50"></text></g><g><title>__tcp_push_pending_frames (20 samples, 2.79%)</title><rect x="8.5196%" y="517" width="2.7933%" height="15" fill="rgb(205,117,38)"/><text x="8.7696%" y="527.50">__..</text></g><g><title>tcp_write_xmit (20 samples, 2.79%)</title><rect x="8.5196%" y="501" width="2.7933%" height="15" fill="rgb(237,72,25)"/><text x="8.7696%" y="511.50">tc..</text></g><g><title>__tcp_transmit_skb (20 samples, 2.79%)</title><rect x="8.5196%" y="485" width="2.7933%" height="15" fill="rgb(244,70,9)"/><text x="8.7696%" y="495.50">__..</text></g><g><title>__ip_queue_xmit (20 samples, 2.79%)</title><rect x="8.5196%" y="469" width="2.7933%" height="15" fill="rgb(217,125,39)"/><text x="8.7696%" y="479.50">__..</text></g><g><title>ip_output (18 samples, 2.51%)</title><rect x="8.7989%" y="453" width="2.5140%" height="15" fill="rgb(235,36,10)"/><text x="9.0489%" y="463.50">ip..</text></g><g><title>ip_finish_output2 (17 samples, 2.37%)</title><rect x="8.9385%" y="437" width="2.3743%" height="15" fill="rgb(251,123,47)"/><text x="9.1885%" y="447.50">ip..</text></g><g><title>__local_bh_enable_ip (17 samples, 2.37%)</title><rect x="8.9385%" y="421" width="2.3743%" height="15" fill="rgb(221,13,13)"/><text x="9.1885%" y="431.50">__..</text></g><g><title>do_softirq (17 samples, 2.37%)</title><rect x="8.9385%" y="405" width="2.3743%" height="15" fill="rgb(238,131,9)"/><text x="9.1885%" y="415.50">do..</text></g><g><title>do_softirq_own_stack (17 samples, 2.37%)</title><rect x="8.9385%" y="389" width="2.3743%" height="15" fill="rgb(211,50,8)"/><text x="9.1885%" y="399.50">do..</text></g><g><title>__do_softirq (16 samples, 2.23%)</title><rect x="9.0782%" y="373" width="2.2346%" height="15" fill="rgb(245,182,24)"/><text x="9.3282%" y="383.50">_..</text></g><g><title>net_rx_action (16 samples, 2.23%)</title><rect x="9.0782%" y="357" width="2.2346%" height="15" fill="rgb(242,14,37)"/><text x="9.3282%" y="367.50">n..</text></g><g><title>process_backlog (16 samples, 2.23%)</title><rect x="9.0782%" y="341" width="2.2346%" height="15" fill="rgb(246,228,12)"/><text x="9.3282%" y="351.50">p..</text></g><g><title>__netif_receive_skb_one_core (16 samples, 2.23%)</title><rect x="9.0782%" y="325" width="2.2346%" height="15" fill="rgb(213,55,15)"/><text x="9.3282%" y="335.50">_..</text></g><g><title>ip_rcv (14 samples, 1.96%)</title><rect x="9.3575%" y="309" width="1.9553%" height="15" fill="rgb(209,9,3)"/><text x="9.6075%" y="319.50">i..</text></g><g><title>ip_local_deliver (14 samples, 1.96%)</title><rect x="9.3575%" y="293" width="1.9553%" height="15" fill="rgb(230,59,30)"/><text x="9.6075%" y="303.50">i..</text></g><g><title>ip_local_deliver_finish (14 samples, 1.96%)</title><rect x="9.3575%" y="277" width="1.9553%" height="15" fill="rgb(209,121,21)"/><text x="9.6075%" y="287.50">i..</text></g><g><title>ip_protocol_deliver_rcu (14 samples, 1.96%)</title><rect x="9.3575%" y="261" width="1.9553%" height="15" fill="rgb(220,109,13)"/><text x="9.6075%" y="271.50">i..</text></g><g><title>tcp_v4_rcv (14 samples, 1.96%)</title><rect x="9.3575%" y="245" width="1.9553%" height="15" fill="rgb(232,18,1)"/><text x="9.6075%" y="255.50">t..</text></g><g><title>tcp_v4_do_rcv (13 samples, 1.82%)</title><rect x="9.4972%" y="229" width="1.8156%" height="15" fill="rgb(215,41,42)"/><text x="9.7472%" y="239.50">t..</text></g><g><title>tcp_rcv_established (13 samples, 1.82%)</title><rect x="9.4972%" y="213" width="1.8156%" height="15" fill="rgb(224,123,36)"/><text x="9.7472%" y="223.50">t..</text></g><g><title>tcp_queue_rcv (1 samples, 0.14%)</title><rect x="11.1732%" y="197" width="0.1397%" height="15" fill="rgb(240,125,3)"/><text x="11.4232%" y="207.50"></text></g><g><title>sk_stream_alloc_skb (2 samples, 0.28%)</title><rect x="11.3128%" y="517" width="0.2793%" height="15" fill="rgb(205,98,50)"/><text x="11.5628%" y="527.50"></text></g><g><title>__alloc_skb (2 samples, 0.28%)</title><rect x="11.3128%" y="501" width="0.2793%" height="15" fill="rgb(205,185,37)"/><text x="11.5628%" y="511.50"></text></g><g><title>__kmalloc_node_track_caller (1 samples, 0.14%)</title><rect x="11.4525%" y="485" width="0.1397%" height="15" fill="rgb(238,207,15)"/><text x="11.7025%" y="495.50"></text></g><g><title>memset_erms (1 samples, 0.14%)</title><rect x="11.4525%" y="469" width="0.1397%" height="15" fill="rgb(213,199,42)"/><text x="11.7025%" y="479.50"></text></g><g><title>__x64_sys_sendto (25 samples, 3.49%)</title><rect x="8.2402%" y="597" width="3.4916%" height="15" fill="rgb(235,201,11)"/><text x="8.4902%" y="607.50">__x..</text></g><g><title>__sys_sendto (25 samples, 3.49%)</title><rect x="8.2402%" y="581" width="3.4916%" height="15" fill="rgb(207,46,11)"/><text x="8.4902%" y="591.50">__s..</text></g><g><title>sock_sendmsg (25 samples, 3.49%)</title><rect x="8.2402%" y="565" width="3.4916%" height="15" fill="rgb(241,35,35)"/><text x="8.4902%" y="575.50">soc..</text></g><g><title>tcp_sendmsg (25 samples, 3.49%)</title><rect x="8.2402%" y="549" width="3.4916%" height="15" fill="rgb(243,32,47)"/><text x="8.4902%" y="559.50">tcp..</text></g><g><title>tcp_sendmsg_locked (23 samples, 3.21%)</title><rect x="8.5196%" y="533" width="3.2123%" height="15" fill="rgb(247,202,23)"/><text x="8.7696%" y="543.50">tcp..</text></g><g><title>tcp_send_mss (1 samples, 0.14%)</title><rect x="11.5922%" y="517" width="0.1397%" height="15" fill="rgb(219,102,11)"/><text x="11.8422%" y="527.50"></text></g><g><title>tcp_current_mss (1 samples, 0.14%)</title><rect x="11.5922%" y="501" width="0.1397%" height="15" fill="rgb(243,110,44)"/><text x="11.8422%" y="511.50"></text></g><g><title>ipv4_mtu (1 samples, 0.14%)</title><rect x="11.5922%" y="485" width="0.1397%" height="15" fill="rgb(222,74,54)"/><text x="11.8422%" y="495.50"></text></g><g><title>do_syscall_64 (26 samples, 3.63%)</title><rect x="8.2402%" y="613" width="3.6313%" height="15" fill="rgb(216,99,12)"/><text x="8.4902%" y="623.50">do_s..</text></g><g><title>syscall_slow_exit_work (1 samples, 0.14%)</title><rect x="11.7318%" y="597" width="0.1397%" height="15" fill="rgb(226,22,26)"/><text x="11.9818%" y="607.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.14%)</title><rect x="11.7318%" y="581" width="0.1397%" height="15" fill="rgb(217,163,10)"/><text x="11.9818%" y="591.50"></text></g><g><title>path_put (1 samples, 0.14%)</title><rect x="11.7318%" y="565" width="0.1397%" height="15" fill="rgb(213,25,53)"/><text x="11.9818%" y="575.50"></text></g><g><title>__libc_start_main (31 samples, 4.33%)</title><rect x="7.8212%" y="901" width="4.3296%" height="15" fill="rgb(252,105,26)"/><text x="8.0712%" y="911.50">__lib..</text></g><g><title>main (31 samples, 4.33%)</title><rect x="7.8212%" y="885" width="4.3296%" height="15" fill="rgb(220,39,43)"/><text x="8.0712%" y="895.50">main</text></g><g><title>std::rt::lang_start_internal (31 samples, 4.33%)</title><rect x="7.8212%" y="869" width="4.3296%" height="15" fill="rgb(229,68,48)"/><text x="8.0712%" y="879.50">std::..</text></g><g><title>std::panic::catch_unwind (31 samples, 4.33%)</title><rect x="7.8212%" y="853" width="4.3296%" height="15" fill="rgb(252,8,32)"/><text x="8.0712%" y="863.50">std::..</text></g><g><title>std::panicking::try (31 samples, 4.33%)</title><rect x="7.8212%" y="837" width="4.3296%" height="15" fill="rgb(223,20,43)"/><text x="8.0712%" y="847.50">std::..</text></g><g><title>std::panicking::try::do_call (31 samples, 4.33%)</title><rect x="7.8212%" y="821" width="4.3296%" height="15" fill="rgb(229,81,49)"/><text x="8.0712%" y="831.50">std::..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (31 samples, 4.33%)</title><rect x="7.8212%" y="805" width="4.3296%" height="15" fill="rgb(236,28,36)"/><text x="8.0712%" y="815.50">core:..</text></g><g><title>std::rt::lang_start::_{{closure}} (31 samples, 4.33%)</title><rect x="7.8212%" y="789" width="4.3296%" height="15" fill="rgb(249,185,26)"/><text x="8.0712%" y="799.50">std::..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (31 samples, 4.33%)</title><rect x="7.8212%" y="773" width="4.3296%" height="15" fill="rgb(249,174,33)"/><text x="8.0712%" y="783.50">std::..</text></g><g><title>lobsters::main (31 samples, 4.33%)</title><rect x="7.8212%" y="757" width="4.3296%" height="15" fill="rgb(233,201,37)"/><text x="8.0712%" y="767.50">lobst..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (31 samples, 4.33%)</title><rect x="7.8212%" y="741" width="4.3296%" height="15" fill="rgb(221,78,26)"/><text x="8.0712%" y="751.50">mysql..</text></g><g><title>mysql::conn::Conn::_query (30 samples, 4.19%)</title><rect x="7.9609%" y="725" width="4.1899%" height="15" fill="rgb(250,127,30)"/><text x="8.2109%" y="735.50">mysql..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (30 samples, 4.19%)</title><rect x="7.9609%" y="709" width="4.1899%" height="15" fill="rgb(230,49,44)"/><text x="8.2109%" y="719.50">mysql..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (28 samples, 3.91%)</title><rect x="8.2402%" y="693" width="3.9106%" height="15" fill="rgb(229,67,23)"/><text x="8.4902%" y="703.50">std:..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (28 samples, 3.91%)</title><rect x="8.2402%" y="677" width="3.9106%" height="15" fill="rgb(249,83,47)"/><text x="8.4902%" y="687.50">&lt;std..</text></g><g><title>std::sys_common::net::TcpStream::write (28 samples, 3.91%)</title><rect x="8.2402%" y="661" width="3.9106%" height="15" fill="rgb(215,43,3)"/><text x="8.4902%" y="671.50">std:..</text></g><g><title>__libc_send (28 samples, 3.91%)</title><rect x="8.2402%" y="645" width="3.9106%" height="15" fill="rgb(238,154,13)"/><text x="8.4902%" y="655.50">__li..</text></g><g><title>entry_SYSCALL_64 (28 samples, 3.91%)</title><rect x="8.2402%" y="629" width="3.9106%" height="15" fill="rgb(219,56,2)"/><text x="8.4902%" y="639.50">entr..</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.28%)</title><rect x="11.8715%" y="613" width="0.2793%" height="15" fill="rgb(233,0,4)"/><text x="12.1215%" y="623.50"></text></g><g><title>_int_free (1 samples, 0.14%)</title><rect x="12.1508%" y="901" width="0.1397%" height="15" fill="rgb(235,30,7)"/><text x="12.4008%" y="911.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.14%)</title><rect x="12.2905%" y="901" width="0.1397%" height="15" fill="rgb(250,79,13)"/><text x="12.5405%" y="911.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.14%)</title><rect x="12.4302%" y="901" width="0.1397%" height="15" fill="rgb(211,146,34)"/><text x="12.6802%" y="911.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (2 samples, 0.28%)</title><rect x="12.5698%" y="901" width="0.2793%" height="15" fill="rgb(228,22,38)"/><text x="12.8198%" y="911.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2 samples, 0.28%)</title><rect x="12.5698%" y="885" width="0.2793%" height="15" fill="rgb(235,168,5)"/><text x="12.8198%" y="895.50"></text></g><g><title>decor::Shim::run_on_tcp (2 samples, 0.28%)</title><rect x="12.5698%" y="869" width="0.2793%" height="15" fill="rgb(221,155,16)"/><text x="12.8198%" y="879.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (2 samples, 0.28%)</title><rect x="12.5698%" y="853" width="0.2793%" height="15" fill="rgb(215,215,53)"/><text x="12.8198%" y="863.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (2 samples, 0.28%)</title><rect x="12.5698%" y="837" width="0.2793%" height="15" fill="rgb(223,4,10)"/><text x="12.8198%" y="847.50"></text></g><g><title>sql_parser::parser::parse_statements (2 samples, 0.28%)</title><rect x="12.5698%" y="821" width="0.2793%" height="15" fill="rgb(234,103,6)"/><text x="12.8198%" y="831.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (2 samples, 0.28%)</title><rect x="12.5698%" y="805" width="0.2793%" height="15" fill="rgb(227,97,0)"/><text x="12.8198%" y="815.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (2 samples, 0.28%)</title><rect x="12.5698%" y="789" width="0.2793%" height="15" fill="rgb(234,150,53)"/><text x="12.8198%" y="799.50"></text></g><g><title>sql_parser::tokenizer::PeekableChars::next (1 samples, 0.14%)</title><rect x="12.7095%" y="773" width="0.1397%" height="15" fill="rgb(228,201,54)"/><text x="12.9595%" y="783.50"></text></g><g><title>decor::Shim::create_schema (1 samples, 0.14%)</title><rect x="12.8492%" y="901" width="0.1397%" height="15" fill="rgb(222,22,37)"/><text x="13.0992%" y="911.50"></text></g><g><title>decor::query_transformer::QueryTransformer::get_mv_stmt (1 samples, 0.14%)</title><rect x="12.8492%" y="885" width="0.1397%" height="15" fill="rgb(237,53,32)"/><text x="13.0992%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="12.8492%" y="869" width="0.1397%" height="15" fill="rgb(233,25,53)"/><text x="13.0992%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.14%)</title><rect x="12.8492%" y="853" width="0.1397%" height="15" fill="rgb(210,40,34)"/><text x="13.0992%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="12.8492%" y="837" width="0.1397%" height="15" fill="rgb(241,220,44)"/><text x="13.0992%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.14%)</title><rect x="12.8492%" y="821" width="0.1397%" height="15" fill="rgb(235,28,35)"/><text x="13.0992%" y="831.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="12.8492%" y="805" width="0.1397%" height="15" fill="rgb(210,56,17)"/><text x="13.0992%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="12.8492%" y="789" width="0.1397%" height="15" fill="rgb(224,130,29)"/><text x="13.0992%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="12.8492%" y="773" width="0.1397%" height="15" fill="rgb(235,212,8)"/><text x="13.0992%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.14%)</title><rect x="12.8492%" y="757" width="0.1397%" height="15" fill="rgb(223,33,50)"/><text x="13.0992%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.14%)</title><rect x="12.8492%" y="741" width="0.1397%" height="15" fill="rgb(219,149,13)"/><text x="13.0992%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.14%)</title><rect x="12.8492%" y="725" width="0.1397%" height="15" fill="rgb(250,156,29)"/><text x="13.0992%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.14%)</title><rect x="12.8492%" y="709" width="0.1397%" height="15" fill="rgb(216,193,19)"/><text x="13.0992%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="12.8492%" y="693" width="0.1397%" height="15" fill="rgb(216,135,14)"/><text x="13.0992%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.14%)</title><rect x="12.8492%" y="677" width="0.1397%" height="15" fill="rgb(241,47,5)"/><text x="13.0992%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.14%)</title><rect x="12.8492%" y="661" width="0.1397%" height="15" fill="rgb(233,42,35)"/><text x="13.0992%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.14%)</title><rect x="12.8492%" y="645" width="0.1397%" height="15" fill="rgb(231,13,6)"/><text x="13.0992%" y="655.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.14%)</title><rect x="12.8492%" y="629" width="0.1397%" height="15" fill="rgb(207,181,40)"/><text x="13.0992%" y="639.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="12.8492%" y="613" width="0.1397%" height="15" fill="rgb(254,173,49)"/><text x="13.0992%" y="623.50"></text></g><g><title>hwloc::Topology::new (1 samples, 0.14%)</title><rect x="12.9888%" y="885" width="0.1397%" height="15" fill="rgb(221,1,38)"/><text x="13.2388%" y="895.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.14%)</title><rect x="12.9888%" y="869" width="0.1397%" height="15" fill="rgb(206,124,46)"/><text x="13.2388%" y="879.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.14%)</title><rect x="12.9888%" y="853" width="0.1397%" height="15" fill="rgb(249,21,11)"/><text x="13.2388%" y="863.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.14%)</title><rect x="12.9888%" y="837" width="0.1397%" height="15" fill="rgb(222,201,40)"/><text x="13.2388%" y="847.50"></text></g><g><title>dlopen (1 samples, 0.14%)</title><rect x="12.9888%" y="821" width="0.1397%" height="15" fill="rgb(235,61,29)"/><text x="13.2388%" y="831.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.14%)</title><rect x="12.9888%" y="805" width="0.1397%" height="15" fill="rgb(219,207,3)"/><text x="13.2388%" y="815.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.14%)</title><rect x="12.9888%" y="789" width="0.1397%" height="15" fill="rgb(222,56,46)"/><text x="13.2388%" y="799.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.14%)</title><rect x="12.9888%" y="773" width="0.1397%" height="15" fill="rgb(239,76,54)"/><text x="13.2388%" y="783.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.14%)</title><rect x="12.9888%" y="757" width="0.1397%" height="15" fill="rgb(231,124,27)"/><text x="13.2388%" y="767.50"></text></g><g><title>_dl_open (1 samples, 0.14%)</title><rect x="12.9888%" y="741" width="0.1397%" height="15" fill="rgb(249,195,6)"/><text x="13.2388%" y="751.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.14%)</title><rect x="12.9888%" y="725" width="0.1397%" height="15" fill="rgb(237,174,47)"/><text x="13.2388%" y="735.50"></text></g><g><title>dl_open_worker (1 samples, 0.14%)</title><rect x="12.9888%" y="709" width="0.1397%" height="15" fill="rgb(206,201,31)"/><text x="13.2388%" y="719.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.14%)</title><rect x="12.9888%" y="693" width="0.1397%" height="15" fill="rgb(231,57,52)"/><text x="13.2388%" y="703.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.14%)</title><rect x="12.9888%" y="677" width="0.1397%" height="15" fill="rgb(248,177,22)"/><text x="13.2388%" y="687.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.14%)</title><rect x="13.8268%" y="613" width="0.1397%" height="15" fill="rgb(215,211,37)"/><text x="14.0768%" y="623.50"></text></g><g><title>preempt_count_sub (1 samples, 0.14%)</title><rect x="13.8268%" y="597" width="0.1397%" height="15" fill="rgb(241,128,51)"/><text x="14.0768%" y="607.50"></text></g><g><title>dequeue_task_fair (1 samples, 0.14%)</title><rect x="13.9665%" y="533" width="0.1397%" height="15" fill="rgb(227,165,31)"/><text x="14.2165%" y="543.50"></text></g><g><title>dequeue_entity (1 samples, 0.14%)</title><rect x="13.9665%" y="517" width="0.1397%" height="15" fill="rgb(228,167,24)"/><text x="14.2165%" y="527.50"></text></g><g><title>reweight_entity (1 samples, 0.14%)</title><rect x="13.9665%" y="501" width="0.1397%" height="15" fill="rgb(228,143,12)"/><text x="14.2165%" y="511.50"></text></g><g><title>sk_wait_data (3 samples, 0.42%)</title><rect x="13.9665%" y="613" width="0.4190%" height="15" fill="rgb(249,149,8)"/><text x="14.2165%" y="623.50"></text></g><g><title>wait_woken (3 samples, 0.42%)</title><rect x="13.9665%" y="597" width="0.4190%" height="15" fill="rgb(243,35,44)"/><text x="14.2165%" y="607.50"></text></g><g><title>schedule_timeout (3 samples, 0.42%)</title><rect x="13.9665%" y="581" width="0.4190%" height="15" fill="rgb(246,89,9)"/><text x="14.2165%" y="591.50"></text></g><g><title>schedule (3 samples, 0.42%)</title><rect x="13.9665%" y="565" width="0.4190%" height="15" fill="rgb(233,213,13)"/><text x="14.2165%" y="575.50"></text></g><g><title>__schedule (3 samples, 0.42%)</title><rect x="13.9665%" y="549" width="0.4190%" height="15" fill="rgb(233,141,41)"/><text x="14.2165%" y="559.50"></text></g><g><title>update_rq_clock (2 samples, 0.28%)</title><rect x="14.1061%" y="533" width="0.2793%" height="15" fill="rgb(239,167,4)"/><text x="14.3561%" y="543.50"></text></g><g><title>update_irq_load_avg (1 samples, 0.14%)</title><rect x="14.2458%" y="517" width="0.1397%" height="15" fill="rgb(209,217,16)"/><text x="14.4958%" y="527.50"></text></g><g><title>__x64_sys_recvfrom (7 samples, 0.98%)</title><rect x="13.5475%" y="677" width="0.9777%" height="15" fill="rgb(219,88,35)"/><text x="13.7975%" y="687.50"></text></g><g><title>__sys_recvfrom (7 samples, 0.98%)</title><rect x="13.5475%" y="661" width="0.9777%" height="15" fill="rgb(220,193,23)"/><text x="13.7975%" y="671.50"></text></g><g><title>inet_recvmsg (7 samples, 0.98%)</title><rect x="13.5475%" y="645" width="0.9777%" height="15" fill="rgb(230,90,52)"/><text x="13.7975%" y="655.50"></text></g><g><title>tcp_recvmsg (7 samples, 0.98%)</title><rect x="13.5475%" y="629" width="0.9777%" height="15" fill="rgb(252,106,19)"/><text x="13.7975%" y="639.50"></text></g><g><title>tcp_cleanup_rbuf (1 samples, 0.14%)</title><rect x="14.3855%" y="613" width="0.1397%" height="15" fill="rgb(206,74,20)"/><text x="14.6355%" y="623.50"></text></g><g><title>do_syscall_64 (8 samples, 1.12%)</title><rect x="13.5475%" y="693" width="1.1173%" height="15" fill="rgb(230,138,44)"/><text x="13.7975%" y="703.50"></text></g><g><title>syscall_slow_exit_work (1 samples, 0.14%)</title><rect x="14.5251%" y="677" width="0.1397%" height="15" fill="rgb(235,182,43)"/><text x="14.7751%" y="687.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.14%)</title><rect x="14.5251%" y="661" width="0.1397%" height="15" fill="rgb(242,16,51)"/><text x="14.7751%" y="671.50"></text></g><g><title>path_put (1 samples, 0.14%)</title><rect x="14.5251%" y="645" width="0.1397%" height="15" fill="rgb(248,9,4)"/><text x="14.7751%" y="655.50"></text></g><g><title>lobsters::main (13 samples, 1.82%)</title><rect x="12.9888%" y="901" width="1.8156%" height="15" fill="rgb(210,31,22)"/><text x="13.2388%" y="911.50">l..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (12 samples, 1.68%)</title><rect x="13.1285%" y="885" width="1.6760%" height="15" fill="rgb(239,54,39)"/><text x="13.3785%" y="895.50"></text></g><g><title>mysql::conn::Conn::_query (12 samples, 1.68%)</title><rect x="13.1285%" y="869" width="1.6760%" height="15" fill="rgb(230,99,41)"/><text x="13.3785%" y="879.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (12 samples, 1.68%)</title><rect x="13.1285%" y="853" width="1.6760%" height="15" fill="rgb(253,106,12)"/><text x="13.3785%" y="863.50"></text></g><g><title>mysql::conn::Conn::read_packet (12 samples, 1.68%)</title><rect x="13.1285%" y="837" width="1.6760%" height="15" fill="rgb(213,46,41)"/><text x="13.3785%" y="847.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 1.68%)</title><rect x="13.1285%" y="821" width="1.6760%" height="15" fill="rgb(215,133,35)"/><text x="13.3785%" y="831.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (10 samples, 1.40%)</title><rect x="13.4078%" y="805" width="1.3966%" height="15" fill="rgb(213,28,5)"/><text x="13.6578%" y="815.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (10 samples, 1.40%)</title><rect x="13.4078%" y="789" width="1.3966%" height="15" fill="rgb(215,77,49)"/><text x="13.6578%" y="799.50"></text></g><g><title>std::sys_common::net::TcpStream::read (10 samples, 1.40%)</title><rect x="13.4078%" y="773" width="1.3966%" height="15" fill="rgb(248,100,22)"/><text x="13.6578%" y="783.50"></text></g><g><title>std::sys::unix::net::Socket::read (10 samples, 1.40%)</title><rect x="13.4078%" y="757" width="1.3966%" height="15" fill="rgb(208,67,9)"/><text x="13.6578%" y="767.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (10 samples, 1.40%)</title><rect x="13.4078%" y="741" width="1.3966%" height="15" fill="rgb(219,133,21)"/><text x="13.6578%" y="751.50"></text></g><g><title>__libc_recv (10 samples, 1.40%)</title><rect x="13.4078%" y="725" width="1.3966%" height="15" fill="rgb(246,46,29)"/><text x="13.6578%" y="735.50"></text></g><g><title>entry_SYSCALL_64 (9 samples, 1.26%)</title><rect x="13.5475%" y="709" width="1.2570%" height="15" fill="rgb(246,185,52)"/><text x="13.7975%" y="719.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.14%)</title><rect x="14.6648%" y="693" width="0.1397%" height="15" fill="rgb(252,136,11)"/><text x="14.9148%" y="703.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (1 samples, 0.14%)</title><rect x="14.8045%" y="853" width="0.1397%" height="15" fill="rgb(219,138,53)"/><text x="15.0545%" y="863.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.14%)</title><rect x="14.8045%" y="837" width="0.1397%" height="15" fill="rgb(211,51,23)"/><text x="15.0545%" y="847.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.14%)</title><rect x="14.8045%" y="821" width="0.1397%" height="15" fill="rgb(247,221,28)"/><text x="15.0545%" y="831.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.14%)</title><rect x="14.8045%" y="805" width="0.1397%" height="15" fill="rgb(251,222,45)"/><text x="15.0545%" y="815.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="14.8045%" y="789" width="0.1397%" height="15" fill="rgb(217,162,53)"/><text x="15.0545%" y="799.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.14%)</title><rect x="14.8045%" y="773" width="0.1397%" height="15" fill="rgb(229,93,14)"/><text x="15.0545%" y="783.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.14%)</title><rect x="14.8045%" y="757" width="0.1397%" height="15" fill="rgb(209,67,49)"/><text x="15.0545%" y="767.50"></text></g><g><title>std::sys_common::net::TcpStream::read (1 samples, 0.14%)</title><rect x="14.8045%" y="741" width="0.1397%" height="15" fill="rgb(213,87,29)"/><text x="15.0545%" y="751.50"></text></g><g><title>std::sys::unix::net::Socket::read (1 samples, 0.14%)</title><rect x="14.8045%" y="725" width="0.1397%" height="15" fill="rgb(205,151,52)"/><text x="15.0545%" y="735.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (1 samples, 0.14%)</title><rect x="14.8045%" y="709" width="0.1397%" height="15" fill="rgb(253,215,39)"/><text x="15.0545%" y="719.50"></text></g><g><title>__libc_recv (1 samples, 0.14%)</title><rect x="14.8045%" y="693" width="0.1397%" height="15" fill="rgb(221,220,41)"/><text x="15.0545%" y="703.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="14.8045%" y="677" width="0.1397%" height="15" fill="rgb(218,133,21)"/><text x="15.0545%" y="687.50"></text></g><g><title>do_syscall_64 (1 samples, 0.14%)</title><rect x="14.8045%" y="661" width="0.1397%" height="15" fill="rgb(221,193,43)"/><text x="15.0545%" y="671.50"></text></g><g><title>__x64_sys_recvfrom (1 samples, 0.14%)</title><rect x="14.8045%" y="645" width="0.1397%" height="15" fill="rgb(240,128,52)"/><text x="15.0545%" y="655.50"></text></g><g><title>__sys_recvfrom (1 samples, 0.14%)</title><rect x="14.8045%" y="629" width="0.1397%" height="15" fill="rgb(253,114,12)"/><text x="15.0545%" y="639.50"></text></g><g><title>inet_recvmsg (1 samples, 0.14%)</title><rect x="14.8045%" y="613" width="0.1397%" height="15" fill="rgb(215,223,47)"/><text x="15.0545%" y="623.50"></text></g><g><title>tcp_recvmsg (1 samples, 0.14%)</title><rect x="14.8045%" y="597" width="0.1397%" height="15" fill="rgb(248,225,23)"/><text x="15.0545%" y="607.50"></text></g><g><title>sk_wait_data (1 samples, 0.14%)</title><rect x="14.8045%" y="581" width="0.1397%" height="15" fill="rgb(250,108,0)"/><text x="15.0545%" y="591.50"></text></g><g><title>release_sock (1 samples, 0.14%)</title><rect x="14.8045%" y="565" width="0.1397%" height="15" fill="rgb(228,208,7)"/><text x="15.0545%" y="575.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.14%)</title><rect x="14.8045%" y="549" width="0.1397%" height="15" fill="rgb(244,45,10)"/><text x="15.0545%" y="559.50"></text></g><g><title>preempt_count_add (1 samples, 0.14%)</title><rect x="14.8045%" y="533" width="0.1397%" height="15" fill="rgb(207,125,25)"/><text x="15.0545%" y="543.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (2 samples, 0.28%)</title><rect x="14.8045%" y="901" width="0.2793%" height="15" fill="rgb(210,195,18)"/><text x="15.0545%" y="911.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (2 samples, 0.28%)</title><rect x="14.8045%" y="885" width="0.2793%" height="15" fill="rgb(249,80,12)"/><text x="15.0545%" y="895.50"></text></g><g><title>decor::Shim::create_schema (2 samples, 0.28%)</title><rect x="14.8045%" y="869" width="0.2793%" height="15" fill="rgb(221,65,9)"/><text x="15.0545%" y="879.50"></text></g><g><title>sql_parser::parser::parse_statements (1 samples, 0.14%)</title><rect x="14.9441%" y="853" width="0.1397%" height="15" fill="rgb(235,49,36)"/><text x="15.1941%" y="863.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (1 samples, 0.14%)</title><rect x="14.9441%" y="837" width="0.1397%" height="15" fill="rgb(225,32,20)"/><text x="15.1941%" y="847.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_number (1 samples, 0.14%)</title><rect x="14.9441%" y="821" width="0.1397%" height="15" fill="rgb(215,141,46)"/><text x="15.1941%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.14%)</title><rect x="14.9441%" y="805" width="0.1397%" height="15" fill="rgb(250,160,47)"/><text x="15.1941%" y="815.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="14.9441%" y="789" width="0.1397%" height="15" fill="rgb(216,222,40)"/><text x="15.1941%" y="799.50"></text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::finish (1 samples, 0.14%)</title><rect x="15.0838%" y="901" width="0.1397%" height="15" fill="rgb(234,217,39)"/><text x="15.3338%" y="911.50"></text></g><g><title>mysql::conn::Conn::handle_ok (1 samples, 0.14%)</title><rect x="15.2235%" y="901" width="0.1397%" height="15" fill="rgb(207,178,40)"/><text x="15.4735%" y="911.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.28%)</title><rect x="15.3631%" y="901" width="0.2793%" height="15" fill="rgb(221,136,13)"/><text x="15.6131%" y="911.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::encode (2 samples, 0.28%)</title><rect x="15.6425%" y="901" width="0.2793%" height="15" fill="rgb(249,199,10)"/><text x="15.8925%" y="911.50"></text></g><g><title>regex::exec::ExecBuilder::build (1 samples, 0.14%)</title><rect x="15.9218%" y="901" width="0.1397%" height="15" fill="rgb(249,222,13)"/><text x="16.1718%" y="911.50"></text></g><g><title>regex::compile::Compiler::compile (1 samples, 0.14%)</title><rect x="15.9218%" y="885" width="0.1397%" height="15" fill="rgb(244,185,38)"/><text x="16.1718%" y="895.50"></text></g><g><title>regex::compile::Compiler::compile_finish (1 samples, 0.14%)</title><rect x="15.9218%" y="869" width="0.1397%" height="15" fill="rgb(236,202,9)"/><text x="16.1718%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.14%)</title><rect x="15.9218%" y="853" width="0.1397%" height="15" fill="rgb(250,229,37)"/><text x="16.1718%" y="863.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.14%)</title><rect x="16.2011%" y="789" width="0.1397%" height="15" fill="rgb(206,174,23)"/><text x="16.4511%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.14%)</title><rect x="16.2011%" y="773" width="0.1397%" height="15" fill="rgb(211,33,43)"/><text x="16.4511%" y="783.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.14%)</title><rect x="16.2011%" y="757" width="0.1397%" height="15" fill="rgb(245,58,50)"/><text x="16.4511%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.14%)</title><rect x="16.2011%" y="741" width="0.1397%" height="15" fill="rgb(244,68,36)"/><text x="16.4511%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.14%)</title><rect x="16.2011%" y="725" width="0.1397%" height="15" fill="rgb(232,229,15)"/><text x="16.4511%" y="735.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.14%)</title><rect x="16.2011%" y="709" width="0.1397%" height="15" fill="rgb(254,30,23)"/><text x="16.4511%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_infix (4 samples, 0.56%)</title><rect x="16.0615%" y="885" width="0.5587%" height="15" fill="rgb(235,160,14)"/><text x="16.3115%" y="895.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (4 samples, 0.56%)</title><rect x="16.0615%" y="869" width="0.5587%" height="15" fill="rgb(212,155,44)"/><text x="16.3115%" y="879.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (4 samples, 0.56%)</title><rect x="16.0615%" y="853" width="0.5587%" height="15" fill="rgb(226,2,50)"/><text x="16.3115%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (4 samples, 0.56%)</title><rect x="16.0615%" y="837" width="0.5587%" height="15" fill="rgb(234,177,6)"/><text x="16.3115%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::expected (4 samples, 0.56%)</title><rect x="16.0615%" y="821" width="0.5587%" height="15" fill="rgb(217,24,9)"/><text x="16.3115%" y="831.50"></text></g><g><title>alloc::fmt::format (3 samples, 0.42%)</title><rect x="16.2011%" y="805" width="0.4190%" height="15" fill="rgb(220,13,46)"/><text x="16.4511%" y="815.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.28%)</title><rect x="16.3408%" y="789" width="0.2793%" height="15" fill="rgb(239,221,27)"/><text x="16.5908%" y="799.50"></text></g><g><title>core::fmt::write (1 samples, 0.14%)</title><rect x="16.4804%" y="773" width="0.1397%" height="15" fill="rgb(222,198,25)"/><text x="16.7304%" y="783.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.14%)</title><rect x="16.4804%" y="757" width="0.1397%" height="15" fill="rgb(211,99,13)"/><text x="16.7304%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.14%)</title><rect x="16.4804%" y="741" width="0.1397%" height="15" fill="rgb(232,111,31)"/><text x="16.7304%" y="751.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.14%)</title><rect x="16.4804%" y="725" width="0.1397%" height="15" fill="rgb(245,82,37)"/><text x="16.7304%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.14%)</title><rect x="16.4804%" y="709" width="0.1397%" height="15" fill="rgb(227,149,46)"/><text x="16.7304%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.14%)</title><rect x="16.4804%" y="693" width="0.1397%" height="15" fill="rgb(218,36,50)"/><text x="16.7304%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.14%)</title><rect x="16.4804%" y="677" width="0.1397%" height="15" fill="rgb(226,80,48)"/><text x="16.7304%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.14%)</title><rect x="16.4804%" y="661" width="0.1397%" height="15" fill="rgb(238,224,15)"/><text x="16.7304%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.14%)</title><rect x="16.4804%" y="645" width="0.1397%" height="15" fill="rgb(241,136,10)"/><text x="16.7304%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.14%)</title><rect x="16.4804%" y="629" width="0.1397%" height="15" fill="rgb(208,32,45)"/><text x="16.7304%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.14%)</title><rect x="16.4804%" y="613" width="0.1397%" height="15" fill="rgb(207,135,9)"/><text x="16.7304%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.14%)</title><rect x="16.4804%" y="597" width="0.1397%" height="15" fill="rgb(206,86,44)"/><text x="16.7304%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.14%)</title><rect x="16.4804%" y="581" width="0.1397%" height="15" fill="rgb(245,177,15)"/><text x="16.7304%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.14%)</title><rect x="16.4804%" y="565" width="0.1397%" height="15" fill="rgb(206,64,50)"/><text x="16.7304%" y="575.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.14%)</title><rect x="16.4804%" y="549" width="0.1397%" height="15" fill="rgb(234,36,40)"/><text x="16.7304%" y="559.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="16.4804%" y="533" width="0.1397%" height="15" fill="rgb(213,64,8)"/><text x="16.7304%" y="543.50"></text></g><g><title>_int_malloc (1 samples, 0.14%)</title><rect x="16.4804%" y="517" width="0.1397%" height="15" fill="rgb(210,75,36)"/><text x="16.7304%" y="527.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.14%)</title><rect x="16.4804%" y="501" width="0.1397%" height="15" fill="rgb(229,88,21)"/><text x="16.7304%" y="511.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (21 samples, 2.93%)</title><rect x="16.0615%" y="901" width="2.9330%" height="15" fill="rgb(252,204,47)"/><text x="16.3115%" y="911.50">sq..</text></g><g><title>sql_parser::parser::Parser::parse_query_body (17 samples, 2.37%)</title><rect x="16.6201%" y="885" width="2.3743%" height="15" fill="rgb(208,77,27)"/><text x="16.8701%" y="895.50">sq..</text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (17 samples, 2.37%)</title><rect x="16.6201%" y="869" width="2.3743%" height="15" fill="rgb(221,76,26)"/><text x="16.8701%" y="879.50">sq..</text></g><g><title>sql_parser::parser::Parser::check_descent (17 samples, 2.37%)</title><rect x="16.6201%" y="853" width="2.3743%" height="15" fill="rgb(225,139,18)"/><text x="16.8701%" y="863.50">sq..</text></g><g><title>sql_parser::parser::Parser::parse_prefix (17 samples, 2.37%)</title><rect x="16.6201%" y="837" width="2.3743%" height="15" fill="rgb(230,137,11)"/><text x="16.8701%" y="847.50">sq..</text></g><g><title>sql_parser::parser::Parser::parse_data_type (16 samples, 2.23%)</title><rect x="16.7598%" y="821" width="2.2346%" height="15" fill="rgb(212,28,1)"/><text x="17.0098%" y="831.50">s..</text></g><g><title>sql_parser::parser::Parser::expected (16 samples, 2.23%)</title><rect x="16.7598%" y="805" width="2.2346%" height="15" fill="rgb(248,164,17)"/><text x="17.0098%" y="815.50">s..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (14 samples, 1.96%)</title><rect x="17.0391%" y="789" width="1.9553%" height="15" fill="rgb(222,171,42)"/><text x="17.2891%" y="799.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (14 samples, 1.96%)</title><rect x="17.0391%" y="773" width="1.9553%" height="15" fill="rgb(243,84,45)"/><text x="17.2891%" y="783.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (14 samples, 1.96%)</title><rect x="17.0391%" y="757" width="1.9553%" height="15" fill="rgb(252,49,23)"/><text x="17.2891%" y="767.50">a..</text></g><g><title>alloc::slice::hack::to_vec (14 samples, 1.96%)</title><rect x="17.0391%" y="741" width="1.9553%" height="15" fill="rgb(215,19,7)"/><text x="17.2891%" y="751.50">a..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (14 samples, 1.96%)</title><rect x="17.0391%" y="725" width="1.9553%" height="15" fill="rgb(238,81,41)"/><text x="17.2891%" y="735.50">a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (14 samples, 1.96%)</title><rect x="17.0391%" y="709" width="1.9553%" height="15" fill="rgb(210,199,37)"/><text x="17.2891%" y="719.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (14 samples, 1.96%)</title><rect x="17.0391%" y="693" width="1.9553%" height="15" fill="rgb(244,192,49)"/><text x="17.2891%" y="703.50">a..</text></g><g><title>core::intrinsics::copy_nonoverlapping (14 samples, 1.96%)</title><rect x="17.0391%" y="677" width="1.9553%" height="15" fill="rgb(226,211,11)"/><text x="17.2891%" y="687.50">c..</text></g><g><title>__memmove_avx_unaligned_erms (14 samples, 1.96%)</title><rect x="17.0391%" y="661" width="1.9553%" height="15" fill="rgb(236,162,54)"/><text x="17.2891%" y="671.50">_..</text></g><g><title>sql_parser::parser::Parser::get_next_precedence (1 samples, 0.14%)</title><rect x="18.9944%" y="901" width="0.1397%" height="15" fill="rgb(220,229,9)"/><text x="19.2444%" y="911.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (2 samples, 0.28%)</title><rect x="19.1341%" y="901" width="0.2793%" height="15" fill="rgb(250,87,22)"/><text x="19.3841%" y="911.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (1 samples, 0.14%)</title><rect x="19.4134%" y="901" width="0.1397%" height="15" fill="rgb(239,43,17)"/><text x="19.6634%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="19.5531%" y="805" width="0.1397%" height="15" fill="rgb(231,177,25)"/><text x="19.8031%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="19.5531%" y="789" width="0.1397%" height="15" fill="rgb(219,179,1)"/><text x="19.8031%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.14%)</title><rect x="19.5531%" y="773" width="0.1397%" height="15" fill="rgb(238,219,53)"/><text x="19.8031%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.14%)</title><rect x="19.5531%" y="757" width="0.1397%" height="15" fill="rgb(232,167,36)"/><text x="19.8031%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.14%)</title><rect x="19.5531%" y="741" width="0.1397%" height="15" fill="rgb(244,19,51)"/><text x="19.8031%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.14%)</title><rect x="19.5531%" y="725" width="0.1397%" height="15" fill="rgb(224,6,22)"/><text x="19.8031%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="19.5531%" y="709" width="0.1397%" height="15" fill="rgb(224,145,5)"/><text x="19.8031%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.14%)</title><rect x="19.5531%" y="693" width="0.1397%" height="15" fill="rgb(234,130,49)"/><text x="19.8031%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.14%)</title><rect x="19.5531%" y="677" width="0.1397%" height="15" fill="rgb(254,6,2)"/><text x="19.8031%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.14%)</title><rect x="19.5531%" y="661" width="0.1397%" height="15" fill="rgb(208,96,46)"/><text x="19.8031%" y="671.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.14%)</title><rect x="19.5531%" y="645" width="0.1397%" height="15" fill="rgb(239,3,39)"/><text x="19.8031%" y="655.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="19.5531%" y="629" width="0.1397%" height="15" fill="rgb(233,210,1)"/><text x="19.8031%" y="639.50"></text></g><g><title>_int_malloc (1 samples, 0.14%)</title><rect x="19.5531%" y="613" width="0.1397%" height="15" fill="rgb(244,137,37)"/><text x="19.8031%" y="623.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.14%)</title><rect x="19.5531%" y="597" width="0.1397%" height="15" fill="rgb(240,136,2)"/><text x="19.8031%" y="607.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (2 samples, 0.28%)</title><rect x="19.5531%" y="901" width="0.2793%" height="15" fill="rgb(239,18,37)"/><text x="19.8031%" y="911.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (2 samples, 0.28%)</title><rect x="19.5531%" y="885" width="0.2793%" height="15" fill="rgb(218,185,22)"/><text x="19.8031%" y="895.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (2 samples, 0.28%)</title><rect x="19.5531%" y="869" width="0.2793%" height="15" fill="rgb(225,218,4)"/><text x="19.8031%" y="879.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (2 samples, 0.28%)</title><rect x="19.5531%" y="853" width="0.2793%" height="15" fill="rgb(230,182,32)"/><text x="19.8031%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (2 samples, 0.28%)</title><rect x="19.5531%" y="837" width="0.2793%" height="15" fill="rgb(242,56,43)"/><text x="19.8031%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::expected (2 samples, 0.28%)</title><rect x="19.5531%" y="821" width="0.2793%" height="15" fill="rgb(233,99,24)"/><text x="19.8031%" y="831.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.14%)</title><rect x="19.6927%" y="805" width="0.1397%" height="15" fill="rgb(234,209,42)"/><text x="19.9427%" y="815.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.14%)</title><rect x="19.6927%" y="789" width="0.1397%" height="15" fill="rgb(227,7,12)"/><text x="19.9427%" y="799.50"></text></g><g><title>core::fmt::write (1 samples, 0.14%)</title><rect x="19.6927%" y="773" width="0.1397%" height="15" fill="rgb(245,203,43)"/><text x="19.9427%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.14%)</title><rect x="19.8324%" y="837" width="0.1397%" height="15" fill="rgb(238,205,33)"/><text x="20.0824%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::get_next_precedence (1 samples, 0.14%)</title><rect x="19.9721%" y="837" width="0.1397%" height="15" fill="rgb(231,56,7)"/><text x="20.2221%" y="847.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.14%)</title><rect x="19.9721%" y="821" width="0.1397%" height="15" fill="rgb(244,186,29)"/><text x="20.2221%" y="831.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.14%)</title><rect x="19.9721%" y="805" width="0.1397%" height="15" fill="rgb(234,111,31)"/><text x="20.2221%" y="815.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.14%)</title><rect x="19.9721%" y="789" width="0.1397%" height="15" fill="rgb(241,149,10)"/><text x="20.2221%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::parse_infix (2 samples, 0.28%)</title><rect x="20.1117%" y="837" width="0.2793%" height="15" fill="rgb(249,206,44)"/><text x="20.3617%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::parse_one_of_keywords (1 samples, 0.14%)</title><rect x="20.2514%" y="821" width="0.1397%" height="15" fill="rgb(251,153,30)"/><text x="20.5014%" y="831.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.28%)</title><rect x="20.6704%" y="821" width="0.2793%" height="15" fill="rgb(239,152,38)"/><text x="20.9204%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.28%)</title><rect x="20.6704%" y="805" width="0.2793%" height="15" fill="rgb(249,139,47)"/><text x="20.9204%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.28%)</title><rect x="20.6704%" y="789" width="0.2793%" height="15" fill="rgb(244,64,35)"/><text x="20.9204%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.28%)</title><rect x="20.6704%" y="773" width="0.2793%" height="15" fill="rgb(216,46,15)"/><text x="20.9204%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.28%)</title><rect x="20.6704%" y="757" width="0.2793%" height="15" fill="rgb(250,74,19)"/><text x="20.9204%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.28%)</title><rect x="20.6704%" y="741" width="0.2793%" height="15" fill="rgb(249,42,33)"/><text x="20.9204%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.28%)</title><rect x="20.6704%" y="725" width="0.2793%" height="15" fill="rgb(242,149,17)"/><text x="20.9204%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.28%)</title><rect x="20.6704%" y="709" width="0.2793%" height="15" fill="rgb(244,29,21)"/><text x="20.9204%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.28%)</title><rect x="20.6704%" y="693" width="0.2793%" height="15" fill="rgb(220,130,37)"/><text x="20.9204%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.28%)</title><rect x="20.6704%" y="677" width="0.2793%" height="15" fill="rgb(211,67,2)"/><text x="20.9204%" y="687.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.28%)</title><rect x="20.6704%" y="661" width="0.2793%" height="15" fill="rgb(235,68,52)"/><text x="20.9204%" y="671.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.28%)</title><rect x="20.6704%" y="645" width="0.2793%" height="15" fill="rgb(246,142,3)"/><text x="20.9204%" y="655.50"></text></g><g><title>_int_malloc (2 samples, 0.28%)</title><rect x="20.6704%" y="629" width="0.2793%" height="15" fill="rgb(241,25,7)"/><text x="20.9204%" y="639.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="20.9497%" y="821" width="0.1397%" height="15" fill="rgb(242,119,39)"/><text x="21.1997%" y="831.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="20.9497%" y="805" width="0.1397%" height="15" fill="rgb(241,98,45)"/><text x="21.1997%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="20.9497%" y="789" width="0.1397%" height="15" fill="rgb(254,28,30)"/><text x="21.1997%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.14%)</title><rect x="20.9497%" y="773" width="0.1397%" height="15" fill="rgb(241,142,54)"/><text x="21.1997%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.14%)</title><rect x="20.9497%" y="757" width="0.1397%" height="15" fill="rgb(222,85,15)"/><text x="21.1997%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.14%)</title><rect x="20.9497%" y="741" width="0.1397%" height="15" fill="rgb(210,85,47)"/><text x="21.1997%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.14%)</title><rect x="20.9497%" y="725" width="0.1397%" height="15" fill="rgb(224,206,25)"/><text x="21.1997%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="20.9497%" y="709" width="0.1397%" height="15" fill="rgb(243,201,19)"/><text x="21.1997%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.14%)</title><rect x="20.9497%" y="693" width="0.1397%" height="15" fill="rgb(236,59,4)"/><text x="21.1997%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.14%)</title><rect x="20.9497%" y="677" width="0.1397%" height="15" fill="rgb(254,179,45)"/><text x="21.1997%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.14%)</title><rect x="20.9497%" y="661" width="0.1397%" height="15" fill="rgb(226,14,10)"/><text x="21.1997%" y="671.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.14%)</title><rect x="20.9497%" y="645" width="0.1397%" height="15" fill="rgb(244,27,41)"/><text x="21.1997%" y="655.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="20.9497%" y="629" width="0.1397%" height="15" fill="rgb(235,35,32)"/><text x="21.1997%" y="639.50"></text></g><g><title>_int_malloc (1 samples, 0.14%)</title><rect x="20.9497%" y="613" width="0.1397%" height="15" fill="rgb(218,68,31)"/><text x="21.1997%" y="623.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (1 samples, 0.14%)</title><rect x="21.0894%" y="805" width="0.1397%" height="15" fill="rgb(207,120,37)"/><text x="21.3394%" y="815.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.14%)</title><rect x="21.2291%" y="805" width="0.1397%" height="15" fill="rgb(227,98,0)"/><text x="21.4791%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.14%)</title><rect x="21.2291%" y="789" width="0.1397%" height="15" fill="rgb(207,7,3)"/><text x="21.4791%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (1 samples, 0.14%)</title><rect x="21.2291%" y="773" width="0.1397%" height="15" fill="rgb(206,98,19)"/><text x="21.4791%" y="783.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (3 samples, 0.42%)</title><rect x="21.0894%" y="821" width="0.4190%" height="15" fill="rgb(217,5,26)"/><text x="21.3394%" y="831.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_lower (1 samples, 0.14%)</title><rect x="21.3687%" y="805" width="0.1397%" height="15" fill="rgb(235,190,38)"/><text x="21.6187%" y="815.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (1 samples, 0.14%)</title><rect x="21.3687%" y="789" width="0.1397%" height="15" fill="rgb(247,86,24)"/><text x="21.6187%" y="799.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.14%)</title><rect x="21.3687%" y="773" width="0.1397%" height="15" fill="rgb(205,101,16)"/><text x="21.6187%" y="783.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (1 samples, 0.14%)</title><rect x="21.5084%" y="821" width="0.1397%" height="15" fill="rgb(246,168,33)"/><text x="21.7584%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_infix (14 samples, 1.96%)</title><rect x="19.8324%" y="869" width="1.9553%" height="15" fill="rgb(231,114,1)"/><text x="20.0824%" y="879.50">s..</text></g><g><title>sql_parser::parser::Parser::check_descent (14 samples, 1.96%)</title><rect x="19.8324%" y="853" width="1.9553%" height="15" fill="rgb(207,184,53)"/><text x="20.0824%" y="863.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_prefix (10 samples, 1.40%)</title><rect x="20.3911%" y="837" width="1.3966%" height="15" fill="rgb(224,95,51)"/><text x="20.6411%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::parse_value (1 samples, 0.14%)</title><rect x="21.6480%" y="821" width="0.1397%" height="15" fill="rgb(212,188,45)"/><text x="21.8980%" y="831.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="21.7877%" y="853" width="0.1397%" height="15" fill="rgb(223,154,38)"/><text x="22.0377%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="21.7877%" y="837" width="0.1397%" height="15" fill="rgb(251,22,52)"/><text x="22.0377%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.14%)</title><rect x="21.7877%" y="821" width="0.1397%" height="15" fill="rgb(229,209,22)"/><text x="22.0377%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.14%)</title><rect x="21.7877%" y="805" width="0.1397%" height="15" fill="rgb(234,138,34)"/><text x="22.0377%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.14%)</title><rect x="21.7877%" y="789" width="0.1397%" height="15" fill="rgb(212,95,11)"/><text x="22.0377%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.14%)</title><rect x="21.7877%" y="773" width="0.1397%" height="15" fill="rgb(240,179,47)"/><text x="22.0377%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="21.7877%" y="757" width="0.1397%" height="15" fill="rgb(240,163,11)"/><text x="22.0377%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.14%)</title><rect x="21.7877%" y="741" width="0.1397%" height="15" fill="rgb(236,37,12)"/><text x="22.0377%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.14%)</title><rect x="21.7877%" y="725" width="0.1397%" height="15" fill="rgb(232,164,16)"/><text x="22.0377%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.14%)</title><rect x="21.7877%" y="709" width="0.1397%" height="15" fill="rgb(244,205,15)"/><text x="22.0377%" y="719.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.14%)</title><rect x="21.7877%" y="693" width="0.1397%" height="15" fill="rgb(223,117,47)"/><text x="22.0377%" y="703.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="21.7877%" y="677" width="0.1397%" height="15" fill="rgb(244,107,35)"/><text x="22.0377%" y="687.50"></text></g><g><title>_int_malloc (1 samples, 0.14%)</title><rect x="21.7877%" y="661" width="0.1397%" height="15" fill="rgb(205,140,8)"/><text x="22.0377%" y="671.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="21.9274%" y="853" width="0.1397%" height="15" fill="rgb(228,84,46)"/><text x="22.1774%" y="863.50"></text></g><g><title>[lobsters] (1 samples, 0.14%)</title><rect x="21.9274%" y="837" width="0.1397%" height="15" fill="rgb(254,188,9)"/><text x="22.1774%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="21.9274%" y="821" width="0.1397%" height="15" fill="rgb(206,112,54)"/><text x="22.1774%" y="831.50"></text></g><g><title>_int_free (1 samples, 0.14%)</title><rect x="22.0670%" y="853" width="0.1397%" height="15" fill="rgb(216,84,49)"/><text x="22.3170%" y="863.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="22.2067%" y="837" width="0.1397%" height="15" fill="rgb(214,194,35)"/><text x="22.4567%" y="847.50"></text></g><g><title>_int_free (1 samples, 0.14%)</title><rect x="22.3464%" y="821" width="0.1397%" height="15" fill="rgb(249,28,3)"/><text x="22.5964%" y="831.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.14%)</title><rect x="22.4860%" y="805" width="0.1397%" height="15" fill="rgb(222,56,52)"/><text x="22.7360%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.14%)</title><rect x="22.4860%" y="789" width="0.1397%" height="15" fill="rgb(245,217,50)"/><text x="22.7360%" y="799.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.14%)</title><rect x="22.4860%" y="773" width="0.1397%" height="15" fill="rgb(213,201,24)"/><text x="22.7360%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.14%)</title><rect x="22.4860%" y="757" width="0.1397%" height="15" fill="rgb(248,116,28)"/><text x="22.7360%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.14%)</title><rect x="22.4860%" y="741" width="0.1397%" height="15" fill="rgb(219,72,43)"/><text x="22.7360%" y="751.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="22.4860%" y="725" width="0.1397%" height="15" fill="rgb(209,138,14)"/><text x="22.7360%" y="735.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::fmt::Display&gt;::fmt (2 samples, 0.28%)</title><rect x="22.7654%" y="773" width="0.2793%" height="15" fill="rgb(222,18,33)"/><text x="23.0154%" y="783.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.28%)</title><rect x="22.7654%" y="757" width="0.2793%" height="15" fill="rgb(213,199,7)"/><text x="23.0154%" y="767.50"></text></g><g><title>core::fmt::write (2 samples, 0.28%)</title><rect x="22.7654%" y="741" width="0.2793%" height="15" fill="rgb(250,110,10)"/><text x="23.0154%" y="751.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (1 samples, 0.14%)</title><rect x="22.9050%" y="725" width="0.1397%" height="15" fill="rgb(248,123,6)"/><text x="23.1550%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (7 samples, 0.98%)</title><rect x="22.2067%" y="853" width="0.9777%" height="15" fill="rgb(206,91,31)"/><text x="22.4567%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::expected (6 samples, 0.84%)</title><rect x="22.3464%" y="837" width="0.8380%" height="15" fill="rgb(211,154,13)"/><text x="22.5964%" y="847.50"></text></g><g><title>alloc::fmt::format (5 samples, 0.70%)</title><rect x="22.4860%" y="821" width="0.6983%" height="15" fill="rgb(225,148,7)"/><text x="22.7360%" y="831.50"></text></g><g><title>core::fmt::Write::write_fmt (4 samples, 0.56%)</title><rect x="22.6257%" y="805" width="0.5587%" height="15" fill="rgb(220,160,43)"/><text x="22.8757%" y="815.50"></text></g><g><title>core::fmt::write (3 samples, 0.42%)</title><rect x="22.7654%" y="789" width="0.4190%" height="15" fill="rgb(213,52,39)"/><text x="23.0154%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (1 samples, 0.14%)</title><rect x="23.0447%" y="773" width="0.1397%" height="15" fill="rgb(243,137,7)"/><text x="23.2947%" y="783.50"></text></g><g><title>core::iter::adapters::zip::Zip&lt;A,B&gt;::new (1 samples, 0.14%)</title><rect x="23.0447%" y="757" width="0.1397%" height="15" fill="rgb(230,79,13)"/><text x="23.2947%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (1 samples, 0.14%)</title><rect x="23.0447%" y="741" width="0.1397%" height="15" fill="rgb(247,105,23)"/><text x="23.2947%" y="751.50"></text></g><g><title>core::cmp::min (1 samples, 0.14%)</title><rect x="23.0447%" y="725" width="0.1397%" height="15" fill="rgb(223,179,41)"/><text x="23.2947%" y="735.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.14%)</title><rect x="23.0447%" y="709" width="0.1397%" height="15" fill="rgb(218,9,34)"/><text x="23.2947%" y="719.50"></text></g><g><title>core::fmt::write (1 samples, 0.14%)</title><rect x="23.0447%" y="693" width="0.1397%" height="15" fill="rgb(222,106,8)"/><text x="23.2947%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (12 samples, 1.68%)</title><rect x="21.7877%" y="869" width="1.6760%" height="15" fill="rgb(211,220,0)"/><text x="22.0377%" y="879.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (2 samples, 0.28%)</title><rect x="23.1844%" y="853" width="0.2793%" height="15" fill="rgb(229,52,16)"/><text x="23.4344%" y="863.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="23.3240%" y="837" width="0.1397%" height="15" fill="rgb(212,155,18)"/><text x="23.5740%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="23.3240%" y="821" width="0.1397%" height="15" fill="rgb(242,21,14)"/><text x="23.5740%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="23.3240%" y="805" width="0.1397%" height="15" fill="rgb(222,19,48)"/><text x="23.5740%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.14%)</title><rect x="23.3240%" y="789" width="0.1397%" height="15" fill="rgb(232,45,27)"/><text x="23.5740%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.14%)</title><rect x="23.3240%" y="773" width="0.1397%" height="15" fill="rgb(249,103,42)"/><text x="23.5740%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.14%)</title><rect x="23.3240%" y="757" width="0.1397%" height="15" fill="rgb(246,81,33)"/><text x="23.5740%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.14%)</title><rect x="23.3240%" y="741" width="0.1397%" height="15" fill="rgb(252,33,42)"/><text x="23.5740%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="23.3240%" y="725" width="0.1397%" height="15" fill="rgb(209,212,41)"/><text x="23.5740%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.14%)</title><rect x="23.3240%" y="709" width="0.1397%" height="15" fill="rgb(207,154,6)"/><text x="23.5740%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.14%)</title><rect x="23.3240%" y="693" width="0.1397%" height="15" fill="rgb(223,64,47)"/><text x="23.5740%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.14%)</title><rect x="23.3240%" y="677" width="0.1397%" height="15" fill="rgb(211,161,38)"/><text x="23.5740%" y="687.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.14%)</title><rect x="23.3240%" y="661" width="0.1397%" height="15" fill="rgb(219,138,40)"/><text x="23.5740%" y="671.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="23.3240%" y="645" width="0.1397%" height="15" fill="rgb(241,228,46)"/><text x="23.5740%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.14%)</title><rect x="23.4637%" y="837" width="0.1397%" height="15" fill="rgb(223,209,38)"/><text x="23.7137%" y="847.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.14%)</title><rect x="23.4637%" y="821" width="0.1397%" height="15" fill="rgb(236,164,45)"/><text x="23.7137%" y="831.50"></text></g><g><title>_int_realloc (1 samples, 0.14%)</title><rect x="23.4637%" y="805" width="0.1397%" height="15" fill="rgb(231,15,5)"/><text x="23.7137%" y="815.50"></text></g><g><title>_int_malloc (1 samples, 0.14%)</title><rect x="23.4637%" y="789" width="0.1397%" height="15" fill="rgb(252,35,15)"/><text x="23.7137%" y="799.50"></text></g><g><title>malloc_consolidate (1 samples, 0.14%)</title><rect x="23.4637%" y="773" width="0.1397%" height="15" fill="rgb(248,181,18)"/><text x="23.7137%" y="783.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (28 samples, 3.91%)</title><rect x="19.8324%" y="901" width="3.9106%" height="15" fill="rgb(233,39,42)"/><text x="20.0824%" y="911.50">sql_..</text></g><g><title>sql_parser::parser::Parser::check_descent (28 samples, 3.91%)</title><rect x="19.8324%" y="885" width="3.9106%" height="15" fill="rgb(238,110,33)"/><text x="20.0824%" y="895.50">sql_..</text></g><g><title>sql_parser::parser::Parser::parse_query_body (2 samples, 0.28%)</title><rect x="23.4637%" y="869" width="0.2793%" height="15" fill="rgb(233,195,10)"/><text x="23.7137%" y="879.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (2 samples, 0.28%)</title><rect x="23.4637%" y="853" width="0.2793%" height="15" fill="rgb(254,105,3)"/><text x="23.7137%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (1 samples, 0.14%)</title><rect x="23.6034%" y="837" width="0.1397%" height="15" fill="rgb(221,225,9)"/><text x="23.8534%" y="847.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.56%)</title><rect x="23.8827%" y="837" width="0.5587%" height="15" fill="rgb(224,227,45)"/><text x="24.1327%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="24.8603%" y="805" width="0.1397%" height="15" fill="rgb(229,198,43)"/><text x="25.1103%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="24.8603%" y="789" width="0.1397%" height="15" fill="rgb(206,209,35)"/><text x="25.1103%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.14%)</title><rect x="24.8603%" y="773" width="0.1397%" height="15" fill="rgb(245,195,53)"/><text x="25.1103%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.14%)</title><rect x="24.8603%" y="757" width="0.1397%" height="15" fill="rgb(240,92,26)"/><text x="25.1103%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.14%)</title><rect x="24.8603%" y="741" width="0.1397%" height="15" fill="rgb(207,40,23)"/><text x="25.1103%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.14%)</title><rect x="24.8603%" y="725" width="0.1397%" height="15" fill="rgb(223,111,35)"/><text x="25.1103%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.14%)</title><rect x="24.8603%" y="709" width="0.1397%" height="15" fill="rgb(229,147,28)"/><text x="25.1103%" y="719.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.14%)</title><rect x="24.8603%" y="693" width="0.1397%" height="15" fill="rgb(211,29,28)"/><text x="25.1103%" y="703.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.14%)</title><rect x="24.8603%" y="677" width="0.1397%" height="15" fill="rgb(228,72,33)"/><text x="25.1103%" y="687.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (2 samples, 0.28%)</title><rect x="24.8603%" y="821" width="0.2793%" height="15" fill="rgb(205,214,31)"/><text x="25.1103%" y="831.50"></text></g><g><title>[lobsters] (1 samples, 0.14%)</title><rect x="25.0000%" y="805" width="0.1397%" height="15" fill="rgb(224,111,15)"/><text x="25.2500%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="25.0000%" y="789" width="0.1397%" height="15" fill="rgb(253,21,26)"/><text x="25.2500%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="25.0000%" y="773" width="0.1397%" height="15" fill="rgb(245,139,43)"/><text x="25.2500%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.14%)</title><rect x="25.0000%" y="757" width="0.1397%" height="15" fill="rgb(252,170,7)"/><text x="25.2500%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.14%)</title><rect x="25.0000%" y="741" width="0.1397%" height="15" fill="rgb(231,118,14)"/><text x="25.2500%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.14%)</title><rect x="25.0000%" y="725" width="0.1397%" height="15" fill="rgb(238,83,0)"/><text x="25.2500%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.14%)</title><rect x="25.0000%" y="709" width="0.1397%" height="15" fill="rgb(221,39,39)"/><text x="25.2500%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.14%)</title><rect x="25.0000%" y="693" width="0.1397%" height="15" fill="rgb(222,119,46)"/><text x="25.2500%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.14%)</title><rect x="25.0000%" y="677" width="0.1397%" height="15" fill="rgb(222,165,49)"/><text x="25.2500%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::parse_infix (13 samples, 1.82%)</title><rect x="23.7430%" y="853" width="1.8156%" height="15" fill="rgb(219,113,52)"/><text x="23.9930%" y="863.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_one_of_keywords (8 samples, 1.12%)</title><rect x="24.4413%" y="837" width="1.1173%" height="15" fill="rgb(214,7,15)"/><text x="24.6913%" y="847.50"></text></g><g><title>__memcmp_avx2_movbe (3 samples, 0.42%)</title><rect x="25.1397%" y="821" width="0.4190%" height="15" fill="rgb(235,32,4)"/><text x="25.3897%" y="831.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="26.2570%" y="821" width="0.1397%" height="15" fill="rgb(238,90,54)"/><text x="26.5070%" y="831.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="26.2570%" y="805" width="0.1397%" height="15" fill="rgb(213,208,19)"/><text x="26.5070%" y="815.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.14%)</title><rect x="26.2570%" y="789" width="0.1397%" height="15" fill="rgb(233,156,4)"/><text x="26.5070%" y="799.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (1 samples, 0.14%)</title><rect x="26.3966%" y="821" width="0.1397%" height="15" fill="rgb(207,194,5)"/><text x="26.6466%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (21 samples, 2.93%)</title><rect x="23.7430%" y="869" width="2.9330%" height="15" fill="rgb(206,111,30)"/><text x="23.9930%" y="879.50">sq..</text></g><g><title>sql_parser::parser::Parser::parse_prefix (8 samples, 1.12%)</title><rect x="25.5587%" y="853" width="1.1173%" height="15" fill="rgb(243,70,54)"/><text x="25.8087%" y="863.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (3 samples, 0.42%)</title><rect x="26.2570%" y="837" width="0.4190%" height="15" fill="rgb(242,28,8)"/><text x="26.5070%" y="847.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_lower (1 samples, 0.14%)</title><rect x="26.5363%" y="821" width="0.1397%" height="15" fill="rgb(219,106,18)"/><text x="26.7863%" y="831.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (1 samples, 0.14%)</title><rect x="26.5363%" y="805" width="0.1397%" height="15" fill="rgb(244,222,10)"/><text x="26.7863%" y="815.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.14%)</title><rect x="26.5363%" y="789" width="0.1397%" height="15" fill="rgb(236,179,52)"/><text x="26.7863%" y="799.50"></text></g><g><title>sql_parser::parser::parse_statements (22 samples, 3.07%)</title><rect x="23.7430%" y="901" width="3.0726%" height="15" fill="rgb(213,23,39)"/><text x="23.9930%" y="911.50">sql..</text></g><g><title>sql_parser::parser::Parser::parse_statement (22 samples, 3.07%)</title><rect x="23.7430%" y="885" width="3.0726%" height="15" fill="rgb(238,48,10)"/><text x="23.9930%" y="895.50">sql..</text></g><g><title>sql_parser::parser::Parser::parse_columns (1 samples, 0.14%)</title><rect x="26.6760%" y="869" width="0.1397%" height="15" fill="rgb(251,196,23)"/><text x="26.9260%" y="879.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (1 samples, 0.14%)</title><rect x="26.6760%" y="853" width="0.1397%" height="15" fill="rgb(250,152,24)"/><text x="26.9260%" y="863.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.14%)</title><rect x="26.6760%" y="837" width="0.1397%" height="15" fill="rgb(209,150,17)"/><text x="26.9260%" y="847.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.14%)</title><rect x="26.6760%" y="821" width="0.1397%" height="15" fill="rgb(234,202,34)"/><text x="26.9260%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.14%)</title><rect x="26.8156%" y="741" width="0.1397%" height="15" fill="rgb(253,148,53)"/><text x="27.0656%" y="751.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="26.8156%" y="725" width="0.1397%" height="15" fill="rgb(218,129,16)"/><text x="27.0656%" y="735.50"></text></g><g><title>_int_malloc (1 samples, 0.14%)</title><rect x="26.8156%" y="709" width="0.1397%" height="15" fill="rgb(216,85,19)"/><text x="27.0656%" y="719.50"></text></g><g><title>malloc_consolidate (1 samples, 0.14%)</title><rect x="26.8156%" y="693" width="0.1397%" height="15" fill="rgb(235,228,7)"/><text x="27.0656%" y="703.50"></text></g><g><title>start_thread (3 samples, 0.42%)</title><rect x="26.8156%" y="901" width="0.4190%" height="15" fill="rgb(245,175,0)"/><text x="27.0656%" y="911.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (3 samples, 0.42%)</title><rect x="26.8156%" y="885" width="0.4190%" height="15" fill="rgb(208,168,36)"/><text x="27.0656%" y="895.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (3 samples, 0.42%)</title><rect x="26.8156%" y="869" width="0.4190%" height="15" fill="rgb(246,171,24)"/><text x="27.0656%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (3 samples, 0.42%)</title><rect x="26.8156%" y="853" width="0.4190%" height="15" fill="rgb(215,142,24)"/><text x="27.0656%" y="863.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (3 samples, 0.42%)</title><rect x="26.8156%" y="837" width="0.4190%" height="15" fill="rgb(250,187,7)"/><text x="27.0656%" y="847.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3 samples, 0.42%)</title><rect x="26.8156%" y="821" width="0.4190%" height="15" fill="rgb(228,66,33)"/><text x="27.0656%" y="831.50"></text></g><g><title>decor::Shim::run_on_tcp (3 samples, 0.42%)</title><rect x="26.8156%" y="805" width="0.4190%" height="15" fill="rgb(234,215,21)"/><text x="27.0656%" y="815.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (3 samples, 0.42%)</title><rect x="26.8156%" y="789" width="0.4190%" height="15" fill="rgb(222,191,20)"/><text x="27.0656%" y="799.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (3 samples, 0.42%)</title><rect x="26.8156%" y="773" width="0.4190%" height="15" fill="rgb(245,79,54)"/><text x="27.0656%" y="783.50"></text></g><g><title>sql_parser::parser::parse_statements (3 samples, 0.42%)</title><rect x="26.8156%" y="757" width="0.4190%" height="15" fill="rgb(240,10,37)"/><text x="27.0656%" y="767.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (2 samples, 0.28%)</title><rect x="26.9553%" y="741" width="0.2793%" height="15" fill="rgb(214,192,32)"/><text x="27.2053%" y="751.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.14%)</title><rect x="27.0950%" y="725" width="0.1397%" height="15" fill="rgb(209,36,54)"/><text x="27.3450%" y="735.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.14%)</title><rect x="27.0950%" y="709" width="0.1397%" height="15" fill="rgb(220,10,11)"/><text x="27.3450%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.14%)</title><rect x="27.2346%" y="901" width="0.1397%" height="15" fill="rgb(221,106,17)"/><text x="27.4846%" y="911.50"></text></g><g><title>std::net::tcp::TcpStream::set_write_timeout (1 samples, 0.14%)</title><rect x="27.3743%" y="901" width="0.1397%" height="15" fill="rgb(251,142,44)"/><text x="27.6243%" y="911.50"></text></g><g><title>std::sys_common::net::TcpStream::set_write_timeout (1 samples, 0.14%)</title><rect x="27.3743%" y="885" width="0.1397%" height="15" fill="rgb(238,13,15)"/><text x="27.6243%" y="895.50"></text></g><g><title>std::sys::unix::net::Socket::set_timeout (1 samples, 0.14%)</title><rect x="27.3743%" y="869" width="0.1397%" height="15" fill="rgb(208,107,27)"/><text x="27.6243%" y="879.50"></text></g><g><title>std::io::error::Error::new (1 samples, 0.14%)</title><rect x="27.3743%" y="853" width="0.1397%" height="15" fill="rgb(205,136,37)"/><text x="27.6243%" y="863.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.14%)</title><rect x="27.3743%" y="837" width="0.1397%" height="15" fill="rgb(250,205,27)"/><text x="27.6243%" y="847.50"></text></g><g><title>std::error::&lt;impl core::convert::From&lt;&amp;str&gt; for alloc::boxed::Box&lt;dyn std::error::Error+core::marker::Sync+core::marker::Send&gt;&gt;::from (1 samples, 0.14%)</title><rect x="27.3743%" y="821" width="0.1397%" height="15" fill="rgb(210,80,43)"/><text x="27.6243%" y="831.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.14%)</title><rect x="27.3743%" y="805" width="0.1397%" height="15" fill="rgb(247,160,36)"/><text x="27.6243%" y="815.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.14%)</title><rect x="27.3743%" y="789" width="0.1397%" height="15" fill="rgb(234,13,49)"/><text x="27.6243%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.14%)</title><rect x="27.3743%" y="773" width="0.1397%" height="15" fill="rgb(234,122,0)"/><text x="27.6243%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.14%)</title><rect x="27.3743%" y="757" width="0.1397%" height="15" fill="rgb(207,146,38)"/><text x="27.6243%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.14%)</title><rect x="27.3743%" y="741" width="0.1397%" height="15" fill="rgb(207,177,25)"/><text x="27.6243%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.14%)</title><rect x="27.3743%" y="725" width="0.1397%" height="15" fill="rgb(211,178,42)"/><text x="27.6243%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.14%)</title><rect x="27.3743%" y="709" width="0.1397%" height="15" fill="rgb(230,69,54)"/><text x="27.6243%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="27.3743%" y="693" width="0.1397%" height="15" fill="rgb(214,135,41)"/><text x="27.6243%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.14%)</title><rect x="27.3743%" y="677" width="0.1397%" height="15" fill="rgb(237,67,25)"/><text x="27.6243%" y="687.50"></text></g><g><title>__libc_recv (1 samples, 0.14%)</title><rect x="27.3743%" y="661" width="0.1397%" height="15" fill="rgb(222,189,50)"/><text x="27.6243%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="27.3743%" y="645" width="0.1397%" height="15" fill="rgb(245,148,34)"/><text x="27.6243%" y="655.50"></text></g><g><title>__GI___openat (2 samples, 0.28%)</title><rect x="27.5140%" y="693" width="0.2793%" height="15" fill="rgb(222,29,6)"/><text x="27.7640%" y="703.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.28%)</title><rect x="27.5140%" y="677" width="0.2793%" height="15" fill="rgb(221,189,43)"/><text x="27.7640%" y="687.50"></text></g><g><title>do_syscall_64 (2 samples, 0.28%)</title><rect x="27.5140%" y="661" width="0.2793%" height="15" fill="rgb(207,36,27)"/><text x="27.7640%" y="671.50"></text></g><g><title>__x64_sys_openat (2 samples, 0.28%)</title><rect x="27.5140%" y="645" width="0.2793%" height="15" fill="rgb(217,90,24)"/><text x="27.7640%" y="655.50"></text></g><g><title>do_sys_openat2 (2 samples, 0.28%)</title><rect x="27.5140%" y="629" width="0.2793%" height="15" fill="rgb(224,66,35)"/><text x="27.7640%" y="639.50"></text></g><g><title>do_filp_open (2 samples, 0.28%)</title><rect x="27.5140%" y="613" width="0.2793%" height="15" fill="rgb(221,13,50)"/><text x="27.7640%" y="623.50"></text></g><g><title>path_openat (2 samples, 0.28%)</title><rect x="27.5140%" y="597" width="0.2793%" height="15" fill="rgb(236,68,49)"/><text x="27.7640%" y="607.50"></text></g><g><title>alloc_empty_file (2 samples, 0.28%)</title><rect x="27.5140%" y="581" width="0.2793%" height="15" fill="rgb(229,146,28)"/><text x="27.7640%" y="591.50"></text></g><g><title>__alloc_file (2 samples, 0.28%)</title><rect x="27.5140%" y="565" width="0.2793%" height="15" fill="rgb(225,31,38)"/><text x="27.7640%" y="575.50"></text></g><g><title>kmem_cache_alloc (1 samples, 0.14%)</title><rect x="27.6536%" y="549" width="0.1397%" height="15" fill="rgb(250,208,3)"/><text x="27.9036%" y="559.50"></text></g><g><title>__slab_alloc.constprop.0 (1 samples, 0.14%)</title><rect x="27.6536%" y="533" width="0.1397%" height="15" fill="rgb(246,54,23)"/><text x="27.9036%" y="543.50"></text></g><g><title>___slab_alloc (1 samples, 0.14%)</title><rect x="27.6536%" y="517" width="0.1397%" height="15" fill="rgb(243,76,11)"/><text x="27.9036%" y="527.50"></text></g><g><title>allocate_slab (1 samples, 0.14%)</title><rect x="27.6536%" y="501" width="0.1397%" height="15" fill="rgb(245,21,50)"/><text x="27.9036%" y="511.50"></text></g><g><title>alloc_slab_page (1 samples, 0.14%)</title><rect x="27.6536%" y="485" width="0.1397%" height="15" fill="rgb(228,9,43)"/><text x="27.9036%" y="495.50"></text></g><g><title>alloc_pages_current (1 samples, 0.14%)</title><rect x="27.6536%" y="469" width="0.1397%" height="15" fill="rgb(208,100,47)"/><text x="27.9036%" y="479.50"></text></g><g><title>policy_nodemask (1 samples, 0.14%)</title><rect x="27.6536%" y="453" width="0.1397%" height="15" fill="rgb(232,26,8)"/><text x="27.9036%" y="463.50"></text></g><g><title>std::rt::lang_start_internal (3 samples, 0.42%)</title><rect x="27.5140%" y="901" width="0.4190%" height="15" fill="rgb(216,166,38)"/><text x="27.7640%" y="911.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.42%)</title><rect x="27.5140%" y="885" width="0.4190%" height="15" fill="rgb(251,202,51)"/><text x="27.7640%" y="895.50"></text></g><g><title>std::panicking::try (3 samples, 0.42%)</title><rect x="27.5140%" y="869" width="0.4190%" height="15" fill="rgb(254,216,34)"/><text x="27.7640%" y="879.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.42%)</title><rect x="27.5140%" y="853" width="0.4190%" height="15" fill="rgb(251,32,27)"/><text x="27.7640%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (3 samples, 0.42%)</title><rect x="27.5140%" y="837" width="0.4190%" height="15" fill="rgb(208,127,28)"/><text x="27.7640%" y="847.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (3 samples, 0.42%)</title><rect x="27.5140%" y="821" width="0.4190%" height="15" fill="rgb(224,137,22)"/><text x="27.7640%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3 samples, 0.42%)</title><rect x="27.5140%" y="805" width="0.4190%" height="15" fill="rgb(254,70,32)"/><text x="27.7640%" y="815.50"></text></g><g><title>lobsters::main (3 samples, 0.42%)</title><rect x="27.5140%" y="789" width="0.4190%" height="15" fill="rgb(229,75,37)"/><text x="27.7640%" y="799.50"></text></g><g><title>hwloc::Topology::new (3 samples, 0.42%)</title><rect x="27.5140%" y="773" width="0.4190%" height="15" fill="rgb(252,64,23)"/><text x="27.7640%" y="783.50"></text></g><g><title>hwloc_topology_load (3 samples, 0.42%)</title><rect x="27.5140%" y="757" width="0.4190%" height="15" fill="rgb(232,162,48)"/><text x="27.7640%" y="767.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.42%)</title><rect x="27.5140%" y="741" width="0.4190%" height="15" fill="rgb(246,160,12)"/><text x="27.7640%" y="751.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.42%)</title><rect x="27.5140%" y="725" width="0.4190%" height="15" fill="rgb(247,166,0)"/><text x="27.7640%" y="735.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.42%)</title><rect x="27.5140%" y="709" width="0.4190%" height="15" fill="rgb(249,219,21)"/><text x="27.7640%" y="719.50"></text></g><g><title>faccessat (1 samples, 0.14%)</title><rect x="27.7933%" y="693" width="0.1397%" height="15" fill="rgb(205,209,3)"/><text x="28.0433%" y="703.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="27.7933%" y="677" width="0.1397%" height="15" fill="rgb(243,44,1)"/><text x="28.0433%" y="687.50"></text></g><g><title>do_syscall_64 (1 samples, 0.14%)</title><rect x="27.7933%" y="661" width="0.1397%" height="15" fill="rgb(206,159,16)"/><text x="28.0433%" y="671.50"></text></g><g><title>do_faccessat (1 samples, 0.14%)</title><rect x="27.7933%" y="645" width="0.1397%" height="15" fill="rgb(244,77,30)"/><text x="28.0433%" y="655.50"></text></g><g><title>user_path_at_empty (1 samples, 0.14%)</title><rect x="27.7933%" y="629" width="0.1397%" height="15" fill="rgb(218,69,12)"/><text x="28.0433%" y="639.50"></text></g><g><title>getname_flags.part.0 (1 samples, 0.14%)</title><rect x="27.7933%" y="613" width="0.1397%" height="15" fill="rgb(212,87,7)"/><text x="28.0433%" y="623.50"></text></g><g><title>kmem_cache_alloc (1 samples, 0.14%)</title><rect x="27.7933%" y="597" width="0.1397%" height="15" fill="rgb(245,114,25)"/><text x="28.0433%" y="607.50"></text></g><g><title>memset_erms (1 samples, 0.14%)</title><rect x="27.7933%" y="581" width="0.1397%" height="15" fill="rgb(210,61,42)"/><text x="28.0433%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.14%)</title><rect x="27.9330%" y="741" width="0.1397%" height="15" fill="rgb(211,52,33)"/><text x="28.1830%" y="751.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.14%)</title><rect x="27.9330%" y="725" width="0.1397%" height="15" fill="rgb(234,58,33)"/><text x="28.1830%" y="735.50"></text></g><g><title>_int_realloc (1 samples, 0.14%)</title><rect x="27.9330%" y="709" width="0.1397%" height="15" fill="rgb(220,115,36)"/><text x="28.1830%" y="719.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (2 samples, 0.28%)</title><rect x="27.9330%" y="901" width="0.2793%" height="15" fill="rgb(243,153,54)"/><text x="28.1830%" y="911.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (2 samples, 0.28%)</title><rect x="27.9330%" y="885" width="0.2793%" height="15" fill="rgb(251,47,18)"/><text x="28.1830%" y="895.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (2 samples, 0.28%)</title><rect x="27.9330%" y="869" width="0.2793%" height="15" fill="rgb(242,102,42)"/><text x="28.1830%" y="879.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (2 samples, 0.28%)</title><rect x="27.9330%" y="853" width="0.2793%" height="15" fill="rgb(234,31,38)"/><text x="28.1830%" y="863.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2 samples, 0.28%)</title><rect x="27.9330%" y="837" width="0.2793%" height="15" fill="rgb(221,117,51)"/><text x="28.1830%" y="847.50"></text></g><g><title>decor::Shim::run_on_tcp (2 samples, 0.28%)</title><rect x="27.9330%" y="821" width="0.2793%" height="15" fill="rgb(212,20,18)"/><text x="28.1830%" y="831.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (2 samples, 0.28%)</title><rect x="27.9330%" y="805" width="0.2793%" height="15" fill="rgb(245,133,36)"/><text x="28.1830%" y="815.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (2 samples, 0.28%)</title><rect x="27.9330%" y="789" width="0.2793%" height="15" fill="rgb(212,6,19)"/><text x="28.1830%" y="799.50"></text></g><g><title>sql_parser::parser::parse_statements (2 samples, 0.28%)</title><rect x="27.9330%" y="773" width="0.2793%" height="15" fill="rgb(218,1,36)"/><text x="28.1830%" y="783.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (2 samples, 0.28%)</title><rect x="27.9330%" y="757" width="0.2793%" height="15" fill="rgb(246,84,54)"/><text x="28.1830%" y="767.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_number (1 samples, 0.14%)</title><rect x="28.0726%" y="741" width="0.1397%" height="15" fill="rgb(242,110,6)"/><text x="28.3226%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.14%)</title><rect x="28.0726%" y="725" width="0.1397%" height="15" fill="rgb(214,47,5)"/><text x="28.3226%" y="735.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="28.0726%" y="709" width="0.1397%" height="15" fill="rgb(218,159,25)"/><text x="28.3226%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 1.12%)</title><rect x="28.2123%" y="805" width="1.1173%" height="15" fill="rgb(215,211,28)"/><text x="28.4623%" y="815.50"></text></g><g><title>__GI___libc_realloc (8 samples, 1.12%)</title><rect x="28.2123%" y="789" width="1.1173%" height="15" fill="rgb(238,59,32)"/><text x="28.4623%" y="799.50"></text></g><g><title>_int_realloc (8 samples, 1.12%)</title><rect x="28.2123%" y="773" width="1.1173%" height="15" fill="rgb(226,82,3)"/><text x="28.4623%" y="783.50"></text></g><g><title>_int_malloc (8 samples, 1.12%)</title><rect x="28.2123%" y="757" width="1.1173%" height="15" fill="rgb(240,164,32)"/><text x="28.4623%" y="767.50"></text></g><g><title>malloc_consolidate (3 samples, 0.42%)</title><rect x="28.9106%" y="741" width="0.4190%" height="15" fill="rgb(232,46,7)"/><text x="29.1606%" y="751.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.14%)</title><rect x="29.1899%" y="725" width="0.1397%" height="15" fill="rgb(229,129,53)"/><text x="29.4399%" y="735.50"></text></g><g><title>__GI___libc_free (2 samples, 0.28%)</title><rect x="29.3296%" y="789" width="0.2793%" height="15" fill="rgb(234,188,29)"/><text x="29.5796%" y="799.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.28%)</title><rect x="31.2849%" y="773" width="0.2793%" height="15" fill="rgb(246,141,4)"/><text x="31.5349%" y="783.50"></text></g><g><title>_int_malloc (2 samples, 0.28%)</title><rect x="31.2849%" y="757" width="0.2793%" height="15" fill="rgb(229,23,39)"/><text x="31.5349%" y="767.50"></text></g><g><title>__memcmp_avx2_movbe (7 samples, 0.98%)</title><rect x="31.5642%" y="773" width="0.9777%" height="15" fill="rgb(206,12,3)"/><text x="31.8142%" y="783.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="32.8212%" y="757" width="0.1397%" height="15" fill="rgb(252,226,20)"/><text x="33.0712%" y="767.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.14%)</title><rect x="32.8212%" y="741" width="0.1397%" height="15" fill="rgb(216,123,35)"/><text x="33.0712%" y="751.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.14%)</title><rect x="32.9609%" y="757" width="0.1397%" height="15" fill="rgb(212,68,40)"/><text x="33.2109%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.14%)</title><rect x="32.9609%" y="741" width="0.1397%" height="15" fill="rgb(254,125,32)"/><text x="33.2109%" y="751.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (32 samples, 4.47%)</title><rect x="29.6089%" y="789" width="4.4693%" height="15" fill="rgb(253,97,22)"/><text x="29.8589%" y="799.50">sql_p..</text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (11 samples, 1.54%)</title><rect x="32.5419%" y="773" width="1.5363%" height="15" fill="rgb(241,101,14)"/><text x="32.7919%" y="783.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (7 samples, 0.98%)</title><rect x="33.1006%" y="757" width="0.9777%" height="15" fill="rgb(238,103,29)"/><text x="33.3506%" y="767.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (5 samples, 0.70%)</title><rect x="33.3799%" y="741" width="0.6983%" height="15" fill="rgb(233,195,47)"/><text x="33.6299%" y="751.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (5 samples, 0.70%)</title><rect x="33.3799%" y="725" width="0.6983%" height="15" fill="rgb(246,218,30)"/><text x="33.6299%" y="735.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (4 samples, 0.56%)</title><rect x="33.5196%" y="709" width="0.5587%" height="15" fill="rgb(219,145,47)"/><text x="33.7696%" y="719.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="34.3575%" y="773" width="0.1397%" height="15" fill="rgb(243,12,26)"/><text x="34.6075%" y="783.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (47 samples, 6.56%)</title><rect x="28.2123%" y="901" width="6.5642%" height="15" fill="rgb(214,87,16)"/><text x="28.4623%" y="911.50">std::sys_..</text></g><g><title>decor::Shim::run_on_tcp (47 samples, 6.56%)</title><rect x="28.2123%" y="885" width="6.5642%" height="15" fill="rgb(208,99,42)"/><text x="28.4623%" y="895.50">decor::Sh..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (47 samples, 6.56%)</title><rect x="28.2123%" y="869" width="6.5642%" height="15" fill="rgb(253,99,2)"/><text x="28.4623%" y="879.50">msql_srv:..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (47 samples, 6.56%)</title><rect x="28.2123%" y="853" width="6.5642%" height="15" fill="rgb(220,168,23)"/><text x="28.4623%" y="863.50">&lt;decor::S..</text></g><g><title>sql_parser::parser::parse_statements (47 samples, 6.56%)</title><rect x="28.2123%" y="837" width="6.5642%" height="15" fill="rgb(242,38,24)"/><text x="28.4623%" y="847.50">sql_parse..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (47 samples, 6.56%)</title><rect x="28.2123%" y="821" width="6.5642%" height="15" fill="rgb(225,182,9)"/><text x="28.4623%" y="831.50">sql_parse..</text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (39 samples, 5.45%)</title><rect x="29.3296%" y="805" width="5.4469%" height="15" fill="rgb(243,178,37)"/><text x="29.5796%" y="815.50">sql_par..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_word (5 samples, 0.70%)</title><rect x="34.0782%" y="789" width="0.6983%" height="15" fill="rgb(232,139,19)"/><text x="34.3282%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.28%)</title><rect x="34.4972%" y="773" width="0.2793%" height="15" fill="rgb(225,201,24)"/><text x="34.7472%" y="783.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.14%)</title><rect x="34.6369%" y="757" width="0.1397%" height="15" fill="rgb(221,47,46)"/><text x="34.8869%" y="767.50"></text></g><g><title>_int_realloc (1 samples, 0.14%)</title><rect x="34.6369%" y="741" width="0.1397%" height="15" fill="rgb(249,23,13)"/><text x="34.8869%" y="751.50"></text></g><g><title>[unknown] (216 samples, 30.17%)</title><rect x="4.7486%" y="917" width="30.1676%" height="15" fill="rgb(219,9,5)"/><text x="4.9986%" y="927.50">[unknown]</text></g><g><title>url::parser::Parser::parse_path_start (1 samples, 0.14%)</title><rect x="34.7765%" y="901" width="0.1397%" height="15" fill="rgb(254,171,16)"/><text x="35.0265%" y="911.50"></text></g><g><title>[libpthread-2.31.so] (1 samples, 0.14%)</title><rect x="34.9162%" y="885" width="0.1397%" height="15" fill="rgb(230,171,20)"/><text x="35.1662%" y="895.50"></text></g><g><title>__rust_dealloc (1 samples, 0.14%)</title><rect x="35.1955%" y="741" width="0.1397%" height="15" fill="rgb(210,71,41)"/><text x="35.4455%" y="751.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.14%)</title><rect x="35.6145%" y="581" width="0.1397%" height="15" fill="rgb(206,173,20)"/><text x="35.8645%" y="591.50"></text></g><g><title>__kfree_skb (1 samples, 0.14%)</title><rect x="35.8939%" y="485" width="0.1397%" height="15" fill="rgb(233,88,34)"/><text x="36.1439%" y="495.50"></text></g><g><title>skb_release_head_state (1 samples, 0.14%)</title><rect x="35.8939%" y="469" width="0.1397%" height="15" fill="rgb(223,209,46)"/><text x="36.1439%" y="479.50"></text></g><g><title>dst_release (1 samples, 0.14%)</title><rect x="35.8939%" y="453" width="0.1397%" height="15" fill="rgb(250,43,18)"/><text x="36.1439%" y="463.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.14%)</title><rect x="36.3128%" y="469" width="0.1397%" height="15" fill="rgb(208,13,10)"/><text x="36.5628%" y="479.50"></text></g><g><title>release_sock (1 samples, 0.14%)</title><rect x="36.4525%" y="469" width="0.1397%" height="15" fill="rgb(212,200,36)"/><text x="36.7025%" y="479.50"></text></g><g><title>remove_wait_queue (1 samples, 0.14%)</title><rect x="36.5922%" y="469" width="0.1397%" height="15" fill="rgb(225,90,30)"/><text x="36.8422%" y="479.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.14%)</title><rect x="36.5922%" y="453" width="0.1397%" height="15" fill="rgb(236,182,39)"/><text x="36.8422%" y="463.50"></text></g><g><title>intel_pmu_disable_all (1 samples, 0.14%)</title><rect x="36.8715%" y="373" width="0.1397%" height="15" fill="rgb(212,144,35)"/><text x="37.1215%" y="383.50"></text></g><g><title>__perf_event_task_sched_out (2 samples, 0.28%)</title><rect x="36.8715%" y="405" width="0.2793%" height="15" fill="rgb(228,63,44)"/><text x="37.1215%" y="415.50"></text></g><g><title>ctx_sched_out (2 samples, 0.28%)</title><rect x="36.8715%" y="389" width="0.2793%" height="15" fill="rgb(228,109,6)"/><text x="37.1215%" y="399.50"></text></g><g><title>x86_pmu_disable (1 samples, 0.14%)</title><rect x="37.0112%" y="373" width="0.1397%" height="15" fill="rgb(238,117,24)"/><text x="37.2612%" y="383.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.14%)</title><rect x="37.0112%" y="357" width="0.1397%" height="15" fill="rgb(242,26,26)"/><text x="37.2612%" y="367.50"></text></g><g><title>update_cfs_group (1 samples, 0.14%)</title><rect x="37.4302%" y="373" width="0.1397%" height="15" fill="rgb(221,92,48)"/><text x="37.6802%" y="383.50"></text></g><g><title>__calc_delta (1 samples, 0.14%)</title><rect x="37.5698%" y="357" width="0.1397%" height="15" fill="rgb(209,209,32)"/><text x="37.8198%" y="367.50"></text></g><g><title>update_curr (2 samples, 0.28%)</title><rect x="37.5698%" y="373" width="0.2793%" height="15" fill="rgb(221,70,22)"/><text x="37.8198%" y="383.50"></text></g><g><title>update_min_vruntime (1 samples, 0.14%)</title><rect x="37.7095%" y="357" width="0.1397%" height="15" fill="rgb(248,145,5)"/><text x="37.9595%" y="367.50"></text></g><g><title>dequeue_task_fair (6 samples, 0.84%)</title><rect x="37.1508%" y="405" width="0.8380%" height="15" fill="rgb(226,116,26)"/><text x="37.4008%" y="415.50"></text></g><g><title>dequeue_entity (5 samples, 0.70%)</title><rect x="37.2905%" y="389" width="0.6983%" height="15" fill="rgb(244,5,17)"/><text x="37.5405%" y="399.50"></text></g><g><title>update_load_avg (1 samples, 0.14%)</title><rect x="37.8492%" y="373" width="0.1397%" height="15" fill="rgb(252,159,33)"/><text x="38.0992%" y="383.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.14%)</title><rect x="37.8492%" y="357" width="0.1397%" height="15" fill="rgb(206,71,0)"/><text x="38.0992%" y="367.50"></text></g><g><title>finish_task_switch (2 samples, 0.28%)</title><rect x="37.9888%" y="405" width="0.2793%" height="15" fill="rgb(233,118,54)"/><text x="38.2388%" y="415.50"></text></g><g><title>__perf_event_task_sched_in (2 samples, 0.28%)</title><rect x="37.9888%" y="389" width="0.2793%" height="15" fill="rgb(234,83,48)"/><text x="38.2388%" y="399.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (2 samples, 0.28%)</title><rect x="37.9888%" y="373" width="0.2793%" height="15" fill="rgb(228,3,54)"/><text x="38.2388%" y="383.50"></text></g><g><title>native_write_msr (2 samples, 0.28%)</title><rect x="37.9888%" y="357" width="0.2793%" height="15" fill="rgb(226,155,13)"/><text x="38.2388%" y="367.50"></text></g><g><title>pick_next_task_fair (1 samples, 0.14%)</title><rect x="38.2682%" y="405" width="0.1397%" height="15" fill="rgb(241,28,37)"/><text x="38.5182%" y="415.50"></text></g><g><title>newidle_balance (1 samples, 0.14%)</title><rect x="38.2682%" y="389" width="0.1397%" height="15" fill="rgb(233,93,10)"/><text x="38.5182%" y="399.50"></text></g><g><title>psi_task_change (1 samples, 0.14%)</title><rect x="38.4078%" y="405" width="0.1397%" height="15" fill="rgb(225,113,19)"/><text x="38.6578%" y="415.50"></text></g><g><title>psi_group_change (1 samples, 0.14%)</title><rect x="38.4078%" y="389" width="0.1397%" height="15" fill="rgb(241,2,18)"/><text x="38.6578%" y="399.50"></text></g><g><title>sk_wait_data (19 samples, 2.65%)</title><rect x="36.0335%" y="485" width="2.6536%" height="15" fill="rgb(228,207,21)"/><text x="36.2835%" y="495.50">sk..</text></g><g><title>wait_woken (14 samples, 1.96%)</title><rect x="36.7318%" y="469" width="1.9553%" height="15" fill="rgb(213,211,35)"/><text x="36.9818%" y="479.50">w..</text></g><g><title>schedule_timeout (14 samples, 1.96%)</title><rect x="36.7318%" y="453" width="1.9553%" height="15" fill="rgb(209,83,10)"/><text x="36.9818%" y="463.50">s..</text></g><g><title>schedule (14 samples, 1.96%)</title><rect x="36.7318%" y="437" width="1.9553%" height="15" fill="rgb(209,164,1)"/><text x="36.9818%" y="447.50">s..</text></g><g><title>__schedule (14 samples, 1.96%)</title><rect x="36.7318%" y="421" width="1.9553%" height="15" fill="rgb(213,184,43)"/><text x="36.9818%" y="431.50">_..</text></g><g><title>update_rq_clock (1 samples, 0.14%)</title><rect x="38.5475%" y="405" width="0.1397%" height="15" fill="rgb(231,61,34)"/><text x="38.7975%" y="415.50"></text></g><g><title>update_irq_load_avg (1 samples, 0.14%)</title><rect x="38.5475%" y="389" width="0.1397%" height="15" fill="rgb(235,75,3)"/><text x="38.7975%" y="399.50"></text></g><g><title>tcp_rcv_space_adjust (1 samples, 0.14%)</title><rect x="38.6872%" y="485" width="0.1397%" height="15" fill="rgb(220,106,47)"/><text x="38.9372%" y="495.50"></text></g><g><title>__x64_sys_recvfrom (23 samples, 3.21%)</title><rect x="35.7542%" y="549" width="3.2123%" height="15" fill="rgb(210,196,33)"/><text x="36.0042%" y="559.50">__x..</text></g><g><title>__sys_recvfrom (23 samples, 3.21%)</title><rect x="35.7542%" y="533" width="3.2123%" height="15" fill="rgb(229,154,42)"/><text x="36.0042%" y="543.50">__s..</text></g><g><title>inet_recvmsg (23 samples, 3.21%)</title><rect x="35.7542%" y="517" width="3.2123%" height="15" fill="rgb(228,114,26)"/><text x="36.0042%" y="527.50">ine..</text></g><g><title>tcp_recvmsg (23 samples, 3.21%)</title><rect x="35.7542%" y="501" width="3.2123%" height="15" fill="rgb(208,144,1)"/><text x="36.0042%" y="511.50">tcp..</text></g><g><title>tcp_recv_timestamp (1 samples, 0.14%)</title><rect x="38.8268%" y="485" width="0.1397%" height="15" fill="rgb(239,112,37)"/><text x="39.0768%" y="495.50"></text></g><g><title>do_syscall_64 (25 samples, 3.49%)</title><rect x="35.7542%" y="565" width="3.4916%" height="15" fill="rgb(210,96,50)"/><text x="36.0042%" y="575.50">do_..</text></g><g><title>syscall_trace_enter (2 samples, 0.28%)</title><rect x="38.9665%" y="549" width="0.2793%" height="15" fill="rgb(222,178,2)"/><text x="39.2165%" y="559.50"></text></g><g><title>__audit_syscall_entry (2 samples, 0.28%)</title><rect x="38.9665%" y="533" width="0.2793%" height="15" fill="rgb(226,74,18)"/><text x="39.2165%" y="543.50"></text></g><g><title>entry_SYSCALL_64 (27 samples, 3.77%)</title><rect x="35.7542%" y="581" width="3.7709%" height="15" fill="rgb(225,67,54)"/><text x="36.0042%" y="591.50">entr..</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.28%)</title><rect x="39.2458%" y="565" width="0.2793%" height="15" fill="rgb(251,92,32)"/><text x="39.4958%" y="575.50"></text></g><g><title>switch_fpu_return (1 samples, 0.14%)</title><rect x="39.3855%" y="549" width="0.1397%" height="15" fill="rgb(228,149,22)"/><text x="39.6355%" y="559.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.14%)</title><rect x="39.3855%" y="533" width="0.1397%" height="15" fill="rgb(243,54,13)"/><text x="39.6355%" y="543.50"></text></g><g><title>__libc_recv (29 samples, 4.05%)</title><rect x="35.6145%" y="597" width="4.0503%" height="15" fill="rgb(243,180,28)"/><text x="35.8645%" y="607.50">__li..</text></g><g><title>syscall_return_via_sysret (1 samples, 0.14%)</title><rect x="39.5251%" y="581" width="0.1397%" height="15" fill="rgb(208,167,24)"/><text x="39.7751%" y="591.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (30 samples, 4.19%)</title><rect x="35.6145%" y="677" width="4.1899%" height="15" fill="rgb(245,73,45)"/><text x="35.8645%" y="687.50">&lt;std:..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (30 samples, 4.19%)</title><rect x="35.6145%" y="661" width="4.1899%" height="15" fill="rgb(237,203,48)"/><text x="35.8645%" y="671.50">&lt;std:..</text></g><g><title>std::sys_common::net::TcpStream::read (30 samples, 4.19%)</title><rect x="35.6145%" y="645" width="4.1899%" height="15" fill="rgb(211,197,16)"/><text x="35.8645%" y="655.50">std::..</text></g><g><title>std::sys::unix::net::Socket::read (30 samples, 4.19%)</title><rect x="35.6145%" y="629" width="4.1899%" height="15" fill="rgb(243,99,51)"/><text x="35.8645%" y="639.50">std::..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (30 samples, 4.19%)</title><rect x="35.6145%" y="613" width="4.1899%" height="15" fill="rgb(215,123,29)"/><text x="35.8645%" y="623.50">std::..</text></g><g><title>std::sys::unix::cvt (1 samples, 0.14%)</title><rect x="39.6648%" y="597" width="0.1397%" height="15" fill="rgb(239,186,37)"/><text x="39.9148%" y="607.50"></text></g><g><title>&lt;isize as std::sys::unix::IsMinusOne&gt;::is_minus_one (1 samples, 0.14%)</title><rect x="39.6648%" y="581" width="0.1397%" height="15" fill="rgb(252,136,39)"/><text x="39.9148%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.28%)</title><rect x="40.3631%" y="629" width="0.2793%" height="15" fill="rgb(223,213,32)"/><text x="40.6131%" y="639.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.28%)</title><rect x="40.3631%" y="613" width="0.2793%" height="15" fill="rgb(233,115,5)"/><text x="40.6131%" y="623.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 5.31%)</title><rect x="35.4749%" y="693" width="5.3073%" height="15" fill="rgb(207,226,44)"/><text x="35.7249%" y="703.50">&lt;mysql..</text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (7 samples, 0.98%)</title><rect x="39.8045%" y="677" width="0.9777%" height="15" fill="rgb(208,126,0)"/><text x="40.0545%" y="687.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (7 samples, 0.98%)</title><rect x="39.8045%" y="661" width="0.9777%" height="15" fill="rgb(244,66,21)"/><text x="40.0545%" y="671.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (7 samples, 0.98%)</title><rect x="39.8045%" y="645" width="0.9777%" height="15" fill="rgb(222,97,12)"/><text x="40.0545%" y="655.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.14%)</title><rect x="40.6425%" y="629" width="0.1397%" height="15" fill="rgb(219,213,19)"/><text x="40.8925%" y="639.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (1 samples, 0.14%)</title><rect x="40.6425%" y="613" width="0.1397%" height="15" fill="rgb(252,169,30)"/><text x="40.8925%" y="623.50"></text></g><g><title>mysql::conn::Conn::read_packet (39 samples, 5.45%)</title><rect x="35.4749%" y="709" width="5.4469%" height="15" fill="rgb(206,32,51)"/><text x="35.7249%" y="719.50">mysql::..</text></g><g><title>std::io::error::Error::_new (1 samples, 0.14%)</title><rect x="40.7821%" y="693" width="0.1397%" height="15" fill="rgb(250,172,42)"/><text x="41.0321%" y="703.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.14%)</title><rect x="40.7821%" y="677" width="0.1397%" height="15" fill="rgb(209,34,43)"/><text x="41.0321%" y="687.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.14%)</title><rect x="40.7821%" y="661" width="0.1397%" height="15" fill="rgb(223,11,35)"/><text x="41.0321%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.14%)</title><rect x="40.7821%" y="645" width="0.1397%" height="15" fill="rgb(251,219,26)"/><text x="41.0321%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.14%)</title><rect x="40.7821%" y="629" width="0.1397%" height="15" fill="rgb(231,119,3)"/><text x="41.0321%" y="639.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.14%)</title><rect x="40.7821%" y="613" width="0.1397%" height="15" fill="rgb(216,97,11)"/><text x="41.0321%" y="623.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="40.7821%" y="597" width="0.1397%" height="15" fill="rgb(223,59,9)"/><text x="41.0321%" y="607.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (42 samples, 5.87%)</title><rect x="35.3352%" y="725" width="5.8659%" height="15" fill="rgb(233,93,31)"/><text x="35.5852%" y="735.50">mysql::..</text></g><g><title>mysql_common::packets::parse_ok_packet (2 samples, 0.28%)</title><rect x="40.9218%" y="709" width="0.2793%" height="15" fill="rgb(239,81,33)"/><text x="41.1718%" y="719.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::flush (1 samples, 0.14%)</title><rect x="41.2011%" y="709" width="0.1397%" height="15" fill="rgb(213,120,34)"/><text x="41.4511%" y="719.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::encode (1 samples, 0.14%)</title><rect x="41.3408%" y="709" width="0.1397%" height="15" fill="rgb(243,49,53)"/><text x="41.5908%" y="719.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::encode (1 samples, 0.14%)</title><rect x="41.3408%" y="693" width="0.1397%" height="15" fill="rgb(247,216,33)"/><text x="41.5908%" y="703.50"></text></g><g><title>__pthread_disable_asynccancel (1 samples, 0.14%)</title><rect x="41.4804%" y="645" width="0.1397%" height="15" fill="rgb(226,26,14)"/><text x="41.7304%" y="655.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.14%)</title><rect x="41.7598%" y="549" width="0.1397%" height="15" fill="rgb(215,49,53)"/><text x="42.0098%" y="559.50"></text></g><g><title>preempt_count_sub (1 samples, 0.14%)</title><rect x="41.7598%" y="533" width="0.1397%" height="15" fill="rgb(245,162,40)"/><text x="42.0098%" y="543.50"></text></g><g><title>release_sock (1 samples, 0.14%)</title><rect x="41.8994%" y="549" width="0.1397%" height="15" fill="rgb(229,68,17)"/><text x="42.1494%" y="559.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.14%)</title><rect x="41.8994%" y="533" width="0.1397%" height="15" fill="rgb(213,182,10)"/><text x="42.1494%" y="543.50"></text></g><g><title>__sk_dst_check (1 samples, 0.14%)</title><rect x="42.7374%" y="469" width="0.1397%" height="15" fill="rgb(245,125,30)"/><text x="42.9874%" y="479.50"></text></g><g><title>__dev_queue_xmit (2 samples, 0.28%)</title><rect x="43.4358%" y="437" width="0.2793%" height="15" fill="rgb(232,202,2)"/><text x="43.6858%" y="447.50"></text></g><g><title>validate_xmit_skb (1 samples, 0.14%)</title><rect x="43.5754%" y="421" width="0.1397%" height="15" fill="rgb(237,140,51)"/><text x="43.8254%" y="431.50"></text></g><g><title>netif_skb_features (1 samples, 0.14%)</title><rect x="43.5754%" y="405" width="0.1397%" height="15" fill="rgb(236,157,25)"/><text x="43.8254%" y="415.50"></text></g><g><title>__netif_receive_skb_core (1 samples, 0.14%)</title><rect x="43.9944%" y="325" width="0.1397%" height="15" fill="rgb(219,209,0)"/><text x="44.2444%" y="335.50"></text></g><g><title>sock_put (1 samples, 0.14%)</title><rect x="44.2737%" y="245" width="0.1397%" height="15" fill="rgb(240,116,54)"/><text x="44.5237%" y="255.50"></text></g><g><title>sk_reset_timer (1 samples, 0.14%)</title><rect x="44.4134%" y="213" width="0.1397%" height="15" fill="rgb(216,10,36)"/><text x="44.6634%" y="223.50"></text></g><g><title>__mod_timer (1 samples, 0.14%)</title><rect x="44.4134%" y="197" width="0.1397%" height="15" fill="rgb(222,72,44)"/><text x="44.6634%" y="207.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.14%)</title><rect x="44.5531%" y="197" width="0.1397%" height="15" fill="rgb(232,159,9)"/><text x="44.8031%" y="207.50"></text></g><g><title>psi_flags_change (1 samples, 0.14%)</title><rect x="45.5307%" y="101" width="0.1397%" height="15" fill="rgb(210,39,32)"/><text x="45.7807%" y="111.50"></text></g><g><title>psi_task_change (7 samples, 0.98%)</title><rect x="44.9721%" y="117" width="0.9777%" height="15" fill="rgb(216,194,45)"/><text x="45.2221%" y="127.50"></text></g><g><title>psi_group_change (2 samples, 0.28%)</title><rect x="45.6704%" y="101" width="0.2793%" height="15" fill="rgb(218,18,35)"/><text x="45.9204%" y="111.50"></text></g><g><title>record_times (1 samples, 0.14%)</title><rect x="45.8101%" y="85" width="0.1397%" height="15" fill="rgb(207,83,51)"/><text x="46.0601%" y="95.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.14%)</title><rect x="45.8101%" y="69" width="0.1397%" height="15" fill="rgb(225,63,43)"/><text x="46.0601%" y="79.50"></text></g><g><title>sched_clock (1 samples, 0.14%)</title><rect x="45.8101%" y="53" width="0.1397%" height="15" fill="rgb(207,57,36)"/><text x="46.0601%" y="63.50"></text></g><g><title>native_sched_clock (1 samples, 0.14%)</title><rect x="45.8101%" y="37" width="0.1397%" height="15" fill="rgb(216,99,33)"/><text x="46.0601%" y="47.50"></text></g><g><title>enqueue_task (8 samples, 1.12%)</title><rect x="44.9721%" y="133" width="1.1173%" height="15" fill="rgb(225,42,16)"/><text x="45.2221%" y="143.50"></text></g><g><title>uclamp_rq_inc_id (1 samples, 0.14%)</title><rect x="45.9497%" y="117" width="0.1397%" height="15" fill="rgb(220,201,45)"/><text x="46.1997%" y="127.50"></text></g><g><title>enqueue_task_fair (3 samples, 0.42%)</title><rect x="46.0894%" y="133" width="0.4190%" height="15" fill="rgb(225,33,4)"/><text x="46.3394%" y="143.50"></text></g><g><title>enqueue_entity (2 samples, 0.28%)</title><rect x="46.2291%" y="117" width="0.2793%" height="15" fill="rgb(224,33,50)"/><text x="46.4791%" y="127.50"></text></g><g><title>update_load_avg (1 samples, 0.14%)</title><rect x="46.3687%" y="101" width="0.1397%" height="15" fill="rgb(246,198,51)"/><text x="46.6187%" y="111.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.14%)</title><rect x="46.3687%" y="85" width="0.1397%" height="15" fill="rgb(205,22,4)"/><text x="46.6187%" y="95.50"></text></g><g><title>sock_def_readable (16 samples, 2.23%)</title><rect x="44.5531%" y="213" width="2.2346%" height="15" fill="rgb(206,3,8)"/><text x="44.8031%" y="223.50">s..</text></g><g><title>__wake_up_common_lock (15 samples, 2.09%)</title><rect x="44.6927%" y="197" width="2.0950%" height="15" fill="rgb(251,23,15)"/><text x="44.9427%" y="207.50">_..</text></g><g><title>__wake_up_common (15 samples, 2.09%)</title><rect x="44.6927%" y="181" width="2.0950%" height="15" fill="rgb(252,88,28)"/><text x="44.9427%" y="191.50">_..</text></g><g><title>pollwake (15 samples, 2.09%)</title><rect x="44.6927%" y="165" width="2.0950%" height="15" fill="rgb(212,127,14)"/><text x="44.9427%" y="175.50">p..</text></g><g><title>try_to_wake_up (15 samples, 2.09%)</title><rect x="44.6927%" y="149" width="2.0950%" height="15" fill="rgb(247,145,37)"/><text x="44.9427%" y="159.50">t..</text></g><g><title>select_task_rq_fair (2 samples, 0.28%)</title><rect x="46.5084%" y="133" width="0.2793%" height="15" fill="rgb(209,117,53)"/><text x="46.7584%" y="143.50"></text></g><g><title>available_idle_cpu (1 samples, 0.14%)</title><rect x="46.6480%" y="117" width="0.1397%" height="15" fill="rgb(212,90,42)"/><text x="46.8980%" y="127.50"></text></g><g><title>kfree (1 samples, 0.14%)</title><rect x="46.9274%" y="181" width="0.1397%" height="15" fill="rgb(218,164,37)"/><text x="47.1774%" y="191.50"></text></g><g><title>slab_free_freelist_hook (1 samples, 0.14%)</title><rect x="46.9274%" y="165" width="0.1397%" height="15" fill="rgb(246,65,34)"/><text x="47.1774%" y="175.50"></text></g><g><title>__kfree_skb (5 samples, 0.70%)</title><rect x="46.9274%" y="197" width="0.6983%" height="15" fill="rgb(231,100,33)"/><text x="47.1774%" y="207.50"></text></g><g><title>skb_release_data (4 samples, 0.56%)</title><rect x="47.0670%" y="181" width="0.5587%" height="15" fill="rgb(228,126,14)"/><text x="47.3170%" y="191.50"></text></g><g><title>tcp_ack_update_rtt (1 samples, 0.14%)</title><rect x="47.6257%" y="197" width="0.1397%" height="15" fill="rgb(215,173,21)"/><text x="47.8757%" y="207.50"></text></g><g><title>__usecs_to_jiffies (1 samples, 0.14%)</title><rect x="47.6257%" y="181" width="0.1397%" height="15" fill="rgb(210,6,40)"/><text x="47.8757%" y="191.50"></text></g><g><title>__netif_receive_skb_one_core (28 samples, 3.91%)</title><rect x="43.9944%" y="341" width="3.9106%" height="15" fill="rgb(212,48,18)"/><text x="44.2444%" y="351.50">__ne..</text></g><g><title>ip_rcv (27 samples, 3.77%)</title><rect x="44.1341%" y="325" width="3.7709%" height="15" fill="rgb(230,214,11)"/><text x="44.3841%" y="335.50">ip_r..</text></g><g><title>ip_local_deliver (27 samples, 3.77%)</title><rect x="44.1341%" y="309" width="3.7709%" height="15" fill="rgb(254,105,39)"/><text x="44.3841%" y="319.50">ip_l..</text></g><g><title>ip_local_deliver_finish (27 samples, 3.77%)</title><rect x="44.1341%" y="293" width="3.7709%" height="15" fill="rgb(245,158,5)"/><text x="44.3841%" y="303.50">ip_l..</text></g><g><title>ip_protocol_deliver_rcu (27 samples, 3.77%)</title><rect x="44.1341%" y="277" width="3.7709%" height="15" fill="rgb(249,208,11)"/><text x="44.3841%" y="287.50">ip_p..</text></g><g><title>tcp_v4_rcv (27 samples, 3.77%)</title><rect x="44.1341%" y="261" width="3.7709%" height="15" fill="rgb(210,39,28)"/><text x="44.3841%" y="271.50">tcp_..</text></g><g><title>tcp_v4_do_rcv (25 samples, 3.49%)</title><rect x="44.4134%" y="245" width="3.4916%" height="15" fill="rgb(211,56,53)"/><text x="44.6634%" y="255.50">tcp..</text></g><g><title>tcp_rcv_established (25 samples, 3.49%)</title><rect x="44.4134%" y="229" width="3.4916%" height="15" fill="rgb(226,201,30)"/><text x="44.6634%" y="239.50">tcp..</text></g><g><title>tcp_ack (8 samples, 1.12%)</title><rect x="46.7877%" y="213" width="1.1173%" height="15" fill="rgb(239,101,34)"/><text x="47.0377%" y="223.50"></text></g><g><title>tcp_update_pacing_rate (1 samples, 0.14%)</title><rect x="47.7654%" y="197" width="0.1397%" height="15" fill="rgb(226,209,5)"/><text x="48.0154%" y="207.50"></text></g><g><title>ip_finish_output2 (37 samples, 5.17%)</title><rect x="42.8771%" y="453" width="5.1676%" height="15" fill="rgb(250,105,47)"/><text x="43.1271%" y="463.50">ip_fin..</text></g><g><title>__local_bh_enable_ip (31 samples, 4.33%)</title><rect x="43.7151%" y="437" width="4.3296%" height="15" fill="rgb(230,72,3)"/><text x="43.9651%" y="447.50">__loc..</text></g><g><title>do_softirq (31 samples, 4.33%)</title><rect x="43.7151%" y="421" width="4.3296%" height="15" fill="rgb(232,218,39)"/><text x="43.9651%" y="431.50">do_so..</text></g><g><title>do_softirq_own_stack (31 samples, 4.33%)</title><rect x="43.7151%" y="405" width="4.3296%" height="15" fill="rgb(248,166,6)"/><text x="43.9651%" y="415.50">do_so..</text></g><g><title>__do_softirq (31 samples, 4.33%)</title><rect x="43.7151%" y="389" width="4.3296%" height="15" fill="rgb(247,89,20)"/><text x="43.9651%" y="399.50">__do_..</text></g><g><title>net_rx_action (30 samples, 4.19%)</title><rect x="43.8547%" y="373" width="4.1899%" height="15" fill="rgb(248,130,54)"/><text x="44.1047%" y="383.50">net_r..</text></g><g><title>process_backlog (29 samples, 4.05%)</title><rect x="43.9944%" y="357" width="4.0503%" height="15" fill="rgb(234,196,4)"/><text x="44.2444%" y="367.50">proc..</text></g><g><title>__rcu_read_unlock (1 samples, 0.14%)</title><rect x="47.9050%" y="341" width="0.1397%" height="15" fill="rgb(250,143,31)"/><text x="48.1550%" y="351.50"></text></g><g><title>__ip_queue_xmit (40 samples, 5.59%)</title><rect x="42.5978%" y="485" width="5.5866%" height="15" fill="rgb(211,110,34)"/><text x="42.8478%" y="495.50">__ip_qu..</text></g><g><title>ip_output (38 samples, 5.31%)</title><rect x="42.8771%" y="469" width="5.3073%" height="15" fill="rgb(215,124,48)"/><text x="43.1271%" y="479.50">ip_out..</text></g><g><title>ip_finish_output (1 samples, 0.14%)</title><rect x="48.0447%" y="453" width="0.1397%" height="15" fill="rgb(216,46,13)"/><text x="48.2947%" y="463.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (1 samples, 0.14%)</title><rect x="48.0447%" y="437" width="0.1397%" height="15" fill="rgb(205,184,25)"/><text x="48.2947%" y="447.50"></text></g><g><title>__tcp_push_pending_frames (44 samples, 6.15%)</title><rect x="42.3184%" y="533" width="6.1453%" height="15" fill="rgb(228,1,10)"/><text x="42.5684%" y="543.50">__tcp_pu..</text></g><g><title>tcp_write_xmit (44 samples, 6.15%)</title><rect x="42.3184%" y="517" width="6.1453%" height="15" fill="rgb(213,116,27)"/><text x="42.5684%" y="527.50">tcp_writ..</text></g><g><title>__tcp_transmit_skb (44 samples, 6.15%)</title><rect x="42.3184%" y="501" width="6.1453%" height="15" fill="rgb(241,95,50)"/><text x="42.5684%" y="511.50">__tcp_tr..</text></g><g><title>skb_clone (2 samples, 0.28%)</title><rect x="48.1844%" y="485" width="0.2793%" height="15" fill="rgb(238,48,32)"/><text x="48.4344%" y="495.50"></text></g><g><title>__copy_skb_header (1 samples, 0.14%)</title><rect x="48.3240%" y="469" width="0.1397%" height="15" fill="rgb(235,113,49)"/><text x="48.5740%" y="479.50"></text></g><g><title>__kmalloc_node_track_caller (1 samples, 0.14%)</title><rect x="48.4637%" y="501" width="0.1397%" height="15" fill="rgb(205,127,43)"/><text x="48.7137%" y="511.50"></text></g><g><title>kmalloc_slab (1 samples, 0.14%)</title><rect x="48.4637%" y="485" width="0.1397%" height="15" fill="rgb(250,162,2)"/><text x="48.7137%" y="495.50"></text></g><g><title>__ksize (1 samples, 0.14%)</title><rect x="48.6034%" y="501" width="0.1397%" height="15" fill="rgb(220,13,41)"/><text x="48.8534%" y="511.50"></text></g><g><title>sk_stream_alloc_skb (3 samples, 0.42%)</title><rect x="48.4637%" y="533" width="0.4190%" height="15" fill="rgb(249,221,25)"/><text x="48.7137%" y="543.50"></text></g><g><title>__alloc_skb (3 samples, 0.42%)</title><rect x="48.4637%" y="517" width="0.4190%" height="15" fill="rgb(215,208,19)"/><text x="48.7137%" y="527.50"></text></g><g><title>kmem_cache_alloc_node (1 samples, 0.14%)</title><rect x="48.7430%" y="501" width="0.1397%" height="15" fill="rgb(236,175,2)"/><text x="48.9930%" y="511.50"></text></g><g><title>skb_do_copy_data_nocache (1 samples, 0.14%)</title><rect x="48.8827%" y="533" width="0.1397%" height="15" fill="rgb(241,52,2)"/><text x="49.1327%" y="543.50"></text></g><g><title>__check_object_size (1 samples, 0.14%)</title><rect x="48.8827%" y="517" width="0.1397%" height="15" fill="rgb(248,140,14)"/><text x="49.1327%" y="527.50"></text></g><g><title>__virt_addr_valid (1 samples, 0.14%)</title><rect x="48.8827%" y="501" width="0.1397%" height="15" fill="rgb(253,22,42)"/><text x="49.1327%" y="511.50"></text></g><g><title>skb_entail (1 samples, 0.14%)</title><rect x="49.0223%" y="533" width="0.1397%" height="15" fill="rgb(234,61,47)"/><text x="49.2723%" y="543.50"></text></g><g><title>sock_sendmsg (54 samples, 7.54%)</title><rect x="41.7598%" y="581" width="7.5419%" height="15" fill="rgb(208,226,15)"/><text x="42.0098%" y="591.50">sock_sendm..</text></g><g><title>tcp_sendmsg (54 samples, 7.54%)</title><rect x="41.7598%" y="565" width="7.5419%" height="15" fill="rgb(217,221,4)"/><text x="42.0098%" y="575.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (52 samples, 7.26%)</title><rect x="42.0391%" y="549" width="7.2626%" height="15" fill="rgb(212,174,34)"/><text x="42.2891%" y="559.50">tcp_sendms..</text></g><g><title>tcp_send_mss (1 samples, 0.14%)</title><rect x="49.1620%" y="533" width="0.1397%" height="15" fill="rgb(253,83,4)"/><text x="49.4120%" y="543.50"></text></g><g><title>tcp_current_mss (1 samples, 0.14%)</title><rect x="49.1620%" y="517" width="0.1397%" height="15" fill="rgb(250,195,49)"/><text x="49.4120%" y="527.50"></text></g><g><title>do_syscall_64 (58 samples, 8.10%)</title><rect x="41.6201%" y="629" width="8.1006%" height="15" fill="rgb(241,192,25)"/><text x="41.8701%" y="639.50">do_syscall_..</text></g><g><title>__x64_sys_sendto (57 samples, 7.96%)</title><rect x="41.7598%" y="613" width="7.9609%" height="15" fill="rgb(208,124,10)"/><text x="42.0098%" y="623.50">__x64_sys_s..</text></g><g><title>__sys_sendto (57 samples, 7.96%)</title><rect x="41.7598%" y="597" width="7.9609%" height="15" fill="rgb(222,33,0)"/><text x="42.0098%" y="607.50">__sys_sendto</text></g><g><title>sockfd_lookup_light (3 samples, 0.42%)</title><rect x="49.3017%" y="581" width="0.4190%" height="15" fill="rgb(234,209,28)"/><text x="49.5517%" y="591.50"></text></g><g><title>__fget_light (3 samples, 0.42%)</title><rect x="49.3017%" y="565" width="0.4190%" height="15" fill="rgb(224,11,23)"/><text x="49.5517%" y="575.50"></text></g><g><title>__fget_files (1 samples, 0.14%)</title><rect x="49.5810%" y="549" width="0.1397%" height="15" fill="rgb(232,99,1)"/><text x="49.8310%" y="559.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (105 samples, 14.66%)</title><rect x="35.1955%" y="757" width="14.6648%" height="15" fill="rgb(237,95,45)"/><text x="35.4455%" y="767.50">&lt;mysql::conn::Conn as ..</text></g><g><title>mysql::conn::Conn::_query (104 samples, 14.53%)</title><rect x="35.3352%" y="741" width="14.5251%" height="15" fill="rgb(208,109,11)"/><text x="35.5852%" y="751.50">mysql::conn::Conn::_qu..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (62 samples, 8.66%)</title><rect x="41.2011%" y="725" width="8.6592%" height="15" fill="rgb(216,190,48)"/><text x="41.4511%" y="735.50">mysql_common..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (60 samples, 8.38%)</title><rect x="41.4804%" y="709" width="8.3799%" height="15" fill="rgb(251,171,36)"/><text x="41.7304%" y="719.50">std::io::buf..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (60 samples, 8.38%)</title><rect x="41.4804%" y="693" width="8.3799%" height="15" fill="rgb(230,62,22)"/><text x="41.7304%" y="703.50">&lt;std::net::t..</text></g><g><title>std::sys_common::net::TcpStream::write (60 samples, 8.38%)</title><rect x="41.4804%" y="677" width="8.3799%" height="15" fill="rgb(225,114,35)"/><text x="41.7304%" y="687.50">std::sys_com..</text></g><g><title>__libc_send (60 samples, 8.38%)</title><rect x="41.4804%" y="661" width="8.3799%" height="15" fill="rgb(215,118,42)"/><text x="41.7304%" y="671.50">__libc_send</text></g><g><title>entry_SYSCALL_64 (59 samples, 8.24%)</title><rect x="41.6201%" y="645" width="8.2402%" height="15" fill="rgb(243,119,21)"/><text x="41.8701%" y="655.50">entry_SYSCA..</text></g><g><title>prepare_exit_to_usermode (1 samples, 0.14%)</title><rect x="49.7207%" y="629" width="0.1397%" height="15" fill="rgb(252,177,53)"/><text x="49.9707%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="49.8603%" y="741" width="0.1397%" height="15" fill="rgb(237,209,29)"/><text x="50.1103%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.14%)</title><rect x="49.8603%" y="725" width="0.1397%" height="15" fill="rgb(212,65,23)"/><text x="50.1103%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.14%)</title><rect x="50.1397%" y="677" width="0.1397%" height="15" fill="rgb(230,222,46)"/><text x="50.3897%" y="687.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (1 samples, 0.14%)</title><rect x="50.1397%" y="661" width="0.1397%" height="15" fill="rgb(215,135,32)"/><text x="50.3897%" y="671.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.14%)</title><rect x="50.1397%" y="645" width="0.1397%" height="15" fill="rgb(246,101,22)"/><text x="50.3897%" y="655.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (1 samples, 0.14%)</title><rect x="50.1397%" y="629" width="0.1397%" height="15" fill="rgb(206,107,13)"/><text x="50.3897%" y="639.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (1 samples, 0.14%)</title><rect x="50.1397%" y="613" width="0.1397%" height="15" fill="rgb(250,100,44)"/><text x="50.3897%" y="623.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.14%)</title><rect x="50.1397%" y="597" width="0.1397%" height="15" fill="rgb(231,147,38)"/><text x="50.3897%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.28%)</title><rect x="50.1397%" y="693" width="0.2793%" height="15" fill="rgb(229,8,40)"/><text x="50.3897%" y="703.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.14%)</title><rect x="50.2793%" y="677" width="0.1397%" height="15" fill="rgb(221,135,30)"/><text x="50.5293%" y="687.50"></text></g><g><title>core::fmt::write (1 samples, 0.14%)</title><rect x="50.2793%" y="661" width="0.1397%" height="15" fill="rgb(249,193,18)"/><text x="50.5293%" y="671.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.14%)</title><rect x="50.2793%" y="645" width="0.1397%" height="15" fill="rgb(209,133,39)"/><text x="50.5293%" y="655.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (2 samples, 0.28%)</title><rect x="50.5587%" y="661" width="0.2793%" height="15" fill="rgb(232,100,14)"/><text x="50.8087%" y="671.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (2 samples, 0.28%)</title><rect x="50.5587%" y="645" width="0.2793%" height="15" fill="rgb(224,185,1)"/><text x="50.8087%" y="655.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.28%)</title><rect x="50.5587%" y="629" width="0.2793%" height="15" fill="rgb(223,139,8)"/><text x="50.8087%" y="639.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.28%)</title><rect x="50.5587%" y="613" width="0.2793%" height="15" fill="rgb(232,213,38)"/><text x="50.8087%" y="623.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (1 samples, 0.14%)</title><rect x="50.6983%" y="597" width="0.1397%" height="15" fill="rgb(207,94,22)"/><text x="50.9483%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.56%)</title><rect x="50.4190%" y="693" width="0.5587%" height="15" fill="rgb(219,183,54)"/><text x="50.6690%" y="703.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (4 samples, 0.56%)</title><rect x="50.4190%" y="677" width="0.5587%" height="15" fill="rgb(216,185,54)"/><text x="50.6690%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (1 samples, 0.14%)</title><rect x="50.8380%" y="661" width="0.1397%" height="15" fill="rgb(254,217,39)"/><text x="51.0880%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (9 samples, 1.26%)</title><rect x="50.0000%" y="709" width="1.2570%" height="15" fill="rgb(240,178,23)"/><text x="50.2500%" y="719.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.28%)</title><rect x="50.9777%" y="693" width="0.2793%" height="15" fill="rgb(218,11,47)"/><text x="51.2277%" y="703.50"></text></g><g><title>_int_free (1 samples, 0.14%)</title><rect x="51.1173%" y="677" width="0.1397%" height="15" fill="rgb(218,51,51)"/><text x="51.3673%" y="687.50"></text></g><g><title>__rust_dealloc (1 samples, 0.14%)</title><rect x="51.2570%" y="693" width="0.1397%" height="15" fill="rgb(238,126,27)"/><text x="51.5070%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (11 samples, 1.54%)</title><rect x="50.0000%" y="725" width="1.5363%" height="15" fill="rgb(249,202,22)"/><text x="50.2500%" y="735.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.28%)</title><rect x="51.2570%" y="709" width="0.2793%" height="15" fill="rgb(254,195,49)"/><text x="51.5070%" y="719.50"></text></g><g><title>core::fmt::write (1 samples, 0.14%)</title><rect x="51.3966%" y="693" width="0.1397%" height="15" fill="rgb(208,123,14)"/><text x="51.6466%" y="703.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.14%)</title><rect x="51.3966%" y="677" width="0.1397%" height="15" fill="rgb(224,200,8)"/><text x="51.6466%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.14%)</title><rect x="51.3966%" y="661" width="0.1397%" height="15" fill="rgb(217,61,36)"/><text x="51.6466%" y="671.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="51.3966%" y="645" width="0.1397%" height="15" fill="rgb(206,35,45)"/><text x="51.6466%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.14%)</title><rect x="51.5363%" y="693" width="0.1397%" height="15" fill="rgb(217,65,33)"/><text x="51.7863%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.14%)</title><rect x="51.5363%" y="677" width="0.1397%" height="15" fill="rgb(222,158,48)"/><text x="51.7863%" y="687.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.14%)</title><rect x="51.5363%" y="661" width="0.1397%" height="15" fill="rgb(254,2,54)"/><text x="51.7863%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.14%)</title><rect x="51.5363%" y="645" width="0.1397%" height="15" fill="rgb(250,143,38)"/><text x="51.7863%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.28%)</title><rect x="51.5363%" y="725" width="0.2793%" height="15" fill="rgb(248,25,0)"/><text x="51.7863%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Values as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.28%)</title><rect x="51.5363%" y="709" width="0.2793%" height="15" fill="rgb(206,152,27)"/><text x="51.7863%" y="719.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.14%)</title><rect x="51.6760%" y="693" width="0.1397%" height="15" fill="rgb(240,77,30)"/><text x="51.9260%" y="703.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.14%)</title><rect x="51.6760%" y="677" width="0.1397%" height="15" fill="rgb(231,5,3)"/><text x="51.9260%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.14%)</title><rect x="51.8156%" y="709" width="0.1397%" height="15" fill="rgb(207,226,32)"/><text x="52.0656%" y="719.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.14%)</title><rect x="52.2346%" y="661" width="0.1397%" height="15" fill="rgb(222,207,47)"/><text x="52.4846%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.14%)</title><rect x="52.2346%" y="645" width="0.1397%" height="15" fill="rgb(229,115,45)"/><text x="52.4846%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (1 samples, 0.14%)</title><rect x="52.2346%" y="629" width="0.1397%" height="15" fill="rgb(224,191,6)"/><text x="52.4846%" y="639.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (3 samples, 0.42%)</title><rect x="52.2346%" y="677" width="0.4190%" height="15" fill="rgb(230,227,24)"/><text x="52.4846%" y="687.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (2 samples, 0.28%)</title><rect x="52.3743%" y="661" width="0.2793%" height="15" fill="rgb(228,80,19)"/><text x="52.6243%" y="671.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.28%)</title><rect x="52.3743%" y="645" width="0.2793%" height="15" fill="rgb(247,229,0)"/><text x="52.6243%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.28%)</title><rect x="52.3743%" y="629" width="0.2793%" height="15" fill="rgb(237,194,15)"/><text x="52.6243%" y="639.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (1 samples, 0.14%)</title><rect x="52.5140%" y="613" width="0.1397%" height="15" fill="rgb(219,203,20)"/><text x="52.7640%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (7 samples, 0.98%)</title><rect x="51.9553%" y="709" width="0.9777%" height="15" fill="rgb(234,128,8)"/><text x="52.2053%" y="719.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (7 samples, 0.98%)</title><rect x="51.9553%" y="693" width="0.9777%" height="15" fill="rgb(248,202,8)"/><text x="52.2053%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (2 samples, 0.28%)</title><rect x="52.6536%" y="677" width="0.2793%" height="15" fill="rgb(206,104,37)"/><text x="52.9036%" y="687.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.28%)</title><rect x="52.6536%" y="661" width="0.2793%" height="15" fill="rgb(223,8,27)"/><text x="52.9036%" y="671.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.14%)</title><rect x="52.7933%" y="645" width="0.1397%" height="15" fill="rgb(216,217,28)"/><text x="53.0433%" y="655.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="52.9330%" y="661" width="0.1397%" height="15" fill="rgb(249,199,1)"/><text x="53.1830%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.28%)</title><rect x="52.9330%" y="709" width="0.2793%" height="15" fill="rgb(240,85,17)"/><text x="53.1830%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.28%)</title><rect x="52.9330%" y="693" width="0.2793%" height="15" fill="rgb(206,108,45)"/><text x="53.1830%" y="703.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.28%)</title><rect x="52.9330%" y="677" width="0.2793%" height="15" fill="rgb(245,210,41)"/><text x="53.1830%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.14%)</title><rect x="53.0726%" y="661" width="0.1397%" height="15" fill="rgb(206,13,37)"/><text x="53.3226%" y="671.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.14%)</title><rect x="53.0726%" y="645" width="0.1397%" height="15" fill="rgb(250,61,18)"/><text x="53.3226%" y="655.50"></text></g><g><title>_int_realloc (1 samples, 0.14%)</title><rect x="53.0726%" y="629" width="0.1397%" height="15" fill="rgb(235,172,48)"/><text x="53.3226%" y="639.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.14%)</title><rect x="53.0726%" y="613" width="0.1397%" height="15" fill="rgb(249,201,17)"/><text x="53.3226%" y="623.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.14%)</title><rect x="53.3520%" y="693" width="0.1397%" height="15" fill="rgb(219,208,6)"/><text x="53.6020%" y="703.50"></text></g><g><title>_int_realloc (1 samples, 0.14%)</title><rect x="53.3520%" y="677" width="0.1397%" height="15" fill="rgb(248,31,23)"/><text x="53.6020%" y="687.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.14%)</title><rect x="53.6313%" y="677" width="0.1397%" height="15" fill="rgb(245,15,42)"/><text x="53.8813%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::UpdateStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (17 samples, 2.37%)</title><rect x="51.8156%" y="725" width="2.3743%" height="15" fill="rgb(222,217,39)"/><text x="52.0656%" y="735.50">&lt;s..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (7 samples, 0.98%)</title><rect x="53.2123%" y="709" width="0.9777%" height="15" fill="rgb(210,219,27)"/><text x="53.4623%" y="719.50"></text></g><g><title>core::fmt::write (5 samples, 0.70%)</title><rect x="53.4916%" y="693" width="0.6983%" height="15" fill="rgb(252,166,36)"/><text x="53.7416%" y="703.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.42%)</title><rect x="53.7709%" y="677" width="0.4190%" height="15" fill="rgb(245,132,34)"/><text x="54.0209%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.14%)</title><rect x="54.0503%" y="661" width="0.1397%" height="15" fill="rgb(236,54,3)"/><text x="54.3003%" y="671.50"></text></g><g><title>core::fmt::write (32 samples, 4.47%)</title><rect x="49.8603%" y="757" width="4.4693%" height="15" fill="rgb(241,173,43)"/><text x="50.1103%" y="767.50">core:..</text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (31 samples, 4.33%)</title><rect x="50.0000%" y="741" width="4.3296%" height="15" fill="rgb(215,190,9)"/><text x="50.2500%" y="751.50">&lt;sql_..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.14%)</title><rect x="54.1899%" y="725" width="0.1397%" height="15" fill="rgb(242,101,16)"/><text x="54.4399%" y="735.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.42%)</title><rect x="54.3296%" y="757" width="0.4190%" height="15" fill="rgb(223,190,21)"/><text x="54.5796%" y="767.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.28%)</title><rect x="54.4693%" y="741" width="0.2793%" height="15" fill="rgb(215,228,25)"/><text x="54.7193%" y="751.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.28%)</title><rect x="54.4693%" y="725" width="0.2793%" height="15" fill="rgb(225,36,22)"/><text x="54.7193%" y="735.50"></text></g><g><title>__GI___libc_free (1 samples, 0.14%)</title><rect x="54.6089%" y="709" width="0.1397%" height="15" fill="rgb(251,106,46)"/><text x="54.8589%" y="719.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="54.7486%" y="741" width="0.1397%" height="15" fill="rgb(208,90,1)"/><text x="54.9986%" y="751.50"></text></g><g><title>decor::answer_rows (2 samples, 0.28%)</title><rect x="54.7486%" y="757" width="0.2793%" height="15" fill="rgb(243,10,4)"/><text x="54.9986%" y="767.50"></text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::finish (1 samples, 0.14%)</title><rect x="54.8883%" y="741" width="0.1397%" height="15" fill="rgb(212,137,27)"/><text x="55.1383%" y="751.50"></text></g><g><title>msql_srv::writers::write_ok_packet (1 samples, 0.14%)</title><rect x="54.8883%" y="725" width="0.1397%" height="15" fill="rgb(231,220,49)"/><text x="55.1383%" y="735.50"></text></g><g><title>mysql_common::io::WriteMysqlExt::write_lenenc_int (1 samples, 0.14%)</title><rect x="54.8883%" y="709" width="0.1397%" height="15" fill="rgb(237,96,20)"/><text x="55.1383%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.14%)</title><rect x="54.8883%" y="693" width="0.1397%" height="15" fill="rgb(239,229,30)"/><text x="55.1383%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.28%)</title><rect x="55.1676%" y="741" width="0.2793%" height="15" fill="rgb(219,65,33)"/><text x="55.4176%" y="751.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.28%)</title><rect x="55.1676%" y="725" width="0.2793%" height="15" fill="rgb(243,134,7)"/><text x="55.4176%" y="735.50"></text></g><g><title>_int_malloc (1 samples, 0.14%)</title><rect x="55.3073%" y="709" width="0.1397%" height="15" fill="rgb(216,177,54)"/><text x="55.5573%" y="719.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (146 samples, 20.39%)</title><rect x="35.1955%" y="773" width="20.3911%" height="15" fill="rgb(211,160,20)"/><text x="35.4455%" y="783.50">&lt;decor::Shim as msql_srv::MysqlS..</text></g><g><title>sql_parser::parser::parse_statements (4 samples, 0.56%)</title><rect x="55.0279%" y="757" width="0.5587%" height="15" fill="rgb(239,85,39)"/><text x="55.2779%" y="767.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.14%)</title><rect x="55.4469%" y="741" width="0.1397%" height="15" fill="rgb(232,125,22)"/><text x="55.6969%" y="751.50"></text></g><g><title>__GI___libc_free (1 samples, 0.14%)</title><rect x="55.4469%" y="725" width="0.1397%" height="15" fill="rgb(244,57,34)"/><text x="55.6969%" y="735.50"></text></g><g><title>skb_release_data (1 samples, 0.14%)</title><rect x="55.8659%" y="549" width="0.1397%" height="15" fill="rgb(214,203,32)"/><text x="56.1159%" y="559.50"></text></g><g><title>__kfree_skb (2 samples, 0.28%)</title><rect x="55.8659%" y="565" width="0.2793%" height="15" fill="rgb(207,58,43)"/><text x="56.1159%" y="575.50"></text></g><g><title>skb_release_head_state (1 samples, 0.14%)</title><rect x="56.0056%" y="549" width="0.1397%" height="15" fill="rgb(215,193,15)"/><text x="56.2556%" y="559.50"></text></g><g><title>dst_release (1 samples, 0.14%)</title><rect x="56.0056%" y="533" width="0.1397%" height="15" fill="rgb(232,15,44)"/><text x="56.2556%" y="543.50"></text></g><g><title>__tcp_transmit_skb (2 samples, 0.28%)</title><rect x="56.1453%" y="565" width="0.2793%" height="15" fill="rgb(212,3,48)"/><text x="56.3953%" y="575.50"></text></g><g><title>__ip_queue_xmit (2 samples, 0.28%)</title><rect x="56.1453%" y="549" width="0.2793%" height="15" fill="rgb(218,128,7)"/><text x="56.3953%" y="559.50"></text></g><g><title>ip_output (1 samples, 0.14%)</title><rect x="56.2849%" y="533" width="0.1397%" height="15" fill="rgb(226,216,39)"/><text x="56.5349%" y="543.50"></text></g><g><title>ip_finish_output2 (1 samples, 0.14%)</title><rect x="56.2849%" y="517" width="0.1397%" height="15" fill="rgb(243,47,51)"/><text x="56.5349%" y="527.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.14%)</title><rect x="56.2849%" y="501" width="0.1397%" height="15" fill="rgb(241,183,40)"/><text x="56.5349%" y="511.50"></text></g><g><title>do_softirq (1 samples, 0.14%)</title><rect x="56.2849%" y="485" width="0.1397%" height="15" fill="rgb(231,217,32)"/><text x="56.5349%" y="495.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.14%)</title><rect x="56.2849%" y="469" width="0.1397%" height="15" fill="rgb(229,61,38)"/><text x="56.5349%" y="479.50"></text></g><g><title>__do_softirq (1 samples, 0.14%)</title><rect x="56.2849%" y="453" width="0.1397%" height="15" fill="rgb(225,210,5)"/><text x="56.5349%" y="463.50"></text></g><g><title>net_rx_action (1 samples, 0.14%)</title><rect x="56.2849%" y="437" width="0.1397%" height="15" fill="rgb(231,79,45)"/><text x="56.5349%" y="447.50"></text></g><g><title>process_backlog (1 samples, 0.14%)</title><rect x="56.2849%" y="421" width="0.1397%" height="15" fill="rgb(224,100,7)"/><text x="56.5349%" y="431.50"></text></g><g><title>__netif_receive_skb_one_core (1 samples, 0.14%)</title><rect x="56.2849%" y="405" width="0.1397%" height="15" fill="rgb(241,198,18)"/><text x="56.5349%" y="415.50"></text></g><g><title>ip_rcv (1 samples, 0.14%)</title><rect x="56.2849%" y="389" width="0.1397%" height="15" fill="rgb(252,97,53)"/><text x="56.5349%" y="399.50"></text></g><g><title>ip_local_deliver (1 samples, 0.14%)</title><rect x="56.2849%" y="373" width="0.1397%" height="15" fill="rgb(220,88,7)"/><text x="56.5349%" y="383.50"></text></g><g><title>ip_local_deliver_finish (1 samples, 0.14%)</title><rect x="56.2849%" y="357" width="0.1397%" height="15" fill="rgb(213,176,14)"/><text x="56.5349%" y="367.50"></text></g><g><title>ip_protocol_deliver_rcu (1 samples, 0.14%)</title><rect x="56.2849%" y="341" width="0.1397%" height="15" fill="rgb(246,73,7)"/><text x="56.5349%" y="351.50"></text></g><g><title>tcp_v4_rcv (1 samples, 0.14%)</title><rect x="56.2849%" y="325" width="0.1397%" height="15" fill="rgb(245,64,36)"/><text x="56.5349%" y="335.50"></text></g><g><title>tcp_v4_fill_cb (1 samples, 0.14%)</title><rect x="56.2849%" y="309" width="0.1397%" height="15" fill="rgb(245,80,10)"/><text x="56.5349%" y="319.50"></text></g><g><title>_raw_spin_lock_bh (2 samples, 0.28%)</title><rect x="56.4246%" y="549" width="0.2793%" height="15" fill="rgb(232,107,50)"/><text x="56.6746%" y="559.50"></text></g><g><title>preempt_count_add (1 samples, 0.14%)</title><rect x="56.5642%" y="533" width="0.1397%" height="15" fill="rgb(253,3,0)"/><text x="56.8142%" y="543.50"></text></g><g><title>__perf_event_task_sched_out (3 samples, 0.42%)</title><rect x="56.9832%" y="485" width="0.4190%" height="15" fill="rgb(212,99,53)"/><text x="57.2332%" y="495.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.14%)</title><rect x="57.2626%" y="469" width="0.1397%" height="15" fill="rgb(249,111,54)"/><text x="57.5126%" y="479.50"></text></g><g><title>preempt_count_add (1 samples, 0.14%)</title><rect x="57.2626%" y="453" width="0.1397%" height="15" fill="rgb(249,55,30)"/><text x="57.5126%" y="463.50"></text></g><g><title>dequeue_task_fair (1 samples, 0.14%)</title><rect x="57.4022%" y="485" width="0.1397%" height="15" fill="rgb(237,47,42)"/><text x="57.6522%" y="495.50"></text></g><g><title>dequeue_entity (1 samples, 0.14%)</title><rect x="57.4022%" y="469" width="0.1397%" height="15" fill="rgb(211,20,18)"/><text x="57.6522%" y="479.50"></text></g><g><title>update_load_avg (1 samples, 0.14%)</title><rect x="57.4022%" y="453" width="0.1397%" height="15" fill="rgb(231,203,46)"/><text x="57.6522%" y="463.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.14%)</title><rect x="57.4022%" y="437" width="0.1397%" height="15" fill="rgb(237,142,3)"/><text x="57.6522%" y="447.50"></text></g><g><title>finish_task_switch (1 samples, 0.14%)</title><rect x="57.5419%" y="485" width="0.1397%" height="15" fill="rgb(241,107,1)"/><text x="57.7919%" y="495.50"></text></g><g><title>__perf_event_task_sched_in (1 samples, 0.14%)</title><rect x="57.5419%" y="469" width="0.1397%" height="15" fill="rgb(229,83,13)"/><text x="57.7919%" y="479.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (1 samples, 0.14%)</title><rect x="57.5419%" y="453" width="0.1397%" height="15" fill="rgb(241,91,40)"/><text x="57.7919%" y="463.50"></text></g><g><title>native_write_msr (1 samples, 0.14%)</title><rect x="57.5419%" y="437" width="0.1397%" height="15" fill="rgb(225,3,45)"/><text x="57.7919%" y="447.50"></text></g><g><title>pick_next_task_idle (1 samples, 0.14%)</title><rect x="57.6816%" y="485" width="0.1397%" height="15" fill="rgb(244,223,14)"/><text x="57.9316%" y="495.50"></text></g><g><title>__update_idle_core (1 samples, 0.14%)</title><rect x="57.6816%" y="469" width="0.1397%" height="15" fill="rgb(224,124,37)"/><text x="57.9316%" y="479.50"></text></g><g><title>psi_task_change (1 samples, 0.14%)</title><rect x="57.8212%" y="485" width="0.1397%" height="15" fill="rgb(251,171,30)"/><text x="58.0712%" y="495.50"></text></g><g><title>put_prev_task_fair (1 samples, 0.14%)</title><rect x="57.9609%" y="485" width="0.1397%" height="15" fill="rgb(236,46,54)"/><text x="58.2109%" y="495.50"></text></g><g><title>sk_wait_data (15 samples, 2.09%)</title><rect x="56.4246%" y="565" width="2.0950%" height="15" fill="rgb(245,213,5)"/><text x="56.6746%" y="575.50">s..</text></g><g><title>wait_woken (13 samples, 1.82%)</title><rect x="56.7039%" y="549" width="1.8156%" height="15" fill="rgb(230,144,27)"/><text x="56.9539%" y="559.50">w..</text></g><g><title>schedule_timeout (13 samples, 1.82%)</title><rect x="56.7039%" y="533" width="1.8156%" height="15" fill="rgb(220,86,6)"/><text x="56.9539%" y="543.50">s..</text></g><g><title>schedule (13 samples, 1.82%)</title><rect x="56.7039%" y="517" width="1.8156%" height="15" fill="rgb(240,20,13)"/><text x="56.9539%" y="527.50">s..</text></g><g><title>__schedule (12 samples, 1.68%)</title><rect x="56.8436%" y="501" width="1.6760%" height="15" fill="rgb(217,89,34)"/><text x="57.0936%" y="511.50"></text></g><g><title>uclamp_rq_dec_id (3 samples, 0.42%)</title><rect x="58.1006%" y="485" width="0.4190%" height="15" fill="rgb(229,13,5)"/><text x="58.3506%" y="495.50"></text></g><g><title>inet_recvmsg (22 samples, 3.07%)</title><rect x="55.7263%" y="597" width="3.0726%" height="15" fill="rgb(244,67,35)"/><text x="55.9763%" y="607.50">ine..</text></g><g><title>tcp_recvmsg (22 samples, 3.07%)</title><rect x="55.7263%" y="581" width="3.0726%" height="15" fill="rgb(221,40,2)"/><text x="55.9763%" y="591.50">tcp..</text></g><g><title>skb_copy_datagram_iter (2 samples, 0.28%)</title><rect x="58.5196%" y="565" width="0.2793%" height="15" fill="rgb(237,157,21)"/><text x="58.7696%" y="575.50"></text></g><g><title>__skb_datagram_iter (2 samples, 0.28%)</title><rect x="58.5196%" y="549" width="0.2793%" height="15" fill="rgb(222,94,11)"/><text x="58.7696%" y="559.50"></text></g><g><title>simple_copy_to_iter (1 samples, 0.14%)</title><rect x="58.6592%" y="533" width="0.1397%" height="15" fill="rgb(249,113,6)"/><text x="58.9092%" y="543.50"></text></g><g><title>__check_object_size (1 samples, 0.14%)</title><rect x="58.6592%" y="517" width="0.1397%" height="15" fill="rgb(238,137,36)"/><text x="58.9092%" y="527.50"></text></g><g><title>do_syscall_64 (24 samples, 3.35%)</title><rect x="55.5866%" y="645" width="3.3520%" height="15" fill="rgb(210,102,26)"/><text x="55.8366%" y="655.50">do_..</text></g><g><title>__x64_sys_recvfrom (23 samples, 3.21%)</title><rect x="55.7263%" y="629" width="3.2123%" height="15" fill="rgb(218,30,30)"/><text x="55.9763%" y="639.50">__x..</text></g><g><title>__sys_recvfrom (23 samples, 3.21%)</title><rect x="55.7263%" y="613" width="3.2123%" height="15" fill="rgb(214,67,26)"/><text x="55.9763%" y="623.50">__s..</text></g><g><title>sock_recvmsg (1 samples, 0.14%)</title><rect x="58.7989%" y="597" width="0.1397%" height="15" fill="rgb(251,9,53)"/><text x="59.0489%" y="607.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (25 samples, 3.49%)</title><rect x="55.5866%" y="757" width="3.4916%" height="15" fill="rgb(228,204,25)"/><text x="55.8366%" y="767.50">&lt;st..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (25 samples, 3.49%)</title><rect x="55.5866%" y="741" width="3.4916%" height="15" fill="rgb(207,153,8)"/><text x="55.8366%" y="751.50">&lt;st..</text></g><g><title>std::sys_common::net::TcpStream::read (25 samples, 3.49%)</title><rect x="55.5866%" y="725" width="3.4916%" height="15" fill="rgb(242,9,16)"/><text x="55.8366%" y="735.50">std..</text></g><g><title>std::sys::unix::net::Socket::read (25 samples, 3.49%)</title><rect x="55.5866%" y="709" width="3.4916%" height="15" fill="rgb(217,211,10)"/><text x="55.8366%" y="719.50">std..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (25 samples, 3.49%)</title><rect x="55.5866%" y="693" width="3.4916%" height="15" fill="rgb(219,228,52)"/><text x="55.8366%" y="703.50">std..</text></g><g><title>__libc_recv (25 samples, 3.49%)</title><rect x="55.5866%" y="677" width="3.4916%" height="15" fill="rgb(231,92,29)"/><text x="55.8366%" y="687.50">__l..</text></g><g><title>entry_SYSCALL_64 (25 samples, 3.49%)</title><rect x="55.5866%" y="661" width="3.4916%" height="15" fill="rgb(232,8,23)"/><text x="55.8366%" y="671.50">ent..</text></g><g><title>prepare_exit_to_usermode (1 samples, 0.14%)</title><rect x="58.9385%" y="645" width="0.1397%" height="15" fill="rgb(216,211,34)"/><text x="59.1885%" y="655.50"></text></g><g><title>msql_srv::packet::PacketReader&lt;R&gt;::next (27 samples, 3.77%)</title><rect x="55.5866%" y="773" width="3.7709%" height="15" fill="rgb(236,151,0)"/><text x="55.8366%" y="783.50">msql..</text></g><g><title>__memset_avx2_erms (2 samples, 0.28%)</title><rect x="59.0782%" y="757" width="0.2793%" height="15" fill="rgb(209,168,3)"/><text x="59.3282%" y="767.50"></text></g><g><title>import_single_range (2 samples, 0.28%)</title><rect x="59.6369%" y="645" width="0.2793%" height="15" fill="rgb(208,129,28)"/><text x="59.8869%" y="655.50"></text></g><g><title>lock_sock_nested (1 samples, 0.14%)</title><rect x="59.9162%" y="613" width="0.1397%" height="15" fill="rgb(229,78,22)"/><text x="60.1662%" y="623.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.14%)</title><rect x="59.9162%" y="597" width="0.1397%" height="15" fill="rgb(228,187,13)"/><text x="60.1662%" y="607.50"></text></g><g><title>preempt_count_add (1 samples, 0.14%)</title><rect x="59.9162%" y="581" width="0.1397%" height="15" fill="rgb(240,119,24)"/><text x="60.1662%" y="591.50"></text></g><g><title>release_sock (1 samples, 0.14%)</title><rect x="60.0559%" y="613" width="0.1397%" height="15" fill="rgb(209,194,42)"/><text x="60.3059%" y="623.50"></text></g><g><title>__release_sock (1 samples, 0.14%)</title><rect x="60.0559%" y="597" width="0.1397%" height="15" fill="rgb(247,200,46)"/><text x="60.3059%" y="607.50"></text></g><g><title>tcp_v4_do_rcv (1 samples, 0.14%)</title><rect x="60.0559%" y="581" width="0.1397%" height="15" fill="rgb(218,76,16)"/><text x="60.3059%" y="591.50"></text></g><g><title>tcp_rcv_established (1 samples, 0.14%)</title><rect x="60.0559%" y="565" width="0.1397%" height="15" fill="rgb(225,21,48)"/><text x="60.3059%" y="575.50"></text></g><g><title>__kfree_skb (1 samples, 0.14%)</title><rect x="60.0559%" y="549" width="0.1397%" height="15" fill="rgb(239,223,50)"/><text x="60.3059%" y="559.50"></text></g><g><title>skb_release_head_state (1 samples, 0.14%)</title><rect x="60.0559%" y="533" width="0.1397%" height="15" fill="rgb(244,45,21)"/><text x="60.3059%" y="543.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.14%)</title><rect x="60.4749%" y="533" width="0.1397%" height="15" fill="rgb(232,33,43)"/><text x="60.7249%" y="543.50"></text></g><g><title>__sk_dst_check (1 samples, 0.14%)</title><rect x="60.6145%" y="533" width="0.1397%" height="15" fill="rgb(209,8,3)"/><text x="60.8645%" y="543.50"></text></g><g><title>ipv4_dst_check (1 samples, 0.14%)</title><rect x="60.6145%" y="517" width="0.1397%" height="15" fill="rgb(214,25,53)"/><text x="60.8645%" y="527.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.14%)</title><rect x="60.8939%" y="485" width="0.1397%" height="15" fill="rgb(254,186,54)"/><text x="61.1439%" y="495.50"></text></g><g><title>enqueue_to_backlog (2 samples, 0.28%)</title><rect x="61.1732%" y="421" width="0.2793%" height="15" fill="rgb(208,174,49)"/><text x="61.4232%" y="431.50"></text></g><g><title>dev_hard_start_xmit (4 samples, 0.56%)</title><rect x="61.0335%" y="485" width="0.5587%" height="15" fill="rgb(233,191,51)"/><text x="61.2835%" y="495.50"></text></g><g><title>loopback_xmit (4 samples, 0.56%)</title><rect x="61.0335%" y="469" width="0.5587%" height="15" fill="rgb(222,134,10)"/><text x="61.2835%" y="479.50"></text></g><g><title>netif_rx (4 samples, 0.56%)</title><rect x="61.0335%" y="453" width="0.5587%" height="15" fill="rgb(230,226,20)"/><text x="61.2835%" y="463.50"></text></g><g><title>netif_rx_internal (4 samples, 0.56%)</title><rect x="61.0335%" y="437" width="0.5587%" height="15" fill="rgb(251,111,25)"/><text x="61.2835%" y="447.50"></text></g><g><title>ktime_get_with_offset (1 samples, 0.14%)</title><rect x="61.4525%" y="421" width="0.1397%" height="15" fill="rgb(224,40,46)"/><text x="61.7025%" y="431.50"></text></g><g><title>__dev_queue_xmit (6 samples, 0.84%)</title><rect x="60.8939%" y="501" width="0.8380%" height="15" fill="rgb(236,108,47)"/><text x="61.1439%" y="511.50"></text></g><g><title>validate_xmit_skb (1 samples, 0.14%)</title><rect x="61.5922%" y="485" width="0.1397%" height="15" fill="rgb(234,93,0)"/><text x="61.8422%" y="495.50"></text></g><g><title>netif_skb_features (1 samples, 0.14%)</title><rect x="61.5922%" y="469" width="0.1397%" height="15" fill="rgb(224,213,32)"/><text x="61.8422%" y="479.50"></text></g><g><title>skb_network_protocol (1 samples, 0.14%)</title><rect x="61.5922%" y="453" width="0.1397%" height="15" fill="rgb(251,11,48)"/><text x="61.8422%" y="463.50"></text></g><g><title>__inet_lookup_established (1 samples, 0.14%)</title><rect x="61.7318%" y="309" width="0.1397%" height="15" fill="rgb(236,173,5)"/><text x="61.9818%" y="319.50"></text></g><g><title>inet_ehashfn (1 samples, 0.14%)</title><rect x="61.7318%" y="293" width="0.1397%" height="15" fill="rgb(230,95,12)"/><text x="61.9818%" y="303.50"></text></g><g><title>psi_task_change (1 samples, 0.14%)</title><rect x="62.4302%" y="197" width="0.1397%" height="15" fill="rgb(232,209,1)"/><text x="62.6802%" y="207.50"></text></g><g><title>enqueue_task (2 samples, 0.28%)</title><rect x="62.4302%" y="213" width="0.2793%" height="15" fill="rgb(232,6,1)"/><text x="62.6802%" y="223.50"></text></g><g><title>uclamp_rq_inc_id (1 samples, 0.14%)</title><rect x="62.5698%" y="197" width="0.1397%" height="15" fill="rgb(210,224,50)"/><text x="62.8198%" y="207.50"></text></g><g><title>sock_def_readable (5 samples, 0.70%)</title><rect x="62.1508%" y="277" width="0.6983%" height="15" fill="rgb(228,127,35)"/><text x="62.4008%" y="287.50"></text></g><g><title>__wake_up_common_lock (5 samples, 0.70%)</title><rect x="62.1508%" y="261" width="0.6983%" height="15" fill="rgb(245,102,45)"/><text x="62.4008%" y="271.50"></text></g><g><title>__wake_up_common (5 samples, 0.70%)</title><rect x="62.1508%" y="245" width="0.6983%" height="15" fill="rgb(214,1,49)"/><text x="62.4008%" y="255.50"></text></g><g><title>try_to_wake_up (4 samples, 0.56%)</title><rect x="62.2905%" y="229" width="0.5587%" height="15" fill="rgb(226,163,40)"/><text x="62.5405%" y="239.50"></text></g><g><title>enqueue_task_fair (1 samples, 0.14%)</title><rect x="62.7095%" y="213" width="0.1397%" height="15" fill="rgb(239,212,28)"/><text x="62.9595%" y="223.50"></text></g><g><title>__kfree_skb (1 samples, 0.14%)</title><rect x="62.9888%" y="261" width="0.1397%" height="15" fill="rgb(220,20,13)"/><text x="63.2388%" y="271.50"></text></g><g><title>skb_release_data (1 samples, 0.14%)</title><rect x="62.9888%" y="245" width="0.1397%" height="15" fill="rgb(210,164,35)"/><text x="63.2388%" y="255.50"></text></g><g><title>kmem_cache_free (1 samples, 0.14%)</title><rect x="63.1285%" y="261" width="0.1397%" height="15" fill="rgb(248,109,41)"/><text x="63.3785%" y="271.50"></text></g><g><title>tcp_ack (4 samples, 0.56%)</title><rect x="62.8492%" y="277" width="0.5587%" height="15" fill="rgb(238,23,50)"/><text x="63.0992%" y="287.50"></text></g><g><title>rb_first (1 samples, 0.14%)</title><rect x="63.2682%" y="261" width="0.1397%" height="15" fill="rgb(211,48,49)"/><text x="63.5182%" y="271.50"></text></g><g><title>ip_local_deliver (13 samples, 1.82%)</title><rect x="61.7318%" y="373" width="1.8156%" height="15" fill="rgb(223,36,21)"/><text x="61.9818%" y="383.50">i..</text></g><g><title>ip_local_deliver_finish (13 samples, 1.82%)</title><rect x="61.7318%" y="357" width="1.8156%" height="15" fill="rgb(207,123,46)"/><text x="61.9818%" y="367.50">i..</text></g><g><title>ip_protocol_deliver_rcu (13 samples, 1.82%)</title><rect x="61.7318%" y="341" width="1.8156%" height="15" fill="rgb(240,218,32)"/><text x="61.9818%" y="351.50">i..</text></g><g><title>tcp_v4_rcv (13 samples, 1.82%)</title><rect x="61.7318%" y="325" width="1.8156%" height="15" fill="rgb(252,5,43)"/><text x="61.9818%" y="335.50">t..</text></g><g><title>tcp_v4_do_rcv (12 samples, 1.68%)</title><rect x="61.8715%" y="309" width="1.6760%" height="15" fill="rgb(252,84,19)"/><text x="62.1215%" y="319.50"></text></g><g><title>tcp_rcv_established (12 samples, 1.68%)</title><rect x="61.8715%" y="293" width="1.6760%" height="15" fill="rgb(243,152,39)"/><text x="62.1215%" y="303.50"></text></g><g><title>tcp_event_data_recv (1 samples, 0.14%)</title><rect x="63.4078%" y="277" width="0.1397%" height="15" fill="rgb(234,160,15)"/><text x="63.6578%" y="287.50"></text></g><g><title>__ip_queue_xmit (24 samples, 3.35%)</title><rect x="60.3352%" y="549" width="3.3520%" height="15" fill="rgb(237,34,20)"/><text x="60.5852%" y="559.50">__i..</text></g><g><title>ip_output (21 samples, 2.93%)</title><rect x="60.7542%" y="533" width="2.9330%" height="15" fill="rgb(229,97,13)"/><text x="61.0042%" y="543.50">ip..</text></g><g><title>ip_finish_output2 (21 samples, 2.93%)</title><rect x="60.7542%" y="517" width="2.9330%" height="15" fill="rgb(234,71,50)"/><text x="61.0042%" y="527.50">ip..</text></g><g><title>__local_bh_enable_ip (14 samples, 1.96%)</title><rect x="61.7318%" y="501" width="1.9553%" height="15" fill="rgb(253,155,4)"/><text x="61.9818%" y="511.50">_..</text></g><g><title>do_softirq (14 samples, 1.96%)</title><rect x="61.7318%" y="485" width="1.9553%" height="15" fill="rgb(222,185,37)"/><text x="61.9818%" y="495.50">d..</text></g><g><title>do_softirq_own_stack (14 samples, 1.96%)</title><rect x="61.7318%" y="469" width="1.9553%" height="15" fill="rgb(251,177,13)"/><text x="61.9818%" y="479.50">d..</text></g><g><title>__do_softirq (14 samples, 1.96%)</title><rect x="61.7318%" y="453" width="1.9553%" height="15" fill="rgb(250,179,40)"/><text x="61.9818%" y="463.50">_..</text></g><g><title>net_rx_action (14 samples, 1.96%)</title><rect x="61.7318%" y="437" width="1.9553%" height="15" fill="rgb(242,44,2)"/><text x="61.9818%" y="447.50">n..</text></g><g><title>process_backlog (14 samples, 1.96%)</title><rect x="61.7318%" y="421" width="1.9553%" height="15" fill="rgb(216,177,13)"/><text x="61.9818%" y="431.50">p..</text></g><g><title>__netif_receive_skb_one_core (14 samples, 1.96%)</title><rect x="61.7318%" y="405" width="1.9553%" height="15" fill="rgb(216,106,43)"/><text x="61.9818%" y="415.50">_..</text></g><g><title>ip_rcv (14 samples, 1.96%)</title><rect x="61.7318%" y="389" width="1.9553%" height="15" fill="rgb(216,183,2)"/><text x="61.9818%" y="399.50">i..</text></g><g><title>ip_rcv_finish (1 samples, 0.14%)</title><rect x="63.5475%" y="373" width="0.1397%" height="15" fill="rgb(249,75,3)"/><text x="63.7975%" y="383.50"></text></g><g><title>ip_rcv_finish_core.constprop.0 (1 samples, 0.14%)</title><rect x="63.5475%" y="357" width="0.1397%" height="15" fill="rgb(219,67,39)"/><text x="63.7975%" y="367.50"></text></g><g><title>__tcp_transmit_skb (25 samples, 3.49%)</title><rect x="60.3352%" y="565" width="3.4916%" height="15" fill="rgb(253,228,2)"/><text x="60.5852%" y="575.50">__t..</text></g><g><title>__tcp_select_window (1 samples, 0.14%)</title><rect x="63.6872%" y="549" width="0.1397%" height="15" fill="rgb(235,138,27)"/><text x="63.9372%" y="559.50"></text></g><g><title>__tcp_push_pending_frames (27 samples, 3.77%)</title><rect x="60.1955%" y="597" width="3.7709%" height="15" fill="rgb(236,97,51)"/><text x="60.4455%" y="607.50">__tc..</text></g><g><title>tcp_write_xmit (27 samples, 3.77%)</title><rect x="60.1955%" y="581" width="3.7709%" height="15" fill="rgb(240,80,30)"/><text x="60.4455%" y="591.50">tcp_..</text></g><g><title>tcp_schedule_loss_probe.part.0 (1 samples, 0.14%)</title><rect x="63.8268%" y="565" width="0.1397%" height="15" fill="rgb(230,178,19)"/><text x="64.0768%" y="575.50"></text></g><g><title>skb_do_copy_data_nocache (1 samples, 0.14%)</title><rect x="63.9665%" y="597" width="0.1397%" height="15" fill="rgb(210,190,27)"/><text x="64.2165%" y="607.50"></text></g><g><title>_copy_from_iter_full (1 samples, 0.14%)</title><rect x="63.9665%" y="581" width="0.1397%" height="15" fill="rgb(222,107,31)"/><text x="64.2165%" y="591.50"></text></g><g><title>iov_iter_advance (1 samples, 0.14%)</title><rect x="63.9665%" y="565" width="0.1397%" height="15" fill="rgb(216,127,34)"/><text x="64.2165%" y="575.50"></text></g><g><title>__x64_sys_sendto (33 samples, 4.61%)</title><rect x="59.6369%" y="677" width="4.6089%" height="15" fill="rgb(234,116,52)"/><text x="59.8869%" y="687.50">__x64..</text></g><g><title>__sys_sendto (33 samples, 4.61%)</title><rect x="59.6369%" y="661" width="4.6089%" height="15" fill="rgb(222,124,15)"/><text x="59.8869%" y="671.50">__sys..</text></g><g><title>sock_sendmsg (31 samples, 4.33%)</title><rect x="59.9162%" y="645" width="4.3296%" height="15" fill="rgb(231,179,28)"/><text x="60.1662%" y="655.50">sock_..</text></g><g><title>tcp_sendmsg (31 samples, 4.33%)</title><rect x="59.9162%" y="629" width="4.3296%" height="15" fill="rgb(226,93,45)"/><text x="60.1662%" y="639.50">tcp_s..</text></g><g><title>tcp_sendmsg_locked (29 samples, 4.05%)</title><rect x="60.1955%" y="613" width="4.0503%" height="15" fill="rgb(215,8,51)"/><text x="60.4455%" y="623.50">tcp_..</text></g><g><title>skb_entail (1 samples, 0.14%)</title><rect x="64.1061%" y="597" width="0.1397%" height="15" fill="rgb(223,106,5)"/><text x="64.3561%" y="607.50"></text></g><g><title>do_syscall_64 (34 samples, 4.75%)</title><rect x="59.6369%" y="693" width="4.7486%" height="15" fill="rgb(250,191,5)"/><text x="59.8869%" y="703.50">do_sys..</text></g><g><title>syscall_trace_enter (1 samples, 0.14%)</title><rect x="64.2458%" y="677" width="0.1397%" height="15" fill="rgb(242,132,44)"/><text x="64.4958%" y="687.50"></text></g><g><title>__audit_syscall_entry (1 samples, 0.14%)</title><rect x="64.2458%" y="661" width="0.1397%" height="15" fill="rgb(251,152,29)"/><text x="64.4958%" y="671.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (39 samples, 5.45%)</title><rect x="59.3575%" y="757" width="5.4469%" height="15" fill="rgb(218,179,5)"/><text x="59.6075%" y="767.50">&lt;std::n..</text></g><g><title>std::sys_common::net::TcpStream::write (39 samples, 5.45%)</title><rect x="59.3575%" y="741" width="5.4469%" height="15" fill="rgb(227,67,19)"/><text x="59.6075%" y="751.50">std::sy..</text></g><g><title>__libc_send (39 samples, 5.45%)</title><rect x="59.3575%" y="725" width="5.4469%" height="15" fill="rgb(233,119,31)"/><text x="59.6075%" y="735.50">__libc_..</text></g><g><title>entry_SYSCALL_64 (39 samples, 5.45%)</title><rect x="59.3575%" y="709" width="5.4469%" height="15" fill="rgb(241,120,22)"/><text x="59.6075%" y="719.50">entry_S..</text></g><g><title>prepare_exit_to_usermode (3 samples, 0.42%)</title><rect x="64.3855%" y="693" width="0.4190%" height="15" fill="rgb(224,102,30)"/><text x="64.6355%" y="703.50"></text></g><g><title>__GI___clone (215 samples, 30.03%)</title><rect x="34.9162%" y="917" width="30.0279%" height="15" fill="rgb(210,164,37)"/><text x="35.1662%" y="927.50">__GI___clone</text></g><g><title>start_thread (215 samples, 30.03%)</title><rect x="34.9162%" y="901" width="30.0279%" height="15" fill="rgb(226,191,16)"/><text x="35.1662%" y="911.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (214 samples, 29.89%)</title><rect x="35.0559%" y="885" width="29.8883%" height="15" fill="rgb(214,40,45)"/><text x="35.3059%" y="895.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (214 samples, 29.89%)</title><rect x="35.0559%" y="869" width="29.8883%" height="15" fill="rgb(244,29,26)"/><text x="35.3059%" y="879.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::Fn..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (214 samples, 29.89%)</title><rect x="35.0559%" y="853" width="29.8883%" height="15" fill="rgb(216,16,5)"/><text x="35.3059%" y="863.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::Fn..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (214 samples, 29.89%)</title><rect x="35.0559%" y="837" width="29.8883%" height="15" fill="rgb(249,76,35)"/><text x="35.3059%" y="847.50">core::ops::function::FnOnce::call_once{{vtable-s..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (214 samples, 29.89%)</title><rect x="35.0559%" y="821" width="29.8883%" height="15" fill="rgb(207,11,44)"/><text x="35.3059%" y="831.50">std::sys_common::backtrace::__rust_begin_short_b..</text></g><g><title>decor::Shim::run_on_tcp (214 samples, 29.89%)</title><rect x="35.0559%" y="805" width="29.8883%" height="15" fill="rgb(228,190,49)"/><text x="35.3059%" y="815.50">decor::Shim::run_on_tcp</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (214 samples, 29.89%)</title><rect x="35.0559%" y="789" width="29.8883%" height="15" fill="rgb(214,173,12)"/><text x="35.3059%" y="799.50">msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (40 samples, 5.59%)</title><rect x="59.3575%" y="773" width="5.5866%" height="15" fill="rgb(218,26,35)"/><text x="59.6075%" y="783.50">std::io..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf::BufGuard::new (1 samples, 0.14%)</title><rect x="64.8045%" y="757" width="0.1397%" height="15" fill="rgb(220,200,19)"/><text x="65.0545%" y="767.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.14%)</title><rect x="64.9441%" y="741" width="0.1397%" height="15" fill="rgb(239,95,49)"/><text x="65.1941%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.14%)</title><rect x="64.9441%" y="725" width="0.1397%" height="15" fill="rgb(235,85,53)"/><text x="65.1941%" y="735.50"></text></g><g><title>core::fmt::write (1 samples, 0.14%)</title><rect x="64.9441%" y="709" width="0.1397%" height="15" fill="rgb(233,133,31)"/><text x="65.1941%" y="719.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.14%)</title><rect x="64.9441%" y="693" width="0.1397%" height="15" fill="rgb(218,25,20)"/><text x="65.1941%" y="703.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.14%)</title><rect x="64.9441%" y="677" width="0.1397%" height="15" fill="rgb(252,210,38)"/><text x="65.1941%" y="687.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.14%)</title><rect x="64.9441%" y="661" width="0.1397%" height="15" fill="rgb(242,134,21)"/><text x="65.1941%" y="671.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.14%)</title><rect x="65.0838%" y="661" width="0.1397%" height="15" fill="rgb(213,28,48)"/><text x="65.3338%" y="671.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.14%)</title><rect x="65.0838%" y="645" width="0.1397%" height="15" fill="rgb(250,196,2)"/><text x="65.3338%" y="655.50"></text></g><g><title>hwloc_bitmap_alloc (1 samples, 0.14%)</title><rect x="65.2235%" y="661" width="0.1397%" height="15" fill="rgb(227,5,17)"/><text x="65.4735%" y="671.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="65.2235%" y="645" width="0.1397%" height="15" fill="rgb(221,226,24)"/><text x="65.4735%" y="655.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.14%)</title><rect x="65.3631%" y="645" width="0.1397%" height="15" fill="rgb(211,5,48)"/><text x="65.6131%" y="655.50"></text></g><g><title>__GI___libc_free (1 samples, 0.14%)</title><rect x="65.5028%" y="645" width="0.1397%" height="15" fill="rgb(219,150,6)"/><text x="65.7528%" y="655.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (231 samples, 32.26%)</title><rect x="65.7821%" y="437" width="32.2626%" height="15" fill="rgb(251,46,16)"/><text x="66.0321%" y="447.50">__intel_pmu_enable_all.constprop.0</text></g><g><title>native_write_msr (230 samples, 32.12%)</title><rect x="65.9218%" y="421" width="32.1229%" height="15" fill="rgb(220,204,40)"/><text x="66.1718%" y="431.50">native_write_msr</text></g><g><title>hwloc::Topology::new (238 samples, 33.24%)</title><rect x="65.0838%" y="741" width="33.2402%" height="15" fill="rgb(211,85,2)"/><text x="65.3338%" y="751.50">hwloc::Topology::new</text></g><g><title>hwloc_topology_load (238 samples, 33.24%)</title><rect x="65.0838%" y="725" width="33.2402%" height="15" fill="rgb(229,17,7)"/><text x="65.3338%" y="735.50">hwloc_topology_load</text></g><g><title>[libhwloc.so.15.2.0] (238 samples, 33.24%)</title><rect x="65.0838%" y="709" width="33.2402%" height="15" fill="rgb(239,72,28)"/><text x="65.3338%" y="719.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (238 samples, 33.24%)</title><rect x="65.0838%" y="693" width="33.2402%" height="15" fill="rgb(230,47,54)"/><text x="65.3338%" y="703.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (238 samples, 33.24%)</title><rect x="65.0838%" y="677" width="33.2402%" height="15" fill="rgb(214,50,8)"/><text x="65.3338%" y="687.50">[libhwloc.so.15.2.0]</text></g><g><title>hwloc_linux_set_tid_cpubind (236 samples, 32.96%)</title><rect x="65.3631%" y="661" width="32.9609%" height="15" fill="rgb(216,198,43)"/><text x="65.6131%" y="671.50">hwloc_linux_set_tid_cpubind</text></g><g><title>__GI___sched_setaffinity_new (234 samples, 32.68%)</title><rect x="65.6425%" y="645" width="32.6816%" height="15" fill="rgb(234,20,35)"/><text x="65.8925%" y="655.50">__GI___sched_setaffinity_new</text></g><g><title>entry_SYSCALL_64 (234 samples, 32.68%)</title><rect x="65.6425%" y="629" width="32.6816%" height="15" fill="rgb(254,45,19)"/><text x="65.8925%" y="639.50">entry_SYSCALL_64</text></g><g><title>do_syscall_64 (234 samples, 32.68%)</title><rect x="65.6425%" y="613" width="32.6816%" height="15" fill="rgb(219,14,44)"/><text x="65.8925%" y="623.50">do_syscall_64</text></g><g><title>__x64_sys_sched_setaffinity (234 samples, 32.68%)</title><rect x="65.6425%" y="597" width="32.6816%" height="15" fill="rgb(217,220,26)"/><text x="65.8925%" y="607.50">__x64_sys_sched_setaffinity</text></g><g><title>sched_setaffinity (234 samples, 32.68%)</title><rect x="65.6425%" y="581" width="32.6816%" height="15" fill="rgb(213,158,28)"/><text x="65.8925%" y="591.50">sched_setaffinity</text></g><g><title>__set_cpus_allowed_ptr (234 samples, 32.68%)</title><rect x="65.6425%" y="565" width="32.6816%" height="15" fill="rgb(252,51,52)"/><text x="65.8925%" y="575.50">__set_cpus_allowed_ptr</text></g><g><title>stop_one_cpu (234 samples, 32.68%)</title><rect x="65.6425%" y="549" width="32.6816%" height="15" fill="rgb(246,89,16)"/><text x="65.8925%" y="559.50">stop_one_cpu</text></g><g><title>cpu_stop_queue_work (234 samples, 32.68%)</title><rect x="65.6425%" y="533" width="32.6816%" height="15" fill="rgb(216,158,49)"/><text x="65.8925%" y="543.50">cpu_stop_queue_work</text></g><g><title>preempt_schedule_thunk (234 samples, 32.68%)</title><rect x="65.6425%" y="517" width="32.6816%" height="15" fill="rgb(236,107,19)"/><text x="65.8925%" y="527.50">preempt_schedule_thunk</text></g><g><title>preempt_schedule_common (234 samples, 32.68%)</title><rect x="65.6425%" y="501" width="32.6816%" height="15" fill="rgb(228,185,30)"/><text x="65.8925%" y="511.50">preempt_schedule_common</text></g><g><title>__schedule (234 samples, 32.68%)</title><rect x="65.6425%" y="485" width="32.6816%" height="15" fill="rgb(246,134,8)"/><text x="65.8925%" y="495.50">__schedule</text></g><g><title>finish_task_switch (234 samples, 32.68%)</title><rect x="65.6425%" y="469" width="32.6816%" height="15" fill="rgb(214,143,50)"/><text x="65.8925%" y="479.50">finish_task_switch</text></g><g><title>__perf_event_task_sched_in (233 samples, 32.54%)</title><rect x="65.7821%" y="453" width="32.5419%" height="15" fill="rgb(228,75,8)"/><text x="66.0321%" y="463.50">__perf_event_task_sched_in</text></g><g><title>_raw_spin_unlock (2 samples, 0.28%)</title><rect x="98.0447%" y="437" width="0.2793%" height="15" fill="rgb(207,175,4)"/><text x="98.2947%" y="447.50"></text></g><g><title>preempt_count_sub (1 samples, 0.14%)</title><rect x="98.1844%" y="421" width="0.1397%" height="15" fill="rgb(205,108,24)"/><text x="98.4344%" y="431.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (1 samples, 0.14%)</title><rect x="98.3240%" y="741" width="0.1397%" height="15" fill="rgb(244,120,49)"/><text x="98.5740%" y="751.50"></text></g><g><title>__libc_start_main (241 samples, 33.66%)</title><rect x="64.9441%" y="901" width="33.6592%" height="15" fill="rgb(223,47,38)"/><text x="65.1941%" y="911.50">__libc_start_main</text></g><g><title>main (241 samples, 33.66%)</title><rect x="64.9441%" y="885" width="33.6592%" height="15" fill="rgb(229,179,11)"/><text x="65.1941%" y="895.50">main</text></g><g><title>std::rt::lang_start_internal (241 samples, 33.66%)</title><rect x="64.9441%" y="869" width="33.6592%" height="15" fill="rgb(231,122,1)"/><text x="65.1941%" y="879.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (241 samples, 33.66%)</title><rect x="64.9441%" y="853" width="33.6592%" height="15" fill="rgb(245,119,9)"/><text x="65.1941%" y="863.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (241 samples, 33.66%)</title><rect x="64.9441%" y="837" width="33.6592%" height="15" fill="rgb(241,163,25)"/><text x="65.1941%" y="847.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (241 samples, 33.66%)</title><rect x="64.9441%" y="821" width="33.6592%" height="15" fill="rgb(217,214,3)"/><text x="65.1941%" y="831.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (241 samples, 33.66%)</title><rect x="64.9441%" y="805" width="33.6592%" height="15" fill="rgb(240,86,28)"/><text x="65.1941%" y="815.50">core::ops::function::impls::&lt;impl core::ops::function::..</text></g><g><title>std::rt::lang_start::_{{closure}} (241 samples, 33.66%)</title><rect x="64.9441%" y="789" width="33.6592%" height="15" fill="rgb(215,47,9)"/><text x="65.1941%" y="799.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (241 samples, 33.66%)</title><rect x="64.9441%" y="773" width="33.6592%" height="15" fill="rgb(252,25,45)"/><text x="65.1941%" y="783.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>lobsters::main (241 samples, 33.66%)</title><rect x="64.9441%" y="757" width="33.6592%" height="15" fill="rgb(251,164,9)"/><text x="65.1941%" y="767.50">lobsters::main</text></g><g><title>std::net::each_addr (1 samples, 0.14%)</title><rect x="98.4637%" y="741" width="0.1397%" height="15" fill="rgb(233,194,0)"/><text x="98.7137%" y="751.50"></text></g><g><title>std::sys_common::net::TcpListener::bind (1 samples, 0.14%)</title><rect x="98.4637%" y="725" width="0.1397%" height="15" fill="rgb(249,111,24)"/><text x="98.7137%" y="735.50"></text></g><g><title>__bind (1 samples, 0.14%)</title><rect x="98.4637%" y="709" width="0.1397%" height="15" fill="rgb(250,223,3)"/><text x="98.7137%" y="719.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="98.4637%" y="693" width="0.1397%" height="15" fill="rgb(236,178,37)"/><text x="98.7137%" y="703.50"></text></g><g><title>do_syscall_64 (1 samples, 0.14%)</title><rect x="98.4637%" y="677" width="0.1397%" height="15" fill="rgb(241,158,50)"/><text x="98.7137%" y="687.50"></text></g><g><title>__x64_sys_bind (1 samples, 0.14%)</title><rect x="98.4637%" y="661" width="0.1397%" height="15" fill="rgb(213,121,41)"/><text x="98.7137%" y="671.50"></text></g><g><title>__sys_bind (1 samples, 0.14%)</title><rect x="98.4637%" y="645" width="0.1397%" height="15" fill="rgb(240,92,3)"/><text x="98.7137%" y="655.50"></text></g><g><title>__inet_bind (1 samples, 0.14%)</title><rect x="98.4637%" y="629" width="0.1397%" height="15" fill="rgb(205,123,3)"/><text x="98.7137%" y="639.50"></text></g><g><title>__inet_dev_addr_type (1 samples, 0.14%)</title><rect x="98.4637%" y="613" width="0.1397%" height="15" fill="rgb(205,97,47)"/><text x="98.7137%" y="623.50"></text></g><g><title>_start (242 samples, 33.80%)</title><rect x="64.9441%" y="917" width="33.7989%" height="15" fill="rgb(247,152,14)"/><text x="65.1941%" y="927.50">_start</text></g><g><title>_dl_start (1 samples, 0.14%)</title><rect x="98.6034%" y="901" width="0.1397%" height="15" fill="rgb(248,195,53)"/><text x="98.8534%" y="911.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.14%)</title><rect x="98.6034%" y="885" width="0.1397%" height="15" fill="rgb(226,201,16)"/><text x="98.8534%" y="895.50"></text></g><g><title>dl_main (1 samples, 0.14%)</title><rect x="98.6034%" y="869" width="0.1397%" height="15" fill="rgb(205,98,0)"/><text x="98.8534%" y="879.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.14%)</title><rect x="98.6034%" y="853" width="0.1397%" height="15" fill="rgb(214,191,48)"/><text x="98.8534%" y="863.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.14%)</title><rect x="98.6034%" y="837" width="0.1397%" height="15" fill="rgb(237,112,39)"/><text x="98.8534%" y="847.50"></text></g><g><title>openaux (1 samples, 0.14%)</title><rect x="98.6034%" y="821" width="0.1397%" height="15" fill="rgb(247,203,27)"/><text x="98.8534%" y="831.50"></text></g><g><title>_dl_map_object (1 samples, 0.14%)</title><rect x="98.6034%" y="805" width="0.1397%" height="15" fill="rgb(235,124,28)"/><text x="98.8534%" y="815.50"></text></g><g><title>_dl_map_object_from_fd (1 samples, 0.14%)</title><rect x="98.6034%" y="789" width="0.1397%" height="15" fill="rgb(208,207,46)"/><text x="98.8534%" y="799.50"></text></g><g><title>__mprotect (1 samples, 0.14%)</title><rect x="98.6034%" y="773" width="0.1397%" height="15" fill="rgb(234,176,4)"/><text x="98.8534%" y="783.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="98.6034%" y="757" width="0.1397%" height="15" fill="rgb(230,133,28)"/><text x="98.8534%" y="767.50"></text></g><g><title>do_syscall_64 (1 samples, 0.14%)</title><rect x="98.6034%" y="741" width="0.1397%" height="15" fill="rgb(211,137,40)"/><text x="98.8534%" y="751.50"></text></g><g><title>__x64_sys_mprotect (1 samples, 0.14%)</title><rect x="98.6034%" y="725" width="0.1397%" height="15" fill="rgb(254,35,13)"/><text x="98.8534%" y="735.50"></text></g><g><title>do_mprotect_pkey (1 samples, 0.14%)</title><rect x="98.6034%" y="709" width="0.1397%" height="15" fill="rgb(225,49,51)"/><text x="98.8534%" y="719.50"></text></g><g><title>mprotect_fixup (1 samples, 0.14%)</title><rect x="98.6034%" y="693" width="0.1397%" height="15" fill="rgb(251,10,15)"/><text x="98.8534%" y="703.50"></text></g><g><title>perf_event_mmap (1 samples, 0.14%)</title><rect x="98.6034%" y="677" width="0.1397%" height="15" fill="rgb(228,207,15)"/><text x="98.8534%" y="687.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.14%)</title><rect x="98.6034%" y="661" width="0.1397%" height="15" fill="rgb(241,99,19)"/><text x="98.8534%" y="671.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.14%)</title><rect x="98.6034%" y="645" width="0.1397%" height="15" fill="rgb(207,104,49)"/><text x="98.8534%" y="655.50"></text></g><g><title>anon.53b8a2712578808cb07820b0397807e6.0.llvm.12175399877529257542 (1 samples, 0.14%)</title><rect x="98.7430%" y="917" width="0.1397%" height="15" fill="rgb(234,99,18)"/><text x="98.9930%" y="927.50"></text></g><g><title>core::fmt::write (1 samples, 0.14%)</title><rect x="98.7430%" y="901" width="0.1397%" height="15" fill="rgb(213,191,49)"/><text x="98.9930%" y="911.50"></text></g><g><title>[vmlinux] (1 samples, 0.14%)</title><rect x="98.8827%" y="885" width="0.1397%" height="15" fill="rgb(210,226,19)"/><text x="99.1327%" y="895.50"></text></g><g><title>do_group_exit (1 samples, 0.14%)</title><rect x="98.8827%" y="869" width="0.1397%" height="15" fill="rgb(229,97,18)"/><text x="99.1327%" y="879.50"></text></g><g><title>do_exit (1 samples, 0.14%)</title><rect x="98.8827%" y="853" width="0.1397%" height="15" fill="rgb(211,167,15)"/><text x="99.1327%" y="863.50"></text></g><g><title>mmput (1 samples, 0.14%)</title><rect x="98.8827%" y="837" width="0.1397%" height="15" fill="rgb(210,169,34)"/><text x="99.1327%" y="847.50"></text></g><g><title>exit_mmap (1 samples, 0.14%)</title><rect x="98.8827%" y="821" width="0.1397%" height="15" fill="rgb(241,121,31)"/><text x="99.1327%" y="831.50"></text></g><g><title>unmap_vmas (1 samples, 0.14%)</title><rect x="98.8827%" y="805" width="0.1397%" height="15" fill="rgb(232,40,11)"/><text x="99.1327%" y="815.50"></text></g><g><title>unmap_page_range (1 samples, 0.14%)</title><rect x="98.8827%" y="789" width="0.1397%" height="15" fill="rgb(205,86,26)"/><text x="99.1327%" y="799.50"></text></g><g><title>vm_normal_page (1 samples, 0.14%)</title><rect x="98.8827%" y="773" width="0.1397%" height="15" fill="rgb(231,126,28)"/><text x="99.1327%" y="783.50"></text></g><g><title>lobsters (710 samples, 99.16%)</title><rect x="0.0000%" y="933" width="99.1620%" height="15" fill="rgb(219,221,18)"/><text x="0.2500%" y="943.50">lobsters</text></g><g><title>entry_SYSCALL_64 (2 samples, 0.28%)</title><rect x="98.8827%" y="917" width="0.2793%" height="15" fill="rgb(211,40,0)"/><text x="99.1327%" y="927.50"></text></g><g><title>do_syscall_64 (2 samples, 0.28%)</title><rect x="98.8827%" y="901" width="0.2793%" height="15" fill="rgb(239,85,43)"/><text x="99.1327%" y="911.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.14%)</title><rect x="99.0223%" y="885" width="0.1397%" height="15" fill="rgb(231,55,21)"/><text x="99.2723%" y="895.50"></text></g><g><title>do_execve (1 samples, 0.14%)</title><rect x="99.0223%" y="869" width="0.1397%" height="15" fill="rgb(225,184,43)"/><text x="99.2723%" y="879.50"></text></g><g><title>__do_execve_file (1 samples, 0.14%)</title><rect x="99.0223%" y="853" width="0.1397%" height="15" fill="rgb(251,158,41)"/><text x="99.2723%" y="863.50"></text></g><g><title>search_binary_handler.part.0 (1 samples, 0.14%)</title><rect x="99.0223%" y="837" width="0.1397%" height="15" fill="rgb(234,159,37)"/><text x="99.2723%" y="847.50"></text></g><g><title>load_elf_binary (1 samples, 0.14%)</title><rect x="99.0223%" y="821" width="0.1397%" height="15" fill="rgb(216,204,22)"/><text x="99.2723%" y="831.50"></text></g><g><title>all (716 samples, 100%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(214,17,3)"/><text x="0.2500%" y="959.50"></text></g><g><title>perf (6 samples, 0.84%)</title><rect x="99.1620%" y="933" width="0.8380%" height="15" fill="rgb(212,111,17)"/><text x="99.4120%" y="943.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.84%)</title><rect x="99.1620%" y="917" width="0.8380%" height="15" fill="rgb(221,157,24)"/><text x="99.4120%" y="927.50"></text></g><g><title>do_syscall_64 (6 samples, 0.84%)</title><rect x="99.1620%" y="901" width="0.8380%" height="15" fill="rgb(252,16,13)"/><text x="99.4120%" y="911.50"></text></g><g><title>__x64_sys_execve (6 samples, 0.84%)</title><rect x="99.1620%" y="885" width="0.8380%" height="15" fill="rgb(221,62,2)"/><text x="99.4120%" y="895.50"></text></g><g><title>do_execve (6 samples, 0.84%)</title><rect x="99.1620%" y="869" width="0.8380%" height="15" fill="rgb(247,87,22)"/><text x="99.4120%" y="879.50"></text></g><g><title>__do_execve_file (6 samples, 0.84%)</title><rect x="99.1620%" y="853" width="0.8380%" height="15" fill="rgb(215,73,9)"/><text x="99.4120%" y="863.50"></text></g><g><title>search_binary_handler.part.0 (6 samples, 0.84%)</title><rect x="99.1620%" y="837" width="0.8380%" height="15" fill="rgb(207,175,33)"/><text x="99.4120%" y="847.50"></text></g><g><title>load_elf_binary (6 samples, 0.84%)</title><rect x="99.1620%" y="821" width="0.8380%" height="15" fill="rgb(243,129,54)"/><text x="99.4120%" y="831.50"></text></g><g><title>setup_new_exec (6 samples, 0.84%)</title><rect x="99.1620%" y="805" width="0.8380%" height="15" fill="rgb(227,119,45)"/><text x="99.4120%" y="815.50"></text></g><g><title>perf_event_exec (6 samples, 0.84%)</title><rect x="99.1620%" y="789" width="0.8380%" height="15" fill="rgb(205,109,36)"/><text x="99.4120%" y="799.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.70%)</title><rect x="99.3017%" y="773" width="0.6983%" height="15" fill="rgb(205,6,39)"/><text x="99.5517%" y="783.50"></text></g><g><title>native_write_msr (5 samples, 0.70%)</title><rect x="99.3017%" y="757" width="0.6983%" height="15" fill="rgb(221,32,16)"/><text x="99.5517%" y="767.50"></text></g></svg></svg>