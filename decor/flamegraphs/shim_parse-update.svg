<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="982" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="965.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="965.00"> </text><svg id="frames" x="10" width="1180"><g><title>[[heap]] (1 samples, 0.14%)</title><rect x="0.0000%" y="901" width="0.1429%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="911.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.14%)</title><rect x="0.0000%" y="885" width="0.1429%" height="15" fill="rgb(217,0,24)"/><text x="0.2500%" y="895.50"></text></g><g><title>std::sys_common::net::TcpStream::read (1 samples, 0.14%)</title><rect x="0.0000%" y="869" width="0.1429%" height="15" fill="rgb(221,193,54)"/><text x="0.2500%" y="879.50"></text></g><g><title>std::sys::unix::net::Socket::read (1 samples, 0.14%)</title><rect x="0.0000%" y="853" width="0.1429%" height="15" fill="rgb(248,212,6)"/><text x="0.2500%" y="863.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (1 samples, 0.14%)</title><rect x="0.0000%" y="837" width="0.1429%" height="15" fill="rgb(208,68,35)"/><text x="0.2500%" y="847.50"></text></g><g><title>__libc_recv (1 samples, 0.14%)</title><rect x="0.0000%" y="821" width="0.1429%" height="15" fill="rgb(232,128,0)"/><text x="0.2500%" y="831.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="0.0000%" y="805" width="0.1429%" height="15" fill="rgb(207,160,47)"/><text x="0.2500%" y="815.50"></text></g><g><title>_int_free (1 samples, 0.14%)</title><rect x="0.1429%" y="885" width="0.1429%" height="15" fill="rgb(228,23,34)"/><text x="0.3929%" y="895.50"></text></g><g><title>[[stack]] (2 samples, 0.29%)</title><rect x="0.1429%" y="901" width="0.2857%" height="15" fill="rgb(218,30,26)"/><text x="0.3929%" y="911.50"></text></g><g><title>mysql_common::packets::OkPacket::into_owned (1 samples, 0.14%)</title><rect x="0.2857%" y="885" width="0.1429%" height="15" fill="rgb(220,122,19)"/><text x="0.5357%" y="895.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.14%)</title><rect x="0.4286%" y="885" width="0.1429%" height="15" fill="rgb(250,228,42)"/><text x="0.6786%" y="895.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (1 samples, 0.14%)</title><rect x="0.5714%" y="885" width="0.1429%" height="15" fill="rgb(240,193,28)"/><text x="0.8214%" y="895.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.14%)</title><rect x="0.7143%" y="885" width="0.1429%" height="15" fill="rgb(216,20,37)"/><text x="0.9643%" y="895.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.14%)</title><rect x="0.8571%" y="885" width="0.1429%" height="15" fill="rgb(206,188,39)"/><text x="1.1071%" y="895.50"></text></g><g><title>std::sys_common::net::TcpStream::read (1 samples, 0.14%)</title><rect x="0.8571%" y="869" width="0.1429%" height="15" fill="rgb(217,207,13)"/><text x="1.1071%" y="879.50"></text></g><g><title>std::sys::unix::net::Socket::read (1 samples, 0.14%)</title><rect x="0.8571%" y="853" width="0.1429%" height="15" fill="rgb(231,73,38)"/><text x="1.1071%" y="863.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (1 samples, 0.14%)</title><rect x="0.8571%" y="837" width="0.1429%" height="15" fill="rgb(225,20,46)"/><text x="1.1071%" y="847.50"></text></g><g><title>__libc_recv (1 samples, 0.14%)</title><rect x="0.8571%" y="821" width="0.1429%" height="15" fill="rgb(210,31,41)"/><text x="1.1071%" y="831.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="0.8571%" y="805" width="0.1429%" height="15" fill="rgb(221,200,47)"/><text x="1.1071%" y="815.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="1.0000%" y="885" width="0.1429%" height="15" fill="rgb(226,26,5)"/><text x="1.2500%" y="895.50"></text></g><g><title>__rdl_realloc (1 samples, 0.14%)</title><rect x="1.1429%" y="885" width="0.1429%" height="15" fill="rgb(249,33,26)"/><text x="1.3929%" y="895.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.14%)</title><rect x="1.1429%" y="869" width="0.1429%" height="15" fill="rgb(235,183,28)"/><text x="1.3929%" y="879.50"></text></g><g><title>_int_free (2 samples, 0.29%)</title><rect x="1.2857%" y="885" width="0.2857%" height="15" fill="rgb(221,5,38)"/><text x="1.5357%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.29%)</title><rect x="1.5714%" y="885" width="0.2857%" height="15" fill="rgb(247,18,42)"/><text x="1.8214%" y="895.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.14%)</title><rect x="1.8571%" y="885" width="0.1429%" height="15" fill="rgb(241,131,45)"/><text x="2.1071%" y="895.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.14%)</title><rect x="2.0000%" y="885" width="0.1429%" height="15" fill="rgb(249,31,29)"/><text x="2.2500%" y="895.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.14%)</title><rect x="2.1429%" y="885" width="0.1429%" height="15" fill="rgb(225,111,53)"/><text x="2.3929%" y="895.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.14%)</title><rect x="2.2857%" y="885" width="0.1429%" height="15" fill="rgb(238,160,17)"/><text x="2.5357%" y="895.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (1 samples, 0.14%)</title><rect x="2.4286%" y="885" width="0.1429%" height="15" fill="rgb(214,148,48)"/><text x="2.6786%" y="895.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (1 samples, 0.14%)</title><rect x="2.5714%" y="885" width="0.1429%" height="15" fill="rgb(232,36,49)"/><text x="2.8214%" y="895.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (1 samples, 0.14%)</title><rect x="2.7143%" y="885" width="0.1429%" height="15" fill="rgb(209,103,24)"/><text x="2.9643%" y="895.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf::BufGuard::consume (1 samples, 0.14%)</title><rect x="2.8571%" y="885" width="0.1429%" height="15" fill="rgb(229,88,8)"/><text x="3.1071%" y="895.50"></text></g><g><title>[anon] (19 samples, 2.71%)</title><rect x="0.4286%" y="901" width="2.7143%" height="15" fill="rgb(213,181,19)"/><text x="0.6786%" y="911.50">[a..</text></g><g><title>unicode_normalization::lookups::canonical_combining_class (1 samples, 0.14%)</title><rect x="3.0000%" y="885" width="0.1429%" height="15" fill="rgb(254,191,54)"/><text x="3.2500%" y="895.50"></text></g><g><title>[lobsters] (1 samples, 0.14%)</title><rect x="3.1429%" y="901" width="0.1429%" height="15" fill="rgb(241,83,37)"/><text x="3.3929%" y="911.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="3.1429%" y="885" width="0.1429%" height="15" fill="rgb(233,36,39)"/><text x="3.3929%" y="895.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (1 samples, 0.14%)</title><rect x="3.2857%" y="885" width="0.1429%" height="15" fill="rgb(226,3,54)"/><text x="3.5357%" y="895.50"></text></g><g><title>decor::Shim::create_schema (1 samples, 0.14%)</title><rect x="3.2857%" y="869" width="0.1429%" height="15" fill="rgb(245,192,40)"/><text x="3.5357%" y="879.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (1 samples, 0.14%)</title><rect x="3.2857%" y="853" width="0.1429%" height="15" fill="rgb(238,167,29)"/><text x="3.5357%" y="863.50"></text></g><g><title>sql_parser::parser::parse_statements (1 samples, 0.14%)</title><rect x="3.2857%" y="837" width="0.1429%" height="15" fill="rgb(232,182,51)"/><text x="3.5357%" y="847.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (1 samples, 0.14%)</title><rect x="3.2857%" y="821" width="0.1429%" height="15" fill="rgb(231,60,39)"/><text x="3.5357%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.14%)</title><rect x="3.2857%" y="805" width="0.1429%" height="15" fill="rgb(208,69,12)"/><text x="3.5357%" y="815.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.14%)</title><rect x="3.2857%" y="789" width="0.1429%" height="15" fill="rgb(235,93,37)"/><text x="3.5357%" y="799.50"></text></g><g><title>_int_realloc (1 samples, 0.14%)</title><rect x="3.2857%" y="773" width="0.1429%" height="15" fill="rgb(213,116,39)"/><text x="3.5357%" y="783.50"></text></g><g><title>_int_malloc (1 samples, 0.14%)</title><rect x="3.2857%" y="757" width="0.1429%" height="15" fill="rgb(222,207,29)"/><text x="3.5357%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="3.4286%" y="853" width="0.1429%" height="15" fill="rgb(206,96,30)"/><text x="3.6786%" y="863.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="3.4286%" y="837" width="0.1429%" height="15" fill="rgb(218,138,4)"/><text x="3.6786%" y="847.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="3.4286%" y="821" width="0.1429%" height="15" fill="rgb(250,191,14)"/><text x="3.6786%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.14%)</title><rect x="3.4286%" y="805" width="0.1429%" height="15" fill="rgb(239,60,40)"/><text x="3.6786%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="3.4286%" y="789" width="0.1429%" height="15" fill="rgb(206,27,48)"/><text x="3.6786%" y="799.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.14%)</title><rect x="3.4286%" y="773" width="0.1429%" height="15" fill="rgb(225,35,8)"/><text x="3.6786%" y="783.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (2 samples, 0.29%)</title><rect x="3.4286%" y="885" width="0.2857%" height="15" fill="rgb(250,213,24)"/><text x="3.6786%" y="895.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (2 samples, 0.29%)</title><rect x="3.4286%" y="869" width="0.2857%" height="15" fill="rgb(247,123,22)"/><text x="3.6786%" y="879.50"></text></g><g><title>sql_parser::parser::parse_statements (1 samples, 0.14%)</title><rect x="3.5714%" y="853" width="0.1429%" height="15" fill="rgb(231,138,38)"/><text x="3.8214%" y="863.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (1 samples, 0.14%)</title><rect x="3.5714%" y="837" width="0.1429%" height="15" fill="rgb(231,145,46)"/><text x="3.8214%" y="847.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (1 samples, 0.14%)</title><rect x="3.5714%" y="821" width="0.1429%" height="15" fill="rgb(251,118,11)"/><text x="3.8214%" y="831.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (1 samples, 0.14%)</title><rect x="3.5714%" y="805" width="0.1429%" height="15" fill="rgb(217,147,25)"/><text x="3.8214%" y="815.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="3.7143%" y="885" width="0.1429%" height="15" fill="rgb(247,81,37)"/><text x="3.9643%" y="895.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.14%)</title><rect x="3.8571%" y="677" width="0.1429%" height="15" fill="rgb(209,12,38)"/><text x="4.1071%" y="687.50"></text></g><g><title>lock_sock_nested (1 samples, 0.14%)</title><rect x="4.2857%" y="517" width="0.1429%" height="15" fill="rgb(227,1,9)"/><text x="4.5357%" y="527.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.14%)</title><rect x="4.2857%" y="501" width="0.1429%" height="15" fill="rgb(248,47,43)"/><text x="4.5357%" y="511.50"></text></g><g><title>preempt_count_add (1 samples, 0.14%)</title><rect x="4.2857%" y="485" width="0.1429%" height="15" fill="rgb(221,10,30)"/><text x="4.5357%" y="495.50"></text></g><g><title>release_sock (3 samples, 0.43%)</title><rect x="4.4286%" y="517" width="0.4286%" height="15" fill="rgb(210,229,1)"/><text x="4.6786%" y="527.50"></text></g><g><title>tcp_release_cb (3 samples, 0.43%)</title><rect x="4.4286%" y="501" width="0.4286%" height="15" fill="rgb(222,148,37)"/><text x="4.6786%" y="511.50"></text></g><g><title>netif_rx (2 samples, 0.29%)</title><rect x="5.5714%" y="357" width="0.2857%" height="15" fill="rgb(234,67,33)"/><text x="5.8214%" y="367.50"></text></g><g><title>netif_rx_internal (2 samples, 0.29%)</title><rect x="5.5714%" y="341" width="0.2857%" height="15" fill="rgb(247,98,35)"/><text x="5.8214%" y="351.50"></text></g><g><title>enqueue_to_backlog (1 samples, 0.14%)</title><rect x="5.7143%" y="325" width="0.1429%" height="15" fill="rgb(247,138,52)"/><text x="5.9643%" y="335.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.14%)</title><rect x="5.7143%" y="309" width="0.1429%" height="15" fill="rgb(213,79,30)"/><text x="5.9643%" y="319.50"></text></g><g><title>preempt_count_sub (1 samples, 0.14%)</title><rect x="5.7143%" y="293" width="0.1429%" height="15" fill="rgb(246,177,23)"/><text x="5.9643%" y="303.50"></text></g><g><title>__dev_queue_xmit (3 samples, 0.43%)</title><rect x="5.5714%" y="405" width="0.4286%" height="15" fill="rgb(230,62,27)"/><text x="5.8214%" y="415.50"></text></g><g><title>dev_hard_start_xmit (3 samples, 0.43%)</title><rect x="5.5714%" y="389" width="0.4286%" height="15" fill="rgb(216,154,8)"/><text x="5.8214%" y="399.50"></text></g><g><title>loopback_xmit (3 samples, 0.43%)</title><rect x="5.5714%" y="373" width="0.4286%" height="15" fill="rgb(244,35,45)"/><text x="5.8214%" y="383.50"></text></g><g><title>skb_clone_tx_timestamp (1 samples, 0.14%)</title><rect x="5.8571%" y="357" width="0.1429%" height="15" fill="rgb(251,115,12)"/><text x="6.1071%" y="367.50"></text></g><g><title>irqtime_account_irq (2 samples, 0.29%)</title><rect x="6.1429%" y="341" width="0.2857%" height="15" fill="rgb(240,54,50)"/><text x="6.3929%" y="351.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.14%)</title><rect x="6.2857%" y="325" width="0.1429%" height="15" fill="rgb(233,84,52)"/><text x="6.5357%" y="335.50"></text></g><g><title>sched_clock (1 samples, 0.14%)</title><rect x="6.2857%" y="309" width="0.1429%" height="15" fill="rgb(207,117,47)"/><text x="6.5357%" y="319.50"></text></g><g><title>native_sched_clock (1 samples, 0.14%)</title><rect x="6.2857%" y="293" width="0.1429%" height="15" fill="rgb(249,43,39)"/><text x="6.5357%" y="303.50"></text></g><g><title>raw_local_deliver (1 samples, 0.14%)</title><rect x="7.7143%" y="229" width="0.1429%" height="15" fill="rgb(209,38,44)"/><text x="7.9643%" y="239.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.14%)</title><rect x="8.2857%" y="117" width="0.1429%" height="15" fill="rgb(236,212,23)"/><text x="8.5357%" y="127.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.14%)</title><rect x="8.4286%" y="117" width="0.1429%" height="15" fill="rgb(242,79,21)"/><text x="8.6786%" y="127.50"></text></g><g><title>preempt_count_sub (1 samples, 0.14%)</title><rect x="8.4286%" y="101" width="0.1429%" height="15" fill="rgb(211,96,35)"/><text x="8.6786%" y="111.50"></text></g><g><title>enqueue_task (4 samples, 0.57%)</title><rect x="8.5714%" y="117" width="0.5714%" height="15" fill="rgb(253,215,40)"/><text x="8.8214%" y="127.50"></text></g><g><title>psi_task_change (4 samples, 0.57%)</title><rect x="8.5714%" y="101" width="0.5714%" height="15" fill="rgb(211,81,21)"/><text x="8.8214%" y="111.50"></text></g><g><title>psi_group_change (4 samples, 0.57%)</title><rect x="8.5714%" y="85" width="0.5714%" height="15" fill="rgb(208,190,38)"/><text x="8.8214%" y="95.50"></text></g><g><title>record_times (1 samples, 0.14%)</title><rect x="9.0000%" y="69" width="0.1429%" height="15" fill="rgb(235,213,38)"/><text x="9.2500%" y="79.50"></text></g><g><title>__update_load_avg_cfs_rq (3 samples, 0.43%)</title><rect x="9.1429%" y="69" width="0.4286%" height="15" fill="rgb(237,122,38)"/><text x="9.3929%" y="79.50"></text></g><g><title>enqueue_task_fair (4 samples, 0.57%)</title><rect x="9.1429%" y="117" width="0.5714%" height="15" fill="rgb(244,218,35)"/><text x="9.3929%" y="127.50"></text></g><g><title>enqueue_entity (4 samples, 0.57%)</title><rect x="9.1429%" y="101" width="0.5714%" height="15" fill="rgb(240,68,47)"/><text x="9.3929%" y="111.50"></text></g><g><title>update_load_avg (4 samples, 0.57%)</title><rect x="9.1429%" y="85" width="0.5714%" height="15" fill="rgb(210,16,53)"/><text x="9.3929%" y="95.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.14%)</title><rect x="9.5714%" y="69" width="0.1429%" height="15" fill="rgb(235,124,12)"/><text x="9.8214%" y="79.50"></text></g><g><title>ttwu_do_wakeup (2 samples, 0.29%)</title><rect x="9.7143%" y="117" width="0.2857%" height="15" fill="rgb(224,169,11)"/><text x="9.9643%" y="127.50"></text></g><g><title>check_preempt_curr (2 samples, 0.29%)</title><rect x="9.7143%" y="101" width="0.2857%" height="15" fill="rgb(250,166,2)"/><text x="9.9643%" y="111.50"></text></g><g><title>resched_curr (2 samples, 0.29%)</title><rect x="9.7143%" y="85" width="0.2857%" height="15" fill="rgb(242,216,29)"/><text x="9.9643%" y="95.50"></text></g><g><title>sock_def_readable (15 samples, 2.14%)</title><rect x="8.0000%" y="181" width="2.1429%" height="15" fill="rgb(230,116,27)"/><text x="8.2500%" y="191.50">s..</text></g><g><title>__wake_up_common_lock (14 samples, 2.00%)</title><rect x="8.1429%" y="165" width="2.0000%" height="15" fill="rgb(228,99,48)"/><text x="8.3929%" y="175.50">_..</text></g><g><title>__wake_up_common (14 samples, 2.00%)</title><rect x="8.1429%" y="149" width="2.0000%" height="15" fill="rgb(253,11,6)"/><text x="8.3929%" y="159.50">_..</text></g><g><title>try_to_wake_up (14 samples, 2.00%)</title><rect x="8.1429%" y="133" width="2.0000%" height="15" fill="rgb(247,143,39)"/><text x="8.3929%" y="143.50">t..</text></g><g><title>update_rq_clock (1 samples, 0.14%)</title><rect x="10.0000%" y="117" width="0.1429%" height="15" fill="rgb(236,97,10)"/><text x="10.2500%" y="127.50"></text></g><g><title>bictcp_acked (1 samples, 0.14%)</title><rect x="11.0000%" y="165" width="0.1429%" height="15" fill="rgb(233,208,19)"/><text x="11.2500%" y="175.50"></text></g><g><title>tcp_ack (8 samples, 1.14%)</title><rect x="10.1429%" y="181" width="1.1429%" height="15" fill="rgb(216,164,2)"/><text x="10.3929%" y="191.50"></text></g><g><title>tcp_update_pacing_rate (1 samples, 0.14%)</title><rect x="11.1429%" y="165" width="0.1429%" height="15" fill="rgb(220,129,5)"/><text x="11.3929%" y="175.50"></text></g><g><title>ip_local_deliver (30 samples, 4.29%)</title><rect x="7.1429%" y="277" width="4.2857%" height="15" fill="rgb(242,17,10)"/><text x="7.3929%" y="287.50">ip_lo..</text></g><g><title>ip_local_deliver_finish (29 samples, 4.14%)</title><rect x="7.2857%" y="261" width="4.1429%" height="15" fill="rgb(242,107,0)"/><text x="7.5357%" y="271.50">ip_lo..</text></g><g><title>ip_protocol_deliver_rcu (28 samples, 4.00%)</title><rect x="7.4286%" y="245" width="4.0000%" height="15" fill="rgb(251,28,31)"/><text x="7.6786%" y="255.50">ip_p..</text></g><g><title>tcp_v4_rcv (25 samples, 3.57%)</title><rect x="7.8571%" y="229" width="3.5714%" height="15" fill="rgb(233,223,10)"/><text x="8.1071%" y="239.50">tcp_..</text></g><g><title>tcp_v4_do_rcv (25 samples, 3.57%)</title><rect x="7.8571%" y="213" width="3.5714%" height="15" fill="rgb(215,21,27)"/><text x="8.1071%" y="223.50">tcp_..</text></g><g><title>tcp_rcv_established (25 samples, 3.57%)</title><rect x="7.8571%" y="197" width="3.5714%" height="15" fill="rgb(232,23,21)"/><text x="8.1071%" y="207.50">tcp_..</text></g><g><title>tcp_event_data_recv (1 samples, 0.14%)</title><rect x="11.2857%" y="181" width="0.1429%" height="15" fill="rgb(244,5,23)"/><text x="11.5357%" y="191.50"></text></g><g><title>__ip_queue_xmit (46 samples, 6.57%)</title><rect x="5.0000%" y="453" width="6.5714%" height="15" fill="rgb(226,81,46)"/><text x="5.2500%" y="463.50">__ip_queu..</text></g><g><title>ip_output (45 samples, 6.43%)</title><rect x="5.1429%" y="437" width="6.4286%" height="15" fill="rgb(247,70,30)"/><text x="5.3929%" y="447.50">ip_output</text></g><g><title>ip_finish_output2 (43 samples, 6.14%)</title><rect x="5.4286%" y="421" width="6.1429%" height="15" fill="rgb(212,68,19)"/><text x="5.6786%" y="431.50">ip_finis..</text></g><g><title>__local_bh_enable_ip (39 samples, 5.57%)</title><rect x="6.0000%" y="405" width="5.5714%" height="15" fill="rgb(240,187,13)"/><text x="6.2500%" y="415.50">__local..</text></g><g><title>do_softirq (38 samples, 5.43%)</title><rect x="6.1429%" y="389" width="5.4286%" height="15" fill="rgb(223,113,26)"/><text x="6.3929%" y="399.50">do_soft..</text></g><g><title>do_softirq_own_stack (38 samples, 5.43%)</title><rect x="6.1429%" y="373" width="5.4286%" height="15" fill="rgb(206,192,2)"/><text x="6.3929%" y="383.50">do_soft..</text></g><g><title>__do_softirq (38 samples, 5.43%)</title><rect x="6.1429%" y="357" width="5.4286%" height="15" fill="rgb(241,108,4)"/><text x="6.3929%" y="367.50">__do_so..</text></g><g><title>net_rx_action (36 samples, 5.14%)</title><rect x="6.4286%" y="341" width="5.1429%" height="15" fill="rgb(247,173,49)"/><text x="6.6786%" y="351.50">net_rx..</text></g><g><title>process_backlog (34 samples, 4.86%)</title><rect x="6.7143%" y="325" width="4.8571%" height="15" fill="rgb(224,114,35)"/><text x="6.9643%" y="335.50">proces..</text></g><g><title>__netif_receive_skb_one_core (32 samples, 4.57%)</title><rect x="7.0000%" y="309" width="4.5714%" height="15" fill="rgb(245,159,27)"/><text x="7.2500%" y="319.50">__net..</text></g><g><title>ip_rcv (32 samples, 4.57%)</title><rect x="7.0000%" y="293" width="4.5714%" height="15" fill="rgb(245,172,44)"/><text x="7.2500%" y="303.50">ip_rcv</text></g><g><title>ip_rcv_core (1 samples, 0.14%)</title><rect x="11.4286%" y="277" width="0.1429%" height="15" fill="rgb(236,23,11)"/><text x="11.6786%" y="287.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.14%)</title><rect x="11.4286%" y="261" width="0.1429%" height="15" fill="rgb(205,117,38)"/><text x="11.6786%" y="271.50"></text></g><g><title>ip_queue_xmit (1 samples, 0.14%)</title><rect x="11.5714%" y="453" width="0.1429%" height="15" fill="rgb(237,72,25)"/><text x="11.8214%" y="463.50"></text></g><g><title>__tcp_push_pending_frames (48 samples, 6.86%)</title><rect x="5.0000%" y="501" width="6.8571%" height="15" fill="rgb(244,70,9)"/><text x="5.2500%" y="511.50">__tcp_pus..</text></g><g><title>tcp_write_xmit (48 samples, 6.86%)</title><rect x="5.0000%" y="485" width="6.8571%" height="15" fill="rgb(217,125,39)"/><text x="5.2500%" y="495.50">tcp_write..</text></g><g><title>__tcp_transmit_skb (48 samples, 6.86%)</title><rect x="5.0000%" y="469" width="6.8571%" height="15" fill="rgb(235,36,10)"/><text x="5.2500%" y="479.50">__tcp_tra..</text></g><g><title>tcp_v4_send_check (1 samples, 0.14%)</title><rect x="11.7143%" y="453" width="0.1429%" height="15" fill="rgb(251,123,47)"/><text x="11.9643%" y="463.50"></text></g><g><title>__kmalloc_node_track_caller (1 samples, 0.14%)</title><rect x="11.8571%" y="469" width="0.1429%" height="15" fill="rgb(221,13,13)"/><text x="12.1071%" y="479.50"></text></g><g><title>sk_stream_alloc_skb (2 samples, 0.29%)</title><rect x="11.8571%" y="501" width="0.2857%" height="15" fill="rgb(238,131,9)"/><text x="12.1071%" y="511.50"></text></g><g><title>__alloc_skb (2 samples, 0.29%)</title><rect x="11.8571%" y="485" width="0.2857%" height="15" fill="rgb(211,50,8)"/><text x="12.1071%" y="495.50"></text></g><g><title>__ksize (1 samples, 0.14%)</title><rect x="12.0000%" y="469" width="0.1429%" height="15" fill="rgb(245,182,24)"/><text x="12.2500%" y="479.50"></text></g><g><title>do_syscall_64 (56 samples, 8.00%)</title><rect x="4.2857%" y="597" width="8.0000%" height="15" fill="rgb(242,14,37)"/><text x="4.5357%" y="607.50">do_syscall_..</text></g><g><title>__x64_sys_sendto (56 samples, 8.00%)</title><rect x="4.2857%" y="581" width="8.0000%" height="15" fill="rgb(246,228,12)"/><text x="4.5357%" y="591.50">__x64_sys_s..</text></g><g><title>__sys_sendto (56 samples, 8.00%)</title><rect x="4.2857%" y="565" width="8.0000%" height="15" fill="rgb(213,55,15)"/><text x="4.5357%" y="575.50">__sys_sendto</text></g><g><title>sock_sendmsg (56 samples, 8.00%)</title><rect x="4.2857%" y="549" width="8.0000%" height="15" fill="rgb(209,9,3)"/><text x="4.5357%" y="559.50">sock_sendmsg</text></g><g><title>tcp_sendmsg (56 samples, 8.00%)</title><rect x="4.2857%" y="533" width="8.0000%" height="15" fill="rgb(230,59,30)"/><text x="4.5357%" y="543.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (52 samples, 7.43%)</title><rect x="4.8571%" y="517" width="7.4286%" height="15" fill="rgb(209,121,21)"/><text x="5.1071%" y="527.50">tcp_sendms..</text></g><g><title>skb_do_copy_data_nocache (1 samples, 0.14%)</title><rect x="12.1429%" y="501" width="0.1429%" height="15" fill="rgb(220,109,13)"/><text x="12.3929%" y="511.50"></text></g><g><title>__check_object_size (1 samples, 0.14%)</title><rect x="12.1429%" y="485" width="0.1429%" height="15" fill="rgb(232,18,1)"/><text x="12.3929%" y="495.50"></text></g><g><title>__libc_start_main (61 samples, 8.71%)</title><rect x="3.8571%" y="885" width="8.7143%" height="15" fill="rgb(215,41,42)"/><text x="4.1071%" y="895.50">__libc_start..</text></g><g><title>main (61 samples, 8.71%)</title><rect x="3.8571%" y="869" width="8.7143%" height="15" fill="rgb(224,123,36)"/><text x="4.1071%" y="879.50">main</text></g><g><title>std::rt::lang_start_internal (61 samples, 8.71%)</title><rect x="3.8571%" y="853" width="8.7143%" height="15" fill="rgb(240,125,3)"/><text x="4.1071%" y="863.50">std::rt::lan..</text></g><g><title>std::panic::catch_unwind (61 samples, 8.71%)</title><rect x="3.8571%" y="837" width="8.7143%" height="15" fill="rgb(205,98,50)"/><text x="4.1071%" y="847.50">std::panic::..</text></g><g><title>std::panicking::try (61 samples, 8.71%)</title><rect x="3.8571%" y="821" width="8.7143%" height="15" fill="rgb(205,185,37)"/><text x="4.1071%" y="831.50">std::panicki..</text></g><g><title>std::panicking::try::do_call (61 samples, 8.71%)</title><rect x="3.8571%" y="805" width="8.7143%" height="15" fill="rgb(238,207,15)"/><text x="4.1071%" y="815.50">std::panicki..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (61 samples, 8.71%)</title><rect x="3.8571%" y="789" width="8.7143%" height="15" fill="rgb(213,199,42)"/><text x="4.1071%" y="799.50">core::ops::f..</text></g><g><title>std::rt::lang_start::_{{closure}} (61 samples, 8.71%)</title><rect x="3.8571%" y="773" width="8.7143%" height="15" fill="rgb(235,201,11)"/><text x="4.1071%" y="783.50">std::rt::lan..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (61 samples, 8.71%)</title><rect x="3.8571%" y="757" width="8.7143%" height="15" fill="rgb(207,46,11)"/><text x="4.1071%" y="767.50">std::sys_com..</text></g><g><title>lobsters::main (61 samples, 8.71%)</title><rect x="3.8571%" y="741" width="8.7143%" height="15" fill="rgb(241,35,35)"/><text x="4.1071%" y="751.50">lobsters::ma..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (61 samples, 8.71%)</title><rect x="3.8571%" y="725" width="8.7143%" height="15" fill="rgb(243,32,47)"/><text x="4.1071%" y="735.50">mysql::conn:..</text></g><g><title>mysql::conn::Conn::_query (61 samples, 8.71%)</title><rect x="3.8571%" y="709" width="8.7143%" height="15" fill="rgb(247,202,23)"/><text x="4.1071%" y="719.50">mysql::conn:..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (61 samples, 8.71%)</title><rect x="3.8571%" y="693" width="8.7143%" height="15" fill="rgb(219,102,11)"/><text x="4.1071%" y="703.50">mysql_common..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (60 samples, 8.57%)</title><rect x="4.0000%" y="677" width="8.5714%" height="15" fill="rgb(243,110,44)"/><text x="4.2500%" y="687.50">std::io::buf..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (60 samples, 8.57%)</title><rect x="4.0000%" y="661" width="8.5714%" height="15" fill="rgb(222,74,54)"/><text x="4.2500%" y="671.50">&lt;std::net::t..</text></g><g><title>std::sys_common::net::TcpStream::write (60 samples, 8.57%)</title><rect x="4.0000%" y="645" width="8.5714%" height="15" fill="rgb(216,99,12)"/><text x="4.2500%" y="655.50">std::sys_com..</text></g><g><title>__libc_send (60 samples, 8.57%)</title><rect x="4.0000%" y="629" width="8.5714%" height="15" fill="rgb(226,22,26)"/><text x="4.2500%" y="639.50">__libc_send</text></g><g><title>entry_SYSCALL_64 (59 samples, 8.43%)</title><rect x="4.1429%" y="613" width="8.4286%" height="15" fill="rgb(217,163,10)"/><text x="4.3929%" y="623.50">entry_SYSCAL..</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.29%)</title><rect x="12.2857%" y="597" width="0.2857%" height="15" fill="rgb(213,25,53)"/><text x="12.5357%" y="607.50"></text></g><g><title>_int_free (2 samples, 0.29%)</title><rect x="12.5714%" y="885" width="0.2857%" height="15" fill="rgb(252,105,26)"/><text x="12.8214%" y="895.50"></text></g><g><title>_int_realloc (1 samples, 0.14%)</title><rect x="12.8571%" y="885" width="0.1429%" height="15" fill="rgb(220,39,43)"/><text x="13.1071%" y="895.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.14%)</title><rect x="13.0000%" y="885" width="0.1429%" height="15" fill="rgb(229,68,48)"/><text x="13.2500%" y="895.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.14%)</title><rect x="13.1429%" y="885" width="0.1429%" height="15" fill="rgb(252,8,32)"/><text x="13.3929%" y="895.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.14%)</title><rect x="13.2857%" y="821" width="0.1429%" height="15" fill="rgb(223,20,43)"/><text x="13.5357%" y="831.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.14%)</title><rect x="13.2857%" y="805" width="0.1429%" height="15" fill="rgb(229,81,49)"/><text x="13.5357%" y="815.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.14%)</title><rect x="13.2857%" y="789" width="0.1429%" height="15" fill="rgb(236,28,36)"/><text x="13.5357%" y="799.50"></text></g><g><title>_int_free (1 samples, 0.14%)</title><rect x="13.2857%" y="773" width="0.1429%" height="15" fill="rgb(249,185,26)"/><text x="13.5357%" y="783.50"></text></g><g><title>decor::Shim::run_on_tcp (4 samples, 0.57%)</title><rect x="13.2857%" y="885" width="0.5714%" height="15" fill="rgb(249,174,33)"/><text x="13.5357%" y="895.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (4 samples, 0.57%)</title><rect x="13.2857%" y="869" width="0.5714%" height="15" fill="rgb(233,201,37)"/><text x="13.5357%" y="879.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (4 samples, 0.57%)</title><rect x="13.2857%" y="853" width="0.5714%" height="15" fill="rgb(221,78,26)"/><text x="13.5357%" y="863.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (4 samples, 0.57%)</title><rect x="13.2857%" y="837" width="0.5714%" height="15" fill="rgb(250,127,30)"/><text x="13.5357%" y="847.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.43%)</title><rect x="13.4286%" y="821" width="0.4286%" height="15" fill="rgb(230,49,44)"/><text x="13.6786%" y="831.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.14%)</title><rect x="13.7143%" y="805" width="0.1429%" height="15" fill="rgb(229,67,23)"/><text x="13.9643%" y="815.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (1 samples, 0.14%)</title><rect x="13.8571%" y="885" width="0.1429%" height="15" fill="rgb(249,83,47)"/><text x="14.1071%" y="895.50"></text></g><g><title>sql_parser::parser::parse_statements (1 samples, 0.14%)</title><rect x="13.8571%" y="869" width="0.1429%" height="15" fill="rgb(215,43,3)"/><text x="14.1071%" y="879.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (1 samples, 0.14%)</title><rect x="13.8571%" y="853" width="0.1429%" height="15" fill="rgb(238,154,13)"/><text x="14.1071%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::parse_one_of_keywords (1 samples, 0.14%)</title><rect x="13.8571%" y="837" width="0.1429%" height="15" fill="rgb(219,56,2)"/><text x="14.1071%" y="847.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.14%)</title><rect x="14.0000%" y="853" width="0.1429%" height="15" fill="rgb(233,0,4)"/><text x="14.2500%" y="863.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.14%)</title><rect x="14.0000%" y="837" width="0.1429%" height="15" fill="rgb(235,30,7)"/><text x="14.2500%" y="847.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.14%)</title><rect x="14.0000%" y="821" width="0.1429%" height="15" fill="rgb(250,79,13)"/><text x="14.2500%" y="831.50"></text></g><g><title>dlopen (1 samples, 0.14%)</title><rect x="14.0000%" y="805" width="0.1429%" height="15" fill="rgb(211,146,34)"/><text x="14.2500%" y="815.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.14%)</title><rect x="14.0000%" y="789" width="0.1429%" height="15" fill="rgb(228,22,38)"/><text x="14.2500%" y="799.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.14%)</title><rect x="14.0000%" y="773" width="0.1429%" height="15" fill="rgb(235,168,5)"/><text x="14.2500%" y="783.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.14%)</title><rect x="14.0000%" y="757" width="0.1429%" height="15" fill="rgb(221,155,16)"/><text x="14.2500%" y="767.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.14%)</title><rect x="14.0000%" y="741" width="0.1429%" height="15" fill="rgb(215,215,53)"/><text x="14.2500%" y="751.50"></text></g><g><title>_dl_open (1 samples, 0.14%)</title><rect x="14.0000%" y="725" width="0.1429%" height="15" fill="rgb(223,4,10)"/><text x="14.2500%" y="735.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.14%)</title><rect x="14.0000%" y="709" width="0.1429%" height="15" fill="rgb(234,103,6)"/><text x="14.2500%" y="719.50"></text></g><g><title>dl_open_worker (1 samples, 0.14%)</title><rect x="14.0000%" y="693" width="0.1429%" height="15" fill="rgb(227,97,0)"/><text x="14.2500%" y="703.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.14%)</title><rect x="14.0000%" y="677" width="0.1429%" height="15" fill="rgb(234,150,53)"/><text x="14.2500%" y="687.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.14%)</title><rect x="14.0000%" y="661" width="0.1429%" height="15" fill="rgb(228,201,54)"/><text x="14.2500%" y="671.50"></text></g><g><title>do_lookup_x (1 samples, 0.14%)</title><rect x="14.0000%" y="645" width="0.1429%" height="15" fill="rgb(222,22,37)"/><text x="14.2500%" y="655.50"></text></g><g><title>hwloc::Topology::new (3 samples, 0.43%)</title><rect x="14.0000%" y="869" width="0.4286%" height="15" fill="rgb(237,53,32)"/><text x="14.2500%" y="879.50"></text></g><g><title>hwloc_topology_load (2 samples, 0.29%)</title><rect x="14.1429%" y="853" width="0.2857%" height="15" fill="rgb(233,25,53)"/><text x="14.3929%" y="863.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.29%)</title><rect x="14.1429%" y="837" width="0.2857%" height="15" fill="rgb(210,40,34)"/><text x="14.3929%" y="847.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.29%)</title><rect x="14.1429%" y="821" width="0.2857%" height="15" fill="rgb(241,220,44)"/><text x="14.3929%" y="831.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.29%)</title><rect x="14.1429%" y="805" width="0.2857%" height="15" fill="rgb(235,28,35)"/><text x="14.3929%" y="815.50"></text></g><g><title>___sprintf_chk (2 samples, 0.29%)</title><rect x="14.1429%" y="789" width="0.2857%" height="15" fill="rgb(210,56,17)"/><text x="14.3929%" y="799.50"></text></g><g><title>__vsprintf_internal (2 samples, 0.29%)</title><rect x="14.1429%" y="773" width="0.2857%" height="15" fill="rgb(224,130,29)"/><text x="14.3929%" y="783.50"></text></g><g><title>__vfprintf_internal (2 samples, 0.29%)</title><rect x="14.1429%" y="757" width="0.2857%" height="15" fill="rgb(235,212,8)"/><text x="14.3929%" y="767.50"></text></g><g><title>__GI__IO_default_xsputn (1 samples, 0.14%)</title><rect x="14.2857%" y="741" width="0.1429%" height="15" fill="rgb(223,33,50)"/><text x="14.5357%" y="751.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.14%)</title><rect x="14.4286%" y="805" width="0.1429%" height="15" fill="rgb(219,149,13)"/><text x="14.6786%" y="815.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="14.4286%" y="789" width="0.1429%" height="15" fill="rgb(250,156,29)"/><text x="14.6786%" y="799.50"></text></g><g><title>__pthread_disable_asynccancel (1 samples, 0.14%)</title><rect x="14.8571%" y="693" width="0.1429%" height="15" fill="rgb(216,193,19)"/><text x="15.1071%" y="703.50"></text></g><g><title>skb_release_data (3 samples, 0.43%)</title><rect x="15.5714%" y="581" width="0.4286%" height="15" fill="rgb(216,135,14)"/><text x="15.8214%" y="591.50"></text></g><g><title>__kfree_skb (5 samples, 0.71%)</title><rect x="15.5714%" y="597" width="0.7143%" height="15" fill="rgb(241,47,5)"/><text x="15.8214%" y="607.50"></text></g><g><title>skb_release_head_state (2 samples, 0.29%)</title><rect x="16.0000%" y="581" width="0.2857%" height="15" fill="rgb(233,42,35)"/><text x="16.2500%" y="591.50"></text></g><g><title>sock_rfree (2 samples, 0.29%)</title><rect x="16.0000%" y="565" width="0.2857%" height="15" fill="rgb(231,13,6)"/><text x="16.2500%" y="575.50"></text></g><g><title>release_sock (1 samples, 0.14%)</title><rect x="16.2857%" y="597" width="0.1429%" height="15" fill="rgb(207,181,40)"/><text x="16.5357%" y="607.50"></text></g><g><title>tcp_release_cb (1 samples, 0.14%)</title><rect x="16.2857%" y="581" width="0.1429%" height="15" fill="rgb(254,173,49)"/><text x="16.5357%" y="591.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.14%)</title><rect x="16.4286%" y="581" width="0.1429%" height="15" fill="rgb(221,1,38)"/><text x="16.6786%" y="591.50"></text></g><g><title>preempt_count_sub (1 samples, 0.14%)</title><rect x="16.4286%" y="565" width="0.1429%" height="15" fill="rgb(206,124,46)"/><text x="16.6786%" y="575.50"></text></g><g><title>remove_wait_queue (2 samples, 0.29%)</title><rect x="16.5714%" y="581" width="0.2857%" height="15" fill="rgb(249,21,11)"/><text x="16.8214%" y="591.50"></text></g><g><title>_raw_spin_lock_irqsave (2 samples, 0.29%)</title><rect x="16.5714%" y="565" width="0.2857%" height="15" fill="rgb(222,201,40)"/><text x="16.8214%" y="575.50"></text></g><g><title>update_curr (2 samples, 0.29%)</title><rect x="17.2857%" y="485" width="0.2857%" height="15" fill="rgb(235,61,29)"/><text x="17.5357%" y="495.50"></text></g><g><title>__cgroup_account_cputime (1 samples, 0.14%)</title><rect x="17.4286%" y="469" width="0.1429%" height="15" fill="rgb(219,207,3)"/><text x="17.6786%" y="479.50"></text></g><g><title>dequeue_task_fair (5 samples, 0.71%)</title><rect x="17.0000%" y="517" width="0.7143%" height="15" fill="rgb(222,56,46)"/><text x="17.2500%" y="527.50"></text></g><g><title>dequeue_entity (3 samples, 0.43%)</title><rect x="17.2857%" y="501" width="0.4286%" height="15" fill="rgb(239,76,54)"/><text x="17.5357%" y="511.50"></text></g><g><title>update_load_avg (1 samples, 0.14%)</title><rect x="17.5714%" y="485" width="0.1429%" height="15" fill="rgb(231,124,27)"/><text x="17.8214%" y="495.50"></text></g><g><title>finish_task_switch (1 samples, 0.14%)</title><rect x="17.7143%" y="517" width="0.1429%" height="15" fill="rgb(249,195,6)"/><text x="17.9643%" y="527.50"></text></g><g><title>pick_next_task_fair (1 samples, 0.14%)</title><rect x="17.8571%" y="517" width="0.1429%" height="15" fill="rgb(237,174,47)"/><text x="18.1071%" y="527.50"></text></g><g><title>newidle_balance (1 samples, 0.14%)</title><rect x="17.8571%" y="501" width="0.1429%" height="15" fill="rgb(206,201,31)"/><text x="18.1071%" y="511.50"></text></g><g><title>psi_task_change (5 samples, 0.71%)</title><rect x="18.0000%" y="517" width="0.7143%" height="15" fill="rgb(231,57,52)"/><text x="18.2500%" y="527.50"></text></g><g><title>psi_group_change (5 samples, 0.71%)</title><rect x="18.0000%" y="501" width="0.7143%" height="15" fill="rgb(248,177,22)"/><text x="18.2500%" y="511.50"></text></g><g><title>record_times (1 samples, 0.14%)</title><rect x="18.5714%" y="485" width="0.1429%" height="15" fill="rgb(215,211,37)"/><text x="18.8214%" y="495.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.14%)</title><rect x="18.5714%" y="469" width="0.1429%" height="15" fill="rgb(241,128,51)"/><text x="18.8214%" y="479.50"></text></g><g><title>sched_clock (1 samples, 0.14%)</title><rect x="18.5714%" y="453" width="0.1429%" height="15" fill="rgb(227,165,31)"/><text x="18.8214%" y="463.50"></text></g><g><title>native_sched_clock (1 samples, 0.14%)</title><rect x="18.5714%" y="437" width="0.1429%" height="15" fill="rgb(228,167,24)"/><text x="18.8214%" y="447.50"></text></g><g><title>put_prev_task_fair (2 samples, 0.29%)</title><rect x="18.7143%" y="517" width="0.2857%" height="15" fill="rgb(228,143,12)"/><text x="18.9643%" y="527.50"></text></g><g><title>put_prev_entity (2 samples, 0.29%)</title><rect x="18.7143%" y="501" width="0.2857%" height="15" fill="rgb(249,149,8)"/><text x="18.9643%" y="511.50"></text></g><g><title>check_cfs_rq_runtime (1 samples, 0.14%)</title><rect x="18.8571%" y="485" width="0.1429%" height="15" fill="rgb(243,35,44)"/><text x="19.1071%" y="495.50"></text></g><g><title>sk_wait_data (19 samples, 2.71%)</title><rect x="16.4286%" y="597" width="2.7143%" height="15" fill="rgb(246,89,9)"/><text x="16.6786%" y="607.50">sk..</text></g><g><title>wait_woken (16 samples, 2.29%)</title><rect x="16.8571%" y="581" width="2.2857%" height="15" fill="rgb(233,213,13)"/><text x="17.1071%" y="591.50">w..</text></g><g><title>schedule_timeout (16 samples, 2.29%)</title><rect x="16.8571%" y="565" width="2.2857%" height="15" fill="rgb(233,141,41)"/><text x="17.1071%" y="575.50">s..</text></g><g><title>schedule (16 samples, 2.29%)</title><rect x="16.8571%" y="549" width="2.2857%" height="15" fill="rgb(239,167,4)"/><text x="17.1071%" y="559.50">s..</text></g><g><title>__schedule (15 samples, 2.14%)</title><rect x="17.0000%" y="533" width="2.1429%" height="15" fill="rgb(209,217,16)"/><text x="17.2500%" y="543.50">_..</text></g><g><title>rcu_note_context_switch (1 samples, 0.14%)</title><rect x="19.0000%" y="517" width="0.1429%" height="15" fill="rgb(219,88,35)"/><text x="19.2500%" y="527.50"></text></g><g><title>skb_copy_datagram_iter (1 samples, 0.14%)</title><rect x="19.1429%" y="597" width="0.1429%" height="15" fill="rgb(220,193,23)"/><text x="19.3929%" y="607.50"></text></g><g><title>__skb_datagram_iter (1 samples, 0.14%)</title><rect x="19.1429%" y="581" width="0.1429%" height="15" fill="rgb(230,90,52)"/><text x="19.3929%" y="591.50"></text></g><g><title>simple_copy_to_iter (1 samples, 0.14%)</title><rect x="19.1429%" y="565" width="0.1429%" height="15" fill="rgb(252,106,19)"/><text x="19.3929%" y="575.50"></text></g><g><title>__check_object_size (1 samples, 0.14%)</title><rect x="19.1429%" y="549" width="0.1429%" height="15" fill="rgb(206,74,20)"/><text x="19.3929%" y="559.50"></text></g><g><title>check_stack_object (1 samples, 0.14%)</title><rect x="19.1429%" y="533" width="0.1429%" height="15" fill="rgb(230,138,44)"/><text x="19.3929%" y="543.50"></text></g><g><title>do_syscall_64 (30 samples, 4.29%)</title><rect x="15.1429%" y="677" width="4.2857%" height="15" fill="rgb(235,182,43)"/><text x="15.3929%" y="687.50">do_sy..</text></g><g><title>__x64_sys_recvfrom (30 samples, 4.29%)</title><rect x="15.1429%" y="661" width="4.2857%" height="15" fill="rgb(242,16,51)"/><text x="15.3929%" y="671.50">__x64..</text></g><g><title>__sys_recvfrom (30 samples, 4.29%)</title><rect x="15.1429%" y="645" width="4.2857%" height="15" fill="rgb(248,9,4)"/><text x="15.3929%" y="655.50">__sys..</text></g><g><title>inet_recvmsg (30 samples, 4.29%)</title><rect x="15.1429%" y="629" width="4.2857%" height="15" fill="rgb(210,31,22)"/><text x="15.3929%" y="639.50">inet_..</text></g><g><title>tcp_recvmsg (30 samples, 4.29%)</title><rect x="15.1429%" y="613" width="4.2857%" height="15" fill="rgb(239,54,39)"/><text x="15.3929%" y="623.50">tcp_r..</text></g><g><title>tcp_cleanup_rbuf (1 samples, 0.14%)</title><rect x="19.2857%" y="597" width="0.1429%" height="15" fill="rgb(230,99,41)"/><text x="19.5357%" y="607.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (35 samples, 5.00%)</title><rect x="14.7143%" y="789" width="5.0000%" height="15" fill="rgb(253,106,12)"/><text x="14.9643%" y="799.50">&lt;std::..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (35 samples, 5.00%)</title><rect x="14.7143%" y="773" width="5.0000%" height="15" fill="rgb(213,46,41)"/><text x="14.9643%" y="783.50">&lt;std::..</text></g><g><title>std::sys_common::net::TcpStream::read (35 samples, 5.00%)</title><rect x="14.7143%" y="757" width="5.0000%" height="15" fill="rgb(215,133,35)"/><text x="14.9643%" y="767.50">std::s..</text></g><g><title>std::sys::unix::net::Socket::read (35 samples, 5.00%)</title><rect x="14.7143%" y="741" width="5.0000%" height="15" fill="rgb(213,28,5)"/><text x="14.9643%" y="751.50">std::s..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (35 samples, 5.00%)</title><rect x="14.7143%" y="725" width="5.0000%" height="15" fill="rgb(215,77,49)"/><text x="14.9643%" y="735.50">std::s..</text></g><g><title>__libc_recv (35 samples, 5.00%)</title><rect x="14.7143%" y="709" width="5.0000%" height="15" fill="rgb(248,100,22)"/><text x="14.9643%" y="719.50">__libc..</text></g><g><title>entry_SYSCALL_64 (33 samples, 4.71%)</title><rect x="15.0000%" y="693" width="4.7143%" height="15" fill="rgb(208,67,9)"/><text x="15.2500%" y="703.50">entry..</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.29%)</title><rect x="19.4286%" y="677" width="0.2857%" height="15" fill="rgb(219,133,21)"/><text x="19.6786%" y="687.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (37 samples, 5.29%)</title><rect x="14.5714%" y="805" width="5.2857%" height="15" fill="rgb(246,46,29)"/><text x="14.8214%" y="815.50">&lt;mysql..</text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (1 samples, 0.14%)</title><rect x="19.7143%" y="789" width="0.1429%" height="15" fill="rgb(246,185,52)"/><text x="19.9643%" y="799.50"></text></g><g><title>mysql::conn::Conn::read_packet (39 samples, 5.57%)</title><rect x="14.4286%" y="821" width="5.5714%" height="15" fill="rgb(252,136,11)"/><text x="14.6786%" y="831.50">mysql::..</text></g><g><title>__GI___libc_free (1 samples, 0.14%)</title><rect x="19.8571%" y="805" width="0.1429%" height="15" fill="rgb(219,138,53)"/><text x="20.1071%" y="815.50"></text></g><g><title>lobsters::main (43 samples, 6.14%)</title><rect x="14.0000%" y="885" width="6.1429%" height="15" fill="rgb(211,51,23)"/><text x="14.2500%" y="895.50">lobsters..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (40 samples, 5.71%)</title><rect x="14.4286%" y="869" width="5.7143%" height="15" fill="rgb(247,221,28)"/><text x="14.6786%" y="879.50">mysql::..</text></g><g><title>mysql::conn::Conn::_query (40 samples, 5.71%)</title><rect x="14.4286%" y="853" width="5.7143%" height="15" fill="rgb(251,222,45)"/><text x="14.6786%" y="863.50">mysql::..</text></g><g><title>mysql::conn::Conn::handle_result_set (40 samples, 5.71%)</title><rect x="14.4286%" y="837" width="5.7143%" height="15" fill="rgb(217,162,53)"/><text x="14.6786%" y="847.50">mysql::..</text></g><g><title>mysql_common::packets::parse_ok_packet (1 samples, 0.14%)</title><rect x="20.0000%" y="821" width="0.1429%" height="15" fill="rgb(229,93,14)"/><text x="20.2500%" y="831.50"></text></g><g><title>mysql_common::io::ReadMysqlExt::read_lenenc_int (1 samples, 0.14%)</title><rect x="20.0000%" y="805" width="0.1429%" height="15" fill="rgb(209,67,49)"/><text x="20.2500%" y="815.50"></text></g><g><title>core::fmt::write (1 samples, 0.14%)</title><rect x="20.1429%" y="821" width="0.1429%" height="15" fill="rgb(213,87,29)"/><text x="20.3929%" y="831.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (1 samples, 0.14%)</title><rect x="20.1429%" y="805" width="0.1429%" height="15" fill="rgb(205,151,52)"/><text x="20.3929%" y="815.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::CreateTableStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.14%)</title><rect x="20.1429%" y="789" width="0.1429%" height="15" fill="rgb(253,215,39)"/><text x="20.3929%" y="799.50"></text></g><g><title>&lt;sql_parser::ast::defs::ddl::ColumnDef as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.14%)</title><rect x="20.1429%" y="773" width="0.1429%" height="15" fill="rgb(221,220,41)"/><text x="20.3929%" y="783.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.14%)</title><rect x="20.1429%" y="757" width="0.1429%" height="15" fill="rgb(218,133,21)"/><text x="20.3929%" y="767.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (2 samples, 0.29%)</title><rect x="20.1429%" y="869" width="0.2857%" height="15" fill="rgb(221,193,43)"/><text x="20.3929%" y="879.50"></text></g><g><title>decor::Shim::create_schema (2 samples, 0.29%)</title><rect x="20.1429%" y="853" width="0.2857%" height="15" fill="rgb(240,128,52)"/><text x="20.3929%" y="863.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query_drop (2 samples, 0.29%)</title><rect x="20.1429%" y="837" width="0.2857%" height="15" fill="rgb(253,114,12)"/><text x="20.3929%" y="847.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (1 samples, 0.14%)</title><rect x="20.2857%" y="821" width="0.1429%" height="15" fill="rgb(215,223,47)"/><text x="20.5357%" y="831.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (1 samples, 0.14%)</title><rect x="20.2857%" y="805" width="0.1429%" height="15" fill="rgb(248,225,23)"/><text x="20.5357%" y="815.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.14%)</title><rect x="20.2857%" y="789" width="0.1429%" height="15" fill="rgb(250,108,0)"/><text x="20.5357%" y="799.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.14%)</title><rect x="20.2857%" y="773" width="0.1429%" height="15" fill="rgb(228,208,7)"/><text x="20.5357%" y="783.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.14%)</title><rect x="20.2857%" y="757" width="0.1429%" height="15" fill="rgb(244,45,10)"/><text x="20.5357%" y="767.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.14%)</title><rect x="20.2857%" y="741" width="0.1429%" height="15" fill="rgb(207,125,25)"/><text x="20.5357%" y="751.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1 samples, 0.14%)</title><rect x="20.2857%" y="725" width="0.1429%" height="15" fill="rgb(210,195,18)"/><text x="20.5357%" y="735.50"></text></g><g><title>__libc_send (1 samples, 0.14%)</title><rect x="20.2857%" y="709" width="0.1429%" height="15" fill="rgb(249,80,12)"/><text x="20.5357%" y="719.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="20.2857%" y="693" width="0.1429%" height="15" fill="rgb(221,65,9)"/><text x="20.5357%" y="703.50"></text></g><g><title>do_syscall_64 (1 samples, 0.14%)</title><rect x="20.2857%" y="677" width="0.1429%" height="15" fill="rgb(235,49,36)"/><text x="20.5357%" y="687.50"></text></g><g><title>__x64_sys_sendto (1 samples, 0.14%)</title><rect x="20.2857%" y="661" width="0.1429%" height="15" fill="rgb(225,32,20)"/><text x="20.5357%" y="671.50"></text></g><g><title>__sys_sendto (1 samples, 0.14%)</title><rect x="20.2857%" y="645" width="0.1429%" height="15" fill="rgb(215,141,46)"/><text x="20.5357%" y="655.50"></text></g><g><title>sock_sendmsg (1 samples, 0.14%)</title><rect x="20.2857%" y="629" width="0.1429%" height="15" fill="rgb(250,160,47)"/><text x="20.5357%" y="639.50"></text></g><g><title>tcp_sendmsg (1 samples, 0.14%)</title><rect x="20.2857%" y="613" width="0.1429%" height="15" fill="rgb(216,222,40)"/><text x="20.5357%" y="623.50"></text></g><g><title>tcp_sendmsg_locked (1 samples, 0.14%)</title><rect x="20.2857%" y="597" width="0.1429%" height="15" fill="rgb(234,217,39)"/><text x="20.5357%" y="607.50"></text></g><g><title>__tcp_push_pending_frames (1 samples, 0.14%)</title><rect x="20.2857%" y="581" width="0.1429%" height="15" fill="rgb(207,178,40)"/><text x="20.5357%" y="591.50"></text></g><g><title>tcp_write_xmit (1 samples, 0.14%)</title><rect x="20.2857%" y="565" width="0.1429%" height="15" fill="rgb(221,136,13)"/><text x="20.5357%" y="575.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.14%)</title><rect x="20.2857%" y="549" width="0.1429%" height="15" fill="rgb(249,199,10)"/><text x="20.5357%" y="559.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.14%)</title><rect x="20.2857%" y="533" width="0.1429%" height="15" fill="rgb(249,222,13)"/><text x="20.5357%" y="543.50"></text></g><g><title>ip_output (1 samples, 0.14%)</title><rect x="20.2857%" y="517" width="0.1429%" height="15" fill="rgb(244,185,38)"/><text x="20.5357%" y="527.50"></text></g><g><title>ip_finish_output2 (1 samples, 0.14%)</title><rect x="20.2857%" y="501" width="0.1429%" height="15" fill="rgb(236,202,9)"/><text x="20.5357%" y="511.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.14%)</title><rect x="20.2857%" y="485" width="0.1429%" height="15" fill="rgb(250,229,37)"/><text x="20.5357%" y="495.50"></text></g><g><title>do_softirq (1 samples, 0.14%)</title><rect x="20.2857%" y="469" width="0.1429%" height="15" fill="rgb(206,174,23)"/><text x="20.5357%" y="479.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.14%)</title><rect x="20.2857%" y="453" width="0.1429%" height="15" fill="rgb(211,33,43)"/><text x="20.5357%" y="463.50"></text></g><g><title>__do_softirq (1 samples, 0.14%)</title><rect x="20.2857%" y="437" width="0.1429%" height="15" fill="rgb(245,58,50)"/><text x="20.5357%" y="447.50"></text></g><g><title>net_rx_action (1 samples, 0.14%)</title><rect x="20.2857%" y="421" width="0.1429%" height="15" fill="rgb(244,68,36)"/><text x="20.5357%" y="431.50"></text></g><g><title>process_backlog (1 samples, 0.14%)</title><rect x="20.2857%" y="405" width="0.1429%" height="15" fill="rgb(232,229,15)"/><text x="20.5357%" y="415.50"></text></g><g><title>__netif_receive_skb_one_core (1 samples, 0.14%)</title><rect x="20.2857%" y="389" width="0.1429%" height="15" fill="rgb(254,30,23)"/><text x="20.5357%" y="399.50"></text></g><g><title>ip_rcv (1 samples, 0.14%)</title><rect x="20.2857%" y="373" width="0.1429%" height="15" fill="rgb(235,160,14)"/><text x="20.5357%" y="383.50"></text></g><g><title>ip_local_deliver (1 samples, 0.14%)</title><rect x="20.2857%" y="357" width="0.1429%" height="15" fill="rgb(212,155,44)"/><text x="20.5357%" y="367.50"></text></g><g><title>ip_local_deliver_finish (1 samples, 0.14%)</title><rect x="20.2857%" y="341" width="0.1429%" height="15" fill="rgb(226,2,50)"/><text x="20.5357%" y="351.50"></text></g><g><title>ip_protocol_deliver_rcu (1 samples, 0.14%)</title><rect x="20.2857%" y="325" width="0.1429%" height="15" fill="rgb(234,177,6)"/><text x="20.5357%" y="335.50"></text></g><g><title>tcp_v4_rcv (1 samples, 0.14%)</title><rect x="20.2857%" y="309" width="0.1429%" height="15" fill="rgb(217,24,9)"/><text x="20.5357%" y="319.50"></text></g><g><title>tcp_v4_do_rcv (1 samples, 0.14%)</title><rect x="20.2857%" y="293" width="0.1429%" height="15" fill="rgb(220,13,46)"/><text x="20.5357%" y="303.50"></text></g><g><title>tcp_rcv_established (1 samples, 0.14%)</title><rect x="20.2857%" y="277" width="0.1429%" height="15" fill="rgb(239,221,27)"/><text x="20.5357%" y="287.50"></text></g><g><title>tcp_ack (1 samples, 0.14%)</title><rect x="20.2857%" y="261" width="0.1429%" height="15" fill="rgb(222,198,25)"/><text x="20.5357%" y="271.50"></text></g><g><title>tcp_rate_gen (1 samples, 0.14%)</title><rect x="20.2857%" y="245" width="0.1429%" height="15" fill="rgb(211,99,13)"/><text x="20.5357%" y="255.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.29%)</title><rect x="20.4286%" y="821" width="0.2857%" height="15" fill="rgb(232,111,31)"/><text x="20.6786%" y="831.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.29%)</title><rect x="20.4286%" y="805" width="0.2857%" height="15" fill="rgb(245,82,37)"/><text x="20.6786%" y="815.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.29%)</title><rect x="20.4286%" y="789" width="0.2857%" height="15" fill="rgb(227,149,46)"/><text x="20.6786%" y="799.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.29%)</title><rect x="20.4286%" y="773" width="0.2857%" height="15" fill="rgb(218,36,50)"/><text x="20.6786%" y="783.50"></text></g><g><title>_int_malloc (2 samples, 0.29%)</title><rect x="20.4286%" y="757" width="0.2857%" height="15" fill="rgb(226,80,48)"/><text x="20.6786%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (3 samples, 0.43%)</title><rect x="20.4286%" y="837" width="0.4286%" height="15" fill="rgb(238,224,15)"/><text x="20.6786%" y="847.50"></text></g><g><title>__rust_alloc (1 samples, 0.14%)</title><rect x="20.7143%" y="821" width="0.1429%" height="15" fill="rgb(241,136,10)"/><text x="20.9643%" y="831.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="20.8571%" y="821" width="0.1429%" height="15" fill="rgb(208,32,45)"/><text x="21.1071%" y="831.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="20.8571%" y="805" width="0.1429%" height="15" fill="rgb(207,135,9)"/><text x="21.1071%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="20.8571%" y="789" width="0.1429%" height="15" fill="rgb(206,86,44)"/><text x="21.1071%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.14%)</title><rect x="20.8571%" y="773" width="0.1429%" height="15" fill="rgb(245,177,15)"/><text x="21.1071%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.14%)</title><rect x="20.8571%" y="757" width="0.1429%" height="15" fill="rgb(206,64,50)"/><text x="21.1071%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.14%)</title><rect x="20.8571%" y="741" width="0.1429%" height="15" fill="rgb(234,36,40)"/><text x="21.1071%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.14%)</title><rect x="20.8571%" y="725" width="0.1429%" height="15" fill="rgb(213,64,8)"/><text x="21.1071%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="20.8571%" y="709" width="0.1429%" height="15" fill="rgb(210,75,36)"/><text x="21.1071%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.14%)</title><rect x="20.8571%" y="693" width="0.1429%" height="15" fill="rgb(229,88,21)"/><text x="21.1071%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.14%)</title><rect x="20.8571%" y="677" width="0.1429%" height="15" fill="rgb(252,204,47)"/><text x="21.1071%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.14%)</title><rect x="20.8571%" y="661" width="0.1429%" height="15" fill="rgb(208,77,27)"/><text x="21.1071%" y="671.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.14%)</title><rect x="20.8571%" y="645" width="0.1429%" height="15" fill="rgb(221,76,26)"/><text x="21.1071%" y="655.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="20.8571%" y="629" width="0.1429%" height="15" fill="rgb(225,139,18)"/><text x="21.1071%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.14%)</title><rect x="21.1429%" y="805" width="0.1429%" height="15" fill="rgb(230,137,11)"/><text x="21.3929%" y="815.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.14%)</title><rect x="21.1429%" y="789" width="0.1429%" height="15" fill="rgb(212,28,1)"/><text x="21.3929%" y="799.50"></text></g><g><title>_int_realloc (1 samples, 0.14%)</title><rect x="21.1429%" y="773" width="0.1429%" height="15" fill="rgb(248,164,17)"/><text x="21.3929%" y="783.50"></text></g><g><title>_int_malloc (1 samples, 0.14%)</title><rect x="21.1429%" y="757" width="0.1429%" height="15" fill="rgb(222,171,42)"/><text x="21.3929%" y="767.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (9 samples, 1.29%)</title><rect x="20.1429%" y="885" width="1.2857%" height="15" fill="rgb(243,84,45)"/><text x="20.3929%" y="895.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (7 samples, 1.00%)</title><rect x="20.4286%" y="869" width="1.0000%" height="15" fill="rgb(252,49,23)"/><text x="20.6786%" y="879.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (7 samples, 1.00%)</title><rect x="20.4286%" y="853" width="1.0000%" height="15" fill="rgb(215,19,7)"/><text x="20.6786%" y="863.50"></text></g><g><title>sql_parser::parser::parse_statements (4 samples, 0.57%)</title><rect x="20.8571%" y="837" width="0.5714%" height="15" fill="rgb(238,81,41)"/><text x="21.1071%" y="847.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (3 samples, 0.43%)</title><rect x="21.0000%" y="821" width="0.4286%" height="15" fill="rgb(210,199,37)"/><text x="21.2500%" y="831.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_number (1 samples, 0.14%)</title><rect x="21.2857%" y="805" width="0.1429%" height="15" fill="rgb(244,192,49)"/><text x="21.5357%" y="815.50"></text></g><g><title>sql_parser::tokenizer::PeekableChars::next (1 samples, 0.14%)</title><rect x="21.2857%" y="789" width="0.1429%" height="15" fill="rgb(226,211,11)"/><text x="21.5357%" y="799.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.14%)</title><rect x="21.4286%" y="885" width="0.1429%" height="15" fill="rgb(236,162,54)"/><text x="21.6786%" y="895.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.29%)</title><rect x="21.5714%" y="885" width="0.2857%" height="15" fill="rgb(220,229,9)"/><text x="21.8214%" y="895.50"></text></g><g><title>regex::exec::ExecBuilder::build (1 samples, 0.14%)</title><rect x="21.8571%" y="885" width="0.1429%" height="15" fill="rgb(250,87,22)"/><text x="22.1071%" y="895.50"></text></g><g><title>regex::compile::Compiler::compile (1 samples, 0.14%)</title><rect x="21.8571%" y="869" width="0.1429%" height="15" fill="rgb(239,43,17)"/><text x="22.1071%" y="879.50"></text></g><g><title>regex::compile::Compiler::c (1 samples, 0.14%)</title><rect x="21.8571%" y="853" width="0.1429%" height="15" fill="rgb(231,177,25)"/><text x="22.1071%" y="863.50"></text></g><g><title>regex::compile::Compiler::c_repeat_range (1 samples, 0.14%)</title><rect x="21.8571%" y="837" width="0.1429%" height="15" fill="rgb(219,179,1)"/><text x="22.1071%" y="847.50"></text></g><g><title>regex::compile::Compiler::c_class (1 samples, 0.14%)</title><rect x="21.8571%" y="821" width="0.1429%" height="15" fill="rgb(238,219,53)"/><text x="22.1071%" y="831.50"></text></g><g><title>regex::compile::Compiler::fill (1 samples, 0.14%)</title><rect x="21.8571%" y="805" width="0.1429%" height="15" fill="rgb(232,167,36)"/><text x="22.1071%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (17 samples, 2.43%)</title><rect x="22.0000%" y="885" width="2.4286%" height="15" fill="rgb(244,19,51)"/><text x="22.2500%" y="895.50">sq..</text></g><g><title>sql_parser::parser::Parser::parse_query_body (17 samples, 2.43%)</title><rect x="22.0000%" y="869" width="2.4286%" height="15" fill="rgb(224,6,22)"/><text x="22.2500%" y="879.50">sq..</text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (17 samples, 2.43%)</title><rect x="22.0000%" y="853" width="2.4286%" height="15" fill="rgb(224,145,5)"/><text x="22.2500%" y="863.50">sq..</text></g><g><title>sql_parser::parser::Parser::check_descent (17 samples, 2.43%)</title><rect x="22.0000%" y="837" width="2.4286%" height="15" fill="rgb(234,130,49)"/><text x="22.2500%" y="847.50">sq..</text></g><g><title>sql_parser::parser::Parser::parse_prefix (17 samples, 2.43%)</title><rect x="22.0000%" y="821" width="2.4286%" height="15" fill="rgb(254,6,2)"/><text x="22.2500%" y="831.50">sq..</text></g><g><title>sql_parser::parser::Parser::parse_data_type (17 samples, 2.43%)</title><rect x="22.0000%" y="805" width="2.4286%" height="15" fill="rgb(208,96,46)"/><text x="22.2500%" y="815.50">sq..</text></g><g><title>sql_parser::parser::Parser::expected (17 samples, 2.43%)</title><rect x="22.0000%" y="789" width="2.4286%" height="15" fill="rgb(239,3,39)"/><text x="22.2500%" y="799.50">sq..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (17 samples, 2.43%)</title><rect x="22.0000%" y="773" width="2.4286%" height="15" fill="rgb(233,210,1)"/><text x="22.2500%" y="783.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (17 samples, 2.43%)</title><rect x="22.0000%" y="757" width="2.4286%" height="15" fill="rgb(244,137,37)"/><text x="22.2500%" y="767.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (17 samples, 2.43%)</title><rect x="22.0000%" y="741" width="2.4286%" height="15" fill="rgb(240,136,2)"/><text x="22.2500%" y="751.50">al..</text></g><g><title>alloc::slice::hack::to_vec (17 samples, 2.43%)</title><rect x="22.0000%" y="725" width="2.4286%" height="15" fill="rgb(239,18,37)"/><text x="22.2500%" y="735.50">al..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (17 samples, 2.43%)</title><rect x="22.0000%" y="709" width="2.4286%" height="15" fill="rgb(218,185,22)"/><text x="22.2500%" y="719.50">al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (17 samples, 2.43%)</title><rect x="22.0000%" y="693" width="2.4286%" height="15" fill="rgb(225,218,4)"/><text x="22.2500%" y="703.50">&lt;a..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (17 samples, 2.43%)</title><rect x="22.0000%" y="677" width="2.4286%" height="15" fill="rgb(230,182,32)"/><text x="22.2500%" y="687.50">al..</text></g><g><title>core::intrinsics::copy_nonoverlapping (17 samples, 2.43%)</title><rect x="22.0000%" y="661" width="2.4286%" height="15" fill="rgb(242,56,43)"/><text x="22.2500%" y="671.50">co..</text></g><g><title>__memmove_avx_unaligned_erms (17 samples, 2.43%)</title><rect x="22.0000%" y="645" width="2.4286%" height="15" fill="rgb(233,99,24)"/><text x="22.2500%" y="655.50">__..</text></g><g><title>apic_timer_interrupt (1 samples, 0.14%)</title><rect x="24.2857%" y="629" width="0.1429%" height="15" fill="rgb(234,209,42)"/><text x="24.5357%" y="639.50"></text></g><g><title>smp_apic_timer_interrupt (1 samples, 0.14%)</title><rect x="24.2857%" y="613" width="0.1429%" height="15" fill="rgb(227,7,12)"/><text x="24.5357%" y="623.50"></text></g><g><title>irq_exit (1 samples, 0.14%)</title><rect x="24.2857%" y="597" width="0.1429%" height="15" fill="rgb(245,203,43)"/><text x="24.5357%" y="607.50"></text></g><g><title>__do_softirq (1 samples, 0.14%)</title><rect x="24.2857%" y="581" width="0.1429%" height="15" fill="rgb(238,205,33)"/><text x="24.5357%" y="591.50"></text></g><g><title>run_timer_softirq (1 samples, 0.14%)</title><rect x="24.2857%" y="565" width="0.1429%" height="15" fill="rgb(231,56,7)"/><text x="24.5357%" y="575.50"></text></g><g><title>__run_timers (1 samples, 0.14%)</title><rect x="24.2857%" y="549" width="0.1429%" height="15" fill="rgb(244,186,29)"/><text x="24.5357%" y="559.50"></text></g><g><title>malloc_consolidate (1 samples, 0.14%)</title><rect x="24.4286%" y="581" width="0.1429%" height="15" fill="rgb(234,111,31)"/><text x="24.6786%" y="591.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (2 samples, 0.29%)</title><rect x="24.4286%" y="885" width="0.2857%" height="15" fill="rgb(241,149,10)"/><text x="24.6786%" y="895.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (2 samples, 0.29%)</title><rect x="24.4286%" y="869" width="0.2857%" height="15" fill="rgb(249,206,44)"/><text x="24.6786%" y="879.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (2 samples, 0.29%)</title><rect x="24.4286%" y="853" width="0.2857%" height="15" fill="rgb(251,153,30)"/><text x="24.6786%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (2 samples, 0.29%)</title><rect x="24.4286%" y="837" width="0.2857%" height="15" fill="rgb(239,152,38)"/><text x="24.6786%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (2 samples, 0.29%)</title><rect x="24.4286%" y="821" width="0.2857%" height="15" fill="rgb(249,139,47)"/><text x="24.6786%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::expected (2 samples, 0.29%)</title><rect x="24.4286%" y="805" width="0.2857%" height="15" fill="rgb(244,64,35)"/><text x="24.6786%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.29%)</title><rect x="24.4286%" y="789" width="0.2857%" height="15" fill="rgb(216,46,15)"/><text x="24.6786%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.29%)</title><rect x="24.4286%" y="773" width="0.2857%" height="15" fill="rgb(250,74,19)"/><text x="24.6786%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.29%)</title><rect x="24.4286%" y="757" width="0.2857%" height="15" fill="rgb(249,42,33)"/><text x="24.6786%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.29%)</title><rect x="24.4286%" y="741" width="0.2857%" height="15" fill="rgb(242,149,17)"/><text x="24.6786%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.29%)</title><rect x="24.4286%" y="725" width="0.2857%" height="15" fill="rgb(244,29,21)"/><text x="24.6786%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.29%)</title><rect x="24.4286%" y="709" width="0.2857%" height="15" fill="rgb(220,130,37)"/><text x="24.6786%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.29%)</title><rect x="24.4286%" y="693" width="0.2857%" height="15" fill="rgb(211,67,2)"/><text x="24.6786%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.29%)</title><rect x="24.4286%" y="677" width="0.2857%" height="15" fill="rgb(235,68,52)"/><text x="24.6786%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.29%)</title><rect x="24.4286%" y="661" width="0.2857%" height="15" fill="rgb(246,142,3)"/><text x="24.6786%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.29%)</title><rect x="24.4286%" y="645" width="0.2857%" height="15" fill="rgb(241,25,7)"/><text x="24.6786%" y="655.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.29%)</title><rect x="24.4286%" y="629" width="0.2857%" height="15" fill="rgb(242,119,39)"/><text x="24.6786%" y="639.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.29%)</title><rect x="24.4286%" y="613" width="0.2857%" height="15" fill="rgb(241,98,45)"/><text x="24.6786%" y="623.50"></text></g><g><title>_int_malloc (2 samples, 0.29%)</title><rect x="24.4286%" y="597" width="0.2857%" height="15" fill="rgb(254,28,30)"/><text x="24.6786%" y="607.50"></text></g><g><title>sysmalloc (1 samples, 0.14%)</title><rect x="24.5714%" y="581" width="0.1429%" height="15" fill="rgb(241,142,54)"/><text x="24.8214%" y="591.50"></text></g><g><title>__GI___mprotect (1 samples, 0.14%)</title><rect x="24.5714%" y="565" width="0.1429%" height="15" fill="rgb(222,85,15)"/><text x="24.8214%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="24.5714%" y="549" width="0.1429%" height="15" fill="rgb(210,85,47)"/><text x="24.8214%" y="559.50"></text></g><g><title>do_syscall_64 (1 samples, 0.14%)</title><rect x="24.5714%" y="533" width="0.1429%" height="15" fill="rgb(224,206,25)"/><text x="24.8214%" y="543.50"></text></g><g><title>__x64_sys_mprotect (1 samples, 0.14%)</title><rect x="24.5714%" y="517" width="0.1429%" height="15" fill="rgb(243,201,19)"/><text x="24.8214%" y="527.50"></text></g><g><title>do_mprotect_pkey (1 samples, 0.14%)</title><rect x="24.5714%" y="501" width="0.1429%" height="15" fill="rgb(236,59,4)"/><text x="24.8214%" y="511.50"></text></g><g><title>mprotect_fixup (1 samples, 0.14%)</title><rect x="24.5714%" y="485" width="0.1429%" height="15" fill="rgb(254,179,45)"/><text x="24.8214%" y="495.50"></text></g><g><title>perf_event_mmap (1 samples, 0.14%)</title><rect x="24.5714%" y="469" width="0.1429%" height="15" fill="rgb(226,14,10)"/><text x="24.8214%" y="479.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.14%)</title><rect x="24.5714%" y="453" width="0.1429%" height="15" fill="rgb(244,27,41)"/><text x="24.8214%" y="463.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.14%)</title><rect x="24.5714%" y="437" width="0.1429%" height="15" fill="rgb(235,35,32)"/><text x="24.8214%" y="447.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.14%)</title><rect x="24.5714%" y="421" width="0.1429%" height="15" fill="rgb(218,68,31)"/><text x="24.8214%" y="431.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (2 samples, 0.29%)</title><rect x="24.7143%" y="885" width="0.2857%" height="15" fill="rgb(207,120,37)"/><text x="24.9643%" y="895.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (2 samples, 0.29%)</title><rect x="24.7143%" y="869" width="0.2857%" height="15" fill="rgb(227,98,0)"/><text x="24.9643%" y="879.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (2 samples, 0.29%)</title><rect x="24.7143%" y="853" width="0.2857%" height="15" fill="rgb(207,7,3)"/><text x="24.9643%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (2 samples, 0.29%)</title><rect x="24.7143%" y="837" width="0.2857%" height="15" fill="rgb(206,98,19)"/><text x="24.9643%" y="847.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.29%)</title><rect x="24.7143%" y="821" width="0.2857%" height="15" fill="rgb(217,5,26)"/><text x="24.9643%" y="831.50"></text></g><g><title>sql_parser::parser::parse_statements (1 samples, 0.14%)</title><rect x="25.0000%" y="885" width="0.1429%" height="15" fill="rgb(235,190,38)"/><text x="25.2500%" y="895.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (1 samples, 0.14%)</title><rect x="25.0000%" y="869" width="0.1429%" height="15" fill="rgb(247,86,24)"/><text x="25.2500%" y="879.50"></text></g><g><title>sql_parser::parser::Parser::parse_columns (1 samples, 0.14%)</title><rect x="25.0000%" y="853" width="0.1429%" height="15" fill="rgb(205,101,16)"/><text x="25.2500%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.14%)</title><rect x="25.0000%" y="837" width="0.1429%" height="15" fill="rgb(246,168,33)"/><text x="25.2500%" y="847.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="25.0000%" y="821" width="0.1429%" height="15" fill="rgb(231,114,1)"/><text x="25.2500%" y="831.50"></text></g><g><title>start_thread (1 samples, 0.14%)</title><rect x="25.1429%" y="885" width="0.1429%" height="15" fill="rgb(207,184,53)"/><text x="25.3929%" y="895.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.14%)</title><rect x="25.1429%" y="869" width="0.1429%" height="15" fill="rgb(224,95,51)"/><text x="25.3929%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (1 samples, 0.14%)</title><rect x="25.1429%" y="853" width="0.1429%" height="15" fill="rgb(212,188,45)"/><text x="25.3929%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (1 samples, 0.14%)</title><rect x="25.1429%" y="837" width="0.1429%" height="15" fill="rgb(223,154,38)"/><text x="25.3929%" y="847.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (1 samples, 0.14%)</title><rect x="25.1429%" y="821" width="0.1429%" height="15" fill="rgb(251,22,52)"/><text x="25.3929%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.14%)</title><rect x="25.1429%" y="805" width="0.1429%" height="15" fill="rgb(229,209,22)"/><text x="25.3929%" y="815.50"></text></g><g><title>decor::Shim::run_on_tcp (1 samples, 0.14%)</title><rect x="25.1429%" y="789" width="0.1429%" height="15" fill="rgb(234,138,34)"/><text x="25.3929%" y="799.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (1 samples, 0.14%)</title><rect x="25.1429%" y="773" width="0.1429%" height="15" fill="rgb(212,95,11)"/><text x="25.3929%" y="783.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (1 samples, 0.14%)</title><rect x="25.1429%" y="757" width="0.1429%" height="15" fill="rgb(240,179,47)"/><text x="25.3929%" y="767.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (1 samples, 0.14%)</title><rect x="25.1429%" y="741" width="0.1429%" height="15" fill="rgb(240,163,11)"/><text x="25.3929%" y="751.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.14%)</title><rect x="25.1429%" y="725" width="0.1429%" height="15" fill="rgb(236,37,12)"/><text x="25.3929%" y="735.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.14%)</title><rect x="25.1429%" y="709" width="0.1429%" height="15" fill="rgb(232,164,16)"/><text x="25.3929%" y="719.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.14%)</title><rect x="25.1429%" y="693" width="0.1429%" height="15" fill="rgb(244,205,15)"/><text x="25.3929%" y="703.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.14%)</title><rect x="25.1429%" y="677" width="0.1429%" height="15" fill="rgb(223,117,47)"/><text x="25.3929%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.14%)</title><rect x="25.1429%" y="661" width="0.1429%" height="15" fill="rgb(244,107,35)"/><text x="25.3929%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.14%)</title><rect x="25.2857%" y="885" width="0.1429%" height="15" fill="rgb(205,140,8)"/><text x="25.5357%" y="895.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.14%)</title><rect x="25.4286%" y="885" width="0.1429%" height="15" fill="rgb(228,84,46)"/><text x="25.6786%" y="895.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (1 samples, 0.14%)</title><rect x="25.5714%" y="885" width="0.1429%" height="15" fill="rgb(254,188,9)"/><text x="25.8214%" y="895.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.14%)</title><rect x="25.5714%" y="869" width="0.1429%" height="15" fill="rgb(206,112,54)"/><text x="25.8214%" y="879.50"></text></g><g><title>lobsters::main (1 samples, 0.14%)</title><rect x="25.5714%" y="853" width="0.1429%" height="15" fill="rgb(216,84,49)"/><text x="25.8214%" y="863.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (1 samples, 0.14%)</title><rect x="25.5714%" y="837" width="0.1429%" height="15" fill="rgb(214,194,35)"/><text x="25.8214%" y="847.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="25.5714%" y="821" width="0.1429%" height="15" fill="rgb(249,28,3)"/><text x="25.8214%" y="831.50"></text></g><g><title>mysql::conn::query_result::QueryResult&lt;T&gt;::handle_next (1 samples, 0.14%)</title><rect x="25.5714%" y="805" width="0.1429%" height="15" fill="rgb(222,56,52)"/><text x="25.8214%" y="815.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.14%)</title><rect x="25.7143%" y="725" width="0.1429%" height="15" fill="rgb(245,217,50)"/><text x="25.9643%" y="735.50"></text></g><g><title>std::rt::lang_start_internal (3 samples, 0.43%)</title><rect x="25.7143%" y="885" width="0.4286%" height="15" fill="rgb(213,201,24)"/><text x="25.9643%" y="895.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.43%)</title><rect x="25.7143%" y="869" width="0.4286%" height="15" fill="rgb(248,116,28)"/><text x="25.9643%" y="879.50"></text></g><g><title>std::panicking::try (3 samples, 0.43%)</title><rect x="25.7143%" y="853" width="0.4286%" height="15" fill="rgb(219,72,43)"/><text x="25.9643%" y="863.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.43%)</title><rect x="25.7143%" y="837" width="0.4286%" height="15" fill="rgb(209,138,14)"/><text x="25.9643%" y="847.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (3 samples, 0.43%)</title><rect x="25.7143%" y="821" width="0.4286%" height="15" fill="rgb(222,18,33)"/><text x="25.9643%" y="831.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (3 samples, 0.43%)</title><rect x="25.7143%" y="805" width="0.4286%" height="15" fill="rgb(213,199,7)"/><text x="25.9643%" y="815.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3 samples, 0.43%)</title><rect x="25.7143%" y="789" width="0.4286%" height="15" fill="rgb(250,110,10)"/><text x="25.9643%" y="799.50"></text></g><g><title>lobsters::main (3 samples, 0.43%)</title><rect x="25.7143%" y="773" width="0.4286%" height="15" fill="rgb(248,123,6)"/><text x="25.9643%" y="783.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (3 samples, 0.43%)</title><rect x="25.7143%" y="757" width="0.4286%" height="15" fill="rgb(206,91,31)"/><text x="25.9643%" y="767.50"></text></g><g><title>mysql::conn::Conn::_query (3 samples, 0.43%)</title><rect x="25.7143%" y="741" width="0.4286%" height="15" fill="rgb(211,154,13)"/><text x="25.9643%" y="751.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (2 samples, 0.29%)</title><rect x="25.8571%" y="725" width="0.2857%" height="15" fill="rgb(225,148,7)"/><text x="26.1071%" y="735.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::encode (2 samples, 0.29%)</title><rect x="25.8571%" y="709" width="0.2857%" height="15" fill="rgb(220,160,43)"/><text x="26.1071%" y="719.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::encode (2 samples, 0.29%)</title><rect x="25.8571%" y="693" width="0.2857%" height="15" fill="rgb(213,52,39)"/><text x="26.1071%" y="703.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (2 samples, 0.29%)</title><rect x="25.8571%" y="677" width="0.2857%" height="15" fill="rgb(243,137,7)"/><text x="26.1071%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.14%)</title><rect x="26.0000%" y="661" width="0.1429%" height="15" fill="rgb(230,79,13)"/><text x="26.2500%" y="671.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.14%)</title><rect x="26.1429%" y="885" width="0.1429%" height="15" fill="rgb(247,105,23)"/><text x="26.3929%" y="895.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (1 samples, 0.14%)</title><rect x="26.1429%" y="869" width="0.1429%" height="15" fill="rgb(223,179,41)"/><text x="26.3929%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (1 samples, 0.14%)</title><rect x="26.1429%" y="853" width="0.1429%" height="15" fill="rgb(218,9,34)"/><text x="26.3929%" y="863.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (1 samples, 0.14%)</title><rect x="26.1429%" y="837" width="0.1429%" height="15" fill="rgb(222,106,8)"/><text x="26.3929%" y="847.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.14%)</title><rect x="26.1429%" y="821" width="0.1429%" height="15" fill="rgb(211,220,0)"/><text x="26.3929%" y="831.50"></text></g><g><title>decor::Shim::run_on_tcp (1 samples, 0.14%)</title><rect x="26.1429%" y="805" width="0.1429%" height="15" fill="rgb(229,52,16)"/><text x="26.3929%" y="815.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (1 samples, 0.14%)</title><rect x="26.1429%" y="789" width="0.1429%" height="15" fill="rgb(212,155,18)"/><text x="26.3929%" y="799.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (1 samples, 0.14%)</title><rect x="26.1429%" y="773" width="0.1429%" height="15" fill="rgb(242,21,14)"/><text x="26.3929%" y="783.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (1 samples, 0.14%)</title><rect x="26.1429%" y="757" width="0.1429%" height="15" fill="rgb(222,19,48)"/><text x="26.3929%" y="767.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.14%)</title><rect x="26.1429%" y="741" width="0.1429%" height="15" fill="rgb(232,45,27)"/><text x="26.3929%" y="751.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.14%)</title><rect x="26.1429%" y="725" width="0.1429%" height="15" fill="rgb(249,103,42)"/><text x="26.3929%" y="735.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.14%)</title><rect x="26.1429%" y="709" width="0.1429%" height="15" fill="rgb(246,81,33)"/><text x="26.3929%" y="719.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="26.1429%" y="693" width="0.1429%" height="15" fill="rgb(252,33,42)"/><text x="26.3929%" y="703.50"></text></g><g><title>import_single_range (1 samples, 0.14%)</title><rect x="26.4286%" y="581" width="0.1429%" height="15" fill="rgb(209,212,41)"/><text x="26.6786%" y="591.50"></text></g><g><title>__kfree_skb (2 samples, 0.29%)</title><rect x="27.1429%" y="549" width="0.2857%" height="15" fill="rgb(207,154,6)"/><text x="27.3929%" y="559.50"></text></g><g><title>skb_release_head_state (2 samples, 0.29%)</title><rect x="27.1429%" y="533" width="0.2857%" height="15" fill="rgb(223,64,47)"/><text x="27.3929%" y="543.50"></text></g><g><title>dst_release (2 samples, 0.29%)</title><rect x="27.1429%" y="517" width="0.2857%" height="15" fill="rgb(211,161,38)"/><text x="27.3929%" y="527.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.14%)</title><rect x="27.4286%" y="533" width="0.1429%" height="15" fill="rgb(219,138,40)"/><text x="27.6786%" y="543.50"></text></g><g><title>preempt_count_sub (1 samples, 0.14%)</title><rect x="27.4286%" y="517" width="0.1429%" height="15" fill="rgb(241,228,46)"/><text x="27.6786%" y="527.50"></text></g><g><title>_raw_spin_unlock_irqrestore (1 samples, 0.14%)</title><rect x="27.5714%" y="533" width="0.1429%" height="15" fill="rgb(223,209,38)"/><text x="27.8214%" y="543.50"></text></g><g><title>remove_wait_queue (2 samples, 0.29%)</title><rect x="27.7143%" y="533" width="0.2857%" height="15" fill="rgb(236,164,45)"/><text x="27.9643%" y="543.50"></text></g><g><title>_raw_spin_lock_irqsave (2 samples, 0.29%)</title><rect x="27.7143%" y="517" width="0.2857%" height="15" fill="rgb(231,15,5)"/><text x="27.9643%" y="527.50"></text></g><g><title>clear_buddies (1 samples, 0.14%)</title><rect x="28.4286%" y="437" width="0.1429%" height="15" fill="rgb(252,35,15)"/><text x="28.6786%" y="447.50"></text></g><g><title>update_curr (2 samples, 0.29%)</title><rect x="28.5714%" y="437" width="0.2857%" height="15" fill="rgb(248,181,18)"/><text x="28.8214%" y="447.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.14%)</title><rect x="28.8571%" y="421" width="0.1429%" height="15" fill="rgb(233,39,42)"/><text x="29.1071%" y="431.50"></text></g><g><title>dequeue_task_fair (6 samples, 0.86%)</title><rect x="28.2857%" y="469" width="0.8571%" height="15" fill="rgb(238,110,33)"/><text x="28.5357%" y="479.50"></text></g><g><title>dequeue_entity (5 samples, 0.71%)</title><rect x="28.4286%" y="453" width="0.7143%" height="15" fill="rgb(233,195,10)"/><text x="28.6786%" y="463.50"></text></g><g><title>update_load_avg (2 samples, 0.29%)</title><rect x="28.8571%" y="437" width="0.2857%" height="15" fill="rgb(254,105,3)"/><text x="29.1071%" y="447.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.14%)</title><rect x="29.0000%" y="421" width="0.1429%" height="15" fill="rgb(221,225,9)"/><text x="29.2500%" y="431.50"></text></g><g><title>__perf_event_task_sched_in (1 samples, 0.14%)</title><rect x="29.1429%" y="453" width="0.1429%" height="15" fill="rgb(224,227,45)"/><text x="29.3929%" y="463.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (1 samples, 0.14%)</title><rect x="29.1429%" y="437" width="0.1429%" height="15" fill="rgb(229,198,43)"/><text x="29.3929%" y="447.50"></text></g><g><title>native_write_msr (1 samples, 0.14%)</title><rect x="29.1429%" y="421" width="0.1429%" height="15" fill="rgb(206,209,35)"/><text x="29.3929%" y="431.50"></text></g><g><title>finish_task_switch (2 samples, 0.29%)</title><rect x="29.1429%" y="469" width="0.2857%" height="15" fill="rgb(245,195,53)"/><text x="29.3929%" y="479.50"></text></g><g><title>_raw_spin_unlock_irq (1 samples, 0.14%)</title><rect x="29.2857%" y="453" width="0.1429%" height="15" fill="rgb(240,92,26)"/><text x="29.5357%" y="463.50"></text></g><g><title>preempt_count_sub (1 samples, 0.14%)</title><rect x="29.2857%" y="437" width="0.1429%" height="15" fill="rgb(207,40,23)"/><text x="29.5357%" y="447.50"></text></g><g><title>pick_next_task_fair (3 samples, 0.43%)</title><rect x="29.4286%" y="469" width="0.4286%" height="15" fill="rgb(223,111,35)"/><text x="29.6786%" y="479.50"></text></g><g><title>newidle_balance (1 samples, 0.14%)</title><rect x="29.7143%" y="453" width="0.1429%" height="15" fill="rgb(229,147,28)"/><text x="29.9643%" y="463.50"></text></g><g><title>psi_task_change (1 samples, 0.14%)</title><rect x="29.8571%" y="469" width="0.1429%" height="15" fill="rgb(211,29,28)"/><text x="30.1071%" y="479.50"></text></g><g><title>psi_group_change (1 samples, 0.14%)</title><rect x="29.8571%" y="453" width="0.1429%" height="15" fill="rgb(228,72,33)"/><text x="30.1071%" y="463.50"></text></g><g><title>put_prev_task_fair (1 samples, 0.14%)</title><rect x="30.0000%" y="469" width="0.1429%" height="15" fill="rgb(205,214,31)"/><text x="30.2500%" y="479.50"></text></g><g><title>uclamp_rq_dec_id (1 samples, 0.14%)</title><rect x="30.1429%" y="469" width="0.1429%" height="15" fill="rgb(224,111,15)"/><text x="30.3929%" y="479.50"></text></g><g><title>sk_wait_data (22 samples, 3.14%)</title><rect x="27.4286%" y="549" width="3.1429%" height="15" fill="rgb(253,21,26)"/><text x="27.6786%" y="559.50">sk_..</text></g><g><title>wait_woken (18 samples, 2.57%)</title><rect x="28.0000%" y="533" width="2.5714%" height="15" fill="rgb(245,139,43)"/><text x="28.2500%" y="543.50">wa..</text></g><g><title>schedule_timeout (17 samples, 2.43%)</title><rect x="28.1429%" y="517" width="2.4286%" height="15" fill="rgb(252,170,7)"/><text x="28.3929%" y="527.50">sc..</text></g><g><title>schedule (17 samples, 2.43%)</title><rect x="28.1429%" y="501" width="2.4286%" height="15" fill="rgb(231,118,14)"/><text x="28.3929%" y="511.50">sc..</text></g><g><title>__schedule (16 samples, 2.29%)</title><rect x="28.2857%" y="485" width="2.2857%" height="15" fill="rgb(238,83,0)"/><text x="28.5357%" y="495.50">_..</text></g><g><title>update_rq_clock (2 samples, 0.29%)</title><rect x="30.2857%" y="469" width="0.2857%" height="15" fill="rgb(221,39,39)"/><text x="30.5357%" y="479.50"></text></g><g><title>sched_clock_cpu (2 samples, 0.29%)</title><rect x="30.2857%" y="453" width="0.2857%" height="15" fill="rgb(222,119,46)"/><text x="30.5357%" y="463.50"></text></g><g><title>sched_clock (1 samples, 0.14%)</title><rect x="30.4286%" y="437" width="0.1429%" height="15" fill="rgb(222,165,49)"/><text x="30.6786%" y="447.50"></text></g><g><title>native_sched_clock (1 samples, 0.14%)</title><rect x="30.4286%" y="421" width="0.1429%" height="15" fill="rgb(219,113,52)"/><text x="30.6786%" y="431.50"></text></g><g><title>skb_copy_datagram_iter (2 samples, 0.29%)</title><rect x="30.5714%" y="549" width="0.2857%" height="15" fill="rgb(214,7,15)"/><text x="30.8214%" y="559.50"></text></g><g><title>__skb_datagram_iter (2 samples, 0.29%)</title><rect x="30.5714%" y="533" width="0.2857%" height="15" fill="rgb(235,32,4)"/><text x="30.8214%" y="543.50"></text></g><g><title>_copy_to_iter (1 samples, 0.14%)</title><rect x="30.7143%" y="517" width="0.1429%" height="15" fill="rgb(238,90,54)"/><text x="30.9643%" y="527.50"></text></g><g><title>copy_user_generic_unrolled (1 samples, 0.14%)</title><rect x="30.7143%" y="501" width="0.1429%" height="15" fill="rgb(213,208,19)"/><text x="30.9643%" y="511.50"></text></g><g><title>page_fault (1 samples, 0.14%)</title><rect x="30.7143%" y="485" width="0.1429%" height="15" fill="rgb(233,156,4)"/><text x="30.9643%" y="495.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.14%)</title><rect x="30.7143%" y="469" width="0.1429%" height="15" fill="rgb(207,194,5)"/><text x="30.9643%" y="479.50"></text></g><g><title>handle_mm_fault (1 samples, 0.14%)</title><rect x="30.7143%" y="453" width="0.1429%" height="15" fill="rgb(206,111,30)"/><text x="30.9643%" y="463.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.14%)</title><rect x="30.7143%" y="437" width="0.1429%" height="15" fill="rgb(243,70,54)"/><text x="30.9643%" y="447.50"></text></g><g><title>mem_cgroup_try_charge_delay (1 samples, 0.14%)</title><rect x="30.7143%" y="421" width="0.1429%" height="15" fill="rgb(242,28,8)"/><text x="30.9643%" y="431.50"></text></g><g><title>mem_cgroup_try_charge (1 samples, 0.14%)</title><rect x="30.7143%" y="405" width="0.1429%" height="15" fill="rgb(219,106,18)"/><text x="30.9643%" y="415.50"></text></g><g><title>try_charge (1 samples, 0.14%)</title><rect x="30.7143%" y="389" width="0.1429%" height="15" fill="rgb(244,222,10)"/><text x="30.9643%" y="399.50"></text></g><g><title>page_counter_try_charge (1 samples, 0.14%)</title><rect x="30.7143%" y="373" width="0.1429%" height="15" fill="rgb(236,179,52)"/><text x="30.9643%" y="383.50"></text></g><g><title>tcp_cleanup_rbuf (1 samples, 0.14%)</title><rect x="30.8571%" y="549" width="0.1429%" height="15" fill="rgb(213,23,39)"/><text x="31.1071%" y="559.50"></text></g><g><title>__x64_sys_recvfrom (33 samples, 4.71%)</title><rect x="26.4286%" y="613" width="4.7143%" height="15" fill="rgb(238,48,10)"/><text x="26.6786%" y="623.50">__x64..</text></g><g><title>__sys_recvfrom (33 samples, 4.71%)</title><rect x="26.4286%" y="597" width="4.7143%" height="15" fill="rgb(251,196,23)"/><text x="26.6786%" y="607.50">__sys..</text></g><g><title>inet_recvmsg (32 samples, 4.57%)</title><rect x="26.5714%" y="581" width="4.5714%" height="15" fill="rgb(250,152,24)"/><text x="26.8214%" y="591.50">inet_..</text></g><g><title>tcp_recvmsg (30 samples, 4.29%)</title><rect x="26.8571%" y="565" width="4.2857%" height="15" fill="rgb(209,150,17)"/><text x="27.1071%" y="575.50">tcp_r..</text></g><g><title>tcp_recv_timestamp (1 samples, 0.14%)</title><rect x="31.0000%" y="549" width="0.1429%" height="15" fill="rgb(234,202,34)"/><text x="31.2500%" y="559.50"></text></g><g><title>do_syscall_64 (35 samples, 5.00%)</title><rect x="26.4286%" y="629" width="5.0000%" height="15" fill="rgb(253,148,53)"/><text x="26.6786%" y="639.50">do_sys..</text></g><g><title>syscall_slow_exit_work (2 samples, 0.29%)</title><rect x="31.1429%" y="613" width="0.2857%" height="15" fill="rgb(218,129,16)"/><text x="31.3929%" y="623.50"></text></g><g><title>__audit_syscall_exit (2 samples, 0.29%)</title><rect x="31.1429%" y="597" width="0.2857%" height="15" fill="rgb(216,85,19)"/><text x="31.3929%" y="607.50"></text></g><g><title>entry_SYSCALL_64 (39 samples, 5.57%)</title><rect x="26.4286%" y="645" width="5.5714%" height="15" fill="rgb(235,228,7)"/><text x="26.6786%" y="655.50">entry_S..</text></g><g><title>prepare_exit_to_usermode (4 samples, 0.57%)</title><rect x="31.4286%" y="629" width="0.5714%" height="15" fill="rgb(245,175,0)"/><text x="31.6786%" y="639.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (41 samples, 5.86%)</title><rect x="26.2857%" y="741" width="5.8571%" height="15" fill="rgb(208,168,36)"/><text x="26.5357%" y="751.50">&lt;std::i..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (41 samples, 5.86%)</title><rect x="26.2857%" y="725" width="5.8571%" height="15" fill="rgb(246,171,24)"/><text x="26.5357%" y="735.50">&lt;std::n..</text></g><g><title>std::sys_common::net::TcpStream::read (41 samples, 5.86%)</title><rect x="26.2857%" y="709" width="5.8571%" height="15" fill="rgb(215,142,24)"/><text x="26.5357%" y="719.50">std::sy..</text></g><g><title>std::sys::unix::net::Socket::read (41 samples, 5.86%)</title><rect x="26.2857%" y="693" width="5.8571%" height="15" fill="rgb(250,187,7)"/><text x="26.5357%" y="703.50">std::sy..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (41 samples, 5.86%)</title><rect x="26.2857%" y="677" width="5.8571%" height="15" fill="rgb(228,66,33)"/><text x="26.5357%" y="687.50">std::sy..</text></g><g><title>__libc_recv (41 samples, 5.86%)</title><rect x="26.2857%" y="661" width="5.8571%" height="15" fill="rgb(234,215,21)"/><text x="26.5357%" y="671.50">__libc_..</text></g><g><title>syscall_return_via_sysret (1 samples, 0.14%)</title><rect x="32.0000%" y="645" width="0.1429%" height="15" fill="rgb(222,191,20)"/><text x="32.2500%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.14%)</title><rect x="32.1429%" y="693" width="0.1429%" height="15" fill="rgb(245,79,54)"/><text x="32.3929%" y="703.50"></text></g><g><title>[unknown] (204 samples, 29.14%)</title><rect x="3.2857%" y="901" width="29.1429%" height="15" fill="rgb(240,10,37)"/><text x="3.5357%" y="911.50">[unknown]</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (43 samples, 6.14%)</title><rect x="26.2857%" y="885" width="6.1429%" height="15" fill="rgb(214,192,32)"/><text x="26.5357%" y="895.50">std::sys..</text></g><g><title>decor::Shim::run_on_tcp (43 samples, 6.14%)</title><rect x="26.2857%" y="869" width="6.1429%" height="15" fill="rgb(209,36,54)"/><text x="26.5357%" y="879.50">decor::S..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (43 samples, 6.14%)</title><rect x="26.2857%" y="853" width="6.1429%" height="15" fill="rgb(220,10,11)"/><text x="26.5357%" y="863.50">msql_srv..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (43 samples, 6.14%)</title><rect x="26.2857%" y="837" width="6.1429%" height="15" fill="rgb(221,106,17)"/><text x="26.5357%" y="847.50">&lt;decor::..</text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (43 samples, 6.14%)</title><rect x="26.2857%" y="821" width="6.1429%" height="15" fill="rgb(251,142,44)"/><text x="26.5357%" y="831.50">&lt;mysql::..</text></g><g><title>mysql::conn::Conn::_query (43 samples, 6.14%)</title><rect x="26.2857%" y="805" width="6.1429%" height="15" fill="rgb(238,13,15)"/><text x="26.5357%" y="815.50">mysql::c..</text></g><g><title>mysql::conn::Conn::handle_result_set (43 samples, 6.14%)</title><rect x="26.2857%" y="789" width="6.1429%" height="15" fill="rgb(208,107,27)"/><text x="26.5357%" y="799.50">mysql::c..</text></g><g><title>mysql::conn::Conn::read_packet (43 samples, 6.14%)</title><rect x="26.2857%" y="773" width="6.1429%" height="15" fill="rgb(205,136,37)"/><text x="26.5357%" y="783.50">mysql::c..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (43 samples, 6.14%)</title><rect x="26.2857%" y="757" width="6.1429%" height="15" fill="rgb(250,205,27)"/><text x="26.5357%" y="767.50">&lt;mysql_c..</text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (2 samples, 0.29%)</title><rect x="32.1429%" y="741" width="0.2857%" height="15" fill="rgb(210,80,43)"/><text x="32.3929%" y="751.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (2 samples, 0.29%)</title><rect x="32.1429%" y="725" width="0.2857%" height="15" fill="rgb(247,160,36)"/><text x="32.3929%" y="735.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.29%)</title><rect x="32.1429%" y="709" width="0.2857%" height="15" fill="rgb(234,13,49)"/><text x="32.3929%" y="719.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.14%)</title><rect x="32.2857%" y="693" width="0.1429%" height="15" fill="rgb(234,122,0)"/><text x="32.5357%" y="703.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="32.2857%" y="677" width="0.1429%" height="15" fill="rgb(207,146,38)"/><text x="32.5357%" y="687.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (1 samples, 0.14%)</title><rect x="32.5714%" y="741" width="0.1429%" height="15" fill="rgb(207,177,25)"/><text x="32.8214%" y="751.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.14%)</title><rect x="32.5714%" y="725" width="0.1429%" height="15" fill="rgb(211,178,42)"/><text x="32.8214%" y="735.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.14%)</title><rect x="32.5714%" y="709" width="0.1429%" height="15" fill="rgb(230,69,54)"/><text x="32.8214%" y="719.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.14%)</title><rect x="32.5714%" y="693" width="0.1429%" height="15" fill="rgb(214,135,41)"/><text x="32.8214%" y="703.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.14%)</title><rect x="32.5714%" y="677" width="0.1429%" height="15" fill="rgb(237,67,25)"/><text x="32.8214%" y="687.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1 samples, 0.14%)</title><rect x="32.5714%" y="661" width="0.1429%" height="15" fill="rgb(222,189,50)"/><text x="32.8214%" y="671.50"></text></g><g><title>__libc_send (1 samples, 0.14%)</title><rect x="32.5714%" y="645" width="0.1429%" height="15" fill="rgb(245,148,34)"/><text x="32.8214%" y="655.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="32.5714%" y="629" width="0.1429%" height="15" fill="rgb(222,29,6)"/><text x="32.8214%" y="639.50"></text></g><g><title>do_syscall_64 (1 samples, 0.14%)</title><rect x="32.5714%" y="613" width="0.1429%" height="15" fill="rgb(221,189,43)"/><text x="32.8214%" y="623.50"></text></g><g><title>__x64_sys_sendto (1 samples, 0.14%)</title><rect x="32.5714%" y="597" width="0.1429%" height="15" fill="rgb(207,36,27)"/><text x="32.8214%" y="607.50"></text></g><g><title>__sys_sendto (1 samples, 0.14%)</title><rect x="32.5714%" y="581" width="0.1429%" height="15" fill="rgb(217,90,24)"/><text x="32.8214%" y="591.50"></text></g><g><title>sock_sendmsg (1 samples, 0.14%)</title><rect x="32.5714%" y="565" width="0.1429%" height="15" fill="rgb(224,66,35)"/><text x="32.8214%" y="575.50"></text></g><g><title>tcp_sendmsg (1 samples, 0.14%)</title><rect x="32.5714%" y="549" width="0.1429%" height="15" fill="rgb(221,13,50)"/><text x="32.8214%" y="559.50"></text></g><g><title>tcp_sendmsg_locked (1 samples, 0.14%)</title><rect x="32.5714%" y="533" width="0.1429%" height="15" fill="rgb(236,68,49)"/><text x="32.8214%" y="543.50"></text></g><g><title>__tcp_push_pending_frames (1 samples, 0.14%)</title><rect x="32.5714%" y="517" width="0.1429%" height="15" fill="rgb(229,146,28)"/><text x="32.8214%" y="527.50"></text></g><g><title>tcp_write_xmit (1 samples, 0.14%)</title><rect x="32.5714%" y="501" width="0.1429%" height="15" fill="rgb(225,31,38)"/><text x="32.8214%" y="511.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.14%)</title><rect x="32.5714%" y="485" width="0.1429%" height="15" fill="rgb(250,208,3)"/><text x="32.8214%" y="495.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.14%)</title><rect x="32.5714%" y="469" width="0.1429%" height="15" fill="rgb(246,54,23)"/><text x="32.8214%" y="479.50"></text></g><g><title>ip_output (1 samples, 0.14%)</title><rect x="32.5714%" y="453" width="0.1429%" height="15" fill="rgb(243,76,11)"/><text x="32.8214%" y="463.50"></text></g><g><title>ip_finish_output2 (1 samples, 0.14%)</title><rect x="32.5714%" y="437" width="0.1429%" height="15" fill="rgb(245,21,50)"/><text x="32.8214%" y="447.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.14%)</title><rect x="32.5714%" y="421" width="0.1429%" height="15" fill="rgb(228,9,43)"/><text x="32.8214%" y="431.50"></text></g><g><title>do_softirq (1 samples, 0.14%)</title><rect x="32.5714%" y="405" width="0.1429%" height="15" fill="rgb(208,100,47)"/><text x="32.8214%" y="415.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.14%)</title><rect x="32.5714%" y="389" width="0.1429%" height="15" fill="rgb(232,26,8)"/><text x="32.8214%" y="399.50"></text></g><g><title>__do_softirq (1 samples, 0.14%)</title><rect x="32.5714%" y="373" width="0.1429%" height="15" fill="rgb(216,166,38)"/><text x="32.8214%" y="383.50"></text></g><g><title>net_rx_action (1 samples, 0.14%)</title><rect x="32.5714%" y="357" width="0.1429%" height="15" fill="rgb(251,202,51)"/><text x="32.8214%" y="367.50"></text></g><g><title>process_backlog (1 samples, 0.14%)</title><rect x="32.5714%" y="341" width="0.1429%" height="15" fill="rgb(254,216,34)"/><text x="32.8214%" y="351.50"></text></g><g><title>__netif_receive_skb_one_core (1 samples, 0.14%)</title><rect x="32.5714%" y="325" width="0.1429%" height="15" fill="rgb(251,32,27)"/><text x="32.8214%" y="335.50"></text></g><g><title>ip_rcv (1 samples, 0.14%)</title><rect x="32.5714%" y="309" width="0.1429%" height="15" fill="rgb(208,127,28)"/><text x="32.8214%" y="319.50"></text></g><g><title>ip_local_deliver (1 samples, 0.14%)</title><rect x="32.5714%" y="293" width="0.1429%" height="15" fill="rgb(224,137,22)"/><text x="32.8214%" y="303.50"></text></g><g><title>ip_local_deliver_finish (1 samples, 0.14%)</title><rect x="32.5714%" y="277" width="0.1429%" height="15" fill="rgb(254,70,32)"/><text x="32.8214%" y="287.50"></text></g><g><title>ip_protocol_deliver_rcu (1 samples, 0.14%)</title><rect x="32.5714%" y="261" width="0.1429%" height="15" fill="rgb(229,75,37)"/><text x="32.8214%" y="271.50"></text></g><g><title>tcp_v4_rcv (1 samples, 0.14%)</title><rect x="32.5714%" y="245" width="0.1429%" height="15" fill="rgb(252,64,23)"/><text x="32.8214%" y="255.50"></text></g><g><title>tcp_v4_do_rcv (1 samples, 0.14%)</title><rect x="32.5714%" y="229" width="0.1429%" height="15" fill="rgb(232,162,48)"/><text x="32.8214%" y="239.50"></text></g><g><title>tcp_rcv_established (1 samples, 0.14%)</title><rect x="32.5714%" y="213" width="0.1429%" height="15" fill="rgb(246,160,12)"/><text x="32.8214%" y="223.50"></text></g><g><title>tcp_ack (1 samples, 0.14%)</title><rect x="32.5714%" y="197" width="0.1429%" height="15" fill="rgb(247,166,0)"/><text x="32.8214%" y="207.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (2 samples, 0.29%)</title><rect x="32.5714%" y="757" width="0.2857%" height="15" fill="rgb(249,219,21)"/><text x="32.8214%" y="767.50"></text></g><g><title>decor::Shim::create_schema (1 samples, 0.14%)</title><rect x="32.7143%" y="741" width="0.1429%" height="15" fill="rgb(205,209,3)"/><text x="32.9643%" y="751.50"></text></g><g><title>decor::helpers::process_schema_stmt (1 samples, 0.14%)</title><rect x="32.7143%" y="725" width="0.1429%" height="15" fill="rgb(243,44,1)"/><text x="32.9643%" y="735.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::replace (1 samples, 0.14%)</title><rect x="32.7143%" y="709" width="0.1429%" height="15" fill="rgb(206,159,16)"/><text x="32.9643%" y="719.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.14%)</title><rect x="32.7143%" y="693" width="0.1429%" height="15" fill="rgb(244,77,30)"/><text x="32.9643%" y="703.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (1 samples, 0.14%)</title><rect x="32.7143%" y="677" width="0.1429%" height="15" fill="rgb(218,69,12)"/><text x="32.9643%" y="687.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (2 samples, 0.29%)</title><rect x="32.8571%" y="709" width="0.2857%" height="15" fill="rgb(212,87,7)"/><text x="33.1071%" y="719.50"></text></g><g><title>mysql_common::packets::OkPacket::into_owned (1 samples, 0.14%)</title><rect x="33.0000%" y="693" width="0.1429%" height="15" fill="rgb(245,114,25)"/><text x="33.2500%" y="703.50"></text></g><g><title>fput (1 samples, 0.14%)</title><rect x="33.2857%" y="565" width="0.1429%" height="15" fill="rgb(210,61,42)"/><text x="33.5357%" y="575.50"></text></g><g><title>import_single_range (1 samples, 0.14%)</title><rect x="33.4286%" y="565" width="0.1429%" height="15" fill="rgb(211,52,33)"/><text x="33.6786%" y="575.50"></text></g><g><title>inet_sendmsg (1 samples, 0.14%)</title><rect x="33.5714%" y="549" width="0.1429%" height="15" fill="rgb(234,58,33)"/><text x="33.8214%" y="559.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.14%)</title><rect x="34.4286%" y="453" width="0.1429%" height="15" fill="rgb(220,115,36)"/><text x="34.6786%" y="463.50"></text></g><g><title>__ip_finish_output (1 samples, 0.14%)</title><rect x="34.5714%" y="437" width="0.1429%" height="15" fill="rgb(243,153,54)"/><text x="34.8214%" y="447.50"></text></g><g><title>dev_hard_start_xmit (1 samples, 0.14%)</title><rect x="34.7143%" y="405" width="0.1429%" height="15" fill="rgb(251,47,18)"/><text x="34.9643%" y="415.50"></text></g><g><title>loopback_xmit (1 samples, 0.14%)</title><rect x="34.7143%" y="389" width="0.1429%" height="15" fill="rgb(242,102,42)"/><text x="34.9643%" y="399.50"></text></g><g><title>netif_rx (1 samples, 0.14%)</title><rect x="34.7143%" y="373" width="0.1429%" height="15" fill="rgb(234,31,38)"/><text x="34.9643%" y="383.50"></text></g><g><title>netif_rx_internal (1 samples, 0.14%)</title><rect x="34.7143%" y="357" width="0.1429%" height="15" fill="rgb(221,117,51)"/><text x="34.9643%" y="367.50"></text></g><g><title>enqueue_to_backlog (1 samples, 0.14%)</title><rect x="34.7143%" y="341" width="0.1429%" height="15" fill="rgb(212,20,18)"/><text x="34.9643%" y="351.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.14%)</title><rect x="34.7143%" y="325" width="0.1429%" height="15" fill="rgb(245,133,36)"/><text x="34.9643%" y="335.50"></text></g><g><title>validate_xmit_skb (2 samples, 0.29%)</title><rect x="34.8571%" y="405" width="0.2857%" height="15" fill="rgb(212,6,19)"/><text x="35.1071%" y="415.50"></text></g><g><title>netif_skb_features (1 samples, 0.14%)</title><rect x="35.0000%" y="389" width="0.1429%" height="15" fill="rgb(218,1,36)"/><text x="35.2500%" y="399.50"></text></g><g><title>skb_network_protocol (1 samples, 0.14%)</title><rect x="35.0000%" y="373" width="0.1429%" height="15" fill="rgb(246,84,54)"/><text x="35.2500%" y="383.50"></text></g><g><title>__dev_queue_xmit (4 samples, 0.57%)</title><rect x="34.7143%" y="421" width="0.5714%" height="15" fill="rgb(242,110,6)"/><text x="34.9643%" y="431.50"></text></g><g><title>validate_xmit_xfrm (1 samples, 0.14%)</title><rect x="35.1429%" y="405" width="0.1429%" height="15" fill="rgb(214,47,5)"/><text x="35.3929%" y="415.50"></text></g><g><title>irqtime_account_irq (2 samples, 0.29%)</title><rect x="35.4286%" y="357" width="0.2857%" height="15" fill="rgb(218,159,25)"/><text x="35.6786%" y="367.50"></text></g><g><title>__netif_receive_skb_core (1 samples, 0.14%)</title><rect x="35.7143%" y="309" width="0.1429%" height="15" fill="rgb(215,211,28)"/><text x="35.9643%" y="319.50"></text></g><g><title>__inet_lookup_established (3 samples, 0.43%)</title><rect x="36.1429%" y="229" width="0.4286%" height="15" fill="rgb(238,59,32)"/><text x="36.3929%" y="239.50"></text></g><g><title>inet_ehashfn (2 samples, 0.29%)</title><rect x="36.2857%" y="213" width="0.2857%" height="15" fill="rgb(226,82,3)"/><text x="36.5357%" y="223.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.14%)</title><rect x="36.5714%" y="229" width="0.1429%" height="15" fill="rgb(240,164,32)"/><text x="36.8214%" y="239.50"></text></g><g><title>sk_filter_trim_cap (1 samples, 0.14%)</title><rect x="36.7143%" y="229" width="0.1429%" height="15" fill="rgb(232,46,7)"/><text x="36.9643%" y="239.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (1 samples, 0.14%)</title><rect x="36.7143%" y="213" width="0.1429%" height="15" fill="rgb(229,129,53)"/><text x="36.9643%" y="223.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.14%)</title><rect x="36.7143%" y="197" width="0.1429%" height="15" fill="rgb(234,188,29)"/><text x="36.9643%" y="207.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.14%)</title><rect x="37.5714%" y="117" width="0.1429%" height="15" fill="rgb(246,141,4)"/><text x="37.8214%" y="127.50"></text></g><g><title>enqueue_task (5 samples, 0.71%)</title><rect x="37.7143%" y="117" width="0.7143%" height="15" fill="rgb(229,23,39)"/><text x="37.9643%" y="127.50"></text></g><g><title>psi_task_change (5 samples, 0.71%)</title><rect x="37.7143%" y="101" width="0.7143%" height="15" fill="rgb(206,12,3)"/><text x="37.9643%" y="111.50"></text></g><g><title>psi_group_change (5 samples, 0.71%)</title><rect x="37.7143%" y="85" width="0.7143%" height="15" fill="rgb(252,226,20)"/><text x="37.9643%" y="95.50"></text></g><g><title>record_times (2 samples, 0.29%)</title><rect x="38.1429%" y="69" width="0.2857%" height="15" fill="rgb(216,123,35)"/><text x="38.3929%" y="79.50"></text></g><g><title>sched_clock_cpu (2 samples, 0.29%)</title><rect x="38.1429%" y="53" width="0.2857%" height="15" fill="rgb(212,68,40)"/><text x="38.3929%" y="63.50"></text></g><g><title>sched_clock (2 samples, 0.29%)</title><rect x="38.1429%" y="37" width="0.2857%" height="15" fill="rgb(254,125,32)"/><text x="38.3929%" y="47.50"></text></g><g><title>account_entity_enqueue (1 samples, 0.14%)</title><rect x="38.8571%" y="85" width="0.1429%" height="15" fill="rgb(253,97,22)"/><text x="39.1071%" y="95.50"></text></g><g><title>update_cfs_group (1 samples, 0.14%)</title><rect x="39.0000%" y="85" width="0.1429%" height="15" fill="rgb(241,101,14)"/><text x="39.2500%" y="95.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.14%)</title><rect x="39.1429%" y="69" width="0.1429%" height="15" fill="rgb(238,103,29)"/><text x="39.3929%" y="79.50"></text></g><g><title>enqueue_task_fair (8 samples, 1.14%)</title><rect x="38.4286%" y="117" width="1.1429%" height="15" fill="rgb(233,195,47)"/><text x="38.6786%" y="127.50"></text></g><g><title>enqueue_entity (7 samples, 1.00%)</title><rect x="38.5714%" y="101" width="1.0000%" height="15" fill="rgb(246,218,30)"/><text x="38.8214%" y="111.50"></text></g><g><title>update_load_avg (3 samples, 0.43%)</title><rect x="39.1429%" y="85" width="0.4286%" height="15" fill="rgb(219,145,47)"/><text x="39.3929%" y="95.50"></text></g><g><title>__update_load_avg_se (2 samples, 0.29%)</title><rect x="39.2857%" y="69" width="0.2857%" height="15" fill="rgb(243,12,26)"/><text x="39.5357%" y="79.50"></text></g><g><title>select_task_rq_fair (4 samples, 0.57%)</title><rect x="39.5714%" y="117" width="0.5714%" height="15" fill="rgb(214,87,16)"/><text x="39.8214%" y="127.50"></text></g><g><title>__wake_up_common (22 samples, 3.14%)</title><rect x="37.2857%" y="165" width="3.1429%" height="15" fill="rgb(208,99,42)"/><text x="37.5357%" y="175.50">__w..</text></g><g><title>pollwake (22 samples, 3.14%)</title><rect x="37.2857%" y="149" width="3.1429%" height="15" fill="rgb(253,99,2)"/><text x="37.5357%" y="159.50">pol..</text></g><g><title>try_to_wake_up (20 samples, 2.86%)</title><rect x="37.5714%" y="133" width="2.8571%" height="15" fill="rgb(220,168,23)"/><text x="37.8214%" y="143.50">tr..</text></g><g><title>ttwu_do_wakeup (2 samples, 0.29%)</title><rect x="40.1429%" y="117" width="0.2857%" height="15" fill="rgb(242,38,24)"/><text x="40.3929%" y="127.50"></text></g><g><title>check_preempt_curr (2 samples, 0.29%)</title><rect x="40.1429%" y="101" width="0.2857%" height="15" fill="rgb(225,182,9)"/><text x="40.3929%" y="111.50"></text></g><g><title>resched_curr (2 samples, 0.29%)</title><rect x="40.1429%" y="85" width="0.2857%" height="15" fill="rgb(243,178,37)"/><text x="40.3929%" y="95.50"></text></g><g><title>sock_def_readable (23 samples, 3.29%)</title><rect x="37.2857%" y="197" width="3.2857%" height="15" fill="rgb(232,139,19)"/><text x="37.5357%" y="207.50">soc..</text></g><g><title>__wake_up_common_lock (23 samples, 3.29%)</title><rect x="37.2857%" y="181" width="3.2857%" height="15" fill="rgb(225,201,24)"/><text x="37.5357%" y="191.50">__w..</text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.14%)</title><rect x="40.4286%" y="165" width="0.1429%" height="15" fill="rgb(221,47,46)"/><text x="40.6786%" y="175.50"></text></g><g><title>__kfree_skb (2 samples, 0.29%)</title><rect x="40.7143%" y="181" width="0.2857%" height="15" fill="rgb(249,23,13)"/><text x="40.9643%" y="191.50"></text></g><g><title>skb_release_data (2 samples, 0.29%)</title><rect x="40.7143%" y="165" width="0.2857%" height="15" fill="rgb(219,9,5)"/><text x="40.9643%" y="175.50"></text></g><g><title>tcp_ack_update_rtt (1 samples, 0.14%)</title><rect x="41.0000%" y="181" width="0.1429%" height="15" fill="rgb(254,171,16)"/><text x="41.2500%" y="191.50"></text></g><g><title>tcp_ack (5 samples, 0.71%)</title><rect x="40.5714%" y="197" width="0.7143%" height="15" fill="rgb(230,171,20)"/><text x="40.8214%" y="207.50"></text></g><g><title>tcp_rack_update_reo_wnd (1 samples, 0.14%)</title><rect x="41.1429%" y="181" width="0.1429%" height="15" fill="rgb(210,71,41)"/><text x="41.3929%" y="191.50"></text></g><g><title>ip_finish_output2 (47 samples, 6.71%)</title><rect x="34.7143%" y="437" width="6.7143%" height="15" fill="rgb(206,173,20)"/><text x="34.9643%" y="447.50">ip_finish..</text></g><g><title>__local_bh_enable_ip (43 samples, 6.14%)</title><rect x="35.2857%" y="421" width="6.1429%" height="15" fill="rgb(233,88,34)"/><text x="35.5357%" y="431.50">__local_..</text></g><g><title>do_softirq (43 samples, 6.14%)</title><rect x="35.2857%" y="405" width="6.1429%" height="15" fill="rgb(223,209,46)"/><text x="35.5357%" y="415.50">do_softi..</text></g><g><title>do_softirq_own_stack (43 samples, 6.14%)</title><rect x="35.2857%" y="389" width="6.1429%" height="15" fill="rgb(250,43,18)"/><text x="35.5357%" y="399.50">do_softi..</text></g><g><title>__do_softirq (43 samples, 6.14%)</title><rect x="35.2857%" y="373" width="6.1429%" height="15" fill="rgb(208,13,10)"/><text x="35.5357%" y="383.50">__do_sof..</text></g><g><title>net_rx_action (40 samples, 5.71%)</title><rect x="35.7143%" y="357" width="5.7143%" height="15" fill="rgb(212,200,36)"/><text x="35.9643%" y="367.50">net_rx_..</text></g><g><title>process_backlog (40 samples, 5.71%)</title><rect x="35.7143%" y="341" width="5.7143%" height="15" fill="rgb(225,90,30)"/><text x="35.9643%" y="351.50">process..</text></g><g><title>__netif_receive_skb_one_core (40 samples, 5.71%)</title><rect x="35.7143%" y="325" width="5.7143%" height="15" fill="rgb(236,182,39)"/><text x="35.9643%" y="335.50">__netif..</text></g><g><title>ip_rcv (39 samples, 5.57%)</title><rect x="35.8571%" y="309" width="5.5714%" height="15" fill="rgb(212,144,35)"/><text x="36.1071%" y="319.50">ip_rcv</text></g><g><title>ip_local_deliver (39 samples, 5.57%)</title><rect x="35.8571%" y="293" width="5.5714%" height="15" fill="rgb(228,63,44)"/><text x="36.1071%" y="303.50">ip_loca..</text></g><g><title>ip_local_deliver_finish (39 samples, 5.57%)</title><rect x="35.8571%" y="277" width="5.5714%" height="15" fill="rgb(228,109,6)"/><text x="36.1071%" y="287.50">ip_loca..</text></g><g><title>ip_protocol_deliver_rcu (39 samples, 5.57%)</title><rect x="35.8571%" y="261" width="5.5714%" height="15" fill="rgb(238,117,24)"/><text x="36.1071%" y="271.50">ip_prot..</text></g><g><title>tcp_v4_rcv (38 samples, 5.43%)</title><rect x="36.0000%" y="245" width="5.4286%" height="15" fill="rgb(242,26,26)"/><text x="36.2500%" y="255.50">tcp_v4_..</text></g><g><title>tcp_v4_do_rcv (32 samples, 4.57%)</title><rect x="36.8571%" y="229" width="4.5714%" height="15" fill="rgb(221,92,48)"/><text x="37.1071%" y="239.50">tcp_v..</text></g><g><title>tcp_rcv_established (32 samples, 4.57%)</title><rect x="36.8571%" y="213" width="4.5714%" height="15" fill="rgb(209,209,32)"/><text x="37.1071%" y="223.50">tcp_r..</text></g><g><title>tcp_event_data_recv (1 samples, 0.14%)</title><rect x="41.2857%" y="197" width="0.1429%" height="15" fill="rgb(221,70,22)"/><text x="41.5357%" y="207.50"></text></g><g><title>__ip_queue_xmit (51 samples, 7.29%)</title><rect x="34.2857%" y="469" width="7.2857%" height="15" fill="rgb(248,145,5)"/><text x="34.5357%" y="479.50">__ip_queue..</text></g><g><title>ip_output (49 samples, 7.00%)</title><rect x="34.5714%" y="453" width="7.0000%" height="15" fill="rgb(226,116,26)"/><text x="34.8214%" y="463.50">ip_output</text></g><g><title>ip_finish_output (1 samples, 0.14%)</title><rect x="41.4286%" y="437" width="0.1429%" height="15" fill="rgb(244,5,17)"/><text x="41.6786%" y="447.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (1 samples, 0.14%)</title><rect x="41.4286%" y="421" width="0.1429%" height="15" fill="rgb(252,159,33)"/><text x="41.6786%" y="431.50"></text></g><g><title>__tcp_select_window (1 samples, 0.14%)</title><rect x="41.5714%" y="469" width="0.1429%" height="15" fill="rgb(206,71,0)"/><text x="41.8214%" y="479.50"></text></g><g><title>bictcp_cwnd_event (1 samples, 0.14%)</title><rect x="41.7143%" y="469" width="0.1429%" height="15" fill="rgb(233,118,54)"/><text x="41.9643%" y="479.50"></text></g><g><title>__tcp_transmit_skb (57 samples, 8.14%)</title><rect x="33.8571%" y="485" width="8.1429%" height="15" fill="rgb(234,83,48)"/><text x="34.1071%" y="495.50">__tcp_trans..</text></g><g><title>skb_clone (1 samples, 0.14%)</title><rect x="41.8571%" y="469" width="0.1429%" height="15" fill="rgb(228,3,54)"/><text x="42.1071%" y="479.50"></text></g><g><title>__copy_skb_header (1 samples, 0.14%)</title><rect x="41.8571%" y="453" width="0.1429%" height="15" fill="rgb(226,155,13)"/><text x="42.1071%" y="463.50"></text></g><g><title>__tcp_push_pending_frames (59 samples, 8.43%)</title><rect x="33.7143%" y="517" width="8.4286%" height="15" fill="rgb(241,28,37)"/><text x="33.9643%" y="527.50">__tcp_push_p..</text></g><g><title>tcp_write_xmit (59 samples, 8.43%)</title><rect x="33.7143%" y="501" width="8.4286%" height="15" fill="rgb(233,93,10)"/><text x="33.9643%" y="511.50">tcp_write_xm..</text></g><g><title>tcp_schedule_loss_probe.part.0 (1 samples, 0.14%)</title><rect x="42.0000%" y="485" width="0.1429%" height="15" fill="rgb(225,113,19)"/><text x="42.2500%" y="495.50"></text></g><g><title>sk_page_frag_refill (2 samples, 0.29%)</title><rect x="42.1429%" y="517" width="0.2857%" height="15" fill="rgb(241,2,18)"/><text x="42.3929%" y="527.50"></text></g><g><title>skb_page_frag_refill (1 samples, 0.14%)</title><rect x="42.2857%" y="501" width="0.1429%" height="15" fill="rgb(228,207,21)"/><text x="42.5357%" y="511.50"></text></g><g><title>__ksize (1 samples, 0.14%)</title><rect x="42.5714%" y="485" width="0.1429%" height="15" fill="rgb(213,211,35)"/><text x="42.8214%" y="495.50"></text></g><g><title>memcg_kmem_put_cache (1 samples, 0.14%)</title><rect x="43.0000%" y="469" width="0.1429%" height="15" fill="rgb(209,83,10)"/><text x="43.2500%" y="479.50"></text></g><g><title>sk_stream_alloc_skb (6 samples, 0.86%)</title><rect x="42.4286%" y="517" width="0.8571%" height="15" fill="rgb(209,164,1)"/><text x="42.6786%" y="527.50"></text></g><g><title>__alloc_skb (6 samples, 0.86%)</title><rect x="42.4286%" y="501" width="0.8571%" height="15" fill="rgb(213,184,43)"/><text x="42.6786%" y="511.50"></text></g><g><title>kmem_cache_alloc_node (4 samples, 0.57%)</title><rect x="42.7143%" y="485" width="0.5714%" height="15" fill="rgb(231,61,34)"/><text x="42.9643%" y="495.50"></text></g><g><title>memset_erms (1 samples, 0.14%)</title><rect x="43.1429%" y="469" width="0.1429%" height="15" fill="rgb(235,75,3)"/><text x="43.3929%" y="479.50"></text></g><g><title>skb_do_copy_data_nocache (2 samples, 0.29%)</title><rect x="43.2857%" y="517" width="0.2857%" height="15" fill="rgb(220,106,47)"/><text x="43.5357%" y="527.50"></text></g><g><title>_copy_from_iter_full (2 samples, 0.29%)</title><rect x="43.2857%" y="501" width="0.2857%" height="15" fill="rgb(210,196,33)"/><text x="43.5357%" y="511.50"></text></g><g><title>iov_iter_advance (1 samples, 0.14%)</title><rect x="43.4286%" y="485" width="0.1429%" height="15" fill="rgb(229,154,42)"/><text x="43.6786%" y="495.50"></text></g><g><title>do_syscall_64 (75 samples, 10.71%)</title><rect x="33.1429%" y="613" width="10.7143%" height="15" fill="rgb(228,114,26)"/><text x="33.3929%" y="623.50">do_syscall_64</text></g><g><title>__x64_sys_sendto (75 samples, 10.71%)</title><rect x="33.1429%" y="597" width="10.7143%" height="15" fill="rgb(208,144,1)"/><text x="33.3929%" y="607.50">__x64_sys_sendto</text></g><g><title>__sys_sendto (75 samples, 10.71%)</title><rect x="33.1429%" y="581" width="10.7143%" height="15" fill="rgb(239,112,37)"/><text x="33.3929%" y="591.50">__sys_sendto</text></g><g><title>sock_sendmsg (72 samples, 10.29%)</title><rect x="33.5714%" y="565" width="10.2857%" height="15" fill="rgb(210,96,50)"/><text x="33.8214%" y="575.50">sock_sendmsg</text></g><g><title>tcp_sendmsg (71 samples, 10.14%)</title><rect x="33.7143%" y="549" width="10.1429%" height="15" fill="rgb(222,178,2)"/><text x="33.9643%" y="559.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (71 samples, 10.14%)</title><rect x="33.7143%" y="533" width="10.1429%" height="15" fill="rgb(226,74,18)"/><text x="33.9643%" y="543.50">tcp_sendmsg_loc..</text></g><g><title>tcp_send_mss (2 samples, 0.29%)</title><rect x="43.5714%" y="517" width="0.2857%" height="15" fill="rgb(225,67,54)"/><text x="43.8214%" y="527.50"></text></g><g><title>tcp_current_mss (2 samples, 0.29%)</title><rect x="43.5714%" y="501" width="0.2857%" height="15" fill="rgb(251,92,32)"/><text x="43.8214%" y="511.50"></text></g><g><title>ipv4_mtu (1 samples, 0.14%)</title><rect x="43.7143%" y="485" width="0.1429%" height="15" fill="rgb(228,149,22)"/><text x="43.9643%" y="495.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (80 samples, 11.43%)</title><rect x="32.8571%" y="741" width="11.4286%" height="15" fill="rgb(243,54,13)"/><text x="33.1071%" y="751.50">&lt;mysql::conn::Con..</text></g><g><title>mysql::conn::Conn::_query (80 samples, 11.43%)</title><rect x="32.8571%" y="725" width="11.4286%" height="15" fill="rgb(243,180,28)"/><text x="33.1071%" y="735.50">mysql::conn::Conn..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (78 samples, 11.14%)</title><rect x="33.1429%" y="709" width="11.1429%" height="15" fill="rgb(208,167,24)"/><text x="33.3929%" y="719.50">mysql_common::pr..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (78 samples, 11.14%)</title><rect x="33.1429%" y="693" width="11.1429%" height="15" fill="rgb(245,73,45)"/><text x="33.3929%" y="703.50">std::io::buffere..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (78 samples, 11.14%)</title><rect x="33.1429%" y="677" width="11.1429%" height="15" fill="rgb(237,203,48)"/><text x="33.3929%" y="687.50">&lt;std::net::tcp::..</text></g><g><title>std::sys_common::net::TcpStream::write (78 samples, 11.14%)</title><rect x="33.1429%" y="661" width="11.1429%" height="15" fill="rgb(211,197,16)"/><text x="33.3929%" y="671.50">std::sys_common:..</text></g><g><title>__libc_send (78 samples, 11.14%)</title><rect x="33.1429%" y="645" width="11.1429%" height="15" fill="rgb(243,99,51)"/><text x="33.3929%" y="655.50">__libc_send</text></g><g><title>entry_SYSCALL_64 (78 samples, 11.14%)</title><rect x="33.1429%" y="629" width="11.1429%" height="15" fill="rgb(215,123,29)"/><text x="33.3929%" y="639.50">entry_SYSCALL_64</text></g><g><title>prepare_exit_to_usermode (3 samples, 0.43%)</title><rect x="43.8571%" y="613" width="0.4286%" height="15" fill="rgb(239,186,37)"/><text x="44.1071%" y="623.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="44.2857%" y="741" width="0.1429%" height="15" fill="rgb(252,136,39)"/><text x="44.5357%" y="751.50"></text></g><g><title>_int_free (1 samples, 0.14%)</title><rect x="44.4286%" y="741" width="0.1429%" height="15" fill="rgb(223,213,32)"/><text x="44.6786%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.14%)</title><rect x="44.5714%" y="677" width="0.1429%" height="15" fill="rgb(233,115,5)"/><text x="44.8214%" y="687.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (1 samples, 0.14%)</title><rect x="44.5714%" y="661" width="0.1429%" height="15" fill="rgb(207,226,44)"/><text x="44.8214%" y="671.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.14%)</title><rect x="44.5714%" y="645" width="0.1429%" height="15" fill="rgb(208,126,0)"/><text x="44.8214%" y="655.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="44.5714%" y="629" width="0.1429%" height="15" fill="rgb(244,66,21)"/><text x="44.8214%" y="639.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.14%)</title><rect x="44.5714%" y="613" width="0.1429%" height="15" fill="rgb(222,97,12)"/><text x="44.8214%" y="623.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="44.5714%" y="597" width="0.1429%" height="15" fill="rgb(219,213,19)"/><text x="44.8214%" y="607.50"></text></g><g><title>__rust_realloc (1 samples, 0.14%)</title><rect x="44.7143%" y="661" width="0.1429%" height="15" fill="rgb(252,169,30)"/><text x="44.9643%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.57%)</title><rect x="44.5714%" y="693" width="0.5714%" height="15" fill="rgb(206,32,51)"/><text x="44.8214%" y="703.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (3 samples, 0.43%)</title><rect x="44.7143%" y="677" width="0.4286%" height="15" fill="rgb(250,172,42)"/><text x="44.9643%" y="687.50"></text></g><g><title>core::fmt::write (2 samples, 0.29%)</title><rect x="44.8571%" y="661" width="0.2857%" height="15" fill="rgb(209,34,43)"/><text x="45.1071%" y="671.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.14%)</title><rect x="45.0000%" y="645" width="0.1429%" height="15" fill="rgb(223,11,35)"/><text x="45.2500%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.14%)</title><rect x="45.0000%" y="629" width="0.1429%" height="15" fill="rgb(251,219,26)"/><text x="45.2500%" y="639.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="45.0000%" y="613" width="0.1429%" height="15" fill="rgb(231,119,3)"/><text x="45.2500%" y="623.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.14%)</title><rect x="45.1429%" y="677" width="0.1429%" height="15" fill="rgb(216,97,11)"/><text x="45.3929%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.14%)</title><rect x="45.2857%" y="629" width="0.1429%" height="15" fill="rgb(223,59,9)"/><text x="45.5357%" y="639.50"></text></g><g><title>_int_free (1 samples, 0.14%)</title><rect x="45.4286%" y="629" width="0.1429%" height="15" fill="rgb(233,93,31)"/><text x="45.6786%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.57%)</title><rect x="45.2857%" y="677" width="0.5714%" height="15" fill="rgb(239,81,33)"/><text x="45.5357%" y="687.50"></text></g><g><title>__GI___libc_realloc (4 samples, 0.57%)</title><rect x="45.2857%" y="661" width="0.5714%" height="15" fill="rgb(213,120,34)"/><text x="45.5357%" y="671.50"></text></g><g><title>_int_realloc (4 samples, 0.57%)</title><rect x="45.2857%" y="645" width="0.5714%" height="15" fill="rgb(243,49,53)"/><text x="45.5357%" y="655.50"></text></g><g><title>_int_malloc (2 samples, 0.29%)</title><rect x="45.5714%" y="629" width="0.2857%" height="15" fill="rgb(247,216,33)"/><text x="45.8214%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (10 samples, 1.43%)</title><rect x="44.5714%" y="709" width="1.4286%" height="15" fill="rgb(226,26,14)"/><text x="44.8214%" y="719.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (6 samples, 0.86%)</title><rect x="45.1429%" y="693" width="0.8571%" height="15" fill="rgb(215,49,53)"/><text x="45.3929%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.14%)</title><rect x="45.8571%" y="677" width="0.1429%" height="15" fill="rgb(245,162,40)"/><text x="46.1071%" y="687.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.14%)</title><rect x="45.8571%" y="661" width="0.1429%" height="15" fill="rgb(229,68,17)"/><text x="46.1071%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.14%)</title><rect x="46.0000%" y="677" width="0.1429%" height="15" fill="rgb(213,182,10)"/><text x="46.2500%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.29%)</title><rect x="46.0000%" y="709" width="0.2857%" height="15" fill="rgb(245,125,30)"/><text x="46.2500%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Values as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.29%)</title><rect x="46.0000%" y="693" width="0.2857%" height="15" fill="rgb(232,202,2)"/><text x="46.2500%" y="703.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.14%)</title><rect x="46.1429%" y="677" width="0.1429%" height="15" fill="rgb(237,140,51)"/><text x="46.3929%" y="687.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.14%)</title><rect x="46.1429%" y="661" width="0.1429%" height="15" fill="rgb(236,157,25)"/><text x="46.3929%" y="671.50"></text></g><g><title>_int_realloc (1 samples, 0.14%)</title><rect x="46.1429%" y="645" width="0.1429%" height="15" fill="rgb(219,209,0)"/><text x="46.3929%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.14%)</title><rect x="46.4286%" y="629" width="0.1429%" height="15" fill="rgb(240,116,54)"/><text x="46.6786%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (1 samples, 0.14%)</title><rect x="46.4286%" y="613" width="0.1429%" height="15" fill="rgb(216,10,36)"/><text x="46.6786%" y="623.50"></text></g><g><title>alloc::string::String::push (2 samples, 0.29%)</title><rect x="46.4286%" y="645" width="0.2857%" height="15" fill="rgb(222,72,44)"/><text x="46.6786%" y="655.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::len_utf8 (1 samples, 0.14%)</title><rect x="46.5714%" y="629" width="0.1429%" height="15" fill="rgb(232,159,9)"/><text x="46.8214%" y="639.50"></text></g><g><title>core::char::methods::len_utf8 (1 samples, 0.14%)</title><rect x="46.5714%" y="613" width="0.1429%" height="15" fill="rgb(210,39,32)"/><text x="46.8214%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (5 samples, 0.71%)</title><rect x="46.2857%" y="693" width="0.7143%" height="15" fill="rgb(216,194,45)"/><text x="46.5357%" y="703.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (5 samples, 0.71%)</title><rect x="46.2857%" y="677" width="0.7143%" height="15" fill="rgb(218,18,35)"/><text x="46.5357%" y="687.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (4 samples, 0.57%)</title><rect x="46.4286%" y="661" width="0.5714%" height="15" fill="rgb(207,83,51)"/><text x="46.6786%" y="671.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (2 samples, 0.29%)</title><rect x="46.7143%" y="645" width="0.2857%" height="15" fill="rgb(225,63,43)"/><text x="46.9643%" y="655.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.29%)</title><rect x="46.7143%" y="629" width="0.2857%" height="15" fill="rgb(207,57,36)"/><text x="46.9643%" y="639.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.29%)</title><rect x="46.7143%" y="613" width="0.2857%" height="15" fill="rgb(216,99,33)"/><text x="46.9643%" y="623.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (2 samples, 0.29%)</title><rect x="46.7143%" y="597" width="0.2857%" height="15" fill="rgb(225,42,16)"/><text x="46.9643%" y="607.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.29%)</title><rect x="47.0000%" y="645" width="0.2857%" height="15" fill="rgb(220,201,45)"/><text x="47.2500%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.43%)</title><rect x="47.0000%" y="677" width="0.4286%" height="15" fill="rgb(225,33,4)"/><text x="47.2500%" y="687.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (3 samples, 0.43%)</title><rect x="47.0000%" y="661" width="0.4286%" height="15" fill="rgb(224,33,50)"/><text x="47.2500%" y="671.50"></text></g><g><title>_int_free (1 samples, 0.14%)</title><rect x="47.2857%" y="645" width="0.1429%" height="15" fill="rgb(246,198,51)"/><text x="47.5357%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.57%)</title><rect x="47.0000%" y="693" width="0.5714%" height="15" fill="rgb(205,22,4)"/><text x="47.2500%" y="703.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.14%)</title><rect x="47.4286%" y="677" width="0.1429%" height="15" fill="rgb(206,3,8)"/><text x="47.6786%" y="687.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.14%)</title><rect x="47.4286%" y="661" width="0.1429%" height="15" fill="rgb(251,23,15)"/><text x="47.6786%" y="671.50"></text></g><g><title>_int_realloc (1 samples, 0.14%)</title><rect x="47.4286%" y="645" width="0.1429%" height="15" fill="rgb(252,88,28)"/><text x="47.6786%" y="655.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.14%)</title><rect x="47.8571%" y="677" width="0.1429%" height="15" fill="rgb(212,127,14)"/><text x="48.1071%" y="687.50"></text></g><g><title>__rust_dealloc (1 samples, 0.14%)</title><rect x="48.0000%" y="677" width="0.1429%" height="15" fill="rgb(247,145,37)"/><text x="48.2500%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.29%)</title><rect x="48.1429%" y="677" width="0.2857%" height="15" fill="rgb(209,117,53)"/><text x="48.3929%" y="687.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.14%)</title><rect x="48.2857%" y="661" width="0.1429%" height="15" fill="rgb(212,90,42)"/><text x="48.5357%" y="671.50"></text></g><g><title>_int_realloc (1 samples, 0.14%)</title><rect x="48.2857%" y="645" width="0.1429%" height="15" fill="rgb(218,164,37)"/><text x="48.5357%" y="655.50"></text></g><g><title>_int_free (1 samples, 0.14%)</title><rect x="48.2857%" y="629" width="0.1429%" height="15" fill="rgb(246,65,34)"/><text x="48.5357%" y="639.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.14%)</title><rect x="48.4286%" y="645" width="0.1429%" height="15" fill="rgb(231,100,33)"/><text x="48.6786%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::UpdateStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (17 samples, 2.43%)</title><rect x="46.2857%" y="709" width="2.4286%" height="15" fill="rgb(228,126,14)"/><text x="46.5357%" y="719.50">&lt;s..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (8 samples, 1.14%)</title><rect x="47.5714%" y="693" width="1.1429%" height="15" fill="rgb(215,173,21)"/><text x="47.8214%" y="703.50"></text></g><g><title>core::fmt::write (2 samples, 0.29%)</title><rect x="48.4286%" y="677" width="0.2857%" height="15" fill="rgb(210,6,40)"/><text x="48.6786%" y="687.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.29%)</title><rect x="48.4286%" y="661" width="0.2857%" height="15" fill="rgb(212,48,18)"/><text x="48.6786%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.14%)</title><rect x="48.5714%" y="645" width="0.1429%" height="15" fill="rgb(230,214,11)"/><text x="48.8214%" y="655.50"></text></g><g><title>core::fmt::write (30 samples, 4.29%)</title><rect x="44.5714%" y="741" width="4.2857%" height="15" fill="rgb(254,105,39)"/><text x="44.8214%" y="751.50">core:..</text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (30 samples, 4.29%)</title><rect x="44.5714%" y="725" width="4.2857%" height="15" fill="rgb(245,158,5)"/><text x="44.8214%" y="735.50">&lt;sql_..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.14%)</title><rect x="48.7143%" y="709" width="0.1429%" height="15" fill="rgb(249,208,11)"/><text x="48.9643%" y="719.50"></text></g><g><title>core::fmt::write (1 samples, 0.14%)</title><rect x="48.7143%" y="693" width="0.1429%" height="15" fill="rgb(210,39,28)"/><text x="48.9643%" y="703.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.14%)</title><rect x="48.7143%" y="677" width="0.1429%" height="15" fill="rgb(211,56,53)"/><text x="48.9643%" y="687.50"></text></g><g><title>_int_free (1 samples, 0.14%)</title><rect x="49.0000%" y="725" width="0.1429%" height="15" fill="rgb(226,201,30)"/><text x="49.2500%" y="735.50"></text></g><g><title>_int_free (1 samples, 0.14%)</title><rect x="49.1429%" y="709" width="0.1429%" height="15" fill="rgb(239,101,34)"/><text x="49.3929%" y="719.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.57%)</title><rect x="48.8571%" y="741" width="0.5714%" height="15" fill="rgb(226,209,5)"/><text x="49.1071%" y="751.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.29%)</title><rect x="49.1429%" y="725" width="0.2857%" height="15" fill="rgb(250,105,47)"/><text x="49.3929%" y="735.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.14%)</title><rect x="49.2857%" y="709" width="0.1429%" height="15" fill="rgb(230,72,3)"/><text x="49.5357%" y="719.50"></text></g><g><title>_int_free (1 samples, 0.14%)</title><rect x="49.2857%" y="693" width="0.1429%" height="15" fill="rgb(232,218,39)"/><text x="49.5357%" y="703.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (117 samples, 16.71%)</title><rect x="32.8571%" y="757" width="16.7143%" height="15" fill="rgb(248,166,6)"/><text x="33.1071%" y="767.50">&lt;decor::Shim as msql_srv::..</text></g><g><title>decor::helpers::answer_rows (1 samples, 0.14%)</title><rect x="49.4286%" y="741" width="0.1429%" height="15" fill="rgb(247,89,20)"/><text x="49.6786%" y="751.50"></text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::finish (1 samples, 0.14%)</title><rect x="49.4286%" y="725" width="0.1429%" height="15" fill="rgb(248,130,54)"/><text x="49.6786%" y="735.50"></text></g><g><title>msql_srv::writers::write_ok_packet (1 samples, 0.14%)</title><rect x="49.4286%" y="709" width="0.1429%" height="15" fill="rgb(234,196,4)"/><text x="49.6786%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.14%)</title><rect x="49.4286%" y="693" width="0.1429%" height="15" fill="rgb(250,143,31)"/><text x="49.6786%" y="703.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.14%)</title><rect x="49.4286%" y="677" width="0.1429%" height="15" fill="rgb(211,110,34)"/><text x="49.6786%" y="687.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.14%)</title><rect x="49.5714%" y="757" width="0.1429%" height="15" fill="rgb(215,124,48)"/><text x="49.8214%" y="767.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.14%)</title><rect x="49.5714%" y="741" width="0.1429%" height="15" fill="rgb(216,46,13)"/><text x="49.8214%" y="751.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="49.5714%" y="725" width="0.1429%" height="15" fill="rgb(205,184,25)"/><text x="49.8214%" y="735.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.14%)</title><rect x="49.5714%" y="709" width="0.1429%" height="15" fill="rgb(228,1,10)"/><text x="49.8214%" y="719.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.14%)</title><rect x="49.5714%" y="693" width="0.1429%" height="15" fill="rgb(213,116,27)"/><text x="49.8214%" y="703.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.14%)</title><rect x="49.5714%" y="677" width="0.1429%" height="15" fill="rgb(241,95,50)"/><text x="49.8214%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="49.5714%" y="661" width="0.1429%" height="15" fill="rgb(238,48,32)"/><text x="49.8214%" y="671.50"></text></g><g><title>_int_free (1 samples, 0.14%)</title><rect x="49.5714%" y="645" width="0.1429%" height="15" fill="rgb(235,113,49)"/><text x="49.8214%" y="655.50"></text></g><g><title>core::str::converts::from_utf8 (2 samples, 0.29%)</title><rect x="49.7143%" y="757" width="0.2857%" height="15" fill="rgb(205,127,43)"/><text x="49.9643%" y="767.50"></text></g><g><title>core::str::validations::run_utf8_validation (2 samples, 0.29%)</title><rect x="49.7143%" y="741" width="0.2857%" height="15" fill="rgb(250,162,2)"/><text x="49.9643%" y="751.50"></text></g><g><title>import_single_range (1 samples, 0.14%)</title><rect x="50.2857%" y="581" width="0.1429%" height="15" fill="rgb(220,13,41)"/><text x="50.5357%" y="591.50"></text></g><g><title>__kfree_skb (1 samples, 0.14%)</title><rect x="50.5714%" y="549" width="0.1429%" height="15" fill="rgb(249,221,25)"/><text x="50.8214%" y="559.50"></text></g><g><title>skb_release_head_state (1 samples, 0.14%)</title><rect x="50.5714%" y="533" width="0.1429%" height="15" fill="rgb(215,208,19)"/><text x="50.8214%" y="543.50"></text></g><g><title>dst_release (1 samples, 0.14%)</title><rect x="50.5714%" y="517" width="0.1429%" height="15" fill="rgb(236,175,2)"/><text x="50.8214%" y="527.50"></text></g><g><title>__tcp_send_ack.part.0 (1 samples, 0.14%)</title><rect x="50.7143%" y="549" width="0.1429%" height="15" fill="rgb(241,52,2)"/><text x="50.9643%" y="559.50"></text></g><g><title>__alloc_skb (1 samples, 0.14%)</title><rect x="50.7143%" y="533" width="0.1429%" height="15" fill="rgb(248,140,14)"/><text x="50.9643%" y="543.50"></text></g><g><title>__kmalloc_node_track_caller (1 samples, 0.14%)</title><rect x="50.7143%" y="517" width="0.1429%" height="15" fill="rgb(253,22,42)"/><text x="50.9643%" y="527.50"></text></g><g><title>__dev_queue_xmit (1 samples, 0.14%)</title><rect x="51.2857%" y="485" width="0.1429%" height="15" fill="rgb(234,61,47)"/><text x="51.5357%" y="495.50"></text></g><g><title>validate_xmit_skb (1 samples, 0.14%)</title><rect x="51.2857%" y="469" width="0.1429%" height="15" fill="rgb(208,226,15)"/><text x="51.5357%" y="479.50"></text></g><g><title>netif_skb_features (1 samples, 0.14%)</title><rect x="51.2857%" y="453" width="0.1429%" height="15" fill="rgb(217,221,4)"/><text x="51.5357%" y="463.50"></text></g><g><title>__kfree_skb (2 samples, 0.29%)</title><rect x="51.7143%" y="261" width="0.2857%" height="15" fill="rgb(212,174,34)"/><text x="51.9643%" y="271.50"></text></g><g><title>skb_release_head_state (2 samples, 0.29%)</title><rect x="51.7143%" y="245" width="0.2857%" height="15" fill="rgb(253,83,4)"/><text x="51.9643%" y="255.50"></text></g><g><title>dst_release (1 samples, 0.14%)</title><rect x="51.8571%" y="229" width="0.1429%" height="15" fill="rgb(250,195,49)"/><text x="52.1071%" y="239.50"></text></g><g><title>ip_local_deliver (4 samples, 0.57%)</title><rect x="51.5714%" y="357" width="0.5714%" height="15" fill="rgb(241,192,25)"/><text x="51.8214%" y="367.50"></text></g><g><title>ip_local_deliver_finish (4 samples, 0.57%)</title><rect x="51.5714%" y="341" width="0.5714%" height="15" fill="rgb(208,124,10)"/><text x="51.8214%" y="351.50"></text></g><g><title>ip_protocol_deliver_rcu (4 samples, 0.57%)</title><rect x="51.5714%" y="325" width="0.5714%" height="15" fill="rgb(222,33,0)"/><text x="51.8214%" y="335.50"></text></g><g><title>tcp_v4_rcv (4 samples, 0.57%)</title><rect x="51.5714%" y="309" width="0.5714%" height="15" fill="rgb(234,209,28)"/><text x="51.8214%" y="319.50"></text></g><g><title>tcp_v4_do_rcv (4 samples, 0.57%)</title><rect x="51.5714%" y="293" width="0.5714%" height="15" fill="rgb(224,11,23)"/><text x="51.8214%" y="303.50"></text></g><g><title>tcp_rcv_established (4 samples, 0.57%)</title><rect x="51.5714%" y="277" width="0.5714%" height="15" fill="rgb(232,99,1)"/><text x="51.8214%" y="287.50"></text></g><g><title>tcp_ack (1 samples, 0.14%)</title><rect x="52.0000%" y="261" width="0.1429%" height="15" fill="rgb(237,95,45)"/><text x="52.2500%" y="271.50"></text></g><g><title>__kfree_skb (1 samples, 0.14%)</title><rect x="52.0000%" y="245" width="0.1429%" height="15" fill="rgb(208,109,11)"/><text x="52.2500%" y="255.50"></text></g><g><title>skb_release_data (1 samples, 0.14%)</title><rect x="52.0000%" y="229" width="0.1429%" height="15" fill="rgb(216,190,48)"/><text x="52.2500%" y="239.50"></text></g><g><title>__tcp_transmit_skb (10 samples, 1.43%)</title><rect x="50.8571%" y="549" width="1.4286%" height="15" fill="rgb(251,171,36)"/><text x="51.1071%" y="559.50"></text></g><g><title>__ip_queue_xmit (8 samples, 1.14%)</title><rect x="51.1429%" y="533" width="1.1429%" height="15" fill="rgb(230,62,22)"/><text x="51.3929%" y="543.50"></text></g><g><title>ip_output (8 samples, 1.14%)</title><rect x="51.1429%" y="517" width="1.1429%" height="15" fill="rgb(225,114,35)"/><text x="51.3929%" y="527.50"></text></g><g><title>ip_finish_output2 (8 samples, 1.14%)</title><rect x="51.1429%" y="501" width="1.1429%" height="15" fill="rgb(215,118,42)"/><text x="51.3929%" y="511.50"></text></g><g><title>__local_bh_enable_ip (6 samples, 0.86%)</title><rect x="51.4286%" y="485" width="0.8571%" height="15" fill="rgb(243,119,21)"/><text x="51.6786%" y="495.50"></text></g><g><title>do_softirq (5 samples, 0.71%)</title><rect x="51.5714%" y="469" width="0.7143%" height="15" fill="rgb(252,177,53)"/><text x="51.8214%" y="479.50"></text></g><g><title>do_softirq_own_stack (5 samples, 0.71%)</title><rect x="51.5714%" y="453" width="0.7143%" height="15" fill="rgb(237,209,29)"/><text x="51.8214%" y="463.50"></text></g><g><title>__do_softirq (5 samples, 0.71%)</title><rect x="51.5714%" y="437" width="0.7143%" height="15" fill="rgb(212,65,23)"/><text x="51.8214%" y="447.50"></text></g><g><title>net_rx_action (5 samples, 0.71%)</title><rect x="51.5714%" y="421" width="0.7143%" height="15" fill="rgb(230,222,46)"/><text x="51.8214%" y="431.50"></text></g><g><title>process_backlog (5 samples, 0.71%)</title><rect x="51.5714%" y="405" width="0.7143%" height="15" fill="rgb(215,135,32)"/><text x="51.8214%" y="415.50"></text></g><g><title>__netif_receive_skb_one_core (5 samples, 0.71%)</title><rect x="51.5714%" y="389" width="0.7143%" height="15" fill="rgb(246,101,22)"/><text x="51.8214%" y="399.50"></text></g><g><title>ip_rcv (5 samples, 0.71%)</title><rect x="51.5714%" y="373" width="0.7143%" height="15" fill="rgb(206,107,13)"/><text x="51.8214%" y="383.50"></text></g><g><title>ip_rcv_finish (1 samples, 0.14%)</title><rect x="52.1429%" y="357" width="0.1429%" height="15" fill="rgb(250,100,44)"/><text x="52.3929%" y="367.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.14%)</title><rect x="52.2857%" y="533" width="0.1429%" height="15" fill="rgb(231,147,38)"/><text x="52.5357%" y="543.50"></text></g><g><title>remove_wait_queue (1 samples, 0.14%)</title><rect x="52.4286%" y="533" width="0.1429%" height="15" fill="rgb(229,8,40)"/><text x="52.6786%" y="543.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.14%)</title><rect x="52.4286%" y="517" width="0.1429%" height="15" fill="rgb(221,135,30)"/><text x="52.6786%" y="527.50"></text></g><g><title>update_curr (1 samples, 0.14%)</title><rect x="53.0000%" y="437" width="0.1429%" height="15" fill="rgb(249,193,18)"/><text x="53.2500%" y="447.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.14%)</title><rect x="53.0000%" y="421" width="0.1429%" height="15" fill="rgb(209,133,39)"/><text x="53.2500%" y="431.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.14%)</title><rect x="53.1429%" y="421" width="0.1429%" height="15" fill="rgb(232,100,14)"/><text x="53.3929%" y="431.50"></text></g><g><title>dequeue_task_fair (3 samples, 0.43%)</title><rect x="53.0000%" y="469" width="0.4286%" height="15" fill="rgb(224,185,1)"/><text x="53.2500%" y="479.50"></text></g><g><title>dequeue_entity (3 samples, 0.43%)</title><rect x="53.0000%" y="453" width="0.4286%" height="15" fill="rgb(223,139,8)"/><text x="53.2500%" y="463.50"></text></g><g><title>update_load_avg (2 samples, 0.29%)</title><rect x="53.1429%" y="437" width="0.2857%" height="15" fill="rgb(232,213,38)"/><text x="53.3929%" y="447.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.14%)</title><rect x="53.2857%" y="421" width="0.1429%" height="15" fill="rgb(207,94,22)"/><text x="53.5357%" y="431.50"></text></g><g><title>sk_wait_data (10 samples, 1.43%)</title><rect x="52.2857%" y="549" width="1.4286%" height="15" fill="rgb(219,183,54)"/><text x="52.5357%" y="559.50"></text></g><g><title>wait_woken (8 samples, 1.14%)</title><rect x="52.5714%" y="533" width="1.1429%" height="15" fill="rgb(216,185,54)"/><text x="52.8214%" y="543.50"></text></g><g><title>schedule_timeout (7 samples, 1.00%)</title><rect x="52.7143%" y="517" width="1.0000%" height="15" fill="rgb(254,217,39)"/><text x="52.9643%" y="527.50"></text></g><g><title>schedule (7 samples, 1.00%)</title><rect x="52.7143%" y="501" width="1.0000%" height="15" fill="rgb(240,178,23)"/><text x="52.9643%" y="511.50"></text></g><g><title>__schedule (7 samples, 1.00%)</title><rect x="52.7143%" y="485" width="1.0000%" height="15" fill="rgb(218,11,47)"/><text x="52.9643%" y="495.50"></text></g><g><title>psi_task_change (2 samples, 0.29%)</title><rect x="53.4286%" y="469" width="0.2857%" height="15" fill="rgb(218,51,51)"/><text x="53.6786%" y="479.50"></text></g><g><title>psi_group_change (2 samples, 0.29%)</title><rect x="53.4286%" y="453" width="0.2857%" height="15" fill="rgb(238,126,27)"/><text x="53.6786%" y="463.50"></text></g><g><title>__x64_sys_recvfrom (25 samples, 3.57%)</title><rect x="50.2857%" y="613" width="3.5714%" height="15" fill="rgb(249,202,22)"/><text x="50.5357%" y="623.50">__x6..</text></g><g><title>__sys_recvfrom (25 samples, 3.57%)</title><rect x="50.2857%" y="597" width="3.5714%" height="15" fill="rgb(254,195,49)"/><text x="50.5357%" y="607.50">__sy..</text></g><g><title>inet_recvmsg (24 samples, 3.43%)</title><rect x="50.4286%" y="581" width="3.4286%" height="15" fill="rgb(208,123,14)"/><text x="50.6786%" y="591.50">ine..</text></g><g><title>tcp_recvmsg (24 samples, 3.43%)</title><rect x="50.4286%" y="565" width="3.4286%" height="15" fill="rgb(224,200,8)"/><text x="50.6786%" y="575.50">tcp..</text></g><g><title>skb_copy_datagram_iter (1 samples, 0.14%)</title><rect x="53.7143%" y="549" width="0.1429%" height="15" fill="rgb(217,61,36)"/><text x="53.9643%" y="559.50"></text></g><g><title>__skb_datagram_iter (1 samples, 0.14%)</title><rect x="53.7143%" y="533" width="0.1429%" height="15" fill="rgb(206,35,45)"/><text x="53.9643%" y="543.50"></text></g><g><title>_copy_to_iter (1 samples, 0.14%)</title><rect x="53.7143%" y="517" width="0.1429%" height="15" fill="rgb(217,65,33)"/><text x="53.9643%" y="527.50"></text></g><g><title>syscall_slow_exit_work (1 samples, 0.14%)</title><rect x="53.8571%" y="613" width="0.1429%" height="15" fill="rgb(222,158,48)"/><text x="54.1071%" y="623.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.14%)</title><rect x="53.8571%" y="597" width="0.1429%" height="15" fill="rgb(254,2,54)"/><text x="54.1071%" y="607.50"></text></g><g><title>do_syscall_64 (27 samples, 3.86%)</title><rect x="50.2857%" y="629" width="3.8571%" height="15" fill="rgb(250,143,38)"/><text x="50.5357%" y="639.50">do_s..</text></g><g><title>syscall_trace_enter (1 samples, 0.14%)</title><rect x="54.0000%" y="613" width="0.1429%" height="15" fill="rgb(248,25,0)"/><text x="54.2500%" y="623.50"></text></g><g><title>entry_SYSCALL_64 (30 samples, 4.29%)</title><rect x="50.1429%" y="645" width="4.2857%" height="15" fill="rgb(206,152,27)"/><text x="50.3929%" y="655.50">entry..</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.29%)</title><rect x="54.1429%" y="629" width="0.2857%" height="15" fill="rgb(240,77,30)"/><text x="54.3929%" y="639.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (33 samples, 4.71%)</title><rect x="50.0000%" y="741" width="4.7143%" height="15" fill="rgb(231,5,3)"/><text x="50.2500%" y="751.50">&lt;std:..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (32 samples, 4.57%)</title><rect x="50.1429%" y="725" width="4.5714%" height="15" fill="rgb(207,226,32)"/><text x="50.3929%" y="735.50">&lt;std:..</text></g><g><title>std::sys_common::net::TcpStream::read (32 samples, 4.57%)</title><rect x="50.1429%" y="709" width="4.5714%" height="15" fill="rgb(222,207,47)"/><text x="50.3929%" y="719.50">std::..</text></g><g><title>std::sys::unix::net::Socket::read (32 samples, 4.57%)</title><rect x="50.1429%" y="693" width="4.5714%" height="15" fill="rgb(229,115,45)"/><text x="50.3929%" y="703.50">std::..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (32 samples, 4.57%)</title><rect x="50.1429%" y="677" width="4.5714%" height="15" fill="rgb(224,191,6)"/><text x="50.3929%" y="687.50">std::..</text></g><g><title>__libc_recv (32 samples, 4.57%)</title><rect x="50.1429%" y="661" width="4.5714%" height="15" fill="rgb(230,227,24)"/><text x="50.3929%" y="671.50">__lib..</text></g><g><title>syscall_return_via_sysret (2 samples, 0.29%)</title><rect x="54.4286%" y="645" width="0.2857%" height="15" fill="rgb(228,80,19)"/><text x="54.6786%" y="655.50"></text></g><g><title>__memset_avx2_erms (2 samples, 0.29%)</title><rect x="54.7143%" y="741" width="0.2857%" height="15" fill="rgb(247,229,0)"/><text x="54.9643%" y="751.50"></text></g><g><title>msql_srv::packet::PacketReader&lt;R&gt;::next (36 samples, 5.14%)</title><rect x="50.0000%" y="757" width="5.1429%" height="15" fill="rgb(237,194,15)"/><text x="50.2500%" y="767.50">msql_s..</text></g><g><title>msql_srv::packet::packet (1 samples, 0.14%)</title><rect x="55.0000%" y="741" width="0.1429%" height="15" fill="rgb(219,203,20)"/><text x="55.2500%" y="751.50"></text></g><g><title>__pthread_disable_asynccancel (1 samples, 0.14%)</title><rect x="55.2857%" y="693" width="0.1429%" height="15" fill="rgb(234,128,8)"/><text x="55.5357%" y="703.50"></text></g><g><title>__x86_indirect_thunk_rax (1 samples, 0.14%)</title><rect x="55.4286%" y="693" width="0.1429%" height="15" fill="rgb(248,202,8)"/><text x="55.6786%" y="703.50"></text></g><g><title>import_single_range (1 samples, 0.14%)</title><rect x="55.8571%" y="629" width="0.1429%" height="15" fill="rgb(206,104,37)"/><text x="56.1071%" y="639.50"></text></g><g><title>inet_sendmsg (1 samples, 0.14%)</title><rect x="56.0000%" y="613" width="0.1429%" height="15" fill="rgb(223,8,27)"/><text x="56.2500%" y="623.50"></text></g><g><title>lock_sock_nested (1 samples, 0.14%)</title><rect x="56.1429%" y="597" width="0.1429%" height="15" fill="rgb(216,217,28)"/><text x="56.3929%" y="607.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.14%)</title><rect x="56.1429%" y="581" width="0.1429%" height="15" fill="rgb(249,199,1)"/><text x="56.3929%" y="591.50"></text></g><g><title>preempt_count_add (1 samples, 0.14%)</title><rect x="56.1429%" y="565" width="0.1429%" height="15" fill="rgb(240,85,17)"/><text x="56.3929%" y="575.50"></text></g><g><title>release_sock (2 samples, 0.29%)</title><rect x="56.2857%" y="597" width="0.2857%" height="15" fill="rgb(206,108,45)"/><text x="56.5357%" y="607.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.14%)</title><rect x="56.4286%" y="581" width="0.1429%" height="15" fill="rgb(245,210,41)"/><text x="56.6786%" y="591.50"></text></g><g><title>preempt_count_add (1 samples, 0.14%)</title><rect x="56.4286%" y="565" width="0.1429%" height="15" fill="rgb(206,13,37)"/><text x="56.6786%" y="575.50"></text></g><g><title>in_lock_functions (1 samples, 0.14%)</title><rect x="56.4286%" y="549" width="0.1429%" height="15" fill="rgb(250,61,18)"/><text x="56.6786%" y="559.50"></text></g><g><title>__ip_local_out (1 samples, 0.14%)</title><rect x="57.0000%" y="517" width="0.1429%" height="15" fill="rgb(235,172,48)"/><text x="57.2500%" y="527.50"></text></g><g><title>__ip_finish_output (1 samples, 0.14%)</title><rect x="57.1429%" y="501" width="0.1429%" height="15" fill="rgb(249,201,17)"/><text x="57.3929%" y="511.50"></text></g><g><title>ipv4_mtu (1 samples, 0.14%)</title><rect x="57.1429%" y="485" width="0.1429%" height="15" fill="rgb(219,208,6)"/><text x="57.3929%" y="495.50"></text></g><g><title>__dev_queue_xmit (1 samples, 0.14%)</title><rect x="57.4286%" y="485" width="0.1429%" height="15" fill="rgb(248,31,23)"/><text x="57.6786%" y="495.50"></text></g><g><title>dev_hard_start_xmit (1 samples, 0.14%)</title><rect x="57.4286%" y="469" width="0.1429%" height="15" fill="rgb(245,15,42)"/><text x="57.6786%" y="479.50"></text></g><g><title>loopback_xmit (1 samples, 0.14%)</title><rect x="57.4286%" y="453" width="0.1429%" height="15" fill="rgb(222,217,39)"/><text x="57.6786%" y="463.50"></text></g><g><title>skb_clone_tx_timestamp (1 samples, 0.14%)</title><rect x="57.4286%" y="437" width="0.1429%" height="15" fill="rgb(210,219,27)"/><text x="57.6786%" y="447.50"></text></g><g><title>irqtime_account_irq (1 samples, 0.14%)</title><rect x="57.5714%" y="421" width="0.1429%" height="15" fill="rgb(252,166,36)"/><text x="57.8214%" y="431.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.14%)</title><rect x="57.5714%" y="405" width="0.1429%" height="15" fill="rgb(245,132,34)"/><text x="57.8214%" y="415.50"></text></g><g><title>sched_clock (1 samples, 0.14%)</title><rect x="57.5714%" y="389" width="0.1429%" height="15" fill="rgb(236,54,3)"/><text x="57.8214%" y="399.50"></text></g><g><title>native_sched_clock (1 samples, 0.14%)</title><rect x="57.5714%" y="373" width="0.1429%" height="15" fill="rgb(241,173,43)"/><text x="57.8214%" y="383.50"></text></g><g><title>__inet_lookup_established (1 samples, 0.14%)</title><rect x="58.4286%" y="293" width="0.1429%" height="15" fill="rgb(215,190,9)"/><text x="58.6786%" y="303.50"></text></g><g><title>inet_ehashfn (1 samples, 0.14%)</title><rect x="58.4286%" y="277" width="0.1429%" height="15" fill="rgb(242,101,16)"/><text x="58.6786%" y="287.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.14%)</title><rect x="58.7143%" y="197" width="0.1429%" height="15" fill="rgb(223,190,21)"/><text x="58.9643%" y="207.50"></text></g><g><title>psi_task_change (2 samples, 0.29%)</title><rect x="58.8571%" y="181" width="0.2857%" height="15" fill="rgb(215,228,25)"/><text x="59.1071%" y="191.50"></text></g><g><title>psi_group_change (2 samples, 0.29%)</title><rect x="58.8571%" y="165" width="0.2857%" height="15" fill="rgb(225,36,22)"/><text x="59.1071%" y="175.50"></text></g><g><title>record_times (2 samples, 0.29%)</title><rect x="58.8571%" y="149" width="0.2857%" height="15" fill="rgb(251,106,46)"/><text x="59.1071%" y="159.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.14%)</title><rect x="59.0000%" y="133" width="0.1429%" height="15" fill="rgb(208,90,1)"/><text x="59.2500%" y="143.50"></text></g><g><title>sched_clock (1 samples, 0.14%)</title><rect x="59.0000%" y="117" width="0.1429%" height="15" fill="rgb(243,10,4)"/><text x="59.2500%" y="127.50"></text></g><g><title>native_sched_clock (1 samples, 0.14%)</title><rect x="59.0000%" y="101" width="0.1429%" height="15" fill="rgb(212,137,27)"/><text x="59.2500%" y="111.50"></text></g><g><title>enqueue_task (3 samples, 0.43%)</title><rect x="58.8571%" y="197" width="0.4286%" height="15" fill="rgb(231,220,49)"/><text x="59.1071%" y="207.50"></text></g><g><title>uclamp_rq_inc_id (1 samples, 0.14%)</title><rect x="59.1429%" y="181" width="0.1429%" height="15" fill="rgb(237,96,20)"/><text x="59.3929%" y="191.50"></text></g><g><title>enqueue_task_fair (2 samples, 0.29%)</title><rect x="59.2857%" y="197" width="0.2857%" height="15" fill="rgb(239,229,30)"/><text x="59.5357%" y="207.50"></text></g><g><title>enqueue_entity (1 samples, 0.14%)</title><rect x="59.4286%" y="181" width="0.1429%" height="15" fill="rgb(219,65,33)"/><text x="59.6786%" y="191.50"></text></g><g><title>reweight_entity (1 samples, 0.14%)</title><rect x="59.4286%" y="165" width="0.1429%" height="15" fill="rgb(243,134,7)"/><text x="59.6786%" y="175.50"></text></g><g><title>find_first_bit (1 samples, 0.14%)</title><rect x="59.5714%" y="197" width="0.1429%" height="15" fill="rgb(216,177,54)"/><text x="59.8214%" y="207.50"></text></g><g><title>sock_def_readable (9 samples, 1.29%)</title><rect x="58.5714%" y="261" width="1.2857%" height="15" fill="rgb(211,160,20)"/><text x="58.8214%" y="271.50"></text></g><g><title>__wake_up_common_lock (9 samples, 1.29%)</title><rect x="58.5714%" y="245" width="1.2857%" height="15" fill="rgb(239,85,39)"/><text x="58.8214%" y="255.50"></text></g><g><title>__wake_up_common (9 samples, 1.29%)</title><rect x="58.5714%" y="229" width="1.2857%" height="15" fill="rgb(232,125,22)"/><text x="58.8214%" y="239.50"></text></g><g><title>try_to_wake_up (8 samples, 1.14%)</title><rect x="58.7143%" y="213" width="1.1429%" height="15" fill="rgb(244,57,34)"/><text x="58.9643%" y="223.50"></text></g><g><title>ttwu_do_wakeup (1 samples, 0.14%)</title><rect x="59.7143%" y="197" width="0.1429%" height="15" fill="rgb(214,203,32)"/><text x="59.9643%" y="207.50"></text></g><g><title>check_preempt_curr (1 samples, 0.14%)</title><rect x="59.7143%" y="181" width="0.1429%" height="15" fill="rgb(207,58,43)"/><text x="59.9643%" y="191.50"></text></g><g><title>resched_curr (1 samples, 0.14%)</title><rect x="59.7143%" y="165" width="0.1429%" height="15" fill="rgb(215,193,15)"/><text x="59.9643%" y="175.50"></text></g><g><title>tcp_v4_do_rcv (12 samples, 1.71%)</title><rect x="58.5714%" y="293" width="1.7143%" height="15" fill="rgb(232,15,44)"/><text x="58.8214%" y="303.50"></text></g><g><title>tcp_rcv_established (12 samples, 1.71%)</title><rect x="58.5714%" y="277" width="1.7143%" height="15" fill="rgb(212,3,48)"/><text x="58.8214%" y="287.50"></text></g><g><title>tcp_ack (3 samples, 0.43%)</title><rect x="59.8571%" y="261" width="0.4286%" height="15" fill="rgb(218,128,7)"/><text x="60.1071%" y="271.50"></text></g><g><title>tcp_rearm_rto (2 samples, 0.29%)</title><rect x="60.0000%" y="245" width="0.2857%" height="15" fill="rgb(226,216,39)"/><text x="60.2500%" y="255.50"></text></g><g><title>tcp_v4_fill_cb (1 samples, 0.14%)</title><rect x="60.2857%" y="293" width="0.1429%" height="15" fill="rgb(243,47,51)"/><text x="60.5357%" y="303.50"></text></g><g><title>ip_local_deliver (18 samples, 2.57%)</title><rect x="58.0000%" y="357" width="2.5714%" height="15" fill="rgb(241,183,40)"/><text x="58.2500%" y="367.50">ip..</text></g><g><title>ip_local_deliver_finish (18 samples, 2.57%)</title><rect x="58.0000%" y="341" width="2.5714%" height="15" fill="rgb(231,217,32)"/><text x="58.2500%" y="351.50">ip..</text></g><g><title>ip_protocol_deliver_rcu (18 samples, 2.57%)</title><rect x="58.0000%" y="325" width="2.5714%" height="15" fill="rgb(229,61,38)"/><text x="58.2500%" y="335.50">ip..</text></g><g><title>tcp_v4_rcv (16 samples, 2.29%)</title><rect x="58.2857%" y="309" width="2.2857%" height="15" fill="rgb(225,210,5)"/><text x="58.5357%" y="319.50">t..</text></g><g><title>tcp_v4_inbound_md5_hash (1 samples, 0.14%)</title><rect x="60.4286%" y="293" width="0.1429%" height="15" fill="rgb(231,79,45)"/><text x="60.6786%" y="303.50"></text></g><g><title>ip_rcv_core (1 samples, 0.14%)</title><rect x="60.5714%" y="357" width="0.1429%" height="15" fill="rgb(224,100,7)"/><text x="60.8214%" y="367.50"></text></g><g><title>ip_finish_output2 (25 samples, 3.57%)</title><rect x="57.2857%" y="501" width="3.5714%" height="15" fill="rgb(241,198,18)"/><text x="57.5357%" y="511.50">ip_f..</text></g><g><title>__local_bh_enable_ip (23 samples, 3.29%)</title><rect x="57.5714%" y="485" width="3.2857%" height="15" fill="rgb(252,97,53)"/><text x="57.8214%" y="495.50">__l..</text></g><g><title>do_softirq (23 samples, 3.29%)</title><rect x="57.5714%" y="469" width="3.2857%" height="15" fill="rgb(220,88,7)"/><text x="57.8214%" y="479.50">do_..</text></g><g><title>do_softirq_own_stack (23 samples, 3.29%)</title><rect x="57.5714%" y="453" width="3.2857%" height="15" fill="rgb(213,176,14)"/><text x="57.8214%" y="463.50">do_..</text></g><g><title>__do_softirq (23 samples, 3.29%)</title><rect x="57.5714%" y="437" width="3.2857%" height="15" fill="rgb(246,73,7)"/><text x="57.8214%" y="447.50">__d..</text></g><g><title>net_rx_action (22 samples, 3.14%)</title><rect x="57.7143%" y="421" width="3.1429%" height="15" fill="rgb(245,64,36)"/><text x="57.9643%" y="431.50">net..</text></g><g><title>process_backlog (21 samples, 3.00%)</title><rect x="57.8571%" y="405" width="3.0000%" height="15" fill="rgb(245,80,10)"/><text x="58.1071%" y="415.50">pro..</text></g><g><title>__netif_receive_skb_one_core (20 samples, 2.86%)</title><rect x="58.0000%" y="389" width="2.8571%" height="15" fill="rgb(232,107,50)"/><text x="58.2500%" y="399.50">__..</text></g><g><title>ip_rcv (20 samples, 2.86%)</title><rect x="58.0000%" y="373" width="2.8571%" height="15" fill="rgb(253,3,0)"/><text x="58.2500%" y="383.50">ip..</text></g><g><title>ip_rcv_finish (1 samples, 0.14%)</title><rect x="60.7143%" y="357" width="0.1429%" height="15" fill="rgb(212,99,53)"/><text x="60.9643%" y="367.50"></text></g><g><title>ip_rcv_finish_core.constprop.0 (1 samples, 0.14%)</title><rect x="60.7143%" y="341" width="0.1429%" height="15" fill="rgb(249,111,54)"/><text x="60.9643%" y="351.50"></text></g><g><title>__ip_queue_xmit (29 samples, 4.14%)</title><rect x="56.8571%" y="533" width="4.1429%" height="15" fill="rgb(249,55,30)"/><text x="57.1071%" y="543.50">__ip_..</text></g><g><title>ip_output (27 samples, 3.86%)</title><rect x="57.1429%" y="517" width="3.8571%" height="15" fill="rgb(237,47,42)"/><text x="57.3929%" y="527.50">ip_o..</text></g><g><title>ip_finish_output (1 samples, 0.14%)</title><rect x="60.8571%" y="501" width="0.1429%" height="15" fill="rgb(211,20,18)"/><text x="61.1071%" y="511.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (1 samples, 0.14%)</title><rect x="60.8571%" y="485" width="0.1429%" height="15" fill="rgb(231,203,46)"/><text x="61.1071%" y="495.50"></text></g><g><title>__tcp_transmit_skb (33 samples, 4.71%)</title><rect x="56.5714%" y="549" width="4.7143%" height="15" fill="rgb(237,142,3)"/><text x="56.8214%" y="559.50">__tcp..</text></g><g><title>tcp_established_options (2 samples, 0.29%)</title><rect x="61.0000%" y="533" width="0.2857%" height="15" fill="rgb(241,107,1)"/><text x="61.2500%" y="543.50"></text></g><g><title>tcp_event_new_data_sent (1 samples, 0.14%)</title><rect x="61.2857%" y="549" width="0.1429%" height="15" fill="rgb(229,83,13)"/><text x="61.5357%" y="559.50"></text></g><g><title>__tcp_push_pending_frames (37 samples, 5.29%)</title><rect x="56.5714%" y="581" width="5.2857%" height="15" fill="rgb(241,91,40)"/><text x="56.8214%" y="591.50">__tcp_..</text></g><g><title>tcp_write_xmit (37 samples, 5.29%)</title><rect x="56.5714%" y="565" width="5.2857%" height="15" fill="rgb(225,3,45)"/><text x="56.8214%" y="575.50">tcp_wr..</text></g><g><title>tcp_schedule_loss_probe.part.0 (3 samples, 0.43%)</title><rect x="61.4286%" y="549" width="0.4286%" height="15" fill="rgb(244,223,14)"/><text x="61.6786%" y="559.50"></text></g><g><title>__ksize (1 samples, 0.14%)</title><rect x="61.8571%" y="549" width="0.1429%" height="15" fill="rgb(224,124,37)"/><text x="62.1071%" y="559.50"></text></g><g><title>sk_stream_alloc_skb (2 samples, 0.29%)</title><rect x="61.8571%" y="581" width="0.2857%" height="15" fill="rgb(251,171,30)"/><text x="62.1071%" y="591.50"></text></g><g><title>__alloc_skb (2 samples, 0.29%)</title><rect x="61.8571%" y="565" width="0.2857%" height="15" fill="rgb(236,46,54)"/><text x="62.1071%" y="575.50"></text></g><g><title>kmem_cache_alloc_node (1 samples, 0.14%)</title><rect x="62.0000%" y="549" width="0.1429%" height="15" fill="rgb(245,213,5)"/><text x="62.2500%" y="559.50"></text></g><g><title>memcg_kmem_put_cache (1 samples, 0.14%)</title><rect x="62.0000%" y="533" width="0.1429%" height="15" fill="rgb(230,144,27)"/><text x="62.2500%" y="543.50"></text></g><g><title>tcp_push (1 samples, 0.14%)</title><rect x="62.1429%" y="581" width="0.1429%" height="15" fill="rgb(220,86,6)"/><text x="62.3929%" y="591.50"></text></g><g><title>sock_sendmsg (46 samples, 6.57%)</title><rect x="56.0000%" y="629" width="6.5714%" height="15" fill="rgb(240,20,13)"/><text x="56.2500%" y="639.50">sock_send..</text></g><g><title>tcp_sendmsg (45 samples, 6.43%)</title><rect x="56.1429%" y="613" width="6.4286%" height="15" fill="rgb(217,89,34)"/><text x="56.3929%" y="623.50">tcp_send..</text></g><g><title>tcp_sendmsg_locked (42 samples, 6.00%)</title><rect x="56.5714%" y="597" width="6.0000%" height="15" fill="rgb(229,13,5)"/><text x="56.8214%" y="607.50">tcp_send..</text></g><g><title>tcp_send_mss (2 samples, 0.29%)</title><rect x="62.2857%" y="581" width="0.2857%" height="15" fill="rgb(244,67,35)"/><text x="62.5357%" y="591.50"></text></g><g><title>tcp_current_mss (2 samples, 0.29%)</title><rect x="62.2857%" y="565" width="0.2857%" height="15" fill="rgb(221,40,2)"/><text x="62.5357%" y="575.50"></text></g><g><title>ipv4_mtu (2 samples, 0.29%)</title><rect x="62.2857%" y="549" width="0.2857%" height="15" fill="rgb(237,157,21)"/><text x="62.5357%" y="559.50"></text></g><g><title>do_syscall_64 (49 samples, 7.00%)</title><rect x="55.7143%" y="677" width="7.0000%" height="15" fill="rgb(222,94,11)"/><text x="55.9643%" y="687.50">do_syscal..</text></g><g><title>__x64_sys_sendto (49 samples, 7.00%)</title><rect x="55.7143%" y="661" width="7.0000%" height="15" fill="rgb(249,113,6)"/><text x="55.9643%" y="671.50">__x64_sys..</text></g><g><title>__sys_sendto (49 samples, 7.00%)</title><rect x="55.7143%" y="645" width="7.0000%" height="15" fill="rgb(238,137,36)"/><text x="55.9643%" y="655.50">__sys_sen..</text></g><g><title>sockfd_lookup_light (1 samples, 0.14%)</title><rect x="62.5714%" y="629" width="0.1429%" height="15" fill="rgb(210,102,26)"/><text x="62.8214%" y="639.50"></text></g><g><title>__fget_light (1 samples, 0.14%)</title><rect x="62.5714%" y="613" width="0.1429%" height="15" fill="rgb(218,30,30)"/><text x="62.8214%" y="623.50"></text></g><g><title>__GI___clone (214 samples, 30.57%)</title><rect x="32.4286%" y="901" width="30.5714%" height="15" fill="rgb(214,67,26)"/><text x="32.6786%" y="911.50">__GI___clone</text></g><g><title>start_thread (214 samples, 30.57%)</title><rect x="32.4286%" y="885" width="30.5714%" height="15" fill="rgb(251,9,53)"/><text x="32.6786%" y="895.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (214 samples, 30.57%)</title><rect x="32.4286%" y="869" width="30.5714%" height="15" fill="rgb(228,204,25)"/><text x="32.6786%" y="879.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (214 samples, 30.57%)</title><rect x="32.4286%" y="853" width="30.5714%" height="15" fill="rgb(207,153,8)"/><text x="32.6786%" y="863.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnO..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (214 samples, 30.57%)</title><rect x="32.4286%" y="837" width="30.5714%" height="15" fill="rgb(242,9,16)"/><text x="32.6786%" y="847.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnO..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (214 samples, 30.57%)</title><rect x="32.4286%" y="821" width="30.5714%" height="15" fill="rgb(217,211,10)"/><text x="32.6786%" y="831.50">core::ops::function::FnOnce::call_once{{vtable-sh..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (214 samples, 30.57%)</title><rect x="32.4286%" y="805" width="30.5714%" height="15" fill="rgb(219,228,52)"/><text x="32.6786%" y="815.50">std::sys_common::backtrace::__rust_begin_short_ba..</text></g><g><title>decor::Shim::run_on_tcp (214 samples, 30.57%)</title><rect x="32.4286%" y="789" width="30.5714%" height="15" fill="rgb(231,92,29)"/><text x="32.6786%" y="799.50">decor::Shim::run_on_tcp</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (214 samples, 30.57%)</title><rect x="32.4286%" y="773" width="30.5714%" height="15" fill="rgb(232,8,23)"/><text x="32.6786%" y="783.50">msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (55 samples, 7.86%)</title><rect x="55.1429%" y="757" width="7.8571%" height="15" fill="rgb(216,211,34)"/><text x="55.3929%" y="767.50">std::io::bu..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (54 samples, 7.71%)</title><rect x="55.2857%" y="741" width="7.7143%" height="15" fill="rgb(236,151,0)"/><text x="55.5357%" y="751.50">&lt;std::net::..</text></g><g><title>std::sys_common::net::TcpStream::write (54 samples, 7.71%)</title><rect x="55.2857%" y="725" width="7.7143%" height="15" fill="rgb(209,168,3)"/><text x="55.5357%" y="735.50">std::sys_co..</text></g><g><title>__libc_send (54 samples, 7.71%)</title><rect x="55.2857%" y="709" width="7.7143%" height="15" fill="rgb(208,129,28)"/><text x="55.5357%" y="719.50">__libc_send</text></g><g><title>entry_SYSCALL_64 (52 samples, 7.43%)</title><rect x="55.5714%" y="693" width="7.4286%" height="15" fill="rgb(229,78,22)"/><text x="55.8214%" y="703.50">entry_SYSC..</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.29%)</title><rect x="62.7143%" y="677" width="0.2857%" height="15" fill="rgb(228,187,13)"/><text x="62.9643%" y="687.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.14%)</title><rect x="63.1429%" y="725" width="0.1429%" height="15" fill="rgb(240,119,24)"/><text x="63.3929%" y="735.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.14%)</title><rect x="63.1429%" y="709" width="0.1429%" height="15" fill="rgb(209,194,42)"/><text x="63.3929%" y="719.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.14%)</title><rect x="63.1429%" y="693" width="0.1429%" height="15" fill="rgb(247,200,46)"/><text x="63.3929%" y="703.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.14%)</title><rect x="63.1429%" y="677" width="0.1429%" height="15" fill="rgb(218,76,16)"/><text x="63.3929%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.14%)</title><rect x="63.1429%" y="661" width="0.1429%" height="15" fill="rgb(225,21,48)"/><text x="63.3929%" y="671.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.14%)</title><rect x="63.1429%" y="645" width="0.1429%" height="15" fill="rgb(239,223,50)"/><text x="63.3929%" y="655.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.14%)</title><rect x="63.2857%" y="661" width="0.1429%" height="15" fill="rgb(244,45,21)"/><text x="63.5357%" y="671.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.14%)</title><rect x="63.2857%" y="645" width="0.1429%" height="15" fill="rgb(232,33,43)"/><text x="63.5357%" y="655.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.14%)</title><rect x="63.2857%" y="629" width="0.1429%" height="15" fill="rgb(209,8,3)"/><text x="63.5357%" y="639.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.14%)</title><rect x="63.2857%" y="613" width="0.1429%" height="15" fill="rgb(214,25,53)"/><text x="63.5357%" y="623.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.29%)</title><rect x="63.2857%" y="725" width="0.2857%" height="15" fill="rgb(254,186,54)"/><text x="63.5357%" y="735.50"></text></g><g><title>hwloc_topology_destroy (2 samples, 0.29%)</title><rect x="63.2857%" y="709" width="0.2857%" height="15" fill="rgb(208,174,49)"/><text x="63.5357%" y="719.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.29%)</title><rect x="63.2857%" y="693" width="0.2857%" height="15" fill="rgb(233,191,51)"/><text x="63.5357%" y="703.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.29%)</title><rect x="63.2857%" y="677" width="0.2857%" height="15" fill="rgb(222,134,10)"/><text x="63.5357%" y="687.50"></text></g><g><title>dlclose (1 samples, 0.14%)</title><rect x="63.4286%" y="661" width="0.1429%" height="15" fill="rgb(230,226,20)"/><text x="63.6786%" y="671.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.14%)</title><rect x="63.4286%" y="645" width="0.1429%" height="15" fill="rgb(251,111,25)"/><text x="63.6786%" y="655.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.14%)</title><rect x="63.4286%" y="629" width="0.1429%" height="15" fill="rgb(224,40,46)"/><text x="63.6786%" y="639.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.14%)</title><rect x="63.4286%" y="613" width="0.1429%" height="15" fill="rgb(236,108,47)"/><text x="63.6786%" y="623.50"></text></g><g><title>_dl_close (1 samples, 0.14%)</title><rect x="63.4286%" y="597" width="0.1429%" height="15" fill="rgb(234,93,0)"/><text x="63.6786%" y="607.50"></text></g><g><title>_dl_close_worker (1 samples, 0.14%)</title><rect x="63.4286%" y="581" width="0.1429%" height="15" fill="rgb(224,213,32)"/><text x="63.6786%" y="591.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.14%)</title><rect x="63.5714%" y="645" width="0.1429%" height="15" fill="rgb(251,11,48)"/><text x="63.8214%" y="655.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="63.5714%" y="629" width="0.1429%" height="15" fill="rgb(236,173,5)"/><text x="63.8214%" y="639.50"></text></g><g><title>_int_malloc (1 samples, 0.14%)</title><rect x="63.5714%" y="613" width="0.1429%" height="15" fill="rgb(230,95,12)"/><text x="63.8214%" y="623.50"></text></g><g><title>page_fault (1 samples, 0.14%)</title><rect x="63.5714%" y="597" width="0.1429%" height="15" fill="rgb(232,209,1)"/><text x="63.8214%" y="607.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.14%)</title><rect x="63.5714%" y="581" width="0.1429%" height="15" fill="rgb(232,6,1)"/><text x="63.8214%" y="591.50"></text></g><g><title>handle_mm_fault (1 samples, 0.14%)</title><rect x="63.5714%" y="565" width="0.1429%" height="15" fill="rgb(210,224,50)"/><text x="63.8214%" y="575.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.14%)</title><rect x="63.5714%" y="549" width="0.1429%" height="15" fill="rgb(228,127,35)"/><text x="63.8214%" y="559.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.14%)</title><rect x="63.5714%" y="533" width="0.1429%" height="15" fill="rgb(245,102,45)"/><text x="63.8214%" y="543.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.14%)</title><rect x="63.5714%" y="517" width="0.1429%" height="15" fill="rgb(214,1,49)"/><text x="63.8214%" y="527.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.14%)</title><rect x="63.5714%" y="501" width="0.1429%" height="15" fill="rgb(226,163,40)"/><text x="63.8214%" y="511.50"></text></g><g><title>prep_new_page (1 samples, 0.14%)</title><rect x="63.5714%" y="485" width="0.1429%" height="15" fill="rgb(239,212,28)"/><text x="63.8214%" y="495.50"></text></g><g><title>kernel_init_free_pages (1 samples, 0.14%)</title><rect x="63.5714%" y="469" width="0.1429%" height="15" fill="rgb(220,20,13)"/><text x="63.8214%" y="479.50"></text></g><g><title>__GI___openat (1 samples, 0.14%)</title><rect x="63.7143%" y="645" width="0.1429%" height="15" fill="rgb(210,164,35)"/><text x="63.9643%" y="655.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="63.7143%" y="629" width="0.1429%" height="15" fill="rgb(248,109,41)"/><text x="63.9643%" y="639.50"></text></g><g><title>do_syscall_64 (1 samples, 0.14%)</title><rect x="63.7143%" y="613" width="0.1429%" height="15" fill="rgb(238,23,50)"/><text x="63.9643%" y="623.50"></text></g><g><title>__x64_sys_openat (1 samples, 0.14%)</title><rect x="63.7143%" y="597" width="0.1429%" height="15" fill="rgb(211,48,49)"/><text x="63.9643%" y="607.50"></text></g><g><title>do_sys_openat2 (1 samples, 0.14%)</title><rect x="63.7143%" y="581" width="0.1429%" height="15" fill="rgb(223,36,21)"/><text x="63.9643%" y="591.50"></text></g><g><title>do_filp_open (1 samples, 0.14%)</title><rect x="63.7143%" y="565" width="0.1429%" height="15" fill="rgb(207,123,46)"/><text x="63.9643%" y="575.50"></text></g><g><title>path_openat (1 samples, 0.14%)</title><rect x="63.7143%" y="549" width="0.1429%" height="15" fill="rgb(240,218,32)"/><text x="63.9643%" y="559.50"></text></g><g><title>link_path_walk (1 samples, 0.14%)</title><rect x="63.7143%" y="533" width="0.1429%" height="15" fill="rgb(252,5,43)"/><text x="63.9643%" y="543.50"></text></g><g><title>inode_permission.part.0 (1 samples, 0.14%)</title><rect x="63.7143%" y="517" width="0.1429%" height="15" fill="rgb(252,84,19)"/><text x="63.9643%" y="527.50"></text></g><g><title>generic_permission (1 samples, 0.14%)</title><rect x="63.7143%" y="501" width="0.1429%" height="15" fill="rgb(243,152,39)"/><text x="63.9643%" y="511.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.14%)</title><rect x="63.8571%" y="629" width="0.1429%" height="15" fill="rgb(234,160,15)"/><text x="64.1071%" y="639.50"></text></g><g><title>__GI___libc_free (1 samples, 0.14%)</title><rect x="64.0000%" y="629" width="0.1429%" height="15" fill="rgb(237,34,20)"/><text x="64.2500%" y="639.50"></text></g><g><title>__perf_event_task_sched_in (231 samples, 33.00%)</title><rect x="64.5714%" y="437" width="33.0000%" height="15" fill="rgb(229,97,13)"/><text x="64.8214%" y="447.50">__perf_event_task_sched_in</text></g><g><title>__intel_pmu_enable_all.constprop.0 (230 samples, 32.86%)</title><rect x="64.7143%" y="421" width="32.8571%" height="15" fill="rgb(234,71,50)"/><text x="64.9643%" y="431.50">__intel_pmu_enable_all.constprop.0</text></g><g><title>native_write_msr (228 samples, 32.57%)</title><rect x="65.0000%" y="405" width="32.5714%" height="15" fill="rgb(253,155,4)"/><text x="65.2500%" y="415.50">native_write_msr</text></g><g><title>[libhwloc.so.15.2.0] (239 samples, 34.14%)</title><rect x="63.5714%" y="661" width="34.1429%" height="15" fill="rgb(222,185,37)"/><text x="63.8214%" y="671.50">[libhwloc.so.15.2.0]</text></g><g><title>hwloc_linux_set_tid_cpubind (237 samples, 33.86%)</title><rect x="63.8571%" y="645" width="33.8571%" height="15" fill="rgb(251,177,13)"/><text x="64.1071%" y="655.50">hwloc_linux_set_tid_cpubind</text></g><g><title>__GI___sched_setaffinity_new (235 samples, 33.57%)</title><rect x="64.1429%" y="629" width="33.5714%" height="15" fill="rgb(250,179,40)"/><text x="64.3929%" y="639.50">__GI___sched_setaffinity_new</text></g><g><title>entry_SYSCALL_64 (234 samples, 33.43%)</title><rect x="64.2857%" y="613" width="33.4286%" height="15" fill="rgb(242,44,2)"/><text x="64.5357%" y="623.50">entry_SYSCALL_64</text></g><g><title>do_syscall_64 (234 samples, 33.43%)</title><rect x="64.2857%" y="597" width="33.4286%" height="15" fill="rgb(216,177,13)"/><text x="64.5357%" y="607.50">do_syscall_64</text></g><g><title>__x64_sys_sched_setaffinity (234 samples, 33.43%)</title><rect x="64.2857%" y="581" width="33.4286%" height="15" fill="rgb(216,106,43)"/><text x="64.5357%" y="591.50">__x64_sys_sched_setaffinity</text></g><g><title>sched_setaffinity (234 samples, 33.43%)</title><rect x="64.2857%" y="565" width="33.4286%" height="15" fill="rgb(216,183,2)"/><text x="64.5357%" y="575.50">sched_setaffinity</text></g><g><title>__set_cpus_allowed_ptr (234 samples, 33.43%)</title><rect x="64.2857%" y="549" width="33.4286%" height="15" fill="rgb(249,75,3)"/><text x="64.5357%" y="559.50">__set_cpus_allowed_ptr</text></g><g><title>stop_one_cpu (234 samples, 33.43%)</title><rect x="64.2857%" y="533" width="33.4286%" height="15" fill="rgb(219,67,39)"/><text x="64.5357%" y="543.50">stop_one_cpu</text></g><g><title>cpu_stop_queue_work (234 samples, 33.43%)</title><rect x="64.2857%" y="517" width="33.4286%" height="15" fill="rgb(253,228,2)"/><text x="64.5357%" y="527.50">cpu_stop_queue_work</text></g><g><title>preempt_schedule_thunk (234 samples, 33.43%)</title><rect x="64.2857%" y="501" width="33.4286%" height="15" fill="rgb(235,138,27)"/><text x="64.5357%" y="511.50">preempt_schedule_thunk</text></g><g><title>preempt_schedule_common (234 samples, 33.43%)</title><rect x="64.2857%" y="485" width="33.4286%" height="15" fill="rgb(236,97,51)"/><text x="64.5357%" y="495.50">preempt_schedule_common</text></g><g><title>__schedule (234 samples, 33.43%)</title><rect x="64.2857%" y="469" width="33.4286%" height="15" fill="rgb(240,80,30)"/><text x="64.5357%" y="479.50">__schedule</text></g><g><title>finish_task_switch (234 samples, 33.43%)</title><rect x="64.2857%" y="453" width="33.4286%" height="15" fill="rgb(230,178,19)"/><text x="64.5357%" y="463.50">finish_task_switch</text></g><g><title>_raw_spin_unlock_irq (1 samples, 0.14%)</title><rect x="97.5714%" y="437" width="0.1429%" height="15" fill="rgb(210,190,27)"/><text x="97.8214%" y="447.50"></text></g><g><title>hwloc::Topology::new (240 samples, 34.29%)</title><rect x="63.5714%" y="725" width="34.2857%" height="15" fill="rgb(222,107,31)"/><text x="63.8214%" y="735.50">hwloc::Topology::new</text></g><g><title>hwloc_topology_load (240 samples, 34.29%)</title><rect x="63.5714%" y="709" width="34.2857%" height="15" fill="rgb(216,127,34)"/><text x="63.8214%" y="719.50">hwloc_topology_load</text></g><g><title>[libhwloc.so.15.2.0] (240 samples, 34.29%)</title><rect x="63.5714%" y="693" width="34.2857%" height="15" fill="rgb(234,116,52)"/><text x="63.8214%" y="703.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (240 samples, 34.29%)</title><rect x="63.5714%" y="677" width="34.2857%" height="15" fill="rgb(222,124,15)"/><text x="63.8214%" y="687.50">[libhwloc.so.15.2.0]</text></g><g><title>fgets (1 samples, 0.14%)</title><rect x="97.7143%" y="661" width="0.1429%" height="15" fill="rgb(231,179,28)"/><text x="97.9643%" y="671.50"></text></g><g><title>__GI__IO_getline_info (1 samples, 0.14%)</title><rect x="97.7143%" y="645" width="0.1429%" height="15" fill="rgb(226,93,45)"/><text x="97.9643%" y="655.50"></text></g><g><title>__GI__IO_default_uflow (1 samples, 0.14%)</title><rect x="97.7143%" y="629" width="0.1429%" height="15" fill="rgb(215,8,51)"/><text x="97.9643%" y="639.50"></text></g><g><title>__GI__IO_file_underflow (1 samples, 0.14%)</title><rect x="97.7143%" y="613" width="0.1429%" height="15" fill="rgb(223,106,5)"/><text x="97.9643%" y="623.50"></text></g><g><title>__GI___read (1 samples, 0.14%)</title><rect x="97.7143%" y="597" width="0.1429%" height="15" fill="rgb(250,191,5)"/><text x="97.9643%" y="607.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="97.7143%" y="581" width="0.1429%" height="15" fill="rgb(242,132,44)"/><text x="97.9643%" y="591.50"></text></g><g><title>do_syscall_64 (1 samples, 0.14%)</title><rect x="97.7143%" y="565" width="0.1429%" height="15" fill="rgb(251,152,29)"/><text x="97.9643%" y="575.50"></text></g><g><title>ksys_read (1 samples, 0.14%)</title><rect x="97.7143%" y="549" width="0.1429%" height="15" fill="rgb(218,179,5)"/><text x="97.9643%" y="559.50"></text></g><g><title>vfs_read (1 samples, 0.14%)</title><rect x="97.7143%" y="533" width="0.1429%" height="15" fill="rgb(227,67,19)"/><text x="97.9643%" y="543.50"></text></g><g><title>seq_read (1 samples, 0.14%)</title><rect x="97.7143%" y="517" width="0.1429%" height="15" fill="rgb(233,119,31)"/><text x="97.9643%" y="527.50"></text></g><g><title>show_cpuinfo (1 samples, 0.14%)</title><rect x="97.7143%" y="501" width="0.1429%" height="15" fill="rgb(241,120,22)"/><text x="97.9643%" y="511.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (2 samples, 0.29%)</title><rect x="97.8571%" y="725" width="0.2857%" height="15" fill="rgb(224,102,30)"/><text x="98.1071%" y="735.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.14%)</title><rect x="98.0000%" y="709" width="0.1429%" height="15" fill="rgb(210,164,37)"/><text x="98.2500%" y="719.50"></text></g><g><title>__libc_start_main (247 samples, 35.29%)</title><rect x="63.0000%" y="885" width="35.2857%" height="15" fill="rgb(226,191,16)"/><text x="63.2500%" y="895.50">__libc_start_main</text></g><g><title>main (247 samples, 35.29%)</title><rect x="63.0000%" y="869" width="35.2857%" height="15" fill="rgb(214,40,45)"/><text x="63.2500%" y="879.50">main</text></g><g><title>std::rt::lang_start_internal (247 samples, 35.29%)</title><rect x="63.0000%" y="853" width="35.2857%" height="15" fill="rgb(244,29,26)"/><text x="63.2500%" y="863.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (247 samples, 35.29%)</title><rect x="63.0000%" y="837" width="35.2857%" height="15" fill="rgb(216,16,5)"/><text x="63.2500%" y="847.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (247 samples, 35.29%)</title><rect x="63.0000%" y="821" width="35.2857%" height="15" fill="rgb(249,76,35)"/><text x="63.2500%" y="831.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (247 samples, 35.29%)</title><rect x="63.0000%" y="805" width="35.2857%" height="15" fill="rgb(207,11,44)"/><text x="63.2500%" y="815.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (247 samples, 35.29%)</title><rect x="63.0000%" y="789" width="35.2857%" height="15" fill="rgb(228,190,49)"/><text x="63.2500%" y="799.50">core::ops::function::impls::&lt;impl core::ops::function::Fn..</text></g><g><title>std::rt::lang_start::_{{closure}} (247 samples, 35.29%)</title><rect x="63.0000%" y="773" width="35.2857%" height="15" fill="rgb(214,173,12)"/><text x="63.2500%" y="783.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (247 samples, 35.29%)</title><rect x="63.0000%" y="757" width="35.2857%" height="15" fill="rgb(218,26,35)"/><text x="63.2500%" y="767.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>lobsters::main (247 samples, 35.29%)</title><rect x="63.0000%" y="741" width="35.2857%" height="15" fill="rgb(220,200,19)"/><text x="63.2500%" y="751.50">lobsters::main</text></g><g><title>std::net::each_addr (1 samples, 0.14%)</title><rect x="98.1429%" y="725" width="0.1429%" height="15" fill="rgb(239,95,49)"/><text x="98.3929%" y="735.50"></text></g><g><title>std::sys_common::net::TcpListener::bind (1 samples, 0.14%)</title><rect x="98.1429%" y="709" width="0.1429%" height="15" fill="rgb(235,85,53)"/><text x="98.3929%" y="719.50"></text></g><g><title>std::sys_common::net::setsockopt (1 samples, 0.14%)</title><rect x="98.1429%" y="693" width="0.1429%" height="15" fill="rgb(233,133,31)"/><text x="98.3929%" y="703.50"></text></g><g><title>__setsockopt (1 samples, 0.14%)</title><rect x="98.1429%" y="677" width="0.1429%" height="15" fill="rgb(218,25,20)"/><text x="98.3929%" y="687.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="98.1429%" y="661" width="0.1429%" height="15" fill="rgb(252,210,38)"/><text x="98.3929%" y="671.50"></text></g><g><title>do_syscall_64 (1 samples, 0.14%)</title><rect x="98.1429%" y="645" width="0.1429%" height="15" fill="rgb(242,134,21)"/><text x="98.3929%" y="655.50"></text></g><g><title>__x64_sys_setsockopt (1 samples, 0.14%)</title><rect x="98.1429%" y="629" width="0.1429%" height="15" fill="rgb(213,28,48)"/><text x="98.3929%" y="639.50"></text></g><g><title>__sys_setsockopt (1 samples, 0.14%)</title><rect x="98.1429%" y="613" width="0.1429%" height="15" fill="rgb(250,196,2)"/><text x="98.3929%" y="623.50"></text></g><g><title>security_socket_setsockopt (1 samples, 0.14%)</title><rect x="98.1429%" y="597" width="0.1429%" height="15" fill="rgb(227,5,17)"/><text x="98.3929%" y="607.50"></text></g><g><title>_start (248 samples, 35.43%)</title><rect x="63.0000%" y="901" width="35.4286%" height="15" fill="rgb(221,226,24)"/><text x="63.2500%" y="911.50">_start</text></g><g><title>_dl_start (1 samples, 0.14%)</title><rect x="98.2857%" y="885" width="0.1429%" height="15" fill="rgb(211,5,48)"/><text x="98.5357%" y="895.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.14%)</title><rect x="98.2857%" y="869" width="0.1429%" height="15" fill="rgb(219,150,6)"/><text x="98.5357%" y="879.50"></text></g><g><title>dl_main (1 samples, 0.14%)</title><rect x="98.2857%" y="853" width="0.1429%" height="15" fill="rgb(251,46,16)"/><text x="98.5357%" y="863.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.14%)</title><rect x="98.2857%" y="837" width="0.1429%" height="15" fill="rgb(220,204,40)"/><text x="98.5357%" y="847.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.14%)</title><rect x="98.2857%" y="821" width="0.1429%" height="15" fill="rgb(211,85,2)"/><text x="98.5357%" y="831.50"></text></g><g><title>openaux (1 samples, 0.14%)</title><rect x="98.2857%" y="805" width="0.1429%" height="15" fill="rgb(229,17,7)"/><text x="98.5357%" y="815.50"></text></g><g><title>_dl_map_object (1 samples, 0.14%)</title><rect x="98.2857%" y="789" width="0.1429%" height="15" fill="rgb(239,72,28)"/><text x="98.5357%" y="799.50"></text></g><g><title>_dl_map_object_from_fd (1 samples, 0.14%)</title><rect x="98.2857%" y="773" width="0.1429%" height="15" fill="rgb(230,47,54)"/><text x="98.5357%" y="783.50"></text></g><g><title>page_fault (1 samples, 0.14%)</title><rect x="98.2857%" y="757" width="0.1429%" height="15" fill="rgb(214,50,8)"/><text x="98.5357%" y="767.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.14%)</title><rect x="98.2857%" y="741" width="0.1429%" height="15" fill="rgb(216,198,43)"/><text x="98.5357%" y="751.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.14%)</title><rect x="98.7143%" y="789" width="0.1429%" height="15" fill="rgb(234,20,35)"/><text x="98.9643%" y="799.50"></text></g><g><title>release_pages (1 samples, 0.14%)</title><rect x="98.7143%" y="773" width="0.1429%" height="15" fill="rgb(254,45,19)"/><text x="98.9643%" y="783.50"></text></g><g><title>free_unref_page_list (1 samples, 0.14%)</title><rect x="98.7143%" y="757" width="0.1429%" height="15" fill="rgb(219,14,44)"/><text x="98.9643%" y="767.50"></text></g><g><title>free_pcppages_bulk (1 samples, 0.14%)</title><rect x="98.7143%" y="741" width="0.1429%" height="15" fill="rgb(217,220,26)"/><text x="98.9643%" y="751.50"></text></g><g><title>__free_one_page (1 samples, 0.14%)</title><rect x="98.7143%" y="725" width="0.1429%" height="15" fill="rgb(213,158,28)"/><text x="98.9643%" y="735.50"></text></g><g><title>__mod_zone_page_state (1 samples, 0.14%)</title><rect x="98.7143%" y="709" width="0.1429%" height="15" fill="rgb(252,51,52)"/><text x="98.9643%" y="719.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.14%)</title><rect x="98.7143%" y="693" width="0.1429%" height="15" fill="rgb(246,89,16)"/><text x="98.9643%" y="703.50"></text></g><g><title>[vmlinux] (2 samples, 0.29%)</title><rect x="98.7143%" y="869" width="0.2857%" height="15" fill="rgb(216,158,49)"/><text x="98.9643%" y="879.50"></text></g><g><title>do_group_exit (2 samples, 0.29%)</title><rect x="98.7143%" y="853" width="0.2857%" height="15" fill="rgb(236,107,19)"/><text x="98.9643%" y="863.50"></text></g><g><title>do_exit (2 samples, 0.29%)</title><rect x="98.7143%" y="837" width="0.2857%" height="15" fill="rgb(228,185,30)"/><text x="98.9643%" y="847.50"></text></g><g><title>mmput (2 samples, 0.29%)</title><rect x="98.7143%" y="821" width="0.2857%" height="15" fill="rgb(246,134,8)"/><text x="98.9643%" y="831.50"></text></g><g><title>exit_mmap (2 samples, 0.29%)</title><rect x="98.7143%" y="805" width="0.2857%" height="15" fill="rgb(214,143,50)"/><text x="98.9643%" y="815.50"></text></g><g><title>unmap_vmas (1 samples, 0.14%)</title><rect x="98.8571%" y="789" width="0.1429%" height="15" fill="rgb(228,75,8)"/><text x="99.1071%" y="799.50"></text></g><g><title>unmap_page_range (1 samples, 0.14%)</title><rect x="98.8571%" y="773" width="0.1429%" height="15" fill="rgb(207,175,4)"/><text x="99.1071%" y="783.50"></text></g><g><title>page_remove_file_rmap (1 samples, 0.14%)</title><rect x="98.8571%" y="757" width="0.1429%" height="15" fill="rgb(205,108,24)"/><text x="99.1071%" y="767.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.14%)</title><rect x="98.8571%" y="741" width="0.1429%" height="15" fill="rgb(244,120,49)"/><text x="99.1071%" y="751.50"></text></g><g><title>__mod_node_page_state (1 samples, 0.14%)</title><rect x="98.8571%" y="725" width="0.1429%" height="15" fill="rgb(223,47,38)"/><text x="99.1071%" y="735.50"></text></g><g><title>lobsters (694 samples, 99.14%)</title><rect x="0.0000%" y="917" width="99.1429%" height="15" fill="rgb(229,179,11)"/><text x="0.2500%" y="927.50">lobsters</text></g><g><title>entry_SYSCALL_64 (5 samples, 0.71%)</title><rect x="98.4286%" y="901" width="0.7143%" height="15" fill="rgb(231,122,1)"/><text x="98.6786%" y="911.50"></text></g><g><title>do_syscall_64 (3 samples, 0.43%)</title><rect x="98.7143%" y="885" width="0.4286%" height="15" fill="rgb(245,119,9)"/><text x="98.9643%" y="895.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.14%)</title><rect x="99.0000%" y="869" width="0.1429%" height="15" fill="rgb(241,163,25)"/><text x="99.2500%" y="879.50"></text></g><g><title>do_execve (1 samples, 0.14%)</title><rect x="99.0000%" y="853" width="0.1429%" height="15" fill="rgb(217,214,3)"/><text x="99.2500%" y="863.50"></text></g><g><title>__do_execve_file (1 samples, 0.14%)</title><rect x="99.0000%" y="837" width="0.1429%" height="15" fill="rgb(240,86,28)"/><text x="99.2500%" y="847.50"></text></g><g><title>search_binary_handler.part.0 (1 samples, 0.14%)</title><rect x="99.0000%" y="821" width="0.1429%" height="15" fill="rgb(215,47,9)"/><text x="99.2500%" y="831.50"></text></g><g><title>load_elf_binary (1 samples, 0.14%)</title><rect x="99.0000%" y="805" width="0.1429%" height="15" fill="rgb(252,25,45)"/><text x="99.2500%" y="815.50"></text></g><g><title>elf_map (1 samples, 0.14%)</title><rect x="99.0000%" y="789" width="0.1429%" height="15" fill="rgb(251,164,9)"/><text x="99.2500%" y="799.50"></text></g><g><title>vm_mmap_pgoff (1 samples, 0.14%)</title><rect x="99.0000%" y="773" width="0.1429%" height="15" fill="rgb(233,194,0)"/><text x="99.2500%" y="783.50"></text></g><g><title>do_mmap (1 samples, 0.14%)</title><rect x="99.0000%" y="757" width="0.1429%" height="15" fill="rgb(249,111,24)"/><text x="99.2500%" y="767.50"></text></g><g><title>mmap_region (1 samples, 0.14%)</title><rect x="99.0000%" y="741" width="0.1429%" height="15" fill="rgb(250,223,3)"/><text x="99.2500%" y="751.50"></text></g><g><title>all (700 samples, 100%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(236,178,37)"/><text x="0.2500%" y="943.50"></text></g><g><title>perf (6 samples, 0.86%)</title><rect x="99.1429%" y="917" width="0.8571%" height="15" fill="rgb(241,158,50)"/><text x="99.3929%" y="927.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.86%)</title><rect x="99.1429%" y="901" width="0.8571%" height="15" fill="rgb(213,121,41)"/><text x="99.3929%" y="911.50"></text></g><g><title>do_syscall_64 (6 samples, 0.86%)</title><rect x="99.1429%" y="885" width="0.8571%" height="15" fill="rgb(240,92,3)"/><text x="99.3929%" y="895.50"></text></g><g><title>__x64_sys_execve (6 samples, 0.86%)</title><rect x="99.1429%" y="869" width="0.8571%" height="15" fill="rgb(205,123,3)"/><text x="99.3929%" y="879.50"></text></g><g><title>do_execve (6 samples, 0.86%)</title><rect x="99.1429%" y="853" width="0.8571%" height="15" fill="rgb(205,97,47)"/><text x="99.3929%" y="863.50"></text></g><g><title>__do_execve_file (6 samples, 0.86%)</title><rect x="99.1429%" y="837" width="0.8571%" height="15" fill="rgb(247,152,14)"/><text x="99.3929%" y="847.50"></text></g><g><title>search_binary_handler.part.0 (6 samples, 0.86%)</title><rect x="99.1429%" y="821" width="0.8571%" height="15" fill="rgb(248,195,53)"/><text x="99.3929%" y="831.50"></text></g><g><title>load_elf_binary (6 samples, 0.86%)</title><rect x="99.1429%" y="805" width="0.8571%" height="15" fill="rgb(226,201,16)"/><text x="99.3929%" y="815.50"></text></g><g><title>setup_new_exec (6 samples, 0.86%)</title><rect x="99.1429%" y="789" width="0.8571%" height="15" fill="rgb(205,98,0)"/><text x="99.3929%" y="799.50"></text></g><g><title>perf_event_exec (6 samples, 0.86%)</title><rect x="99.1429%" y="773" width="0.8571%" height="15" fill="rgb(214,191,48)"/><text x="99.3929%" y="783.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.71%)</title><rect x="99.2857%" y="757" width="0.7143%" height="15" fill="rgb(237,112,39)"/><text x="99.5357%" y="767.50"></text></g><g><title>native_write_msr (5 samples, 0.71%)</title><rect x="99.2857%" y="741" width="0.7143%" height="15" fill="rgb(247,203,27)"/><text x="99.5357%" y="751.50"></text></g></svg></svg>