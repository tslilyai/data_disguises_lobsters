<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="950" onload="init(evt)" viewBox="0 0 1200 950" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="950" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="933.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="933.00"> </text><svg id="frames" x="10" width="1180"><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.11%)</title><rect x="0.0000%" y="853" width="0.1056%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="863.50"></text></g><g><title>std::sys_common::net::TcpStream::read (1 samples, 0.11%)</title><rect x="0.0000%" y="837" width="0.1056%" height="15" fill="rgb(217,0,24)"/><text x="0.2500%" y="847.50"></text></g><g><title>std::sys::unix::net::Socket::read (1 samples, 0.11%)</title><rect x="0.0000%" y="821" width="0.1056%" height="15" fill="rgb(221,193,54)"/><text x="0.2500%" y="831.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (1 samples, 0.11%)</title><rect x="0.0000%" y="805" width="0.1056%" height="15" fill="rgb(248,212,6)"/><text x="0.2500%" y="815.50"></text></g><g><title>__libc_recv (1 samples, 0.11%)</title><rect x="0.0000%" y="789" width="0.1056%" height="15" fill="rgb(208,68,35)"/><text x="0.2500%" y="799.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="0.0000%" y="773" width="0.1056%" height="15" fill="rgb(232,128,0)"/><text x="0.2500%" y="783.50"></text></g><g><title>[[heap]] (2 samples, 0.21%)</title><rect x="0.0000%" y="869" width="0.2112%" height="15" fill="rgb(207,160,47)"/><text x="0.2500%" y="879.50"></text></g><g><title>hwloc_linux_set_tid_cpubind (1 samples, 0.11%)</title><rect x="0.1056%" y="853" width="0.1056%" height="15" fill="rgb(228,23,34)"/><text x="0.3556%" y="863.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.21%)</title><rect x="0.2112%" y="853" width="0.2112%" height="15" fill="rgb(218,30,26)"/><text x="0.4612%" y="863.50"></text></g><g><title>__libc_send (2 samples, 0.21%)</title><rect x="0.4224%" y="853" width="0.2112%" height="15" fill="rgb(220,122,19)"/><text x="0.6724%" y="863.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.21%)</title><rect x="0.4224%" y="837" width="0.2112%" height="15" fill="rgb(250,228,42)"/><text x="0.6724%" y="847.50"></text></g><g><title>core::fmt::Formatter::pad_integral (2 samples, 0.21%)</title><rect x="0.6336%" y="853" width="0.2112%" height="15" fill="rgb(240,193,28)"/><text x="0.8836%" y="863.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.11%)</title><rect x="0.8448%" y="853" width="0.1056%" height="15" fill="rgb(216,20,37)"/><text x="1.0948%" y="863.50"></text></g><g><title>[[stack]] (8 samples, 0.84%)</title><rect x="0.2112%" y="869" width="0.8448%" height="15" fill="rgb(206,188,39)"/><text x="0.4612%" y="879.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.11%)</title><rect x="0.9504%" y="853" width="0.1056%" height="15" fill="rgb(217,207,13)"/><text x="1.2004%" y="863.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.21%)</title><rect x="1.0560%" y="853" width="0.2112%" height="15" fill="rgb(231,73,38)"/><text x="1.3060%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="1.2672%" y="853" width="0.1056%" height="15" fill="rgb(225,20,46)"/><text x="1.5172%" y="863.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (2 samples, 0.21%)</title><rect x="1.3728%" y="853" width="0.2112%" height="15" fill="rgb(210,31,41)"/><text x="1.6228%" y="863.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (1 samples, 0.11%)</title><rect x="1.5839%" y="853" width="0.1056%" height="15" fill="rgb(221,200,47)"/><text x="1.8339%" y="863.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="1.6895%" y="853" width="0.1056%" height="15" fill="rgb(226,26,5)"/><text x="1.9395%" y="863.50"></text></g><g><title>&lt;mysql::conn::ConnMut as core::ops::deref::Deref&gt;::deref (1 samples, 0.11%)</title><rect x="1.6895%" y="837" width="0.1056%" height="15" fill="rgb(249,33,26)"/><text x="1.9395%" y="847.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::cmp::PartialEq&gt;::eq (1 samples, 0.11%)</title><rect x="1.7951%" y="853" width="0.1056%" height="15" fill="rgb(235,183,28)"/><text x="2.0451%" y="863.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.11%)</title><rect x="1.9007%" y="853" width="0.1056%" height="15" fill="rgb(221,5,38)"/><text x="2.1507%" y="863.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="2.0063%" y="853" width="0.1056%" height="15" fill="rgb(247,18,42)"/><text x="2.2563%" y="863.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.11%)</title><rect x="2.1119%" y="853" width="0.1056%" height="15" fill="rgb(241,131,45)"/><text x="2.3619%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="2.2175%" y="853" width="0.1056%" height="15" fill="rgb(249,31,29)"/><text x="2.4675%" y="863.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.11%)</title><rect x="2.3231%" y="853" width="0.1056%" height="15" fill="rgb(225,111,53)"/><text x="2.5731%" y="863.50"></text></g><g><title>core::fmt::write (2 samples, 0.21%)</title><rect x="2.4287%" y="853" width="0.2112%" height="15" fill="rgb(238,160,17)"/><text x="2.6787%" y="863.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.32%)</title><rect x="2.6399%" y="853" width="0.3168%" height="15" fill="rgb(214,148,48)"/><text x="2.8899%" y="863.50"></text></g><g><title>decor::helpers::answer_rows (1 samples, 0.11%)</title><rect x="2.9567%" y="853" width="0.1056%" height="15" fill="rgb(232,36,49)"/><text x="3.2067%" y="863.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.11%)</title><rect x="3.0623%" y="853" width="0.1056%" height="15" fill="rgb(209,103,24)"/><text x="3.3123%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::parse_identifier (1 samples, 0.11%)</title><rect x="3.1679%" y="853" width="0.1056%" height="15" fill="rgb(229,88,8)"/><text x="3.4179%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (1 samples, 0.11%)</title><rect x="3.2735%" y="853" width="0.1056%" height="15" fill="rgb(213,181,19)"/><text x="3.5235%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::parse_value (1 samples, 0.11%)</title><rect x="3.3791%" y="853" width="0.1056%" height="15" fill="rgb(254,191,54)"/><text x="3.6291%" y="863.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (1 samples, 0.11%)</title><rect x="3.4847%" y="853" width="0.1056%" height="15" fill="rgb(241,83,37)"/><text x="3.7347%" y="863.50"></text></g><g><title>[anon] (25 samples, 2.64%)</title><rect x="1.0560%" y="869" width="2.6399%" height="15" fill="rgb(233,36,39)"/><text x="1.3060%" y="879.50">[a..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_word (1 samples, 0.11%)</title><rect x="3.5903%" y="853" width="0.1056%" height="15" fill="rgb(226,3,54)"/><text x="3.8403%" y="863.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="3.6959%" y="853" width="0.1056%" height="15" fill="rgb(245,192,40)"/><text x="3.9459%" y="863.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="3.8015%" y="853" width="0.1056%" height="15" fill="rgb(238,167,29)"/><text x="4.0515%" y="863.50"></text></g><g><title>__rdl_alloc (1 samples, 0.11%)</title><rect x="3.9071%" y="853" width="0.1056%" height="15" fill="rgb(232,182,51)"/><text x="4.1571%" y="863.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.11%)</title><rect x="3.9071%" y="837" width="0.1056%" height="15" fill="rgb(231,60,39)"/><text x="4.1571%" y="847.50"></text></g><g><title>[lobsters] (4 samples, 0.42%)</title><rect x="3.6959%" y="869" width="0.4224%" height="15" fill="rgb(208,69,12)"/><text x="3.9459%" y="879.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.11%)</title><rect x="4.0127%" y="853" width="0.1056%" height="15" fill="rgb(235,93,37)"/><text x="4.2627%" y="863.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="4.1183%" y="853" width="0.1056%" height="15" fill="rgb(213,116,39)"/><text x="4.3683%" y="863.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="4.2239%" y="853" width="0.1056%" height="15" fill="rgb(222,207,29)"/><text x="4.4739%" y="863.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (1 samples, 0.11%)</title><rect x="4.3295%" y="853" width="0.1056%" height="15" fill="rgb(206,96,30)"/><text x="4.5795%" y="863.50"></text></g><g><title>decor::Shim::create_schema (1 samples, 0.11%)</title><rect x="4.3295%" y="837" width="0.1056%" height="15" fill="rgb(218,138,4)"/><text x="4.5795%" y="847.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (1 samples, 0.11%)</title><rect x="4.3295%" y="821" width="0.1056%" height="15" fill="rgb(250,191,14)"/><text x="4.5795%" y="831.50"></text></g><g><title>sql_parser::parser::parse_statements (1 samples, 0.11%)</title><rect x="4.3295%" y="805" width="0.1056%" height="15" fill="rgb(239,60,40)"/><text x="4.5795%" y="815.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (1 samples, 0.11%)</title><rect x="4.3295%" y="789" width="0.1056%" height="15" fill="rgb(206,27,48)"/><text x="4.5795%" y="799.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (1 samples, 0.11%)</title><rect x="4.3295%" y="773" width="0.1056%" height="15" fill="rgb(225,35,8)"/><text x="4.5795%" y="783.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (1 samples, 0.11%)</title><rect x="4.3295%" y="757" width="0.1056%" height="15" fill="rgb(250,213,24)"/><text x="4.5795%" y="767.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.11%)</title><rect x="4.3295%" y="741" width="0.1056%" height="15" fill="rgb(247,123,22)"/><text x="4.5795%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="4.4351%" y="789" width="0.1056%" height="15" fill="rgb(231,138,38)"/><text x="4.6851%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.11%)</title><rect x="4.4351%" y="773" width="0.1056%" height="15" fill="rgb(231,145,46)"/><text x="4.6851%" y="783.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="4.5407%" y="773" width="0.1056%" height="15" fill="rgb(251,118,11)"/><text x="4.7907%" y="783.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="4.5407%" y="757" width="0.1056%" height="15" fill="rgb(217,147,25)"/><text x="4.7907%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.21%)</title><rect x="4.6463%" y="741" width="0.2112%" height="15" fill="rgb(247,81,37)"/><text x="4.8963%" y="751.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="4.8574%" y="741" width="0.1056%" height="15" fill="rgb(209,12,38)"/><text x="5.1074%" y="751.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="4.8574%" y="725" width="0.1056%" height="15" fill="rgb(227,1,9)"/><text x="5.1074%" y="735.50"></text></g><g><title>sysmalloc (1 samples, 0.11%)</title><rect x="4.8574%" y="709" width="0.1056%" height="15" fill="rgb(248,47,43)"/><text x="5.1074%" y="719.50"></text></g><g><title>__GI___mprotect (1 samples, 0.11%)</title><rect x="4.8574%" y="693" width="0.1056%" height="15" fill="rgb(221,10,30)"/><text x="5.1074%" y="703.50"></text></g><g><title>syscall_return_via_sysret (1 samples, 0.11%)</title><rect x="4.8574%" y="677" width="0.1056%" height="15" fill="rgb(210,229,1)"/><text x="5.1074%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="4.9630%" y="741" width="0.1056%" height="15" fill="rgb(222,148,37)"/><text x="5.2130%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (7 samples, 0.74%)</title><rect x="4.4351%" y="821" width="0.7392%" height="15" fill="rgb(234,67,33)"/><text x="4.6851%" y="831.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (7 samples, 0.74%)</title><rect x="4.4351%" y="805" width="0.7392%" height="15" fill="rgb(247,98,35)"/><text x="4.6851%" y="815.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (6 samples, 0.63%)</title><rect x="4.5407%" y="789" width="0.6336%" height="15" fill="rgb(247,138,52)"/><text x="4.7907%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (5 samples, 0.53%)</title><rect x="4.6463%" y="773" width="0.5280%" height="15" fill="rgb(213,79,30)"/><text x="4.8963%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.53%)</title><rect x="4.6463%" y="757" width="0.5280%" height="15" fill="rgb(246,177,23)"/><text x="4.8963%" y="767.50"></text></g><g><title>__rdl_alloc (1 samples, 0.11%)</title><rect x="5.0686%" y="741" width="0.1056%" height="15" fill="rgb(230,62,27)"/><text x="5.3186%" y="751.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.11%)</title><rect x="5.0686%" y="725" width="0.1056%" height="15" fill="rgb(216,154,8)"/><text x="5.3186%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.21%)</title><rect x="5.1742%" y="789" width="0.2112%" height="15" fill="rgb(244,35,45)"/><text x="5.4242%" y="799.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.21%)</title><rect x="5.1742%" y="773" width="0.2112%" height="15" fill="rgb(251,115,12)"/><text x="5.4242%" y="783.50"></text></g><g><title>_int_realloc (2 samples, 0.21%)</title><rect x="5.1742%" y="757" width="0.2112%" height="15" fill="rgb(240,54,50)"/><text x="5.4242%" y="767.50"></text></g><g><title>_int_malloc (2 samples, 0.21%)</title><rect x="5.1742%" y="741" width="0.2112%" height="15" fill="rgb(233,84,52)"/><text x="5.4242%" y="751.50"></text></g><g><title>malloc_consolidate (2 samples, 0.21%)</title><rect x="5.1742%" y="725" width="0.2112%" height="15" fill="rgb(207,117,47)"/><text x="5.4242%" y="735.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.11%)</title><rect x="5.2798%" y="709" width="0.1056%" height="15" fill="rgb(249,43,39)"/><text x="5.5298%" y="719.50"></text></g><g><title>__memcmp_avx2_movbe (9 samples, 0.95%)</title><rect x="6.9694%" y="757" width="0.9504%" height="15" fill="rgb(209,38,44)"/><text x="7.2194%" y="767.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="8.0253%" y="741" width="0.1056%" height="15" fill="rgb(236,212,23)"/><text x="8.2753%" y="751.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.11%)</title><rect x="8.0253%" y="725" width="0.1056%" height="15" fill="rgb(242,79,21)"/><text x="8.2753%" y="735.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.11%)</title><rect x="8.1309%" y="741" width="0.1056%" height="15" fill="rgb(211,96,35)"/><text x="8.3809%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.11%)</title><rect x="8.1309%" y="725" width="0.1056%" height="15" fill="rgb(253,215,40)"/><text x="8.3809%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (1 samples, 0.11%)</title><rect x="8.1309%" y="709" width="0.1056%" height="15" fill="rgb(211,81,21)"/><text x="8.3809%" y="719.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (2 samples, 0.21%)</title><rect x="8.6589%" y="693" width="0.2112%" height="15" fill="rgb(208,190,38)"/><text x="8.9089%" y="703.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (34 samples, 3.59%)</title><rect x="5.3854%" y="773" width="3.5903%" height="15" fill="rgb(235,213,38)"/><text x="5.6354%" y="783.50">sql_..</text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (10 samples, 1.06%)</title><rect x="7.9197%" y="757" width="1.0560%" height="15" fill="rgb(237,122,38)"/><text x="8.1697%" y="767.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (7 samples, 0.74%)</title><rect x="8.2365%" y="741" width="0.7392%" height="15" fill="rgb(244,218,35)"/><text x="8.4865%" y="751.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (7 samples, 0.74%)</title><rect x="8.2365%" y="725" width="0.7392%" height="15" fill="rgb(240,68,47)"/><text x="8.4865%" y="735.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (7 samples, 0.74%)</title><rect x="8.2365%" y="709" width="0.7392%" height="15" fill="rgb(210,16,53)"/><text x="8.4865%" y="719.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table::{{closure}} (1 samples, 0.11%)</title><rect x="8.8701%" y="693" width="0.1056%" height="15" fill="rgb(235,124,12)"/><text x="9.1201%" y="703.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for char&gt;::cmp (1 samples, 0.11%)</title><rect x="8.8701%" y="677" width="0.1056%" height="15" fill="rgb(224,169,11)"/><text x="9.1201%" y="687.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="8.9757%" y="757" width="0.1056%" height="15" fill="rgb(250,166,2)"/><text x="9.2257%" y="767.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="9.0813%" y="741" width="0.1056%" height="15" fill="rgb(242,216,29)"/><text x="9.3313%" y="751.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (46 samples, 4.86%)</title><rect x="4.4351%" y="853" width="4.8574%" height="15" fill="rgb(230,116,27)"/><text x="4.6851%" y="863.50">&lt;decor..</text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (46 samples, 4.86%)</title><rect x="4.4351%" y="837" width="4.8574%" height="15" fill="rgb(228,99,48)"/><text x="4.6851%" y="847.50">decor:..</text></g><g><title>sql_parser::parser::parse_statements (39 samples, 4.12%)</title><rect x="5.1742%" y="821" width="4.1183%" height="15" fill="rgb(253,11,6)"/><text x="5.4242%" y="831.50">sql_..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (39 samples, 4.12%)</title><rect x="5.1742%" y="805" width="4.1183%" height="15" fill="rgb(247,143,39)"/><text x="5.4242%" y="815.50">sql_..</text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (37 samples, 3.91%)</title><rect x="5.3854%" y="789" width="3.9071%" height="15" fill="rgb(236,97,10)"/><text x="5.6354%" y="799.50">sql_..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_word (3 samples, 0.32%)</title><rect x="8.9757%" y="773" width="0.3168%" height="15" fill="rgb(233,208,19)"/><text x="9.2257%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.21%)</title><rect x="9.0813%" y="757" width="0.2112%" height="15" fill="rgb(216,164,2)"/><text x="9.3313%" y="767.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.11%)</title><rect x="9.1869%" y="741" width="0.1056%" height="15" fill="rgb(220,129,5)"/><text x="9.4369%" y="751.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (2 samples, 0.21%)</title><rect x="9.2925%" y="853" width="0.2112%" height="15" fill="rgb(242,17,10)"/><text x="9.5425%" y="863.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="9.5037%" y="853" width="0.1056%" height="15" fill="rgb(242,107,0)"/><text x="9.7537%" y="863.50"></text></g><g><title>__libc_recv (1 samples, 0.11%)</title><rect x="9.6093%" y="853" width="0.1056%" height="15" fill="rgb(251,28,31)"/><text x="9.8593%" y="863.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="9.6093%" y="837" width="0.1056%" height="15" fill="rgb(233,223,10)"/><text x="9.8593%" y="847.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.11%)</title><rect x="9.7149%" y="693" width="0.1056%" height="15" fill="rgb(215,21,27)"/><text x="9.9649%" y="703.50"></text></g><g><title>hwloc_topology_destroy (1 samples, 0.11%)</title><rect x="9.7149%" y="677" width="0.1056%" height="15" fill="rgb(232,23,21)"/><text x="9.9649%" y="687.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="9.7149%" y="661" width="0.1056%" height="15" fill="rgb(244,5,23)"/><text x="9.9649%" y="671.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="9.7149%" y="645" width="0.1056%" height="15" fill="rgb(226,81,46)"/><text x="9.9649%" y="655.50"></text></g><g><title>dlclose (1 samples, 0.11%)</title><rect x="9.7149%" y="629" width="0.1056%" height="15" fill="rgb(247,70,30)"/><text x="9.9649%" y="639.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.11%)</title><rect x="9.7149%" y="613" width="0.1056%" height="15" fill="rgb(212,68,19)"/><text x="9.9649%" y="623.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.11%)</title><rect x="9.7149%" y="597" width="0.1056%" height="15" fill="rgb(240,187,13)"/><text x="9.9649%" y="607.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.11%)</title><rect x="9.7149%" y="581" width="0.1056%" height="15" fill="rgb(223,113,26)"/><text x="9.9649%" y="591.50"></text></g><g><title>_dl_close (1 samples, 0.11%)</title><rect x="9.7149%" y="565" width="0.1056%" height="15" fill="rgb(206,192,2)"/><text x="9.9649%" y="575.50"></text></g><g><title>_dl_close_worker (1 samples, 0.11%)</title><rect x="9.7149%" y="549" width="0.1056%" height="15" fill="rgb(241,108,4)"/><text x="9.9649%" y="559.50"></text></g><g><title>_dl_unmap (1 samples, 0.11%)</title><rect x="9.7149%" y="533" width="0.1056%" height="15" fill="rgb(247,173,49)"/><text x="9.9649%" y="543.50"></text></g><g><title>munmap (1 samples, 0.11%)</title><rect x="9.7149%" y="517" width="0.1056%" height="15" fill="rgb(224,114,35)"/><text x="9.9649%" y="527.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="9.7149%" y="501" width="0.1056%" height="15" fill="rgb(245,159,27)"/><text x="9.9649%" y="511.50"></text></g><g><title>do_syscall_64 (1 samples, 0.11%)</title><rect x="9.7149%" y="485" width="0.1056%" height="15" fill="rgb(245,172,44)"/><text x="9.9649%" y="495.50"></text></g><g><title>__x64_sys_munmap (1 samples, 0.11%)</title><rect x="9.7149%" y="469" width="0.1056%" height="15" fill="rgb(236,23,11)"/><text x="9.9649%" y="479.50"></text></g><g><title>__vm_munmap (1 samples, 0.11%)</title><rect x="9.7149%" y="453" width="0.1056%" height="15" fill="rgb(205,117,38)"/><text x="9.9649%" y="463.50"></text></g><g><title>__do_munmap (1 samples, 0.11%)</title><rect x="9.7149%" y="437" width="0.1056%" height="15" fill="rgb(237,72,25)"/><text x="9.9649%" y="447.50"></text></g><g><title>unmap_region (1 samples, 0.11%)</title><rect x="9.7149%" y="421" width="0.1056%" height="15" fill="rgb(244,70,9)"/><text x="9.9649%" y="431.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.11%)</title><rect x="9.7149%" y="405" width="0.1056%" height="15" fill="rgb(217,125,39)"/><text x="9.9649%" y="415.50"></text></g><g><title>release_pages (1 samples, 0.11%)</title><rect x="9.7149%" y="389" width="0.1056%" height="15" fill="rgb(235,36,10)"/><text x="9.9649%" y="399.50"></text></g><g><title>mem_cgroup_uncharge_list (1 samples, 0.11%)</title><rect x="9.7149%" y="373" width="0.1056%" height="15" fill="rgb(251,123,47)"/><text x="9.9649%" y="383.50"></text></g><g><title>uncharge_batch (1 samples, 0.11%)</title><rect x="9.7149%" y="357" width="0.1056%" height="15" fill="rgb(221,13,13)"/><text x="9.9649%" y="367.50"></text></g><g><title>__mod_memcg_state.part.0 (1 samples, 0.11%)</title><rect x="9.7149%" y="341" width="0.1056%" height="15" fill="rgb(238,131,9)"/><text x="9.9649%" y="351.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.21%)</title><rect x="9.8205%" y="677" width="0.2112%" height="15" fill="rgb(211,50,8)"/><text x="10.0705%" y="687.50"></text></g><g><title>__x86_indirect_thunk_rax (2 samples, 0.21%)</title><rect x="10.0317%" y="581" width="0.2112%" height="15" fill="rgb(245,182,24)"/><text x="10.2817%" y="591.50"></text></g><g><title>do_softirq (1 samples, 0.11%)</title><rect x="10.2429%" y="581" width="0.1056%" height="15" fill="rgb(242,14,37)"/><text x="10.4929%" y="591.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.11%)</title><rect x="10.8765%" y="485" width="0.1056%" height="15" fill="rgb(246,228,12)"/><text x="11.1265%" y="495.50"></text></g><g><title>preempt_count_sub (1 samples, 0.11%)</title><rect x="10.8765%" y="469" width="0.1056%" height="15" fill="rgb(213,55,15)"/><text x="11.1265%" y="479.50"></text></g><g><title>release_sock (1 samples, 0.11%)</title><rect x="10.9820%" y="485" width="0.1056%" height="15" fill="rgb(209,9,3)"/><text x="11.2320%" y="495.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.11%)</title><rect x="10.9820%" y="469" width="0.1056%" height="15" fill="rgb(230,59,30)"/><text x="11.2320%" y="479.50"></text></g><g><title>__sk_dst_check (2 samples, 0.21%)</title><rect x="12.0380%" y="405" width="0.2112%" height="15" fill="rgb(209,121,21)"/><text x="12.2880%" y="415.50"></text></g><g><title>ipv4_dst_check (2 samples, 0.21%)</title><rect x="12.0380%" y="389" width="0.2112%" height="15" fill="rgb(220,109,13)"/><text x="12.2880%" y="399.50"></text></g><g><title>dev_hard_start_xmit (5 samples, 0.53%)</title><rect x="12.8828%" y="357" width="0.5280%" height="15" fill="rgb(232,18,1)"/><text x="13.1328%" y="367.50"></text></g><g><title>loopback_xmit (3 samples, 0.32%)</title><rect x="13.0940%" y="341" width="0.3168%" height="15" fill="rgb(215,41,42)"/><text x="13.3440%" y="351.50"></text></g><g><title>netif_rx (2 samples, 0.21%)</title><rect x="13.1996%" y="325" width="0.2112%" height="15" fill="rgb(224,123,36)"/><text x="13.4496%" y="335.50"></text></g><g><title>netif_rx_internal (2 samples, 0.21%)</title><rect x="13.1996%" y="309" width="0.2112%" height="15" fill="rgb(240,125,3)"/><text x="13.4496%" y="319.50"></text></g><g><title>enqueue_to_backlog (2 samples, 0.21%)</title><rect x="13.1996%" y="293" width="0.2112%" height="15" fill="rgb(205,98,50)"/><text x="13.4496%" y="303.50"></text></g><g><title>preempt_count_add (1 samples, 0.11%)</title><rect x="13.4108%" y="357" width="0.1056%" height="15" fill="rgb(205,185,37)"/><text x="13.6608%" y="367.50"></text></g><g><title>__dev_queue_xmit (7 samples, 0.74%)</title><rect x="12.8828%" y="373" width="0.7392%" height="15" fill="rgb(238,207,15)"/><text x="13.1328%" y="383.50"></text></g><g><title>validate_xmit_skb (1 samples, 0.11%)</title><rect x="13.5164%" y="357" width="0.1056%" height="15" fill="rgb(213,199,42)"/><text x="13.7664%" y="367.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.11%)</title><rect x="14.6779%" y="197" width="0.1056%" height="15" fill="rgb(235,201,11)"/><text x="14.9279%" y="207.50"></text></g><g><title>raw_local_deliver (1 samples, 0.11%)</title><rect x="14.7835%" y="197" width="0.1056%" height="15" fill="rgb(207,46,11)"/><text x="15.0335%" y="207.50"></text></g><g><title>__inet_lookup_established (4 samples, 0.42%)</title><rect x="15.2059%" y="181" width="0.4224%" height="15" fill="rgb(241,35,35)"/><text x="15.4559%" y="191.50"></text></g><g><title>inet_ehashfn (1 samples, 0.11%)</title><rect x="15.5227%" y="165" width="0.1056%" height="15" fill="rgb(243,32,47)"/><text x="15.7727%" y="175.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.11%)</title><rect x="15.6283%" y="181" width="0.1056%" height="15" fill="rgb(247,202,23)"/><text x="15.8783%" y="191.50"></text></g><g><title>preempt_count_sub (1 samples, 0.11%)</title><rect x="15.6283%" y="165" width="0.1056%" height="15" fill="rgb(219,102,11)"/><text x="15.8783%" y="175.50"></text></g><g><title>sk_filter_trim_cap (1 samples, 0.11%)</title><rect x="15.7339%" y="181" width="0.1056%" height="15" fill="rgb(243,110,44)"/><text x="15.9839%" y="191.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (1 samples, 0.11%)</title><rect x="15.7339%" y="165" width="0.1056%" height="15" fill="rgb(222,74,54)"/><text x="15.9839%" y="175.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.11%)</title><rect x="15.7339%" y="149" width="0.1056%" height="15" fill="rgb(216,99,12)"/><text x="15.9839%" y="159.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.11%)</title><rect x="16.1563%" y="149" width="0.1056%" height="15" fill="rgb(226,22,26)"/><text x="16.4063%" y="159.50"></text></g><g><title>psi_flags_change (1 samples, 0.11%)</title><rect x="17.1067%" y="53" width="0.1056%" height="15" fill="rgb(217,163,10)"/><text x="17.3567%" y="63.50"></text></g><g><title>enqueue_task (12 samples, 1.27%)</title><rect x="17.1067%" y="85" width="1.2672%" height="15" fill="rgb(213,25,53)"/><text x="17.3567%" y="95.50"></text></g><g><title>psi_task_change (12 samples, 1.27%)</title><rect x="17.1067%" y="69" width="1.2672%" height="15" fill="rgb(252,105,26)"/><text x="17.3567%" y="79.50"></text></g><g><title>psi_group_change (11 samples, 1.16%)</title><rect x="17.2122%" y="53" width="1.1616%" height="15" fill="rgb(220,39,43)"/><text x="17.4622%" y="63.50"></text></g><g><title>record_times (2 samples, 0.21%)</title><rect x="18.1626%" y="37" width="0.2112%" height="15" fill="rgb(229,68,48)"/><text x="18.4126%" y="47.50"></text></g><g><title>reweight_entity (2 samples, 0.21%)</title><rect x="18.5850%" y="53" width="0.2112%" height="15" fill="rgb(252,8,32)"/><text x="18.8350%" y="63.50"></text></g><g><title>update_cfs_group (1 samples, 0.11%)</title><rect x="18.7962%" y="53" width="0.1056%" height="15" fill="rgb(223,20,43)"/><text x="19.0462%" y="63.50"></text></g><g><title>update_curr (1 samples, 0.11%)</title><rect x="18.9018%" y="53" width="0.1056%" height="15" fill="rgb(229,81,49)"/><text x="19.1518%" y="63.50"></text></g><g><title>enqueue_task_fair (8 samples, 0.84%)</title><rect x="18.3738%" y="85" width="0.8448%" height="15" fill="rgb(236,28,36)"/><text x="18.6238%" y="95.50"></text></g><g><title>enqueue_entity (8 samples, 0.84%)</title><rect x="18.3738%" y="69" width="0.8448%" height="15" fill="rgb(249,185,26)"/><text x="18.6238%" y="79.50"></text></g><g><title>update_load_avg (2 samples, 0.21%)</title><rect x="19.0074%" y="53" width="0.2112%" height="15" fill="rgb(249,174,33)"/><text x="19.2574%" y="63.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.11%)</title><rect x="19.1130%" y="37" width="0.1056%" height="15" fill="rgb(233,201,37)"/><text x="19.3630%" y="47.50"></text></g><g><title>find_first_bit (1 samples, 0.11%)</title><rect x="19.2186%" y="85" width="0.1056%" height="15" fill="rgb(221,78,26)"/><text x="19.4686%" y="95.50"></text></g><g><title>ttwu_do_wakeup (1 samples, 0.11%)</title><rect x="19.3242%" y="85" width="0.1056%" height="15" fill="rgb(250,127,30)"/><text x="19.5742%" y="95.50"></text></g><g><title>check_preempt_curr (1 samples, 0.11%)</title><rect x="19.3242%" y="69" width="0.1056%" height="15" fill="rgb(230,49,44)"/><text x="19.5742%" y="79.50"></text></g><g><title>resched_curr (1 samples, 0.11%)</title><rect x="19.3242%" y="53" width="0.1056%" height="15" fill="rgb(229,67,23)"/><text x="19.5742%" y="63.50"></text></g><g><title>__wake_up_common (31 samples, 3.27%)</title><rect x="16.5787%" y="117" width="3.2735%" height="15" fill="rgb(249,83,47)"/><text x="16.8287%" y="127.50">__w..</text></g><g><title>try_to_wake_up (31 samples, 3.27%)</title><rect x="16.5787%" y="101" width="3.2735%" height="15" fill="rgb(215,43,3)"/><text x="16.8287%" y="111.50">try..</text></g><g><title>update_rq_clock (4 samples, 0.42%)</title><rect x="19.4298%" y="85" width="0.4224%" height="15" fill="rgb(238,154,13)"/><text x="19.6798%" y="95.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.11%)</title><rect x="19.7466%" y="69" width="0.1056%" height="15" fill="rgb(219,56,2)"/><text x="19.9966%" y="79.50"></text></g><g><title>sched_clock (1 samples, 0.11%)</title><rect x="19.7466%" y="53" width="0.1056%" height="15" fill="rgb(233,0,4)"/><text x="19.9966%" y="63.50"></text></g><g><title>native_sched_clock (1 samples, 0.11%)</title><rect x="19.7466%" y="37" width="0.1056%" height="15" fill="rgb(235,30,7)"/><text x="19.9966%" y="47.50"></text></g><g><title>sock_def_readable (35 samples, 3.70%)</title><rect x="16.2619%" y="149" width="3.6959%" height="15" fill="rgb(250,79,13)"/><text x="16.5119%" y="159.50">sock..</text></g><g><title>__wake_up_common_lock (32 samples, 3.38%)</title><rect x="16.5787%" y="133" width="3.3791%" height="15" fill="rgb(211,146,34)"/><text x="16.8287%" y="143.50">__w..</text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.11%)</title><rect x="19.8522%" y="117" width="0.1056%" height="15" fill="rgb(228,22,38)"/><text x="20.1022%" y="127.50"></text></g><g><title>__slab_free (2 samples, 0.21%)</title><rect x="20.5913%" y="101" width="0.2112%" height="15" fill="rgb(235,168,5)"/><text x="20.8413%" y="111.50"></text></g><g><title>kfree (4 samples, 0.42%)</title><rect x="20.5913%" y="117" width="0.4224%" height="15" fill="rgb(221,155,16)"/><text x="20.8413%" y="127.50"></text></g><g><title>slab_free_freelist_hook (2 samples, 0.21%)</title><rect x="20.8025%" y="101" width="0.2112%" height="15" fill="rgb(215,215,53)"/><text x="21.0525%" y="111.50"></text></g><g><title>skb_release_data (3 samples, 0.32%)</title><rect x="21.0137%" y="117" width="0.3168%" height="15" fill="rgb(223,4,10)"/><text x="21.2637%" y="127.50"></text></g><g><title>__kfree_skb (8 samples, 0.84%)</title><rect x="20.5913%" y="133" width="0.8448%" height="15" fill="rgb(234,103,6)"/><text x="20.8413%" y="143.50"></text></g><g><title>skb_release_head_state (1 samples, 0.11%)</title><rect x="21.3305%" y="117" width="0.1056%" height="15" fill="rgb(227,97,0)"/><text x="21.5805%" y="127.50"></text></g><g><title>bictcp_acked (1 samples, 0.11%)</title><rect x="21.4361%" y="133" width="0.1056%" height="15" fill="rgb(234,150,53)"/><text x="21.6861%" y="143.50"></text></g><g><title>tcp_rack_advance (1 samples, 0.11%)</title><rect x="21.5417%" y="133" width="0.1056%" height="15" fill="rgb(228,201,54)"/><text x="21.7917%" y="143.50"></text></g><g><title>tcp_rate_gen (2 samples, 0.21%)</title><rect x="21.6473%" y="133" width="0.2112%" height="15" fill="rgb(222,22,37)"/><text x="21.8973%" y="143.50"></text></g><g><title>tcp_ack (19 samples, 2.01%)</title><rect x="19.9578%" y="149" width="2.0063%" height="15" fill="rgb(237,53,32)"/><text x="20.2078%" y="159.50">t..</text></g><g><title>tcp_update_pacing_rate (1 samples, 0.11%)</title><rect x="21.8585%" y="133" width="0.1056%" height="15" fill="rgb(233,25,53)"/><text x="22.1085%" y="143.50"></text></g><g><title>tcp_check_space (1 samples, 0.11%)</title><rect x="21.9641%" y="149" width="0.1056%" height="15" fill="rgb(210,40,34)"/><text x="22.2141%" y="159.50"></text></g><g><title>tcp_event_data_recv (1 samples, 0.11%)</title><rect x="22.0697%" y="149" width="0.1056%" height="15" fill="rgb(241,220,44)"/><text x="22.3197%" y="159.50"></text></g><g><title>tcp_v4_do_rcv (64 samples, 6.76%)</title><rect x="15.8395%" y="181" width="6.7582%" height="15" fill="rgb(235,28,35)"/><text x="16.0895%" y="191.50">tcp_v4_do..</text></g><g><title>tcp_rcv_established (64 samples, 6.76%)</title><rect x="15.8395%" y="165" width="6.7582%" height="15" fill="rgb(210,56,17)"/><text x="16.0895%" y="175.50">tcp_rcv_e..</text></g><g><title>tcp_queue_rcv (4 samples, 0.42%)</title><rect x="22.1753%" y="149" width="0.4224%" height="15" fill="rgb(224,130,29)"/><text x="22.4253%" y="159.50"></text></g><g><title>ip_local_deliver (79 samples, 8.34%)</title><rect x="14.3611%" y="245" width="8.3421%" height="15" fill="rgb(235,212,8)"/><text x="14.6111%" y="255.50">ip_local_del..</text></g><g><title>ip_local_deliver_finish (78 samples, 8.24%)</title><rect x="14.4667%" y="229" width="8.2365%" height="15" fill="rgb(223,33,50)"/><text x="14.7167%" y="239.50">ip_local_de..</text></g><g><title>ip_protocol_deliver_rcu (76 samples, 8.03%)</title><rect x="14.6779%" y="213" width="8.0253%" height="15" fill="rgb(219,149,13)"/><text x="14.9279%" y="223.50">ip_protocol..</text></g><g><title>tcp_v4_rcv (74 samples, 7.81%)</title><rect x="14.8891%" y="197" width="7.8141%" height="15" fill="rgb(250,156,29)"/><text x="15.1391%" y="207.50">tcp_v4_rcv</text></g><g><title>tcp_v4_inbound_md5_hash (1 samples, 0.11%)</title><rect x="22.5977%" y="181" width="0.1056%" height="15" fill="rgb(216,193,19)"/><text x="22.8477%" y="191.50"></text></g><g><title>ip_rcv_core (2 samples, 0.21%)</title><rect x="22.7033%" y="245" width="0.2112%" height="15" fill="rgb(216,135,14)"/><text x="22.9533%" y="255.50"></text></g><g><title>__netif_receive_skb_one_core (83 samples, 8.76%)</title><rect x="14.3611%" y="277" width="8.7645%" height="15" fill="rgb(241,47,5)"/><text x="14.6111%" y="287.50">__netif_rece..</text></g><g><title>ip_rcv (83 samples, 8.76%)</title><rect x="14.3611%" y="261" width="8.7645%" height="15" fill="rgb(233,42,35)"/><text x="14.6111%" y="271.50">ip_rcv</text></g><g><title>ip_rcv_finish (2 samples, 0.21%)</title><rect x="22.9145%" y="245" width="0.2112%" height="15" fill="rgb(231,13,6)"/><text x="23.1645%" y="255.50"></text></g><g><title>do_softirq (90 samples, 9.50%)</title><rect x="13.7276%" y="357" width="9.5037%" height="15" fill="rgb(207,181,40)"/><text x="13.9776%" y="367.50">do_softirq</text></g><g><title>do_softirq_own_stack (89 samples, 9.40%)</title><rect x="13.8332%" y="341" width="9.3981%" height="15" fill="rgb(254,173,49)"/><text x="14.0832%" y="351.50">do_softirq_ow..</text></g><g><title>__do_softirq (89 samples, 9.40%)</title><rect x="13.8332%" y="325" width="9.3981%" height="15" fill="rgb(221,1,38)"/><text x="14.0832%" y="335.50">__do_softirq</text></g><g><title>net_rx_action (86 samples, 9.08%)</title><rect x="14.1499%" y="309" width="9.0813%" height="15" fill="rgb(206,124,46)"/><text x="14.3999%" y="319.50">net_rx_action</text></g><g><title>process_backlog (85 samples, 8.98%)</title><rect x="14.2555%" y="293" width="8.9757%" height="15" fill="rgb(249,21,11)"/><text x="14.5055%" y="303.50">process_backl..</text></g><g><title>_raw_spin_lock (1 samples, 0.11%)</title><rect x="23.1257%" y="277" width="0.1056%" height="15" fill="rgb(222,201,40)"/><text x="23.3757%" y="287.50"></text></g><g><title>ip_finish_output2 (103 samples, 10.88%)</title><rect x="12.4604%" y="389" width="10.8765%" height="15" fill="rgb(235,61,29)"/><text x="12.7104%" y="399.50">ip_finish_output2</text></g><g><title>__local_bh_enable_ip (92 samples, 9.71%)</title><rect x="13.6220%" y="373" width="9.7149%" height="15" fill="rgb(219,207,3)"/><text x="13.8720%" y="383.50">__local_bh_ena..</text></g><g><title>preempt_count_sub (1 samples, 0.11%)</title><rect x="23.2313%" y="357" width="0.1056%" height="15" fill="rgb(222,56,46)"/><text x="23.4813%" y="367.50"></text></g><g><title>__ip_queue_xmit (111 samples, 11.72%)</title><rect x="11.8268%" y="421" width="11.7212%" height="15" fill="rgb(239,76,54)"/><text x="12.0768%" y="431.50">__ip_queue_xmit</text></g><g><title>ip_output (107 samples, 11.30%)</title><rect x="12.2492%" y="405" width="11.2988%" height="15" fill="rgb(231,124,27)"/><text x="12.4992%" y="415.50">ip_output</text></g><g><title>ip_finish_output (2 samples, 0.21%)</title><rect x="23.3369%" y="389" width="0.2112%" height="15" fill="rgb(249,195,6)"/><text x="23.5869%" y="399.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (2 samples, 0.21%)</title><rect x="23.3369%" y="373" width="0.2112%" height="15" fill="rgb(237,174,47)"/><text x="23.5869%" y="383.50"></text></g><g><title>skb_clone (3 samples, 0.32%)</title><rect x="23.5480%" y="421" width="0.3168%" height="15" fill="rgb(206,201,31)"/><text x="23.7980%" y="431.50"></text></g><g><title>skb_push (1 samples, 0.11%)</title><rect x="23.8648%" y="421" width="0.1056%" height="15" fill="rgb(231,57,52)"/><text x="24.1148%" y="431.50"></text></g><g><title>tcp_established_options (1 samples, 0.11%)</title><rect x="23.9704%" y="421" width="0.1056%" height="15" fill="rgb(248,177,22)"/><text x="24.2204%" y="431.50"></text></g><g><title>__tcp_transmit_skb (121 samples, 12.78%)</title><rect x="11.5100%" y="437" width="12.7772%" height="15" fill="rgb(215,211,37)"/><text x="11.7600%" y="447.50">__tcp_transmit_skb</text></g><g><title>tcp_rate_skb_sent (2 samples, 0.21%)</title><rect x="24.0760%" y="421" width="0.2112%" height="15" fill="rgb(241,128,51)"/><text x="24.3260%" y="431.50"></text></g><g><title>tcp_event_new_data_sent (1 samples, 0.11%)</title><rect x="24.2872%" y="437" width="0.1056%" height="15" fill="rgb(227,165,31)"/><text x="24.5372%" y="447.50"></text></g><g><title>__tcp_push_pending_frames (123 samples, 12.99%)</title><rect x="11.5100%" y="469" width="12.9884%" height="15" fill="rgb(228,167,24)"/><text x="11.7600%" y="479.50">__tcp_push_pending_f..</text></g><g><title>tcp_write_xmit (123 samples, 12.99%)</title><rect x="11.5100%" y="453" width="12.9884%" height="15" fill="rgb(228,143,12)"/><text x="11.7600%" y="463.50">tcp_write_xmit</text></g><g><title>tcp_schedule_loss_probe.part.0 (1 samples, 0.11%)</title><rect x="24.3928%" y="437" width="0.1056%" height="15" fill="rgb(249,149,8)"/><text x="24.6428%" y="447.50"></text></g><g><title>sk_reset_timer (1 samples, 0.11%)</title><rect x="24.3928%" y="421" width="0.1056%" height="15" fill="rgb(243,35,44)"/><text x="24.6428%" y="431.50"></text></g><g><title>__mod_timer (1 samples, 0.11%)</title><rect x="24.3928%" y="405" width="0.1056%" height="15" fill="rgb(246,89,9)"/><text x="24.6428%" y="415.50"></text></g><g><title>__alloc_skb (2 samples, 0.21%)</title><rect x="24.6040%" y="453" width="0.2112%" height="15" fill="rgb(233,213,13)"/><text x="24.8540%" y="463.50"></text></g><g><title>__ksize (2 samples, 0.21%)</title><rect x="24.6040%" y="437" width="0.2112%" height="15" fill="rgb(233,141,41)"/><text x="24.8540%" y="447.50"></text></g><g><title>sk_stream_alloc_skb (4 samples, 0.42%)</title><rect x="24.4984%" y="469" width="0.4224%" height="15" fill="rgb(239,167,4)"/><text x="24.7484%" y="479.50"></text></g><g><title>sk_forced_mem_schedule (1 samples, 0.11%)</title><rect x="24.8152%" y="453" width="0.1056%" height="15" fill="rgb(209,217,16)"/><text x="25.0652%" y="463.50"></text></g><g><title>skb_do_copy_data_nocache (2 samples, 0.21%)</title><rect x="24.9208%" y="469" width="0.2112%" height="15" fill="rgb(219,88,35)"/><text x="25.1708%" y="479.50"></text></g><g><title>_copy_from_iter_full (1 samples, 0.11%)</title><rect x="25.0264%" y="453" width="0.1056%" height="15" fill="rgb(220,193,23)"/><text x="25.2764%" y="463.50"></text></g><g><title>iov_iter_advance (1 samples, 0.11%)</title><rect x="25.0264%" y="437" width="0.1056%" height="15" fill="rgb(230,90,52)"/><text x="25.2764%" y="447.50"></text></g><g><title>sock_sendmsg (139 samples, 14.68%)</title><rect x="10.8765%" y="517" width="14.6779%" height="15" fill="rgb(252,106,19)"/><text x="11.1265%" y="527.50">sock_sendmsg</text></g><g><title>tcp_sendmsg (139 samples, 14.68%)</title><rect x="10.8765%" y="501" width="14.6779%" height="15" fill="rgb(206,74,20)"/><text x="11.1265%" y="511.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (137 samples, 14.47%)</title><rect x="11.0876%" y="485" width="14.4667%" height="15" fill="rgb(230,138,44)"/><text x="11.3376%" y="495.50">tcp_sendmsg_locked</text></g><g><title>tcp_send_mss (4 samples, 0.42%)</title><rect x="25.1320%" y="469" width="0.4224%" height="15" fill="rgb(235,182,43)"/><text x="25.3820%" y="479.50"></text></g><g><title>tcp_current_mss (1 samples, 0.11%)</title><rect x="25.4488%" y="453" width="0.1056%" height="15" fill="rgb(242,16,51)"/><text x="25.6988%" y="463.50"></text></g><g><title>__x64_sys_sendto (142 samples, 14.99%)</title><rect x="10.7709%" y="549" width="14.9947%" height="15" fill="rgb(248,9,4)"/><text x="11.0209%" y="559.50">__x64_sys_sendto</text></g><g><title>__sys_sendto (141 samples, 14.89%)</title><rect x="10.8765%" y="533" width="14.8891%" height="15" fill="rgb(210,31,22)"/><text x="11.1265%" y="543.50">__sys_sendto</text></g><g><title>sockfd_lookup_light (2 samples, 0.21%)</title><rect x="25.5544%" y="517" width="0.2112%" height="15" fill="rgb(239,54,39)"/><text x="25.8044%" y="527.50"></text></g><g><title>__fget_light (1 samples, 0.11%)</title><rect x="25.6600%" y="501" width="0.1056%" height="15" fill="rgb(230,99,41)"/><text x="25.9100%" y="511.50"></text></g><g><title>do_syscall_64 (145 samples, 15.31%)</title><rect x="10.5597%" y="565" width="15.3115%" height="15" fill="rgb(253,106,12)"/><text x="10.8097%" y="575.50">do_syscall_64</text></g><g><title>syscall_trace_enter (1 samples, 0.11%)</title><rect x="25.7656%" y="549" width="0.1056%" height="15" fill="rgb(213,46,41)"/><text x="26.0156%" y="559.50"></text></g><g><title>__audit_syscall_entry (1 samples, 0.11%)</title><rect x="25.7656%" y="533" width="0.1056%" height="15" fill="rgb(215,133,35)"/><text x="26.0156%" y="543.50"></text></g><g><title>entry_SYSCALL_64 (154 samples, 16.26%)</title><rect x="10.3485%" y="581" width="16.2619%" height="15" fill="rgb(213,28,5)"/><text x="10.5985%" y="591.50">entry_SYSCALL_64</text></g><g><title>prepare_exit_to_usermode (7 samples, 0.74%)</title><rect x="25.8712%" y="565" width="0.7392%" height="15" fill="rgb(215,77,49)"/><text x="26.1212%" y="575.50"></text></g><g><title>__libc_send (160 samples, 16.90%)</title><rect x="10.0317%" y="597" width="16.8955%" height="15" fill="rgb(248,100,22)"/><text x="10.2817%" y="607.50">__libc_send</text></g><g><title>syscall_return_via_sysret (3 samples, 0.32%)</title><rect x="26.6103%" y="581" width="0.3168%" height="15" fill="rgb(208,67,9)"/><text x="26.8603%" y="591.50"></text></g><g><title>__libc_start_main (164 samples, 17.32%)</title><rect x="9.7149%" y="853" width="17.3178%" height="15" fill="rgb(219,133,21)"/><text x="9.9649%" y="863.50">__libc_start_main</text></g><g><title>main (164 samples, 17.32%)</title><rect x="9.7149%" y="837" width="17.3178%" height="15" fill="rgb(246,46,29)"/><text x="9.9649%" y="847.50">main</text></g><g><title>std::rt::lang_start_internal (164 samples, 17.32%)</title><rect x="9.7149%" y="821" width="17.3178%" height="15" fill="rgb(246,185,52)"/><text x="9.9649%" y="831.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (164 samples, 17.32%)</title><rect x="9.7149%" y="805" width="17.3178%" height="15" fill="rgb(252,136,11)"/><text x="9.9649%" y="815.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (164 samples, 17.32%)</title><rect x="9.7149%" y="789" width="17.3178%" height="15" fill="rgb(219,138,53)"/><text x="9.9649%" y="799.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (164 samples, 17.32%)</title><rect x="9.7149%" y="773" width="17.3178%" height="15" fill="rgb(211,51,23)"/><text x="9.9649%" y="783.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (164 samples, 17.32%)</title><rect x="9.7149%" y="757" width="17.3178%" height="15" fill="rgb(247,221,28)"/><text x="9.9649%" y="767.50">core::ops::function::impls:..</text></g><g><title>std::rt::lang_start::_{{closure}} (164 samples, 17.32%)</title><rect x="9.7149%" y="741" width="17.3178%" height="15" fill="rgb(251,222,45)"/><text x="9.9649%" y="751.50">std::rt::lang_start::_{{clo..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (164 samples, 17.32%)</title><rect x="9.7149%" y="725" width="17.3178%" height="15" fill="rgb(217,162,53)"/><text x="9.9649%" y="735.50">std::sys_common::backtrace:..</text></g><g><title>lobsters::main (164 samples, 17.32%)</title><rect x="9.7149%" y="709" width="17.3178%" height="15" fill="rgb(229,93,14)"/><text x="9.9649%" y="719.50">lobsters::main</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (163 samples, 17.21%)</title><rect x="9.8205%" y="693" width="17.2122%" height="15" fill="rgb(209,67,49)"/><text x="10.0705%" y="703.50">mysql::conn::queryable::Que..</text></g><g><title>mysql::conn::Conn::_query (161 samples, 17.00%)</title><rect x="10.0317%" y="677" width="17.0011%" height="15" fill="rgb(213,87,29)"/><text x="10.2817%" y="687.50">mysql::conn::Conn::_query</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (161 samples, 17.00%)</title><rect x="10.0317%" y="661" width="17.0011%" height="15" fill="rgb(205,151,52)"/><text x="10.2817%" y="671.50">mysql_common::proto::sync_..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (161 samples, 17.00%)</title><rect x="10.0317%" y="645" width="17.0011%" height="15" fill="rgb(253,215,39)"/><text x="10.2817%" y="655.50">std::io::buffered::BufWrit..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (161 samples, 17.00%)</title><rect x="10.0317%" y="629" width="17.0011%" height="15" fill="rgb(221,220,41)"/><text x="10.2817%" y="639.50">&lt;std::net::tcp::TcpStream ..</text></g><g><title>std::sys_common::net::TcpStream::write (161 samples, 17.00%)</title><rect x="10.0317%" y="613" width="17.0011%" height="15" fill="rgb(218,133,21)"/><text x="10.2817%" y="623.50">std::sys_common::net::TcpS..</text></g><g><title>std::sys::unix::cvt (1 samples, 0.11%)</title><rect x="26.9271%" y="597" width="0.1056%" height="15" fill="rgb(221,193,43)"/><text x="27.1771%" y="607.50"></text></g><g><title>&lt;isize as std::sys::unix::IsMinusOne&gt;::is_minus_one (1 samples, 0.11%)</title><rect x="26.9271%" y="581" width="0.1056%" height="15" fill="rgb(240,128,52)"/><text x="27.1771%" y="591.50"></text></g><g><title>_int_free (2 samples, 0.21%)</title><rect x="27.0327%" y="853" width="0.2112%" height="15" fill="rgb(253,114,12)"/><text x="27.2827%" y="863.50"></text></g><g><title>_int_realloc (2 samples, 0.21%)</title><rect x="27.2439%" y="853" width="0.2112%" height="15" fill="rgb(215,223,47)"/><text x="27.4939%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="27.4551%" y="853" width="0.1056%" height="15" fill="rgb(248,225,23)"/><text x="27.7051%" y="863.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (1 samples, 0.11%)</title><rect x="27.5607%" y="853" width="0.1056%" height="15" fill="rgb(250,108,0)"/><text x="27.8107%" y="863.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.11%)</title><rect x="27.6663%" y="853" width="0.1056%" height="15" fill="rgb(228,208,7)"/><text x="27.9163%" y="863.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.11%)</title><rect x="27.7719%" y="789" width="0.1056%" height="15" fill="rgb(244,45,10)"/><text x="28.0219%" y="799.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.11%)</title><rect x="27.7719%" y="773" width="0.1056%" height="15" fill="rgb(207,125,25)"/><text x="28.0219%" y="783.50"></text></g><g><title>_int_free (2 samples, 0.21%)</title><rect x="27.8775%" y="789" width="0.2112%" height="15" fill="rgb(210,195,18)"/><text x="28.1275%" y="799.50"></text></g><g><title>malloc_consolidate (2 samples, 0.21%)</title><rect x="27.8775%" y="773" width="0.2112%" height="15" fill="rgb(249,80,12)"/><text x="28.1275%" y="783.50"></text></g><g><title>_int_free (2 samples, 0.21%)</title><rect x="28.0887%" y="773" width="0.2112%" height="15" fill="rgb(221,65,9)"/><text x="28.3387%" y="783.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.32%)</title><rect x="28.0887%" y="789" width="0.3168%" height="15" fill="rgb(235,49,36)"/><text x="28.3387%" y="799.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.11%)</title><rect x="28.2999%" y="773" width="0.1056%" height="15" fill="rgb(225,32,20)"/><text x="28.5499%" y="783.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.11%)</title><rect x="28.2999%" y="757" width="0.1056%" height="15" fill="rgb(215,141,46)"/><text x="28.5499%" y="767.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="28.2999%" y="741" width="0.1056%" height="15" fill="rgb(250,160,47)"/><text x="28.5499%" y="751.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.11%)</title><rect x="28.4055%" y="677" width="0.1056%" height="15" fill="rgb(216,222,40)"/><text x="28.6555%" y="687.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.11%)</title><rect x="28.4055%" y="661" width="0.1056%" height="15" fill="rgb(234,217,39)"/><text x="28.6555%" y="671.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.11%)</title><rect x="28.4055%" y="645" width="0.1056%" height="15" fill="rgb(207,178,40)"/><text x="28.6555%" y="655.50"></text></g><g><title>decor::Shim::run_on_tcp (8 samples, 0.84%)</title><rect x="27.7719%" y="853" width="0.8448%" height="15" fill="rgb(221,136,13)"/><text x="28.0219%" y="863.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (8 samples, 0.84%)</title><rect x="27.7719%" y="837" width="0.8448%" height="15" fill="rgb(249,199,10)"/><text x="28.0219%" y="847.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (8 samples, 0.84%)</title><rect x="27.7719%" y="821" width="0.8448%" height="15" fill="rgb(249,222,13)"/><text x="28.0219%" y="831.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (8 samples, 0.84%)</title><rect x="27.7719%" y="805" width="0.8448%" height="15" fill="rgb(244,185,38)"/><text x="28.0219%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (2 samples, 0.21%)</title><rect x="28.4055%" y="789" width="0.2112%" height="15" fill="rgb(236,202,9)"/><text x="28.6555%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (2 samples, 0.21%)</title><rect x="28.4055%" y="773" width="0.2112%" height="15" fill="rgb(250,229,37)"/><text x="28.6555%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.21%)</title><rect x="28.4055%" y="757" width="0.2112%" height="15" fill="rgb(206,174,23)"/><text x="28.6555%" y="767.50"></text></g><g><title>page_fault (2 samples, 0.21%)</title><rect x="28.4055%" y="741" width="0.2112%" height="15" fill="rgb(211,33,43)"/><text x="28.6555%" y="751.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.21%)</title><rect x="28.4055%" y="725" width="0.2112%" height="15" fill="rgb(245,58,50)"/><text x="28.6555%" y="735.50"></text></g><g><title>handle_mm_fault (2 samples, 0.21%)</title><rect x="28.4055%" y="709" width="0.2112%" height="15" fill="rgb(244,68,36)"/><text x="28.6555%" y="719.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.21%)</title><rect x="28.4055%" y="693" width="0.2112%" height="15" fill="rgb(232,229,15)"/><text x="28.6555%" y="703.50"></text></g><g><title>page_add_new_anon_rmap (1 samples, 0.11%)</title><rect x="28.5111%" y="677" width="0.1056%" height="15" fill="rgb(254,30,23)"/><text x="28.7611%" y="687.50"></text></g><g><title>__pthread_disable_asynccancel (1 samples, 0.11%)</title><rect x="28.6167%" y="709" width="0.1056%" height="15" fill="rgb(235,160,14)"/><text x="28.8667%" y="719.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query_drop (2 samples, 0.21%)</title><rect x="28.6167%" y="853" width="0.2112%" height="15" fill="rgb(212,155,44)"/><text x="28.8667%" y="863.50"></text></g><g><title>decor::query_transformer::QueryTransformer::issue_to_dt_and_get_mv_stmt (2 samples, 0.21%)</title><rect x="28.6167%" y="837" width="0.2112%" height="15" fill="rgb(226,2,50)"/><text x="28.8667%" y="847.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (2 samples, 0.21%)</title><rect x="28.6167%" y="821" width="0.2112%" height="15" fill="rgb(234,177,6)"/><text x="28.8667%" y="831.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.21%)</title><rect x="28.6167%" y="805" width="0.2112%" height="15" fill="rgb(217,24,9)"/><text x="28.8667%" y="815.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (2 samples, 0.21%)</title><rect x="28.6167%" y="789" width="0.2112%" height="15" fill="rgb(220,13,46)"/><text x="28.8667%" y="799.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (2 samples, 0.21%)</title><rect x="28.6167%" y="773" width="0.2112%" height="15" fill="rgb(239,221,27)"/><text x="28.8667%" y="783.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (2 samples, 0.21%)</title><rect x="28.6167%" y="757" width="0.2112%" height="15" fill="rgb(222,198,25)"/><text x="28.8667%" y="767.50"></text></g><g><title>std::sys_common::net::TcpStream::write (2 samples, 0.21%)</title><rect x="28.6167%" y="741" width="0.2112%" height="15" fill="rgb(211,99,13)"/><text x="28.8667%" y="751.50"></text></g><g><title>__libc_send (2 samples, 0.21%)</title><rect x="28.6167%" y="725" width="0.2112%" height="15" fill="rgb(232,111,31)"/><text x="28.8667%" y="735.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="28.7223%" y="709" width="0.1056%" height="15" fill="rgb(245,82,37)"/><text x="28.9723%" y="719.50"></text></g><g><title>do_syscall_64 (1 samples, 0.11%)</title><rect x="28.7223%" y="693" width="0.1056%" height="15" fill="rgb(227,149,46)"/><text x="28.9723%" y="703.50"></text></g><g><title>__x64_sys_sendto (1 samples, 0.11%)</title><rect x="28.7223%" y="677" width="0.1056%" height="15" fill="rgb(218,36,50)"/><text x="28.9723%" y="687.50"></text></g><g><title>__sys_sendto (1 samples, 0.11%)</title><rect x="28.7223%" y="661" width="0.1056%" height="15" fill="rgb(226,80,48)"/><text x="28.9723%" y="671.50"></text></g><g><title>sock_sendmsg (1 samples, 0.11%)</title><rect x="28.7223%" y="645" width="0.1056%" height="15" fill="rgb(238,224,15)"/><text x="28.9723%" y="655.50"></text></g><g><title>tcp_sendmsg (1 samples, 0.11%)</title><rect x="28.7223%" y="629" width="0.1056%" height="15" fill="rgb(241,136,10)"/><text x="28.9723%" y="639.50"></text></g><g><title>tcp_sendmsg_locked (1 samples, 0.11%)</title><rect x="28.7223%" y="613" width="0.1056%" height="15" fill="rgb(208,32,45)"/><text x="28.9723%" y="623.50"></text></g><g><title>skb_do_copy_data_nocache (1 samples, 0.11%)</title><rect x="28.7223%" y="597" width="0.1056%" height="15" fill="rgb(207,135,9)"/><text x="28.9723%" y="607.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (3 samples, 0.32%)</title><rect x="28.9335%" y="805" width="0.3168%" height="15" fill="rgb(206,86,44)"/><text x="29.1835%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.32%)</title><rect x="28.9335%" y="789" width="0.3168%" height="15" fill="rgb(245,177,15)"/><text x="29.1835%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.32%)</title><rect x="28.9335%" y="773" width="0.3168%" height="15" fill="rgb(206,64,50)"/><text x="29.1835%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.32%)</title><rect x="28.9335%" y="757" width="0.3168%" height="15" fill="rgb(234,36,40)"/><text x="29.1835%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.32%)</title><rect x="28.9335%" y="741" width="0.3168%" height="15" fill="rgb(213,64,8)"/><text x="29.1835%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.32%)</title><rect x="28.9335%" y="725" width="0.3168%" height="15" fill="rgb(210,75,36)"/><text x="29.1835%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.32%)</title><rect x="28.9335%" y="709" width="0.3168%" height="15" fill="rgb(229,88,21)"/><text x="29.1835%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.32%)</title><rect x="28.9335%" y="693" width="0.3168%" height="15" fill="rgb(252,204,47)"/><text x="29.1835%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.32%)</title><rect x="28.9335%" y="677" width="0.3168%" height="15" fill="rgb(208,77,27)"/><text x="29.1835%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (3 samples, 0.32%)</title><rect x="28.9335%" y="661" width="0.3168%" height="15" fill="rgb(221,76,26)"/><text x="29.1835%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.32%)</title><rect x="28.9335%" y="645" width="0.3168%" height="15" fill="rgb(225,139,18)"/><text x="29.1835%" y="655.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.32%)</title><rect x="28.9335%" y="629" width="0.3168%" height="15" fill="rgb(230,137,11)"/><text x="29.1835%" y="639.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.32%)</title><rect x="28.9335%" y="613" width="0.3168%" height="15" fill="rgb(212,28,1)"/><text x="29.1835%" y="623.50"></text></g><g><title>_int_malloc (2 samples, 0.21%)</title><rect x="29.0391%" y="597" width="0.2112%" height="15" fill="rgb(248,164,17)"/><text x="29.2891%" y="607.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="29.2503%" y="805" width="0.1056%" height="15" fill="rgb(222,171,42)"/><text x="29.5003%" y="815.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="29.3559%" y="805" width="0.1056%" height="15" fill="rgb(243,84,45)"/><text x="29.6059%" y="815.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="29.5671%" y="789" width="0.1056%" height="15" fill="rgb(252,49,23)"/><text x="29.8171%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="29.5671%" y="773" width="0.1056%" height="15" fill="rgb(215,19,7)"/><text x="29.8171%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="29.5671%" y="757" width="0.1056%" height="15" fill="rgb(238,81,41)"/><text x="29.8171%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.11%)</title><rect x="29.5671%" y="741" width="0.1056%" height="15" fill="rgb(210,199,37)"/><text x="29.8171%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.11%)</title><rect x="29.5671%" y="725" width="0.1056%" height="15" fill="rgb(244,192,49)"/><text x="29.8171%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="29.5671%" y="709" width="0.1056%" height="15" fill="rgb(226,211,11)"/><text x="29.8171%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="29.5671%" y="693" width="0.1056%" height="15" fill="rgb(236,162,54)"/><text x="29.8171%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="29.5671%" y="677" width="0.1056%" height="15" fill="rgb(220,229,9)"/><text x="29.8171%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.11%)</title><rect x="29.5671%" y="661" width="0.1056%" height="15" fill="rgb(250,87,22)"/><text x="29.8171%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.11%)</title><rect x="29.5671%" y="645" width="0.1056%" height="15" fill="rgb(239,43,17)"/><text x="29.8171%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="29.5671%" y="629" width="0.1056%" height="15" fill="rgb(231,177,25)"/><text x="29.8171%" y="639.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="29.5671%" y="613" width="0.1056%" height="15" fill="rgb(219,179,1)"/><text x="29.8171%" y="623.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="29.5671%" y="597" width="0.1056%" height="15" fill="rgb(238,219,53)"/><text x="29.8171%" y="607.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.11%)</title><rect x="29.6727%" y="789" width="0.1056%" height="15" fill="rgb(232,167,36)"/><text x="29.9227%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (4 samples, 0.42%)</title><rect x="29.4615%" y="805" width="0.4224%" height="15" fill="rgb(244,19,51)"/><text x="29.7115%" y="815.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="29.7782%" y="789" width="0.1056%" height="15" fill="rgb(224,6,22)"/><text x="30.0282%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::parse_object_name (1 samples, 0.11%)</title><rect x="29.8838%" y="805" width="0.1056%" height="15" fill="rgb(224,145,5)"/><text x="30.1338%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::parse_identifier (1 samples, 0.11%)</title><rect x="29.8838%" y="789" width="0.1056%" height="15" fill="rgb(234,130,49)"/><text x="30.1338%" y="799.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (1 samples, 0.11%)</title><rect x="29.8838%" y="773" width="0.1056%" height="15" fill="rgb(254,6,2)"/><text x="30.1338%" y="783.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_lower (1 samples, 0.11%)</title><rect x="29.8838%" y="757" width="0.1056%" height="15" fill="rgb(208,96,46)"/><text x="30.1338%" y="767.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (1 samples, 0.11%)</title><rect x="29.8838%" y="741" width="0.1056%" height="15" fill="rgb(239,3,39)"/><text x="30.1338%" y="751.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.11%)</title><rect x="29.8838%" y="725" width="0.1056%" height="15" fill="rgb(233,210,1)"/><text x="30.1338%" y="735.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (1 samples, 0.11%)</title><rect x="29.8838%" y="709" width="0.1056%" height="15" fill="rgb(244,137,37)"/><text x="30.1338%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="29.9894%" y="789" width="0.1056%" height="15" fill="rgb(240,136,2)"/><text x="30.2394%" y="799.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.11%)</title><rect x="29.9894%" y="773" width="0.1056%" height="15" fill="rgb(239,18,37)"/><text x="30.2394%" y="783.50"></text></g><g><title>_int_realloc (1 samples, 0.11%)</title><rect x="29.9894%" y="757" width="0.1056%" height="15" fill="rgb(218,185,22)"/><text x="30.2394%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.21%)</title><rect x="30.2006%" y="773" width="0.2112%" height="15" fill="rgb(225,218,4)"/><text x="30.4506%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.21%)</title><rect x="30.2006%" y="757" width="0.2112%" height="15" fill="rgb(230,182,32)"/><text x="30.4506%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.21%)</title><rect x="30.2006%" y="741" width="0.2112%" height="15" fill="rgb(242,56,43)"/><text x="30.4506%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.21%)</title><rect x="30.2006%" y="725" width="0.2112%" height="15" fill="rgb(233,99,24)"/><text x="30.4506%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.21%)</title><rect x="30.2006%" y="709" width="0.2112%" height="15" fill="rgb(234,209,42)"/><text x="30.4506%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.21%)</title><rect x="30.2006%" y="693" width="0.2112%" height="15" fill="rgb(227,7,12)"/><text x="30.4506%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.21%)</title><rect x="30.2006%" y="677" width="0.2112%" height="15" fill="rgb(245,203,43)"/><text x="30.4506%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.21%)</title><rect x="30.2006%" y="661" width="0.2112%" height="15" fill="rgb(238,205,33)"/><text x="30.4506%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.21%)</title><rect x="30.2006%" y="645" width="0.2112%" height="15" fill="rgb(231,56,7)"/><text x="30.4506%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.21%)</title><rect x="30.2006%" y="629" width="0.2112%" height="15" fill="rgb(244,186,29)"/><text x="30.4506%" y="639.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.21%)</title><rect x="30.2006%" y="613" width="0.2112%" height="15" fill="rgb(234,111,31)"/><text x="30.4506%" y="623.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.21%)</title><rect x="30.2006%" y="597" width="0.2112%" height="15" fill="rgb(241,149,10)"/><text x="30.4506%" y="607.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="30.3062%" y="581" width="0.1056%" height="15" fill="rgb(249,206,44)"/><text x="30.5562%" y="591.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (2 samples, 0.21%)</title><rect x="30.4118%" y="773" width="0.2112%" height="15" fill="rgb(251,153,30)"/><text x="30.6618%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.21%)</title><rect x="30.4118%" y="757" width="0.2112%" height="15" fill="rgb(239,152,38)"/><text x="30.6618%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.21%)</title><rect x="30.4118%" y="741" width="0.2112%" height="15" fill="rgb(249,139,47)"/><text x="30.6618%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.21%)</title><rect x="30.4118%" y="725" width="0.2112%" height="15" fill="rgb(244,64,35)"/><text x="30.6618%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.21%)</title><rect x="30.4118%" y="709" width="0.2112%" height="15" fill="rgb(216,46,15)"/><text x="30.6618%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.21%)</title><rect x="30.4118%" y="693" width="0.2112%" height="15" fill="rgb(250,74,19)"/><text x="30.6618%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.21%)</title><rect x="30.4118%" y="677" width="0.2112%" height="15" fill="rgb(249,42,33)"/><text x="30.6618%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.21%)</title><rect x="30.4118%" y="661" width="0.2112%" height="15" fill="rgb(242,149,17)"/><text x="30.6618%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.21%)</title><rect x="30.4118%" y="645" width="0.2112%" height="15" fill="rgb(244,29,21)"/><text x="30.6618%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.21%)</title><rect x="30.4118%" y="629" width="0.2112%" height="15" fill="rgb(220,130,37)"/><text x="30.6618%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.21%)</title><rect x="30.4118%" y="613" width="0.2112%" height="15" fill="rgb(211,67,2)"/><text x="30.6618%" y="623.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.21%)</title><rect x="30.4118%" y="597" width="0.2112%" height="15" fill="rgb(235,68,52)"/><text x="30.6618%" y="607.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.21%)</title><rect x="30.4118%" y="581" width="0.2112%" height="15" fill="rgb(246,142,3)"/><text x="30.6618%" y="591.50"></text></g><g><title>_int_malloc (2 samples, 0.21%)</title><rect x="30.4118%" y="565" width="0.2112%" height="15" fill="rgb(241,25,7)"/><text x="30.6618%" y="575.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="30.6230%" y="757" width="0.1056%" height="15" fill="rgb(242,119,39)"/><text x="30.8730%" y="767.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="30.6230%" y="741" width="0.1056%" height="15" fill="rgb(241,98,45)"/><text x="30.8730%" y="751.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.11%)</title><rect x="30.6230%" y="725" width="0.1056%" height="15" fill="rgb(254,28,30)"/><text x="30.8730%" y="735.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="30.6230%" y="709" width="0.1056%" height="15" fill="rgb(241,142,54)"/><text x="30.8730%" y="719.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.11%)</title><rect x="30.6230%" y="693" width="0.1056%" height="15" fill="rgb(222,85,15)"/><text x="30.8730%" y="703.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (20 samples, 2.11%)</title><rect x="28.8279%" y="853" width="2.1119%" height="15" fill="rgb(210,85,47)"/><text x="29.0779%" y="863.50">d..</text></g><g><title>sql_parser::parser::parse_statements (19 samples, 2.01%)</title><rect x="28.9335%" y="837" width="2.0063%" height="15" fill="rgb(224,206,25)"/><text x="29.1835%" y="847.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_statement (19 samples, 2.01%)</title><rect x="28.9335%" y="821" width="2.0063%" height="15" fill="rgb(243,201,19)"/><text x="29.1835%" y="831.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_parenthesized_column_list (9 samples, 0.95%)</title><rect x="29.9894%" y="805" width="0.9504%" height="15" fill="rgb(236,59,4)"/><text x="30.2394%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::parse_identifier (8 samples, 0.84%)</title><rect x="30.0950%" y="789" width="0.8448%" height="15" fill="rgb(254,179,45)"/><text x="30.3450%" y="799.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (3 samples, 0.32%)</title><rect x="30.6230%" y="773" width="0.3168%" height="15" fill="rgb(226,14,10)"/><text x="30.8730%" y="783.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_lower (2 samples, 0.21%)</title><rect x="30.7286%" y="757" width="0.2112%" height="15" fill="rgb(244,27,41)"/><text x="30.9786%" y="767.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.21%)</title><rect x="30.7286%" y="741" width="0.2112%" height="15" fill="rgb(235,35,32)"/><text x="30.9786%" y="751.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.21%)</title><rect x="30.7286%" y="725" width="0.2112%" height="15" fill="rgb(218,68,31)"/><text x="30.9786%" y="735.50"></text></g><g><title>hwloc::Topology::new (1 samples, 0.11%)</title><rect x="30.9398%" y="837" width="0.1056%" height="15" fill="rgb(207,120,37)"/><text x="31.1898%" y="847.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="30.9398%" y="821" width="0.1056%" height="15" fill="rgb(227,98,0)"/><text x="31.1898%" y="831.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="30.9398%" y="805" width="0.1056%" height="15" fill="rgb(207,7,3)"/><text x="31.1898%" y="815.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="30.9398%" y="789" width="0.1056%" height="15" fill="rgb(206,98,19)"/><text x="31.1898%" y="799.50"></text></g><g><title>dlopen (1 samples, 0.11%)</title><rect x="30.9398%" y="773" width="0.1056%" height="15" fill="rgb(217,5,26)"/><text x="31.1898%" y="783.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.11%)</title><rect x="30.9398%" y="757" width="0.1056%" height="15" fill="rgb(235,190,38)"/><text x="31.1898%" y="767.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.11%)</title><rect x="30.9398%" y="741" width="0.1056%" height="15" fill="rgb(247,86,24)"/><text x="31.1898%" y="751.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.11%)</title><rect x="30.9398%" y="725" width="0.1056%" height="15" fill="rgb(205,101,16)"/><text x="31.1898%" y="735.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.11%)</title><rect x="30.9398%" y="709" width="0.1056%" height="15" fill="rgb(246,168,33)"/><text x="31.1898%" y="719.50"></text></g><g><title>_dl_open (1 samples, 0.11%)</title><rect x="30.9398%" y="693" width="0.1056%" height="15" fill="rgb(231,114,1)"/><text x="31.1898%" y="703.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.11%)</title><rect x="30.9398%" y="677" width="0.1056%" height="15" fill="rgb(207,184,53)"/><text x="31.1898%" y="687.50"></text></g><g><title>dl_open_worker (1 samples, 0.11%)</title><rect x="30.9398%" y="661" width="0.1056%" height="15" fill="rgb(224,95,51)"/><text x="31.1898%" y="671.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.11%)</title><rect x="30.9398%" y="645" width="0.1056%" height="15" fill="rgb(212,188,45)"/><text x="31.1898%" y="655.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.11%)</title><rect x="30.9398%" y="629" width="0.1056%" height="15" fill="rgb(223,154,38)"/><text x="31.1898%" y="639.50"></text></g><g><title>do_lookup_x (1 samples, 0.11%)</title><rect x="30.9398%" y="613" width="0.1056%" height="15" fill="rgb(251,22,52)"/><text x="31.1898%" y="623.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="31.0454%" y="789" width="0.1056%" height="15" fill="rgb(229,209,22)"/><text x="31.2954%" y="799.50"></text></g><g><title>mysql::conn::Conn::handle_ok (1 samples, 0.11%)</title><rect x="31.1510%" y="789" width="0.1056%" height="15" fill="rgb(234,138,34)"/><text x="31.4010%" y="799.50"></text></g><g><title>__pthread_disable_asynccancel (1 samples, 0.11%)</title><rect x="31.7846%" y="661" width="0.1056%" height="15" fill="rgb(212,95,11)"/><text x="32.0346%" y="671.50"></text></g><g><title>__pthread_enable_asynccancel (1 samples, 0.11%)</title><rect x="31.8902%" y="661" width="0.1056%" height="15" fill="rgb(240,179,47)"/><text x="32.1402%" y="671.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.11%)</title><rect x="31.9958%" y="661" width="0.1056%" height="15" fill="rgb(240,163,11)"/><text x="32.2458%" y="671.50"></text></g><g><title>fput_many (1 samples, 0.11%)</title><rect x="32.4182%" y="597" width="0.1056%" height="15" fill="rgb(236,37,12)"/><text x="32.6682%" y="607.50"></text></g><g><title>__kfree_skb (1 samples, 0.11%)</title><rect x="32.9461%" y="565" width="0.1056%" height="15" fill="rgb(232,164,16)"/><text x="33.1961%" y="575.50"></text></g><g><title>skb_release_data (1 samples, 0.11%)</title><rect x="32.9461%" y="549" width="0.1056%" height="15" fill="rgb(244,205,15)"/><text x="33.1961%" y="559.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.11%)</title><rect x="33.0517%" y="565" width="0.1056%" height="15" fill="rgb(223,117,47)"/><text x="33.3017%" y="575.50"></text></g><g><title>preempt_count_sub (1 samples, 0.11%)</title><rect x="33.0517%" y="549" width="0.1056%" height="15" fill="rgb(244,107,35)"/><text x="33.3017%" y="559.50"></text></g><g><title>kfree_skbmem (1 samples, 0.11%)</title><rect x="33.1573%" y="565" width="0.1056%" height="15" fill="rgb(205,140,8)"/><text x="33.4073%" y="575.50"></text></g><g><title>ns_to_timespec64 (1 samples, 0.11%)</title><rect x="33.2629%" y="565" width="0.1056%" height="15" fill="rgb(228,84,46)"/><text x="33.5129%" y="575.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.11%)</title><rect x="33.5797%" y="533" width="0.1056%" height="15" fill="rgb(254,188,9)"/><text x="33.8297%" y="543.50"></text></g><g><title>__local_bh_enable_ip (2 samples, 0.21%)</title><rect x="33.5797%" y="549" width="0.2112%" height="15" fill="rgb(206,112,54)"/><text x="33.8297%" y="559.50"></text></g><g><title>preempt_count_sub (1 samples, 0.11%)</title><rect x="33.6853%" y="533" width="0.1056%" height="15" fill="rgb(216,84,49)"/><text x="33.9353%" y="543.50"></text></g><g><title>_raw_spin_lock_bh (2 samples, 0.21%)</title><rect x="33.7909%" y="549" width="0.2112%" height="15" fill="rgb(214,194,35)"/><text x="34.0409%" y="559.50"></text></g><g><title>_raw_spin_unlock_irqrestore (1 samples, 0.11%)</title><rect x="34.0021%" y="549" width="0.1056%" height="15" fill="rgb(249,28,3)"/><text x="34.2521%" y="559.50"></text></g><g><title>__perf_event_task_sched_out (2 samples, 0.21%)</title><rect x="34.2133%" y="485" width="0.2112%" height="15" fill="rgb(222,56,52)"/><text x="34.4633%" y="495.50"></text></g><g><title>ctx_sched_out (2 samples, 0.21%)</title><rect x="34.2133%" y="469" width="0.2112%" height="15" fill="rgb(245,217,50)"/><text x="34.4633%" y="479.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.11%)</title><rect x="34.3189%" y="453" width="0.1056%" height="15" fill="rgb(213,201,24)"/><text x="34.5689%" y="463.50"></text></g><g><title>update_cfs_group (1 samples, 0.11%)</title><rect x="34.5301%" y="453" width="0.1056%" height="15" fill="rgb(248,116,28)"/><text x="34.7801%" y="463.50"></text></g><g><title>update_curr (2 samples, 0.21%)</title><rect x="34.6357%" y="453" width="0.2112%" height="15" fill="rgb(219,72,43)"/><text x="34.8857%" y="463.50"></text></g><g><title>__cgroup_account_cputime (1 samples, 0.11%)</title><rect x="34.7413%" y="437" width="0.1056%" height="15" fill="rgb(209,138,14)"/><text x="34.9913%" y="447.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.11%)</title><rect x="34.7413%" y="421" width="0.1056%" height="15" fill="rgb(222,18,33)"/><text x="34.9913%" y="431.50"></text></g><g><title>dequeue_task_fair (5 samples, 0.53%)</title><rect x="34.4245%" y="485" width="0.5280%" height="15" fill="rgb(213,199,7)"/><text x="34.6745%" y="495.50"></text></g><g><title>dequeue_entity (5 samples, 0.53%)</title><rect x="34.4245%" y="469" width="0.5280%" height="15" fill="rgb(250,110,10)"/><text x="34.6745%" y="479.50"></text></g><g><title>update_load_avg (1 samples, 0.11%)</title><rect x="34.8469%" y="453" width="0.1056%" height="15" fill="rgb(248,123,6)"/><text x="35.0969%" y="463.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.11%)</title><rect x="34.8469%" y="437" width="0.1056%" height="15" fill="rgb(206,91,31)"/><text x="35.0969%" y="447.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (1 samples, 0.11%)</title><rect x="34.9525%" y="453" width="0.1056%" height="15" fill="rgb(211,154,13)"/><text x="35.2025%" y="463.50"></text></g><g><title>native_write_msr (1 samples, 0.11%)</title><rect x="34.9525%" y="437" width="0.1056%" height="15" fill="rgb(225,148,7)"/><text x="35.2025%" y="447.50"></text></g><g><title>__perf_event_task_sched_in (2 samples, 0.21%)</title><rect x="34.9525%" y="469" width="0.2112%" height="15" fill="rgb(220,160,43)"/><text x="35.2025%" y="479.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.11%)</title><rect x="35.0581%" y="453" width="0.1056%" height="15" fill="rgb(213,52,39)"/><text x="35.3081%" y="463.50"></text></g><g><title>preempt_count_sub (1 samples, 0.11%)</title><rect x="35.0581%" y="437" width="0.1056%" height="15" fill="rgb(243,137,7)"/><text x="35.3081%" y="447.50"></text></g><g><title>finish_task_switch (3 samples, 0.32%)</title><rect x="34.9525%" y="485" width="0.3168%" height="15" fill="rgb(230,79,13)"/><text x="35.2025%" y="495.50"></text></g><g><title>_raw_spin_unlock_irq (1 samples, 0.11%)</title><rect x="35.1637%" y="469" width="0.1056%" height="15" fill="rgb(247,105,23)"/><text x="35.4137%" y="479.50"></text></g><g><title>preempt_count_sub (1 samples, 0.11%)</title><rect x="35.1637%" y="453" width="0.1056%" height="15" fill="rgb(223,179,41)"/><text x="35.4137%" y="463.50"></text></g><g><title>pick_next_task_fair (1 samples, 0.11%)</title><rect x="35.2693%" y="485" width="0.1056%" height="15" fill="rgb(218,9,34)"/><text x="35.5193%" y="495.50"></text></g><g><title>newidle_balance (1 samples, 0.11%)</title><rect x="35.2693%" y="469" width="0.1056%" height="15" fill="rgb(222,106,8)"/><text x="35.5193%" y="479.50"></text></g><g><title>psi_task_change (8 samples, 0.84%)</title><rect x="35.3749%" y="485" width="0.8448%" height="15" fill="rgb(211,220,0)"/><text x="35.6249%" y="495.50"></text></g><g><title>psi_group_change (6 samples, 0.63%)</title><rect x="35.5861%" y="469" width="0.6336%" height="15" fill="rgb(229,52,16)"/><text x="35.8361%" y="479.50"></text></g><g><title>rcu_note_context_switch (3 samples, 0.32%)</title><rect x="36.2196%" y="485" width="0.3168%" height="15" fill="rgb(212,155,18)"/><text x="36.4696%" y="495.50"></text></g><g><title>rcu_preempt_deferred_qs (1 samples, 0.11%)</title><rect x="36.4308%" y="469" width="0.1056%" height="15" fill="rgb(242,21,14)"/><text x="36.6808%" y="479.50"></text></g><g><title>uclamp_rq_dec_id (1 samples, 0.11%)</title><rect x="36.5364%" y="485" width="0.1056%" height="15" fill="rgb(222,19,48)"/><text x="36.7864%" y="495.50"></text></g><g><title>__schedule (25 samples, 2.64%)</title><rect x="34.1077%" y="501" width="2.6399%" height="15" fill="rgb(232,45,27)"/><text x="34.3577%" y="511.50">__..</text></g><g><title>update_rq_clock (1 samples, 0.11%)</title><rect x="36.6420%" y="485" width="0.1056%" height="15" fill="rgb(249,103,42)"/><text x="36.8920%" y="495.50"></text></g><g><title>update_irq_load_avg (1 samples, 0.11%)</title><rect x="36.6420%" y="469" width="0.1056%" height="15" fill="rgb(246,81,33)"/><text x="36.8920%" y="479.50"></text></g><g><title>preempt_count_add (1 samples, 0.11%)</title><rect x="36.7476%" y="501" width="0.1056%" height="15" fill="rgb(252,33,42)"/><text x="36.9976%" y="511.50"></text></g><g><title>sk_wait_data (34 samples, 3.59%)</title><rect x="33.3685%" y="565" width="3.5903%" height="15" fill="rgb(209,212,41)"/><text x="33.6185%" y="575.50">sk_w..</text></g><g><title>wait_woken (27 samples, 2.85%)</title><rect x="34.1077%" y="549" width="2.8511%" height="15" fill="rgb(207,154,6)"/><text x="34.3577%" y="559.50">wa..</text></g><g><title>schedule_timeout (27 samples, 2.85%)</title><rect x="34.1077%" y="533" width="2.8511%" height="15" fill="rgb(223,64,47)"/><text x="34.3577%" y="543.50">sc..</text></g><g><title>schedule (27 samples, 2.85%)</title><rect x="34.1077%" y="517" width="2.8511%" height="15" fill="rgb(211,161,38)"/><text x="34.3577%" y="527.50">sc..</text></g><g><title>preempt_count_sub (1 samples, 0.11%)</title><rect x="36.8532%" y="501" width="0.1056%" height="15" fill="rgb(219,138,40)"/><text x="37.1032%" y="511.50"></text></g><g><title>skb_copy_datagram_iter (7 samples, 0.74%)</title><rect x="36.9588%" y="565" width="0.7392%" height="15" fill="rgb(241,228,46)"/><text x="37.2088%" y="575.50"></text></g><g><title>__skb_datagram_iter (7 samples, 0.74%)</title><rect x="36.9588%" y="549" width="0.7392%" height="15" fill="rgb(223,209,38)"/><text x="37.2088%" y="559.50"></text></g><g><title>simple_copy_to_iter (3 samples, 0.32%)</title><rect x="37.3812%" y="533" width="0.3168%" height="15" fill="rgb(236,164,45)"/><text x="37.6312%" y="543.50"></text></g><g><title>__check_object_size (3 samples, 0.32%)</title><rect x="37.3812%" y="517" width="0.3168%" height="15" fill="rgb(231,15,5)"/><text x="37.6312%" y="527.50"></text></g><g><title>__virt_addr_valid (1 samples, 0.11%)</title><rect x="37.5924%" y="501" width="0.1056%" height="15" fill="rgb(252,35,15)"/><text x="37.8424%" y="511.50"></text></g><g><title>inet_recvmsg (50 samples, 5.28%)</title><rect x="32.5238%" y="597" width="5.2798%" height="15" fill="rgb(248,181,18)"/><text x="32.7738%" y="607.50">inet_r..</text></g><g><title>tcp_recvmsg (50 samples, 5.28%)</title><rect x="32.5238%" y="581" width="5.2798%" height="15" fill="rgb(233,39,42)"/><text x="32.7738%" y="591.50">tcp_re..</text></g><g><title>tcp_rcv_space_adjust (1 samples, 0.11%)</title><rect x="37.6980%" y="565" width="0.1056%" height="15" fill="rgb(238,110,33)"/><text x="37.9480%" y="575.50"></text></g><g><title>tcp_mstamp_refresh (1 samples, 0.11%)</title><rect x="37.6980%" y="549" width="0.1056%" height="15" fill="rgb(233,195,10)"/><text x="37.9480%" y="559.50"></text></g><g><title>ktime_get (1 samples, 0.11%)</title><rect x="37.6980%" y="533" width="0.1056%" height="15" fill="rgb(254,105,3)"/><text x="37.9480%" y="543.50"></text></g><g><title>__x64_sys_recvfrom (53 samples, 5.60%)</title><rect x="32.4182%" y="629" width="5.5966%" height="15" fill="rgb(221,225,9)"/><text x="32.6682%" y="639.50">__x64_s..</text></g><g><title>__sys_recvfrom (53 samples, 5.60%)</title><rect x="32.4182%" y="613" width="5.5966%" height="15" fill="rgb(224,227,45)"/><text x="32.6682%" y="623.50">__sys_r..</text></g><g><title>sock_recvmsg (2 samples, 0.21%)</title><rect x="37.8036%" y="597" width="0.2112%" height="15" fill="rgb(229,198,43)"/><text x="38.0536%" y="607.50"></text></g><g><title>security_socket_recvmsg (1 samples, 0.11%)</title><rect x="37.9092%" y="581" width="0.1056%" height="15" fill="rgb(206,209,35)"/><text x="38.1592%" y="591.50"></text></g><g><title>do_syscall_64 (55 samples, 5.81%)</title><rect x="32.3126%" y="645" width="5.8078%" height="15" fill="rgb(245,195,53)"/><text x="32.5626%" y="655.50">do_sysc..</text></g><g><title>syscall_slow_exit_work (1 samples, 0.11%)</title><rect x="38.0148%" y="629" width="0.1056%" height="15" fill="rgb(240,92,26)"/><text x="38.2648%" y="639.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.11%)</title><rect x="38.0148%" y="613" width="0.1056%" height="15" fill="rgb(207,40,23)"/><text x="38.2648%" y="623.50"></text></g><g><title>path_put (1 samples, 0.11%)</title><rect x="38.0148%" y="597" width="0.1056%" height="15" fill="rgb(223,111,35)"/><text x="38.2648%" y="607.50"></text></g><g><title>entry_SYSCALL_64 (64 samples, 6.76%)</title><rect x="32.1014%" y="661" width="6.7582%" height="15" fill="rgb(229,147,28)"/><text x="32.3514%" y="671.50">entry_SYS..</text></g><g><title>prepare_exit_to_usermode (7 samples, 0.74%)</title><rect x="38.1204%" y="645" width="0.7392%" height="15" fill="rgb(211,29,28)"/><text x="38.3704%" y="655.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (71 samples, 7.50%)</title><rect x="31.5734%" y="757" width="7.4974%" height="15" fill="rgb(228,72,33)"/><text x="31.8234%" y="767.50">&lt;std::io::..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (69 samples, 7.29%)</title><rect x="31.7846%" y="741" width="7.2862%" height="15" fill="rgb(205,214,31)"/><text x="32.0346%" y="751.50">&lt;std::net:..</text></g><g><title>std::sys_common::net::TcpStream::read (69 samples, 7.29%)</title><rect x="31.7846%" y="725" width="7.2862%" height="15" fill="rgb(224,111,15)"/><text x="32.0346%" y="735.50">std::sys_c..</text></g><g><title>std::sys::unix::net::Socket::read (69 samples, 7.29%)</title><rect x="31.7846%" y="709" width="7.2862%" height="15" fill="rgb(253,21,26)"/><text x="32.0346%" y="719.50">std::sys::..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (69 samples, 7.29%)</title><rect x="31.7846%" y="693" width="7.2862%" height="15" fill="rgb(245,139,43)"/><text x="32.0346%" y="703.50">std::sys::..</text></g><g><title>__libc_recv (69 samples, 7.29%)</title><rect x="31.7846%" y="677" width="7.2862%" height="15" fill="rgb(252,170,7)"/><text x="32.0346%" y="687.50">__libc_recv</text></g><g><title>syscall_return_via_sysret (2 samples, 0.21%)</title><rect x="38.8596%" y="661" width="0.2112%" height="15" fill="rgb(231,118,14)"/><text x="39.1096%" y="671.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (75 samples, 7.92%)</title><rect x="31.2566%" y="773" width="7.9197%" height="15" fill="rgb(238,83,0)"/><text x="31.5066%" y="783.50">&lt;mysql_comm..</text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (1 samples, 0.11%)</title><rect x="39.0707%" y="757" width="0.1056%" height="15" fill="rgb(221,39,39)"/><text x="39.3207%" y="767.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (1 samples, 0.11%)</title><rect x="39.0707%" y="741" width="0.1056%" height="15" fill="rgb(222,119,46)"/><text x="39.3207%" y="751.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.11%)</title><rect x="39.0707%" y="725" width="0.1056%" height="15" fill="rgb(222,165,49)"/><text x="39.3207%" y="735.50"></text></g><g><title>mysql::conn::Conn::read_packet (76 samples, 8.03%)</title><rect x="31.2566%" y="789" width="8.0253%" height="15" fill="rgb(219,113,52)"/><text x="31.5066%" y="799.50">mysql::conn..</text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="39.1763%" y="773" width="0.1056%" height="15" fill="rgb(214,7,15)"/><text x="39.4263%" y="783.50"></text></g><g><title>apic_timer_interrupt (1 samples, 0.11%)</title><rect x="39.1763%" y="757" width="0.1056%" height="15" fill="rgb(235,32,4)"/><text x="39.4263%" y="767.50"></text></g><g><title>smp_apic_timer_interrupt (1 samples, 0.11%)</title><rect x="39.1763%" y="741" width="0.1056%" height="15" fill="rgb(238,90,54)"/><text x="39.4263%" y="751.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.11%)</title><rect x="39.1763%" y="725" width="0.1056%" height="15" fill="rgb(213,208,19)"/><text x="39.4263%" y="735.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.11%)</title><rect x="39.1763%" y="709" width="0.1056%" height="15" fill="rgb(233,156,4)"/><text x="39.4263%" y="719.50"></text></g><g><title>tick_sched_timer (1 samples, 0.11%)</title><rect x="39.1763%" y="693" width="0.1056%" height="15" fill="rgb(207,194,5)"/><text x="39.4263%" y="703.50"></text></g><g><title>tick_sched_handle (1 samples, 0.11%)</title><rect x="39.1763%" y="677" width="0.1056%" height="15" fill="rgb(206,111,30)"/><text x="39.4263%" y="687.50"></text></g><g><title>update_process_times (1 samples, 0.11%)</title><rect x="39.1763%" y="661" width="0.1056%" height="15" fill="rgb(243,70,54)"/><text x="39.4263%" y="671.50"></text></g><g><title>scheduler_tick (1 samples, 0.11%)</title><rect x="39.1763%" y="645" width="0.1056%" height="15" fill="rgb(242,28,8)"/><text x="39.4263%" y="655.50"></text></g><g><title>arch_scale_freq_tick (1 samples, 0.11%)</title><rect x="39.1763%" y="629" width="0.1056%" height="15" fill="rgb(219,106,18)"/><text x="39.4263%" y="639.50"></text></g><g><title>native_read_msr (1 samples, 0.11%)</title><rect x="39.1763%" y="613" width="0.1056%" height="15" fill="rgb(244,222,10)"/><text x="39.4263%" y="623.50"></text></g><g><title>lobsters::main (82 samples, 8.66%)</title><rect x="30.9398%" y="853" width="8.6589%" height="15" fill="rgb(236,179,52)"/><text x="31.1898%" y="863.50">lobsters::ma..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (81 samples, 8.55%)</title><rect x="31.0454%" y="837" width="8.5533%" height="15" fill="rgb(213,23,39)"/><text x="31.2954%" y="847.50">mysql::conn:..</text></g><g><title>mysql::conn::Conn::_query (81 samples, 8.55%)</title><rect x="31.0454%" y="821" width="8.5533%" height="15" fill="rgb(238,48,10)"/><text x="31.2954%" y="831.50">mysql::conn:..</text></g><g><title>mysql::conn::Conn::handle_result_set (81 samples, 8.55%)</title><rect x="31.0454%" y="805" width="8.5533%" height="15" fill="rgb(251,196,23)"/><text x="31.2954%" y="815.50">mysql::conn:..</text></g><g><title>mysql_common::packets::parse_ok_packet (3 samples, 0.32%)</title><rect x="39.2819%" y="789" width="0.3168%" height="15" fill="rgb(250,152,24)"/><text x="39.5319%" y="799.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.11%)</title><rect x="39.5987%" y="757" width="0.1056%" height="15" fill="rgb(209,150,17)"/><text x="39.8487%" y="767.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.11%)</title><rect x="39.5987%" y="741" width="0.1056%" height="15" fill="rgb(234,202,34)"/><text x="39.8487%" y="751.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="39.5987%" y="725" width="0.1056%" height="15" fill="rgb(253,148,53)"/><text x="39.8487%" y="735.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.11%)</title><rect x="39.5987%" y="709" width="0.1056%" height="15" fill="rgb(218,129,16)"/><text x="39.8487%" y="719.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.11%)</title><rect x="39.5987%" y="693" width="0.1056%" height="15" fill="rgb(216,85,19)"/><text x="39.8487%" y="703.50"></text></g><g><title>std::sys_common::net::TcpStream::read (1 samples, 0.11%)</title><rect x="39.5987%" y="677" width="0.1056%" height="15" fill="rgb(235,228,7)"/><text x="39.8487%" y="687.50"></text></g><g><title>std::sys::unix::net::Socket::read (1 samples, 0.11%)</title><rect x="39.5987%" y="661" width="0.1056%" height="15" fill="rgb(245,175,0)"/><text x="39.8487%" y="671.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (1 samples, 0.11%)</title><rect x="39.5987%" y="645" width="0.1056%" height="15" fill="rgb(208,168,36)"/><text x="39.8487%" y="655.50"></text></g><g><title>__libc_recv (1 samples, 0.11%)</title><rect x="39.5987%" y="629" width="0.1056%" height="15" fill="rgb(246,171,24)"/><text x="39.8487%" y="639.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="39.5987%" y="613" width="0.1056%" height="15" fill="rgb(215,142,24)"/><text x="39.8487%" y="623.50"></text></g><g><title>do_syscall_64 (1 samples, 0.11%)</title><rect x="39.5987%" y="597" width="0.1056%" height="15" fill="rgb(250,187,7)"/><text x="39.8487%" y="607.50"></text></g><g><title>__x64_sys_recvfrom (1 samples, 0.11%)</title><rect x="39.5987%" y="581" width="0.1056%" height="15" fill="rgb(228,66,33)"/><text x="39.8487%" y="591.50"></text></g><g><title>__sys_recvfrom (1 samples, 0.11%)</title><rect x="39.5987%" y="565" width="0.1056%" height="15" fill="rgb(234,215,21)"/><text x="39.8487%" y="575.50"></text></g><g><title>fput_many (1 samples, 0.11%)</title><rect x="39.5987%" y="549" width="0.1056%" height="15" fill="rgb(222,191,20)"/><text x="39.8487%" y="559.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query_drop (2 samples, 0.21%)</title><rect x="39.5987%" y="805" width="0.2112%" height="15" fill="rgb(245,79,54)"/><text x="39.8487%" y="815.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (2 samples, 0.21%)</title><rect x="39.5987%" y="789" width="0.2112%" height="15" fill="rgb(240,10,37)"/><text x="39.8487%" y="799.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.21%)</title><rect x="39.5987%" y="773" width="0.2112%" height="15" fill="rgb(214,192,32)"/><text x="39.8487%" y="783.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.11%)</title><rect x="39.7043%" y="757" width="0.1056%" height="15" fill="rgb(209,36,54)"/><text x="39.9543%" y="767.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.11%)</title><rect x="39.7043%" y="741" width="0.1056%" height="15" fill="rgb(220,10,11)"/><text x="39.9543%" y="751.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.11%)</title><rect x="39.7043%" y="725" width="0.1056%" height="15" fill="rgb(221,106,17)"/><text x="39.9543%" y="735.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1 samples, 0.11%)</title><rect x="39.7043%" y="709" width="0.1056%" height="15" fill="rgb(251,142,44)"/><text x="39.9543%" y="719.50"></text></g><g><title>__libc_send (1 samples, 0.11%)</title><rect x="39.7043%" y="693" width="0.1056%" height="15" fill="rgb(238,13,15)"/><text x="39.9543%" y="703.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="39.7043%" y="677" width="0.1056%" height="15" fill="rgb(208,107,27)"/><text x="39.9543%" y="687.50"></text></g><g><title>do_syscall_64 (1 samples, 0.11%)</title><rect x="39.7043%" y="661" width="0.1056%" height="15" fill="rgb(205,136,37)"/><text x="39.9543%" y="671.50"></text></g><g><title>__x64_sys_sendto (1 samples, 0.11%)</title><rect x="39.7043%" y="645" width="0.1056%" height="15" fill="rgb(250,205,27)"/><text x="39.9543%" y="655.50"></text></g><g><title>__sys_sendto (1 samples, 0.11%)</title><rect x="39.7043%" y="629" width="0.1056%" height="15" fill="rgb(210,80,43)"/><text x="39.9543%" y="639.50"></text></g><g><title>sock_sendmsg (1 samples, 0.11%)</title><rect x="39.7043%" y="613" width="0.1056%" height="15" fill="rgb(247,160,36)"/><text x="39.9543%" y="623.50"></text></g><g><title>tcp_sendmsg (1 samples, 0.11%)</title><rect x="39.7043%" y="597" width="0.1056%" height="15" fill="rgb(234,13,49)"/><text x="39.9543%" y="607.50"></text></g><g><title>tcp_sendmsg_locked (1 samples, 0.11%)</title><rect x="39.7043%" y="581" width="0.1056%" height="15" fill="rgb(234,122,0)"/><text x="39.9543%" y="591.50"></text></g><g><title>__tcp_push_pending_frames (1 samples, 0.11%)</title><rect x="39.7043%" y="565" width="0.1056%" height="15" fill="rgb(207,146,38)"/><text x="39.9543%" y="575.50"></text></g><g><title>tcp_write_xmit (1 samples, 0.11%)</title><rect x="39.7043%" y="549" width="0.1056%" height="15" fill="rgb(207,177,25)"/><text x="39.9543%" y="559.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.11%)</title><rect x="39.7043%" y="533" width="0.1056%" height="15" fill="rgb(211,178,42)"/><text x="39.9543%" y="543.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.11%)</title><rect x="39.7043%" y="517" width="0.1056%" height="15" fill="rgb(230,69,54)"/><text x="39.9543%" y="527.50"></text></g><g><title>ip_output (1 samples, 0.11%)</title><rect x="39.7043%" y="501" width="0.1056%" height="15" fill="rgb(214,135,41)"/><text x="39.9543%" y="511.50"></text></g><g><title>ip_finish_output2 (1 samples, 0.11%)</title><rect x="39.7043%" y="485" width="0.1056%" height="15" fill="rgb(237,67,25)"/><text x="39.9543%" y="495.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.11%)</title><rect x="39.7043%" y="469" width="0.1056%" height="15" fill="rgb(222,189,50)"/><text x="39.9543%" y="479.50"></text></g><g><title>do_softirq (1 samples, 0.11%)</title><rect x="39.7043%" y="453" width="0.1056%" height="15" fill="rgb(245,148,34)"/><text x="39.9543%" y="463.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.11%)</title><rect x="39.7043%" y="437" width="0.1056%" height="15" fill="rgb(222,29,6)"/><text x="39.9543%" y="447.50"></text></g><g><title>__do_softirq (1 samples, 0.11%)</title><rect x="39.7043%" y="421" width="0.1056%" height="15" fill="rgb(221,189,43)"/><text x="39.9543%" y="431.50"></text></g><g><title>net_rx_action (1 samples, 0.11%)</title><rect x="39.7043%" y="405" width="0.1056%" height="15" fill="rgb(207,36,27)"/><text x="39.9543%" y="415.50"></text></g><g><title>process_backlog (1 samples, 0.11%)</title><rect x="39.7043%" y="389" width="0.1056%" height="15" fill="rgb(217,90,24)"/><text x="39.9543%" y="399.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (3 samples, 0.32%)</title><rect x="39.5987%" y="837" width="0.3168%" height="15" fill="rgb(224,66,35)"/><text x="39.8487%" y="847.50"></text></g><g><title>decor::Shim::create_schema (3 samples, 0.32%)</title><rect x="39.5987%" y="821" width="0.3168%" height="15" fill="rgb(221,13,50)"/><text x="39.8487%" y="831.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (1 samples, 0.11%)</title><rect x="39.8099%" y="805" width="0.1056%" height="15" fill="rgb(236,68,49)"/><text x="40.0599%" y="815.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.11%)</title><rect x="39.8099%" y="789" width="0.1056%" height="15" fill="rgb(229,146,28)"/><text x="40.0599%" y="799.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="39.8099%" y="773" width="0.1056%" height="15" fill="rgb(225,31,38)"/><text x="40.0599%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (2 samples, 0.21%)</title><rect x="39.9155%" y="805" width="0.2112%" height="15" fill="rgb(250,208,3)"/><text x="40.1655%" y="815.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.21%)</title><rect x="39.9155%" y="789" width="0.2112%" height="15" fill="rgb(246,54,23)"/><text x="40.1655%" y="799.50"></text></g><g><title>_int_malloc (2 samples, 0.21%)</title><rect x="39.9155%" y="773" width="0.2112%" height="15" fill="rgb(243,76,11)"/><text x="40.1655%" y="783.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.11%)</title><rect x="40.0211%" y="757" width="0.1056%" height="15" fill="rgb(245,21,50)"/><text x="40.2711%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="40.1267%" y="789" width="0.1056%" height="15" fill="rgb(228,9,43)"/><text x="40.3767%" y="799.50"></text></g><g><title>malloc_consolidate (1 samples, 0.11%)</title><rect x="40.4435%" y="741" width="0.1056%" height="15" fill="rgb(208,100,47)"/><text x="40.6935%" y="751.50"></text></g><g><title>__x64_sys_mprotect (1 samples, 0.11%)</title><rect x="40.5491%" y="677" width="0.1056%" height="15" fill="rgb(232,26,8)"/><text x="40.7991%" y="687.50"></text></g><g><title>do_mprotect_pkey (1 samples, 0.11%)</title><rect x="40.5491%" y="661" width="0.1056%" height="15" fill="rgb(216,166,38)"/><text x="40.7991%" y="671.50"></text></g><g><title>mprotect_fixup (1 samples, 0.11%)</title><rect x="40.5491%" y="645" width="0.1056%" height="15" fill="rgb(251,202,51)"/><text x="40.7991%" y="655.50"></text></g><g><title>perf_event_mmap (1 samples, 0.11%)</title><rect x="40.5491%" y="629" width="0.1056%" height="15" fill="rgb(254,216,34)"/><text x="40.7991%" y="639.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.11%)</title><rect x="40.5491%" y="613" width="0.1056%" height="15" fill="rgb(251,32,27)"/><text x="40.7991%" y="623.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.11%)</title><rect x="40.5491%" y="597" width="0.1056%" height="15" fill="rgb(208,127,28)"/><text x="40.7991%" y="607.50"></text></g><g><title>perf_event_mmap_output (1 samples, 0.11%)</title><rect x="40.5491%" y="581" width="0.1056%" height="15" fill="rgb(224,137,22)"/><text x="40.7991%" y="591.50"></text></g><g><title>perf_output_copy (1 samples, 0.11%)</title><rect x="40.5491%" y="565" width="0.1056%" height="15" fill="rgb(254,70,32)"/><text x="40.7991%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.21%)</title><rect x="40.5491%" y="709" width="0.2112%" height="15" fill="rgb(229,75,37)"/><text x="40.7991%" y="719.50"></text></g><g><title>do_syscall_64 (2 samples, 0.21%)</title><rect x="40.5491%" y="693" width="0.2112%" height="15" fill="rgb(252,64,23)"/><text x="40.7991%" y="703.50"></text></g><g><title>syscall_slow_exit_work (1 samples, 0.11%)</title><rect x="40.6547%" y="677" width="0.1056%" height="15" fill="rgb(232,162,48)"/><text x="40.9047%" y="687.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.11%)</title><rect x="40.6547%" y="661" width="0.1056%" height="15" fill="rgb(246,160,12)"/><text x="40.9047%" y="671.50"></text></g><g><title>__GI___mprotect (3 samples, 0.32%)</title><rect x="40.5491%" y="725" width="0.3168%" height="15" fill="rgb(247,166,0)"/><text x="40.7991%" y="735.50"></text></g><g><title>syscall_return_via_sysret (1 samples, 0.11%)</title><rect x="40.7603%" y="709" width="0.1056%" height="15" fill="rgb(249,219,21)"/><text x="41.0103%" y="719.50"></text></g><g><title>sysmalloc (4 samples, 0.42%)</title><rect x="40.5491%" y="741" width="0.4224%" height="15" fill="rgb(205,209,3)"/><text x="40.7991%" y="751.50"></text></g><g><title>page_fault (1 samples, 0.11%)</title><rect x="40.8659%" y="725" width="0.1056%" height="15" fill="rgb(243,44,1)"/><text x="41.1159%" y="735.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.11%)</title><rect x="40.8659%" y="709" width="0.1056%" height="15" fill="rgb(206,159,16)"/><text x="41.1159%" y="719.50"></text></g><g><title>handle_mm_fault (1 samples, 0.11%)</title><rect x="40.8659%" y="693" width="0.1056%" height="15" fill="rgb(244,77,30)"/><text x="41.1159%" y="703.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.11%)</title><rect x="40.8659%" y="677" width="0.1056%" height="15" fill="rgb(218,69,12)"/><text x="41.1159%" y="687.50"></text></g><g><title>mem_cgroup_try_charge_delay (1 samples, 0.11%)</title><rect x="40.8659%" y="661" width="0.1056%" height="15" fill="rgb(212,87,7)"/><text x="41.1159%" y="671.50"></text></g><g><title>mem_cgroup_try_charge (1 samples, 0.11%)</title><rect x="40.8659%" y="645" width="0.1056%" height="15" fill="rgb(245,114,25)"/><text x="41.1159%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.84%)</title><rect x="40.2323%" y="789" width="0.8448%" height="15" fill="rgb(210,61,42)"/><text x="40.4823%" y="799.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.84%)</title><rect x="40.2323%" y="773" width="0.8448%" height="15" fill="rgb(211,52,33)"/><text x="40.4823%" y="783.50"></text></g><g><title>_int_malloc (7 samples, 0.74%)</title><rect x="40.3379%" y="757" width="0.7392%" height="15" fill="rgb(234,58,33)"/><text x="40.5879%" y="767.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.11%)</title><rect x="40.9715%" y="741" width="0.1056%" height="15" fill="rgb(220,115,36)"/><text x="41.2215%" y="751.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.21%)</title><rect x="41.0771%" y="789" width="0.2112%" height="15" fill="rgb(243,153,54)"/><text x="41.3271%" y="799.50"></text></g><g><title>__GI___libc_free (1 samples, 0.11%)</title><rect x="41.1827%" y="773" width="0.1056%" height="15" fill="rgb(251,47,18)"/><text x="41.4327%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.21%)</title><rect x="41.4995%" y="725" width="0.2112%" height="15" fill="rgb(242,102,42)"/><text x="41.7495%" y="735.50"></text></g><g><title>page_fault (1 samples, 0.11%)</title><rect x="41.6051%" y="709" width="0.1056%" height="15" fill="rgb(234,31,38)"/><text x="41.8551%" y="719.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.11%)</title><rect x="41.6051%" y="693" width="0.1056%" height="15" fill="rgb(221,117,51)"/><text x="41.8551%" y="703.50"></text></g><g><title>handle_mm_fault (1 samples, 0.11%)</title><rect x="41.6051%" y="677" width="0.1056%" height="15" fill="rgb(212,20,18)"/><text x="41.8551%" y="687.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.11%)</title><rect x="41.6051%" y="661" width="0.1056%" height="15" fill="rgb(245,133,36)"/><text x="41.8551%" y="671.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.11%)</title><rect x="41.6051%" y="645" width="0.1056%" height="15" fill="rgb(212,6,19)"/><text x="41.8551%" y="655.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.11%)</title><rect x="41.6051%" y="629" width="0.1056%" height="15" fill="rgb(218,1,36)"/><text x="41.8551%" y="639.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.11%)</title><rect x="41.6051%" y="613" width="0.1056%" height="15" fill="rgb(246,84,54)"/><text x="41.8551%" y="623.50"></text></g><g><title>prep_new_page (1 samples, 0.11%)</title><rect x="41.6051%" y="597" width="0.1056%" height="15" fill="rgb(242,110,6)"/><text x="41.8551%" y="607.50"></text></g><g><title>kernel_init_free_pages (1 samples, 0.11%)</title><rect x="41.6051%" y="581" width="0.1056%" height="15" fill="rgb(214,47,5)"/><text x="41.8551%" y="591.50"></text></g><g><title>clear_page_erms (1 samples, 0.11%)</title><rect x="41.6051%" y="565" width="0.1056%" height="15" fill="rgb(218,159,25)"/><text x="41.8551%" y="575.50"></text></g><g><title>_int_free (2 samples, 0.21%)</title><rect x="41.7107%" y="725" width="0.2112%" height="15" fill="rgb(215,211,28)"/><text x="41.9607%" y="735.50"></text></g><g><title>malloc_consolidate (2 samples, 0.21%)</title><rect x="41.7107%" y="709" width="0.2112%" height="15" fill="rgb(238,59,32)"/><text x="41.9607%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.53%)</title><rect x="41.4995%" y="773" width="0.5280%" height="15" fill="rgb(226,82,3)"/><text x="41.7495%" y="783.50"></text></g><g><title>__GI___libc_realloc (5 samples, 0.53%)</title><rect x="41.4995%" y="757" width="0.5280%" height="15" fill="rgb(240,164,32)"/><text x="41.7495%" y="767.50"></text></g><g><title>_int_realloc (5 samples, 0.53%)</title><rect x="41.4995%" y="741" width="0.5280%" height="15" fill="rgb(232,46,7)"/><text x="41.7495%" y="751.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="41.9219%" y="725" width="0.1056%" height="15" fill="rgb(229,129,53)"/><text x="42.1719%" y="735.50"></text></g><g><title>page_fault (1 samples, 0.11%)</title><rect x="41.9219%" y="709" width="0.1056%" height="15" fill="rgb(234,188,29)"/><text x="42.1719%" y="719.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.11%)</title><rect x="41.9219%" y="693" width="0.1056%" height="15" fill="rgb(246,141,4)"/><text x="42.1719%" y="703.50"></text></g><g><title>handle_mm_fault (1 samples, 0.11%)</title><rect x="41.9219%" y="677" width="0.1056%" height="15" fill="rgb(229,23,39)"/><text x="42.1719%" y="687.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.11%)</title><rect x="41.9219%" y="661" width="0.1056%" height="15" fill="rgb(206,12,3)"/><text x="42.1719%" y="671.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.11%)</title><rect x="41.9219%" y="645" width="0.1056%" height="15" fill="rgb(252,226,20)"/><text x="42.1719%" y="655.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.11%)</title><rect x="41.9219%" y="629" width="0.1056%" height="15" fill="rgb(216,123,35)"/><text x="42.1719%" y="639.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.11%)</title><rect x="41.9219%" y="613" width="0.1056%" height="15" fill="rgb(212,68,40)"/><text x="42.1719%" y="623.50"></text></g><g><title>sql_parser::tokenizer::PeekableChars::next (1 samples, 0.11%)</title><rect x="42.4498%" y="757" width="0.1056%" height="15" fill="rgb(254,125,32)"/><text x="42.6998%" y="767.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_string (1 samples, 0.11%)</title><rect x="42.5554%" y="757" width="0.1056%" height="15" fill="rgb(253,97,22)"/><text x="42.8054%" y="767.50"></text></g><g><title>sql_parser::tokenizer::PeekableChars::next (1 samples, 0.11%)</title><rect x="42.5554%" y="741" width="0.1056%" height="15" fill="rgb(241,101,14)"/><text x="42.8054%" y="751.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (9 samples, 0.95%)</title><rect x="42.0275%" y="773" width="0.9504%" height="15" fill="rgb(238,103,29)"/><text x="42.2775%" y="783.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_word (3 samples, 0.32%)</title><rect x="42.6610%" y="757" width="0.3168%" height="15" fill="rgb(233,195,47)"/><text x="42.9110%" y="767.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="42.8722%" y="741" width="0.1056%" height="15" fill="rgb(246,218,30)"/><text x="43.1222%" y="751.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_number (2 samples, 0.21%)</title><rect x="42.9778%" y="773" width="0.2112%" height="15" fill="rgb(219,145,47)"/><text x="43.2278%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.21%)</title><rect x="42.9778%" y="757" width="0.2112%" height="15" fill="rgb(243,12,26)"/><text x="43.2278%" y="767.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.21%)</title><rect x="42.9778%" y="741" width="0.2112%" height="15" fill="rgb(214,87,16)"/><text x="43.2278%" y="751.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (35 samples, 3.70%)</title><rect x="39.5987%" y="853" width="3.6959%" height="15" fill="rgb(208,99,42)"/><text x="39.8487%" y="863.50">msql..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (32 samples, 3.38%)</title><rect x="39.9155%" y="837" width="3.3791%" height="15" fill="rgb(253,99,2)"/><text x="40.1655%" y="847.50">&lt;de..</text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (32 samples, 3.38%)</title><rect x="39.9155%" y="821" width="3.3791%" height="15" fill="rgb(220,168,23)"/><text x="40.1655%" y="831.50">dec..</text></g><g><title>sql_parser::parser::parse_statements (30 samples, 3.17%)</title><rect x="40.1267%" y="805" width="3.1679%" height="15" fill="rgb(242,38,24)"/><text x="40.3767%" y="815.50">sql..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (19 samples, 2.01%)</title><rect x="41.2883%" y="789" width="2.0063%" height="15" fill="rgb(225,182,9)"/><text x="41.5383%" y="799.50">s..</text></g><g><title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.11%)</title><rect x="43.1890%" y="773" width="0.1056%" height="15" fill="rgb(243,178,37)"/><text x="43.4390%" y="783.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.11%)</title><rect x="43.1890%" y="757" width="0.1056%" height="15" fill="rgb(232,139,19)"/><text x="43.4390%" y="767.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.11%)</title><rect x="43.2946%" y="853" width="0.1056%" height="15" fill="rgb(225,201,24)"/><text x="43.5446%" y="863.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.11%)</title><rect x="43.4002%" y="853" width="0.1056%" height="15" fill="rgb(221,47,46)"/><text x="43.6502%" y="863.50"></text></g><g><title>regex::exec::ExecBuilder::build (1 samples, 0.11%)</title><rect x="43.5058%" y="853" width="0.1056%" height="15" fill="rgb(249,23,13)"/><text x="43.7558%" y="863.50"></text></g><g><title>regex::compile::Compiler::compile (1 samples, 0.11%)</title><rect x="43.5058%" y="837" width="0.1056%" height="15" fill="rgb(219,9,5)"/><text x="43.7558%" y="847.50"></text></g><g><title>regex::compile::Compiler::compile_finish (1 samples, 0.11%)</title><rect x="43.5058%" y="821" width="0.1056%" height="15" fill="rgb(254,171,16)"/><text x="43.7558%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.11%)</title><rect x="43.5058%" y="805" width="0.1056%" height="15" fill="rgb(230,171,20)"/><text x="43.7558%" y="815.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.11%)</title><rect x="43.5058%" y="789" width="0.1056%" height="15" fill="rgb(210,71,41)"/><text x="43.7558%" y="799.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="43.9282%" y="773" width="0.1056%" height="15" fill="rgb(206,173,20)"/><text x="44.1782%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="43.9282%" y="757" width="0.1056%" height="15" fill="rgb(233,88,34)"/><text x="44.1782%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="43.9282%" y="741" width="0.1056%" height="15" fill="rgb(223,209,46)"/><text x="44.1782%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.11%)</title><rect x="43.9282%" y="725" width="0.1056%" height="15" fill="rgb(250,43,18)"/><text x="44.1782%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.11%)</title><rect x="43.9282%" y="709" width="0.1056%" height="15" fill="rgb(208,13,10)"/><text x="44.1782%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="43.9282%" y="693" width="0.1056%" height="15" fill="rgb(212,200,36)"/><text x="44.1782%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="43.9282%" y="677" width="0.1056%" height="15" fill="rgb(225,90,30)"/><text x="44.1782%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="43.9282%" y="661" width="0.1056%" height="15" fill="rgb(236,182,39)"/><text x="44.1782%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.11%)</title><rect x="43.9282%" y="645" width="0.1056%" height="15" fill="rgb(212,144,35)"/><text x="44.1782%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.11%)</title><rect x="43.9282%" y="629" width="0.1056%" height="15" fill="rgb(228,63,44)"/><text x="44.1782%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="43.9282%" y="613" width="0.1056%" height="15" fill="rgb(228,109,6)"/><text x="44.1782%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="43.9282%" y="597" width="0.1056%" height="15" fill="rgb(238,117,24)"/><text x="44.1782%" y="607.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="43.9282%" y="581" width="0.1056%" height="15" fill="rgb(242,26,26)"/><text x="44.1782%" y="591.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="43.9282%" y="565" width="0.1056%" height="15" fill="rgb(221,92,48)"/><text x="44.1782%" y="575.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.11%)</title><rect x="43.9282%" y="549" width="0.1056%" height="15" fill="rgb(209,209,32)"/><text x="44.1782%" y="559.50"></text></g><g><title>__GI___libc_free (1 samples, 0.11%)</title><rect x="44.0338%" y="773" width="0.1056%" height="15" fill="rgb(221,70,22)"/><text x="44.2838%" y="783.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="44.1394%" y="773" width="0.1056%" height="15" fill="rgb(248,145,5)"/><text x="44.3894%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (13 samples, 1.37%)</title><rect x="44.3506%" y="741" width="1.3728%" height="15" fill="rgb(226,116,26)"/><text x="44.6006%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (13 samples, 1.37%)</title><rect x="44.3506%" y="725" width="1.3728%" height="15" fill="rgb(244,5,17)"/><text x="44.6006%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (13 samples, 1.37%)</title><rect x="44.3506%" y="709" width="1.3728%" height="15" fill="rgb(252,159,33)"/><text x="44.6006%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (13 samples, 1.37%)</title><rect x="44.3506%" y="693" width="1.3728%" height="15" fill="rgb(206,71,0)"/><text x="44.6006%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (13 samples, 1.37%)</title><rect x="44.3506%" y="677" width="1.3728%" height="15" fill="rgb(233,118,54)"/><text x="44.6006%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (13 samples, 1.37%)</title><rect x="44.3506%" y="661" width="1.3728%" height="15" fill="rgb(234,83,48)"/><text x="44.6006%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (13 samples, 1.37%)</title><rect x="44.3506%" y="645" width="1.3728%" height="15" fill="rgb(228,3,54)"/><text x="44.6006%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 1.37%)</title><rect x="44.3506%" y="629" width="1.3728%" height="15" fill="rgb(226,155,13)"/><text x="44.6006%" y="639.50"></text></g><g><title>__memmove_avx_unaligned_erms (13 samples, 1.37%)</title><rect x="44.3506%" y="613" width="1.3728%" height="15" fill="rgb(241,28,37)"/><text x="44.6006%" y="623.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (15 samples, 1.58%)</title><rect x="44.2450%" y="773" width="1.5839%" height="15" fill="rgb(233,93,10)"/><text x="44.4950%" y="783.50"></text></g><g><title>sql_parser::parser::Parser::expected (15 samples, 1.58%)</title><rect x="44.2450%" y="757" width="1.5839%" height="15" fill="rgb(225,113,19)"/><text x="44.4950%" y="767.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.11%)</title><rect x="45.7233%" y="741" width="0.1056%" height="15" fill="rgb(241,2,18)"/><text x="45.9733%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.11%)</title><rect x="45.7233%" y="725" width="0.1056%" height="15" fill="rgb(228,207,21)"/><text x="45.9733%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (2 samples, 0.21%)</title><rect x="45.8289%" y="773" width="0.2112%" height="15" fill="rgb(213,211,35)"/><text x="46.0789%" y="783.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.11%)</title><rect x="45.9345%" y="757" width="0.1056%" height="15" fill="rgb(209,83,10)"/><text x="46.1845%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.11%)</title><rect x="46.0401%" y="693" width="0.1056%" height="15" fill="rgb(209,164,1)"/><text x="46.2901%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.11%)</title><rect x="46.0401%" y="677" width="0.1056%" height="15" fill="rgb(213,184,43)"/><text x="46.2901%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.11%)</title><rect x="46.0401%" y="661" width="0.1056%" height="15" fill="rgb(231,61,34)"/><text x="46.2901%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.11%)</title><rect x="46.0401%" y="645" width="0.1056%" height="15" fill="rgb(235,75,3)"/><text x="46.2901%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="46.0401%" y="629" width="0.1056%" height="15" fill="rgb(220,106,47)"/><text x="46.2901%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.32%)</title><rect x="46.0401%" y="757" width="0.3168%" height="15" fill="rgb(210,196,33)"/><text x="46.2901%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.32%)</title><rect x="46.0401%" y="741" width="0.3168%" height="15" fill="rgb(229,154,42)"/><text x="46.2901%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.32%)</title><rect x="46.0401%" y="725" width="0.3168%" height="15" fill="rgb(228,114,26)"/><text x="46.2901%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.32%)</title><rect x="46.0401%" y="709" width="0.3168%" height="15" fill="rgb(208,144,1)"/><text x="46.2901%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.21%)</title><rect x="46.1457%" y="693" width="0.2112%" height="15" fill="rgb(239,112,37)"/><text x="46.3957%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.21%)</title><rect x="46.1457%" y="677" width="0.2112%" height="15" fill="rgb(210,96,50)"/><text x="46.3957%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.21%)</title><rect x="46.1457%" y="661" width="0.2112%" height="15" fill="rgb(222,178,2)"/><text x="46.3957%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.21%)</title><rect x="46.1457%" y="645" width="0.2112%" height="15" fill="rgb(226,74,18)"/><text x="46.3957%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.21%)</title><rect x="46.1457%" y="629" width="0.2112%" height="15" fill="rgb(225,67,54)"/><text x="46.3957%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.21%)</title><rect x="46.1457%" y="613" width="0.2112%" height="15" fill="rgb(251,92,32)"/><text x="46.3957%" y="623.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.21%)</title><rect x="46.1457%" y="597" width="0.2112%" height="15" fill="rgb(228,149,22)"/><text x="46.3957%" y="607.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.21%)</title><rect x="46.1457%" y="581" width="0.2112%" height="15" fill="rgb(243,54,13)"/><text x="46.3957%" y="591.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="46.3569%" y="757" width="0.1056%" height="15" fill="rgb(243,180,28)"/><text x="46.6069%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="46.3569%" y="741" width="0.1056%" height="15" fill="rgb(208,167,24)"/><text x="46.6069%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="46.3569%" y="725" width="0.1056%" height="15" fill="rgb(245,73,45)"/><text x="46.6069%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.11%)</title><rect x="46.3569%" y="709" width="0.1056%" height="15" fill="rgb(237,203,48)"/><text x="46.6069%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.11%)</title><rect x="46.3569%" y="693" width="0.1056%" height="15" fill="rgb(211,197,16)"/><text x="46.6069%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="46.3569%" y="677" width="0.1056%" height="15" fill="rgb(243,99,51)"/><text x="46.6069%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="46.3569%" y="661" width="0.1056%" height="15" fill="rgb(215,123,29)"/><text x="46.6069%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="46.3569%" y="645" width="0.1056%" height="15" fill="rgb(239,186,37)"/><text x="46.6069%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.11%)</title><rect x="46.3569%" y="629" width="0.1056%" height="15" fill="rgb(252,136,39)"/><text x="46.6069%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.11%)</title><rect x="46.3569%" y="613" width="0.1056%" height="15" fill="rgb(223,213,32)"/><text x="46.6069%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="46.3569%" y="597" width="0.1056%" height="15" fill="rgb(233,115,5)"/><text x="46.6069%" y="607.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="46.3569%" y="581" width="0.1056%" height="15" fill="rgb(207,226,44)"/><text x="46.6069%" y="591.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="46.3569%" y="565" width="0.1056%" height="15" fill="rgb(208,126,0)"/><text x="46.6069%" y="575.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="46.3569%" y="549" width="0.1056%" height="15" fill="rgb(244,66,21)"/><text x="46.6069%" y="559.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (28 samples, 2.96%)</title><rect x="43.6114%" y="853" width="2.9567%" height="15" fill="rgb(222,97,12)"/><text x="43.8614%" y="863.50">sql..</text></g><g><title>sql_parser::parser::Parser::parse_query_body (27 samples, 2.85%)</title><rect x="43.7170%" y="837" width="2.8511%" height="15" fill="rgb(219,213,19)"/><text x="43.9670%" y="847.50">sq..</text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (27 samples, 2.85%)</title><rect x="43.7170%" y="821" width="2.8511%" height="15" fill="rgb(252,169,30)"/><text x="43.9670%" y="831.50">sq..</text></g><g><title>sql_parser::parser::Parser::check_descent (27 samples, 2.85%)</title><rect x="43.7170%" y="805" width="2.8511%" height="15" fill="rgb(206,32,51)"/><text x="43.9670%" y="815.50">sq..</text></g><g><title>sql_parser::parser::Parser::parse_prefix (27 samples, 2.85%)</title><rect x="43.7170%" y="789" width="2.8511%" height="15" fill="rgb(250,172,42)"/><text x="43.9670%" y="799.50">sq..</text></g><g><title>sql_parser::parser::Parser::parse_value (5 samples, 0.53%)</title><rect x="46.0401%" y="773" width="0.5280%" height="15" fill="rgb(209,34,43)"/><text x="46.2901%" y="783.50"></text></g><g><title>__rust_dealloc (1 samples, 0.11%)</title><rect x="46.4625%" y="757" width="0.1056%" height="15" fill="rgb(223,11,35)"/><text x="46.7125%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::expected (1 samples, 0.11%)</title><rect x="46.5681%" y="853" width="0.1056%" height="15" fill="rgb(251,219,26)"/><text x="46.8181%" y="863.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.21%)</title><rect x="46.6737%" y="757" width="0.2112%" height="15" fill="rgb(231,119,3)"/><text x="46.9237%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.21%)</title><rect x="46.6737%" y="741" width="0.2112%" height="15" fill="rgb(216,97,11)"/><text x="46.9237%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.21%)</title><rect x="46.6737%" y="725" width="0.2112%" height="15" fill="rgb(223,59,9)"/><text x="46.9237%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.21%)</title><rect x="46.6737%" y="709" width="0.2112%" height="15" fill="rgb(233,93,31)"/><text x="46.9237%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.21%)</title><rect x="46.6737%" y="693" width="0.2112%" height="15" fill="rgb(239,81,33)"/><text x="46.9237%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.21%)</title><rect x="46.6737%" y="677" width="0.2112%" height="15" fill="rgb(213,120,34)"/><text x="46.9237%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.21%)</title><rect x="46.6737%" y="661" width="0.2112%" height="15" fill="rgb(243,49,53)"/><text x="46.9237%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.21%)</title><rect x="46.6737%" y="645" width="0.2112%" height="15" fill="rgb(247,216,33)"/><text x="46.9237%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.21%)</title><rect x="46.6737%" y="629" width="0.2112%" height="15" fill="rgb(226,26,14)"/><text x="46.9237%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.21%)</title><rect x="46.6737%" y="613" width="0.2112%" height="15" fill="rgb(215,49,53)"/><text x="46.9237%" y="623.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.21%)</title><rect x="46.6737%" y="597" width="0.2112%" height="15" fill="rgb(245,162,40)"/><text x="46.9237%" y="607.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.21%)</title><rect x="46.6737%" y="581" width="0.2112%" height="15" fill="rgb(229,68,17)"/><text x="46.9237%" y="591.50"></text></g><g><title>_int_malloc (2 samples, 0.21%)</title><rect x="46.6737%" y="565" width="0.2112%" height="15" fill="rgb(213,182,10)"/><text x="46.9237%" y="575.50"></text></g><g><title>sysmalloc (2 samples, 0.21%)</title><rect x="46.6737%" y="549" width="0.2112%" height="15" fill="rgb(245,125,30)"/><text x="46.9237%" y="559.50"></text></g><g><title>page_fault (2 samples, 0.21%)</title><rect x="46.6737%" y="533" width="0.2112%" height="15" fill="rgb(232,202,2)"/><text x="46.9237%" y="543.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.21%)</title><rect x="46.6737%" y="517" width="0.2112%" height="15" fill="rgb(237,140,51)"/><text x="46.9237%" y="527.50"></text></g><g><title>handle_mm_fault (2 samples, 0.21%)</title><rect x="46.6737%" y="501" width="0.2112%" height="15" fill="rgb(236,157,25)"/><text x="46.9237%" y="511.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.21%)</title><rect x="46.6737%" y="485" width="0.2112%" height="15" fill="rgb(219,209,0)"/><text x="46.9237%" y="495.50"></text></g><g><title>alloc_pages_vma (2 samples, 0.21%)</title><rect x="46.6737%" y="469" width="0.2112%" height="15" fill="rgb(240,116,54)"/><text x="46.9237%" y="479.50"></text></g><g><title>__alloc_pages_nodemask (2 samples, 0.21%)</title><rect x="46.6737%" y="453" width="0.2112%" height="15" fill="rgb(216,10,36)"/><text x="46.9237%" y="463.50"></text></g><g><title>get_page_from_freelist (2 samples, 0.21%)</title><rect x="46.6737%" y="437" width="0.2112%" height="15" fill="rgb(222,72,44)"/><text x="46.9237%" y="447.50"></text></g><g><title>prep_new_page (2 samples, 0.21%)</title><rect x="46.6737%" y="421" width="0.2112%" height="15" fill="rgb(232,159,9)"/><text x="46.9237%" y="431.50"></text></g><g><title>kernel_init_free_pages (2 samples, 0.21%)</title><rect x="46.6737%" y="405" width="0.2112%" height="15" fill="rgb(210,39,32)"/><text x="46.9237%" y="415.50"></text></g><g><title>clear_page_erms (2 samples, 0.21%)</title><rect x="46.6737%" y="389" width="0.2112%" height="15" fill="rgb(216,194,45)"/><text x="46.9237%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.11%)</title><rect x="46.8849%" y="533" width="0.1056%" height="15" fill="rgb(218,18,35)"/><text x="47.1349%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="46.8849%" y="517" width="0.1056%" height="15" fill="rgb(207,83,51)"/><text x="47.1349%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="46.8849%" y="501" width="0.1056%" height="15" fill="rgb(225,63,43)"/><text x="47.1349%" y="511.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="46.8849%" y="485" width="0.1056%" height="15" fill="rgb(207,57,36)"/><text x="47.1349%" y="495.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="46.8849%" y="469" width="0.1056%" height="15" fill="rgb(216,99,33)"/><text x="47.1349%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (2 samples, 0.21%)</title><rect x="46.8849%" y="613" width="0.2112%" height="15" fill="rgb(225,42,16)"/><text x="47.1349%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.21%)</title><rect x="46.8849%" y="597" width="0.2112%" height="15" fill="rgb(220,201,45)"/><text x="47.1349%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (2 samples, 0.21%)</title><rect x="46.8849%" y="581" width="0.2112%" height="15" fill="rgb(225,33,4)"/><text x="47.1349%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.21%)</title><rect x="46.8849%" y="565" width="0.2112%" height="15" fill="rgb(224,33,50)"/><text x="47.1349%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.21%)</title><rect x="46.8849%" y="549" width="0.2112%" height="15" fill="rgb(246,198,51)"/><text x="47.1349%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (1 samples, 0.11%)</title><rect x="46.9905%" y="533" width="0.1056%" height="15" fill="rgb(205,22,4)"/><text x="47.2405%" y="543.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.11%)</title><rect x="46.9905%" y="517" width="0.1056%" height="15" fill="rgb(206,3,8)"/><text x="47.2405%" y="527.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.11%)</title><rect x="46.9905%" y="501" width="0.1056%" height="15" fill="rgb(251,23,15)"/><text x="47.2405%" y="511.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.11%)</title><rect x="46.9905%" y="485" width="0.1056%" height="15" fill="rgb(252,88,28)"/><text x="47.2405%" y="495.50"></text></g><g><title>_int_realloc (1 samples, 0.11%)</title><rect x="46.9905%" y="469" width="0.1056%" height="15" fill="rgb(212,127,14)"/><text x="47.2405%" y="479.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="46.9905%" y="453" width="0.1056%" height="15" fill="rgb(247,145,37)"/><text x="47.2405%" y="463.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (5 samples, 0.53%)</title><rect x="46.6737%" y="853" width="0.5280%" height="15" fill="rgb(209,117,53)"/><text x="46.9237%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (5 samples, 0.53%)</title><rect x="46.6737%" y="837" width="0.5280%" height="15" fill="rgb(212,90,42)"/><text x="46.9237%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (5 samples, 0.53%)</title><rect x="46.6737%" y="821" width="0.5280%" height="15" fill="rgb(218,164,37)"/><text x="46.9237%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (5 samples, 0.53%)</title><rect x="46.6737%" y="805" width="0.5280%" height="15" fill="rgb(246,65,34)"/><text x="46.9237%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (5 samples, 0.53%)</title><rect x="46.6737%" y="789" width="0.5280%" height="15" fill="rgb(231,100,33)"/><text x="46.9237%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::expected (5 samples, 0.53%)</title><rect x="46.6737%" y="773" width="0.5280%" height="15" fill="rgb(228,126,14)"/><text x="46.9237%" y="783.50"></text></g><g><title>alloc::fmt::format (3 samples, 0.32%)</title><rect x="46.8849%" y="757" width="0.3168%" height="15" fill="rgb(215,173,21)"/><text x="47.1349%" y="767.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.32%)</title><rect x="46.8849%" y="741" width="0.3168%" height="15" fill="rgb(210,6,40)"/><text x="47.1349%" y="751.50"></text></g><g><title>core::fmt::write (3 samples, 0.32%)</title><rect x="46.8849%" y="725" width="0.3168%" height="15" fill="rgb(212,48,18)"/><text x="47.1349%" y="735.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.32%)</title><rect x="46.8849%" y="709" width="0.3168%" height="15" fill="rgb(230,214,11)"/><text x="47.1349%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.32%)</title><rect x="46.8849%" y="693" width="0.3168%" height="15" fill="rgb(254,105,39)"/><text x="47.1349%" y="703.50"></text></g><g><title>alloc::string::String::push_str (3 samples, 0.32%)</title><rect x="46.8849%" y="677" width="0.3168%" height="15" fill="rgb(245,158,5)"/><text x="47.1349%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (3 samples, 0.32%)</title><rect x="46.8849%" y="661" width="0.3168%" height="15" fill="rgb(249,208,11)"/><text x="47.1349%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.32%)</title><rect x="46.8849%" y="645" width="0.3168%" height="15" fill="rgb(210,39,28)"/><text x="47.1349%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (3 samples, 0.32%)</title><rect x="46.8849%" y="629" width="0.3168%" height="15" fill="rgb(211,56,53)"/><text x="47.1349%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.11%)</title><rect x="47.0961%" y="613" width="0.1056%" height="15" fill="rgb(226,201,30)"/><text x="47.3461%" y="623.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="47.0961%" y="597" width="0.1056%" height="15" fill="rgb(239,101,34)"/><text x="47.3461%" y="607.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="47.3073%" y="805" width="0.1056%" height="15" fill="rgb(226,209,5)"/><text x="47.5573%" y="815.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="47.5185%" y="789" width="0.1056%" height="15" fill="rgb(250,105,47)"/><text x="47.7685%" y="799.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="47.6241%" y="773" width="0.1056%" height="15" fill="rgb(230,72,3)"/><text x="47.8741%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.63%)</title><rect x="47.6241%" y="789" width="0.6336%" height="15" fill="rgb(232,218,39)"/><text x="47.8741%" y="799.50"></text></g><g><title>__GI___libc_realloc (5 samples, 0.53%)</title><rect x="47.7297%" y="773" width="0.5280%" height="15" fill="rgb(248,166,6)"/><text x="47.9797%" y="783.50"></text></g><g><title>_int_realloc (5 samples, 0.53%)</title><rect x="47.7297%" y="757" width="0.5280%" height="15" fill="rgb(247,89,20)"/><text x="47.9797%" y="767.50"></text></g><g><title>_int_malloc (5 samples, 0.53%)</title><rect x="47.7297%" y="741" width="0.5280%" height="15" fill="rgb(248,130,54)"/><text x="47.9797%" y="751.50"></text></g><g><title>malloc_consolidate (3 samples, 0.32%)</title><rect x="47.9409%" y="725" width="0.3168%" height="15" fill="rgb(234,196,4)"/><text x="48.1909%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (9 samples, 0.95%)</title><rect x="47.4129%" y="805" width="0.9504%" height="15" fill="rgb(250,143,31)"/><text x="47.6629%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (1 samples, 0.11%)</title><rect x="48.2577%" y="789" width="0.1056%" height="15" fill="rgb(211,110,34)"/><text x="48.5077%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::get_next_precedence (1 samples, 0.11%)</title><rect x="48.2577%" y="773" width="0.1056%" height="15" fill="rgb(215,124,48)"/><text x="48.5077%" y="783.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="48.7856%" y="789" width="0.1056%" height="15" fill="rgb(216,46,13)"/><text x="49.0356%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="48.7856%" y="773" width="0.1056%" height="15" fill="rgb(205,184,25)"/><text x="49.0356%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="48.7856%" y="757" width="0.1056%" height="15" fill="rgb(228,1,10)"/><text x="49.0356%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.11%)</title><rect x="48.7856%" y="741" width="0.1056%" height="15" fill="rgb(213,116,27)"/><text x="49.0356%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.11%)</title><rect x="48.7856%" y="725" width="0.1056%" height="15" fill="rgb(241,95,50)"/><text x="49.0356%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="48.7856%" y="709" width="0.1056%" height="15" fill="rgb(238,48,32)"/><text x="49.0356%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="48.7856%" y="693" width="0.1056%" height="15" fill="rgb(235,113,49)"/><text x="49.0356%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="48.7856%" y="677" width="0.1056%" height="15" fill="rgb(205,127,43)"/><text x="49.0356%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.11%)</title><rect x="48.7856%" y="661" width="0.1056%" height="15" fill="rgb(250,162,2)"/><text x="49.0356%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.11%)</title><rect x="48.7856%" y="645" width="0.1056%" height="15" fill="rgb(220,13,41)"/><text x="49.0356%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="48.7856%" y="629" width="0.1056%" height="15" fill="rgb(249,221,25)"/><text x="49.0356%" y="639.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="48.7856%" y="613" width="0.1056%" height="15" fill="rgb(215,208,19)"/><text x="49.0356%" y="623.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="48.7856%" y="597" width="0.1056%" height="15" fill="rgb(236,175,2)"/><text x="49.0356%" y="607.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="48.7856%" y="581" width="0.1056%" height="15" fill="rgb(241,52,2)"/><text x="49.0356%" y="591.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.11%)</title><rect x="48.7856%" y="565" width="0.1056%" height="15" fill="rgb(248,140,14)"/><text x="49.0356%" y="575.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (17 samples, 1.80%)</title><rect x="47.2017%" y="853" width="1.7951%" height="15" fill="rgb(253,22,42)"/><text x="47.4517%" y="863.50">s..</text></g><g><title>sql_parser::parser::Parser::check_descent (17 samples, 1.80%)</title><rect x="47.2017%" y="837" width="1.7951%" height="15" fill="rgb(234,61,47)"/><text x="47.4517%" y="847.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_query_body (17 samples, 1.80%)</title><rect x="47.2017%" y="821" width="1.7951%" height="15" fill="rgb(208,226,15)"/><text x="47.4517%" y="831.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_keyword (6 samples, 0.63%)</title><rect x="48.3633%" y="805" width="0.6336%" height="15" fill="rgb(217,221,4)"/><text x="48.6133%" y="815.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.11%)</title><rect x="48.8912%" y="789" width="0.1056%" height="15" fill="rgb(212,174,34)"/><text x="49.1412%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (9 samples, 0.95%)</title><rect x="48.9968%" y="821" width="0.9504%" height="15" fill="rgb(253,83,4)"/><text x="49.2468%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (7 samples, 0.74%)</title><rect x="49.2080%" y="805" width="0.7392%" height="15" fill="rgb(250,195,49)"/><text x="49.4580%" y="815.50"></text></g><g><title>__memcmp_avx2_movbe (4 samples, 0.42%)</title><rect x="49.5248%" y="789" width="0.4224%" height="15" fill="rgb(241,192,25)"/><text x="49.7748%" y="799.50"></text></g><g><title>sql_parser::parser::parse_statements (10 samples, 1.06%)</title><rect x="48.9968%" y="853" width="1.0560%" height="15" fill="rgb(208,124,10)"/><text x="49.2468%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (10 samples, 1.06%)</title><rect x="48.9968%" y="837" width="1.0560%" height="15" fill="rgb(222,33,0)"/><text x="49.2468%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::parse_columns (1 samples, 0.11%)</title><rect x="49.9472%" y="821" width="0.1056%" height="15" fill="rgb(234,209,28)"/><text x="50.1972%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (1 samples, 0.11%)</title><rect x="49.9472%" y="805" width="0.1056%" height="15" fill="rgb(224,11,23)"/><text x="50.1972%" y="815.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.11%)</title><rect x="50.0528%" y="661" width="0.1056%" height="15" fill="rgb(232,99,1)"/><text x="50.3028%" y="671.50"></text></g><g><title>__GI___libc_free (1 samples, 0.11%)</title><rect x="50.0528%" y="645" width="0.1056%" height="15" fill="rgb(237,95,45)"/><text x="50.3028%" y="655.50"></text></g><g><title>start_thread (2 samples, 0.21%)</title><rect x="50.0528%" y="853" width="0.2112%" height="15" fill="rgb(208,109,11)"/><text x="50.3028%" y="863.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (2 samples, 0.21%)</title><rect x="50.0528%" y="837" width="0.2112%" height="15" fill="rgb(216,190,48)"/><text x="50.3028%" y="847.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (2 samples, 0.21%)</title><rect x="50.0528%" y="821" width="0.2112%" height="15" fill="rgb(251,171,36)"/><text x="50.3028%" y="831.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (2 samples, 0.21%)</title><rect x="50.0528%" y="805" width="0.2112%" height="15" fill="rgb(230,62,22)"/><text x="50.3028%" y="815.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (2 samples, 0.21%)</title><rect x="50.0528%" y="789" width="0.2112%" height="15" fill="rgb(225,114,35)"/><text x="50.3028%" y="799.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2 samples, 0.21%)</title><rect x="50.0528%" y="773" width="0.2112%" height="15" fill="rgb(215,118,42)"/><text x="50.3028%" y="783.50"></text></g><g><title>decor::Shim::run_on_tcp (2 samples, 0.21%)</title><rect x="50.0528%" y="757" width="0.2112%" height="15" fill="rgb(243,119,21)"/><text x="50.3028%" y="767.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (2 samples, 0.21%)</title><rect x="50.0528%" y="741" width="0.2112%" height="15" fill="rgb(252,177,53)"/><text x="50.3028%" y="751.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (2 samples, 0.21%)</title><rect x="50.0528%" y="725" width="0.2112%" height="15" fill="rgb(237,209,29)"/><text x="50.3028%" y="735.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (2 samples, 0.21%)</title><rect x="50.0528%" y="709" width="0.2112%" height="15" fill="rgb(212,65,23)"/><text x="50.3028%" y="719.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.21%)</title><rect x="50.0528%" y="693" width="0.2112%" height="15" fill="rgb(230,222,46)"/><text x="50.3028%" y="703.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (2 samples, 0.21%)</title><rect x="50.0528%" y="677" width="0.2112%" height="15" fill="rgb(215,135,32)"/><text x="50.3028%" y="687.50"></text></g><g><title>mysql_common::packets::parse_ok_packet (1 samples, 0.11%)</title><rect x="50.1584%" y="661" width="0.1056%" height="15" fill="rgb(246,101,22)"/><text x="50.4084%" y="671.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.21%)</title><rect x="50.2640%" y="853" width="0.2112%" height="15" fill="rgb(206,107,13)"/><text x="50.5140%" y="863.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (3 samples, 0.32%)</title><rect x="50.4752%" y="853" width="0.3168%" height="15" fill="rgb(250,100,44)"/><text x="50.7252%" y="863.50"></text></g><g><title>inode_permission.part.0 (1 samples, 0.11%)</title><rect x="50.7920%" y="517" width="0.1056%" height="15" fill="rgb(231,147,38)"/><text x="51.0420%" y="527.50"></text></g><g><title>generic_permission (1 samples, 0.11%)</title><rect x="50.7920%" y="501" width="0.1056%" height="15" fill="rgb(229,8,40)"/><text x="51.0420%" y="511.50"></text></g><g><title>in_group_p (1 samples, 0.11%)</title><rect x="50.7920%" y="485" width="0.1056%" height="15" fill="rgb(221,135,30)"/><text x="51.0420%" y="495.50"></text></g><g><title>link_path_walk (2 samples, 0.21%)</title><rect x="50.7920%" y="533" width="0.2112%" height="15" fill="rgb(249,193,18)"/><text x="51.0420%" y="543.50"></text></g><g><title>security_inode_permission (1 samples, 0.11%)</title><rect x="50.8976%" y="517" width="0.1056%" height="15" fill="rgb(209,133,39)"/><text x="51.1476%" y="527.50"></text></g><g><title>hwloc::Topology::new (3 samples, 0.32%)</title><rect x="50.7920%" y="725" width="0.3168%" height="15" fill="rgb(232,100,14)"/><text x="51.0420%" y="735.50"></text></g><g><title>hwloc_topology_load (3 samples, 0.32%)</title><rect x="50.7920%" y="709" width="0.3168%" height="15" fill="rgb(224,185,1)"/><text x="51.0420%" y="719.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.32%)</title><rect x="50.7920%" y="693" width="0.3168%" height="15" fill="rgb(223,139,8)"/><text x="51.0420%" y="703.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.32%)</title><rect x="50.7920%" y="677" width="0.3168%" height="15" fill="rgb(232,213,38)"/><text x="51.0420%" y="687.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.32%)</title><rect x="50.7920%" y="661" width="0.3168%" height="15" fill="rgb(207,94,22)"/><text x="51.0420%" y="671.50"></text></g><g><title>__GI___openat (3 samples, 0.32%)</title><rect x="50.7920%" y="645" width="0.3168%" height="15" fill="rgb(219,183,54)"/><text x="51.0420%" y="655.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.32%)</title><rect x="50.7920%" y="629" width="0.3168%" height="15" fill="rgb(216,185,54)"/><text x="51.0420%" y="639.50"></text></g><g><title>do_syscall_64 (3 samples, 0.32%)</title><rect x="50.7920%" y="613" width="0.3168%" height="15" fill="rgb(254,217,39)"/><text x="51.0420%" y="623.50"></text></g><g><title>__x64_sys_openat (3 samples, 0.32%)</title><rect x="50.7920%" y="597" width="0.3168%" height="15" fill="rgb(240,178,23)"/><text x="51.0420%" y="607.50"></text></g><g><title>do_sys_openat2 (3 samples, 0.32%)</title><rect x="50.7920%" y="581" width="0.3168%" height="15" fill="rgb(218,11,47)"/><text x="51.0420%" y="591.50"></text></g><g><title>do_filp_open (3 samples, 0.32%)</title><rect x="50.7920%" y="565" width="0.3168%" height="15" fill="rgb(218,51,51)"/><text x="51.0420%" y="575.50"></text></g><g><title>path_openat (3 samples, 0.32%)</title><rect x="50.7920%" y="549" width="0.3168%" height="15" fill="rgb(238,126,27)"/><text x="51.0420%" y="559.50"></text></g><g><title>may_open (1 samples, 0.11%)</title><rect x="51.0032%" y="533" width="0.1056%" height="15" fill="rgb(249,202,22)"/><text x="51.2532%" y="543.50"></text></g><g><title>inode_permission.part.0 (1 samples, 0.11%)</title><rect x="51.0032%" y="517" width="0.1056%" height="15" fill="rgb(254,195,49)"/><text x="51.2532%" y="527.50"></text></g><g><title>kernfs_iop_permission (1 samples, 0.11%)</title><rect x="51.0032%" y="501" width="0.1056%" height="15" fill="rgb(208,123,14)"/><text x="51.2532%" y="511.50"></text></g><g><title>mutex_lock (1 samples, 0.11%)</title><rect x="51.0032%" y="485" width="0.1056%" height="15" fill="rgb(224,200,8)"/><text x="51.2532%" y="495.50"></text></g><g><title>std::rt::lang_start_internal (4 samples, 0.42%)</title><rect x="50.7920%" y="853" width="0.4224%" height="15" fill="rgb(217,61,36)"/><text x="51.0420%" y="863.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.42%)</title><rect x="50.7920%" y="837" width="0.4224%" height="15" fill="rgb(206,35,45)"/><text x="51.0420%" y="847.50"></text></g><g><title>std::panicking::try (4 samples, 0.42%)</title><rect x="50.7920%" y="821" width="0.4224%" height="15" fill="rgb(217,65,33)"/><text x="51.0420%" y="831.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.42%)</title><rect x="50.7920%" y="805" width="0.4224%" height="15" fill="rgb(222,158,48)"/><text x="51.0420%" y="815.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (4 samples, 0.42%)</title><rect x="50.7920%" y="789" width="0.4224%" height="15" fill="rgb(254,2,54)"/><text x="51.0420%" y="799.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (4 samples, 0.42%)</title><rect x="50.7920%" y="773" width="0.4224%" height="15" fill="rgb(250,143,38)"/><text x="51.0420%" y="783.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (4 samples, 0.42%)</title><rect x="50.7920%" y="757" width="0.4224%" height="15" fill="rgb(248,25,0)"/><text x="51.0420%" y="767.50"></text></g><g><title>lobsters::main (4 samples, 0.42%)</title><rect x="50.7920%" y="741" width="0.4224%" height="15" fill="rgb(206,152,27)"/><text x="51.0420%" y="751.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (1 samples, 0.11%)</title><rect x="51.1088%" y="725" width="0.1056%" height="15" fill="rgb(240,77,30)"/><text x="51.3588%" y="735.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.11%)</title><rect x="51.1088%" y="709" width="0.1056%" height="15" fill="rgb(231,5,3)"/><text x="51.3588%" y="719.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.11%)</title><rect x="51.1088%" y="693" width="0.1056%" height="15" fill="rgb(207,226,32)"/><text x="51.3588%" y="703.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::encode (1 samples, 0.11%)</title><rect x="51.1088%" y="677" width="0.1056%" height="15" fill="rgb(222,207,47)"/><text x="51.3588%" y="687.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::encode (1 samples, 0.11%)</title><rect x="51.1088%" y="661" width="0.1056%" height="15" fill="rgb(229,115,45)"/><text x="51.3588%" y="671.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="51.1088%" y="645" width="0.1056%" height="15" fill="rgb(224,191,6)"/><text x="51.3588%" y="655.50"></text></g><g><title>dst_release (1 samples, 0.11%)</title><rect x="51.4256%" y="485" width="0.1056%" height="15" fill="rgb(230,227,24)"/><text x="51.6756%" y="495.50"></text></g><g><title>__kfree_skb (2 samples, 0.21%)</title><rect x="51.4256%" y="517" width="0.2112%" height="15" fill="rgb(228,80,19)"/><text x="51.6756%" y="527.50"></text></g><g><title>skb_release_head_state (2 samples, 0.21%)</title><rect x="51.4256%" y="501" width="0.2112%" height="15" fill="rgb(247,229,0)"/><text x="51.6756%" y="511.50"></text></g><g><title>sock_rfree (1 samples, 0.11%)</title><rect x="51.5312%" y="485" width="0.1056%" height="15" fill="rgb(237,194,15)"/><text x="51.7812%" y="495.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.11%)</title><rect x="51.6367%" y="501" width="0.1056%" height="15" fill="rgb(219,203,20)"/><text x="51.8867%" y="511.50"></text></g><g><title>__perf_event_task_sched_out (1 samples, 0.11%)</title><rect x="52.0591%" y="437" width="0.1056%" height="15" fill="rgb(234,128,8)"/><text x="52.3091%" y="447.50"></text></g><g><title>update_cfs_group (1 samples, 0.11%)</title><rect x="52.2703%" y="405" width="0.1056%" height="15" fill="rgb(248,202,8)"/><text x="52.5203%" y="415.50"></text></g><g><title>__calc_delta (1 samples, 0.11%)</title><rect x="52.3759%" y="389" width="0.1056%" height="15" fill="rgb(206,104,37)"/><text x="52.6259%" y="399.50"></text></g><g><title>update_curr (2 samples, 0.21%)</title><rect x="52.3759%" y="405" width="0.2112%" height="15" fill="rgb(223,8,27)"/><text x="52.6259%" y="415.50"></text></g><g><title>__cgroup_account_cputime (1 samples, 0.11%)</title><rect x="52.4815%" y="389" width="0.1056%" height="15" fill="rgb(216,217,28)"/><text x="52.7315%" y="399.50"></text></g><g><title>dequeue_task_fair (5 samples, 0.53%)</title><rect x="52.1647%" y="437" width="0.5280%" height="15" fill="rgb(249,199,1)"/><text x="52.4147%" y="447.50"></text></g><g><title>dequeue_entity (4 samples, 0.42%)</title><rect x="52.2703%" y="421" width="0.4224%" height="15" fill="rgb(240,85,17)"/><text x="52.5203%" y="431.50"></text></g><g><title>update_load_avg (1 samples, 0.11%)</title><rect x="52.5871%" y="405" width="0.1056%" height="15" fill="rgb(206,108,45)"/><text x="52.8371%" y="415.50"></text></g><g><title>finish_task_switch (1 samples, 0.11%)</title><rect x="52.6927%" y="437" width="0.1056%" height="15" fill="rgb(245,210,41)"/><text x="52.9427%" y="447.50"></text></g><g><title>__perf_event_task_sched_in (1 samples, 0.11%)</title><rect x="52.6927%" y="421" width="0.1056%" height="15" fill="rgb(206,13,37)"/><text x="52.9427%" y="431.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (1 samples, 0.11%)</title><rect x="52.6927%" y="405" width="0.1056%" height="15" fill="rgb(250,61,18)"/><text x="52.9427%" y="415.50"></text></g><g><title>native_write_msr (1 samples, 0.11%)</title><rect x="52.6927%" y="389" width="0.1056%" height="15" fill="rgb(235,172,48)"/><text x="52.9427%" y="399.50"></text></g><g><title>psi_task_change (3 samples, 0.32%)</title><rect x="52.7983%" y="437" width="0.3168%" height="15" fill="rgb(249,201,17)"/><text x="53.0483%" y="447.50"></text></g><g><title>psi_group_change (3 samples, 0.32%)</title><rect x="52.7983%" y="421" width="0.3168%" height="15" fill="rgb(219,208,6)"/><text x="53.0483%" y="431.50"></text></g><g><title>record_times (1 samples, 0.11%)</title><rect x="53.0095%" y="405" width="0.1056%" height="15" fill="rgb(248,31,23)"/><text x="53.2595%" y="415.50"></text></g><g><title>put_prev_task_fair (2 samples, 0.21%)</title><rect x="53.1151%" y="437" width="0.2112%" height="15" fill="rgb(245,15,42)"/><text x="53.3651%" y="447.50"></text></g><g><title>put_prev_entity (2 samples, 0.21%)</title><rect x="53.1151%" y="421" width="0.2112%" height="15" fill="rgb(222,217,39)"/><text x="53.3651%" y="431.50"></text></g><g><title>sk_wait_data (17 samples, 1.80%)</title><rect x="51.6367%" y="517" width="1.7951%" height="15" fill="rgb(210,219,27)"/><text x="51.8867%" y="527.50">s..</text></g><g><title>wait_woken (16 samples, 1.69%)</title><rect x="51.7423%" y="501" width="1.6895%" height="15" fill="rgb(252,166,36)"/><text x="51.9923%" y="511.50"></text></g><g><title>schedule_timeout (13 samples, 1.37%)</title><rect x="52.0591%" y="485" width="1.3728%" height="15" fill="rgb(245,132,34)"/><text x="52.3091%" y="495.50"></text></g><g><title>schedule (13 samples, 1.37%)</title><rect x="52.0591%" y="469" width="1.3728%" height="15" fill="rgb(236,54,3)"/><text x="52.3091%" y="479.50"></text></g><g><title>__schedule (13 samples, 1.37%)</title><rect x="52.0591%" y="453" width="1.3728%" height="15" fill="rgb(241,173,43)"/><text x="52.3091%" y="463.50"></text></g><g><title>update_rq_clock (1 samples, 0.11%)</title><rect x="53.3263%" y="437" width="0.1056%" height="15" fill="rgb(215,190,9)"/><text x="53.5763%" y="447.50"></text></g><g><title>update_irq_load_avg (1 samples, 0.11%)</title><rect x="53.3263%" y="421" width="0.1056%" height="15" fill="rgb(242,101,16)"/><text x="53.5763%" y="431.50"></text></g><g><title>skb_copy_datagram_iter (3 samples, 0.32%)</title><rect x="53.4319%" y="517" width="0.3168%" height="15" fill="rgb(223,190,21)"/><text x="53.6819%" y="527.50"></text></g><g><title>__skb_datagram_iter (3 samples, 0.32%)</title><rect x="53.4319%" y="501" width="0.3168%" height="15" fill="rgb(215,228,25)"/><text x="53.6819%" y="511.50"></text></g><g><title>_copy_to_iter (1 samples, 0.11%)</title><rect x="53.6431%" y="485" width="0.1056%" height="15" fill="rgb(225,36,22)"/><text x="53.8931%" y="495.50"></text></g><g><title>copy_user_generic_unrolled (1 samples, 0.11%)</title><rect x="53.6431%" y="469" width="0.1056%" height="15" fill="rgb(251,106,46)"/><text x="53.8931%" y="479.50"></text></g><g><title>inet_recvmsg (25 samples, 2.64%)</title><rect x="51.2144%" y="549" width="2.6399%" height="15" fill="rgb(208,90,1)"/><text x="51.4644%" y="559.50">in..</text></g><g><title>tcp_recvmsg (25 samples, 2.64%)</title><rect x="51.2144%" y="533" width="2.6399%" height="15" fill="rgb(243,10,4)"/><text x="51.4644%" y="543.50">tc..</text></g><g><title>tcp_cleanup_rbuf (1 samples, 0.11%)</title><rect x="53.7487%" y="517" width="0.1056%" height="15" fill="rgb(212,137,27)"/><text x="53.9987%" y="527.50"></text></g><g><title>do_syscall_64 (26 samples, 2.75%)</title><rect x="51.2144%" y="597" width="2.7455%" height="15" fill="rgb(231,220,49)"/><text x="51.4644%" y="607.50">do..</text></g><g><title>__x64_sys_recvfrom (26 samples, 2.75%)</title><rect x="51.2144%" y="581" width="2.7455%" height="15" fill="rgb(237,96,20)"/><text x="51.4644%" y="591.50">__..</text></g><g><title>__sys_recvfrom (26 samples, 2.75%)</title><rect x="51.2144%" y="565" width="2.7455%" height="15" fill="rgb(239,229,30)"/><text x="51.4644%" y="575.50">__..</text></g><g><title>sockfd_lookup_light (1 samples, 0.11%)</title><rect x="53.8543%" y="549" width="0.1056%" height="15" fill="rgb(219,65,33)"/><text x="54.1043%" y="559.50"></text></g><g><title>__fget_light (1 samples, 0.11%)</title><rect x="53.8543%" y="533" width="0.1056%" height="15" fill="rgb(243,134,7)"/><text x="54.1043%" y="543.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (27 samples, 2.85%)</title><rect x="51.2144%" y="853" width="2.8511%" height="15" fill="rgb(216,177,54)"/><text x="51.4644%" y="863.50">st..</text></g><g><title>decor::Shim::run_on_tcp (27 samples, 2.85%)</title><rect x="51.2144%" y="837" width="2.8511%" height="15" fill="rgb(211,160,20)"/><text x="51.4644%" y="847.50">de..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (27 samples, 2.85%)</title><rect x="51.2144%" y="821" width="2.8511%" height="15" fill="rgb(239,85,39)"/><text x="51.4644%" y="831.50">ms..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (27 samples, 2.85%)</title><rect x="51.2144%" y="805" width="2.8511%" height="15" fill="rgb(232,125,22)"/><text x="51.4644%" y="815.50">&lt;d..</text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (27 samples, 2.85%)</title><rect x="51.2144%" y="789" width="2.8511%" height="15" fill="rgb(244,57,34)"/><text x="51.4644%" y="799.50">&lt;m..</text></g><g><title>mysql::conn::Conn::_query (27 samples, 2.85%)</title><rect x="51.2144%" y="773" width="2.8511%" height="15" fill="rgb(214,203,32)"/><text x="51.4644%" y="783.50">my..</text></g><g><title>mysql::conn::Conn::handle_result_set (27 samples, 2.85%)</title><rect x="51.2144%" y="757" width="2.8511%" height="15" fill="rgb(207,58,43)"/><text x="51.4644%" y="767.50">my..</text></g><g><title>mysql::conn::Conn::read_packet (27 samples, 2.85%)</title><rect x="51.2144%" y="741" width="2.8511%" height="15" fill="rgb(215,193,15)"/><text x="51.4644%" y="751.50">my..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 2.85%)</title><rect x="51.2144%" y="725" width="2.8511%" height="15" fill="rgb(232,15,44)"/><text x="51.4644%" y="735.50">&lt;m..</text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (27 samples, 2.85%)</title><rect x="51.2144%" y="709" width="2.8511%" height="15" fill="rgb(212,3,48)"/><text x="51.4644%" y="719.50">&lt;s..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (27 samples, 2.85%)</title><rect x="51.2144%" y="693" width="2.8511%" height="15" fill="rgb(218,128,7)"/><text x="51.4644%" y="703.50">&lt;s..</text></g><g><title>std::sys_common::net::TcpStream::read (27 samples, 2.85%)</title><rect x="51.2144%" y="677" width="2.8511%" height="15" fill="rgb(226,216,39)"/><text x="51.4644%" y="687.50">st..</text></g><g><title>std::sys::unix::net::Socket::read (27 samples, 2.85%)</title><rect x="51.2144%" y="661" width="2.8511%" height="15" fill="rgb(243,47,51)"/><text x="51.4644%" y="671.50">st..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (27 samples, 2.85%)</title><rect x="51.2144%" y="645" width="2.8511%" height="15" fill="rgb(241,183,40)"/><text x="51.4644%" y="655.50">st..</text></g><g><title>__libc_recv (27 samples, 2.85%)</title><rect x="51.2144%" y="629" width="2.8511%" height="15" fill="rgb(231,217,32)"/><text x="51.4644%" y="639.50">__..</text></g><g><title>entry_SYSCALL_64 (27 samples, 2.85%)</title><rect x="51.2144%" y="613" width="2.8511%" height="15" fill="rgb(229,61,38)"/><text x="51.4644%" y="623.50">en..</text></g><g><title>prepare_exit_to_usermode (1 samples, 0.11%)</title><rect x="53.9599%" y="597" width="0.1056%" height="15" fill="rgb(225,210,5)"/><text x="54.2099%" y="607.50"></text></g><g><title>switch_fpu_return (1 samples, 0.11%)</title><rect x="53.9599%" y="581" width="0.1056%" height="15" fill="rgb(231,79,45)"/><text x="54.2099%" y="591.50"></text></g><g><title>[unknown] (474 samples, 50.05%)</title><rect x="4.1183%" y="869" width="50.0528%" height="15" fill="rgb(224,100,7)"/><text x="4.3683%" y="879.50">[unknown]</text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.11%)</title><rect x="54.0655%" y="853" width="0.1056%" height="15" fill="rgb(241,198,18)"/><text x="54.3155%" y="863.50"></text></g><g><title>__malloc_arena_thread_freeres (1 samples, 0.11%)</title><rect x="54.1711%" y="837" width="0.1056%" height="15" fill="rgb(252,97,53)"/><text x="54.4211%" y="847.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="54.1711%" y="821" width="0.1056%" height="15" fill="rgb(220,88,7)"/><text x="54.4211%" y="831.50"></text></g><g><title>__GI_madvise (1 samples, 0.11%)</title><rect x="54.1711%" y="805" width="0.1056%" height="15" fill="rgb(213,176,14)"/><text x="54.4211%" y="815.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="54.1711%" y="789" width="0.1056%" height="15" fill="rgb(246,73,7)"/><text x="54.4211%" y="799.50"></text></g><g><title>do_syscall_64 (1 samples, 0.11%)</title><rect x="54.1711%" y="773" width="0.1056%" height="15" fill="rgb(245,64,36)"/><text x="54.4211%" y="783.50"></text></g><g><title>__x64_sys_madvise (1 samples, 0.11%)</title><rect x="54.1711%" y="757" width="0.1056%" height="15" fill="rgb(245,80,10)"/><text x="54.4211%" y="767.50"></text></g><g><title>do_madvise (1 samples, 0.11%)</title><rect x="54.1711%" y="741" width="0.1056%" height="15" fill="rgb(232,107,50)"/><text x="54.4211%" y="751.50"></text></g><g><title>zap_page_range (1 samples, 0.11%)</title><rect x="54.1711%" y="725" width="0.1056%" height="15" fill="rgb(253,3,0)"/><text x="54.4211%" y="735.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.11%)</title><rect x="54.1711%" y="709" width="0.1056%" height="15" fill="rgb(212,99,53)"/><text x="54.4211%" y="719.50"></text></g><g><title>release_pages (1 samples, 0.11%)</title><rect x="54.1711%" y="693" width="0.1056%" height="15" fill="rgb(249,111,54)"/><text x="54.4211%" y="703.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.11%)</title><rect x="54.4879%" y="677" width="0.1056%" height="15" fill="rgb(249,55,30)"/><text x="54.7379%" y="687.50"></text></g><g><title>__pthread_disable_asynccancel (1 samples, 0.11%)</title><rect x="54.5935%" y="597" width="0.1056%" height="15" fill="rgb(237,47,42)"/><text x="54.8435%" y="607.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.11%)</title><rect x="55.1214%" y="421" width="0.1056%" height="15" fill="rgb(211,20,18)"/><text x="55.3714%" y="431.50"></text></g><g><title>__ip_finish_output (2 samples, 0.21%)</title><rect x="55.2270%" y="405" width="0.2112%" height="15" fill="rgb(231,203,46)"/><text x="55.4770%" y="415.50"></text></g><g><title>ipv4_mtu (1 samples, 0.11%)</title><rect x="55.3326%" y="389" width="0.1056%" height="15" fill="rgb(237,142,3)"/><text x="55.5826%" y="399.50"></text></g><g><title>__dev_queue_xmit (3 samples, 0.32%)</title><rect x="55.4382%" y="389" width="0.3168%" height="15" fill="rgb(241,107,1)"/><text x="55.6882%" y="399.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.21%)</title><rect x="55.5438%" y="373" width="0.2112%" height="15" fill="rgb(229,83,13)"/><text x="55.7938%" y="383.50"></text></g><g><title>loopback_xmit (2 samples, 0.21%)</title><rect x="55.5438%" y="357" width="0.2112%" height="15" fill="rgb(241,91,40)"/><text x="55.7938%" y="367.50"></text></g><g><title>tcp_wfree (1 samples, 0.11%)</title><rect x="55.6494%" y="341" width="0.1056%" height="15" fill="rgb(225,3,45)"/><text x="55.8994%" y="351.50"></text></g><g><title>__netif_receive_skb_core (2 samples, 0.21%)</title><rect x="55.9662%" y="277" width="0.2112%" height="15" fill="rgb(244,223,14)"/><text x="56.2162%" y="287.50"></text></g><g><title>_raw_spin_lock (2 samples, 0.21%)</title><rect x="56.2830%" y="85" width="0.2112%" height="15" fill="rgb(224,124,37)"/><text x="56.5330%" y="95.50"></text></g><g><title>enqueue_task (3 samples, 0.32%)</title><rect x="56.4942%" y="85" width="0.3168%" height="15" fill="rgb(251,171,30)"/><text x="56.7442%" y="95.50"></text></g><g><title>psi_task_change (3 samples, 0.32%)</title><rect x="56.4942%" y="69" width="0.3168%" height="15" fill="rgb(236,46,54)"/><text x="56.7442%" y="79.50"></text></g><g><title>account_entity_enqueue (1 samples, 0.11%)</title><rect x="56.9166%" y="53" width="0.1056%" height="15" fill="rgb(245,213,5)"/><text x="57.1666%" y="63.50"></text></g><g><title>enqueue_task_fair (4 samples, 0.42%)</title><rect x="56.8110%" y="85" width="0.4224%" height="15" fill="rgb(230,144,27)"/><text x="57.0610%" y="95.50"></text></g><g><title>enqueue_entity (4 samples, 0.42%)</title><rect x="56.8110%" y="69" width="0.4224%" height="15" fill="rgb(220,86,6)"/><text x="57.0610%" y="79.50"></text></g><g><title>update_load_avg (2 samples, 0.21%)</title><rect x="57.0222%" y="53" width="0.2112%" height="15" fill="rgb(240,20,13)"/><text x="57.2722%" y="63.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.11%)</title><rect x="57.1278%" y="37" width="0.1056%" height="15" fill="rgb(217,89,34)"/><text x="57.3778%" y="47.50"></text></g><g><title>available_idle_cpu (2 samples, 0.21%)</title><rect x="57.2334%" y="69" width="0.2112%" height="15" fill="rgb(229,13,5)"/><text x="57.4834%" y="79.50"></text></g><g><title>select_task_rq_fair (3 samples, 0.32%)</title><rect x="57.2334%" y="85" width="0.3168%" height="15" fill="rgb(244,67,35)"/><text x="57.4834%" y="95.50"></text></g><g><title>cpus_share_cache (1 samples, 0.11%)</title><rect x="57.4446%" y="69" width="0.1056%" height="15" fill="rgb(221,40,2)"/><text x="57.6946%" y="79.50"></text></g><g><title>sock_def_readable (14 samples, 1.48%)</title><rect x="56.1774%" y="165" width="1.4784%" height="15" fill="rgb(237,157,21)"/><text x="56.4274%" y="175.50"></text></g><g><title>__wake_up_common_lock (14 samples, 1.48%)</title><rect x="56.1774%" y="149" width="1.4784%" height="15" fill="rgb(222,94,11)"/><text x="56.4274%" y="159.50"></text></g><g><title>__wake_up_common (14 samples, 1.48%)</title><rect x="56.1774%" y="133" width="1.4784%" height="15" fill="rgb(249,113,6)"/><text x="56.4274%" y="143.50"></text></g><g><title>pollwake (14 samples, 1.48%)</title><rect x="56.1774%" y="117" width="1.4784%" height="15" fill="rgb(238,137,36)"/><text x="56.4274%" y="127.50"></text></g><g><title>try_to_wake_up (14 samples, 1.48%)</title><rect x="56.1774%" y="101" width="1.4784%" height="15" fill="rgb(210,102,26)"/><text x="56.4274%" y="111.50"></text></g><g><title>ttwu_do_wakeup (1 samples, 0.11%)</title><rect x="57.5502%" y="85" width="0.1056%" height="15" fill="rgb(218,30,30)"/><text x="57.8002%" y="95.50"></text></g><g><title>check_preempt_curr (1 samples, 0.11%)</title><rect x="57.5502%" y="69" width="0.1056%" height="15" fill="rgb(214,67,26)"/><text x="57.8002%" y="79.50"></text></g><g><title>resched_curr (1 samples, 0.11%)</title><rect x="57.5502%" y="53" width="0.1056%" height="15" fill="rgb(251,9,53)"/><text x="57.8002%" y="63.50"></text></g><g><title>kfree (1 samples, 0.11%)</title><rect x="57.7614%" y="133" width="0.1056%" height="15" fill="rgb(228,204,25)"/><text x="58.0114%" y="143.50"></text></g><g><title>__slab_free (1 samples, 0.11%)</title><rect x="57.7614%" y="117" width="0.1056%" height="15" fill="rgb(207,153,8)"/><text x="58.0114%" y="127.50"></text></g><g><title>skb_release_data (1 samples, 0.11%)</title><rect x="57.8669%" y="133" width="0.1056%" height="15" fill="rgb(242,9,16)"/><text x="58.1169%" y="143.50"></text></g><g><title>__kfree_skb (3 samples, 0.32%)</title><rect x="57.7614%" y="149" width="0.3168%" height="15" fill="rgb(217,211,10)"/><text x="58.0114%" y="159.50"></text></g><g><title>skb_release_head_state (1 samples, 0.11%)</title><rect x="57.9725%" y="133" width="0.1056%" height="15" fill="rgb(219,228,52)"/><text x="58.2225%" y="143.50"></text></g><g><title>tcp_chrono_stop (1 samples, 0.11%)</title><rect x="58.0781%" y="149" width="0.1056%" height="15" fill="rgb(231,92,29)"/><text x="58.3281%" y="159.50"></text></g><g><title>tcp_rack_advance (1 samples, 0.11%)</title><rect x="58.1837%" y="149" width="0.1056%" height="15" fill="rgb(232,8,23)"/><text x="58.4337%" y="159.50"></text></g><g><title>tcp_schedule_loss_probe.part.0 (1 samples, 0.11%)</title><rect x="58.2893%" y="149" width="0.1056%" height="15" fill="rgb(216,211,34)"/><text x="58.5393%" y="159.50"></text></g><g><title>tcp_ack (8 samples, 0.84%)</title><rect x="57.6558%" y="165" width="0.8448%" height="15" fill="rgb(236,151,0)"/><text x="57.9058%" y="175.50"></text></g><g><title>tcp_update_pacing_rate (1 samples, 0.11%)</title><rect x="58.3949%" y="149" width="0.1056%" height="15" fill="rgb(209,168,3)"/><text x="58.6449%" y="159.50"></text></g><g><title>tcp_check_space (1 samples, 0.11%)</title><rect x="58.5005%" y="165" width="0.1056%" height="15" fill="rgb(208,129,28)"/><text x="58.7505%" y="175.50"></text></g><g><title>ip_local_deliver (24 samples, 2.53%)</title><rect x="56.1774%" y="261" width="2.5343%" height="15" fill="rgb(229,78,22)"/><text x="56.4274%" y="271.50">ip..</text></g><g><title>ip_local_deliver_finish (24 samples, 2.53%)</title><rect x="56.1774%" y="245" width="2.5343%" height="15" fill="rgb(228,187,13)"/><text x="56.4274%" y="255.50">ip..</text></g><g><title>ip_protocol_deliver_rcu (24 samples, 2.53%)</title><rect x="56.1774%" y="229" width="2.5343%" height="15" fill="rgb(240,119,24)"/><text x="56.4274%" y="239.50">ip..</text></g><g><title>tcp_v4_rcv (24 samples, 2.53%)</title><rect x="56.1774%" y="213" width="2.5343%" height="15" fill="rgb(209,194,42)"/><text x="56.4274%" y="223.50">tc..</text></g><g><title>tcp_v4_do_rcv (24 samples, 2.53%)</title><rect x="56.1774%" y="197" width="2.5343%" height="15" fill="rgb(247,200,46)"/><text x="56.4274%" y="207.50">tc..</text></g><g><title>tcp_rcv_established (24 samples, 2.53%)</title><rect x="56.1774%" y="181" width="2.5343%" height="15" fill="rgb(218,76,16)"/><text x="56.4274%" y="191.50">tc..</text></g><g><title>tcp_grow_window (1 samples, 0.11%)</title><rect x="58.6061%" y="165" width="0.1056%" height="15" fill="rgb(225,21,48)"/><text x="58.8561%" y="175.50"></text></g><g><title>__netif_receive_skb_one_core (27 samples, 2.85%)</title><rect x="55.9662%" y="293" width="2.8511%" height="15" fill="rgb(239,223,50)"/><text x="56.2162%" y="303.50">__..</text></g><g><title>ip_rcv (25 samples, 2.64%)</title><rect x="56.1774%" y="277" width="2.6399%" height="15" fill="rgb(244,45,21)"/><text x="56.4274%" y="287.50">ip..</text></g><g><title>ip_rcv_core (1 samples, 0.11%)</title><rect x="58.7117%" y="261" width="0.1056%" height="15" fill="rgb(232,33,43)"/><text x="58.9617%" y="271.50"></text></g><g><title>__ip_queue_xmit (37 samples, 3.91%)</title><rect x="55.0158%" y="437" width="3.9071%" height="15" fill="rgb(209,8,3)"/><text x="55.2658%" y="447.50">__ip..</text></g><g><title>ip_output (35 samples, 3.70%)</title><rect x="55.2270%" y="421" width="3.6959%" height="15" fill="rgb(214,25,53)"/><text x="55.4770%" y="431.50">ip_o..</text></g><g><title>ip_finish_output2 (33 samples, 3.48%)</title><rect x="55.4382%" y="405" width="3.4847%" height="15" fill="rgb(254,186,54)"/><text x="55.6882%" y="415.50">ip_..</text></g><g><title>__local_bh_enable_ip (30 samples, 3.17%)</title><rect x="55.7550%" y="389" width="3.1679%" height="15" fill="rgb(208,174,49)"/><text x="56.0050%" y="399.50">__l..</text></g><g><title>do_softirq (30 samples, 3.17%)</title><rect x="55.7550%" y="373" width="3.1679%" height="15" fill="rgb(233,191,51)"/><text x="56.0050%" y="383.50">do_..</text></g><g><title>do_softirq_own_stack (29 samples, 3.06%)</title><rect x="55.8606%" y="357" width="3.0623%" height="15" fill="rgb(222,134,10)"/><text x="56.1106%" y="367.50">do_..</text></g><g><title>__do_softirq (29 samples, 3.06%)</title><rect x="55.8606%" y="341" width="3.0623%" height="15" fill="rgb(230,226,20)"/><text x="56.1106%" y="351.50">__d..</text></g><g><title>net_rx_action (28 samples, 2.96%)</title><rect x="55.9662%" y="325" width="2.9567%" height="15" fill="rgb(251,111,25)"/><text x="56.2162%" y="335.50">net..</text></g><g><title>process_backlog (28 samples, 2.96%)</title><rect x="55.9662%" y="309" width="2.9567%" height="15" fill="rgb(224,40,46)"/><text x="56.2162%" y="319.50">pro..</text></g><g><title>_raw_spin_lock (1 samples, 0.11%)</title><rect x="58.8173%" y="293" width="0.1056%" height="15" fill="rgb(236,108,47)"/><text x="59.0673%" y="303.50"></text></g><g><title>preempt_count_add (1 samples, 0.11%)</title><rect x="58.8173%" y="277" width="0.1056%" height="15" fill="rgb(234,93,0)"/><text x="59.0673%" y="287.50"></text></g><g><title>__tcp_push_pending_frames (38 samples, 4.01%)</title><rect x="55.0158%" y="485" width="4.0127%" height="15" fill="rgb(224,213,32)"/><text x="55.2658%" y="495.50">__tc..</text></g><g><title>tcp_write_xmit (38 samples, 4.01%)</title><rect x="55.0158%" y="469" width="4.0127%" height="15" fill="rgb(251,11,48)"/><text x="55.2658%" y="479.50">tcp_..</text></g><g><title>__tcp_transmit_skb (38 samples, 4.01%)</title><rect x="55.0158%" y="453" width="4.0127%" height="15" fill="rgb(236,173,5)"/><text x="55.2658%" y="463.50">__tc..</text></g><g><title>tcp_v4_send_check (1 samples, 0.11%)</title><rect x="58.9229%" y="437" width="0.1056%" height="15" fill="rgb(230,95,12)"/><text x="59.1729%" y="447.50"></text></g><g><title>sk_stream_alloc_skb (1 samples, 0.11%)</title><rect x="59.0285%" y="485" width="0.1056%" height="15" fill="rgb(232,209,1)"/><text x="59.2785%" y="495.50"></text></g><g><title>__alloc_skb (1 samples, 0.11%)</title><rect x="59.0285%" y="469" width="0.1056%" height="15" fill="rgb(232,6,1)"/><text x="59.2785%" y="479.50"></text></g><g><title>__ksize (1 samples, 0.11%)</title><rect x="59.0285%" y="453" width="0.1056%" height="15" fill="rgb(210,224,50)"/><text x="59.2785%" y="463.50"></text></g><g><title>skb_do_copy_data_nocache (1 samples, 0.11%)</title><rect x="59.1341%" y="485" width="0.1056%" height="15" fill="rgb(228,127,35)"/><text x="59.3841%" y="495.50"></text></g><g><title>__check_object_size (1 samples, 0.11%)</title><rect x="59.1341%" y="469" width="0.1056%" height="15" fill="rgb(245,102,45)"/><text x="59.3841%" y="479.50"></text></g><g><title>__virt_addr_valid (1 samples, 0.11%)</title><rect x="59.1341%" y="453" width="0.1056%" height="15" fill="rgb(214,1,49)"/><text x="59.3841%" y="463.50"></text></g><g><title>sock_sendmsg (43 samples, 4.54%)</title><rect x="54.8046%" y="533" width="4.5407%" height="15" fill="rgb(226,163,40)"/><text x="55.0546%" y="543.50">sock_..</text></g><g><title>tcp_sendmsg (43 samples, 4.54%)</title><rect x="54.8046%" y="517" width="4.5407%" height="15" fill="rgb(239,212,28)"/><text x="55.0546%" y="527.50">tcp_s..</text></g><g><title>tcp_sendmsg_locked (43 samples, 4.54%)</title><rect x="54.8046%" y="501" width="4.5407%" height="15" fill="rgb(220,20,13)"/><text x="55.0546%" y="511.50">tcp_s..</text></g><g><title>tcp_rate_check_app_limited (1 samples, 0.11%)</title><rect x="59.2397%" y="485" width="0.1056%" height="15" fill="rgb(210,164,35)"/><text x="59.4897%" y="495.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (48 samples, 5.07%)</title><rect x="54.3823%" y="709" width="5.0686%" height="15" fill="rgb(248,109,41)"/><text x="54.6323%" y="719.50">&lt;mysql..</text></g><g><title>mysql::conn::Conn::_query (47 samples, 4.96%)</title><rect x="54.4879%" y="693" width="4.9630%" height="15" fill="rgb(238,23,50)"/><text x="54.7379%" y="703.50">mysql:..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (46 samples, 4.86%)</title><rect x="54.5935%" y="677" width="4.8574%" height="15" fill="rgb(211,48,49)"/><text x="54.8435%" y="687.50">mysql_..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (46 samples, 4.86%)</title><rect x="54.5935%" y="661" width="4.8574%" height="15" fill="rgb(223,36,21)"/><text x="54.8435%" y="671.50">std::i..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (46 samples, 4.86%)</title><rect x="54.5935%" y="645" width="4.8574%" height="15" fill="rgb(207,123,46)"/><text x="54.8435%" y="655.50">&lt;std::..</text></g><g><title>std::sys_common::net::TcpStream::write (46 samples, 4.86%)</title><rect x="54.5935%" y="629" width="4.8574%" height="15" fill="rgb(240,218,32)"/><text x="54.8435%" y="639.50">std::s..</text></g><g><title>__libc_send (46 samples, 4.86%)</title><rect x="54.5935%" y="613" width="4.8574%" height="15" fill="rgb(252,5,43)"/><text x="54.8435%" y="623.50">__libc..</text></g><g><title>entry_SYSCALL_64 (45 samples, 4.75%)</title><rect x="54.6990%" y="597" width="4.7518%" height="15" fill="rgb(252,84,19)"/><text x="54.9490%" y="607.50">entry_..</text></g><g><title>do_syscall_64 (45 samples, 4.75%)</title><rect x="54.6990%" y="581" width="4.7518%" height="15" fill="rgb(243,152,39)"/><text x="54.9490%" y="591.50">do_sys..</text></g><g><title>__x64_sys_sendto (45 samples, 4.75%)</title><rect x="54.6990%" y="565" width="4.7518%" height="15" fill="rgb(234,160,15)"/><text x="54.9490%" y="575.50">__x64_..</text></g><g><title>__sys_sendto (44 samples, 4.65%)</title><rect x="54.8046%" y="549" width="4.6463%" height="15" fill="rgb(237,34,20)"/><text x="55.0546%" y="559.50">__sys..</text></g><g><title>sockfd_lookup_light (1 samples, 0.11%)</title><rect x="59.3453%" y="533" width="0.1056%" height="15" fill="rgb(229,97,13)"/><text x="59.5953%" y="543.50"></text></g><g><title>__fget_light (1 samples, 0.11%)</title><rect x="59.3453%" y="517" width="0.1056%" height="15" fill="rgb(234,71,50)"/><text x="59.5953%" y="527.50"></text></g><g><title>__fget_files (1 samples, 0.11%)</title><rect x="59.3453%" y="501" width="0.1056%" height="15" fill="rgb(253,155,4)"/><text x="59.5953%" y="511.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="59.4509%" y="709" width="0.1056%" height="15" fill="rgb(222,185,37)"/><text x="59.7009%" y="719.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="59.7677%" y="597" width="0.1056%" height="15" fill="rgb(251,177,13)"/><text x="60.0177%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.42%)</title><rect x="59.5565%" y="629" width="0.4224%" height="15" fill="rgb(250,179,40)"/><text x="59.8065%" y="639.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (4 samples, 0.42%)</title><rect x="59.5565%" y="613" width="0.4224%" height="15" fill="rgb(242,44,2)"/><text x="59.8065%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="59.8733%" y="597" width="0.1056%" height="15" fill="rgb(216,177,13)"/><text x="60.1233%" y="607.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.11%)</title><rect x="59.8733%" y="581" width="0.1056%" height="15" fill="rgb(216,106,43)"/><text x="60.1233%" y="591.50"></text></g><g><title>_int_realloc (1 samples, 0.11%)</title><rect x="59.8733%" y="565" width="0.1056%" height="15" fill="rgb(216,183,2)"/><text x="60.1233%" y="575.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="59.8733%" y="549" width="0.1056%" height="15" fill="rgb(249,75,3)"/><text x="60.1233%" y="559.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (5 samples, 0.53%)</title><rect x="59.5565%" y="645" width="0.5280%" height="15" fill="rgb(219,67,39)"/><text x="59.8065%" y="655.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.11%)</title><rect x="59.9789%" y="629" width="0.1056%" height="15" fill="rgb(253,228,2)"/><text x="60.2289%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.11%)</title><rect x="59.9789%" y="613" width="0.1056%" height="15" fill="rgb(235,138,27)"/><text x="60.2289%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="59.9789%" y="597" width="0.1056%" height="15" fill="rgb(236,97,51)"/><text x="60.2289%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="59.9789%" y="581" width="0.1056%" height="15" fill="rgb(240,80,30)"/><text x="60.2289%" y="591.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="59.9789%" y="565" width="0.1056%" height="15" fill="rgb(230,178,19)"/><text x="60.2289%" y="575.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="60.0845%" y="629" width="0.1056%" height="15" fill="rgb(210,190,27)"/><text x="60.3345%" y="639.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="60.4013%" y="597" width="0.1056%" height="15" fill="rgb(222,107,31)"/><text x="60.6513%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (11 samples, 1.16%)</title><rect x="59.5565%" y="677" width="1.1616%" height="15" fill="rgb(216,127,34)"/><text x="59.8065%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Values as sql_parser::ast::display::AstDisplay&gt;::fmt (11 samples, 1.16%)</title><rect x="59.5565%" y="661" width="1.1616%" height="15" fill="rgb(234,116,52)"/><text x="59.8065%" y="671.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (6 samples, 0.63%)</title><rect x="60.0845%" y="645" width="0.6336%" height="15" fill="rgb(222,124,15)"/><text x="60.3345%" y="655.50"></text></g><g><title>core::fmt::write (5 samples, 0.53%)</title><rect x="60.1901%" y="629" width="0.5280%" height="15" fill="rgb(231,179,28)"/><text x="60.4401%" y="639.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (4 samples, 0.42%)</title><rect x="60.2957%" y="613" width="0.4224%" height="15" fill="rgb(226,93,45)"/><text x="60.5457%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.21%)</title><rect x="60.5069%" y="597" width="0.2112%" height="15" fill="rgb(215,8,51)"/><text x="60.7569%" y="607.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="60.6125%" y="581" width="0.1056%" height="15" fill="rgb(223,106,5)"/><text x="60.8625%" y="591.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="60.6125%" y="565" width="0.1056%" height="15" fill="rgb(250,191,5)"/><text x="60.8625%" y="575.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.11%)</title><rect x="60.7181%" y="597" width="0.1056%" height="15" fill="rgb(242,132,44)"/><text x="60.9681%" y="607.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.21%)</title><rect x="60.7181%" y="613" width="0.2112%" height="15" fill="rgb(251,152,29)"/><text x="60.9681%" y="623.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.11%)</title><rect x="60.8237%" y="597" width="0.1056%" height="15" fill="rgb(218,179,5)"/><text x="61.0737%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (10 samples, 1.06%)</title><rect x="60.7181%" y="661" width="1.0560%" height="15" fill="rgb(227,67,19)"/><text x="60.9681%" y="671.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (10 samples, 1.06%)</title><rect x="60.7181%" y="645" width="1.0560%" height="15" fill="rgb(233,119,31)"/><text x="60.9681%" y="655.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (10 samples, 1.06%)</title><rect x="60.7181%" y="629" width="1.0560%" height="15" fill="rgb(241,120,22)"/><text x="60.9681%" y="639.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (8 samples, 0.84%)</title><rect x="60.9293%" y="613" width="0.8448%" height="15" fill="rgb(224,102,30)"/><text x="61.1793%" y="623.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (8 samples, 0.84%)</title><rect x="60.9293%" y="597" width="0.8448%" height="15" fill="rgb(210,164,37)"/><text x="61.1793%" y="607.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (8 samples, 0.84%)</title><rect x="60.9293%" y="581" width="0.8448%" height="15" fill="rgb(226,191,16)"/><text x="61.1793%" y="591.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (7 samples, 0.74%)</title><rect x="61.0348%" y="565" width="0.7392%" height="15" fill="rgb(214,40,45)"/><text x="61.2848%" y="575.50"></text></g><g><title>__GI___libc_free (1 samples, 0.11%)</title><rect x="61.9852%" y="645" width="0.1056%" height="15" fill="rgb(244,29,26)"/><text x="62.2352%" y="655.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.21%)</title><rect x="62.0908%" y="645" width="0.2112%" height="15" fill="rgb(216,16,5)"/><text x="62.3408%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.21%)</title><rect x="62.3020%" y="645" width="0.2112%" height="15" fill="rgb(249,76,35)"/><text x="62.5520%" y="655.50"></text></g><g><title>core::fmt::write (30 samples, 3.17%)</title><rect x="59.5565%" y="709" width="3.1679%" height="15" fill="rgb(207,11,44)"/><text x="59.8065%" y="719.50">cor..</text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (30 samples, 3.17%)</title><rect x="59.5565%" y="693" width="3.1679%" height="15" fill="rgb(228,190,49)"/><text x="59.8065%" y="703.50">&lt;sq..</text></g><g><title>&lt;sql_parser::ast::defs::statement::InsertStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (19 samples, 2.01%)</title><rect x="60.7181%" y="677" width="2.0063%" height="15" fill="rgb(214,173,12)"/><text x="60.9681%" y="687.50">&lt;..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (9 samples, 0.95%)</title><rect x="61.7740%" y="661" width="0.9504%" height="15" fill="rgb(218,26,35)"/><text x="62.0240%" y="671.50"></text></g><g><title>core::fmt::write (2 samples, 0.21%)</title><rect x="62.5132%" y="645" width="0.2112%" height="15" fill="rgb(220,200,19)"/><text x="62.7632%" y="655.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.21%)</title><rect x="62.5132%" y="629" width="0.2112%" height="15" fill="rgb(239,95,49)"/><text x="62.7632%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.21%)</title><rect x="62.5132%" y="613" width="0.2112%" height="15" fill="rgb(235,85,53)"/><text x="62.7632%" y="623.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="62.6188%" y="597" width="0.1056%" height="15" fill="rgb(233,133,31)"/><text x="62.8688%" y="607.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="62.6188%" y="581" width="0.1056%" height="15" fill="rgb(218,25,20)"/><text x="62.8688%" y="591.50"></text></g><g><title>__GI___libc_free (1 samples, 0.11%)</title><rect x="62.8300%" y="645" width="0.1056%" height="15" fill="rgb(252,210,38)"/><text x="63.0800%" y="655.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.32%)</title><rect x="62.7244%" y="709" width="0.3168%" height="15" fill="rgb(242,134,21)"/><text x="62.9744%" y="719.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.32%)</title><rect x="62.7244%" y="693" width="0.3168%" height="15" fill="rgb(213,28,48)"/><text x="62.9744%" y="703.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.32%)</title><rect x="62.7244%" y="677" width="0.3168%" height="15" fill="rgb(250,196,2)"/><text x="62.9744%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.32%)</title><rect x="62.7244%" y="661" width="0.3168%" height="15" fill="rgb(227,5,17)"/><text x="62.9744%" y="671.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="62.9356%" y="645" width="0.1056%" height="15" fill="rgb(221,226,24)"/><text x="63.1856%" y="655.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (85 samples, 8.98%)</title><rect x="54.2767%" y="725" width="8.9757%" height="15" fill="rgb(211,5,48)"/><text x="54.5267%" y="735.50">&lt;decor::Shim ..</text></g><g><title>decor::helpers::answer_rows (2 samples, 0.21%)</title><rect x="63.0412%" y="709" width="0.2112%" height="15" fill="rgb(219,150,6)"/><text x="63.2912%" y="719.50"></text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::finish (2 samples, 0.21%)</title><rect x="63.0412%" y="693" width="0.2112%" height="15" fill="rgb(251,46,16)"/><text x="63.2912%" y="703.50"></text></g><g><title>msql_srv::writers::write_ok_packet (2 samples, 0.21%)</title><rect x="63.0412%" y="677" width="0.2112%" height="15" fill="rgb(220,204,40)"/><text x="63.2912%" y="687.50"></text></g><g><title>mysql_common::io::WriteMysqlExt::write_lenenc_int (2 samples, 0.21%)</title><rect x="63.0412%" y="661" width="0.2112%" height="15" fill="rgb(211,85,2)"/><text x="63.2912%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.11%)</title><rect x="63.1468%" y="645" width="0.1056%" height="15" fill="rgb(229,17,7)"/><text x="63.3968%" y="655.50"></text></g><g><title>__GI___libc_free (1 samples, 0.11%)</title><rect x="63.2524%" y="677" width="0.1056%" height="15" fill="rgb(239,72,28)"/><text x="63.5024%" y="687.50"></text></g><g><title>__rust_dealloc (1 samples, 0.11%)</title><rect x="63.3580%" y="677" width="0.1056%" height="15" fill="rgb(230,47,54)"/><text x="63.6080%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.32%)</title><rect x="63.2524%" y="693" width="0.3168%" height="15" fill="rgb(214,50,8)"/><text x="63.5024%" y="703.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.11%)</title><rect x="63.4636%" y="677" width="0.1056%" height="15" fill="rgb(216,198,43)"/><text x="63.7136%" y="687.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.11%)</title><rect x="63.4636%" y="661" width="0.1056%" height="15" fill="rgb(234,20,35)"/><text x="63.7136%" y="671.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.11%)</title><rect x="63.4636%" y="645" width="0.1056%" height="15" fill="rgb(254,45,19)"/><text x="63.7136%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="63.4636%" y="629" width="0.1056%" height="15" fill="rgb(219,14,44)"/><text x="63.7136%" y="639.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.11%)</title><rect x="63.4636%" y="613" width="0.1056%" height="15" fill="rgb(217,220,26)"/><text x="63.7136%" y="623.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.42%)</title><rect x="63.2524%" y="725" width="0.4224%" height="15" fill="rgb(213,158,28)"/><text x="63.5024%" y="735.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.42%)</title><rect x="63.2524%" y="709" width="0.4224%" height="15" fill="rgb(252,51,52)"/><text x="63.5024%" y="719.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="63.5692%" y="693" width="0.1056%" height="15" fill="rgb(246,89,16)"/><text x="63.8192%" y="703.50"></text></g><g><title>malloc_consolidate (1 samples, 0.11%)</title><rect x="63.5692%" y="677" width="0.1056%" height="15" fill="rgb(216,158,49)"/><text x="63.8192%" y="687.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.11%)</title><rect x="63.5692%" y="661" width="0.1056%" height="15" fill="rgb(236,107,19)"/><text x="63.8192%" y="671.50"></text></g><g><title>__pthread_enable_asynccancel (1 samples, 0.11%)</title><rect x="63.7804%" y="613" width="0.1056%" height="15" fill="rgb(228,185,30)"/><text x="64.0304%" y="623.50"></text></g><g><title>fput (1 samples, 0.11%)</title><rect x="63.8860%" y="549" width="0.1056%" height="15" fill="rgb(246,134,8)"/><text x="64.1360%" y="559.50"></text></g><g><title>fput_many (1 samples, 0.11%)</title><rect x="63.9916%" y="549" width="0.1056%" height="15" fill="rgb(214,143,50)"/><text x="64.2416%" y="559.50"></text></g><g><title>__kfree_skb (2 samples, 0.21%)</title><rect x="64.0971%" y="517" width="0.2112%" height="15" fill="rgb(228,75,8)"/><text x="64.3471%" y="527.50"></text></g><g><title>skb_release_head_state (2 samples, 0.21%)</title><rect x="64.0971%" y="501" width="0.2112%" height="15" fill="rgb(207,175,4)"/><text x="64.3471%" y="511.50"></text></g><g><title>dst_release (2 samples, 0.21%)</title><rect x="64.0971%" y="485" width="0.2112%" height="15" fill="rgb(205,108,24)"/><text x="64.3471%" y="495.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.11%)</title><rect x="64.3083%" y="517" width="0.1056%" height="15" fill="rgb(244,120,49)"/><text x="64.5583%" y="527.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.11%)</title><rect x="64.3083%" y="501" width="0.1056%" height="15" fill="rgb(223,47,38)"/><text x="64.5583%" y="511.50"></text></g><g><title>ip_output (1 samples, 0.11%)</title><rect x="64.3083%" y="485" width="0.1056%" height="15" fill="rgb(229,179,11)"/><text x="64.5583%" y="495.50"></text></g><g><title>ip_finish_output2 (1 samples, 0.11%)</title><rect x="64.3083%" y="469" width="0.1056%" height="15" fill="rgb(231,122,1)"/><text x="64.5583%" y="479.50"></text></g><g><title>__dev_queue_xmit (1 samples, 0.11%)</title><rect x="64.3083%" y="453" width="0.1056%" height="15" fill="rgb(245,119,9)"/><text x="64.5583%" y="463.50"></text></g><g><title>validate_xmit_xfrm (1 samples, 0.11%)</title><rect x="64.3083%" y="437" width="0.1056%" height="15" fill="rgb(241,163,25)"/><text x="64.5583%" y="447.50"></text></g><g><title>lock_sock_nested (1 samples, 0.11%)</title><rect x="64.4139%" y="517" width="0.1056%" height="15" fill="rgb(217,214,3)"/><text x="64.6639%" y="527.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.11%)</title><rect x="64.4139%" y="501" width="0.1056%" height="15" fill="rgb(240,86,28)"/><text x="64.6639%" y="511.50"></text></g><g><title>preempt_count_add (1 samples, 0.11%)</title><rect x="64.4139%" y="485" width="0.1056%" height="15" fill="rgb(215,47,9)"/><text x="64.6639%" y="495.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.11%)</title><rect x="64.5195%" y="501" width="0.1056%" height="15" fill="rgb(252,25,45)"/><text x="64.7695%" y="511.50"></text></g><g><title>dequeue_task_fair (1 samples, 0.11%)</title><rect x="64.6251%" y="437" width="0.1056%" height="15" fill="rgb(251,164,9)"/><text x="64.8751%" y="447.50"></text></g><g><title>dequeue_entity (1 samples, 0.11%)</title><rect x="64.6251%" y="421" width="0.1056%" height="15" fill="rgb(233,194,0)"/><text x="64.8751%" y="431.50"></text></g><g><title>update_load_avg (1 samples, 0.11%)</title><rect x="64.6251%" y="405" width="0.1056%" height="15" fill="rgb(249,111,24)"/><text x="64.8751%" y="415.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.11%)</title><rect x="64.6251%" y="389" width="0.1056%" height="15" fill="rgb(250,223,3)"/><text x="64.8751%" y="399.50"></text></g><g><title>pick_next_task_fair (2 samples, 0.21%)</title><rect x="64.7307%" y="437" width="0.2112%" height="15" fill="rgb(236,178,37)"/><text x="64.9807%" y="447.50"></text></g><g><title>newidle_balance (1 samples, 0.11%)</title><rect x="64.8363%" y="421" width="0.1056%" height="15" fill="rgb(241,158,50)"/><text x="65.0863%" y="431.50"></text></g><g><title>psi_task_change (1 samples, 0.11%)</title><rect x="64.9419%" y="437" width="0.1056%" height="15" fill="rgb(213,121,41)"/><text x="65.1919%" y="447.50"></text></g><g><title>put_prev_task_fair (1 samples, 0.11%)</title><rect x="65.0475%" y="437" width="0.1056%" height="15" fill="rgb(240,92,3)"/><text x="65.2975%" y="447.50"></text></g><g><title>put_prev_entity (1 samples, 0.11%)</title><rect x="65.0475%" y="421" width="0.1056%" height="15" fill="rgb(205,123,3)"/><text x="65.2975%" y="431.50"></text></g><g><title>uclamp_rq_dec_id (2 samples, 0.21%)</title><rect x="65.1531%" y="437" width="0.2112%" height="15" fill="rgb(205,97,47)"/><text x="65.4031%" y="447.50"></text></g><g><title>sk_wait_data (10 samples, 1.06%)</title><rect x="64.5195%" y="517" width="1.0560%" height="15" fill="rgb(247,152,14)"/><text x="64.7695%" y="527.50"></text></g><g><title>wait_woken (9 samples, 0.95%)</title><rect x="64.6251%" y="501" width="0.9504%" height="15" fill="rgb(248,195,53)"/><text x="64.8751%" y="511.50"></text></g><g><title>schedule_timeout (9 samples, 0.95%)</title><rect x="64.6251%" y="485" width="0.9504%" height="15" fill="rgb(226,201,16)"/><text x="64.8751%" y="495.50"></text></g><g><title>schedule (9 samples, 0.95%)</title><rect x="64.6251%" y="469" width="0.9504%" height="15" fill="rgb(205,98,0)"/><text x="64.8751%" y="479.50"></text></g><g><title>__schedule (9 samples, 0.95%)</title><rect x="64.6251%" y="453" width="0.9504%" height="15" fill="rgb(214,191,48)"/><text x="64.8751%" y="463.50"></text></g><g><title>update_rq_clock (2 samples, 0.21%)</title><rect x="65.3643%" y="437" width="0.2112%" height="15" fill="rgb(237,112,39)"/><text x="65.6143%" y="447.50"></text></g><g><title>update_irq_load_avg (1 samples, 0.11%)</title><rect x="65.4699%" y="421" width="0.1056%" height="15" fill="rgb(247,203,27)"/><text x="65.7199%" y="431.50"></text></g><g><title>_copy_to_iter (1 samples, 0.11%)</title><rect x="65.8923%" y="485" width="0.1056%" height="15" fill="rgb(235,124,28)"/><text x="66.1423%" y="495.50"></text></g><g><title>copy_user_enhanced_fast_string (1 samples, 0.11%)</title><rect x="65.8923%" y="469" width="0.1056%" height="15" fill="rgb(208,207,46)"/><text x="66.1423%" y="479.50"></text></g><g><title>__x64_sys_recvfrom (21 samples, 2.22%)</title><rect x="63.8860%" y="581" width="2.2175%" height="15" fill="rgb(234,176,4)"/><text x="64.1360%" y="591.50">_..</text></g><g><title>__sys_recvfrom (21 samples, 2.22%)</title><rect x="63.8860%" y="565" width="2.2175%" height="15" fill="rgb(230,133,28)"/><text x="64.1360%" y="575.50">_..</text></g><g><title>inet_recvmsg (19 samples, 2.01%)</title><rect x="64.0971%" y="549" width="2.0063%" height="15" fill="rgb(211,137,40)"/><text x="64.3471%" y="559.50">i..</text></g><g><title>tcp_recvmsg (19 samples, 2.01%)</title><rect x="64.0971%" y="533" width="2.0063%" height="15" fill="rgb(254,35,13)"/><text x="64.3471%" y="543.50">t..</text></g><g><title>skb_copy_datagram_iter (5 samples, 0.53%)</title><rect x="65.5755%" y="517" width="0.5280%" height="15" fill="rgb(225,49,51)"/><text x="65.8255%" y="527.50"></text></g><g><title>__skb_datagram_iter (4 samples, 0.42%)</title><rect x="65.6811%" y="501" width="0.4224%" height="15" fill="rgb(251,10,15)"/><text x="65.9311%" y="511.50"></text></g><g><title>simple_copy_to_iter (1 samples, 0.11%)</title><rect x="65.9979%" y="485" width="0.1056%" height="15" fill="rgb(228,207,15)"/><text x="66.2479%" y="495.50"></text></g><g><title>__check_object_size (1 samples, 0.11%)</title><rect x="65.9979%" y="469" width="0.1056%" height="15" fill="rgb(241,99,19)"/><text x="66.2479%" y="479.50"></text></g><g><title>do_syscall_64 (22 samples, 2.32%)</title><rect x="63.8860%" y="597" width="2.3231%" height="15" fill="rgb(207,104,49)"/><text x="64.1360%" y="607.50">d..</text></g><g><title>syscall_slow_exit_work (1 samples, 0.11%)</title><rect x="66.1035%" y="581" width="0.1056%" height="15" fill="rgb(234,99,18)"/><text x="66.3535%" y="591.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.11%)</title><rect x="66.1035%" y="565" width="0.1056%" height="15" fill="rgb(213,191,49)"/><text x="66.3535%" y="575.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (25 samples, 2.64%)</title><rect x="63.6748%" y="709" width="2.6399%" height="15" fill="rgb(210,226,19)"/><text x="63.9248%" y="719.50">&lt;s..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (24 samples, 2.53%)</title><rect x="63.7804%" y="693" width="2.5343%" height="15" fill="rgb(229,97,18)"/><text x="64.0304%" y="703.50">&lt;s..</text></g><g><title>std::sys_common::net::TcpStream::read (24 samples, 2.53%)</title><rect x="63.7804%" y="677" width="2.5343%" height="15" fill="rgb(211,167,15)"/><text x="64.0304%" y="687.50">st..</text></g><g><title>std::sys::unix::net::Socket::read (24 samples, 2.53%)</title><rect x="63.7804%" y="661" width="2.5343%" height="15" fill="rgb(210,169,34)"/><text x="64.0304%" y="671.50">st..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (24 samples, 2.53%)</title><rect x="63.7804%" y="645" width="2.5343%" height="15" fill="rgb(241,121,31)"/><text x="64.0304%" y="655.50">st..</text></g><g><title>__libc_recv (24 samples, 2.53%)</title><rect x="63.7804%" y="629" width="2.5343%" height="15" fill="rgb(232,40,11)"/><text x="64.0304%" y="639.50">__..</text></g><g><title>entry_SYSCALL_64 (23 samples, 2.43%)</title><rect x="63.8860%" y="613" width="2.4287%" height="15" fill="rgb(205,86,26)"/><text x="64.1360%" y="623.50">en..</text></g><g><title>prepare_exit_to_usermode (1 samples, 0.11%)</title><rect x="66.2091%" y="597" width="0.1056%" height="15" fill="rgb(231,126,28)"/><text x="66.4591%" y="607.50"></text></g><g><title>__memset_avx2_erms (1 samples, 0.11%)</title><rect x="66.3147%" y="709" width="0.1056%" height="15" fill="rgb(219,221,18)"/><text x="66.5647%" y="719.50"></text></g><g><title>msql_srv::packet::PacketReader&lt;R&gt;::next (28 samples, 2.96%)</title><rect x="63.6748%" y="725" width="2.9567%" height="15" fill="rgb(211,40,0)"/><text x="63.9248%" y="735.50">msq..</text></g><g><title>msql_srv::packet::packet (2 samples, 0.21%)</title><rect x="66.4203%" y="709" width="0.2112%" height="15" fill="rgb(239,85,43)"/><text x="66.6703%" y="719.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.11%)</title><rect x="66.8427%" y="565" width="0.1056%" height="15" fill="rgb(231,55,21)"/><text x="67.0927%" y="575.50"></text></g><g><title>lock_sock_nested (1 samples, 0.11%)</title><rect x="66.9483%" y="565" width="0.1056%" height="15" fill="rgb(225,184,43)"/><text x="67.1983%" y="575.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.11%)</title><rect x="66.9483%" y="549" width="0.1056%" height="15" fill="rgb(251,158,41)"/><text x="67.1983%" y="559.50"></text></g><g><title>preempt_count_add (1 samples, 0.11%)</title><rect x="66.9483%" y="533" width="0.1056%" height="15" fill="rgb(234,159,37)"/><text x="67.1983%" y="543.50"></text></g><g><title>__dev_queue_xmit (1 samples, 0.11%)</title><rect x="67.4762%" y="453" width="0.1056%" height="15" fill="rgb(216,204,22)"/><text x="67.7262%" y="463.50"></text></g><g><title>dev_hard_start_xmit (1 samples, 0.11%)</title><rect x="67.4762%" y="437" width="0.1056%" height="15" fill="rgb(214,17,3)"/><text x="67.7262%" y="447.50"></text></g><g><title>loopback_xmit (1 samples, 0.11%)</title><rect x="67.4762%" y="421" width="0.1056%" height="15" fill="rgb(212,111,17)"/><text x="67.7262%" y="431.50"></text></g><g><title>netif_rx (1 samples, 0.11%)</title><rect x="67.4762%" y="405" width="0.1056%" height="15" fill="rgb(221,157,24)"/><text x="67.7262%" y="415.50"></text></g><g><title>netif_rx_internal (1 samples, 0.11%)</title><rect x="67.4762%" y="389" width="0.1056%" height="15" fill="rgb(252,16,13)"/><text x="67.7262%" y="399.50"></text></g><g><title>preempt_count_add (1 samples, 0.11%)</title><rect x="67.4762%" y="373" width="0.1056%" height="15" fill="rgb(221,62,2)"/><text x="67.7262%" y="383.50"></text></g><g><title>irqtime_account_irq (1 samples, 0.11%)</title><rect x="67.5818%" y="389" width="0.1056%" height="15" fill="rgb(247,87,22)"/><text x="67.8318%" y="399.50"></text></g><g><title>__netif_receive_skb_core (2 samples, 0.21%)</title><rect x="67.6874%" y="341" width="0.2112%" height="15" fill="rgb(215,73,9)"/><text x="67.9374%" y="351.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.11%)</title><rect x="68.2154%" y="261" width="0.1056%" height="15" fill="rgb(207,175,33)"/><text x="68.4654%" y="271.50"></text></g><g><title>preempt_count_add (1 samples, 0.11%)</title><rect x="68.2154%" y="245" width="0.1056%" height="15" fill="rgb(243,129,54)"/><text x="68.4654%" y="255.50"></text></g><g><title>psi_task_change (3 samples, 0.32%)</title><rect x="68.7434%" y="149" width="0.3168%" height="15" fill="rgb(227,119,45)"/><text x="68.9934%" y="159.50"></text></g><g><title>psi_group_change (3 samples, 0.32%)</title><rect x="68.7434%" y="133" width="0.3168%" height="15" fill="rgb(205,109,36)"/><text x="68.9934%" y="143.50"></text></g><g><title>record_times (2 samples, 0.21%)</title><rect x="68.8490%" y="117" width="0.2112%" height="15" fill="rgb(205,6,39)"/><text x="69.0990%" y="127.50"></text></g><g><title>enqueue_task (5 samples, 0.53%)</title><rect x="68.7434%" y="165" width="0.5280%" height="15" fill="rgb(221,32,16)"/><text x="68.9934%" y="175.50"></text></g><g><title>uclamp_rq_inc_id (2 samples, 0.21%)</title><rect x="69.0602%" y="149" width="0.2112%" height="15" fill="rgb(228,144,50)"/><text x="69.3102%" y="159.50"></text></g><g><title>preempt_count_sub (1 samples, 0.11%)</title><rect x="69.2714%" y="165" width="0.1056%" height="15" fill="rgb(229,201,53)"/><text x="69.5214%" y="175.50"></text></g><g><title>try_to_wake_up (8 samples, 0.84%)</title><rect x="68.6378%" y="181" width="0.8448%" height="15" fill="rgb(249,153,27)"/><text x="68.8878%" y="191.50"></text></g><g><title>update_rq_clock (1 samples, 0.11%)</title><rect x="69.3770%" y="165" width="0.1056%" height="15" fill="rgb(227,106,25)"/><text x="69.6270%" y="175.50"></text></g><g><title>sock_def_readable (10 samples, 1.06%)</title><rect x="68.5322%" y="229" width="1.0560%" height="15" fill="rgb(230,65,29)"/><text x="68.7822%" y="239.50"></text></g><g><title>__wake_up_common_lock (9 samples, 0.95%)</title><rect x="68.6378%" y="213" width="0.9504%" height="15" fill="rgb(221,57,46)"/><text x="68.8878%" y="223.50"></text></g><g><title>__wake_up_common (9 samples, 0.95%)</title><rect x="68.6378%" y="197" width="0.9504%" height="15" fill="rgb(229,161,17)"/><text x="68.8878%" y="207.50"></text></g><g><title>woken_wake_function (1 samples, 0.11%)</title><rect x="69.4826%" y="181" width="0.1056%" height="15" fill="rgb(222,213,11)"/><text x="69.7326%" y="191.50"></text></g><g><title>__netif_receive_skb_one_core (21 samples, 2.22%)</title><rect x="67.6874%" y="357" width="2.2175%" height="15" fill="rgb(235,35,13)"/><text x="67.9374%" y="367.50">_..</text></g><g><title>ip_rcv (19 samples, 2.01%)</title><rect x="67.8986%" y="341" width="2.0063%" height="15" fill="rgb(233,158,34)"/><text x="68.1486%" y="351.50">i..</text></g><g><title>ip_local_deliver (19 samples, 2.01%)</title><rect x="67.8986%" y="325" width="2.0063%" height="15" fill="rgb(215,151,48)"/><text x="68.1486%" y="335.50">i..</text></g><g><title>ip_local_deliver_finish (19 samples, 2.01%)</title><rect x="67.8986%" y="309" width="2.0063%" height="15" fill="rgb(229,84,14)"/><text x="68.1486%" y="319.50">i..</text></g><g><title>ip_protocol_deliver_rcu (19 samples, 2.01%)</title><rect x="67.8986%" y="293" width="2.0063%" height="15" fill="rgb(229,68,14)"/><text x="68.1486%" y="303.50">i..</text></g><g><title>tcp_v4_rcv (17 samples, 1.80%)</title><rect x="68.1098%" y="277" width="1.7951%" height="15" fill="rgb(243,106,26)"/><text x="68.3598%" y="287.50">t..</text></g><g><title>tcp_v4_do_rcv (15 samples, 1.58%)</title><rect x="68.3210%" y="261" width="1.5839%" height="15" fill="rgb(206,45,38)"/><text x="68.5710%" y="271.50"></text></g><g><title>tcp_rcv_established (14 samples, 1.48%)</title><rect x="68.4266%" y="245" width="1.4784%" height="15" fill="rgb(226,6,15)"/><text x="68.6766%" y="255.50"></text></g><g><title>tcp_ack (3 samples, 0.32%)</title><rect x="69.5882%" y="229" width="0.3168%" height="15" fill="rgb(232,22,54)"/><text x="69.8382%" y="239.50"></text></g><g><title>bictcp_cong_avoid (1 samples, 0.11%)</title><rect x="69.7994%" y="213" width="0.1056%" height="15" fill="rgb(229,222,32)"/><text x="70.0494%" y="223.50"></text></g><g><title>ip_finish_output2 (24 samples, 2.53%)</title><rect x="67.4762%" y="469" width="2.5343%" height="15" fill="rgb(228,62,29)"/><text x="67.7262%" y="479.50">ip..</text></g><g><title>__local_bh_enable_ip (23 samples, 2.43%)</title><rect x="67.5818%" y="453" width="2.4287%" height="15" fill="rgb(251,103,34)"/><text x="67.8318%" y="463.50">__..</text></g><g><title>do_softirq (23 samples, 2.43%)</title><rect x="67.5818%" y="437" width="2.4287%" height="15" fill="rgb(233,12,30)"/><text x="67.8318%" y="447.50">do..</text></g><g><title>do_softirq_own_stack (23 samples, 2.43%)</title><rect x="67.5818%" y="421" width="2.4287%" height="15" fill="rgb(238,52,0)"/><text x="67.8318%" y="431.50">do..</text></g><g><title>__do_softirq (23 samples, 2.43%)</title><rect x="67.5818%" y="405" width="2.4287%" height="15" fill="rgb(223,98,5)"/><text x="67.8318%" y="415.50">__..</text></g><g><title>net_rx_action (22 samples, 2.32%)</title><rect x="67.6874%" y="389" width="2.3231%" height="15" fill="rgb(228,75,37)"/><text x="67.9374%" y="399.50">n..</text></g><g><title>process_backlog (22 samples, 2.32%)</title><rect x="67.6874%" y="373" width="2.3231%" height="15" fill="rgb(205,115,49)"/><text x="67.9374%" y="383.50">p..</text></g><g><title>_raw_spin_unlock (1 samples, 0.11%)</title><rect x="69.9050%" y="357" width="0.1056%" height="15" fill="rgb(250,154,43)"/><text x="70.1550%" y="367.50"></text></g><g><title>__tcp_transmit_skb (28 samples, 2.96%)</title><rect x="67.2650%" y="517" width="2.9567%" height="15" fill="rgb(226,43,29)"/><text x="67.5150%" y="527.50">__t..</text></g><g><title>__ip_queue_xmit (27 samples, 2.85%)</title><rect x="67.3706%" y="501" width="2.8511%" height="15" fill="rgb(249,228,39)"/><text x="67.6206%" y="511.50">__..</text></g><g><title>ip_output (27 samples, 2.85%)</title><rect x="67.3706%" y="485" width="2.8511%" height="15" fill="rgb(216,79,43)"/><text x="67.6206%" y="495.50">ip..</text></g><g><title>ip_finish_output (2 samples, 0.21%)</title><rect x="70.0106%" y="469" width="0.2112%" height="15" fill="rgb(228,95,12)"/><text x="70.2606%" y="479.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (2 samples, 0.21%)</title><rect x="70.0106%" y="453" width="0.2112%" height="15" fill="rgb(249,221,15)"/><text x="70.2606%" y="463.50"></text></g><g><title>ktime_get (1 samples, 0.11%)</title><rect x="70.2218%" y="517" width="0.1056%" height="15" fill="rgb(233,34,13)"/><text x="70.4718%" y="527.50"></text></g><g><title>__tcp_push_pending_frames (30 samples, 3.17%)</title><rect x="67.2650%" y="549" width="3.1679%" height="15" fill="rgb(214,103,39)"/><text x="67.5150%" y="559.50">__t..</text></g><g><title>tcp_write_xmit (30 samples, 3.17%)</title><rect x="67.2650%" y="533" width="3.1679%" height="15" fill="rgb(251,126,39)"/><text x="67.5150%" y="543.50">tcp..</text></g><g><title>tcp_schedule_loss_probe.part.0 (1 samples, 0.11%)</title><rect x="70.3273%" y="517" width="0.1056%" height="15" fill="rgb(214,216,36)"/><text x="70.5773%" y="527.50"></text></g><g><title>sk_reset_timer (1 samples, 0.11%)</title><rect x="70.3273%" y="501" width="0.1056%" height="15" fill="rgb(220,221,8)"/><text x="70.5773%" y="511.50"></text></g><g><title>__mod_timer (1 samples, 0.11%)</title><rect x="70.3273%" y="485" width="0.1056%" height="15" fill="rgb(240,216,3)"/><text x="70.5773%" y="495.50"></text></g><g><title>sk_stream_alloc_skb (1 samples, 0.11%)</title><rect x="70.4329%" y="549" width="0.1056%" height="15" fill="rgb(232,218,17)"/><text x="70.6829%" y="559.50"></text></g><g><title>__alloc_skb (1 samples, 0.11%)</title><rect x="70.4329%" y="533" width="0.1056%" height="15" fill="rgb(229,163,45)"/><text x="70.6829%" y="543.50"></text></g><g><title>kmem_cache_alloc_node (1 samples, 0.11%)</title><rect x="70.4329%" y="517" width="0.1056%" height="15" fill="rgb(231,110,42)"/><text x="70.6829%" y="527.50"></text></g><g><title>skb_entail (1 samples, 0.11%)</title><rect x="70.5385%" y="549" width="0.1056%" height="15" fill="rgb(208,170,48)"/><text x="70.7885%" y="559.50"></text></g><g><title>sock_sendmsg (37 samples, 3.91%)</title><rect x="66.8427%" y="597" width="3.9071%" height="15" fill="rgb(239,116,25)"/><text x="67.0927%" y="607.50">sock..</text></g><g><title>tcp_sendmsg (37 samples, 3.91%)</title><rect x="66.8427%" y="581" width="3.9071%" height="15" fill="rgb(219,200,50)"/><text x="67.0927%" y="591.50">tcp_..</text></g><g><title>tcp_sendmsg_locked (35 samples, 3.70%)</title><rect x="67.0539%" y="565" width="3.6959%" height="15" fill="rgb(245,200,0)"/><text x="67.3039%" y="575.50">tcp_..</text></g><g><title>tcp_rate_check_app_limited (1 samples, 0.11%)</title><rect x="70.6441%" y="549" width="0.1056%" height="15" fill="rgb(245,119,33)"/><text x="70.8941%" y="559.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (40 samples, 4.22%)</title><rect x="66.6315%" y="709" width="4.2239%" height="15" fill="rgb(231,125,12)"/><text x="66.8815%" y="719.50">&lt;std:..</text></g><g><title>std::sys_common::net::TcpStream::write (40 samples, 4.22%)</title><rect x="66.6315%" y="693" width="4.2239%" height="15" fill="rgb(216,96,41)"/><text x="66.8815%" y="703.50">std::..</text></g><g><title>__libc_send (40 samples, 4.22%)</title><rect x="66.6315%" y="677" width="4.2239%" height="15" fill="rgb(248,43,45)"/><text x="66.8815%" y="687.50">__lib..</text></g><g><title>entry_SYSCALL_64 (40 samples, 4.22%)</title><rect x="66.6315%" y="661" width="4.2239%" height="15" fill="rgb(217,222,7)"/><text x="66.8815%" y="671.50">entry..</text></g><g><title>do_syscall_64 (40 samples, 4.22%)</title><rect x="66.6315%" y="645" width="4.2239%" height="15" fill="rgb(233,28,6)"/><text x="66.8815%" y="655.50">do_sy..</text></g><g><title>__x64_sys_sendto (40 samples, 4.22%)</title><rect x="66.6315%" y="629" width="4.2239%" height="15" fill="rgb(231,218,15)"/><text x="66.8815%" y="639.50">__x64..</text></g><g><title>__sys_sendto (39 samples, 4.12%)</title><rect x="66.7371%" y="613" width="4.1183%" height="15" fill="rgb(226,171,48)"/><text x="66.9871%" y="623.50">__sy..</text></g><g><title>sockfd_lookup_light (1 samples, 0.11%)</title><rect x="70.7497%" y="597" width="0.1056%" height="15" fill="rgb(235,201,9)"/><text x="70.9997%" y="607.50"></text></g><g><title>__fget_light (1 samples, 0.11%)</title><rect x="70.7497%" y="581" width="0.1056%" height="15" fill="rgb(217,80,15)"/><text x="70.9997%" y="591.50"></text></g><g><title>__fget_files (1 samples, 0.11%)</title><rect x="70.7497%" y="565" width="0.1056%" height="15" fill="rgb(219,152,8)"/><text x="70.9997%" y="575.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf::BufGuard::consume (1 samples, 0.11%)</title><rect x="70.8553%" y="709" width="0.1056%" height="15" fill="rgb(243,107,38)"/><text x="71.1053%" y="719.50"></text></g><g><title>decor::Shim::run_on_tcp (159 samples, 16.79%)</title><rect x="54.2767%" y="757" width="16.7899%" height="15" fill="rgb(231,17,5)"/><text x="54.5267%" y="767.50">decor::Shim::run_on_tcp</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (159 samples, 16.79%)</title><rect x="54.2767%" y="741" width="16.7899%" height="15" fill="rgb(209,25,54)"/><text x="54.5267%" y="751.50">msql_srv::MysqlIntermediar..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (42 samples, 4.44%)</title><rect x="66.6315%" y="725" width="4.4351%" height="15" fill="rgb(219,0,2)"/><text x="66.8815%" y="735.50">std::..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf::BufGuard::done (1 samples, 0.11%)</title><rect x="70.9609%" y="709" width="0.1056%" height="15" fill="rgb(246,9,5)"/><text x="71.2109%" y="719.50"></text></g><g><title>__GI___clone (161 samples, 17.00%)</title><rect x="54.1711%" y="869" width="17.0011%" height="15" fill="rgb(226,159,4)"/><text x="54.4211%" y="879.50">__GI___clone</text></g><g><title>start_thread (161 samples, 17.00%)</title><rect x="54.1711%" y="853" width="17.0011%" height="15" fill="rgb(219,175,34)"/><text x="54.4211%" y="863.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (160 samples, 16.90%)</title><rect x="54.2767%" y="837" width="16.8955%" height="15" fill="rgb(236,10,46)"/><text x="54.5267%" y="847.50">std::sys::unix::thread::Th..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (160 samples, 16.90%)</title><rect x="54.2767%" y="821" width="16.8955%" height="15" fill="rgb(240,211,16)"/><text x="54.5267%" y="831.50">&lt;alloc::boxed::Box&lt;F&gt; as c..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (160 samples, 16.90%)</title><rect x="54.2767%" y="805" width="16.8955%" height="15" fill="rgb(205,3,43)"/><text x="54.5267%" y="815.50">&lt;alloc::boxed::Box&lt;F&gt; as c..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (160 samples, 16.90%)</title><rect x="54.2767%" y="789" width="16.8955%" height="15" fill="rgb(245,7,22)"/><text x="54.5267%" y="799.50">core::ops::function::FnOnc..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (160 samples, 16.90%)</title><rect x="54.2767%" y="773" width="16.8955%" height="15" fill="rgb(239,132,32)"/><text x="54.5267%" y="783.50">std::sys_common::backtrace..</text></g><g><title>mysql::conn::Conn::new (1 samples, 0.11%)</title><rect x="71.0665%" y="757" width="0.1056%" height="15" fill="rgb(228,202,34)"/><text x="71.3165%" y="767.50"></text></g><g><title>mysql::conn::opts::from_url (1 samples, 0.11%)</title><rect x="71.0665%" y="741" width="0.1056%" height="15" fill="rgb(254,200,22)"/><text x="71.3165%" y="751.50"></text></g><g><title>url::host::Host::parse (1 samples, 0.11%)</title><rect x="71.0665%" y="725" width="0.1056%" height="15" fill="rgb(219,10,39)"/><text x="71.3165%" y="735.50"></text></g><g><title>idna::domain_to_ascii (1 samples, 0.11%)</title><rect x="71.0665%" y="709" width="0.1056%" height="15" fill="rgb(226,210,39)"/><text x="71.3165%" y="719.50"></text></g><g><title>idna::uts46::Config::to_ascii (1 samples, 0.11%)</title><rect x="71.0665%" y="693" width="0.1056%" height="15" fill="rgb(208,219,16)"/><text x="71.3165%" y="703.50"></text></g><g><title>idna::uts46::processing (1 samples, 0.11%)</title><rect x="71.0665%" y="677" width="0.1056%" height="15" fill="rgb(216,158,51)"/><text x="71.3165%" y="687.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="71.0665%" y="661" width="0.1056%" height="15" fill="rgb(233,14,44)"/><text x="71.3165%" y="671.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="71.0665%" y="645" width="0.1056%" height="15" fill="rgb(237,97,39)"/><text x="71.3165%" y="655.50"></text></g><g><title>__rdl_alloc (1 samples, 0.11%)</title><rect x="71.1721%" y="869" width="0.1056%" height="15" fill="rgb(218,198,43)"/><text x="71.4221%" y="879.50"></text></g><g><title>_edata (1 samples, 0.11%)</title><rect x="71.2777%" y="869" width="0.1056%" height="15" fill="rgb(231,104,20)"/><text x="71.5277%" y="879.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="71.2777%" y="853" width="0.1056%" height="15" fill="rgb(254,36,13)"/><text x="71.5277%" y="863.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.11%)</title><rect x="71.3833%" y="677" width="0.1056%" height="15" fill="rgb(248,14,50)"/><text x="71.6333%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="71.3833%" y="661" width="0.1056%" height="15" fill="rgb(217,107,29)"/><text x="71.6333%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="71.3833%" y="645" width="0.1056%" height="15" fill="rgb(251,169,33)"/><text x="71.6333%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="71.3833%" y="629" width="0.1056%" height="15" fill="rgb(217,108,32)"/><text x="71.6333%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.11%)</title><rect x="71.3833%" y="613" width="0.1056%" height="15" fill="rgb(219,66,42)"/><text x="71.6333%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.11%)</title><rect x="71.3833%" y="597" width="0.1056%" height="15" fill="rgb(206,180,7)"/><text x="71.6333%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="71.3833%" y="581" width="0.1056%" height="15" fill="rgb(208,226,31)"/><text x="71.6333%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="71.3833%" y="565" width="0.1056%" height="15" fill="rgb(218,26,49)"/><text x="71.6333%" y="575.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="71.3833%" y="549" width="0.1056%" height="15" fill="rgb(233,197,48)"/><text x="71.6333%" y="559.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.11%)</title><rect x="71.4889%" y="677" width="0.1056%" height="15" fill="rgb(252,181,51)"/><text x="71.7389%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.11%)</title><rect x="71.4889%" y="661" width="0.1056%" height="15" fill="rgb(253,90,19)"/><text x="71.7389%" y="671.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.11%)</title><rect x="71.4889%" y="645" width="0.1056%" height="15" fill="rgb(215,171,30)"/><text x="71.7389%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.11%)</title><rect x="71.4889%" y="629" width="0.1056%" height="15" fill="rgb(214,222,9)"/><text x="71.7389%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.11%)</title><rect x="71.4889%" y="613" width="0.1056%" height="15" fill="rgb(223,3,22)"/><text x="71.7389%" y="623.50"></text></g><g><title>core::iter::adapters::map_fold::{{closure}} (1 samples, 0.11%)</title><rect x="71.4889%" y="597" width="0.1056%" height="15" fill="rgb(225,196,46)"/><text x="71.7389%" y="607.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.11%)</title><rect x="71.4889%" y="581" width="0.1056%" height="15" fill="rgb(209,110,37)"/><text x="71.7389%" y="591.50"></text></g><g><title>&lt;usize as core::ops::arith::Add&gt;::add (1 samples, 0.11%)</title><rect x="71.4889%" y="565" width="0.1056%" height="15" fill="rgb(249,89,12)"/><text x="71.7389%" y="575.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="71.5945%" y="645" width="0.1056%" height="15" fill="rgb(226,27,33)"/><text x="71.8445%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="71.5945%" y="629" width="0.1056%" height="15" fill="rgb(213,82,22)"/><text x="71.8445%" y="639.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.11%)</title><rect x="71.5945%" y="613" width="0.1056%" height="15" fill="rgb(248,140,0)"/><text x="71.8445%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.11%)</title><rect x="71.5945%" y="597" width="0.1056%" height="15" fill="rgb(228,106,3)"/><text x="71.8445%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.11%)</title><rect x="71.5945%" y="581" width="0.1056%" height="15" fill="rgb(209,23,37)"/><text x="71.8445%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.11%)</title><rect x="71.5945%" y="565" width="0.1056%" height="15" fill="rgb(241,93,50)"/><text x="71.8445%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.11%)</title><rect x="71.5945%" y="549" width="0.1056%" height="15" fill="rgb(253,46,43)"/><text x="71.8445%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="71.5945%" y="533" width="0.1056%" height="15" fill="rgb(226,206,43)"/><text x="71.8445%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.11%)</title><rect x="71.5945%" y="517" width="0.1056%" height="15" fill="rgb(217,54,7)"/><text x="71.8445%" y="527.50"></text></g><g><title>alloc::fmt::format (4 samples, 0.42%)</title><rect x="71.3833%" y="693" width="0.4224%" height="15" fill="rgb(223,5,52)"/><text x="71.6333%" y="703.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.21%)</title><rect x="71.5945%" y="677" width="0.2112%" height="15" fill="rgb(206,52,46)"/><text x="71.8445%" y="687.50"></text></g><g><title>core::fmt::write (2 samples, 0.21%)</title><rect x="71.5945%" y="661" width="0.2112%" height="15" fill="rgb(253,136,11)"/><text x="71.8445%" y="671.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.11%)</title><rect x="71.7001%" y="645" width="0.1056%" height="15" fill="rgb(208,106,33)"/><text x="71.9501%" y="655.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.11%)</title><rect x="71.7001%" y="629" width="0.1056%" height="15" fill="rgb(206,54,4)"/><text x="71.9501%" y="639.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.11%)</title><rect x="71.7001%" y="613" width="0.1056%" height="15" fill="rgb(213,3,15)"/><text x="71.9501%" y="623.50"></text></g><g><title>[libhwloc.so.15.2.0] (5 samples, 0.53%)</title><rect x="71.8057%" y="613" width="0.5280%" height="15" fill="rgb(252,211,39)"/><text x="72.0557%" y="623.50"></text></g><g><title>[libhwloc.so.15.2.0] (5 samples, 0.53%)</title><rect x="71.8057%" y="597" width="0.5280%" height="15" fill="rgb(223,6,36)"/><text x="72.0557%" y="607.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="72.2281%" y="581" width="0.1056%" height="15" fill="rgb(252,169,45)"/><text x="72.4781%" y="591.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="72.2281%" y="565" width="0.1056%" height="15" fill="rgb(212,48,26)"/><text x="72.4781%" y="575.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="72.2281%" y="549" width="0.1056%" height="15" fill="rgb(251,102,48)"/><text x="72.4781%" y="559.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="72.2281%" y="533" width="0.1056%" height="15" fill="rgb(243,208,16)"/><text x="72.4781%" y="543.50"></text></g><g><title>page_fault (1 samples, 0.11%)</title><rect x="72.2281%" y="517" width="0.1056%" height="15" fill="rgb(219,96,24)"/><text x="72.4781%" y="527.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.11%)</title><rect x="72.2281%" y="501" width="0.1056%" height="15" fill="rgb(219,33,29)"/><text x="72.4781%" y="511.50"></text></g><g><title>handle_mm_fault (1 samples, 0.11%)</title><rect x="72.2281%" y="485" width="0.1056%" height="15" fill="rgb(223,176,5)"/><text x="72.4781%" y="495.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.11%)</title><rect x="72.2281%" y="469" width="0.1056%" height="15" fill="rgb(228,140,14)"/><text x="72.4781%" y="479.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.11%)</title><rect x="72.2281%" y="453" width="0.1056%" height="15" fill="rgb(217,179,31)"/><text x="72.4781%" y="463.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.11%)</title><rect x="72.2281%" y="437" width="0.1056%" height="15" fill="rgb(230,9,30)"/><text x="72.4781%" y="447.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.11%)</title><rect x="72.2281%" y="421" width="0.1056%" height="15" fill="rgb(230,136,20)"/><text x="72.4781%" y="431.50"></text></g><g><title>__mmdrop (1 samples, 0.11%)</title><rect x="72.9673%" y="405" width="0.1056%" height="15" fill="rgb(215,210,22)"/><text x="73.2173%" y="415.50"></text></g><g><title>__free_pages_ok (1 samples, 0.11%)</title><rect x="72.9673%" y="389" width="0.1056%" height="15" fill="rgb(218,43,5)"/><text x="73.2173%" y="399.50"></text></g><g><title>free_one_page (1 samples, 0.11%)</title><rect x="72.9673%" y="373" width="0.1056%" height="15" fill="rgb(216,11,5)"/><text x="73.2173%" y="383.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.11%)</title><rect x="72.9673%" y="357" width="0.1056%" height="15" fill="rgb(209,82,29)"/><text x="73.2173%" y="367.50"></text></g><g><title>__x64_sys_sched_setaffinity (237 samples, 25.03%)</title><rect x="72.6505%" y="549" width="25.0264%" height="15" fill="rgb(244,115,12)"/><text x="72.9005%" y="559.50">__x64_sys_sched_setaffinity</text></g><g><title>sched_setaffinity (236 samples, 24.92%)</title><rect x="72.7561%" y="533" width="24.9208%" height="15" fill="rgb(222,82,18)"/><text x="73.0061%" y="543.50">sched_setaffinity</text></g><g><title>__set_cpus_allowed_ptr (235 samples, 24.82%)</title><rect x="72.8617%" y="517" width="24.8152%" height="15" fill="rgb(249,227,8)"/><text x="73.1117%" y="527.50">__set_cpus_allowed_ptr</text></g><g><title>stop_one_cpu (235 samples, 24.82%)</title><rect x="72.8617%" y="501" width="24.8152%" height="15" fill="rgb(253,141,45)"/><text x="73.1117%" y="511.50">stop_one_cpu</text></g><g><title>cpu_stop_queue_work (235 samples, 24.82%)</title><rect x="72.8617%" y="485" width="24.8152%" height="15" fill="rgb(234,184,4)"/><text x="73.1117%" y="495.50">cpu_stop_queue_work</text></g><g><title>preempt_schedule_thunk (235 samples, 24.82%)</title><rect x="72.8617%" y="469" width="24.8152%" height="15" fill="rgb(218,194,23)"/><text x="73.1117%" y="479.50">preempt_schedule_thunk</text></g><g><title>preempt_schedule_common (235 samples, 24.82%)</title><rect x="72.8617%" y="453" width="24.8152%" height="15" fill="rgb(235,66,41)"/><text x="73.1117%" y="463.50">preempt_schedule_common</text></g><g><title>__schedule (235 samples, 24.82%)</title><rect x="72.8617%" y="437" width="24.8152%" height="15" fill="rgb(245,217,1)"/><text x="73.1117%" y="447.50">__schedule</text></g><g><title>finish_task_switch (235 samples, 24.82%)</title><rect x="72.8617%" y="421" width="24.8152%" height="15" fill="rgb(229,91,1)"/><text x="73.1117%" y="431.50">finish_task_switch</text></g><g><title>__perf_event_task_sched_in (233 samples, 24.60%)</title><rect x="73.0729%" y="405" width="24.6040%" height="15" fill="rgb(207,101,30)"/><text x="73.3229%" y="415.50">__perf_event_task_sched_in</text></g><g><title>__intel_pmu_enable_all.constprop.0 (233 samples, 24.60%)</title><rect x="73.0729%" y="389" width="24.6040%" height="15" fill="rgb(223,82,49)"/><text x="73.3229%" y="399.50">__intel_pmu_enable_all.constprop.0</text></g><g><title>native_write_msr (233 samples, 24.60%)</title><rect x="73.0729%" y="373" width="24.6040%" height="15" fill="rgb(218,167,17)"/><text x="73.3229%" y="383.50">native_write_msr</text></g><g><title>do_syscall_64 (238 samples, 25.13%)</title><rect x="72.6505%" y="565" width="25.1320%" height="15" fill="rgb(208,103,14)"/><text x="72.9005%" y="575.50">do_syscall_64</text></g><g><title>syscall_slow_exit_work (1 samples, 0.11%)</title><rect x="97.6769%" y="549" width="0.1056%" height="15" fill="rgb(238,20,8)"/><text x="97.9269%" y="559.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.11%)</title><rect x="97.6769%" y="533" width="0.1056%" height="15" fill="rgb(218,80,54)"/><text x="97.9269%" y="543.50"></text></g><g><title>__GI___sched_setaffinity_new (242 samples, 25.55%)</title><rect x="72.3337%" y="597" width="25.5544%" height="15" fill="rgb(240,144,17)"/><text x="72.5837%" y="607.50">__GI___sched_setaffinity_new</text></g><g><title>entry_SYSCALL_64 (239 samples, 25.24%)</title><rect x="72.6505%" y="581" width="25.2376%" height="15" fill="rgb(245,27,50)"/><text x="72.9005%" y="591.50">entry_SYSCALL_64</text></g><g><title>prepare_exit_to_usermode (1 samples, 0.11%)</title><rect x="97.7825%" y="565" width="0.1056%" height="15" fill="rgb(251,51,7)"/><text x="98.0325%" y="575.50"></text></g><g><title>switch_fpu_return (1 samples, 0.11%)</title><rect x="97.7825%" y="549" width="0.1056%" height="15" fill="rgb(245,217,29)"/><text x="98.0325%" y="559.50"></text></g><g><title>copy_kernel_to_fpregs (1 samples, 0.11%)</title><rect x="97.7825%" y="533" width="0.1056%" height="15" fill="rgb(221,176,29)"/><text x="98.0325%" y="543.50"></text></g><g><title>[libhwloc.so.15.2.0] (248 samples, 26.19%)</title><rect x="71.8057%" y="629" width="26.1880%" height="15" fill="rgb(212,180,24)"/><text x="72.0557%" y="639.50">[libhwloc.so.15.2.0]</text></g><g><title>hwloc_linux_set_tid_cpubind (243 samples, 25.66%)</title><rect x="72.3337%" y="613" width="25.6600%" height="15" fill="rgb(254,24,2)"/><text x="72.5837%" y="623.50">hwloc_linux_set_tid_cpubind</text></g><g><title>__sched_cpufree (1 samples, 0.11%)</title><rect x="97.8881%" y="597" width="0.1056%" height="15" fill="rgb(230,100,2)"/><text x="98.1381%" y="607.50"></text></g><g><title>hwloc::Topology::new (249 samples, 26.29%)</title><rect x="71.8057%" y="693" width="26.2936%" height="15" fill="rgb(219,142,25)"/><text x="72.0557%" y="703.50">hwloc::Topology::new</text></g><g><title>hwloc_topology_load (249 samples, 26.29%)</title><rect x="71.8057%" y="677" width="26.2936%" height="15" fill="rgb(240,73,43)"/><text x="72.0557%" y="687.50">hwloc_topology_load</text></g><g><title>[libhwloc.so.15.2.0] (249 samples, 26.29%)</title><rect x="71.8057%" y="661" width="26.2936%" height="15" fill="rgb(214,114,15)"/><text x="72.0557%" y="671.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (249 samples, 26.29%)</title><rect x="71.8057%" y="645" width="26.2936%" height="15" fill="rgb(207,130,4)"/><text x="72.0557%" y="655.50">[libhwloc.so.15.2.0]</text></g><g><title>__strspn_sse42 (1 samples, 0.11%)</title><rect x="97.9937%" y="629" width="0.1056%" height="15" fill="rgb(221,25,40)"/><text x="98.2437%" y="639.50"></text></g><g><title>lobsters::init_database (1 samples, 0.11%)</title><rect x="98.0993%" y="693" width="0.1056%" height="15" fill="rgb(241,184,7)"/><text x="98.3493%" y="703.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="98.0993%" y="677" width="0.1056%" height="15" fill="rgb(235,159,4)"/><text x="98.3493%" y="687.50"></text></g><g><title>error_entry (1 samples, 0.11%)</title><rect x="98.0993%" y="661" width="0.1056%" height="15" fill="rgb(214,87,48)"/><text x="98.3493%" y="671.50"></text></g><g><title>sync_regs (1 samples, 0.11%)</title><rect x="98.0993%" y="645" width="0.1056%" height="15" fill="rgb(246,198,24)"/><text x="98.3493%" y="655.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (1 samples, 0.11%)</title><rect x="98.2049%" y="693" width="0.1056%" height="15" fill="rgb(209,66,40)"/><text x="98.4549%" y="703.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.11%)</title><rect x="98.2049%" y="677" width="0.1056%" height="15" fill="rgb(233,147,39)"/><text x="98.4549%" y="687.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="98.2049%" y="661" width="0.1056%" height="15" fill="rgb(231,145,52)"/><text x="98.4549%" y="671.50"></text></g><g><title>__libc_start_main (256 samples, 27.03%)</title><rect x="71.3833%" y="853" width="27.0327%" height="15" fill="rgb(206,20,26)"/><text x="71.6333%" y="863.50">__libc_start_main</text></g><g><title>main (256 samples, 27.03%)</title><rect x="71.3833%" y="837" width="27.0327%" height="15" fill="rgb(238,220,4)"/><text x="71.6333%" y="847.50">main</text></g><g><title>std::rt::lang_start_internal (256 samples, 27.03%)</title><rect x="71.3833%" y="821" width="27.0327%" height="15" fill="rgb(252,195,42)"/><text x="71.6333%" y="831.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (256 samples, 27.03%)</title><rect x="71.3833%" y="805" width="27.0327%" height="15" fill="rgb(209,10,6)"/><text x="71.6333%" y="815.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (256 samples, 27.03%)</title><rect x="71.3833%" y="789" width="27.0327%" height="15" fill="rgb(229,3,52)"/><text x="71.6333%" y="799.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (256 samples, 27.03%)</title><rect x="71.3833%" y="773" width="27.0327%" height="15" fill="rgb(253,49,37)"/><text x="71.6333%" y="783.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (256 samples, 27.03%)</title><rect x="71.3833%" y="757" width="27.0327%" height="15" fill="rgb(240,103,49)"/><text x="71.6333%" y="767.50">core::ops::function::impls::&lt;impl core::ops..</text></g><g><title>std::rt::lang_start::_{{closure}} (256 samples, 27.03%)</title><rect x="71.3833%" y="741" width="27.0327%" height="15" fill="rgb(250,182,30)"/><text x="71.6333%" y="751.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (256 samples, 27.03%)</title><rect x="71.3833%" y="725" width="27.0327%" height="15" fill="rgb(248,8,30)"/><text x="71.6333%" y="735.50">std::sys_common::backtrace::__rust_begin_sh..</text></g><g><title>lobsters::main (256 samples, 27.03%)</title><rect x="71.3833%" y="709" width="27.0327%" height="15" fill="rgb(237,120,30)"/><text x="71.6333%" y="719.50">lobsters::main</text></g><g><title>std::net::each_addr (1 samples, 0.11%)</title><rect x="98.3105%" y="693" width="0.1056%" height="15" fill="rgb(221,146,34)"/><text x="98.5605%" y="703.50"></text></g><g><title>std::sys_common::net::TcpListener::bind (1 samples, 0.11%)</title><rect x="98.3105%" y="677" width="0.1056%" height="15" fill="rgb(242,55,13)"/><text x="98.5605%" y="687.50"></text></g><g><title>__bind (1 samples, 0.11%)</title><rect x="98.3105%" y="661" width="0.1056%" height="15" fill="rgb(242,112,31)"/><text x="98.5605%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="98.3105%" y="645" width="0.1056%" height="15" fill="rgb(249,192,27)"/><text x="98.5605%" y="655.50"></text></g><g><title>do_syscall_64 (1 samples, 0.11%)</title><rect x="98.3105%" y="629" width="0.1056%" height="15" fill="rgb(208,204,44)"/><text x="98.5605%" y="639.50"></text></g><g><title>__x64_sys_bind (1 samples, 0.11%)</title><rect x="98.3105%" y="613" width="0.1056%" height="15" fill="rgb(208,93,54)"/><text x="98.5605%" y="623.50"></text></g><g><title>__sys_bind (1 samples, 0.11%)</title><rect x="98.3105%" y="597" width="0.1056%" height="15" fill="rgb(242,1,31)"/><text x="98.5605%" y="607.50"></text></g><g><title>__inet_bind (1 samples, 0.11%)</title><rect x="98.3105%" y="581" width="0.1056%" height="15" fill="rgb(241,83,25)"/><text x="98.5605%" y="591.50"></text></g><g><title>__inet_dev_addr_type (1 samples, 0.11%)</title><rect x="98.3105%" y="565" width="0.1056%" height="15" fill="rgb(205,169,50)"/><text x="98.5605%" y="575.50"></text></g><g><title>fib_table_lookup (1 samples, 0.11%)</title><rect x="98.3105%" y="549" width="0.1056%" height="15" fill="rgb(239,186,37)"/><text x="98.5605%" y="559.50"></text></g><g><title>_start (257 samples, 27.14%)</title><rect x="71.3833%" y="869" width="27.1383%" height="15" fill="rgb(205,221,10)"/><text x="71.6333%" y="879.50">_start</text></g><g><title>_dl_start (1 samples, 0.11%)</title><rect x="98.4161%" y="853" width="0.1056%" height="15" fill="rgb(218,196,15)"/><text x="98.6661%" y="863.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.11%)</title><rect x="98.4161%" y="837" width="0.1056%" height="15" fill="rgb(218,196,35)"/><text x="98.6661%" y="847.50"></text></g><g><title>dl_main (1 samples, 0.11%)</title><rect x="98.4161%" y="821" width="0.1056%" height="15" fill="rgb(233,63,24)"/><text x="98.6661%" y="831.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.11%)</title><rect x="98.4161%" y="805" width="0.1056%" height="15" fill="rgb(225,8,4)"/><text x="98.6661%" y="815.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.11%)</title><rect x="98.4161%" y="789" width="0.1056%" height="15" fill="rgb(234,105,35)"/><text x="98.6661%" y="799.50"></text></g><g><title>openaux (1 samples, 0.11%)</title><rect x="98.4161%" y="773" width="0.1056%" height="15" fill="rgb(236,21,32)"/><text x="98.6661%" y="783.50"></text></g><g><title>_dl_map_object (1 samples, 0.11%)</title><rect x="98.4161%" y="757" width="0.1056%" height="15" fill="rgb(228,109,6)"/><text x="98.6661%" y="767.50"></text></g><g><title>_dl_map_object_from_fd (1 samples, 0.11%)</title><rect x="98.4161%" y="741" width="0.1056%" height="15" fill="rgb(229,215,31)"/><text x="98.6661%" y="751.50"></text></g><g><title>__mmap (1 samples, 0.11%)</title><rect x="98.4161%" y="725" width="0.1056%" height="15" fill="rgb(221,52,54)"/><text x="98.6661%" y="735.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="98.4161%" y="709" width="0.1056%" height="15" fill="rgb(252,129,43)"/><text x="98.6661%" y="719.50"></text></g><g><title>do_syscall_64 (1 samples, 0.11%)</title><rect x="98.4161%" y="693" width="0.1056%" height="15" fill="rgb(248,183,27)"/><text x="98.6661%" y="703.50"></text></g><g><title>ksys_mmap_pgoff (1 samples, 0.11%)</title><rect x="98.4161%" y="677" width="0.1056%" height="15" fill="rgb(250,0,22)"/><text x="98.6661%" y="687.50"></text></g><g><title>vm_mmap_pgoff (1 samples, 0.11%)</title><rect x="98.4161%" y="661" width="0.1056%" height="15" fill="rgb(213,166,10)"/><text x="98.6661%" y="671.50"></text></g><g><title>do_mmap (1 samples, 0.11%)</title><rect x="98.4161%" y="645" width="0.1056%" height="15" fill="rgb(207,163,36)"/><text x="98.6661%" y="655.50"></text></g><g><title>mmap_region (1 samples, 0.11%)</title><rect x="98.4161%" y="629" width="0.1056%" height="15" fill="rgb(208,122,22)"/><text x="98.6661%" y="639.50"></text></g><g><title>perf_event_mmap (1 samples, 0.11%)</title><rect x="98.4161%" y="613" width="0.1056%" height="15" fill="rgb(207,104,49)"/><text x="98.6661%" y="623.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.11%)</title><rect x="98.4161%" y="597" width="0.1056%" height="15" fill="rgb(248,211,50)"/><text x="98.6661%" y="607.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.11%)</title><rect x="98.4161%" y="581" width="0.1056%" height="15" fill="rgb(217,13,45)"/><text x="98.6661%" y="591.50"></text></g><g><title>perf_event_mmap_output (1 samples, 0.11%)</title><rect x="98.4161%" y="565" width="0.1056%" height="15" fill="rgb(211,216,49)"/><text x="98.6661%" y="575.50"></text></g><g><title>perf_output_copy (1 samples, 0.11%)</title><rect x="98.4161%" y="549" width="0.1056%" height="15" fill="rgb(221,58,53)"/><text x="98.6661%" y="559.50"></text></g><g><title>memcpy_erms (1 samples, 0.11%)</title><rect x="98.4161%" y="533" width="0.1056%" height="15" fill="rgb(220,112,41)"/><text x="98.6661%" y="543.50"></text></g><g><title>anon.144e612f7a92f11708487d2575dcc3d1.3.llvm.9538235009918832389 (1 samples, 0.11%)</title><rect x="98.5216%" y="869" width="0.1056%" height="15" fill="rgb(236,38,28)"/><text x="98.7716%" y="879.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.11%)</title><rect x="98.5216%" y="853" width="0.1056%" height="15" fill="rgb(227,195,22)"/><text x="98.7716%" y="863.50"></text></g><g><title>free_ldt_pgtables (1 samples, 0.11%)</title><rect x="98.7328%" y="757" width="0.1056%" height="15" fill="rgb(214,55,33)"/><text x="98.9828%" y="767.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.11%)</title><rect x="98.7328%" y="741" width="0.1056%" height="15" fill="rgb(248,80,13)"/><text x="98.9828%" y="751.50"></text></g><g><title>flush_tlb_mm_range (1 samples, 0.11%)</title><rect x="98.7328%" y="725" width="0.1056%" height="15" fill="rgb(238,52,6)"/><text x="98.9828%" y="735.50"></text></g><g><title>switch_mm_irqs_off (1 samples, 0.11%)</title><rect x="98.7328%" y="709" width="0.1056%" height="15" fill="rgb(224,198,47)"/><text x="98.9828%" y="719.50"></text></g><g><title>load_new_mm_cr3 (1 samples, 0.11%)</title><rect x="98.7328%" y="693" width="0.1056%" height="15" fill="rgb(233,171,20)"/><text x="98.9828%" y="703.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.11%)</title><rect x="98.8384%" y="757" width="0.1056%" height="15" fill="rgb(241,30,25)"/><text x="99.0884%" y="767.50"></text></g><g><title>release_pages (1 samples, 0.11%)</title><rect x="98.8384%" y="741" width="0.1056%" height="15" fill="rgb(207,171,38)"/><text x="99.0884%" y="751.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.11%)</title><rect x="98.8384%" y="725" width="0.1056%" height="15" fill="rgb(234,70,1)"/><text x="99.0884%" y="735.50"></text></g><g><title>[vmlinux] (3 samples, 0.32%)</title><rect x="98.7328%" y="837" width="0.3168%" height="15" fill="rgb(232,178,18)"/><text x="98.9828%" y="847.50"></text></g><g><title>do_group_exit (3 samples, 0.32%)</title><rect x="98.7328%" y="821" width="0.3168%" height="15" fill="rgb(241,78,40)"/><text x="98.9828%" y="831.50"></text></g><g><title>do_exit (3 samples, 0.32%)</title><rect x="98.7328%" y="805" width="0.3168%" height="15" fill="rgb(222,35,25)"/><text x="98.9828%" y="815.50"></text></g><g><title>mmput (3 samples, 0.32%)</title><rect x="98.7328%" y="789" width="0.3168%" height="15" fill="rgb(207,92,16)"/><text x="98.9828%" y="799.50"></text></g><g><title>exit_mmap (3 samples, 0.32%)</title><rect x="98.7328%" y="773" width="0.3168%" height="15" fill="rgb(216,59,51)"/><text x="98.9828%" y="783.50"></text></g><g><title>unmap_vmas (1 samples, 0.11%)</title><rect x="98.9440%" y="757" width="0.1056%" height="15" fill="rgb(213,80,28)"/><text x="99.1940%" y="767.50"></text></g><g><title>unmap_page_range (1 samples, 0.11%)</title><rect x="98.9440%" y="741" width="0.1056%" height="15" fill="rgb(220,93,7)"/><text x="99.1940%" y="751.50"></text></g><g><title>entry_SYSCALL_64 (5 samples, 0.53%)</title><rect x="98.6272%" y="869" width="0.5280%" height="15" fill="rgb(225,24,44)"/><text x="98.8772%" y="879.50"></text></g><g><title>do_syscall_64 (4 samples, 0.42%)</title><rect x="98.7328%" y="853" width="0.4224%" height="15" fill="rgb(243,74,40)"/><text x="98.9828%" y="863.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.11%)</title><rect x="99.0496%" y="837" width="0.1056%" height="15" fill="rgb(228,39,7)"/><text x="99.2996%" y="847.50"></text></g><g><title>do_execve (1 samples, 0.11%)</title><rect x="99.0496%" y="821" width="0.1056%" height="15" fill="rgb(227,79,8)"/><text x="99.2996%" y="831.50"></text></g><g><title>__do_execve_file (1 samples, 0.11%)</title><rect x="99.0496%" y="805" width="0.1056%" height="15" fill="rgb(236,58,11)"/><text x="99.2996%" y="815.50"></text></g><g><title>search_binary_handler.part.0 (1 samples, 0.11%)</title><rect x="99.0496%" y="789" width="0.1056%" height="15" fill="rgb(249,63,35)"/><text x="99.2996%" y="799.50"></text></g><g><title>load_elf_binary (1 samples, 0.11%)</title><rect x="99.0496%" y="773" width="0.1056%" height="15" fill="rgb(252,114,16)"/><text x="99.2996%" y="783.50"></text></g><g><title>elf_map (1 samples, 0.11%)</title><rect x="99.0496%" y="757" width="0.1056%" height="15" fill="rgb(254,151,24)"/><text x="99.2996%" y="767.50"></text></g><g><title>vm_mmap_pgoff (1 samples, 0.11%)</title><rect x="99.0496%" y="741" width="0.1056%" height="15" fill="rgb(253,54,39)"/><text x="99.2996%" y="751.50"></text></g><g><title>do_mmap (1 samples, 0.11%)</title><rect x="99.0496%" y="725" width="0.1056%" height="15" fill="rgb(243,25,45)"/><text x="99.2996%" y="735.50"></text></g><g><title>mmap_region (1 samples, 0.11%)</title><rect x="99.0496%" y="709" width="0.1056%" height="15" fill="rgb(234,134,9)"/><text x="99.2996%" y="719.50"></text></g><g><title>perf_event_mmap (1 samples, 0.11%)</title><rect x="99.0496%" y="693" width="0.1056%" height="15" fill="rgb(227,166,31)"/><text x="99.2996%" y="703.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.11%)</title><rect x="99.0496%" y="677" width="0.1056%" height="15" fill="rgb(245,143,41)"/><text x="99.2996%" y="687.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.11%)</title><rect x="99.0496%" y="661" width="0.1056%" height="15" fill="rgb(238,181,32)"/><text x="99.2996%" y="671.50"></text></g><g><title>perf_event_mmap_output (1 samples, 0.11%)</title><rect x="99.0496%" y="645" width="0.1056%" height="15" fill="rgb(224,113,18)"/><text x="99.2996%" y="655.50"></text></g><g><title>__perf_event_header__init_id (1 samples, 0.11%)</title><rect x="99.0496%" y="629" width="0.1056%" height="15" fill="rgb(240,229,28)"/><text x="99.2996%" y="639.50"></text></g><g><title>__task_pid_nr_ns (1 samples, 0.11%)</title><rect x="99.0496%" y="613" width="0.1056%" height="15" fill="rgb(250,185,3)"/><text x="99.2996%" y="623.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.11%)</title><rect x="99.0496%" y="597" width="0.1056%" height="15" fill="rgb(212,59,25)"/><text x="99.2996%" y="607.50"></text></g><g><title>lobsters (941 samples, 99.37%)</title><rect x="0.0000%" y="885" width="99.3664%" height="15" fill="rgb(221,87,20)"/><text x="0.2500%" y="895.50">lobsters</text></g><g><title>page_fault (2 samples, 0.21%)</title><rect x="99.1552%" y="869" width="0.2112%" height="15" fill="rgb(213,74,28)"/><text x="99.4052%" y="879.50"></text></g><g><title>all (947 samples, 100%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(224,132,34)"/><text x="0.2500%" y="911.50"></text></g><g><title>perf (6 samples, 0.63%)</title><rect x="99.3664%" y="885" width="0.6336%" height="15" fill="rgb(222,101,24)"/><text x="99.6164%" y="895.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.63%)</title><rect x="99.3664%" y="869" width="0.6336%" height="15" fill="rgb(254,142,4)"/><text x="99.6164%" y="879.50"></text></g><g><title>do_syscall_64 (6 samples, 0.63%)</title><rect x="99.3664%" y="853" width="0.6336%" height="15" fill="rgb(230,229,49)"/><text x="99.6164%" y="863.50"></text></g><g><title>__x64_sys_execve (6 samples, 0.63%)</title><rect x="99.3664%" y="837" width="0.6336%" height="15" fill="rgb(238,70,47)"/><text x="99.6164%" y="847.50"></text></g><g><title>do_execve (6 samples, 0.63%)</title><rect x="99.3664%" y="821" width="0.6336%" height="15" fill="rgb(231,160,17)"/><text x="99.6164%" y="831.50"></text></g><g><title>__do_execve_file (6 samples, 0.63%)</title><rect x="99.3664%" y="805" width="0.6336%" height="15" fill="rgb(218,68,53)"/><text x="99.6164%" y="815.50"></text></g><g><title>search_binary_handler.part.0 (6 samples, 0.63%)</title><rect x="99.3664%" y="789" width="0.6336%" height="15" fill="rgb(236,111,10)"/><text x="99.6164%" y="799.50"></text></g><g><title>load_elf_binary (6 samples, 0.63%)</title><rect x="99.3664%" y="773" width="0.6336%" height="15" fill="rgb(224,34,41)"/><text x="99.6164%" y="783.50"></text></g><g><title>setup_new_exec (6 samples, 0.63%)</title><rect x="99.3664%" y="757" width="0.6336%" height="15" fill="rgb(241,118,19)"/><text x="99.6164%" y="767.50"></text></g><g><title>perf_event_exec (6 samples, 0.63%)</title><rect x="99.3664%" y="741" width="0.6336%" height="15" fill="rgb(238,129,25)"/><text x="99.6164%" y="751.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.53%)</title><rect x="99.4720%" y="725" width="0.5280%" height="15" fill="rgb(238,22,31)"/><text x="99.7220%" y="735.50"></text></g><g><title>native_write_msr (5 samples, 0.53%)</title><rect x="99.4720%" y="709" width="0.5280%" height="15" fill="rgb(222,174,48)"/><text x="99.7220%" y="719.50"></text></g></svg></svg>