<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="998" onload="init(evt)" viewBox="0 0 1200 998" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="998" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="981.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="981.00"> </text><svg id="frames" x="10" width="1180"><g><title>[[heap]] (1 samples, 0.10%)</title><rect x="0.0000%" y="917" width="0.1042%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="927.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (1 samples, 0.10%)</title><rect x="0.0000%" y="901" width="0.1042%" height="15" fill="rgb(217,0,24)"/><text x="0.2500%" y="911.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="0.1042%" y="901" width="0.1042%" height="15" fill="rgb(221,193,54)"/><text x="0.3542%" y="911.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.10%)</title><rect x="0.2083%" y="901" width="0.1042%" height="15" fill="rgb(248,212,6)"/><text x="0.4583%" y="911.50"></text></g><g><title>core::fmt::write (1 samples, 0.10%)</title><rect x="0.3125%" y="901" width="0.1042%" height="15" fill="rgb(208,68,35)"/><text x="0.5625%" y="911.50"></text></g><g><title>[[stack]] (4 samples, 0.42%)</title><rect x="0.1042%" y="917" width="0.4167%" height="15" fill="rgb(232,128,0)"/><text x="0.3542%" y="927.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.10%)</title><rect x="0.4167%" y="901" width="0.1042%" height="15" fill="rgb(207,160,47)"/><text x="0.6667%" y="911.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="0.5208%" y="901" width="0.1042%" height="15" fill="rgb(228,23,34)"/><text x="0.7708%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.42%)</title><rect x="0.6250%" y="901" width="0.4167%" height="15" fill="rgb(218,30,26)"/><text x="0.8750%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="0.9375%" y="885" width="0.1042%" height="15" fill="rgb(220,122,19)"/><text x="1.1875%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="0.9375%" y="869" width="0.1042%" height="15" fill="rgb(250,228,42)"/><text x="1.1875%" y="879.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="0.9375%" y="853" width="0.1042%" height="15" fill="rgb(240,193,28)"/><text x="1.1875%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="0.9375%" y="837" width="0.1042%" height="15" fill="rgb(216,20,37)"/><text x="1.1875%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="0.9375%" y="821" width="0.1042%" height="15" fill="rgb(206,188,39)"/><text x="1.1875%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.10%)</title><rect x="0.9375%" y="805" width="0.1042%" height="15" fill="rgb(217,207,13)"/><text x="1.1875%" y="815.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.10%)</title><rect x="0.9375%" y="789" width="0.1042%" height="15" fill="rgb(231,73,38)"/><text x="1.1875%" y="799.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="1.0417%" y="901" width="0.1042%" height="15" fill="rgb(225,20,46)"/><text x="1.2917%" y="911.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Values as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.10%)</title><rect x="1.1458%" y="901" width="0.1042%" height="15" fill="rgb(210,31,41)"/><text x="1.3958%" y="911.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="1.2500%" y="901" width="0.1042%" height="15" fill="rgb(221,200,47)"/><text x="1.5000%" y="911.50"></text></g><g><title>__GI___libc_free (2 samples, 0.21%)</title><rect x="1.3542%" y="901" width="0.2083%" height="15" fill="rgb(226,26,5)"/><text x="1.6042%" y="911.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.10%)</title><rect x="1.5625%" y="901" width="0.1042%" height="15" fill="rgb(249,33,26)"/><text x="1.8125%" y="911.50"></text></g><g><title>__libc_send (1 samples, 0.10%)</title><rect x="1.6667%" y="901" width="0.1042%" height="15" fill="rgb(235,183,28)"/><text x="1.9167%" y="911.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.10%)</title><rect x="1.6667%" y="885" width="0.1042%" height="15" fill="rgb(221,5,38)"/><text x="1.9167%" y="895.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="1.7708%" y="901" width="0.1042%" height="15" fill="rgb(247,18,42)"/><text x="2.0208%" y="911.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.10%)</title><rect x="1.8750%" y="901" width="0.1042%" height="15" fill="rgb(241,131,45)"/><text x="2.1250%" y="911.50"></text></g><g><title>alloc::string::String::push (2 samples, 0.21%)</title><rect x="1.9792%" y="901" width="0.2083%" height="15" fill="rgb(249,31,29)"/><text x="2.2292%" y="911.50"></text></g><g><title>core::fmt::write (2 samples, 0.21%)</title><rect x="2.1875%" y="901" width="0.2083%" height="15" fill="rgb(225,111,53)"/><text x="2.4375%" y="911.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (1 samples, 0.10%)</title><rect x="2.3958%" y="901" width="0.1042%" height="15" fill="rgb(238,160,17)"/><text x="2.6458%" y="911.50"></text></g><g><title>sql_parser::parser::Parser::parse_object_name (1 samples, 0.10%)</title><rect x="2.5000%" y="901" width="0.1042%" height="15" fill="rgb(214,148,48)"/><text x="2.7500%" y="911.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (1 samples, 0.10%)</title><rect x="2.6042%" y="901" width="0.1042%" height="15" fill="rgb(232,36,49)"/><text x="2.8542%" y="911.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (1 samples, 0.10%)</title><rect x="2.7083%" y="901" width="0.1042%" height="15" fill="rgb(209,103,24)"/><text x="2.9583%" y="911.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (3 samples, 0.31%)</title><rect x="2.8125%" y="901" width="0.3125%" height="15" fill="rgb(229,88,8)"/><text x="3.0625%" y="911.50"></text></g><g><title>[anon] (26 samples, 2.71%)</title><rect x="0.5208%" y="917" width="2.7083%" height="15" fill="rgb(213,181,19)"/><text x="0.7708%" y="927.50">[a..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_number (1 samples, 0.10%)</title><rect x="3.1250%" y="901" width="0.1042%" height="15" fill="rgb(254,191,54)"/><text x="3.3750%" y="911.50"></text></g><g><title>[lobsters] (1 samples, 0.10%)</title><rect x="3.2292%" y="917" width="0.1042%" height="15" fill="rgb(241,83,37)"/><text x="3.4792%" y="927.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="3.2292%" y="901" width="0.1042%" height="15" fill="rgb(233,36,39)"/><text x="3.4792%" y="911.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (4 samples, 0.42%)</title><rect x="3.3333%" y="869" width="0.4167%" height="15" fill="rgb(226,3,54)"/><text x="3.5833%" y="879.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (4 samples, 0.42%)</title><rect x="3.3333%" y="853" width="0.4167%" height="15" fill="rgb(245,192,40)"/><text x="3.5833%" y="863.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (4 samples, 0.42%)</title><rect x="3.3333%" y="837" width="0.4167%" height="15" fill="rgb(238,167,29)"/><text x="3.5833%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (4 samples, 0.42%)</title><rect x="3.3333%" y="821" width="0.4167%" height="15" fill="rgb(232,182,51)"/><text x="3.5833%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.42%)</title><rect x="3.3333%" y="805" width="0.4167%" height="15" fill="rgb(231,60,39)"/><text x="3.5833%" y="815.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (4 samples, 0.42%)</title><rect x="3.3333%" y="789" width="0.4167%" height="15" fill="rgb(208,69,12)"/><text x="3.5833%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.42%)</title><rect x="3.3333%" y="773" width="0.4167%" height="15" fill="rgb(235,93,37)"/><text x="3.5833%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.42%)</title><rect x="3.3333%" y="757" width="0.4167%" height="15" fill="rgb(213,116,39)"/><text x="3.5833%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (4 samples, 0.42%)</title><rect x="3.3333%" y="741" width="0.4167%" height="15" fill="rgb(222,207,29)"/><text x="3.5833%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.42%)</title><rect x="3.3333%" y="725" width="0.4167%" height="15" fill="rgb(206,96,30)"/><text x="3.5833%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.42%)</title><rect x="3.3333%" y="709" width="0.4167%" height="15" fill="rgb(218,138,4)"/><text x="3.5833%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (4 samples, 0.42%)</title><rect x="3.3333%" y="693" width="0.4167%" height="15" fill="rgb(250,191,14)"/><text x="3.5833%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.42%)</title><rect x="3.3333%" y="677" width="0.4167%" height="15" fill="rgb(239,60,40)"/><text x="3.5833%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.42%)</title><rect x="3.3333%" y="661" width="0.4167%" height="15" fill="rgb(206,27,48)"/><text x="3.5833%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (4 samples, 0.42%)</title><rect x="3.3333%" y="645" width="0.4167%" height="15" fill="rgb(225,35,8)"/><text x="3.5833%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.42%)</title><rect x="3.3333%" y="629" width="0.4167%" height="15" fill="rgb(250,213,24)"/><text x="3.5833%" y="639.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.42%)</title><rect x="3.3333%" y="613" width="0.4167%" height="15" fill="rgb(247,123,22)"/><text x="3.5833%" y="623.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.42%)</title><rect x="3.3333%" y="597" width="0.4167%" height="15" fill="rgb(231,138,38)"/><text x="3.5833%" y="607.50"></text></g><g><title>_int_malloc (3 samples, 0.31%)</title><rect x="3.4375%" y="581" width="0.3125%" height="15" fill="rgb(231,145,46)"/><text x="3.6875%" y="591.50"></text></g><g><title>malloc_consolidate (2 samples, 0.21%)</title><rect x="3.7500%" y="773" width="0.2083%" height="15" fill="rgb(251,118,11)"/><text x="4.0000%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.31%)</title><rect x="3.7500%" y="837" width="0.3125%" height="15" fill="rgb(217,147,25)"/><text x="4.0000%" y="847.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.31%)</title><rect x="3.7500%" y="821" width="0.3125%" height="15" fill="rgb(247,81,37)"/><text x="4.0000%" y="831.50"></text></g><g><title>_int_realloc (3 samples, 0.31%)</title><rect x="3.7500%" y="805" width="0.3125%" height="15" fill="rgb(209,12,38)"/><text x="4.0000%" y="815.50"></text></g><g><title>_int_malloc (3 samples, 0.31%)</title><rect x="3.7500%" y="789" width="0.3125%" height="15" fill="rgb(227,1,9)"/><text x="4.0000%" y="799.50"></text></g><g><title>sysmalloc (1 samples, 0.10%)</title><rect x="3.9583%" y="773" width="0.1042%" height="15" fill="rgb(248,47,43)"/><text x="4.2083%" y="783.50"></text></g><g><title>__GI___mprotect (1 samples, 0.10%)</title><rect x="3.9583%" y="757" width="0.1042%" height="15" fill="rgb(221,10,30)"/><text x="4.2083%" y="767.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.10%)</title><rect x="3.9583%" y="741" width="0.1042%" height="15" fill="rgb(210,229,1)"/><text x="4.2083%" y="751.50"></text></g><g><title>do_syscall_64 (1 samples, 0.10%)</title><rect x="3.9583%" y="725" width="0.1042%" height="15" fill="rgb(222,148,37)"/><text x="4.2083%" y="735.50"></text></g><g><title>__x64_sys_mprotect (1 samples, 0.10%)</title><rect x="3.9583%" y="709" width="0.1042%" height="15" fill="rgb(234,67,33)"/><text x="4.2083%" y="719.50"></text></g><g><title>do_mprotect_pkey (1 samples, 0.10%)</title><rect x="3.9583%" y="693" width="0.1042%" height="15" fill="rgb(247,98,35)"/><text x="4.2083%" y="703.50"></text></g><g><title>mprotect_fixup (1 samples, 0.10%)</title><rect x="3.9583%" y="677" width="0.1042%" height="15" fill="rgb(247,138,52)"/><text x="4.2083%" y="687.50"></text></g><g><title>vma_set_page_prot (1 samples, 0.10%)</title><rect x="3.9583%" y="661" width="0.1042%" height="15" fill="rgb(213,79,30)"/><text x="4.2083%" y="671.50"></text></g><g><title>__memcmp_avx2_movbe (4 samples, 0.42%)</title><rect x="5.7292%" y="805" width="0.4167%" height="15" fill="rgb(246,177,23)"/><text x="5.9792%" y="815.50"></text></g><g><title>alloc::string::String::push (2 samples, 0.21%)</title><rect x="6.2500%" y="789" width="0.2083%" height="15" fill="rgb(230,62,27)"/><text x="6.5000%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (2 samples, 0.21%)</title><rect x="6.2500%" y="773" width="0.2083%" height="15" fill="rgb(216,154,8)"/><text x="6.5000%" y="783.50"></text></g><g><title>core::ptr::write (1 samples, 0.10%)</title><rect x="6.3542%" y="757" width="0.1042%" height="15" fill="rgb(244,35,45)"/><text x="6.6042%" y="767.50"></text></g><g><title>apic_timer_interrupt (1 samples, 0.10%)</title><rect x="6.3542%" y="741" width="0.1042%" height="15" fill="rgb(251,115,12)"/><text x="6.6042%" y="751.50"></text></g><g><title>smp_apic_timer_interrupt (1 samples, 0.10%)</title><rect x="6.3542%" y="725" width="0.1042%" height="15" fill="rgb(240,54,50)"/><text x="6.6042%" y="735.50"></text></g><g><title>irq_exit (1 samples, 0.10%)</title><rect x="6.3542%" y="709" width="0.1042%" height="15" fill="rgb(233,84,52)"/><text x="6.6042%" y="719.50"></text></g><g><title>__do_softirq (1 samples, 0.10%)</title><rect x="6.3542%" y="693" width="0.1042%" height="15" fill="rgb(207,117,47)"/><text x="6.6042%" y="703.50"></text></g><g><title>run_timer_softirq (1 samples, 0.10%)</title><rect x="6.3542%" y="677" width="0.1042%" height="15" fill="rgb(249,43,39)"/><text x="6.6042%" y="687.50"></text></g><g><title>alloc::string::String::with_capacity (2 samples, 0.21%)</title><rect x="6.4583%" y="789" width="0.2083%" height="15" fill="rgb(209,38,44)"/><text x="6.7083%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.21%)</title><rect x="6.4583%" y="773" width="0.2083%" height="15" fill="rgb(236,212,23)"/><text x="6.7083%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.21%)</title><rect x="6.4583%" y="757" width="0.2083%" height="15" fill="rgb(242,79,21)"/><text x="6.7083%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.21%)</title><rect x="6.4583%" y="741" width="0.2083%" height="15" fill="rgb(211,96,35)"/><text x="6.7083%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.21%)</title><rect x="6.4583%" y="725" width="0.2083%" height="15" fill="rgb(253,215,40)"/><text x="6.7083%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.21%)</title><rect x="6.4583%" y="709" width="0.2083%" height="15" fill="rgb(211,81,21)"/><text x="6.7083%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.21%)</title><rect x="6.4583%" y="693" width="0.2083%" height="15" fill="rgb(208,190,38)"/><text x="6.7083%" y="703.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.21%)</title><rect x="6.4583%" y="677" width="0.2083%" height="15" fill="rgb(235,213,38)"/><text x="6.7083%" y="687.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.21%)</title><rect x="6.4583%" y="661" width="0.2083%" height="15" fill="rgb(237,122,38)"/><text x="6.7083%" y="671.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (35 samples, 3.65%)</title><rect x="4.0625%" y="821" width="3.6458%" height="15" fill="rgb(244,218,35)"/><text x="4.3125%" y="831.50">sql_..</text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (15 samples, 1.56%)</title><rect x="6.1458%" y="805" width="1.5625%" height="15" fill="rgb(240,68,47)"/><text x="6.3958%" y="815.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (10 samples, 1.04%)</title><rect x="6.6667%" y="789" width="1.0417%" height="15" fill="rgb(210,16,53)"/><text x="6.9167%" y="799.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (9 samples, 0.94%)</title><rect x="6.7708%" y="773" width="0.9375%" height="15" fill="rgb(235,124,12)"/><text x="7.0208%" y="783.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (9 samples, 0.94%)</title><rect x="6.7708%" y="757" width="0.9375%" height="15" fill="rgb(224,169,11)"/><text x="7.0208%" y="767.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (4 samples, 0.42%)</title><rect x="7.2917%" y="741" width="0.4167%" height="15" fill="rgb(250,166,2)"/><text x="7.5417%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="7.7083%" y="805" width="0.1042%" height="15" fill="rgb(242,216,29)"/><text x="7.9583%" y="815.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.10%)</title><rect x="7.7083%" y="789" width="0.1042%" height="15" fill="rgb(230,116,27)"/><text x="7.9583%" y="799.50"></text></g><g><title>_int_realloc (1 samples, 0.10%)</title><rect x="7.7083%" y="773" width="0.1042%" height="15" fill="rgb(228,99,48)"/><text x="7.9583%" y="783.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="7.7083%" y="757" width="0.1042%" height="15" fill="rgb(253,11,6)"/><text x="7.9583%" y="767.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_string (3 samples, 0.31%)</title><rect x="7.7083%" y="821" width="0.3125%" height="15" fill="rgb(247,143,39)"/><text x="7.9583%" y="831.50"></text></g><g><title>sql_parser::tokenizer::PeekableChars::next (2 samples, 0.21%)</title><rect x="7.8125%" y="805" width="0.2083%" height="15" fill="rgb(236,97,10)"/><text x="8.0625%" y="815.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (46 samples, 4.79%)</title><rect x="3.3333%" y="901" width="4.7917%" height="15" fill="rgb(233,208,19)"/><text x="3.5833%" y="911.50">&lt;decor..</text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (46 samples, 4.79%)</title><rect x="3.3333%" y="885" width="4.7917%" height="15" fill="rgb(216,164,2)"/><text x="3.5833%" y="895.50">decor:..</text></g><g><title>sql_parser::parser::parse_statements (42 samples, 4.38%)</title><rect x="3.7500%" y="869" width="4.3750%" height="15" fill="rgb(220,129,5)"/><text x="4.0000%" y="879.50">sql_p..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (42 samples, 4.38%)</title><rect x="3.7500%" y="853" width="4.3750%" height="15" fill="rgb(242,17,10)"/><text x="4.0000%" y="863.50">sql_p..</text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (39 samples, 4.06%)</title><rect x="4.0625%" y="837" width="4.0625%" height="15" fill="rgb(242,107,0)"/><text x="4.3125%" y="847.50">sql_..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_word (1 samples, 0.10%)</title><rect x="8.0208%" y="821" width="0.1042%" height="15" fill="rgb(251,28,31)"/><text x="8.2708%" y="831.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="8.0208%" y="805" width="0.1042%" height="15" fill="rgb(233,223,10)"/><text x="8.2708%" y="815.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.10%)</title><rect x="8.1250%" y="901" width="0.1042%" height="15" fill="rgb(215,21,27)"/><text x="8.3750%" y="911.50"></text></g><g><title>std::sys_common::net::TcpStream::read (1 samples, 0.10%)</title><rect x="8.1250%" y="885" width="0.1042%" height="15" fill="rgb(232,23,21)"/><text x="8.3750%" y="895.50"></text></g><g><title>std::sys::unix::net::Socket::read (1 samples, 0.10%)</title><rect x="8.1250%" y="869" width="0.1042%" height="15" fill="rgb(244,5,23)"/><text x="8.3750%" y="879.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (1 samples, 0.10%)</title><rect x="8.1250%" y="853" width="0.1042%" height="15" fill="rgb(226,81,46)"/><text x="8.3750%" y="863.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.10%)</title><rect x="8.2292%" y="901" width="0.1042%" height="15" fill="rgb(247,70,30)"/><text x="8.4792%" y="911.50"></text></g><g><title>__GI___libc_free (1 samples, 0.10%)</title><rect x="8.3333%" y="901" width="0.1042%" height="15" fill="rgb(212,68,19)"/><text x="8.5833%" y="911.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="8.4375%" y="901" width="0.1042%" height="15" fill="rgb(240,187,13)"/><text x="8.6875%" y="911.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::encode (2 samples, 0.21%)</title><rect x="8.5417%" y="693" width="0.2083%" height="15" fill="rgb(223,113,26)"/><text x="8.7917%" y="703.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::encode (2 samples, 0.21%)</title><rect x="8.5417%" y="677" width="0.2083%" height="15" fill="rgb(206,192,2)"/><text x="8.7917%" y="687.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.10%)</title><rect x="8.6458%" y="661" width="0.1042%" height="15" fill="rgb(241,108,4)"/><text x="8.8958%" y="671.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.10%)</title><rect x="8.6458%" y="645" width="0.1042%" height="15" fill="rgb(247,173,49)"/><text x="8.8958%" y="655.50"></text></g><g><title>__pthread_disable_asynccancel (1 samples, 0.10%)</title><rect x="8.7500%" y="629" width="0.1042%" height="15" fill="rgb(224,114,35)"/><text x="9.0000%" y="639.50"></text></g><g><title>__x86_indirect_thunk_rax (2 samples, 0.21%)</title><rect x="8.8542%" y="629" width="0.2083%" height="15" fill="rgb(245,159,27)"/><text x="9.1042%" y="639.50"></text></g><g><title>fput_many (1 samples, 0.10%)</title><rect x="9.5833%" y="565" width="0.1042%" height="15" fill="rgb(245,172,44)"/><text x="9.8333%" y="575.50"></text></g><g><title>import_single_range (1 samples, 0.10%)</title><rect x="9.6875%" y="565" width="0.1042%" height="15" fill="rgb(236,23,11)"/><text x="9.9375%" y="575.50"></text></g><g><title>inet_sendmsg (2 samples, 0.21%)</title><rect x="9.7917%" y="549" width="0.2083%" height="15" fill="rgb(205,117,38)"/><text x="10.0417%" y="559.50"></text></g><g><title>inet_send_prepare (1 samples, 0.10%)</title><rect x="9.8958%" y="533" width="0.1042%" height="15" fill="rgb(237,72,25)"/><text x="10.1458%" y="543.50"></text></g><g><title>__local_bh_enable_ip (4 samples, 0.42%)</title><rect x="10.1042%" y="533" width="0.4167%" height="15" fill="rgb(244,70,9)"/><text x="10.3542%" y="543.50"></text></g><g><title>preempt_count_sub (3 samples, 0.31%)</title><rect x="10.2083%" y="517" width="0.3125%" height="15" fill="rgb(217,125,39)"/><text x="10.4583%" y="527.50"></text></g><g><title>release_sock (2 samples, 0.21%)</title><rect x="10.5208%" y="533" width="0.2083%" height="15" fill="rgb(235,36,10)"/><text x="10.7708%" y="543.50"></text></g><g><title>tcp_release_cb (1 samples, 0.10%)</title><rect x="10.6250%" y="517" width="0.1042%" height="15" fill="rgb(251,123,47)"/><text x="10.8750%" y="527.50"></text></g><g><title>__ip_local_out (1 samples, 0.10%)</title><rect x="12.0833%" y="453" width="0.1042%" height="15" fill="rgb(221,13,13)"/><text x="12.3333%" y="463.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.10%)</title><rect x="12.1875%" y="453" width="0.1042%" height="15" fill="rgb(238,131,9)"/><text x="12.4375%" y="463.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.10%)</title><rect x="12.2917%" y="453" width="0.1042%" height="15" fill="rgb(211,50,8)"/><text x="12.5417%" y="463.50"></text></g><g><title>__sk_dst_check (3 samples, 0.31%)</title><rect x="12.3958%" y="453" width="0.3125%" height="15" fill="rgb(245,182,24)"/><text x="12.6458%" y="463.50"></text></g><g><title>ipv4_dst_check (2 samples, 0.21%)</title><rect x="12.5000%" y="437" width="0.2083%" height="15" fill="rgb(242,14,37)"/><text x="12.7500%" y="447.50"></text></g><g><title>ip_finish_output (2 samples, 0.21%)</title><rect x="12.8125%" y="437" width="0.2083%" height="15" fill="rgb(246,228,12)"/><text x="13.0625%" y="447.50"></text></g><g><title>ktime_get_with_offset (1 samples, 0.10%)</title><rect x="13.8542%" y="341" width="0.1042%" height="15" fill="rgb(213,55,15)"/><text x="14.1042%" y="351.50"></text></g><g><title>dev_hard_start_xmit (3 samples, 0.31%)</title><rect x="13.7500%" y="405" width="0.3125%" height="15" fill="rgb(209,9,3)"/><text x="14.0000%" y="415.50"></text></g><g><title>loopback_xmit (3 samples, 0.31%)</title><rect x="13.7500%" y="389" width="0.3125%" height="15" fill="rgb(230,59,30)"/><text x="14.0000%" y="399.50"></text></g><g><title>netif_rx (2 samples, 0.21%)</title><rect x="13.8542%" y="373" width="0.2083%" height="15" fill="rgb(209,121,21)"/><text x="14.1042%" y="383.50"></text></g><g><title>netif_rx_internal (2 samples, 0.21%)</title><rect x="13.8542%" y="357" width="0.2083%" height="15" fill="rgb(220,109,13)"/><text x="14.1042%" y="367.50"></text></g><g><title>preempt_count_add (1 samples, 0.10%)</title><rect x="13.9583%" y="341" width="0.1042%" height="15" fill="rgb(232,18,1)"/><text x="14.2083%" y="351.50"></text></g><g><title>__dev_queue_xmit (11 samples, 1.15%)</title><rect x="13.3333%" y="421" width="1.1458%" height="15" fill="rgb(215,41,42)"/><text x="13.5833%" y="431.50"></text></g><g><title>validate_xmit_skb (4 samples, 0.42%)</title><rect x="14.0625%" y="405" width="0.4167%" height="15" fill="rgb(224,123,36)"/><text x="14.3125%" y="415.50"></text></g><g><title>irqtime_account_irq (3 samples, 0.31%)</title><rect x="15.0000%" y="357" width="0.3125%" height="15" fill="rgb(240,125,3)"/><text x="15.2500%" y="367.50"></text></g><g><title>sched_clock_cpu (2 samples, 0.21%)</title><rect x="15.1042%" y="341" width="0.2083%" height="15" fill="rgb(205,98,50)"/><text x="15.3542%" y="351.50"></text></g><g><title>sched_clock (1 samples, 0.10%)</title><rect x="15.2083%" y="325" width="0.1042%" height="15" fill="rgb(205,185,37)"/><text x="15.4583%" y="335.50"></text></g><g><title>native_sched_clock (1 samples, 0.10%)</title><rect x="15.2083%" y="309" width="0.1042%" height="15" fill="rgb(238,207,15)"/><text x="15.4583%" y="319.50"></text></g><g><title>__netif_receive_skb_core (4 samples, 0.42%)</title><rect x="15.8333%" y="309" width="0.4167%" height="15" fill="rgb(213,199,42)"/><text x="16.0833%" y="319.50"></text></g><g><title>raw_local_deliver (2 samples, 0.21%)</title><rect x="16.6667%" y="245" width="0.2083%" height="15" fill="rgb(235,201,11)"/><text x="16.9167%" y="255.50"></text></g><g><title>__inet_lookup_established (2 samples, 0.21%)</title><rect x="16.9792%" y="229" width="0.2083%" height="15" fill="rgb(207,46,11)"/><text x="17.2292%" y="239.50"></text></g><g><title>sk_reset_timer (1 samples, 0.10%)</title><rect x="17.3958%" y="197" width="0.1042%" height="15" fill="rgb(241,35,35)"/><text x="17.6458%" y="207.50"></text></g><g><title>__mod_timer (1 samples, 0.10%)</title><rect x="17.3958%" y="181" width="0.1042%" height="15" fill="rgb(243,32,47)"/><text x="17.6458%" y="191.50"></text></g><g><title>_raw_spin_lock (2 samples, 0.21%)</title><rect x="17.7083%" y="133" width="0.2083%" height="15" fill="rgb(247,202,23)"/><text x="17.9583%" y="143.50"></text></g><g><title>_raw_spin_lock_irqsave (3 samples, 0.31%)</title><rect x="17.9167%" y="133" width="0.3125%" height="15" fill="rgb(219,102,11)"/><text x="18.1667%" y="143.50"></text></g><g><title>preempt_count_add (1 samples, 0.10%)</title><rect x="18.1250%" y="117" width="0.1042%" height="15" fill="rgb(243,110,44)"/><text x="18.3750%" y="127.50"></text></g><g><title>psi_task_change (5 samples, 0.52%)</title><rect x="18.2292%" y="117" width="0.5208%" height="15" fill="rgb(222,74,54)"/><text x="18.4792%" y="127.50"></text></g><g><title>psi_group_change (5 samples, 0.52%)</title><rect x="18.2292%" y="101" width="0.5208%" height="15" fill="rgb(216,99,12)"/><text x="18.4792%" y="111.50"></text></g><g><title>record_times (1 samples, 0.10%)</title><rect x="18.6458%" y="85" width="0.1042%" height="15" fill="rgb(226,22,26)"/><text x="18.8958%" y="95.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.10%)</title><rect x="18.6458%" y="69" width="0.1042%" height="15" fill="rgb(217,163,10)"/><text x="18.8958%" y="79.50"></text></g><g><title>sched_clock (1 samples, 0.10%)</title><rect x="18.6458%" y="53" width="0.1042%" height="15" fill="rgb(213,25,53)"/><text x="18.8958%" y="63.50"></text></g><g><title>native_sched_clock (1 samples, 0.10%)</title><rect x="18.6458%" y="37" width="0.1042%" height="15" fill="rgb(252,105,26)"/><text x="18.8958%" y="47.50"></text></g><g><title>enqueue_task (9 samples, 0.94%)</title><rect x="18.2292%" y="133" width="0.9375%" height="15" fill="rgb(220,39,43)"/><text x="18.4792%" y="143.50"></text></g><g><title>uclamp_rq_inc_id (4 samples, 0.42%)</title><rect x="18.7500%" y="117" width="0.4167%" height="15" fill="rgb(229,68,48)"/><text x="19.0000%" y="127.50"></text></g><g><title>reweight_entity (2 samples, 0.21%)</title><rect x="19.4792%" y="101" width="0.2083%" height="15" fill="rgb(252,8,32)"/><text x="19.7292%" y="111.50"></text></g><g><title>update_cfs_group (1 samples, 0.10%)</title><rect x="19.6875%" y="101" width="0.1042%" height="15" fill="rgb(223,20,43)"/><text x="19.9375%" y="111.50"></text></g><g><title>__update_load_avg_cfs_rq (3 samples, 0.31%)</title><rect x="19.7917%" y="85" width="0.3125%" height="15" fill="rgb(229,81,49)"/><text x="20.0417%" y="95.50"></text></g><g><title>enqueue_task_fair (10 samples, 1.04%)</title><rect x="19.1667%" y="133" width="1.0417%" height="15" fill="rgb(236,28,36)"/><text x="19.4167%" y="143.50"></text></g><g><title>enqueue_entity (10 samples, 1.04%)</title><rect x="19.1667%" y="117" width="1.0417%" height="15" fill="rgb(249,185,26)"/><text x="19.4167%" y="127.50"></text></g><g><title>update_load_avg (4 samples, 0.42%)</title><rect x="19.7917%" y="101" width="0.4167%" height="15" fill="rgb(249,174,33)"/><text x="20.0417%" y="111.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.10%)</title><rect x="20.1042%" y="85" width="0.1042%" height="15" fill="rgb(233,201,37)"/><text x="20.3542%" y="95.50"></text></g><g><title>ttwu_do_wakeup (2 samples, 0.21%)</title><rect x="20.2083%" y="133" width="0.2083%" height="15" fill="rgb(221,78,26)"/><text x="20.4583%" y="143.50"></text></g><g><title>check_preempt_curr (2 samples, 0.21%)</title><rect x="20.2083%" y="117" width="0.2083%" height="15" fill="rgb(250,127,30)"/><text x="20.4583%" y="127.50"></text></g><g><title>resched_curr (2 samples, 0.21%)</title><rect x="20.2083%" y="101" width="0.2083%" height="15" fill="rgb(230,49,44)"/><text x="20.4583%" y="111.50"></text></g><g><title>__wake_up_common (28 samples, 2.92%)</title><rect x="17.6042%" y="165" width="2.9167%" height="15" fill="rgb(229,67,23)"/><text x="17.8542%" y="175.50">__..</text></g><g><title>try_to_wake_up (28 samples, 2.92%)</title><rect x="17.6042%" y="149" width="2.9167%" height="15" fill="rgb(249,83,47)"/><text x="17.8542%" y="159.50">tr..</text></g><g><title>update_rq_clock (1 samples, 0.10%)</title><rect x="20.4167%" y="133" width="0.1042%" height="15" fill="rgb(215,43,3)"/><text x="20.6667%" y="143.50"></text></g><g><title>sock_def_readable (30 samples, 3.12%)</title><rect x="17.5000%" y="197" width="3.1250%" height="15" fill="rgb(238,154,13)"/><text x="17.7500%" y="207.50">soc..</text></g><g><title>__wake_up_common_lock (29 samples, 3.02%)</title><rect x="17.6042%" y="181" width="3.0208%" height="15" fill="rgb(219,56,2)"/><text x="17.8542%" y="191.50">__w..</text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.10%)</title><rect x="20.5208%" y="165" width="0.1042%" height="15" fill="rgb(233,0,4)"/><text x="20.7708%" y="175.50"></text></g><g><title>kfree (2 samples, 0.21%)</title><rect x="21.0417%" y="165" width="0.2083%" height="15" fill="rgb(235,30,7)"/><text x="21.2917%" y="175.50"></text></g><g><title>__kfree_skb (6 samples, 0.62%)</title><rect x="20.9375%" y="181" width="0.6250%" height="15" fill="rgb(250,79,13)"/><text x="21.1875%" y="191.50"></text></g><g><title>skb_release_data (3 samples, 0.31%)</title><rect x="21.2500%" y="165" width="0.3125%" height="15" fill="rgb(211,146,34)"/><text x="21.5000%" y="175.50"></text></g><g><title>kmem_cache_free (1 samples, 0.10%)</title><rect x="21.5625%" y="181" width="0.1042%" height="15" fill="rgb(228,22,38)"/><text x="21.8125%" y="191.50"></text></g><g><title>slab_free_freelist_hook (1 samples, 0.10%)</title><rect x="21.5625%" y="165" width="0.1042%" height="15" fill="rgb(235,168,5)"/><text x="21.8125%" y="175.50"></text></g><g><title>tcp_rate_gen (1 samples, 0.10%)</title><rect x="21.6667%" y="181" width="0.1042%" height="15" fill="rgb(221,155,16)"/><text x="21.9167%" y="191.50"></text></g><g><title>tcp_schedule_loss_probe (1 samples, 0.10%)</title><rect x="21.7708%" y="181" width="0.1042%" height="15" fill="rgb(215,215,53)"/><text x="22.0208%" y="191.50"></text></g><g><title>tcp_ack (14 samples, 1.46%)</title><rect x="20.6250%" y="197" width="1.4583%" height="15" fill="rgb(223,4,10)"/><text x="20.8750%" y="207.50"></text></g><g><title>tcp_update_pacing_rate (2 samples, 0.21%)</title><rect x="21.8750%" y="181" width="0.2083%" height="15" fill="rgb(234,103,6)"/><text x="22.1250%" y="191.50"></text></g><g><title>tcp_check_space (1 samples, 0.10%)</title><rect x="22.0833%" y="197" width="0.1042%" height="15" fill="rgb(227,97,0)"/><text x="22.3333%" y="207.50"></text></g><g><title>tcp_grow_window (2 samples, 0.21%)</title><rect x="22.1875%" y="197" width="0.2083%" height="15" fill="rgb(234,150,53)"/><text x="22.4375%" y="207.50"></text></g><g><title>tcp_queue_rcv (2 samples, 0.21%)</title><rect x="22.3958%" y="197" width="0.2083%" height="15" fill="rgb(228,201,54)"/><text x="22.6458%" y="207.50"></text></g><g><title>ip_local_deliver (61 samples, 6.35%)</title><rect x="16.3542%" y="293" width="6.3542%" height="15" fill="rgb(222,22,37)"/><text x="16.6042%" y="303.50">ip_local..</text></g><g><title>ip_local_deliver_finish (61 samples, 6.35%)</title><rect x="16.3542%" y="277" width="6.3542%" height="15" fill="rgb(237,53,32)"/><text x="16.6042%" y="287.50">ip_local..</text></g><g><title>ip_protocol_deliver_rcu (59 samples, 6.15%)</title><rect x="16.5625%" y="261" width="6.1458%" height="15" fill="rgb(233,25,53)"/><text x="16.8125%" y="271.50">ip_proto..</text></g><g><title>tcp_v4_rcv (56 samples, 5.83%)</title><rect x="16.8750%" y="245" width="5.8333%" height="15" fill="rgb(210,40,34)"/><text x="17.1250%" y="255.50">tcp_v4_..</text></g><g><title>tcp_v4_do_rcv (53 samples, 5.52%)</title><rect x="17.1875%" y="229" width="5.5208%" height="15" fill="rgb(241,220,44)"/><text x="17.4375%" y="239.50">tcp_v4_..</text></g><g><title>tcp_rcv_established (53 samples, 5.52%)</title><rect x="17.1875%" y="213" width="5.5208%" height="15" fill="rgb(235,28,35)"/><text x="17.4375%" y="223.50">tcp_rcv..</text></g><g><title>tcp_send_delayed_ack (1 samples, 0.10%)</title><rect x="22.6042%" y="197" width="0.1042%" height="15" fill="rgb(210,56,17)"/><text x="22.8542%" y="207.50"></text></g><g><title>ip_rcv_core (1 samples, 0.10%)</title><rect x="22.7083%" y="293" width="0.1042%" height="15" fill="rgb(224,130,29)"/><text x="22.9583%" y="303.50"></text></g><g><title>net_rx_action (73 samples, 7.60%)</title><rect x="15.3125%" y="357" width="7.6042%" height="15" fill="rgb(235,212,8)"/><text x="15.5625%" y="367.50">net_rx_act..</text></g><g><title>process_backlog (70 samples, 7.29%)</title><rect x="15.6250%" y="341" width="7.2917%" height="15" fill="rgb(223,33,50)"/><text x="15.8750%" y="351.50">process_ba..</text></g><g><title>__netif_receive_skb_one_core (68 samples, 7.08%)</title><rect x="15.8333%" y="325" width="7.0833%" height="15" fill="rgb(219,149,13)"/><text x="16.0833%" y="335.50">__netif_re..</text></g><g><title>ip_rcv (64 samples, 6.67%)</title><rect x="16.2500%" y="309" width="6.6667%" height="15" fill="rgb(250,156,29)"/><text x="16.5000%" y="319.50">ip_rcv</text></g><g><title>ip_rcv_finish (1 samples, 0.10%)</title><rect x="22.8125%" y="293" width="0.1042%" height="15" fill="rgb(216,193,19)"/><text x="23.0625%" y="303.50"></text></g><g><title>ip_rcv_finish_core.constprop.0 (1 samples, 0.10%)</title><rect x="22.8125%" y="277" width="0.1042%" height="15" fill="rgb(216,135,14)"/><text x="23.0625%" y="287.50"></text></g><g><title>do_softirq (83 samples, 8.65%)</title><rect x="14.4792%" y="405" width="8.6458%" height="15" fill="rgb(241,47,5)"/><text x="14.7292%" y="415.50">do_softirq</text></g><g><title>do_softirq_own_stack (80 samples, 8.33%)</title><rect x="14.7917%" y="389" width="8.3333%" height="15" fill="rgb(233,42,35)"/><text x="15.0417%" y="399.50">do_softirq_o..</text></g><g><title>__do_softirq (80 samples, 8.33%)</title><rect x="14.7917%" y="373" width="8.3333%" height="15" fill="rgb(231,13,6)"/><text x="15.0417%" y="383.50">__do_softirq</text></g><g><title>preempt_count_add (2 samples, 0.21%)</title><rect x="22.9167%" y="357" width="0.2083%" height="15" fill="rgb(207,181,40)"/><text x="23.1667%" y="367.50"></text></g><g><title>ip_finish_output2 (98 samples, 10.21%)</title><rect x="13.0208%" y="437" width="10.2083%" height="15" fill="rgb(254,173,49)"/><text x="13.2708%" y="447.50">ip_finish_outpu..</text></g><g><title>__local_bh_enable_ip (84 samples, 8.75%)</title><rect x="14.4792%" y="421" width="8.7500%" height="15" fill="rgb(221,1,38)"/><text x="14.7292%" y="431.50">__local_bh_e..</text></g><g><title>preempt_schedule_thunk (1 samples, 0.10%)</title><rect x="23.1250%" y="405" width="0.1042%" height="15" fill="rgb(206,124,46)"/><text x="23.3750%" y="415.50"></text></g><g><title>preempt_schedule_common (1 samples, 0.10%)</title><rect x="23.1250%" y="389" width="0.1042%" height="15" fill="rgb(249,21,11)"/><text x="23.3750%" y="399.50"></text></g><g><title>in_lock_functions (1 samples, 0.10%)</title><rect x="23.1250%" y="373" width="0.1042%" height="15" fill="rgb(222,201,40)"/><text x="23.3750%" y="383.50"></text></g><g><title>__ip_queue_xmit (111 samples, 11.56%)</title><rect x="11.7708%" y="469" width="11.5625%" height="15" fill="rgb(235,61,29)"/><text x="12.0208%" y="479.50">__ip_queue_xmit</text></g><g><title>ip_output (102 samples, 10.62%)</title><rect x="12.7083%" y="453" width="10.6250%" height="15" fill="rgb(219,207,3)"/><text x="12.9583%" y="463.50">ip_output</text></g><g><title>ip_finish_output (1 samples, 0.10%)</title><rect x="23.2292%" y="437" width="0.1042%" height="15" fill="rgb(222,56,46)"/><text x="23.4792%" y="447.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (1 samples, 0.10%)</title><rect x="23.2292%" y="421" width="0.1042%" height="15" fill="rgb(239,76,54)"/><text x="23.4792%" y="431.50"></text></g><g><title>tcp_established_options (1 samples, 0.10%)</title><rect x="23.3333%" y="469" width="0.1042%" height="15" fill="rgb(231,124,27)"/><text x="23.5833%" y="479.50"></text></g><g><title>__tcp_push_pending_frames (121 samples, 12.60%)</title><rect x="11.1458%" y="517" width="12.6042%" height="15" fill="rgb(249,195,6)"/><text x="11.3958%" y="527.50">__tcp_push_pending_..</text></g><g><title>tcp_write_xmit (121 samples, 12.60%)</title><rect x="11.1458%" y="501" width="12.6042%" height="15" fill="rgb(237,174,47)"/><text x="11.3958%" y="511.50">tcp_write_xmit</text></g><g><title>__tcp_transmit_skb (119 samples, 12.40%)</title><rect x="11.3542%" y="485" width="12.3958%" height="15" fill="rgb(206,201,31)"/><text x="11.6042%" y="495.50">__tcp_transmit_skb</text></g><g><title>tcp_v4_send_check (3 samples, 0.31%)</title><rect x="23.4375%" y="469" width="0.3125%" height="15" fill="rgb(231,57,52)"/><text x="23.6875%" y="479.50"></text></g><g><title>sk_page_frag_refill (5 samples, 0.52%)</title><rect x="23.7500%" y="517" width="0.5208%" height="15" fill="rgb(248,177,22)"/><text x="24.0000%" y="527.50"></text></g><g><title>skb_page_frag_refill (3 samples, 0.31%)</title><rect x="23.9583%" y="501" width="0.3125%" height="15" fill="rgb(215,211,37)"/><text x="24.2083%" y="511.50"></text></g><g><title>__kmalloc_node_track_caller (2 samples, 0.21%)</title><rect x="24.4792%" y="485" width="0.2083%" height="15" fill="rgb(241,128,51)"/><text x="24.7292%" y="495.50"></text></g><g><title>memset_erms (2 samples, 0.21%)</title><rect x="24.4792%" y="469" width="0.2083%" height="15" fill="rgb(227,165,31)"/><text x="24.7292%" y="479.50"></text></g><g><title>sk_stream_alloc_skb (5 samples, 0.52%)</title><rect x="24.2708%" y="517" width="0.5208%" height="15" fill="rgb(228,167,24)"/><text x="24.5208%" y="527.50"></text></g><g><title>__alloc_skb (4 samples, 0.42%)</title><rect x="24.3750%" y="501" width="0.4167%" height="15" fill="rgb(228,143,12)"/><text x="24.6250%" y="511.50"></text></g><g><title>__ksize (1 samples, 0.10%)</title><rect x="24.6875%" y="485" width="0.1042%" height="15" fill="rgb(249,149,8)"/><text x="24.9375%" y="495.50"></text></g><g><title>tcp_push (1 samples, 0.10%)</title><rect x="24.7917%" y="517" width="0.1042%" height="15" fill="rgb(243,35,44)"/><text x="25.0417%" y="527.50"></text></g><g><title>__x64_sys_sendto (153 samples, 15.94%)</title><rect x="9.0625%" y="597" width="15.9375%" height="15" fill="rgb(246,89,9)"/><text x="9.3125%" y="607.50">__x64_sys_sendto</text></g><g><title>__sys_sendto (153 samples, 15.94%)</title><rect x="9.0625%" y="581" width="15.9375%" height="15" fill="rgb(233,213,13)"/><text x="9.3125%" y="591.50">__sys_sendto</text></g><g><title>sock_sendmsg (146 samples, 15.21%)</title><rect x="9.7917%" y="565" width="15.2083%" height="15" fill="rgb(233,141,41)"/><text x="10.0417%" y="575.50">sock_sendmsg</text></g><g><title>tcp_sendmsg (144 samples, 15.00%)</title><rect x="10.0000%" y="549" width="15.0000%" height="15" fill="rgb(239,167,4)"/><text x="10.2500%" y="559.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (137 samples, 14.27%)</title><rect x="10.7292%" y="533" width="14.2708%" height="15" fill="rgb(209,217,16)"/><text x="10.9792%" y="543.50">tcp_sendmsg_locked</text></g><g><title>tcp_send_mss (1 samples, 0.10%)</title><rect x="24.8958%" y="517" width="0.1042%" height="15" fill="rgb(219,88,35)"/><text x="25.1458%" y="527.50"></text></g><g><title>do_syscall_64 (156 samples, 16.25%)</title><rect x="9.0625%" y="613" width="16.2500%" height="15" fill="rgb(220,193,23)"/><text x="9.3125%" y="623.50">do_syscall_64</text></g><g><title>syscall_slow_exit_work (3 samples, 0.31%)</title><rect x="25.0000%" y="597" width="0.3125%" height="15" fill="rgb(230,90,52)"/><text x="25.2500%" y="607.50"></text></g><g><title>__audit_syscall_exit (2 samples, 0.21%)</title><rect x="25.1042%" y="581" width="0.2083%" height="15" fill="rgb(252,106,19)"/><text x="25.3542%" y="591.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (164 samples, 17.08%)</title><rect x="8.7500%" y="677" width="17.0833%" height="15" fill="rgb(206,74,20)"/><text x="9.0000%" y="687.50">&lt;std::net::tcp::TcpStream ..</text></g><g><title>std::sys_common::net::TcpStream::write (164 samples, 17.08%)</title><rect x="8.7500%" y="661" width="17.0833%" height="15" fill="rgb(230,138,44)"/><text x="9.0000%" y="671.50">std::sys_common::net::TcpS..</text></g><g><title>__libc_send (164 samples, 17.08%)</title><rect x="8.7500%" y="645" width="17.0833%" height="15" fill="rgb(235,182,43)"/><text x="9.0000%" y="655.50">__libc_send</text></g><g><title>entry_SYSCALL_64 (161 samples, 16.77%)</title><rect x="9.0625%" y="629" width="16.7708%" height="15" fill="rgb(242,16,51)"/><text x="9.3125%" y="639.50">entry_SYSCALL_64</text></g><g><title>prepare_exit_to_usermode (5 samples, 0.52%)</title><rect x="25.3125%" y="613" width="0.5208%" height="15" fill="rgb(248,9,4)"/><text x="25.5625%" y="623.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf::BufGuard::done (1 samples, 0.10%)</title><rect x="25.8333%" y="677" width="0.1042%" height="15" fill="rgb(210,31,22)"/><text x="26.0833%" y="687.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf::BufGuard::new (1 samples, 0.10%)</title><rect x="25.9375%" y="677" width="0.1042%" height="15" fill="rgb(239,54,39)"/><text x="26.1875%" y="687.50"></text></g><g><title>__libc_start_main (169 samples, 17.60%)</title><rect x="8.5417%" y="901" width="17.6042%" height="15" fill="rgb(230,99,41)"/><text x="8.7917%" y="911.50">__libc_start_main</text></g><g><title>main (169 samples, 17.60%)</title><rect x="8.5417%" y="885" width="17.6042%" height="15" fill="rgb(253,106,12)"/><text x="8.7917%" y="895.50">main</text></g><g><title>std::rt::lang_start_internal (169 samples, 17.60%)</title><rect x="8.5417%" y="869" width="17.6042%" height="15" fill="rgb(213,46,41)"/><text x="8.7917%" y="879.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (169 samples, 17.60%)</title><rect x="8.5417%" y="853" width="17.6042%" height="15" fill="rgb(215,133,35)"/><text x="8.7917%" y="863.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (169 samples, 17.60%)</title><rect x="8.5417%" y="837" width="17.6042%" height="15" fill="rgb(213,28,5)"/><text x="8.7917%" y="847.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (169 samples, 17.60%)</title><rect x="8.5417%" y="821" width="17.6042%" height="15" fill="rgb(215,77,49)"/><text x="8.7917%" y="831.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (169 samples, 17.60%)</title><rect x="8.5417%" y="805" width="17.6042%" height="15" fill="rgb(248,100,22)"/><text x="8.7917%" y="815.50">core::ops::function::impls:..</text></g><g><title>std::rt::lang_start::_{{closure}} (169 samples, 17.60%)</title><rect x="8.5417%" y="789" width="17.6042%" height="15" fill="rgb(208,67,9)"/><text x="8.7917%" y="799.50">std::rt::lang_start::_{{clo..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (169 samples, 17.60%)</title><rect x="8.5417%" y="773" width="17.6042%" height="15" fill="rgb(219,133,21)"/><text x="8.7917%" y="783.50">std::sys_common::backtrace:..</text></g><g><title>lobsters::main (169 samples, 17.60%)</title><rect x="8.5417%" y="757" width="17.6042%" height="15" fill="rgb(246,46,29)"/><text x="8.7917%" y="767.50">lobsters::main</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (169 samples, 17.60%)</title><rect x="8.5417%" y="741" width="17.6042%" height="15" fill="rgb(246,185,52)"/><text x="8.7917%" y="751.50">mysql::conn::queryable::Que..</text></g><g><title>mysql::conn::Conn::_query (169 samples, 17.60%)</title><rect x="8.5417%" y="725" width="17.6042%" height="15" fill="rgb(252,136,11)"/><text x="8.7917%" y="735.50">mysql::conn::Conn::_query</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (169 samples, 17.60%)</title><rect x="8.5417%" y="709" width="17.6042%" height="15" fill="rgb(219,138,53)"/><text x="8.7917%" y="719.50">mysql_common::proto::sync_f..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (167 samples, 17.40%)</title><rect x="8.7500%" y="693" width="17.3958%" height="15" fill="rgb(211,51,23)"/><text x="9.0000%" y="703.50">std::io::buffered::BufWrite..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf::BufGuard::remaining (1 samples, 0.10%)</title><rect x="26.0417%" y="677" width="0.1042%" height="15" fill="rgb(247,221,28)"/><text x="26.2917%" y="687.50"></text></g><g><title>_int_free (2 samples, 0.21%)</title><rect x="26.1458%" y="901" width="0.2083%" height="15" fill="rgb(251,222,45)"/><text x="26.3958%" y="911.50"></text></g><g><title>alloc::fmt::format (2 samples, 0.21%)</title><rect x="26.3542%" y="901" width="0.2083%" height="15" fill="rgb(217,162,53)"/><text x="26.6042%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="26.5625%" y="901" width="0.1042%" height="15" fill="rgb(229,93,14)"/><text x="26.8125%" y="911.50"></text></g><g><title>alloc::string::String::push (3 samples, 0.31%)</title><rect x="26.6667%" y="901" width="0.3125%" height="15" fill="rgb(209,67,49)"/><text x="26.9167%" y="911.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.10%)</title><rect x="26.9792%" y="901" width="0.1042%" height="15" fill="rgb(213,87,29)"/><text x="27.2292%" y="911.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.10%)</title><rect x="27.5000%" y="533" width="0.1042%" height="15" fill="rgb(205,151,52)"/><text x="27.7500%" y="543.50"></text></g><g><title>remove_wait_queue (1 samples, 0.10%)</title><rect x="27.6042%" y="533" width="0.1042%" height="15" fill="rgb(253,215,39)"/><text x="27.8542%" y="543.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.10%)</title><rect x="27.6042%" y="517" width="0.1042%" height="15" fill="rgb(221,220,41)"/><text x="27.8542%" y="527.50"></text></g><g><title>update_cfs_group (1 samples, 0.10%)</title><rect x="28.1250%" y="437" width="0.1042%" height="15" fill="rgb(218,133,21)"/><text x="28.3750%" y="447.50"></text></g><g><title>dequeue_task_fair (3 samples, 0.31%)</title><rect x="28.0208%" y="469" width="0.3125%" height="15" fill="rgb(221,193,43)"/><text x="28.2708%" y="479.50"></text></g><g><title>dequeue_entity (2 samples, 0.21%)</title><rect x="28.1250%" y="453" width="0.2083%" height="15" fill="rgb(240,128,52)"/><text x="28.3750%" y="463.50"></text></g><g><title>update_curr (1 samples, 0.10%)</title><rect x="28.2292%" y="437" width="0.1042%" height="15" fill="rgb(253,114,12)"/><text x="28.4792%" y="447.50"></text></g><g><title>finish_task_switch (1 samples, 0.10%)</title><rect x="28.3333%" y="469" width="0.1042%" height="15" fill="rgb(215,223,47)"/><text x="28.5833%" y="479.50"></text></g><g><title>_raw_spin_unlock_irq (1 samples, 0.10%)</title><rect x="28.3333%" y="453" width="0.1042%" height="15" fill="rgb(248,225,23)"/><text x="28.5833%" y="463.50"></text></g><g><title>apic_timer_interrupt (1 samples, 0.10%)</title><rect x="28.3333%" y="437" width="0.1042%" height="15" fill="rgb(250,108,0)"/><text x="28.5833%" y="447.50"></text></g><g><title>smp_apic_timer_interrupt (1 samples, 0.10%)</title><rect x="28.3333%" y="421" width="0.1042%" height="15" fill="rgb(228,208,7)"/><text x="28.5833%" y="431.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.10%)</title><rect x="28.3333%" y="405" width="0.1042%" height="15" fill="rgb(244,45,10)"/><text x="28.5833%" y="415.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.10%)</title><rect x="28.3333%" y="389" width="0.1042%" height="15" fill="rgb(207,125,25)"/><text x="28.5833%" y="399.50"></text></g><g><title>tick_sched_timer (1 samples, 0.10%)</title><rect x="28.3333%" y="373" width="0.1042%" height="15" fill="rgb(210,195,18)"/><text x="28.5833%" y="383.50"></text></g><g><title>timekeeping_advance (1 samples, 0.10%)</title><rect x="28.3333%" y="357" width="0.1042%" height="15" fill="rgb(249,80,12)"/><text x="28.5833%" y="367.50"></text></g><g><title>timekeeping_update (1 samples, 0.10%)</title><rect x="28.3333%" y="341" width="0.1042%" height="15" fill="rgb(221,65,9)"/><text x="28.5833%" y="351.50"></text></g><g><title>psi_task_change (1 samples, 0.10%)</title><rect x="28.4375%" y="469" width="0.1042%" height="15" fill="rgb(235,49,36)"/><text x="28.6875%" y="479.50"></text></g><g><title>psi_group_change (1 samples, 0.10%)</title><rect x="28.4375%" y="453" width="0.1042%" height="15" fill="rgb(225,32,20)"/><text x="28.6875%" y="463.50"></text></g><g><title>record_times (1 samples, 0.10%)</title><rect x="28.4375%" y="437" width="0.1042%" height="15" fill="rgb(215,141,46)"/><text x="28.6875%" y="447.50"></text></g><g><title>rcu_note_context_switch (1 samples, 0.10%)</title><rect x="28.5417%" y="469" width="0.1042%" height="15" fill="rgb(250,160,47)"/><text x="28.7917%" y="479.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.10%)</title><rect x="28.5417%" y="453" width="0.1042%" height="15" fill="rgb(216,222,40)"/><text x="28.7917%" y="463.50"></text></g><g><title>uclamp_rq_dec_id (1 samples, 0.10%)</title><rect x="28.6458%" y="469" width="0.1042%" height="15" fill="rgb(234,217,39)"/><text x="28.8958%" y="479.50"></text></g><g><title>__schedule (10 samples, 1.04%)</title><rect x="27.8125%" y="485" width="1.0417%" height="15" fill="rgb(207,178,40)"/><text x="28.0625%" y="495.50"></text></g><g><title>update_rq_clock (1 samples, 0.10%)</title><rect x="28.7500%" y="469" width="0.1042%" height="15" fill="rgb(221,136,13)"/><text x="29.0000%" y="479.50"></text></g><g><title>sk_wait_data (14 samples, 1.46%)</title><rect x="27.5000%" y="549" width="1.4583%" height="15" fill="rgb(249,199,10)"/><text x="27.7500%" y="559.50"></text></g><g><title>wait_woken (12 samples, 1.25%)</title><rect x="27.7083%" y="533" width="1.2500%" height="15" fill="rgb(249,222,13)"/><text x="27.9583%" y="543.50"></text></g><g><title>schedule_timeout (12 samples, 1.25%)</title><rect x="27.7083%" y="517" width="1.2500%" height="15" fill="rgb(244,185,38)"/><text x="27.9583%" y="527.50"></text></g><g><title>schedule (12 samples, 1.25%)</title><rect x="27.7083%" y="501" width="1.2500%" height="15" fill="rgb(236,202,9)"/><text x="27.9583%" y="511.50"></text></g><g><title>preempt_count_sub (1 samples, 0.10%)</title><rect x="28.8542%" y="485" width="0.1042%" height="15" fill="rgb(250,229,37)"/><text x="29.1042%" y="495.50"></text></g><g><title>__x64_sys_recvfrom (19 samples, 1.98%)</title><rect x="27.2917%" y="613" width="1.9792%" height="15" fill="rgb(206,174,23)"/><text x="27.5417%" y="623.50">_..</text></g><g><title>__sys_recvfrom (19 samples, 1.98%)</title><rect x="27.2917%" y="597" width="1.9792%" height="15" fill="rgb(211,33,43)"/><text x="27.5417%" y="607.50">_..</text></g><g><title>inet_recvmsg (18 samples, 1.88%)</title><rect x="27.3958%" y="581" width="1.8750%" height="15" fill="rgb(245,58,50)"/><text x="27.6458%" y="591.50">i..</text></g><g><title>tcp_recvmsg (17 samples, 1.77%)</title><rect x="27.5000%" y="565" width="1.7708%" height="15" fill="rgb(244,68,36)"/><text x="27.7500%" y="575.50">t..</text></g><g><title>skb_copy_datagram_iter (3 samples, 0.31%)</title><rect x="28.9583%" y="549" width="0.3125%" height="15" fill="rgb(232,229,15)"/><text x="29.2083%" y="559.50"></text></g><g><title>__skb_datagram_iter (3 samples, 0.31%)</title><rect x="28.9583%" y="533" width="0.3125%" height="15" fill="rgb(254,30,23)"/><text x="29.2083%" y="543.50"></text></g><g><title>simple_copy_to_iter (2 samples, 0.21%)</title><rect x="29.0625%" y="517" width="0.2083%" height="15" fill="rgb(235,160,14)"/><text x="29.3125%" y="527.50"></text></g><g><title>__check_object_size (2 samples, 0.21%)</title><rect x="29.0625%" y="501" width="0.2083%" height="15" fill="rgb(212,155,44)"/><text x="29.3125%" y="511.50"></text></g><g><title>__virt_addr_valid (1 samples, 0.10%)</title><rect x="29.1667%" y="485" width="0.1042%" height="15" fill="rgb(226,2,50)"/><text x="29.4167%" y="495.50"></text></g><g><title>syscall_slow_exit_work (1 samples, 0.10%)</title><rect x="29.2708%" y="613" width="0.1042%" height="15" fill="rgb(234,177,6)"/><text x="29.5208%" y="623.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.10%)</title><rect x="29.2708%" y="597" width="0.1042%" height="15" fill="rgb(217,24,9)"/><text x="29.5208%" y="607.50"></text></g><g><title>do_syscall_64 (22 samples, 2.29%)</title><rect x="27.1875%" y="629" width="2.2917%" height="15" fill="rgb(220,13,46)"/><text x="27.4375%" y="639.50">d..</text></g><g><title>syscall_trace_enter (1 samples, 0.10%)</title><rect x="29.3750%" y="613" width="0.1042%" height="15" fill="rgb(239,221,27)"/><text x="29.6250%" y="623.50"></text></g><g><title>ktime_get_coarse_real_ts64 (1 samples, 0.10%)</title><rect x="29.3750%" y="597" width="0.1042%" height="15" fill="rgb(222,198,25)"/><text x="29.6250%" y="607.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (25 samples, 2.60%)</title><rect x="27.0833%" y="901" width="2.6042%" height="15" fill="rgb(211,99,13)"/><text x="27.3333%" y="911.50">co..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (25 samples, 2.60%)</title><rect x="27.0833%" y="885" width="2.6042%" height="15" fill="rgb(232,111,31)"/><text x="27.3333%" y="895.50">st..</text></g><g><title>decor::Shim::run_on_tcp (25 samples, 2.60%)</title><rect x="27.0833%" y="869" width="2.6042%" height="15" fill="rgb(245,82,37)"/><text x="27.3333%" y="879.50">de..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (25 samples, 2.60%)</title><rect x="27.0833%" y="853" width="2.6042%" height="15" fill="rgb(227,149,46)"/><text x="27.3333%" y="863.50">ms..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (25 samples, 2.60%)</title><rect x="27.0833%" y="837" width="2.6042%" height="15" fill="rgb(218,36,50)"/><text x="27.3333%" y="847.50">&lt;d..</text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (25 samples, 2.60%)</title><rect x="27.0833%" y="821" width="2.6042%" height="15" fill="rgb(226,80,48)"/><text x="27.3333%" y="831.50">&lt;m..</text></g><g><title>mysql::conn::Conn::_query (25 samples, 2.60%)</title><rect x="27.0833%" y="805" width="2.6042%" height="15" fill="rgb(238,224,15)"/><text x="27.3333%" y="815.50">my..</text></g><g><title>mysql::conn::Conn::handle_result_set (25 samples, 2.60%)</title><rect x="27.0833%" y="789" width="2.6042%" height="15" fill="rgb(241,136,10)"/><text x="27.3333%" y="799.50">my..</text></g><g><title>mysql::conn::Conn::read_packet (25 samples, 2.60%)</title><rect x="27.0833%" y="773" width="2.6042%" height="15" fill="rgb(208,32,45)"/><text x="27.3333%" y="783.50">my..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 2.60%)</title><rect x="27.0833%" y="757" width="2.6042%" height="15" fill="rgb(207,135,9)"/><text x="27.3333%" y="767.50">&lt;m..</text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (25 samples, 2.60%)</title><rect x="27.0833%" y="741" width="2.6042%" height="15" fill="rgb(206,86,44)"/><text x="27.3333%" y="751.50">&lt;s..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (25 samples, 2.60%)</title><rect x="27.0833%" y="725" width="2.6042%" height="15" fill="rgb(245,177,15)"/><text x="27.3333%" y="735.50">&lt;s..</text></g><g><title>std::sys_common::net::TcpStream::read (25 samples, 2.60%)</title><rect x="27.0833%" y="709" width="2.6042%" height="15" fill="rgb(206,64,50)"/><text x="27.3333%" y="719.50">st..</text></g><g><title>std::sys::unix::net::Socket::read (25 samples, 2.60%)</title><rect x="27.0833%" y="693" width="2.6042%" height="15" fill="rgb(234,36,40)"/><text x="27.3333%" y="703.50">st..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (25 samples, 2.60%)</title><rect x="27.0833%" y="677" width="2.6042%" height="15" fill="rgb(213,64,8)"/><text x="27.3333%" y="687.50">st..</text></g><g><title>__libc_recv (25 samples, 2.60%)</title><rect x="27.0833%" y="661" width="2.6042%" height="15" fill="rgb(210,75,36)"/><text x="27.3333%" y="671.50">__..</text></g><g><title>entry_SYSCALL_64 (25 samples, 2.60%)</title><rect x="27.0833%" y="645" width="2.6042%" height="15" fill="rgb(229,88,21)"/><text x="27.3333%" y="655.50">en..</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.21%)</title><rect x="29.4792%" y="629" width="0.2083%" height="15" fill="rgb(252,204,47)"/><text x="29.7292%" y="639.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.42%)</title><rect x="29.6875%" y="901" width="0.4167%" height="15" fill="rgb(208,77,27)"/><text x="29.9375%" y="911.50"></text></g><g><title>decor::query_transformer::QueryTransformer::get_mv_stmt (1 samples, 0.10%)</title><rect x="30.1042%" y="885" width="0.1042%" height="15" fill="rgb(221,76,26)"/><text x="30.3542%" y="895.50"></text></g><g><title>core::fmt::write (1 samples, 0.10%)</title><rect x="30.1042%" y="869" width="0.1042%" height="15" fill="rgb(225,139,18)"/><text x="30.3542%" y="879.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::CreateTableStatement as core::fmt::Display&gt;::fmt (1 samples, 0.10%)</title><rect x="30.1042%" y="853" width="0.1042%" height="15" fill="rgb(230,137,11)"/><text x="30.3542%" y="863.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::CreateTableStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.10%)</title><rect x="30.1042%" y="837" width="0.1042%" height="15" fill="rgb(212,28,1)"/><text x="30.3542%" y="847.50"></text></g><g><title>&lt;sql_parser::ast::defs::ddl::IndexDef as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.10%)</title><rect x="30.1042%" y="821" width="0.1042%" height="15" fill="rgb(248,164,17)"/><text x="30.3542%" y="831.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.10%)</title><rect x="30.1042%" y="805" width="0.1042%" height="15" fill="rgb(222,171,42)"/><text x="30.3542%" y="815.50"></text></g><g><title>core::fmt::write (1 samples, 0.10%)</title><rect x="30.1042%" y="789" width="0.1042%" height="15" fill="rgb(243,84,45)"/><text x="30.3542%" y="799.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="30.1042%" y="773" width="0.1042%" height="15" fill="rgb(252,49,23)"/><text x="30.3542%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.10%)</title><rect x="30.1042%" y="757" width="0.1042%" height="15" fill="rgb(215,19,7)"/><text x="30.3542%" y="767.50"></text></g><g><title>decor::Shim::create_schema (2 samples, 0.21%)</title><rect x="30.1042%" y="901" width="0.2083%" height="15" fill="rgb(238,81,41)"/><text x="30.3542%" y="911.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (1 samples, 0.10%)</title><rect x="30.2083%" y="885" width="0.1042%" height="15" fill="rgb(210,199,37)"/><text x="30.4583%" y="895.50"></text></g><g><title>sql_parser::parser::parse_statements (1 samples, 0.10%)</title><rect x="30.2083%" y="869" width="0.1042%" height="15" fill="rgb(244,192,49)"/><text x="30.4583%" y="879.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (1 samples, 0.10%)</title><rect x="30.2083%" y="853" width="0.1042%" height="15" fill="rgb(226,211,11)"/><text x="30.4583%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="30.2083%" y="837" width="0.1042%" height="15" fill="rgb(236,162,54)"/><text x="30.4583%" y="847.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.10%)</title><rect x="30.2083%" y="821" width="0.1042%" height="15" fill="rgb(220,229,9)"/><text x="30.4583%" y="831.50"></text></g><g><title>_int_realloc (1 samples, 0.10%)</title><rect x="30.2083%" y="805" width="0.1042%" height="15" fill="rgb(250,87,22)"/><text x="30.4583%" y="815.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="30.2083%" y="789" width="0.1042%" height="15" fill="rgb(239,43,17)"/><text x="30.4583%" y="799.50"></text></g><g><title>sysmalloc (1 samples, 0.10%)</title><rect x="30.2083%" y="773" width="0.1042%" height="15" fill="rgb(231,177,25)"/><text x="30.4583%" y="783.50"></text></g><g><title>page_fault (1 samples, 0.10%)</title><rect x="30.2083%" y="757" width="0.1042%" height="15" fill="rgb(219,179,1)"/><text x="30.4583%" y="767.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.10%)</title><rect x="30.2083%" y="741" width="0.1042%" height="15" fill="rgb(238,219,53)"/><text x="30.4583%" y="751.50"></text></g><g><title>handle_mm_fault (1 samples, 0.10%)</title><rect x="30.2083%" y="725" width="0.1042%" height="15" fill="rgb(232,167,36)"/><text x="30.4583%" y="735.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.10%)</title><rect x="30.2083%" y="709" width="0.1042%" height="15" fill="rgb(244,19,51)"/><text x="30.4583%" y="719.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.10%)</title><rect x="30.2083%" y="693" width="0.1042%" height="15" fill="rgb(224,6,22)"/><text x="30.4583%" y="703.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.10%)</title><rect x="30.2083%" y="677" width="0.1042%" height="15" fill="rgb(224,145,5)"/><text x="30.4583%" y="687.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.10%)</title><rect x="30.2083%" y="661" width="0.1042%" height="15" fill="rgb(234,130,49)"/><text x="30.4583%" y="671.50"></text></g><g><title>prep_new_page (1 samples, 0.10%)</title><rect x="30.2083%" y="645" width="0.1042%" height="15" fill="rgb(254,6,2)"/><text x="30.4583%" y="655.50"></text></g><g><title>kernel_init_free_pages (1 samples, 0.10%)</title><rect x="30.2083%" y="629" width="0.1042%" height="15" fill="rgb(208,96,46)"/><text x="30.4583%" y="639.50"></text></g><g><title>clear_page_erms (1 samples, 0.10%)</title><rect x="30.2083%" y="613" width="0.1042%" height="15" fill="rgb(239,3,39)"/><text x="30.4583%" y="623.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (2 samples, 0.21%)</title><rect x="30.3125%" y="853" width="0.2083%" height="15" fill="rgb(233,210,1)"/><text x="30.5625%" y="863.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.21%)</title><rect x="30.3125%" y="837" width="0.2083%" height="15" fill="rgb(244,137,37)"/><text x="30.5625%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.21%)</title><rect x="30.3125%" y="821" width="0.2083%" height="15" fill="rgb(240,136,2)"/><text x="30.5625%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.21%)</title><rect x="30.3125%" y="805" width="0.2083%" height="15" fill="rgb(239,18,37)"/><text x="30.5625%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.21%)</title><rect x="30.3125%" y="789" width="0.2083%" height="15" fill="rgb(218,185,22)"/><text x="30.5625%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.21%)</title><rect x="30.3125%" y="773" width="0.2083%" height="15" fill="rgb(225,218,4)"/><text x="30.5625%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.21%)</title><rect x="30.3125%" y="757" width="0.2083%" height="15" fill="rgb(230,182,32)"/><text x="30.5625%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.21%)</title><rect x="30.3125%" y="741" width="0.2083%" height="15" fill="rgb(242,56,43)"/><text x="30.5625%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.21%)</title><rect x="30.3125%" y="725" width="0.2083%" height="15" fill="rgb(233,99,24)"/><text x="30.5625%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.21%)</title><rect x="30.3125%" y="709" width="0.2083%" height="15" fill="rgb(234,209,42)"/><text x="30.5625%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.21%)</title><rect x="30.3125%" y="693" width="0.2083%" height="15" fill="rgb(227,7,12)"/><text x="30.5625%" y="703.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.21%)</title><rect x="30.3125%" y="677" width="0.2083%" height="15" fill="rgb(245,203,43)"/><text x="30.5625%" y="687.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.21%)</title><rect x="30.3125%" y="661" width="0.2083%" height="15" fill="rgb(238,205,33)"/><text x="30.5625%" y="671.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="30.4167%" y="645" width="0.1042%" height="15" fill="rgb(231,56,7)"/><text x="30.6667%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.10%)</title><rect x="30.5208%" y="853" width="0.1042%" height="15" fill="rgb(244,186,29)"/><text x="30.7708%" y="863.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="30.7292%" y="837" width="0.1042%" height="15" fill="rgb(234,111,31)"/><text x="30.9792%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="30.7292%" y="821" width="0.1042%" height="15" fill="rgb(241,149,10)"/><text x="30.9792%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="30.7292%" y="805" width="0.1042%" height="15" fill="rgb(249,206,44)"/><text x="30.9792%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="30.7292%" y="789" width="0.1042%" height="15" fill="rgb(251,153,30)"/><text x="30.9792%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="30.7292%" y="773" width="0.1042%" height="15" fill="rgb(239,152,38)"/><text x="30.9792%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="30.7292%" y="757" width="0.1042%" height="15" fill="rgb(249,139,47)"/><text x="30.9792%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="30.7292%" y="741" width="0.1042%" height="15" fill="rgb(244,64,35)"/><text x="30.9792%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="30.7292%" y="725" width="0.1042%" height="15" fill="rgb(216,46,15)"/><text x="30.9792%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="30.7292%" y="709" width="0.1042%" height="15" fill="rgb(250,74,19)"/><text x="30.9792%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="30.7292%" y="693" width="0.1042%" height="15" fill="rgb(249,42,33)"/><text x="30.9792%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="30.7292%" y="677" width="0.1042%" height="15" fill="rgb(242,149,17)"/><text x="30.9792%" y="687.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="30.7292%" y="661" width="0.1042%" height="15" fill="rgb(244,29,21)"/><text x="30.9792%" y="671.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="30.7292%" y="645" width="0.1042%" height="15" fill="rgb(220,130,37)"/><text x="30.9792%" y="655.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (5 samples, 0.52%)</title><rect x="30.6250%" y="853" width="0.5208%" height="15" fill="rgb(211,67,2)"/><text x="30.8750%" y="863.50"></text></g><g><title>__memcmp_avx2_movbe (3 samples, 0.31%)</title><rect x="30.8333%" y="837" width="0.3125%" height="15" fill="rgb(235,68,52)"/><text x="31.0833%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::parse_object_name (1 samples, 0.10%)</title><rect x="31.1458%" y="853" width="0.1042%" height="15" fill="rgb(246,142,3)"/><text x="31.3958%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::parse_identifier (1 samples, 0.10%)</title><rect x="31.1458%" y="837" width="0.1042%" height="15" fill="rgb(241,25,7)"/><text x="31.3958%" y="847.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="31.1458%" y="821" width="0.1042%" height="15" fill="rgb(242,119,39)"/><text x="31.3958%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.21%)</title><rect x="31.3542%" y="837" width="0.2083%" height="15" fill="rgb(241,98,45)"/><text x="31.6042%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.21%)</title><rect x="31.5625%" y="821" width="0.2083%" height="15" fill="rgb(254,28,30)"/><text x="31.8125%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.21%)</title><rect x="31.5625%" y="805" width="0.2083%" height="15" fill="rgb(241,142,54)"/><text x="31.8125%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.21%)</title><rect x="31.5625%" y="789" width="0.2083%" height="15" fill="rgb(222,85,15)"/><text x="31.8125%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.21%)</title><rect x="31.5625%" y="773" width="0.2083%" height="15" fill="rgb(210,85,47)"/><text x="31.8125%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.21%)</title><rect x="31.5625%" y="757" width="0.2083%" height="15" fill="rgb(224,206,25)"/><text x="31.8125%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.21%)</title><rect x="31.5625%" y="741" width="0.2083%" height="15" fill="rgb(243,201,19)"/><text x="31.8125%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.21%)</title><rect x="31.5625%" y="725" width="0.2083%" height="15" fill="rgb(236,59,4)"/><text x="31.8125%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.21%)</title><rect x="31.5625%" y="709" width="0.2083%" height="15" fill="rgb(254,179,45)"/><text x="31.8125%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.21%)</title><rect x="31.5625%" y="693" width="0.2083%" height="15" fill="rgb(226,14,10)"/><text x="31.8125%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.21%)</title><rect x="31.5625%" y="677" width="0.2083%" height="15" fill="rgb(244,27,41)"/><text x="31.8125%" y="687.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.21%)</title><rect x="31.5625%" y="661" width="0.2083%" height="15" fill="rgb(235,35,32)"/><text x="31.8125%" y="671.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.21%)</title><rect x="31.5625%" y="645" width="0.2083%" height="15" fill="rgb(218,68,31)"/><text x="31.8125%" y="655.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (3 samples, 0.31%)</title><rect x="31.7708%" y="821" width="0.3125%" height="15" fill="rgb(207,120,37)"/><text x="32.0208%" y="831.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.21%)</title><rect x="31.8750%" y="805" width="0.2083%" height="15" fill="rgb(227,98,0)"/><text x="32.1250%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.21%)</title><rect x="31.8750%" y="789" width="0.2083%" height="15" fill="rgb(207,7,3)"/><text x="32.1250%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.21%)</title><rect x="31.8750%" y="773" width="0.2083%" height="15" fill="rgb(206,98,19)"/><text x="32.1250%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.21%)</title><rect x="31.8750%" y="757" width="0.2083%" height="15" fill="rgb(217,5,26)"/><text x="32.1250%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.21%)</title><rect x="31.8750%" y="741" width="0.2083%" height="15" fill="rgb(235,190,38)"/><text x="32.1250%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.21%)</title><rect x="31.8750%" y="725" width="0.2083%" height="15" fill="rgb(247,86,24)"/><text x="32.1250%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.21%)</title><rect x="31.8750%" y="709" width="0.2083%" height="15" fill="rgb(205,101,16)"/><text x="32.1250%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.21%)</title><rect x="31.8750%" y="693" width="0.2083%" height="15" fill="rgb(246,168,33)"/><text x="32.1250%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.21%)</title><rect x="31.8750%" y="677" width="0.2083%" height="15" fill="rgb(231,114,1)"/><text x="32.1250%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.21%)</title><rect x="31.8750%" y="661" width="0.2083%" height="15" fill="rgb(207,184,53)"/><text x="32.1250%" y="671.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.21%)</title><rect x="31.8750%" y="645" width="0.2083%" height="15" fill="rgb(224,95,51)"/><text x="32.1250%" y="655.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.21%)</title><rect x="31.8750%" y="629" width="0.2083%" height="15" fill="rgb(212,188,45)"/><text x="32.1250%" y="639.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="31.9792%" y="613" width="0.1042%" height="15" fill="rgb(223,154,38)"/><text x="32.2292%" y="623.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="32.0833%" y="821" width="0.1042%" height="15" fill="rgb(251,22,52)"/><text x="32.3333%" y="831.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="32.2917%" y="805" width="0.1042%" height="15" fill="rgb(229,209,22)"/><text x="32.5417%" y="815.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="32.2917%" y="789" width="0.1042%" height="15" fill="rgb(234,138,34)"/><text x="32.5417%" y="799.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.10%)</title><rect x="32.2917%" y="773" width="0.1042%" height="15" fill="rgb(212,95,11)"/><text x="32.5417%" y="783.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="32.2917%" y="757" width="0.1042%" height="15" fill="rgb(240,179,47)"/><text x="32.5417%" y="767.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.10%)</title><rect x="32.2917%" y="741" width="0.1042%" height="15" fill="rgb(240,163,11)"/><text x="32.5417%" y="751.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.10%)</title><rect x="32.3958%" y="805" width="0.1042%" height="15" fill="rgb(236,37,12)"/><text x="32.6458%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.10%)</title><rect x="32.3958%" y="789" width="0.1042%" height="15" fill="rgb(232,164,16)"/><text x="32.6458%" y="799.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (24 samples, 2.50%)</title><rect x="30.3125%" y="901" width="2.5000%" height="15" fill="rgb(244,205,15)"/><text x="30.5625%" y="911.50">de..</text></g><g><title>sql_parser::parser::parse_statements (24 samples, 2.50%)</title><rect x="30.3125%" y="885" width="2.5000%" height="15" fill="rgb(223,117,47)"/><text x="30.5625%" y="895.50">sq..</text></g><g><title>sql_parser::parser::Parser::parse_statement (24 samples, 2.50%)</title><rect x="30.3125%" y="869" width="2.5000%" height="15" fill="rgb(244,107,35)"/><text x="30.5625%" y="879.50">sq..</text></g><g><title>sql_parser::parser::Parser::parse_parenthesized_column_list (15 samples, 1.56%)</title><rect x="31.2500%" y="853" width="1.5625%" height="15" fill="rgb(205,140,8)"/><text x="31.5000%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::parse_identifier (12 samples, 1.25%)</title><rect x="31.5625%" y="837" width="1.2500%" height="15" fill="rgb(228,84,46)"/><text x="31.8125%" y="847.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (6 samples, 0.62%)</title><rect x="32.1875%" y="821" width="0.6250%" height="15" fill="rgb(254,188,9)"/><text x="32.4375%" y="831.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_lower (3 samples, 0.31%)</title><rect x="32.5000%" y="805" width="0.3125%" height="15" fill="rgb(206,112,54)"/><text x="32.7500%" y="815.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (3 samples, 0.31%)</title><rect x="32.5000%" y="789" width="0.3125%" height="15" fill="rgb(216,84,49)"/><text x="32.7500%" y="799.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (3 samples, 0.31%)</title><rect x="32.5000%" y="773" width="0.3125%" height="15" fill="rgb(214,194,35)"/><text x="32.7500%" y="783.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (1 samples, 0.10%)</title><rect x="32.7083%" y="757" width="0.1042%" height="15" fill="rgb(249,28,3)"/><text x="32.9583%" y="767.50"></text></g><g><title>hwloc::Topology::new (1 samples, 0.10%)</title><rect x="32.8125%" y="885" width="0.1042%" height="15" fill="rgb(222,56,52)"/><text x="33.0625%" y="895.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.10%)</title><rect x="32.8125%" y="869" width="0.1042%" height="15" fill="rgb(245,217,50)"/><text x="33.0625%" y="879.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.10%)</title><rect x="32.8125%" y="853" width="0.1042%" height="15" fill="rgb(213,201,24)"/><text x="33.0625%" y="863.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.10%)</title><rect x="32.8125%" y="837" width="0.1042%" height="15" fill="rgb(248,116,28)"/><text x="33.0625%" y="847.50"></text></g><g><title>dlopen (1 samples, 0.10%)</title><rect x="32.8125%" y="821" width="0.1042%" height="15" fill="rgb(219,72,43)"/><text x="33.0625%" y="831.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.10%)</title><rect x="32.8125%" y="805" width="0.1042%" height="15" fill="rgb(209,138,14)"/><text x="33.0625%" y="815.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.10%)</title><rect x="32.8125%" y="789" width="0.1042%" height="15" fill="rgb(222,18,33)"/><text x="33.0625%" y="799.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.10%)</title><rect x="32.8125%" y="773" width="0.1042%" height="15" fill="rgb(213,199,7)"/><text x="33.0625%" y="783.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.10%)</title><rect x="32.8125%" y="757" width="0.1042%" height="15" fill="rgb(250,110,10)"/><text x="33.0625%" y="767.50"></text></g><g><title>_dl_open (1 samples, 0.10%)</title><rect x="32.8125%" y="741" width="0.1042%" height="15" fill="rgb(248,123,6)"/><text x="33.0625%" y="751.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.10%)</title><rect x="32.8125%" y="725" width="0.1042%" height="15" fill="rgb(206,91,31)"/><text x="33.0625%" y="735.50"></text></g><g><title>dl_open_worker (1 samples, 0.10%)</title><rect x="32.8125%" y="709" width="0.1042%" height="15" fill="rgb(211,154,13)"/><text x="33.0625%" y="719.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.10%)</title><rect x="32.8125%" y="693" width="0.1042%" height="15" fill="rgb(225,148,7)"/><text x="33.0625%" y="703.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.10%)</title><rect x="32.8125%" y="677" width="0.1042%" height="15" fill="rgb(220,160,43)"/><text x="33.0625%" y="687.50"></text></g><g><title>do_lookup_x (1 samples, 0.10%)</title><rect x="32.8125%" y="661" width="0.1042%" height="15" fill="rgb(213,52,39)"/><text x="33.0625%" y="671.50"></text></g><g><title>mysql::conn::Conn::handle_ok (1 samples, 0.10%)</title><rect x="32.9167%" y="837" width="0.1042%" height="15" fill="rgb(243,137,7)"/><text x="33.1667%" y="847.50"></text></g><g><title>fput_many (1 samples, 0.10%)</title><rect x="33.9583%" y="645" width="0.1042%" height="15" fill="rgb(230,79,13)"/><text x="34.2083%" y="655.50"></text></g><g><title>skb_release_data (1 samples, 0.10%)</title><rect x="34.5833%" y="597" width="0.1042%" height="15" fill="rgb(247,105,23)"/><text x="34.8333%" y="607.50"></text></g><g><title>dst_release (2 samples, 0.21%)</title><rect x="34.6875%" y="581" width="0.2083%" height="15" fill="rgb(223,179,41)"/><text x="34.9375%" y="591.50"></text></g><g><title>__kfree_skb (4 samples, 0.42%)</title><rect x="34.5833%" y="613" width="0.4167%" height="15" fill="rgb(218,9,34)"/><text x="34.8333%" y="623.50"></text></g><g><title>skb_release_head_state (3 samples, 0.31%)</title><rect x="34.6875%" y="597" width="0.3125%" height="15" fill="rgb(222,106,8)"/><text x="34.9375%" y="607.50"></text></g><g><title>sock_rfree (1 samples, 0.10%)</title><rect x="34.8958%" y="581" width="0.1042%" height="15" fill="rgb(211,220,0)"/><text x="35.1458%" y="591.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.10%)</title><rect x="35.0000%" y="597" width="0.1042%" height="15" fill="rgb(229,52,16)"/><text x="35.2500%" y="607.50"></text></g><g><title>_raw_spin_unlock_irqrestore (1 samples, 0.10%)</title><rect x="35.1042%" y="597" width="0.1042%" height="15" fill="rgb(212,155,18)"/><text x="35.3542%" y="607.50"></text></g><g><title>preempt_count_sub (1 samples, 0.10%)</title><rect x="35.1042%" y="581" width="0.1042%" height="15" fill="rgb(242,21,14)"/><text x="35.3542%" y="591.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.10%)</title><rect x="35.7292%" y="517" width="0.1042%" height="15" fill="rgb(222,19,48)"/><text x="35.9792%" y="527.50"></text></g><g><title>_raw_spin_lock (2 samples, 0.21%)</title><rect x="35.8333%" y="517" width="0.2083%" height="15" fill="rgb(232,45,27)"/><text x="36.0833%" y="527.50"></text></g><g><title>preempt_count_add (2 samples, 0.21%)</title><rect x="35.8333%" y="501" width="0.2083%" height="15" fill="rgb(249,103,42)"/><text x="36.0833%" y="511.50"></text></g><g><title>__perf_event_task_sched_out (4 samples, 0.42%)</title><rect x="35.7292%" y="533" width="0.4167%" height="15" fill="rgb(246,81,33)"/><text x="35.9792%" y="543.50"></text></g><g><title>ctx_sched_out (1 samples, 0.10%)</title><rect x="36.0417%" y="517" width="0.1042%" height="15" fill="rgb(252,33,42)"/><text x="36.2917%" y="527.50"></text></g><g><title>intel_pmu_disable_all (1 samples, 0.10%)</title><rect x="36.0417%" y="501" width="0.1042%" height="15" fill="rgb(209,212,41)"/><text x="36.2917%" y="511.50"></text></g><g><title>__calc_delta (1 samples, 0.10%)</title><rect x="36.1458%" y="485" width="0.1042%" height="15" fill="rgb(207,154,6)"/><text x="36.3958%" y="495.50"></text></g><g><title>__cgroup_account_cputime (1 samples, 0.10%)</title><rect x="36.2500%" y="485" width="0.1042%" height="15" fill="rgb(223,64,47)"/><text x="36.5000%" y="495.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.10%)</title><rect x="36.3542%" y="485" width="0.1042%" height="15" fill="rgb(211,161,38)"/><text x="36.6042%" y="495.50"></text></g><g><title>update_curr (4 samples, 0.42%)</title><rect x="36.1458%" y="501" width="0.4167%" height="15" fill="rgb(219,138,40)"/><text x="36.3958%" y="511.50"></text></g><g><title>update_min_vruntime (1 samples, 0.10%)</title><rect x="36.4583%" y="485" width="0.1042%" height="15" fill="rgb(241,228,46)"/><text x="36.7083%" y="495.50"></text></g><g><title>dequeue_task_fair (7 samples, 0.73%)</title><rect x="36.1458%" y="533" width="0.7292%" height="15" fill="rgb(223,209,38)"/><text x="36.3958%" y="543.50"></text></g><g><title>dequeue_entity (7 samples, 0.73%)</title><rect x="36.1458%" y="517" width="0.7292%" height="15" fill="rgb(236,164,45)"/><text x="36.3958%" y="527.50"></text></g><g><title>update_load_avg (3 samples, 0.31%)</title><rect x="36.5625%" y="501" width="0.3125%" height="15" fill="rgb(231,15,5)"/><text x="36.8125%" y="511.50"></text></g><g><title>__update_load_avg_cfs_rq (2 samples, 0.21%)</title><rect x="36.6667%" y="485" width="0.2083%" height="15" fill="rgb(252,35,15)"/><text x="36.9167%" y="495.50"></text></g><g><title>finish_task_switch (10 samples, 1.04%)</title><rect x="36.8750%" y="533" width="1.0417%" height="15" fill="rgb(248,181,18)"/><text x="37.1250%" y="543.50"></text></g><g><title>__perf_event_task_sched_in (2 samples, 0.21%)</title><rect x="37.7083%" y="517" width="0.2083%" height="15" fill="rgb(233,39,42)"/><text x="37.9583%" y="527.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (2 samples, 0.21%)</title><rect x="37.7083%" y="501" width="0.2083%" height="15" fill="rgb(238,110,33)"/><text x="37.9583%" y="511.50"></text></g><g><title>native_write_msr (2 samples, 0.21%)</title><rect x="37.7083%" y="485" width="0.2083%" height="15" fill="rgb(233,195,10)"/><text x="37.9583%" y="495.50"></text></g><g><title>pick_next_task_fair (1 samples, 0.10%)</title><rect x="37.9167%" y="533" width="0.1042%" height="15" fill="rgb(254,105,3)"/><text x="38.1667%" y="543.50"></text></g><g><title>psi_task_change (7 samples, 0.73%)</title><rect x="38.0208%" y="533" width="0.7292%" height="15" fill="rgb(221,225,9)"/><text x="38.2708%" y="543.50"></text></g><g><title>psi_group_change (7 samples, 0.73%)</title><rect x="38.0208%" y="517" width="0.7292%" height="15" fill="rgb(224,227,45)"/><text x="38.2708%" y="527.50"></text></g><g><title>record_times (3 samples, 0.31%)</title><rect x="38.4375%" y="501" width="0.3125%" height="15" fill="rgb(229,198,43)"/><text x="38.6875%" y="511.50"></text></g><g><title>sched_clock_cpu (3 samples, 0.31%)</title><rect x="38.4375%" y="485" width="0.3125%" height="15" fill="rgb(206,209,35)"/><text x="38.6875%" y="495.50"></text></g><g><title>sched_clock (1 samples, 0.10%)</title><rect x="38.6458%" y="469" width="0.1042%" height="15" fill="rgb(245,195,53)"/><text x="38.8958%" y="479.50"></text></g><g><title>native_sched_clock (1 samples, 0.10%)</title><rect x="38.6458%" y="453" width="0.1042%" height="15" fill="rgb(240,92,26)"/><text x="38.8958%" y="463.50"></text></g><g><title>uclamp_rq_dec_id (5 samples, 0.52%)</title><rect x="38.7500%" y="533" width="0.5208%" height="15" fill="rgb(207,40,23)"/><text x="39.0000%" y="543.50"></text></g><g><title>__schedule (36 samples, 3.75%)</title><rect x="35.6250%" y="549" width="3.7500%" height="15" fill="rgb(223,111,35)"/><text x="35.8750%" y="559.50">__sc..</text></g><g><title>update_rq_clock (1 samples, 0.10%)</title><rect x="39.2708%" y="533" width="0.1042%" height="15" fill="rgb(229,147,28)"/><text x="39.5208%" y="543.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.10%)</title><rect x="39.2708%" y="517" width="0.1042%" height="15" fill="rgb(211,29,28)"/><text x="39.5208%" y="527.50"></text></g><g><title>sched_clock (1 samples, 0.10%)</title><rect x="39.2708%" y="501" width="0.1042%" height="15" fill="rgb(228,72,33)"/><text x="39.5208%" y="511.50"></text></g><g><title>native_sched_clock (1 samples, 0.10%)</title><rect x="39.2708%" y="485" width="0.1042%" height="15" fill="rgb(205,214,31)"/><text x="39.5208%" y="495.50"></text></g><g><title>sk_wait_data (43 samples, 4.48%)</title><rect x="35.0000%" y="613" width="4.4792%" height="15" fill="rgb(224,111,15)"/><text x="35.2500%" y="623.50">sk_wa..</text></g><g><title>wait_woken (41 samples, 4.27%)</title><rect x="35.2083%" y="597" width="4.2708%" height="15" fill="rgb(253,21,26)"/><text x="35.4583%" y="607.50">wait_..</text></g><g><title>schedule_timeout (38 samples, 3.96%)</title><rect x="35.5208%" y="581" width="3.9583%" height="15" fill="rgb(245,139,43)"/><text x="35.7708%" y="591.50">sche..</text></g><g><title>schedule (38 samples, 3.96%)</title><rect x="35.5208%" y="565" width="3.9583%" height="15" fill="rgb(252,170,7)"/><text x="35.7708%" y="575.50">sche..</text></g><g><title>preempt_count_add (1 samples, 0.10%)</title><rect x="39.3750%" y="549" width="0.1042%" height="15" fill="rgb(231,118,14)"/><text x="39.6250%" y="559.50"></text></g><g><title>skb_copy_datagram_iter (5 samples, 0.52%)</title><rect x="39.4792%" y="613" width="0.5208%" height="15" fill="rgb(238,83,0)"/><text x="39.7292%" y="623.50"></text></g><g><title>__skb_datagram_iter (4 samples, 0.42%)</title><rect x="39.5833%" y="597" width="0.4167%" height="15" fill="rgb(221,39,39)"/><text x="39.8333%" y="607.50"></text></g><g><title>simple_copy_to_iter (2 samples, 0.21%)</title><rect x="39.7917%" y="581" width="0.2083%" height="15" fill="rgb(222,119,46)"/><text x="40.0417%" y="591.50"></text></g><g><title>__check_object_size (2 samples, 0.21%)</title><rect x="39.7917%" y="565" width="0.2083%" height="15" fill="rgb(222,165,49)"/><text x="40.0417%" y="575.50"></text></g><g><title>__x64_sys_recvfrom (60 samples, 6.25%)</title><rect x="33.8542%" y="677" width="6.2500%" height="15" fill="rgb(219,113,52)"/><text x="34.1042%" y="687.50">__x64_sy..</text></g><g><title>__sys_recvfrom (60 samples, 6.25%)</title><rect x="33.8542%" y="661" width="6.2500%" height="15" fill="rgb(214,7,15)"/><text x="34.1042%" y="671.50">__sys_re..</text></g><g><title>inet_recvmsg (58 samples, 6.04%)</title><rect x="34.0625%" y="645" width="6.0417%" height="15" fill="rgb(235,32,4)"/><text x="34.3125%" y="655.50">inet_rec..</text></g><g><title>tcp_recvmsg (58 samples, 6.04%)</title><rect x="34.0625%" y="629" width="6.0417%" height="15" fill="rgb(238,90,54)"/><text x="34.3125%" y="639.50">tcp_recv..</text></g><g><title>tcp_cleanup_rbuf (1 samples, 0.10%)</title><rect x="40.0000%" y="613" width="0.1042%" height="15" fill="rgb(213,208,19)"/><text x="40.2500%" y="623.50"></text></g><g><title>mntput (1 samples, 0.10%)</title><rect x="40.1042%" y="645" width="0.1042%" height="15" fill="rgb(233,156,4)"/><text x="40.3542%" y="655.50"></text></g><g><title>syscall_slow_exit_work (2 samples, 0.21%)</title><rect x="40.1042%" y="677" width="0.2083%" height="15" fill="rgb(207,194,5)"/><text x="40.3542%" y="687.50"></text></g><g><title>__audit_syscall_exit (2 samples, 0.21%)</title><rect x="40.1042%" y="661" width="0.2083%" height="15" fill="rgb(206,111,30)"/><text x="40.3542%" y="671.50"></text></g><g><title>unroll_tree_refs (1 samples, 0.10%)</title><rect x="40.2083%" y="645" width="0.1042%" height="15" fill="rgb(243,70,54)"/><text x="40.4583%" y="655.50"></text></g><g><title>do_syscall_64 (64 samples, 6.67%)</title><rect x="33.8542%" y="693" width="6.6667%" height="15" fill="rgb(242,28,8)"/><text x="34.1042%" y="703.50">do_syscal..</text></g><g><title>syscall_trace_enter (2 samples, 0.21%)</title><rect x="40.3125%" y="677" width="0.2083%" height="15" fill="rgb(219,106,18)"/><text x="40.5625%" y="687.50"></text></g><g><title>__audit_syscall_entry (1 samples, 0.10%)</title><rect x="40.4167%" y="661" width="0.1042%" height="15" fill="rgb(244,222,10)"/><text x="40.6667%" y="671.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (73 samples, 7.60%)</title><rect x="33.2292%" y="805" width="7.6042%" height="15" fill="rgb(236,179,52)"/><text x="33.4792%" y="815.50">&lt;std::io::..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (72 samples, 7.50%)</title><rect x="33.3333%" y="789" width="7.5000%" height="15" fill="rgb(213,23,39)"/><text x="33.5833%" y="799.50">&lt;std::net:..</text></g><g><title>std::sys_common::net::TcpStream::read (72 samples, 7.50%)</title><rect x="33.3333%" y="773" width="7.5000%" height="15" fill="rgb(238,48,10)"/><text x="33.5833%" y="783.50">std::sys_c..</text></g><g><title>std::sys::unix::net::Socket::read (72 samples, 7.50%)</title><rect x="33.3333%" y="757" width="7.5000%" height="15" fill="rgb(251,196,23)"/><text x="33.5833%" y="767.50">std::sys::..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (72 samples, 7.50%)</title><rect x="33.3333%" y="741" width="7.5000%" height="15" fill="rgb(250,152,24)"/><text x="33.5833%" y="751.50">std::sys::..</text></g><g><title>__libc_recv (72 samples, 7.50%)</title><rect x="33.3333%" y="725" width="7.5000%" height="15" fill="rgb(209,150,17)"/><text x="33.5833%" y="735.50">__libc_recv</text></g><g><title>entry_SYSCALL_64 (69 samples, 7.19%)</title><rect x="33.6458%" y="709" width="7.1875%" height="15" fill="rgb(234,202,34)"/><text x="33.8958%" y="719.50">entry_SYSC..</text></g><g><title>prepare_exit_to_usermode (3 samples, 0.31%)</title><rect x="40.5208%" y="693" width="0.3125%" height="15" fill="rgb(253,148,53)"/><text x="40.7708%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="40.9375%" y="757" width="0.1042%" height="15" fill="rgb(218,129,16)"/><text x="41.1875%" y="767.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="40.9375%" y="741" width="0.1042%" height="15" fill="rgb(216,85,19)"/><text x="41.1875%" y="751.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (78 samples, 8.12%)</title><rect x="33.1250%" y="821" width="8.1250%" height="15" fill="rgb(235,228,7)"/><text x="33.3750%" y="831.50">&lt;mysql_comm..</text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (4 samples, 0.42%)</title><rect x="40.8333%" y="805" width="0.4167%" height="15" fill="rgb(245,175,0)"/><text x="41.0833%" y="815.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (3 samples, 0.31%)</title><rect x="40.9375%" y="789" width="0.3125%" height="15" fill="rgb(208,168,36)"/><text x="41.1875%" y="799.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (3 samples, 0.31%)</title><rect x="40.9375%" y="773" width="0.3125%" height="15" fill="rgb(246,171,24)"/><text x="41.1875%" y="783.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.21%)</title><rect x="41.0417%" y="757" width="0.2083%" height="15" fill="rgb(215,142,24)"/><text x="41.2917%" y="767.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="41.1458%" y="741" width="0.1042%" height="15" fill="rgb(250,187,7)"/><text x="41.3958%" y="751.50"></text></g><g><title>mysql::conn::Conn::read_packet (80 samples, 8.33%)</title><rect x="33.0208%" y="837" width="8.3333%" height="15" fill="rgb(228,66,33)"/><text x="33.2708%" y="847.50">mysql::conn:..</text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="41.2500%" y="821" width="0.1042%" height="15" fill="rgb(234,215,21)"/><text x="41.5000%" y="831.50"></text></g><g><title>mysql_common::packets::OkPacket::into_owned (1 samples, 0.10%)</title><rect x="41.3542%" y="837" width="0.1042%" height="15" fill="rgb(222,191,20)"/><text x="41.6042%" y="847.50"></text></g><g><title>lobsters::main (85 samples, 8.85%)</title><rect x="32.8125%" y="901" width="8.8542%" height="15" fill="rgb(245,79,54)"/><text x="33.0625%" y="911.50">lobsters::main</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (84 samples, 8.75%)</title><rect x="32.9167%" y="885" width="8.7500%" height="15" fill="rgb(240,10,37)"/><text x="33.1667%" y="895.50">mysql::conn:..</text></g><g><title>mysql::conn::Conn::_query (84 samples, 8.75%)</title><rect x="32.9167%" y="869" width="8.7500%" height="15" fill="rgb(214,192,32)"/><text x="33.1667%" y="879.50">mysql::conn:..</text></g><g><title>mysql::conn::Conn::handle_result_set (84 samples, 8.75%)</title><rect x="32.9167%" y="853" width="8.7500%" height="15" fill="rgb(209,36,54)"/><text x="33.1667%" y="863.50">mysql::conn:..</text></g><g><title>mysql_common::packets::parse_ok_packet (2 samples, 0.21%)</title><rect x="41.4583%" y="837" width="0.2083%" height="15" fill="rgb(220,10,11)"/><text x="41.7083%" y="847.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="41.6667%" y="821" width="0.1042%" height="15" fill="rgb(221,106,17)"/><text x="41.9167%" y="831.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.10%)</title><rect x="41.6667%" y="805" width="0.1042%" height="15" fill="rgb(251,142,44)"/><text x="41.9167%" y="815.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.21%)</title><rect x="41.6667%" y="837" width="0.2083%" height="15" fill="rgb(238,13,15)"/><text x="41.9167%" y="847.50"></text></g><g><title>apic_timer_interrupt (1 samples, 0.10%)</title><rect x="41.7708%" y="821" width="0.1042%" height="15" fill="rgb(208,107,27)"/><text x="42.0208%" y="831.50"></text></g><g><title>smp_apic_timer_interrupt (1 samples, 0.10%)</title><rect x="41.7708%" y="805" width="0.1042%" height="15" fill="rgb(205,136,37)"/><text x="42.0208%" y="815.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.10%)</title><rect x="41.7708%" y="789" width="0.1042%" height="15" fill="rgb(250,205,27)"/><text x="42.0208%" y="799.50"></text></g><g><title>clockevents_program_event (1 samples, 0.10%)</title><rect x="41.7708%" y="773" width="0.1042%" height="15" fill="rgb(210,80,43)"/><text x="42.0208%" y="783.50"></text></g><g><title>lapic_next_deadline (1 samples, 0.10%)</title><rect x="41.7708%" y="757" width="0.1042%" height="15" fill="rgb(247,160,36)"/><text x="42.0208%" y="767.50"></text></g><g><title>native_write_msr (1 samples, 0.10%)</title><rect x="41.7708%" y="741" width="0.1042%" height="15" fill="rgb(234,13,49)"/><text x="42.0208%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (5 samples, 0.52%)</title><rect x="41.6667%" y="853" width="0.5208%" height="15" fill="rgb(234,122,0)"/><text x="41.9167%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (3 samples, 0.31%)</title><rect x="41.8750%" y="837" width="0.3125%" height="15" fill="rgb(207,146,38)"/><text x="42.1250%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.21%)</title><rect x="41.9792%" y="821" width="0.2083%" height="15" fill="rgb(207,177,25)"/><text x="42.2292%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.21%)</title><rect x="41.9792%" y="805" width="0.2083%" height="15" fill="rgb(211,178,42)"/><text x="42.2292%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.21%)</title><rect x="41.9792%" y="789" width="0.2083%" height="15" fill="rgb(230,69,54)"/><text x="42.2292%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.21%)</title><rect x="41.9792%" y="773" width="0.2083%" height="15" fill="rgb(214,135,41)"/><text x="42.2292%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.21%)</title><rect x="41.9792%" y="757" width="0.2083%" height="15" fill="rgb(237,67,25)"/><text x="42.2292%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.21%)</title><rect x="41.9792%" y="741" width="0.2083%" height="15" fill="rgb(222,189,50)"/><text x="42.2292%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.21%)</title><rect x="41.9792%" y="725" width="0.2083%" height="15" fill="rgb(245,148,34)"/><text x="42.2292%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.21%)</title><rect x="41.9792%" y="709" width="0.2083%" height="15" fill="rgb(222,29,6)"/><text x="42.2292%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.21%)</title><rect x="41.9792%" y="693" width="0.2083%" height="15" fill="rgb(221,189,43)"/><text x="42.2292%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.21%)</title><rect x="41.9792%" y="677" width="0.2083%" height="15" fill="rgb(207,36,27)"/><text x="42.2292%" y="687.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.21%)</title><rect x="41.9792%" y="661" width="0.2083%" height="15" fill="rgb(217,90,24)"/><text x="42.2292%" y="671.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="42.0833%" y="645" width="0.1042%" height="15" fill="rgb(224,66,35)"/><text x="42.3333%" y="655.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.10%)</title><rect x="42.1875%" y="837" width="0.1042%" height="15" fill="rgb(221,13,50)"/><text x="42.4375%" y="847.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.10%)</title><rect x="42.1875%" y="821" width="0.1042%" height="15" fill="rgb(236,68,49)"/><text x="42.4375%" y="831.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.21%)</title><rect x="42.2917%" y="805" width="0.2083%" height="15" fill="rgb(229,146,28)"/><text x="42.5417%" y="815.50"></text></g><g><title>page_fault (1 samples, 0.10%)</title><rect x="42.3958%" y="789" width="0.1042%" height="15" fill="rgb(225,31,38)"/><text x="42.6458%" y="799.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.10%)</title><rect x="42.3958%" y="773" width="0.1042%" height="15" fill="rgb(250,208,3)"/><text x="42.6458%" y="783.50"></text></g><g><title>handle_mm_fault (1 samples, 0.10%)</title><rect x="42.3958%" y="757" width="0.1042%" height="15" fill="rgb(246,54,23)"/><text x="42.6458%" y="767.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.10%)</title><rect x="42.3958%" y="741" width="0.1042%" height="15" fill="rgb(243,76,11)"/><text x="42.6458%" y="751.50"></text></g><g><title>mem_cgroup_try_charge_delay (1 samples, 0.10%)</title><rect x="42.3958%" y="725" width="0.1042%" height="15" fill="rgb(245,21,50)"/><text x="42.6458%" y="735.50"></text></g><g><title>mem_cgroup_try_charge (1 samples, 0.10%)</title><rect x="42.3958%" y="709" width="0.1042%" height="15" fill="rgb(228,9,43)"/><text x="42.6458%" y="719.50"></text></g><g><title>get_mem_cgroup_from_mm (1 samples, 0.10%)</title><rect x="42.3958%" y="693" width="0.1042%" height="15" fill="rgb(208,100,47)"/><text x="42.6458%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (5 samples, 0.52%)</title><rect x="42.1875%" y="853" width="0.5208%" height="15" fill="rgb(232,26,8)"/><text x="42.4375%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (4 samples, 0.42%)</title><rect x="42.2917%" y="837" width="0.4167%" height="15" fill="rgb(216,166,38)"/><text x="42.5417%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (4 samples, 0.42%)</title><rect x="42.2917%" y="821" width="0.4167%" height="15" fill="rgb(251,202,51)"/><text x="42.5417%" y="831.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.21%)</title><rect x="42.5000%" y="805" width="0.2083%" height="15" fill="rgb(254,216,34)"/><text x="42.7500%" y="815.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.21%)</title><rect x="42.5000%" y="789" width="0.2083%" height="15" fill="rgb(251,32,27)"/><text x="42.7500%" y="799.50"></text></g><g><title>__GI___libc_free (1 samples, 0.10%)</title><rect x="42.7083%" y="837" width="0.1042%" height="15" fill="rgb(208,127,28)"/><text x="42.9583%" y="847.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.10%)</title><rect x="42.8125%" y="837" width="0.1042%" height="15" fill="rgb(224,137,22)"/><text x="43.0625%" y="847.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="42.9167%" y="837" width="0.1042%" height="15" fill="rgb(254,70,32)"/><text x="43.1667%" y="847.50"></text></g><g><title>__GI___mprotect (1 samples, 0.10%)</title><rect x="43.0208%" y="773" width="0.1042%" height="15" fill="rgb(229,75,37)"/><text x="43.2708%" y="783.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.10%)</title><rect x="43.0208%" y="757" width="0.1042%" height="15" fill="rgb(252,64,23)"/><text x="43.2708%" y="767.50"></text></g><g><title>do_syscall_64 (1 samples, 0.10%)</title><rect x="43.0208%" y="741" width="0.1042%" height="15" fill="rgb(232,162,48)"/><text x="43.2708%" y="751.50"></text></g><g><title>__x64_sys_mprotect (1 samples, 0.10%)</title><rect x="43.0208%" y="725" width="0.1042%" height="15" fill="rgb(246,160,12)"/><text x="43.2708%" y="735.50"></text></g><g><title>do_mprotect_pkey (1 samples, 0.10%)</title><rect x="43.0208%" y="709" width="0.1042%" height="15" fill="rgb(247,166,0)"/><text x="43.2708%" y="719.50"></text></g><g><title>mprotect_fixup (1 samples, 0.10%)</title><rect x="43.0208%" y="693" width="0.1042%" height="15" fill="rgb(249,219,21)"/><text x="43.2708%" y="703.50"></text></g><g><title>vma_merge (1 samples, 0.10%)</title><rect x="43.0208%" y="677" width="0.1042%" height="15" fill="rgb(205,209,3)"/><text x="43.2708%" y="687.50"></text></g><g><title>khugepaged_enter_vma_merge (1 samples, 0.10%)</title><rect x="43.0208%" y="661" width="0.1042%" height="15" fill="rgb(243,44,1)"/><text x="43.2708%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.31%)</title><rect x="43.0208%" y="837" width="0.3125%" height="15" fill="rgb(206,159,16)"/><text x="43.2708%" y="847.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.31%)</title><rect x="43.0208%" y="821" width="0.3125%" height="15" fill="rgb(244,77,30)"/><text x="43.2708%" y="831.50"></text></g><g><title>_int_malloc (3 samples, 0.31%)</title><rect x="43.0208%" y="805" width="0.3125%" height="15" fill="rgb(218,69,12)"/><text x="43.2708%" y="815.50"></text></g><g><title>sysmalloc (3 samples, 0.31%)</title><rect x="43.0208%" y="789" width="0.3125%" height="15" fill="rgb(212,87,7)"/><text x="43.2708%" y="799.50"></text></g><g><title>page_fault (2 samples, 0.21%)</title><rect x="43.1250%" y="773" width="0.2083%" height="15" fill="rgb(245,114,25)"/><text x="43.3750%" y="783.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.21%)</title><rect x="43.1250%" y="757" width="0.2083%" height="15" fill="rgb(210,61,42)"/><text x="43.3750%" y="767.50"></text></g><g><title>handle_mm_fault (1 samples, 0.10%)</title><rect x="43.2292%" y="741" width="0.1042%" height="15" fill="rgb(211,52,33)"/><text x="43.4792%" y="751.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.10%)</title><rect x="43.2292%" y="725" width="0.1042%" height="15" fill="rgb(234,58,33)"/><text x="43.4792%" y="735.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.31%)</title><rect x="43.3333%" y="837" width="0.3125%" height="15" fill="rgb(220,115,36)"/><text x="43.5833%" y="847.50"></text></g><g><title>_int_free (3 samples, 0.31%)</title><rect x="43.3333%" y="821" width="0.3125%" height="15" fill="rgb(243,153,54)"/><text x="43.5833%" y="831.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.10%)</title><rect x="44.1667%" y="821" width="0.1042%" height="15" fill="rgb(251,47,18)"/><text x="44.4167%" y="831.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="44.2708%" y="805" width="0.1042%" height="15" fill="rgb(242,102,42)"/><text x="44.5208%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.21%)</title><rect x="44.2708%" y="821" width="0.2083%" height="15" fill="rgb(234,31,38)"/><text x="44.5208%" y="831.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.10%)</title><rect x="44.3750%" y="805" width="0.1042%" height="15" fill="rgb(221,117,51)"/><text x="44.6250%" y="815.50"></text></g><g><title>_int_realloc (1 samples, 0.10%)</title><rect x="44.3750%" y="789" width="0.1042%" height="15" fill="rgb(212,20,18)"/><text x="44.6250%" y="799.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.10%)</title><rect x="44.3750%" y="773" width="0.1042%" height="15" fill="rgb(245,133,36)"/><text x="44.6250%" y="783.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.10%)</title><rect x="44.3750%" y="757" width="0.1042%" height="15" fill="rgb(212,6,19)"/><text x="44.6250%" y="767.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.10%)</title><rect x="44.3750%" y="741" width="0.1042%" height="15" fill="rgb(218,1,36)"/><text x="44.6250%" y="751.50"></text></g><g><title>sql_parser::tokenizer::PeekableChars::next (1 samples, 0.10%)</title><rect x="45.2083%" y="805" width="0.1042%" height="15" fill="rgb(246,84,54)"/><text x="45.4583%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.21%)</title><rect x="45.4167%" y="789" width="0.2083%" height="15" fill="rgb(242,110,6)"/><text x="45.6667%" y="799.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (14 samples, 1.46%)</title><rect x="44.4792%" y="821" width="1.4583%" height="15" fill="rgb(214,47,5)"/><text x="44.7292%" y="831.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_word (6 samples, 0.62%)</title><rect x="45.3125%" y="805" width="0.6250%" height="15" fill="rgb(218,159,25)"/><text x="45.5625%" y="815.50"></text></g><g><title>sql_parser::tokenizer::PeekableChars::next (3 samples, 0.31%)</title><rect x="45.6250%" y="789" width="0.3125%" height="15" fill="rgb(215,211,28)"/><text x="45.8750%" y="799.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (43 samples, 4.48%)</title><rect x="41.6667%" y="901" width="4.4792%" height="15" fill="rgb(238,59,32)"/><text x="41.9167%" y="911.50">msql_..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (43 samples, 4.48%)</title><rect x="41.6667%" y="885" width="4.4792%" height="15" fill="rgb(226,82,3)"/><text x="41.9167%" y="895.50">&lt;deco..</text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (43 samples, 4.48%)</title><rect x="41.6667%" y="869" width="4.4792%" height="15" fill="rgb(240,164,32)"/><text x="41.9167%" y="879.50">decor..</text></g><g><title>sql_parser::parser::parse_statements (33 samples, 3.44%)</title><rect x="42.7083%" y="853" width="3.4375%" height="15" fill="rgb(232,46,7)"/><text x="42.9583%" y="863.50">sql..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (24 samples, 2.50%)</title><rect x="43.6458%" y="837" width="2.5000%" height="15" fill="rgb(229,129,53)"/><text x="43.8958%" y="847.50">sq..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_number (2 samples, 0.21%)</title><rect x="45.9375%" y="821" width="0.2083%" height="15" fill="rgb(234,188,29)"/><text x="46.1875%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.21%)</title><rect x="45.9375%" y="805" width="0.2083%" height="15" fill="rgb(246,141,4)"/><text x="46.1875%" y="815.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.21%)</title><rect x="45.9375%" y="789" width="0.2083%" height="15" fill="rgb(229,23,39)"/><text x="46.1875%" y="799.50"></text></g><g><title>_int_malloc (2 samples, 0.21%)</title><rect x="45.9375%" y="773" width="0.2083%" height="15" fill="rgb(206,12,3)"/><text x="46.1875%" y="783.50"></text></g><g><title>mysql::conn::Conn::handle_ok (1 samples, 0.10%)</title><rect x="46.1458%" y="901" width="0.1042%" height="15" fill="rgb(252,226,20)"/><text x="46.3958%" y="911.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.10%)</title><rect x="46.2500%" y="901" width="0.1042%" height="15" fill="rgb(216,123,35)"/><text x="46.5000%" y="911.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (1 samples, 0.10%)</title><rect x="46.3542%" y="901" width="0.1042%" height="15" fill="rgb(212,68,40)"/><text x="46.6042%" y="911.50"></text></g><g><title>mysql_common::packets::parse_ok_packet (1 samples, 0.10%)</title><rect x="46.4583%" y="901" width="0.1042%" height="15" fill="rgb(254,125,32)"/><text x="46.7083%" y="911.50"></text></g><g><title>regex::exec::ExecBuilder::build (2 samples, 0.21%)</title><rect x="46.5625%" y="901" width="0.2083%" height="15" fill="rgb(253,97,22)"/><text x="46.8125%" y="911.50"></text></g><g><title>regex::compile::Compiler::compile (2 samples, 0.21%)</title><rect x="46.5625%" y="885" width="0.2083%" height="15" fill="rgb(241,101,14)"/><text x="46.8125%" y="895.50"></text></g><g><title>regex::compile::Compiler::c (2 samples, 0.21%)</title><rect x="46.5625%" y="869" width="0.2083%" height="15" fill="rgb(238,103,29)"/><text x="46.8125%" y="879.50"></text></g><g><title>regex::compile::Compiler::c_repeat_range (2 samples, 0.21%)</title><rect x="46.5625%" y="853" width="0.2083%" height="15" fill="rgb(233,195,47)"/><text x="46.8125%" y="863.50"></text></g><g><title>regex::compile::Compiler::c_concat (2 samples, 0.21%)</title><rect x="46.5625%" y="837" width="0.2083%" height="15" fill="rgb(246,218,30)"/><text x="46.8125%" y="847.50"></text></g><g><title>regex::compile::Compiler::c_class (1 samples, 0.10%)</title><rect x="46.6667%" y="821" width="0.1042%" height="15" fill="rgb(219,145,47)"/><text x="46.9167%" y="831.50"></text></g><g><title>&lt;regex_syntax::utf8::Utf8Sequences as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="46.6667%" y="805" width="0.1042%" height="15" fill="rgb(243,12,26)"/><text x="46.9167%" y="815.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="46.8750%" y="821" width="0.1042%" height="15" fill="rgb(214,87,16)"/><text x="47.1250%" y="831.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="47.0833%" y="805" width="0.1042%" height="15" fill="rgb(208,99,42)"/><text x="47.3333%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="47.0833%" y="789" width="0.1042%" height="15" fill="rgb(253,99,2)"/><text x="47.3333%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="47.0833%" y="773" width="0.1042%" height="15" fill="rgb(220,168,23)"/><text x="47.3333%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="47.0833%" y="757" width="0.1042%" height="15" fill="rgb(242,38,24)"/><text x="47.3333%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="47.0833%" y="741" width="0.1042%" height="15" fill="rgb(225,182,9)"/><text x="47.3333%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="47.0833%" y="725" width="0.1042%" height="15" fill="rgb(243,178,37)"/><text x="47.3333%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="47.0833%" y="709" width="0.1042%" height="15" fill="rgb(232,139,19)"/><text x="47.3333%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="47.0833%" y="693" width="0.1042%" height="15" fill="rgb(225,201,24)"/><text x="47.3333%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="47.0833%" y="677" width="0.1042%" height="15" fill="rgb(221,47,46)"/><text x="47.3333%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="47.0833%" y="661" width="0.1042%" height="15" fill="rgb(249,23,13)"/><text x="47.3333%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="47.0833%" y="645" width="0.1042%" height="15" fill="rgb(219,9,5)"/><text x="47.3333%" y="655.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="47.0833%" y="629" width="0.1042%" height="15" fill="rgb(254,171,16)"/><text x="47.3333%" y="639.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="47.0833%" y="613" width="0.1042%" height="15" fill="rgb(230,171,20)"/><text x="47.3333%" y="623.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="47.0833%" y="597" width="0.1042%" height="15" fill="rgb(210,71,41)"/><text x="47.3333%" y="607.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.10%)</title><rect x="47.0833%" y="581" width="0.1042%" height="15" fill="rgb(206,173,20)"/><text x="47.3333%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (11 samples, 1.15%)</title><rect x="47.2917%" y="725" width="1.1458%" height="15" fill="rgb(233,88,34)"/><text x="47.5417%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (11 samples, 1.15%)</title><rect x="47.2917%" y="709" width="1.1458%" height="15" fill="rgb(223,209,46)"/><text x="47.5417%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (11 samples, 1.15%)</title><rect x="47.2917%" y="693" width="1.1458%" height="15" fill="rgb(250,43,18)"/><text x="47.5417%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11 samples, 1.15%)</title><rect x="47.2917%" y="677" width="1.1458%" height="15" fill="rgb(208,13,10)"/><text x="47.5417%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (11 samples, 1.15%)</title><rect x="47.2917%" y="661" width="1.1458%" height="15" fill="rgb(212,200,36)"/><text x="47.5417%" y="671.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (15 samples, 1.56%)</title><rect x="46.9792%" y="821" width="1.5625%" height="15" fill="rgb(225,90,30)"/><text x="47.2292%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::expected (13 samples, 1.35%)</title><rect x="47.1875%" y="805" width="1.3542%" height="15" fill="rgb(236,182,39)"/><text x="47.4375%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (12 samples, 1.25%)</title><rect x="47.2917%" y="789" width="1.2500%" height="15" fill="rgb(212,144,35)"/><text x="47.5417%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (12 samples, 1.25%)</title><rect x="47.2917%" y="773" width="1.2500%" height="15" fill="rgb(228,63,44)"/><text x="47.5417%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (12 samples, 1.25%)</title><rect x="47.2917%" y="757" width="1.2500%" height="15" fill="rgb(228,109,6)"/><text x="47.5417%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (12 samples, 1.25%)</title><rect x="47.2917%" y="741" width="1.2500%" height="15" fill="rgb(238,117,24)"/><text x="47.5417%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="48.4375%" y="725" width="0.1042%" height="15" fill="rgb(242,26,26)"/><text x="48.6875%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="48.4375%" y="709" width="0.1042%" height="15" fill="rgb(221,92,48)"/><text x="48.6875%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="48.4375%" y="693" width="0.1042%" height="15" fill="rgb(209,209,32)"/><text x="48.6875%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="48.4375%" y="677" width="0.1042%" height="15" fill="rgb(221,70,22)"/><text x="48.6875%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="48.4375%" y="661" width="0.1042%" height="15" fill="rgb(248,145,5)"/><text x="48.6875%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="48.4375%" y="645" width="0.1042%" height="15" fill="rgb(226,116,26)"/><text x="48.6875%" y="655.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="48.4375%" y="629" width="0.1042%" height="15" fill="rgb(244,5,17)"/><text x="48.6875%" y="639.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="48.4375%" y="613" width="0.1042%" height="15" fill="rgb(252,159,33)"/><text x="48.6875%" y="623.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (1 samples, 0.10%)</title><rect x="48.5417%" y="821" width="0.1042%" height="15" fill="rgb(206,71,0)"/><text x="48.7917%" y="831.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="48.7500%" y="757" width="0.1042%" height="15" fill="rgb(233,118,54)"/><text x="49.0000%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.21%)</title><rect x="48.7500%" y="805" width="0.2083%" height="15" fill="rgb(234,83,48)"/><text x="49.0000%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.21%)</title><rect x="48.7500%" y="789" width="0.2083%" height="15" fill="rgb(228,3,54)"/><text x="49.0000%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.21%)</title><rect x="48.7500%" y="773" width="0.2083%" height="15" fill="rgb(226,155,13)"/><text x="49.0000%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="48.8542%" y="757" width="0.1042%" height="15" fill="rgb(241,28,37)"/><text x="49.1042%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="48.8542%" y="741" width="0.1042%" height="15" fill="rgb(233,93,10)"/><text x="49.1042%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="48.8542%" y="725" width="0.1042%" height="15" fill="rgb(225,113,19)"/><text x="49.1042%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="48.8542%" y="709" width="0.1042%" height="15" fill="rgb(241,2,18)"/><text x="49.1042%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="48.8542%" y="693" width="0.1042%" height="15" fill="rgb(228,207,21)"/><text x="49.1042%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="48.8542%" y="677" width="0.1042%" height="15" fill="rgb(213,211,35)"/><text x="49.1042%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="48.8542%" y="661" width="0.1042%" height="15" fill="rgb(209,83,10)"/><text x="49.1042%" y="671.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="48.8542%" y="645" width="0.1042%" height="15" fill="rgb(209,164,1)"/><text x="49.1042%" y="655.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="48.8542%" y="629" width="0.1042%" height="15" fill="rgb(213,184,43)"/><text x="49.1042%" y="639.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (22 samples, 2.29%)</title><rect x="46.7708%" y="901" width="2.2917%" height="15" fill="rgb(231,61,34)"/><text x="47.0208%" y="911.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_query_body (22 samples, 2.29%)</title><rect x="46.7708%" y="885" width="2.2917%" height="15" fill="rgb(235,75,3)"/><text x="47.0208%" y="895.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (22 samples, 2.29%)</title><rect x="46.7708%" y="869" width="2.2917%" height="15" fill="rgb(220,106,47)"/><text x="47.0208%" y="879.50">s..</text></g><g><title>sql_parser::parser::Parser::check_descent (22 samples, 2.29%)</title><rect x="46.7708%" y="853" width="2.2917%" height="15" fill="rgb(210,196,33)"/><text x="47.0208%" y="863.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_prefix (22 samples, 2.29%)</title><rect x="46.7708%" y="837" width="2.2917%" height="15" fill="rgb(229,154,42)"/><text x="47.0208%" y="847.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_value (4 samples, 0.42%)</title><rect x="48.6458%" y="821" width="0.4167%" height="15" fill="rgb(228,114,26)"/><text x="48.8958%" y="831.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="48.9583%" y="805" width="0.1042%" height="15" fill="rgb(208,144,1)"/><text x="49.2083%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (1 samples, 0.10%)</title><rect x="49.0625%" y="901" width="0.1042%" height="15" fill="rgb(239,112,37)"/><text x="49.3125%" y="911.50"></text></g><g><title>__GI___mprotect (1 samples, 0.10%)</title><rect x="49.4792%" y="581" width="0.1042%" height="15" fill="rgb(210,96,50)"/><text x="49.7292%" y="591.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.10%)</title><rect x="49.4792%" y="565" width="0.1042%" height="15" fill="rgb(222,178,2)"/><text x="49.7292%" y="575.50"></text></g><g><title>do_syscall_64 (1 samples, 0.10%)</title><rect x="49.4792%" y="549" width="0.1042%" height="15" fill="rgb(226,74,18)"/><text x="49.7292%" y="559.50"></text></g><g><title>__x64_sys_mprotect (1 samples, 0.10%)</title><rect x="49.4792%" y="533" width="0.1042%" height="15" fill="rgb(225,67,54)"/><text x="49.7292%" y="543.50"></text></g><g><title>do_mprotect_pkey (1 samples, 0.10%)</title><rect x="49.4792%" y="517" width="0.1042%" height="15" fill="rgb(251,92,32)"/><text x="49.7292%" y="527.50"></text></g><g><title>mprotect_fixup (1 samples, 0.10%)</title><rect x="49.4792%" y="501" width="0.1042%" height="15" fill="rgb(228,149,22)"/><text x="49.7292%" y="511.50"></text></g><g><title>change_protection (1 samples, 0.10%)</title><rect x="49.4792%" y="485" width="0.1042%" height="15" fill="rgb(243,54,13)"/><text x="49.7292%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5 samples, 0.52%)</title><rect x="49.1667%" y="805" width="0.5208%" height="15" fill="rgb(243,180,28)"/><text x="49.4167%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.52%)</title><rect x="49.1667%" y="789" width="0.5208%" height="15" fill="rgb(208,167,24)"/><text x="49.4167%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (5 samples, 0.52%)</title><rect x="49.1667%" y="773" width="0.5208%" height="15" fill="rgb(245,73,45)"/><text x="49.4167%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.52%)</title><rect x="49.1667%" y="757" width="0.5208%" height="15" fill="rgb(237,203,48)"/><text x="49.4167%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (5 samples, 0.52%)</title><rect x="49.1667%" y="741" width="0.5208%" height="15" fill="rgb(211,197,16)"/><text x="49.4167%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (5 samples, 0.52%)</title><rect x="49.1667%" y="725" width="0.5208%" height="15" fill="rgb(243,99,51)"/><text x="49.4167%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.52%)</title><rect x="49.1667%" y="709" width="0.5208%" height="15" fill="rgb(215,123,29)"/><text x="49.4167%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.52%)</title><rect x="49.1667%" y="693" width="0.5208%" height="15" fill="rgb(239,186,37)"/><text x="49.4167%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (5 samples, 0.52%)</title><rect x="49.1667%" y="677" width="0.5208%" height="15" fill="rgb(252,136,39)"/><text x="49.4167%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.52%)</title><rect x="49.1667%" y="661" width="0.5208%" height="15" fill="rgb(223,213,32)"/><text x="49.4167%" y="671.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.52%)</title><rect x="49.1667%" y="645" width="0.5208%" height="15" fill="rgb(233,115,5)"/><text x="49.4167%" y="655.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.52%)</title><rect x="49.1667%" y="629" width="0.5208%" height="15" fill="rgb(207,226,44)"/><text x="49.4167%" y="639.50"></text></g><g><title>_int_malloc (5 samples, 0.52%)</title><rect x="49.1667%" y="613" width="0.5208%" height="15" fill="rgb(208,126,0)"/><text x="49.4167%" y="623.50"></text></g><g><title>sysmalloc (2 samples, 0.21%)</title><rect x="49.4792%" y="597" width="0.2083%" height="15" fill="rgb(244,66,21)"/><text x="49.7292%" y="607.50"></text></g><g><title>page_fault (1 samples, 0.10%)</title><rect x="49.5833%" y="581" width="0.1042%" height="15" fill="rgb(222,97,12)"/><text x="49.8333%" y="591.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.10%)</title><rect x="49.5833%" y="565" width="0.1042%" height="15" fill="rgb(219,213,19)"/><text x="49.8333%" y="575.50"></text></g><g><title>handle_mm_fault (1 samples, 0.10%)</title><rect x="49.5833%" y="549" width="0.1042%" height="15" fill="rgb(252,169,30)"/><text x="49.8333%" y="559.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.10%)</title><rect x="49.5833%" y="533" width="0.1042%" height="15" fill="rgb(206,32,51)"/><text x="49.8333%" y="543.50"></text></g><g><title>mem_cgroup_try_charge_delay (1 samples, 0.10%)</title><rect x="49.5833%" y="517" width="0.1042%" height="15" fill="rgb(250,172,42)"/><text x="49.8333%" y="527.50"></text></g><g><title>mem_cgroup_try_charge (1 samples, 0.10%)</title><rect x="49.5833%" y="501" width="0.1042%" height="15" fill="rgb(209,34,43)"/><text x="49.8333%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.10%)</title><rect x="49.7917%" y="661" width="0.1042%" height="15" fill="rgb(223,11,35)"/><text x="50.0417%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="49.7917%" y="645" width="0.1042%" height="15" fill="rgb(251,219,26)"/><text x="50.0417%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.10%)</title><rect x="49.7917%" y="629" width="0.1042%" height="15" fill="rgb(231,119,3)"/><text x="50.0417%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.10%)</title><rect x="49.7917%" y="613" width="0.1042%" height="15" fill="rgb(216,97,11)"/><text x="50.0417%" y="623.50"></text></g><g><title>core::cmp::max (1 samples, 0.10%)</title><rect x="49.7917%" y="597" width="0.1042%" height="15" fill="rgb(223,59,9)"/><text x="50.0417%" y="607.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.10%)</title><rect x="49.7917%" y="581" width="0.1042%" height="15" fill="rgb(233,93,31)"/><text x="50.0417%" y="591.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="49.7917%" y="565" width="0.1042%" height="15" fill="rgb(239,81,33)"/><text x="50.0417%" y="575.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.21%)</title><rect x="49.7917%" y="757" width="0.2083%" height="15" fill="rgb(213,120,34)"/><text x="50.0417%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.21%)</title><rect x="49.7917%" y="741" width="0.2083%" height="15" fill="rgb(243,49,53)"/><text x="50.0417%" y="751.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.21%)</title><rect x="49.7917%" y="725" width="0.2083%" height="15" fill="rgb(247,216,33)"/><text x="50.0417%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.21%)</title><rect x="49.7917%" y="709" width="0.2083%" height="15" fill="rgb(226,26,14)"/><text x="50.0417%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.21%)</title><rect x="49.7917%" y="693" width="0.2083%" height="15" fill="rgb(215,49,53)"/><text x="50.0417%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (2 samples, 0.21%)</title><rect x="49.7917%" y="677" width="0.2083%" height="15" fill="rgb(245,162,40)"/><text x="50.0417%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.10%)</title><rect x="49.8958%" y="661" width="0.1042%" height="15" fill="rgb(229,68,17)"/><text x="50.1458%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.10%)</title><rect x="49.8958%" y="645" width="0.1042%" height="15" fill="rgb(213,182,10)"/><text x="50.1458%" y="655.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (9 samples, 0.94%)</title><rect x="49.1667%" y="901" width="0.9375%" height="15" fill="rgb(245,125,30)"/><text x="49.4167%" y="911.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (9 samples, 0.94%)</title><rect x="49.1667%" y="885" width="0.9375%" height="15" fill="rgb(232,202,2)"/><text x="49.4167%" y="895.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (9 samples, 0.94%)</title><rect x="49.1667%" y="869" width="0.9375%" height="15" fill="rgb(237,140,51)"/><text x="49.4167%" y="879.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (9 samples, 0.94%)</title><rect x="49.1667%" y="853" width="0.9375%" height="15" fill="rgb(236,157,25)"/><text x="49.4167%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (9 samples, 0.94%)</title><rect x="49.1667%" y="837" width="0.9375%" height="15" fill="rgb(219,209,0)"/><text x="49.4167%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::expected (9 samples, 0.94%)</title><rect x="49.1667%" y="821" width="0.9375%" height="15" fill="rgb(240,116,54)"/><text x="49.4167%" y="831.50"></text></g><g><title>alloc::fmt::format (4 samples, 0.42%)</title><rect x="49.6875%" y="805" width="0.4167%" height="15" fill="rgb(216,10,36)"/><text x="49.9375%" y="815.50"></text></g><g><title>core::fmt::Write::write_fmt (4 samples, 0.42%)</title><rect x="49.6875%" y="789" width="0.4167%" height="15" fill="rgb(222,72,44)"/><text x="49.9375%" y="799.50"></text></g><g><title>core::fmt::write (4 samples, 0.42%)</title><rect x="49.6875%" y="773" width="0.4167%" height="15" fill="rgb(232,159,9)"/><text x="49.9375%" y="783.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::fmt::Display&gt;::fmt (1 samples, 0.10%)</title><rect x="50.0000%" y="757" width="0.1042%" height="15" fill="rgb(210,39,32)"/><text x="50.2500%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.10%)</title><rect x="50.3125%" y="789" width="0.1042%" height="15" fill="rgb(216,194,45)"/><text x="50.5625%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (5 samples, 0.52%)</title><rect x="50.2083%" y="853" width="0.5208%" height="15" fill="rgb(218,18,35)"/><text x="50.4583%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.42%)</title><rect x="50.3125%" y="837" width="0.4167%" height="15" fill="rgb(207,83,51)"/><text x="50.5625%" y="847.50"></text></g><g><title>__GI___libc_realloc (4 samples, 0.42%)</title><rect x="50.3125%" y="821" width="0.4167%" height="15" fill="rgb(225,63,43)"/><text x="50.5625%" y="831.50"></text></g><g><title>_int_realloc (4 samples, 0.42%)</title><rect x="50.3125%" y="805" width="0.4167%" height="15" fill="rgb(207,57,36)"/><text x="50.5625%" y="815.50"></text></g><g><title>_int_malloc (3 samples, 0.31%)</title><rect x="50.4167%" y="789" width="0.3125%" height="15" fill="rgb(216,99,33)"/><text x="50.6667%" y="799.50"></text></g><g><title>malloc_consolidate (2 samples, 0.21%)</title><rect x="50.5208%" y="773" width="0.2083%" height="15" fill="rgb(225,42,16)"/><text x="50.7708%" y="783.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (3 samples, 0.31%)</title><rect x="50.9375%" y="837" width="0.3125%" height="15" fill="rgb(220,201,45)"/><text x="51.1875%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.31%)</title><rect x="50.9375%" y="821" width="0.3125%" height="15" fill="rgb(225,33,4)"/><text x="51.1875%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.31%)</title><rect x="50.9375%" y="805" width="0.3125%" height="15" fill="rgb(224,33,50)"/><text x="51.1875%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.31%)</title><rect x="50.9375%" y="789" width="0.3125%" height="15" fill="rgb(246,198,51)"/><text x="51.1875%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.31%)</title><rect x="50.9375%" y="773" width="0.3125%" height="15" fill="rgb(205,22,4)"/><text x="51.1875%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.31%)</title><rect x="50.9375%" y="757" width="0.3125%" height="15" fill="rgb(206,3,8)"/><text x="51.1875%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.31%)</title><rect x="50.9375%" y="741" width="0.3125%" height="15" fill="rgb(251,23,15)"/><text x="51.1875%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.31%)</title><rect x="50.9375%" y="725" width="0.3125%" height="15" fill="rgb(252,88,28)"/><text x="51.1875%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.31%)</title><rect x="50.9375%" y="709" width="0.3125%" height="15" fill="rgb(212,127,14)"/><text x="51.1875%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (3 samples, 0.31%)</title><rect x="50.9375%" y="693" width="0.3125%" height="15" fill="rgb(247,145,37)"/><text x="51.1875%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.31%)</title><rect x="50.9375%" y="677" width="0.3125%" height="15" fill="rgb(209,117,53)"/><text x="51.1875%" y="687.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.31%)</title><rect x="50.9375%" y="661" width="0.3125%" height="15" fill="rgb(212,90,42)"/><text x="51.1875%" y="671.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.31%)</title><rect x="50.9375%" y="645" width="0.3125%" height="15" fill="rgb(218,164,37)"/><text x="51.1875%" y="655.50"></text></g><g><title>_int_malloc (3 samples, 0.31%)</title><rect x="50.9375%" y="629" width="0.3125%" height="15" fill="rgb(246,65,34)"/><text x="51.1875%" y="639.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.10%)</title><rect x="51.1458%" y="613" width="0.1042%" height="15" fill="rgb(231,100,33)"/><text x="51.3958%" y="623.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.10%)</title><rect x="51.2500%" y="837" width="0.1042%" height="15" fill="rgb(228,126,14)"/><text x="51.5000%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (14 samples, 1.46%)</title><rect x="50.1042%" y="901" width="1.4583%" height="15" fill="rgb(215,173,21)"/><text x="50.3542%" y="911.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (14 samples, 1.46%)</title><rect x="50.1042%" y="885" width="1.4583%" height="15" fill="rgb(210,6,40)"/><text x="50.3542%" y="895.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (14 samples, 1.46%)</title><rect x="50.1042%" y="869" width="1.4583%" height="15" fill="rgb(212,48,18)"/><text x="50.3542%" y="879.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (8 samples, 0.83%)</title><rect x="50.7292%" y="853" width="0.8333%" height="15" fill="rgb(230,214,11)"/><text x="50.9792%" y="863.50"></text></g><g><title>_int_free (2 samples, 0.21%)</title><rect x="51.3542%" y="837" width="0.2083%" height="15" fill="rgb(254,105,39)"/><text x="51.6042%" y="847.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="51.5625%" y="853" width="0.1042%" height="15" fill="rgb(245,158,5)"/><text x="51.8125%" y="863.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.21%)</title><rect x="51.6667%" y="853" width="0.2083%" height="15" fill="rgb(249,208,11)"/><text x="51.9167%" y="863.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="52.9167%" y="837" width="0.1042%" height="15" fill="rgb(210,39,28)"/><text x="53.1667%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="52.9167%" y="821" width="0.1042%" height="15" fill="rgb(211,56,53)"/><text x="53.1667%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="52.9167%" y="805" width="0.1042%" height="15" fill="rgb(226,201,30)"/><text x="53.1667%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="52.9167%" y="789" width="0.1042%" height="15" fill="rgb(239,101,34)"/><text x="53.1667%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="52.9167%" y="773" width="0.1042%" height="15" fill="rgb(226,209,5)"/><text x="53.1667%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="52.9167%" y="757" width="0.1042%" height="15" fill="rgb(250,105,47)"/><text x="53.1667%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="52.9167%" y="741" width="0.1042%" height="15" fill="rgb(230,72,3)"/><text x="53.1667%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="52.9167%" y="725" width="0.1042%" height="15" fill="rgb(232,218,39)"/><text x="53.1667%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="52.9167%" y="709" width="0.1042%" height="15" fill="rgb(248,166,6)"/><text x="53.1667%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="52.9167%" y="693" width="0.1042%" height="15" fill="rgb(247,89,20)"/><text x="53.1667%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="52.9167%" y="677" width="0.1042%" height="15" fill="rgb(248,130,54)"/><text x="53.1667%" y="687.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="52.9167%" y="661" width="0.1042%" height="15" fill="rgb(234,196,4)"/><text x="53.1667%" y="671.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="52.9167%" y="645" width="0.1042%" height="15" fill="rgb(250,143,31)"/><text x="53.1667%" y="655.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="52.9167%" y="629" width="0.1042%" height="15" fill="rgb(211,110,34)"/><text x="53.1667%" y="639.50"></text></g><g><title>sql_parser::parser::parse_statements (17 samples, 1.77%)</title><rect x="51.5625%" y="901" width="1.7708%" height="15" fill="rgb(215,124,48)"/><text x="51.8125%" y="911.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_statement (17 samples, 1.77%)</title><rect x="51.5625%" y="885" width="1.7708%" height="15" fill="rgb(216,46,13)"/><text x="51.8125%" y="895.50">s..</text></g><g><title>sql_parser::parser::Parser::check_descent (17 samples, 1.77%)</title><rect x="51.5625%" y="869" width="1.7708%" height="15" fill="rgb(205,184,25)"/><text x="51.8125%" y="879.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_keyword (14 samples, 1.46%)</title><rect x="51.8750%" y="853" width="1.4583%" height="15" fill="rgb(228,1,10)"/><text x="52.1250%" y="863.50"></text></g><g><title>__memcmp_avx2_movbe (3 samples, 0.31%)</title><rect x="53.0208%" y="837" width="0.3125%" height="15" fill="rgb(213,116,27)"/><text x="53.2708%" y="847.50"></text></g><g><title>sql_parser::tokenizer::PeekableChars::next (1 samples, 0.10%)</title><rect x="53.3333%" y="901" width="0.1042%" height="15" fill="rgb(241,95,50)"/><text x="53.5833%" y="911.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (2 samples, 0.21%)</title><rect x="53.4375%" y="901" width="0.2083%" height="15" fill="rgb(238,48,32)"/><text x="53.6875%" y="911.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (1 samples, 0.10%)</title><rect x="53.6458%" y="901" width="0.1042%" height="15" fill="rgb(235,113,49)"/><text x="53.8958%" y="911.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.10%)</title><rect x="53.6458%" y="885" width="0.1042%" height="15" fill="rgb(205,127,43)"/><text x="53.8958%" y="895.50"></text></g><g><title>lobsters::main (1 samples, 0.10%)</title><rect x="53.6458%" y="869" width="0.1042%" height="15" fill="rgb(250,162,2)"/><text x="53.8958%" y="879.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (1 samples, 0.10%)</title><rect x="53.6458%" y="853" width="0.1042%" height="15" fill="rgb(220,13,41)"/><text x="53.8958%" y="863.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="53.6458%" y="837" width="0.1042%" height="15" fill="rgb(249,221,25)"/><text x="53.8958%" y="847.50"></text></g><g><title>mysql::conn::query_result::QueryResult&lt;T&gt;::handle_next (1 samples, 0.10%)</title><rect x="53.6458%" y="821" width="0.1042%" height="15" fill="rgb(215,208,19)"/><text x="53.8958%" y="831.50"></text></g><g><title>mysql::conn::Conn::more_results_exists (1 samples, 0.10%)</title><rect x="53.6458%" y="805" width="0.1042%" height="15" fill="rgb(236,175,2)"/><text x="53.8958%" y="815.50"></text></g><g><title>hwloc::Topology::new (3 samples, 0.31%)</title><rect x="53.7500%" y="773" width="0.3125%" height="15" fill="rgb(241,52,2)"/><text x="54.0000%" y="783.50"></text></g><g><title>hwloc_topology_load (3 samples, 0.31%)</title><rect x="53.7500%" y="757" width="0.3125%" height="15" fill="rgb(248,140,14)"/><text x="54.0000%" y="767.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.31%)</title><rect x="53.7500%" y="741" width="0.3125%" height="15" fill="rgb(253,22,42)"/><text x="54.0000%" y="751.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.31%)</title><rect x="53.7500%" y="725" width="0.3125%" height="15" fill="rgb(234,61,47)"/><text x="54.0000%" y="735.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.31%)</title><rect x="53.7500%" y="709" width="0.3125%" height="15" fill="rgb(208,226,15)"/><text x="54.0000%" y="719.50"></text></g><g><title>__GI___openat (3 samples, 0.31%)</title><rect x="53.7500%" y="693" width="0.3125%" height="15" fill="rgb(217,221,4)"/><text x="54.0000%" y="703.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.31%)</title><rect x="53.7500%" y="677" width="0.3125%" height="15" fill="rgb(212,174,34)"/><text x="54.0000%" y="687.50"></text></g><g><title>do_syscall_64 (3 samples, 0.31%)</title><rect x="53.7500%" y="661" width="0.3125%" height="15" fill="rgb(253,83,4)"/><text x="54.0000%" y="671.50"></text></g><g><title>__x64_sys_openat (3 samples, 0.31%)</title><rect x="53.7500%" y="645" width="0.3125%" height="15" fill="rgb(250,195,49)"/><text x="54.0000%" y="655.50"></text></g><g><title>do_sys_openat2 (3 samples, 0.31%)</title><rect x="53.7500%" y="629" width="0.3125%" height="15" fill="rgb(241,192,25)"/><text x="54.0000%" y="639.50"></text></g><g><title>do_filp_open (3 samples, 0.31%)</title><rect x="53.7500%" y="613" width="0.3125%" height="15" fill="rgb(208,124,10)"/><text x="54.0000%" y="623.50"></text></g><g><title>path_openat (3 samples, 0.31%)</title><rect x="53.7500%" y="597" width="0.3125%" height="15" fill="rgb(222,33,0)"/><text x="54.0000%" y="607.50"></text></g><g><title>link_path_walk (3 samples, 0.31%)</title><rect x="53.7500%" y="581" width="0.3125%" height="15" fill="rgb(234,209,28)"/><text x="54.0000%" y="591.50"></text></g><g><title>walk_component (3 samples, 0.31%)</title><rect x="53.7500%" y="565" width="0.3125%" height="15" fill="rgb(224,11,23)"/><text x="54.0000%" y="575.50"></text></g><g><title>lookup_fast.constprop.0 (2 samples, 0.21%)</title><rect x="53.8542%" y="549" width="0.2083%" height="15" fill="rgb(232,99,1)"/><text x="54.1042%" y="559.50"></text></g><g><title>kernfs_dop_revalidate (2 samples, 0.21%)</title><rect x="53.8542%" y="533" width="0.2083%" height="15" fill="rgb(237,95,45)"/><text x="54.1042%" y="543.50"></text></g><g><title>strcmp (1 samples, 0.10%)</title><rect x="53.9583%" y="517" width="0.1042%" height="15" fill="rgb(208,109,11)"/><text x="54.2083%" y="527.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.10%)</title><rect x="54.0625%" y="741" width="0.1042%" height="15" fill="rgb(216,190,48)"/><text x="54.3125%" y="751.50"></text></g><g><title>std::rt::lang_start_internal (6 samples, 0.62%)</title><rect x="53.7500%" y="901" width="0.6250%" height="15" fill="rgb(251,171,36)"/><text x="54.0000%" y="911.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.62%)</title><rect x="53.7500%" y="885" width="0.6250%" height="15" fill="rgb(230,62,22)"/><text x="54.0000%" y="895.50"></text></g><g><title>std::panicking::try (6 samples, 0.62%)</title><rect x="53.7500%" y="869" width="0.6250%" height="15" fill="rgb(225,114,35)"/><text x="54.0000%" y="879.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.62%)</title><rect x="53.7500%" y="853" width="0.6250%" height="15" fill="rgb(215,118,42)"/><text x="54.0000%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (6 samples, 0.62%)</title><rect x="53.7500%" y="837" width="0.6250%" height="15" fill="rgb(243,119,21)"/><text x="54.0000%" y="847.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (6 samples, 0.62%)</title><rect x="53.7500%" y="821" width="0.6250%" height="15" fill="rgb(252,177,53)"/><text x="54.0000%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (6 samples, 0.62%)</title><rect x="53.7500%" y="805" width="0.6250%" height="15" fill="rgb(237,209,29)"/><text x="54.0000%" y="815.50"></text></g><g><title>lobsters::main (6 samples, 0.62%)</title><rect x="53.7500%" y="789" width="0.6250%" height="15" fill="rgb(212,65,23)"/><text x="54.0000%" y="799.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (3 samples, 0.31%)</title><rect x="54.0625%" y="773" width="0.3125%" height="15" fill="rgb(230,222,46)"/><text x="54.3125%" y="783.50"></text></g><g><title>mysql::conn::Conn::_query (3 samples, 0.31%)</title><rect x="54.0625%" y="757" width="0.3125%" height="15" fill="rgb(215,135,32)"/><text x="54.3125%" y="767.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (2 samples, 0.21%)</title><rect x="54.1667%" y="741" width="0.2083%" height="15" fill="rgb(246,101,22)"/><text x="54.4167%" y="751.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::encode (2 samples, 0.21%)</title><rect x="54.1667%" y="725" width="0.2083%" height="15" fill="rgb(206,107,13)"/><text x="54.4167%" y="735.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::encode (2 samples, 0.21%)</title><rect x="54.1667%" y="709" width="0.2083%" height="15" fill="rgb(250,100,44)"/><text x="54.4167%" y="719.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (2 samples, 0.21%)</title><rect x="54.1667%" y="693" width="0.2083%" height="15" fill="rgb(231,147,38)"/><text x="54.4167%" y="703.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.21%)</title><rect x="54.1667%" y="677" width="0.2083%" height="15" fill="rgb(229,8,40)"/><text x="54.4167%" y="687.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.10%)</title><rect x="54.3750%" y="709" width="0.1042%" height="15" fill="rgb(221,135,30)"/><text x="54.6250%" y="719.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="54.3750%" y="693" width="0.1042%" height="15" fill="rgb(249,193,18)"/><text x="54.6250%" y="703.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="54.3750%" y="677" width="0.1042%" height="15" fill="rgb(209,133,39)"/><text x="54.6250%" y="687.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (2 samples, 0.21%)</title><rect x="54.3750%" y="901" width="0.2083%" height="15" fill="rgb(232,100,14)"/><text x="54.6250%" y="911.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (2 samples, 0.21%)</title><rect x="54.3750%" y="885" width="0.2083%" height="15" fill="rgb(224,185,1)"/><text x="54.6250%" y="895.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (2 samples, 0.21%)</title><rect x="54.3750%" y="869" width="0.2083%" height="15" fill="rgb(223,139,8)"/><text x="54.6250%" y="879.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (2 samples, 0.21%)</title><rect x="54.3750%" y="853" width="0.2083%" height="15" fill="rgb(232,213,38)"/><text x="54.6250%" y="863.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2 samples, 0.21%)</title><rect x="54.3750%" y="837" width="0.2083%" height="15" fill="rgb(207,94,22)"/><text x="54.6250%" y="847.50"></text></g><g><title>decor::Shim::run_on_tcp (2 samples, 0.21%)</title><rect x="54.3750%" y="821" width="0.2083%" height="15" fill="rgb(219,183,54)"/><text x="54.6250%" y="831.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (2 samples, 0.21%)</title><rect x="54.3750%" y="805" width="0.2083%" height="15" fill="rgb(216,185,54)"/><text x="54.6250%" y="815.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (2 samples, 0.21%)</title><rect x="54.3750%" y="789" width="0.2083%" height="15" fill="rgb(254,217,39)"/><text x="54.6250%" y="799.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (2 samples, 0.21%)</title><rect x="54.3750%" y="773" width="0.2083%" height="15" fill="rgb(240,178,23)"/><text x="54.6250%" y="783.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.21%)</title><rect x="54.3750%" y="757" width="0.2083%" height="15" fill="rgb(218,11,47)"/><text x="54.6250%" y="767.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (2 samples, 0.21%)</title><rect x="54.3750%" y="741" width="0.2083%" height="15" fill="rgb(218,51,51)"/><text x="54.6250%" y="751.50"></text></g><g><title>mysql::conn::Conn::read_packet (2 samples, 0.21%)</title><rect x="54.3750%" y="725" width="0.2083%" height="15" fill="rgb(238,126,27)"/><text x="54.6250%" y="735.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="54.4792%" y="709" width="0.1042%" height="15" fill="rgb(249,202,22)"/><text x="54.7292%" y="719.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.10%)</title><rect x="54.4792%" y="693" width="0.1042%" height="15" fill="rgb(254,195,49)"/><text x="54.7292%" y="703.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (1 samples, 0.10%)</title><rect x="54.5833%" y="853" width="0.1042%" height="15" fill="rgb(208,123,14)"/><text x="54.8333%" y="863.50"></text></g><g><title>decor::Shim::create_schema (1 samples, 0.10%)</title><rect x="54.5833%" y="837" width="0.1042%" height="15" fill="rgb(224,200,8)"/><text x="54.8333%" y="847.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (1 samples, 0.10%)</title><rect x="54.5833%" y="821" width="0.1042%" height="15" fill="rgb(217,61,36)"/><text x="54.8333%" y="831.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (1 samples, 0.10%)</title><rect x="54.5833%" y="805" width="0.1042%" height="15" fill="rgb(206,35,45)"/><text x="54.8333%" y="815.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.10%)</title><rect x="54.5833%" y="789" width="0.1042%" height="15" fill="rgb(217,65,33)"/><text x="54.8333%" y="799.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.10%)</title><rect x="54.5833%" y="773" width="0.1042%" height="15" fill="rgb(222,158,48)"/><text x="54.8333%" y="783.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.10%)</title><rect x="54.5833%" y="757" width="0.1042%" height="15" fill="rgb(254,2,54)"/><text x="54.8333%" y="767.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.10%)</title><rect x="54.5833%" y="741" width="0.1042%" height="15" fill="rgb(250,143,38)"/><text x="54.8333%" y="751.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1 samples, 0.10%)</title><rect x="54.5833%" y="725" width="0.1042%" height="15" fill="rgb(248,25,0)"/><text x="54.8333%" y="735.50"></text></g><g><title>__libc_send (1 samples, 0.10%)</title><rect x="54.5833%" y="709" width="0.1042%" height="15" fill="rgb(206,152,27)"/><text x="54.8333%" y="719.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.10%)</title><rect x="54.5833%" y="693" width="0.1042%" height="15" fill="rgb(240,77,30)"/><text x="54.8333%" y="703.50"></text></g><g><title>do_syscall_64 (1 samples, 0.10%)</title><rect x="54.5833%" y="677" width="0.1042%" height="15" fill="rgb(231,5,3)"/><text x="54.8333%" y="687.50"></text></g><g><title>__x64_sys_sendto (1 samples, 0.10%)</title><rect x="54.5833%" y="661" width="0.1042%" height="15" fill="rgb(207,226,32)"/><text x="54.8333%" y="671.50"></text></g><g><title>__sys_sendto (1 samples, 0.10%)</title><rect x="54.5833%" y="645" width="0.1042%" height="15" fill="rgb(222,207,47)"/><text x="54.8333%" y="655.50"></text></g><g><title>sock_sendmsg (1 samples, 0.10%)</title><rect x="54.5833%" y="629" width="0.1042%" height="15" fill="rgb(229,115,45)"/><text x="54.8333%" y="639.50"></text></g><g><title>tcp_sendmsg (1 samples, 0.10%)</title><rect x="54.5833%" y="613" width="0.1042%" height="15" fill="rgb(224,191,6)"/><text x="54.8333%" y="623.50"></text></g><g><title>tcp_sendmsg_locked (1 samples, 0.10%)</title><rect x="54.5833%" y="597" width="0.1042%" height="15" fill="rgb(230,227,24)"/><text x="54.8333%" y="607.50"></text></g><g><title>__tcp_push_pending_frames (1 samples, 0.10%)</title><rect x="54.5833%" y="581" width="0.1042%" height="15" fill="rgb(228,80,19)"/><text x="54.8333%" y="591.50"></text></g><g><title>tcp_write_xmit (1 samples, 0.10%)</title><rect x="54.5833%" y="565" width="0.1042%" height="15" fill="rgb(247,229,0)"/><text x="54.8333%" y="575.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.10%)</title><rect x="54.5833%" y="549" width="0.1042%" height="15" fill="rgb(237,194,15)"/><text x="54.8333%" y="559.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.10%)</title><rect x="54.5833%" y="533" width="0.1042%" height="15" fill="rgb(219,203,20)"/><text x="54.8333%" y="543.50"></text></g><g><title>ip_output (1 samples, 0.10%)</title><rect x="54.5833%" y="517" width="0.1042%" height="15" fill="rgb(234,128,8)"/><text x="54.8333%" y="527.50"></text></g><g><title>ip_finish_output2 (1 samples, 0.10%)</title><rect x="54.5833%" y="501" width="0.1042%" height="15" fill="rgb(248,202,8)"/><text x="54.8333%" y="511.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.10%)</title><rect x="54.5833%" y="485" width="0.1042%" height="15" fill="rgb(206,104,37)"/><text x="54.8333%" y="495.50"></text></g><g><title>do_softirq (1 samples, 0.10%)</title><rect x="54.5833%" y="469" width="0.1042%" height="15" fill="rgb(223,8,27)"/><text x="54.8333%" y="479.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.10%)</title><rect x="54.5833%" y="453" width="0.1042%" height="15" fill="rgb(216,217,28)"/><text x="54.8333%" y="463.50"></text></g><g><title>__do_softirq (1 samples, 0.10%)</title><rect x="54.5833%" y="437" width="0.1042%" height="15" fill="rgb(249,199,1)"/><text x="54.8333%" y="447.50"></text></g><g><title>net_rx_action (1 samples, 0.10%)</title><rect x="54.5833%" y="421" width="0.1042%" height="15" fill="rgb(240,85,17)"/><text x="54.8333%" y="431.50"></text></g><g><title>process_backlog (1 samples, 0.10%)</title><rect x="54.5833%" y="405" width="0.1042%" height="15" fill="rgb(206,108,45)"/><text x="54.8333%" y="415.50"></text></g><g><title>__netif_receive_skb_one_core (1 samples, 0.10%)</title><rect x="54.5833%" y="389" width="0.1042%" height="15" fill="rgb(245,210,41)"/><text x="54.8333%" y="399.50"></text></g><g><title>ip_rcv (1 samples, 0.10%)</title><rect x="54.5833%" y="373" width="0.1042%" height="15" fill="rgb(206,13,37)"/><text x="54.8333%" y="383.50"></text></g><g><title>ip_local_deliver (1 samples, 0.10%)</title><rect x="54.5833%" y="357" width="0.1042%" height="15" fill="rgb(250,61,18)"/><text x="54.8333%" y="367.50"></text></g><g><title>ip_local_deliver_finish (1 samples, 0.10%)</title><rect x="54.5833%" y="341" width="0.1042%" height="15" fill="rgb(235,172,48)"/><text x="54.8333%" y="351.50"></text></g><g><title>ip_protocol_deliver_rcu (1 samples, 0.10%)</title><rect x="54.5833%" y="325" width="0.1042%" height="15" fill="rgb(249,201,17)"/><text x="54.8333%" y="335.50"></text></g><g><title>tcp_v4_rcv (1 samples, 0.10%)</title><rect x="54.5833%" y="309" width="0.1042%" height="15" fill="rgb(219,208,6)"/><text x="54.8333%" y="319.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.10%)</title><rect x="54.5833%" y="293" width="0.1042%" height="15" fill="rgb(248,31,23)"/><text x="54.8333%" y="303.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (2 samples, 0.21%)</title><rect x="54.6875%" y="837" width="0.2083%" height="15" fill="rgb(245,15,42)"/><text x="54.9375%" y="847.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.21%)</title><rect x="54.6875%" y="821" width="0.2083%" height="15" fill="rgb(222,217,39)"/><text x="54.9375%" y="831.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (2 samples, 0.21%)</title><rect x="54.6875%" y="805" width="0.2083%" height="15" fill="rgb(210,219,27)"/><text x="54.9375%" y="815.50"></text></g><g><title>mysql::conn::Conn::read_packet (2 samples, 0.21%)</title><rect x="54.6875%" y="789" width="0.2083%" height="15" fill="rgb(252,166,36)"/><text x="54.9375%" y="799.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.21%)</title><rect x="54.6875%" y="773" width="0.2083%" height="15" fill="rgb(245,132,34)"/><text x="54.9375%" y="783.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (2 samples, 0.21%)</title><rect x="54.6875%" y="757" width="0.2083%" height="15" fill="rgb(236,54,3)"/><text x="54.9375%" y="767.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (2 samples, 0.21%)</title><rect x="54.6875%" y="741" width="0.2083%" height="15" fill="rgb(241,173,43)"/><text x="54.9375%" y="751.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.21%)</title><rect x="54.6875%" y="725" width="0.2083%" height="15" fill="rgb(215,190,9)"/><text x="54.9375%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.21%)</title><rect x="54.6875%" y="709" width="0.2083%" height="15" fill="rgb(242,101,16)"/><text x="54.9375%" y="719.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.21%)</title><rect x="54.6875%" y="693" width="0.2083%" height="15" fill="rgb(223,190,21)"/><text x="54.9375%" y="703.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="54.7917%" y="677" width="0.1042%" height="15" fill="rgb(215,228,25)"/><text x="55.0417%" y="687.50"></text></g><g><title>_int_free (2 samples, 0.21%)</title><rect x="54.8958%" y="821" width="0.2083%" height="15" fill="rgb(225,36,22)"/><text x="55.1458%" y="831.50"></text></g><g><title>malloc_consolidate (1 samples, 0.10%)</title><rect x="55.0000%" y="805" width="0.1042%" height="15" fill="rgb(251,106,46)"/><text x="55.2500%" y="815.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.21%)</title><rect x="55.1042%" y="821" width="0.2083%" height="15" fill="rgb(208,90,1)"/><text x="55.3542%" y="831.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="55.2083%" y="805" width="0.1042%" height="15" fill="rgb(243,10,4)"/><text x="55.4583%" y="815.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="55.2083%" y="789" width="0.1042%" height="15" fill="rgb(212,137,27)"/><text x="55.4583%" y="799.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="55.2083%" y="773" width="0.1042%" height="15" fill="rgb(231,220,49)"/><text x="55.4583%" y="783.50"></text></g><g><title>[unknown] (500 samples, 52.08%)</title><rect x="3.3333%" y="917" width="52.0833%" height="15" fill="rgb(237,96,20)"/><text x="3.5833%" y="927.50">[unknown]</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (8 samples, 0.83%)</title><rect x="54.5833%" y="901" width="0.8333%" height="15" fill="rgb(239,229,30)"/><text x="54.8333%" y="911.50"></text></g><g><title>decor::Shim::run_on_tcp (8 samples, 0.83%)</title><rect x="54.5833%" y="885" width="0.8333%" height="15" fill="rgb(219,65,33)"/><text x="54.8333%" y="895.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (8 samples, 0.83%)</title><rect x="54.5833%" y="869" width="0.8333%" height="15" fill="rgb(243,134,7)"/><text x="54.8333%" y="879.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (7 samples, 0.73%)</title><rect x="54.6875%" y="853" width="0.7292%" height="15" fill="rgb(216,177,54)"/><text x="54.9375%" y="863.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (5 samples, 0.52%)</title><rect x="54.8958%" y="837" width="0.5208%" height="15" fill="rgb(211,160,20)"/><text x="55.1458%" y="847.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.10%)</title><rect x="55.3125%" y="821" width="0.1042%" height="15" fill="rgb(239,85,39)"/><text x="55.5625%" y="831.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.10%)</title><rect x="55.3125%" y="805" width="0.1042%" height="15" fill="rgb(232,125,22)"/><text x="55.5625%" y="815.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (1 samples, 0.10%)</title><rect x="55.4167%" y="805" width="0.1042%" height="15" fill="rgb(244,57,34)"/><text x="55.6667%" y="815.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.10%)</title><rect x="55.4167%" y="789" width="0.1042%" height="15" fill="rgb(214,203,32)"/><text x="55.6667%" y="799.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.10%)</title><rect x="55.4167%" y="773" width="0.1042%" height="15" fill="rgb(207,58,43)"/><text x="55.6667%" y="783.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.10%)</title><rect x="55.4167%" y="757" width="0.1042%" height="15" fill="rgb(215,193,15)"/><text x="55.6667%" y="767.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.10%)</title><rect x="55.4167%" y="741" width="0.1042%" height="15" fill="rgb(232,15,44)"/><text x="55.6667%" y="751.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1 samples, 0.10%)</title><rect x="55.4167%" y="725" width="0.1042%" height="15" fill="rgb(212,3,48)"/><text x="55.6667%" y="735.50"></text></g><g><title>__libc_send (1 samples, 0.10%)</title><rect x="55.4167%" y="709" width="0.1042%" height="15" fill="rgb(218,128,7)"/><text x="55.6667%" y="719.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.10%)</title><rect x="55.4167%" y="693" width="0.1042%" height="15" fill="rgb(226,216,39)"/><text x="55.6667%" y="703.50"></text></g><g><title>do_syscall_64 (1 samples, 0.10%)</title><rect x="55.4167%" y="677" width="0.1042%" height="15" fill="rgb(243,47,51)"/><text x="55.6667%" y="687.50"></text></g><g><title>__x64_sys_sendto (1 samples, 0.10%)</title><rect x="55.4167%" y="661" width="0.1042%" height="15" fill="rgb(241,183,40)"/><text x="55.6667%" y="671.50"></text></g><g><title>__sys_sendto (1 samples, 0.10%)</title><rect x="55.4167%" y="645" width="0.1042%" height="15" fill="rgb(231,217,32)"/><text x="55.6667%" y="655.50"></text></g><g><title>sock_sendmsg (1 samples, 0.10%)</title><rect x="55.4167%" y="629" width="0.1042%" height="15" fill="rgb(229,61,38)"/><text x="55.6667%" y="639.50"></text></g><g><title>tcp_sendmsg (1 samples, 0.10%)</title><rect x="55.4167%" y="613" width="0.1042%" height="15" fill="rgb(225,210,5)"/><text x="55.6667%" y="623.50"></text></g><g><title>tcp_sendmsg_locked (1 samples, 0.10%)</title><rect x="55.4167%" y="597" width="0.1042%" height="15" fill="rgb(231,79,45)"/><text x="55.6667%" y="607.50"></text></g><g><title>__tcp_push_pending_frames (1 samples, 0.10%)</title><rect x="55.4167%" y="581" width="0.1042%" height="15" fill="rgb(224,100,7)"/><text x="55.6667%" y="591.50"></text></g><g><title>tcp_write_xmit (1 samples, 0.10%)</title><rect x="55.4167%" y="565" width="0.1042%" height="15" fill="rgb(241,198,18)"/><text x="55.6667%" y="575.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.10%)</title><rect x="55.4167%" y="549" width="0.1042%" height="15" fill="rgb(252,97,53)"/><text x="55.6667%" y="559.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.10%)</title><rect x="55.4167%" y="533" width="0.1042%" height="15" fill="rgb(220,88,7)"/><text x="55.6667%" y="543.50"></text></g><g><title>ip_output (1 samples, 0.10%)</title><rect x="55.4167%" y="517" width="0.1042%" height="15" fill="rgb(213,176,14)"/><text x="55.6667%" y="527.50"></text></g><g><title>ip_finish_output2 (1 samples, 0.10%)</title><rect x="55.4167%" y="501" width="0.1042%" height="15" fill="rgb(246,73,7)"/><text x="55.6667%" y="511.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.10%)</title><rect x="55.4167%" y="485" width="0.1042%" height="15" fill="rgb(245,64,36)"/><text x="55.6667%" y="495.50"></text></g><g><title>do_softirq (1 samples, 0.10%)</title><rect x="55.4167%" y="469" width="0.1042%" height="15" fill="rgb(245,80,10)"/><text x="55.6667%" y="479.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (1 samples, 0.10%)</title><rect x="55.6250%" y="773" width="0.1042%" height="15" fill="rgb(232,107,50)"/><text x="55.8750%" y="783.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (1 samples, 0.10%)</title><rect x="55.6250%" y="757" width="0.1042%" height="15" fill="rgb(253,3,0)"/><text x="55.8750%" y="767.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.10%)</title><rect x="55.6250%" y="741" width="0.1042%" height="15" fill="rgb(212,99,53)"/><text x="55.8750%" y="751.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.10%)</title><rect x="55.6250%" y="725" width="0.1042%" height="15" fill="rgb(249,111,54)"/><text x="55.8750%" y="735.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.10%)</title><rect x="55.6250%" y="709" width="0.1042%" height="15" fill="rgb(249,55,30)"/><text x="55.8750%" y="719.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.10%)</title><rect x="55.6250%" y="693" width="0.1042%" height="15" fill="rgb(237,47,42)"/><text x="55.8750%" y="703.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1 samples, 0.10%)</title><rect x="55.6250%" y="677" width="0.1042%" height="15" fill="rgb(211,20,18)"/><text x="55.8750%" y="687.50"></text></g><g><title>__libc_send (1 samples, 0.10%)</title><rect x="55.6250%" y="661" width="0.1042%" height="15" fill="rgb(231,203,46)"/><text x="55.8750%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.10%)</title><rect x="55.6250%" y="645" width="0.1042%" height="15" fill="rgb(237,142,3)"/><text x="55.8750%" y="655.50"></text></g><g><title>do_syscall_64 (1 samples, 0.10%)</title><rect x="55.6250%" y="629" width="0.1042%" height="15" fill="rgb(241,107,1)"/><text x="55.8750%" y="639.50"></text></g><g><title>__x64_sys_sendto (1 samples, 0.10%)</title><rect x="55.6250%" y="613" width="0.1042%" height="15" fill="rgb(229,83,13)"/><text x="55.8750%" y="623.50"></text></g><g><title>__sys_sendto (1 samples, 0.10%)</title><rect x="55.6250%" y="597" width="0.1042%" height="15" fill="rgb(241,91,40)"/><text x="55.8750%" y="607.50"></text></g><g><title>sock_sendmsg (1 samples, 0.10%)</title><rect x="55.6250%" y="581" width="0.1042%" height="15" fill="rgb(225,3,45)"/><text x="55.8750%" y="591.50"></text></g><g><title>tcp_sendmsg (1 samples, 0.10%)</title><rect x="55.6250%" y="565" width="0.1042%" height="15" fill="rgb(244,223,14)"/><text x="55.8750%" y="575.50"></text></g><g><title>tcp_sendmsg_locked (1 samples, 0.10%)</title><rect x="55.6250%" y="549" width="0.1042%" height="15" fill="rgb(224,124,37)"/><text x="55.8750%" y="559.50"></text></g><g><title>__tcp_push_pending_frames (1 samples, 0.10%)</title><rect x="55.6250%" y="533" width="0.1042%" height="15" fill="rgb(251,171,30)"/><text x="55.8750%" y="543.50"></text></g><g><title>tcp_write_xmit (1 samples, 0.10%)</title><rect x="55.6250%" y="517" width="0.1042%" height="15" fill="rgb(236,46,54)"/><text x="55.8750%" y="527.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.10%)</title><rect x="55.6250%" y="501" width="0.1042%" height="15" fill="rgb(245,213,5)"/><text x="55.8750%" y="511.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.10%)</title><rect x="55.6250%" y="485" width="0.1042%" height="15" fill="rgb(230,144,27)"/><text x="55.8750%" y="495.50"></text></g><g><title>ip_output (1 samples, 0.10%)</title><rect x="55.6250%" y="469" width="0.1042%" height="15" fill="rgb(220,86,6)"/><text x="55.8750%" y="479.50"></text></g><g><title>ip_finish_output2 (1 samples, 0.10%)</title><rect x="55.6250%" y="453" width="0.1042%" height="15" fill="rgb(240,20,13)"/><text x="55.8750%" y="463.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.10%)</title><rect x="55.6250%" y="437" width="0.1042%" height="15" fill="rgb(217,89,34)"/><text x="55.8750%" y="447.50"></text></g><g><title>do_softirq (1 samples, 0.10%)</title><rect x="55.6250%" y="421" width="0.1042%" height="15" fill="rgb(229,13,5)"/><text x="55.8750%" y="431.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.10%)</title><rect x="55.6250%" y="405" width="0.1042%" height="15" fill="rgb(244,67,35)"/><text x="55.8750%" y="415.50"></text></g><g><title>__do_softirq (1 samples, 0.10%)</title><rect x="55.6250%" y="389" width="0.1042%" height="15" fill="rgb(221,40,2)"/><text x="55.8750%" y="399.50"></text></g><g><title>net_rx_action (1 samples, 0.10%)</title><rect x="55.6250%" y="373" width="0.1042%" height="15" fill="rgb(237,157,21)"/><text x="55.8750%" y="383.50"></text></g><g><title>process_backlog (1 samples, 0.10%)</title><rect x="55.6250%" y="357" width="0.1042%" height="15" fill="rgb(222,94,11)"/><text x="55.8750%" y="367.50"></text></g><g><title>__netif_receive_skb_one_core (1 samples, 0.10%)</title><rect x="55.6250%" y="341" width="0.1042%" height="15" fill="rgb(249,113,6)"/><text x="55.8750%" y="351.50"></text></g><g><title>ip_rcv (1 samples, 0.10%)</title><rect x="55.6250%" y="325" width="0.1042%" height="15" fill="rgb(238,137,36)"/><text x="55.8750%" y="335.50"></text></g><g><title>ip_local_deliver (1 samples, 0.10%)</title><rect x="55.6250%" y="309" width="0.1042%" height="15" fill="rgb(210,102,26)"/><text x="55.8750%" y="319.50"></text></g><g><title>ip_local_deliver_finish (1 samples, 0.10%)</title><rect x="55.6250%" y="293" width="0.1042%" height="15" fill="rgb(218,30,30)"/><text x="55.8750%" y="303.50"></text></g><g><title>ip_protocol_deliver_rcu (1 samples, 0.10%)</title><rect x="55.6250%" y="277" width="0.1042%" height="15" fill="rgb(214,67,26)"/><text x="55.8750%" y="287.50"></text></g><g><title>tcp_v4_rcv (1 samples, 0.10%)</title><rect x="55.6250%" y="261" width="0.1042%" height="15" fill="rgb(251,9,53)"/><text x="55.8750%" y="271.50"></text></g><g><title>tcp_v4_do_rcv (1 samples, 0.10%)</title><rect x="55.6250%" y="245" width="0.1042%" height="15" fill="rgb(228,204,25)"/><text x="55.8750%" y="255.50"></text></g><g><title>tcp_rcv_established (1 samples, 0.10%)</title><rect x="55.6250%" y="229" width="0.1042%" height="15" fill="rgb(207,153,8)"/><text x="55.8750%" y="239.50"></text></g><g><title>tcp_ack (1 samples, 0.10%)</title><rect x="55.6250%" y="213" width="0.1042%" height="15" fill="rgb(242,9,16)"/><text x="55.8750%" y="223.50"></text></g><g><title>rb_first (1 samples, 0.10%)</title><rect x="55.6250%" y="197" width="0.1042%" height="15" fill="rgb(217,211,10)"/><text x="55.8750%" y="207.50"></text></g><g><title>&lt;mysql::conn::query_result::SetIteratorState as core::convert::From&lt;mysql::conn::query_result::Or&lt;alloc::vec::Vec&lt;mysql_common::packets::Column&gt;,mysql_common::packets::OkPacket&gt;&gt;&gt;::from (1 samples, 0.10%)</title><rect x="55.8333%" y="741" width="0.1042%" height="15" fill="rgb(219,228,52)"/><text x="56.0833%" y="751.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (3 samples, 0.31%)</title><rect x="55.9375%" y="725" width="0.3125%" height="15" fill="rgb(231,92,29)"/><text x="56.1875%" y="735.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.10%)</title><rect x="56.1458%" y="709" width="0.1042%" height="15" fill="rgb(232,8,23)"/><text x="56.3958%" y="719.50"></text></g><g><title>__pthread_enable_asynccancel (1 samples, 0.10%)</title><rect x="56.4583%" y="645" width="0.1042%" height="15" fill="rgb(216,211,34)"/><text x="56.7083%" y="655.50"></text></g><g><title>__x86_indirect_thunk_rax (1 samples, 0.10%)</title><rect x="56.5625%" y="645" width="0.1042%" height="15" fill="rgb(236,151,0)"/><text x="56.8125%" y="655.50"></text></g><g><title>__sk_dst_check (1 samples, 0.10%)</title><rect x="56.7708%" y="469" width="0.1042%" height="15" fill="rgb(209,168,3)"/><text x="57.0208%" y="479.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.21%)</title><rect x="56.8750%" y="421" width="0.2083%" height="15" fill="rgb(208,129,28)"/><text x="57.1250%" y="431.50"></text></g><g><title>loopback_xmit (2 samples, 0.21%)</title><rect x="56.8750%" y="405" width="0.2083%" height="15" fill="rgb(229,78,22)"/><text x="57.1250%" y="415.50"></text></g><g><title>netif_rx (2 samples, 0.21%)</title><rect x="56.8750%" y="389" width="0.2083%" height="15" fill="rgb(228,187,13)"/><text x="57.1250%" y="399.50"></text></g><g><title>netif_rx_internal (2 samples, 0.21%)</title><rect x="56.8750%" y="373" width="0.2083%" height="15" fill="rgb(240,119,24)"/><text x="57.1250%" y="383.50"></text></g><g><title>ktime_get_with_offset (1 samples, 0.10%)</title><rect x="56.9792%" y="357" width="0.1042%" height="15" fill="rgb(209,194,42)"/><text x="57.2292%" y="367.50"></text></g><g><title>read_tsc (1 samples, 0.10%)</title><rect x="56.9792%" y="341" width="0.1042%" height="15" fill="rgb(247,200,46)"/><text x="57.2292%" y="351.50"></text></g><g><title>__dev_queue_xmit (3 samples, 0.31%)</title><rect x="56.8750%" y="437" width="0.3125%" height="15" fill="rgb(218,76,16)"/><text x="57.1250%" y="447.50"></text></g><g><title>preempt_count_add (1 samples, 0.10%)</title><rect x="57.0833%" y="421" width="0.1042%" height="15" fill="rgb(225,21,48)"/><text x="57.3333%" y="431.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.10%)</title><rect x="57.2917%" y="357" width="0.1042%" height="15" fill="rgb(239,223,50)"/><text x="57.5417%" y="367.50"></text></g><g><title>irqtime_account_irq (2 samples, 0.21%)</title><rect x="57.2917%" y="373" width="0.2083%" height="15" fill="rgb(244,45,21)"/><text x="57.5417%" y="383.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.10%)</title><rect x="57.3958%" y="357" width="0.1042%" height="15" fill="rgb(232,33,43)"/><text x="57.6458%" y="367.50"></text></g><g><title>sched_clock (1 samples, 0.10%)</title><rect x="57.3958%" y="341" width="0.1042%" height="15" fill="rgb(209,8,3)"/><text x="57.6458%" y="351.50"></text></g><g><title>native_sched_clock (1 samples, 0.10%)</title><rect x="57.3958%" y="325" width="0.1042%" height="15" fill="rgb(214,25,53)"/><text x="57.6458%" y="335.50"></text></g><g><title>__inet_lookup_established (2 samples, 0.21%)</title><rect x="57.5000%" y="245" width="0.2083%" height="15" fill="rgb(254,186,54)"/><text x="57.7500%" y="255.50"></text></g><g><title>sk_filter_trim_cap (1 samples, 0.10%)</title><rect x="57.7083%" y="245" width="0.1042%" height="15" fill="rgb(208,174,49)"/><text x="57.9583%" y="255.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.10%)</title><rect x="57.7083%" y="229" width="0.1042%" height="15" fill="rgb(233,191,51)"/><text x="57.9583%" y="239.50"></text></g><g><title>sk_reset_timer (1 samples, 0.10%)</title><rect x="57.9167%" y="213" width="0.1042%" height="15" fill="rgb(222,134,10)"/><text x="58.1667%" y="223.50"></text></g><g><title>enqueue_task (2 samples, 0.21%)</title><rect x="58.1250%" y="133" width="0.2083%" height="15" fill="rgb(230,226,20)"/><text x="58.3750%" y="143.50"></text></g><g><title>psi_task_change (2 samples, 0.21%)</title><rect x="58.1250%" y="117" width="0.2083%" height="15" fill="rgb(251,111,25)"/><text x="58.3750%" y="127.50"></text></g><g><title>psi_group_change (1 samples, 0.10%)</title><rect x="58.2292%" y="101" width="0.1042%" height="15" fill="rgb(224,40,46)"/><text x="58.4792%" y="111.50"></text></g><g><title>record_times (1 samples, 0.10%)</title><rect x="58.2292%" y="85" width="0.1042%" height="15" fill="rgb(236,108,47)"/><text x="58.4792%" y="95.50"></text></g><g><title>account_entity_enqueue (1 samples, 0.10%)</title><rect x="58.3333%" y="101" width="0.1042%" height="15" fill="rgb(234,93,0)"/><text x="58.5833%" y="111.50"></text></g><g><title>enqueue_task_fair (2 samples, 0.21%)</title><rect x="58.3333%" y="133" width="0.2083%" height="15" fill="rgb(224,213,32)"/><text x="58.5833%" y="143.50"></text></g><g><title>enqueue_entity (2 samples, 0.21%)</title><rect x="58.3333%" y="117" width="0.2083%" height="15" fill="rgb(251,11,48)"/><text x="58.5833%" y="127.50"></text></g><g><title>reweight_entity (1 samples, 0.10%)</title><rect x="58.4375%" y="101" width="0.1042%" height="15" fill="rgb(236,173,5)"/><text x="58.6875%" y="111.50"></text></g><g><title>select_task_rq_fair (2 samples, 0.21%)</title><rect x="58.5417%" y="133" width="0.2083%" height="15" fill="rgb(230,95,12)"/><text x="58.7917%" y="143.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.10%)</title><rect x="58.6458%" y="117" width="0.1042%" height="15" fill="rgb(232,209,1)"/><text x="58.8958%" y="127.50"></text></g><g><title>__wake_up_common (9 samples, 0.94%)</title><rect x="58.0208%" y="181" width="0.9375%" height="15" fill="rgb(232,6,1)"/><text x="58.2708%" y="191.50"></text></g><g><title>pollwake (9 samples, 0.94%)</title><rect x="58.0208%" y="165" width="0.9375%" height="15" fill="rgb(210,224,50)"/><text x="58.2708%" y="175.50"></text></g><g><title>try_to_wake_up (9 samples, 0.94%)</title><rect x="58.0208%" y="149" width="0.9375%" height="15" fill="rgb(228,127,35)"/><text x="58.2708%" y="159.50"></text></g><g><title>ttwu_do_wakeup (2 samples, 0.21%)</title><rect x="58.7500%" y="133" width="0.2083%" height="15" fill="rgb(245,102,45)"/><text x="59.0000%" y="143.50"></text></g><g><title>check_preempt_curr (2 samples, 0.21%)</title><rect x="58.7500%" y="117" width="0.2083%" height="15" fill="rgb(214,1,49)"/><text x="59.0000%" y="127.50"></text></g><g><title>resched_curr (1 samples, 0.10%)</title><rect x="58.8542%" y="101" width="0.1042%" height="15" fill="rgb(226,163,40)"/><text x="59.1042%" y="111.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.10%)</title><rect x="58.8542%" y="85" width="0.1042%" height="15" fill="rgb(239,212,28)"/><text x="59.1042%" y="95.50"></text></g><g><title>sock_def_readable (10 samples, 1.04%)</title><rect x="58.0208%" y="213" width="1.0417%" height="15" fill="rgb(220,20,13)"/><text x="58.2708%" y="223.50"></text></g><g><title>__wake_up_common_lock (10 samples, 1.04%)</title><rect x="58.0208%" y="197" width="1.0417%" height="15" fill="rgb(210,164,35)"/><text x="58.2708%" y="207.50"></text></g><g><title>_raw_spin_unlock_irqrestore (1 samples, 0.10%)</title><rect x="58.9583%" y="181" width="0.1042%" height="15" fill="rgb(248,109,41)"/><text x="59.2083%" y="191.50"></text></g><g><title>preempt_count_sub (1 samples, 0.10%)</title><rect x="58.9583%" y="165" width="0.1042%" height="15" fill="rgb(238,23,50)"/><text x="59.2083%" y="175.50"></text></g><g><title>kmem_cache_free (1 samples, 0.10%)</title><rect x="59.2708%" y="197" width="0.1042%" height="15" fill="rgb(211,48,49)"/><text x="59.5208%" y="207.50"></text></g><g><title>__ip_queue_xmit (26 samples, 2.71%)</title><rect x="56.7708%" y="485" width="2.7083%" height="15" fill="rgb(223,36,21)"/><text x="57.0208%" y="495.50">__..</text></g><g><title>ip_output (25 samples, 2.60%)</title><rect x="56.8750%" y="469" width="2.6042%" height="15" fill="rgb(207,123,46)"/><text x="57.1250%" y="479.50">ip..</text></g><g><title>ip_finish_output2 (25 samples, 2.60%)</title><rect x="56.8750%" y="453" width="2.6042%" height="15" fill="rgb(240,218,32)"/><text x="57.1250%" y="463.50">ip..</text></g><g><title>__local_bh_enable_ip (22 samples, 2.29%)</title><rect x="57.1875%" y="437" width="2.2917%" height="15" fill="rgb(252,5,43)"/><text x="57.4375%" y="447.50">_..</text></g><g><title>do_softirq (22 samples, 2.29%)</title><rect x="57.1875%" y="421" width="2.2917%" height="15" fill="rgb(252,84,19)"/><text x="57.4375%" y="431.50">d..</text></g><g><title>do_softirq_own_stack (22 samples, 2.29%)</title><rect x="57.1875%" y="405" width="2.2917%" height="15" fill="rgb(243,152,39)"/><text x="57.4375%" y="415.50">d..</text></g><g><title>__do_softirq (21 samples, 2.19%)</title><rect x="57.2917%" y="389" width="2.1875%" height="15" fill="rgb(234,160,15)"/><text x="57.5417%" y="399.50">_..</text></g><g><title>net_rx_action (19 samples, 1.98%)</title><rect x="57.5000%" y="373" width="1.9792%" height="15" fill="rgb(237,34,20)"/><text x="57.7500%" y="383.50">n..</text></g><g><title>process_backlog (19 samples, 1.98%)</title><rect x="57.5000%" y="357" width="1.9792%" height="15" fill="rgb(229,97,13)"/><text x="57.7500%" y="367.50">p..</text></g><g><title>__netif_receive_skb_one_core (19 samples, 1.98%)</title><rect x="57.5000%" y="341" width="1.9792%" height="15" fill="rgb(234,71,50)"/><text x="57.7500%" y="351.50">_..</text></g><g><title>ip_rcv (19 samples, 1.98%)</title><rect x="57.5000%" y="325" width="1.9792%" height="15" fill="rgb(253,155,4)"/><text x="57.7500%" y="335.50">i..</text></g><g><title>ip_local_deliver (19 samples, 1.98%)</title><rect x="57.5000%" y="309" width="1.9792%" height="15" fill="rgb(222,185,37)"/><text x="57.7500%" y="319.50">i..</text></g><g><title>ip_local_deliver_finish (19 samples, 1.98%)</title><rect x="57.5000%" y="293" width="1.9792%" height="15" fill="rgb(251,177,13)"/><text x="57.7500%" y="303.50">i..</text></g><g><title>ip_protocol_deliver_rcu (19 samples, 1.98%)</title><rect x="57.5000%" y="277" width="1.9792%" height="15" fill="rgb(250,179,40)"/><text x="57.7500%" y="287.50">i..</text></g><g><title>tcp_v4_rcv (19 samples, 1.98%)</title><rect x="57.5000%" y="261" width="1.9792%" height="15" fill="rgb(242,44,2)"/><text x="57.7500%" y="271.50">t..</text></g><g><title>tcp_v4_do_rcv (16 samples, 1.67%)</title><rect x="57.8125%" y="245" width="1.6667%" height="15" fill="rgb(216,177,13)"/><text x="58.0625%" y="255.50"></text></g><g><title>tcp_rcv_established (16 samples, 1.67%)</title><rect x="57.8125%" y="229" width="1.6667%" height="15" fill="rgb(216,106,43)"/><text x="58.0625%" y="239.50"></text></g><g><title>tcp_ack (4 samples, 0.42%)</title><rect x="59.0625%" y="213" width="0.4167%" height="15" fill="rgb(216,183,2)"/><text x="59.3125%" y="223.50"></text></g><g><title>tcp_update_pacing_rate (1 samples, 0.10%)</title><rect x="59.3750%" y="197" width="0.1042%" height="15" fill="rgb(249,75,3)"/><text x="59.6250%" y="207.50"></text></g><g><title>__tcp_select_window (1 samples, 0.10%)</title><rect x="59.4792%" y="485" width="0.1042%" height="15" fill="rgb(219,67,39)"/><text x="59.7292%" y="495.50"></text></g><g><title>tcp_established_options (1 samples, 0.10%)</title><rect x="59.5833%" y="485" width="0.1042%" height="15" fill="rgb(253,228,2)"/><text x="59.8333%" y="495.50"></text></g><g><title>__tcp_transmit_skb (29 samples, 3.02%)</title><rect x="56.7708%" y="501" width="3.0208%" height="15" fill="rgb(235,138,27)"/><text x="57.0208%" y="511.50">__t..</text></g><g><title>tcp_update_skb_after_send (1 samples, 0.10%)</title><rect x="59.6875%" y="485" width="0.1042%" height="15" fill="rgb(236,97,51)"/><text x="59.9375%" y="495.50"></text></g><g><title>tcp_event_new_data_sent (1 samples, 0.10%)</title><rect x="59.7917%" y="501" width="0.1042%" height="15" fill="rgb(240,80,30)"/><text x="60.0417%" y="511.50"></text></g><g><title>__tcp_push_pending_frames (31 samples, 3.23%)</title><rect x="56.7708%" y="533" width="3.2292%" height="15" fill="rgb(230,178,19)"/><text x="57.0208%" y="543.50">__t..</text></g><g><title>tcp_write_xmit (31 samples, 3.23%)</title><rect x="56.7708%" y="517" width="3.2292%" height="15" fill="rgb(210,190,27)"/><text x="57.0208%" y="527.50">tcp..</text></g><g><title>tcp_small_queue_check.isra.0 (1 samples, 0.10%)</title><rect x="59.8958%" y="501" width="0.1042%" height="15" fill="rgb(222,107,31)"/><text x="60.1458%" y="511.50"></text></g><g><title>sk_stream_alloc_skb (2 samples, 0.21%)</title><rect x="60.0000%" y="533" width="0.2083%" height="15" fill="rgb(216,127,34)"/><text x="60.2500%" y="543.50"></text></g><g><title>__alloc_skb (2 samples, 0.21%)</title><rect x="60.0000%" y="517" width="0.2083%" height="15" fill="rgb(234,116,52)"/><text x="60.2500%" y="527.50"></text></g><g><title>kmem_cache_alloc_node (1 samples, 0.10%)</title><rect x="60.1042%" y="501" width="0.1042%" height="15" fill="rgb(222,124,15)"/><text x="60.3542%" y="511.50"></text></g><g><title>skb_do_copy_data_nocache (1 samples, 0.10%)</title><rect x="60.2083%" y="533" width="0.1042%" height="15" fill="rgb(231,179,28)"/><text x="60.4583%" y="543.50"></text></g><g><title>__check_object_size (1 samples, 0.10%)</title><rect x="60.2083%" y="517" width="0.1042%" height="15" fill="rgb(226,93,45)"/><text x="60.4583%" y="527.50"></text></g><g><title>__x64_sys_sendto (35 samples, 3.65%)</title><rect x="56.7708%" y="613" width="3.6458%" height="15" fill="rgb(215,8,51)"/><text x="57.0208%" y="623.50">__x6..</text></g><g><title>__sys_sendto (35 samples, 3.65%)</title><rect x="56.7708%" y="597" width="3.6458%" height="15" fill="rgb(223,106,5)"/><text x="57.0208%" y="607.50">__sy..</text></g><g><title>sock_sendmsg (35 samples, 3.65%)</title><rect x="56.7708%" y="581" width="3.6458%" height="15" fill="rgb(250,191,5)"/><text x="57.0208%" y="591.50">sock..</text></g><g><title>tcp_sendmsg (35 samples, 3.65%)</title><rect x="56.7708%" y="565" width="3.6458%" height="15" fill="rgb(242,132,44)"/><text x="57.0208%" y="575.50">tcp_..</text></g><g><title>tcp_sendmsg_locked (35 samples, 3.65%)</title><rect x="56.7708%" y="549" width="3.6458%" height="15" fill="rgb(251,152,29)"/><text x="57.0208%" y="559.50">tcp_..</text></g><g><title>tcp_send_mss (1 samples, 0.10%)</title><rect x="60.3125%" y="533" width="0.1042%" height="15" fill="rgb(218,179,5)"/><text x="60.5625%" y="543.50"></text></g><g><title>tcp_current_mss (1 samples, 0.10%)</title><rect x="60.3125%" y="517" width="0.1042%" height="15" fill="rgb(227,67,19)"/><text x="60.5625%" y="527.50"></text></g><g><title>ipv4_mtu (1 samples, 0.10%)</title><rect x="60.3125%" y="501" width="0.1042%" height="15" fill="rgb(233,119,31)"/><text x="60.5625%" y="511.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (46 samples, 4.79%)</title><rect x="55.7292%" y="757" width="4.7917%" height="15" fill="rgb(241,120,22)"/><text x="55.9792%" y="767.50">&lt;mysql..</text></g><g><title>mysql::conn::Conn::_query (44 samples, 4.58%)</title><rect x="55.9375%" y="741" width="4.5833%" height="15" fill="rgb(224,102,30)"/><text x="56.1875%" y="751.50">mysql..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (41 samples, 4.27%)</title><rect x="56.2500%" y="725" width="4.2708%" height="15" fill="rgb(210,164,37)"/><text x="56.5000%" y="735.50">mysql..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (39 samples, 4.06%)</title><rect x="56.4583%" y="709" width="4.0625%" height="15" fill="rgb(226,191,16)"/><text x="56.7083%" y="719.50">std:..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (39 samples, 4.06%)</title><rect x="56.4583%" y="693" width="4.0625%" height="15" fill="rgb(214,40,45)"/><text x="56.7083%" y="703.50">&lt;std..</text></g><g><title>std::sys_common::net::TcpStream::write (39 samples, 4.06%)</title><rect x="56.4583%" y="677" width="4.0625%" height="15" fill="rgb(244,29,26)"/><text x="56.7083%" y="687.50">std:..</text></g><g><title>__libc_send (39 samples, 4.06%)</title><rect x="56.4583%" y="661" width="4.0625%" height="15" fill="rgb(216,16,5)"/><text x="56.7083%" y="671.50">__li..</text></g><g><title>entry_SYSCALL_64 (37 samples, 3.85%)</title><rect x="56.6667%" y="645" width="3.8542%" height="15" fill="rgb(249,76,35)"/><text x="56.9167%" y="655.50">entr..</text></g><g><title>do_syscall_64 (36 samples, 3.75%)</title><rect x="56.7708%" y="629" width="3.7500%" height="15" fill="rgb(207,11,44)"/><text x="57.0208%" y="639.50">do_s..</text></g><g><title>syscall_slow_exit_work (1 samples, 0.10%)</title><rect x="60.4167%" y="613" width="0.1042%" height="15" fill="rgb(228,190,49)"/><text x="60.6667%" y="623.50"></text></g><g><title>apic_timer_interrupt (1 samples, 0.10%)</title><rect x="60.5208%" y="757" width="0.1042%" height="15" fill="rgb(214,173,12)"/><text x="60.7708%" y="767.50"></text></g><g><title>smp_apic_timer_interrupt (1 samples, 0.10%)</title><rect x="60.5208%" y="741" width="0.1042%" height="15" fill="rgb(218,26,35)"/><text x="60.7708%" y="751.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.10%)</title><rect x="60.5208%" y="725" width="0.1042%" height="15" fill="rgb(220,200,19)"/><text x="60.7708%" y="735.50"></text></g><g><title>clockevents_program_event (1 samples, 0.10%)</title><rect x="60.5208%" y="709" width="0.1042%" height="15" fill="rgb(239,95,49)"/><text x="60.7708%" y="719.50"></text></g><g><title>ktime_get (1 samples, 0.10%)</title><rect x="60.5208%" y="693" width="0.1042%" height="15" fill="rgb(235,85,53)"/><text x="60.7708%" y="703.50"></text></g><g><title>read_tsc (1 samples, 0.10%)</title><rect x="60.5208%" y="677" width="0.1042%" height="15" fill="rgb(233,133,31)"/><text x="60.7708%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.10%)</title><rect x="60.6250%" y="709" width="0.1042%" height="15" fill="rgb(218,25,20)"/><text x="60.8750%" y="719.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.31%)</title><rect x="60.6250%" y="725" width="0.3125%" height="15" fill="rgb(252,210,38)"/><text x="60.8750%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.21%)</title><rect x="60.7292%" y="709" width="0.2083%" height="15" fill="rgb(242,134,21)"/><text x="60.9792%" y="719.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="60.8333%" y="693" width="0.1042%" height="15" fill="rgb(213,28,48)"/><text x="61.0833%" y="703.50"></text></g><g><title>__GI___libc_free (2 samples, 0.21%)</title><rect x="60.9375%" y="645" width="0.2083%" height="15" fill="rgb(250,196,2)"/><text x="61.1875%" y="655.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="61.1458%" y="645" width="0.1042%" height="15" fill="rgb(227,5,17)"/><text x="61.3958%" y="655.50"></text></g><g><title>_int_free (2 samples, 0.21%)</title><rect x="61.2500%" y="645" width="0.2083%" height="15" fill="rgb(221,226,24)"/><text x="61.5000%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (6 samples, 0.62%)</title><rect x="60.9375%" y="677" width="0.6250%" height="15" fill="rgb(211,5,48)"/><text x="61.1875%" y="687.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (6 samples, 0.62%)</title><rect x="60.9375%" y="661" width="0.6250%" height="15" fill="rgb(219,150,6)"/><text x="61.1875%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="61.4583%" y="645" width="0.1042%" height="15" fill="rgb(251,46,16)"/><text x="61.7083%" y="655.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.10%)</title><rect x="61.4583%" y="629" width="0.1042%" height="15" fill="rgb(220,204,40)"/><text x="61.7083%" y="639.50"></text></g><g><title>_int_realloc (1 samples, 0.10%)</title><rect x="61.4583%" y="613" width="0.1042%" height="15" fill="rgb(211,85,2)"/><text x="61.7083%" y="623.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="61.4583%" y="597" width="0.1042%" height="15" fill="rgb(229,17,7)"/><text x="61.7083%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (7 samples, 0.73%)</title><rect x="60.9375%" y="693" width="0.7292%" height="15" fill="rgb(239,72,28)"/><text x="61.1875%" y="703.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.10%)</title><rect x="61.5625%" y="677" width="0.1042%" height="15" fill="rgb(230,47,54)"/><text x="61.8125%" y="687.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="61.5625%" y="661" width="0.1042%" height="15" fill="rgb(214,50,8)"/><text x="61.8125%" y="671.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.10%)</title><rect x="61.8750%" y="677" width="0.1042%" height="15" fill="rgb(216,198,43)"/><text x="62.1250%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="61.9792%" y="677" width="0.1042%" height="15" fill="rgb(234,20,35)"/><text x="62.2292%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.10%)</title><rect x="62.0833%" y="645" width="0.1042%" height="15" fill="rgb(254,45,19)"/><text x="62.3333%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (13 samples, 1.35%)</title><rect x="60.9375%" y="725" width="1.3542%" height="15" fill="rgb(219,14,44)"/><text x="61.1875%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Values as sql_parser::ast::display::AstDisplay&gt;::fmt (13 samples, 1.35%)</title><rect x="60.9375%" y="709" width="1.3542%" height="15" fill="rgb(217,220,26)"/><text x="61.1875%" y="719.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (6 samples, 0.62%)</title><rect x="61.6667%" y="693" width="0.6250%" height="15" fill="rgb(213,158,28)"/><text x="61.9167%" y="703.50"></text></g><g><title>core::fmt::write (2 samples, 0.21%)</title><rect x="62.0833%" y="677" width="0.2083%" height="15" fill="rgb(252,51,52)"/><text x="62.3333%" y="687.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.21%)</title><rect x="62.0833%" y="661" width="0.2083%" height="15" fill="rgb(246,89,16)"/><text x="62.3333%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="62.1875%" y="645" width="0.1042%" height="15" fill="rgb(216,158,49)"/><text x="62.4375%" y="655.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="62.1875%" y="629" width="0.1042%" height="15" fill="rgb(236,107,19)"/><text x="62.4375%" y="639.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.21%)</title><rect x="62.3958%" y="661" width="0.2083%" height="15" fill="rgb(228,185,30)"/><text x="62.6458%" y="671.50"></text></g><g><title>core::str::validations::next_code_point (2 samples, 0.21%)</title><rect x="62.3958%" y="645" width="0.2083%" height="15" fill="rgb(246,134,8)"/><text x="62.6458%" y="655.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.10%)</title><rect x="62.6042%" y="661" width="0.1042%" height="15" fill="rgb(214,143,50)"/><text x="62.8542%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.10%)</title><rect x="62.6042%" y="645" width="0.1042%" height="15" fill="rgb(228,75,8)"/><text x="62.8542%" y="655.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (9 samples, 0.94%)</title><rect x="62.2917%" y="677" width="0.9375%" height="15" fill="rgb(207,175,4)"/><text x="62.5417%" y="687.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (5 samples, 0.52%)</title><rect x="62.7083%" y="661" width="0.5208%" height="15" fill="rgb(205,108,24)"/><text x="62.9583%" y="671.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (5 samples, 0.52%)</title><rect x="62.7083%" y="645" width="0.5208%" height="15" fill="rgb(244,120,49)"/><text x="62.9583%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (5 samples, 0.52%)</title><rect x="62.7083%" y="629" width="0.5208%" height="15" fill="rgb(223,47,38)"/><text x="62.9583%" y="639.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (2 samples, 0.21%)</title><rect x="63.0208%" y="613" width="0.2083%" height="15" fill="rgb(229,179,11)"/><text x="63.2708%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (10 samples, 1.04%)</title><rect x="62.2917%" y="709" width="1.0417%" height="15" fill="rgb(231,122,1)"/><text x="62.5417%" y="719.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (10 samples, 1.04%)</title><rect x="62.2917%" y="693" width="1.0417%" height="15" fill="rgb(245,119,9)"/><text x="62.5417%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (1 samples, 0.10%)</title><rect x="63.2292%" y="677" width="0.1042%" height="15" fill="rgb(241,163,25)"/><text x="63.4792%" y="687.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.10%)</title><rect x="63.2292%" y="661" width="0.1042%" height="15" fill="rgb(217,214,3)"/><text x="63.4792%" y="671.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.10%)</title><rect x="63.2292%" y="645" width="0.1042%" height="15" fill="rgb(240,86,28)"/><text x="63.4792%" y="655.50"></text></g><g><title>core::fmt::write (29 samples, 3.02%)</title><rect x="60.6250%" y="757" width="3.0208%" height="15" fill="rgb(215,47,9)"/><text x="60.8750%" y="767.50">cor..</text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (29 samples, 3.02%)</title><rect x="60.6250%" y="741" width="3.0208%" height="15" fill="rgb(252,25,45)"/><text x="60.8750%" y="751.50">&lt;sq..</text></g><g><title>&lt;sql_parser::ast::defs::statement::InsertStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (13 samples, 1.35%)</title><rect x="62.2917%" y="725" width="1.3542%" height="15" fill="rgb(251,164,9)"/><text x="62.5417%" y="735.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (3 samples, 0.31%)</title><rect x="63.3333%" y="709" width="0.3125%" height="15" fill="rgb(233,194,0)"/><text x="63.5833%" y="719.50"></text></g><g><title>core::fmt::write (1 samples, 0.10%)</title><rect x="63.5417%" y="693" width="0.1042%" height="15" fill="rgb(249,111,24)"/><text x="63.7917%" y="703.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.21%)</title><rect x="63.6458%" y="757" width="0.2083%" height="15" fill="rgb(250,223,3)"/><text x="63.8958%" y="767.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="63.7500%" y="741" width="0.1042%" height="15" fill="rgb(236,178,37)"/><text x="64.0000%" y="751.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="63.7500%" y="725" width="0.1042%" height="15" fill="rgb(241,158,50)"/><text x="64.0000%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="63.7500%" y="709" width="0.1042%" height="15" fill="rgb(213,121,41)"/><text x="64.0000%" y="719.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="63.7500%" y="693" width="0.1042%" height="15" fill="rgb(240,92,3)"/><text x="64.0000%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="63.9583%" y="741" width="0.1042%" height="15" fill="rgb(205,123,3)"/><text x="64.2083%" y="751.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (81 samples, 8.44%)</title><rect x="55.7292%" y="773" width="8.4375%" height="15" fill="rgb(205,97,47)"/><text x="55.9792%" y="783.50">&lt;decor::Shim..</text></g><g><title>decor::answer_rows (3 samples, 0.31%)</title><rect x="63.8542%" y="757" width="0.3125%" height="15" fill="rgb(247,152,14)"/><text x="64.1042%" y="767.50"></text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::finish (1 samples, 0.10%)</title><rect x="64.0625%" y="741" width="0.1042%" height="15" fill="rgb(248,195,53)"/><text x="64.3125%" y="751.50"></text></g><g><title>msql_srv::writers::write_ok_packet (1 samples, 0.10%)</title><rect x="64.0625%" y="725" width="0.1042%" height="15" fill="rgb(226,201,16)"/><text x="64.3125%" y="735.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.10%)</title><rect x="64.0625%" y="709" width="0.1042%" height="15" fill="rgb(205,98,0)"/><text x="64.3125%" y="719.50"></text></g><g><title>__GI___libc_free (1 samples, 0.10%)</title><rect x="64.1667%" y="725" width="0.1042%" height="15" fill="rgb(214,191,48)"/><text x="64.4167%" y="735.50"></text></g><g><title>__GI___libc_free (1 samples, 0.10%)</title><rect x="64.2708%" y="661" width="0.1042%" height="15" fill="rgb(237,112,39)"/><text x="64.5208%" y="671.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="64.3750%" y="661" width="0.1042%" height="15" fill="rgb(247,203,27)"/><text x="64.6250%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.42%)</title><rect x="64.1667%" y="741" width="0.4167%" height="15" fill="rgb(235,124,28)"/><text x="64.4167%" y="751.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.31%)</title><rect x="64.2708%" y="725" width="0.3125%" height="15" fill="rgb(208,207,46)"/><text x="64.5208%" y="735.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.31%)</title><rect x="64.2708%" y="709" width="0.3125%" height="15" fill="rgb(234,176,4)"/><text x="64.5208%" y="719.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.31%)</title><rect x="64.2708%" y="693" width="0.3125%" height="15" fill="rgb(230,133,28)"/><text x="64.5208%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.31%)</title><rect x="64.2708%" y="677" width="0.3125%" height="15" fill="rgb(211,137,40)"/><text x="64.5208%" y="687.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="64.4792%" y="661" width="0.1042%" height="15" fill="rgb(254,35,13)"/><text x="64.7292%" y="671.50"></text></g><g><title>core::ptr::drop_in_place (5 samples, 0.52%)</title><rect x="64.1667%" y="773" width="0.5208%" height="15" fill="rgb(225,49,51)"/><text x="64.4167%" y="783.50"></text></g><g><title>core::ptr::drop_in_place (5 samples, 0.52%)</title><rect x="64.1667%" y="757" width="0.5208%" height="15" fill="rgb(251,10,15)"/><text x="64.4167%" y="767.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="64.5833%" y="741" width="0.1042%" height="15" fill="rgb(228,207,15)"/><text x="64.8333%" y="751.50"></text></g><g><title>malloc_consolidate (1 samples, 0.10%)</title><rect x="64.5833%" y="725" width="0.1042%" height="15" fill="rgb(241,99,19)"/><text x="64.8333%" y="735.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.10%)</title><rect x="64.5833%" y="709" width="0.1042%" height="15" fill="rgb(207,104,49)"/><text x="64.8333%" y="719.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.10%)</title><rect x="64.6875%" y="773" width="0.1042%" height="15" fill="rgb(234,99,18)"/><text x="64.9375%" y="783.50"></text></g><g><title>core::str::validations::run_utf8_validation (1 samples, 0.10%)</title><rect x="64.6875%" y="757" width="0.1042%" height="15" fill="rgb(213,191,49)"/><text x="64.9375%" y="767.50"></text></g><g><title>__pthread_disable_asynccancel (1 samples, 0.10%)</title><rect x="64.7917%" y="661" width="0.1042%" height="15" fill="rgb(210,226,19)"/><text x="65.0417%" y="671.50"></text></g><g><title>__kfree_skb (3 samples, 0.31%)</title><rect x="64.8958%" y="565" width="0.3125%" height="15" fill="rgb(229,97,18)"/><text x="65.1458%" y="575.50"></text></g><g><title>skb_release_head_state (3 samples, 0.31%)</title><rect x="64.8958%" y="549" width="0.3125%" height="15" fill="rgb(211,167,15)"/><text x="65.1458%" y="559.50"></text></g><g><title>dst_release (2 samples, 0.21%)</title><rect x="65.0000%" y="533" width="0.2083%" height="15" fill="rgb(210,169,34)"/><text x="65.2500%" y="543.50"></text></g><g><title>__tcp_send_ack.part.0 (1 samples, 0.10%)</title><rect x="65.2083%" y="565" width="0.1042%" height="15" fill="rgb(241,121,31)"/><text x="65.4583%" y="575.50"></text></g><g><title>__alloc_skb (1 samples, 0.10%)</title><rect x="65.2083%" y="549" width="0.1042%" height="15" fill="rgb(232,40,11)"/><text x="65.4583%" y="559.50"></text></g><g><title>__ksize (1 samples, 0.10%)</title><rect x="65.2083%" y="533" width="0.1042%" height="15" fill="rgb(205,86,26)"/><text x="65.4583%" y="543.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.10%)</title><rect x="65.3125%" y="565" width="0.1042%" height="15" fill="rgb(231,126,28)"/><text x="65.5625%" y="575.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.10%)</title><rect x="65.3125%" y="549" width="0.1042%" height="15" fill="rgb(219,221,18)"/><text x="65.5625%" y="559.50"></text></g><g><title>ip_output (1 samples, 0.10%)</title><rect x="65.3125%" y="533" width="0.1042%" height="15" fill="rgb(211,40,0)"/><text x="65.5625%" y="543.50"></text></g><g><title>ip_finish_output2 (1 samples, 0.10%)</title><rect x="65.3125%" y="517" width="0.1042%" height="15" fill="rgb(239,85,43)"/><text x="65.5625%" y="527.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.10%)</title><rect x="65.3125%" y="501" width="0.1042%" height="15" fill="rgb(231,55,21)"/><text x="65.5625%" y="511.50"></text></g><g><title>do_softirq (1 samples, 0.10%)</title><rect x="65.3125%" y="485" width="0.1042%" height="15" fill="rgb(225,184,43)"/><text x="65.5625%" y="495.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.10%)</title><rect x="65.3125%" y="469" width="0.1042%" height="15" fill="rgb(251,158,41)"/><text x="65.5625%" y="479.50"></text></g><g><title>__do_softirq (1 samples, 0.10%)</title><rect x="65.3125%" y="453" width="0.1042%" height="15" fill="rgb(234,159,37)"/><text x="65.5625%" y="463.50"></text></g><g><title>net_rx_action (1 samples, 0.10%)</title><rect x="65.3125%" y="437" width="0.1042%" height="15" fill="rgb(216,204,22)"/><text x="65.5625%" y="447.50"></text></g><g><title>process_backlog (1 samples, 0.10%)</title><rect x="65.3125%" y="421" width="0.1042%" height="15" fill="rgb(214,17,3)"/><text x="65.5625%" y="431.50"></text></g><g><title>__netif_receive_skb_one_core (1 samples, 0.10%)</title><rect x="65.3125%" y="405" width="0.1042%" height="15" fill="rgb(212,111,17)"/><text x="65.5625%" y="415.50"></text></g><g><title>ip_rcv (1 samples, 0.10%)</title><rect x="65.3125%" y="389" width="0.1042%" height="15" fill="rgb(221,157,24)"/><text x="65.5625%" y="399.50"></text></g><g><title>ip_local_deliver (1 samples, 0.10%)</title><rect x="65.3125%" y="373" width="0.1042%" height="15" fill="rgb(252,16,13)"/><text x="65.5625%" y="383.50"></text></g><g><title>ip_local_deliver_finish (1 samples, 0.10%)</title><rect x="65.3125%" y="357" width="0.1042%" height="15" fill="rgb(221,62,2)"/><text x="65.5625%" y="367.50"></text></g><g><title>ip_protocol_deliver_rcu (1 samples, 0.10%)</title><rect x="65.3125%" y="341" width="0.1042%" height="15" fill="rgb(247,87,22)"/><text x="65.5625%" y="351.50"></text></g><g><title>tcp_v4_rcv (1 samples, 0.10%)</title><rect x="65.3125%" y="325" width="0.1042%" height="15" fill="rgb(215,73,9)"/><text x="65.5625%" y="335.50"></text></g><g><title>release_sock (1 samples, 0.10%)</title><rect x="65.5208%" y="549" width="0.1042%" height="15" fill="rgb(207,175,33)"/><text x="65.7708%" y="559.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.10%)</title><rect x="65.5208%" y="533" width="0.1042%" height="15" fill="rgb(243,129,54)"/><text x="65.7708%" y="543.50"></text></g><g><title>preempt_count_add (1 samples, 0.10%)</title><rect x="65.5208%" y="517" width="0.1042%" height="15" fill="rgb(227,119,45)"/><text x="65.7708%" y="527.50"></text></g><g><title>remove_wait_queue (1 samples, 0.10%)</title><rect x="65.6250%" y="549" width="0.1042%" height="15" fill="rgb(205,109,36)"/><text x="65.8750%" y="559.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.10%)</title><rect x="65.6250%" y="533" width="0.1042%" height="15" fill="rgb(205,6,39)"/><text x="65.8750%" y="543.50"></text></g><g><title>update_curr (1 samples, 0.10%)</title><rect x="65.9375%" y="453" width="0.1042%" height="15" fill="rgb(221,32,16)"/><text x="66.1875%" y="463.50"></text></g><g><title>cpuacct_charge (1 samples, 0.10%)</title><rect x="65.9375%" y="437" width="0.1042%" height="15" fill="rgb(228,144,50)"/><text x="66.1875%" y="447.50"></text></g><g><title>dequeue_task_fair (3 samples, 0.31%)</title><rect x="65.8333%" y="485" width="0.3125%" height="15" fill="rgb(229,201,53)"/><text x="66.0833%" y="495.50"></text></g><g><title>dequeue_entity (3 samples, 0.31%)</title><rect x="65.8333%" y="469" width="0.3125%" height="15" fill="rgb(249,153,27)"/><text x="66.0833%" y="479.50"></text></g><g><title>update_load_avg (1 samples, 0.10%)</title><rect x="66.0417%" y="453" width="0.1042%" height="15" fill="rgb(227,106,25)"/><text x="66.2917%" y="463.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.10%)</title><rect x="66.0417%" y="437" width="0.1042%" height="15" fill="rgb(230,65,29)"/><text x="66.2917%" y="447.50"></text></g><g><title>__perf_event_task_sched_in (1 samples, 0.10%)</title><rect x="66.1458%" y="469" width="0.1042%" height="15" fill="rgb(221,57,46)"/><text x="66.3958%" y="479.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (1 samples, 0.10%)</title><rect x="66.1458%" y="453" width="0.1042%" height="15" fill="rgb(229,161,17)"/><text x="66.3958%" y="463.50"></text></g><g><title>native_write_msr (1 samples, 0.10%)</title><rect x="66.1458%" y="437" width="0.1042%" height="15" fill="rgb(222,213,11)"/><text x="66.3958%" y="447.50"></text></g><g><title>finish_task_switch (2 samples, 0.21%)</title><rect x="66.1458%" y="485" width="0.2083%" height="15" fill="rgb(235,35,13)"/><text x="66.3958%" y="495.50"></text></g><g><title>_raw_spin_unlock_irq (1 samples, 0.10%)</title><rect x="66.2500%" y="469" width="0.1042%" height="15" fill="rgb(233,158,34)"/><text x="66.5000%" y="479.50"></text></g><g><title>preempt_count_sub (1 samples, 0.10%)</title><rect x="66.2500%" y="453" width="0.1042%" height="15" fill="rgb(215,151,48)"/><text x="66.5000%" y="463.50"></text></g><g><title>__x64_sys_recvfrom (18 samples, 1.88%)</title><rect x="64.8958%" y="629" width="1.8750%" height="15" fill="rgb(229,84,14)"/><text x="65.1458%" y="639.50">_..</text></g><g><title>__sys_recvfrom (18 samples, 1.88%)</title><rect x="64.8958%" y="613" width="1.8750%" height="15" fill="rgb(229,68,14)"/><text x="65.1458%" y="623.50">_..</text></g><g><title>inet_recvmsg (18 samples, 1.88%)</title><rect x="64.8958%" y="597" width="1.8750%" height="15" fill="rgb(243,106,26)"/><text x="65.1458%" y="607.50">i..</text></g><g><title>tcp_recvmsg (18 samples, 1.88%)</title><rect x="64.8958%" y="581" width="1.8750%" height="15" fill="rgb(206,45,38)"/><text x="65.1458%" y="591.50">t..</text></g><g><title>sk_wait_data (13 samples, 1.35%)</title><rect x="65.4167%" y="565" width="1.3542%" height="15" fill="rgb(226,6,15)"/><text x="65.6667%" y="575.50"></text></g><g><title>wait_woken (10 samples, 1.04%)</title><rect x="65.7292%" y="549" width="1.0417%" height="15" fill="rgb(232,22,54)"/><text x="65.9792%" y="559.50"></text></g><g><title>schedule_timeout (10 samples, 1.04%)</title><rect x="65.7292%" y="533" width="1.0417%" height="15" fill="rgb(229,222,32)"/><text x="65.9792%" y="543.50"></text></g><g><title>schedule (10 samples, 1.04%)</title><rect x="65.7292%" y="517" width="1.0417%" height="15" fill="rgb(228,62,29)"/><text x="65.9792%" y="527.50"></text></g><g><title>__schedule (10 samples, 1.04%)</title><rect x="65.7292%" y="501" width="1.0417%" height="15" fill="rgb(251,103,34)"/><text x="65.9792%" y="511.50"></text></g><g><title>psi_task_change (4 samples, 0.42%)</title><rect x="66.3542%" y="485" width="0.4167%" height="15" fill="rgb(233,12,30)"/><text x="66.6042%" y="495.50"></text></g><g><title>psi_group_change (4 samples, 0.42%)</title><rect x="66.3542%" y="469" width="0.4167%" height="15" fill="rgb(238,52,0)"/><text x="66.6042%" y="479.50"></text></g><g><title>do_syscall_64 (19 samples, 1.98%)</title><rect x="64.8958%" y="645" width="1.9792%" height="15" fill="rgb(223,98,5)"/><text x="65.1458%" y="655.50">d..</text></g><g><title>syscall_slow_exit_work (1 samples, 0.10%)</title><rect x="66.7708%" y="629" width="0.1042%" height="15" fill="rgb(228,75,37)"/><text x="67.0208%" y="639.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.10%)</title><rect x="66.7708%" y="613" width="0.1042%" height="15" fill="rgb(205,115,49)"/><text x="67.0208%" y="623.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (22 samples, 2.29%)</title><rect x="64.7917%" y="757" width="2.2917%" height="15" fill="rgb(250,154,43)"/><text x="65.0417%" y="767.50">&lt;..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (22 samples, 2.29%)</title><rect x="64.7917%" y="741" width="2.2917%" height="15" fill="rgb(226,43,29)"/><text x="65.0417%" y="751.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::read (22 samples, 2.29%)</title><rect x="64.7917%" y="725" width="2.2917%" height="15" fill="rgb(249,228,39)"/><text x="65.0417%" y="735.50">s..</text></g><g><title>std::sys::unix::net::Socket::read (22 samples, 2.29%)</title><rect x="64.7917%" y="709" width="2.2917%" height="15" fill="rgb(216,79,43)"/><text x="65.0417%" y="719.50">s..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (22 samples, 2.29%)</title><rect x="64.7917%" y="693" width="2.2917%" height="15" fill="rgb(228,95,12)"/><text x="65.0417%" y="703.50">s..</text></g><g><title>__libc_recv (22 samples, 2.29%)</title><rect x="64.7917%" y="677" width="2.2917%" height="15" fill="rgb(249,221,15)"/><text x="65.0417%" y="687.50">_..</text></g><g><title>entry_SYSCALL_64 (21 samples, 2.19%)</title><rect x="64.8958%" y="661" width="2.1875%" height="15" fill="rgb(233,34,13)"/><text x="65.1458%" y="671.50">e..</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.21%)</title><rect x="66.8750%" y="645" width="0.2083%" height="15" fill="rgb(214,103,39)"/><text x="67.1250%" y="655.50"></text></g><g><title>msql_srv::packet::PacketReader&lt;R&gt;::next (23 samples, 2.40%)</title><rect x="64.7917%" y="773" width="2.3958%" height="15" fill="rgb(251,126,39)"/><text x="65.0417%" y="783.50">ms..</text></g><g><title>__memset_avx2_erms (1 samples, 0.10%)</title><rect x="67.0833%" y="757" width="0.1042%" height="15" fill="rgb(214,216,36)"/><text x="67.3333%" y="767.50"></text></g><g><title>msql_srv::packet::PacketWriter&lt;W&gt;::maybe_end_packet (1 samples, 0.10%)</title><rect x="67.1875%" y="773" width="0.1042%" height="15" fill="rgb(220,221,8)"/><text x="67.4375%" y="783.50"></text></g><g><title>__ip_finish_output (1 samples, 0.10%)</title><rect x="67.8125%" y="517" width="0.1042%" height="15" fill="rgb(240,216,3)"/><text x="68.0625%" y="527.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.10%)</title><rect x="68.0208%" y="485" width="0.1042%" height="15" fill="rgb(232,218,17)"/><text x="68.2708%" y="495.50"></text></g><g><title>preempt_count_sub (1 samples, 0.10%)</title><rect x="68.0208%" y="469" width="0.1042%" height="15" fill="rgb(229,163,45)"/><text x="68.2708%" y="479.50"></text></g><g><title>__dev_queue_xmit (3 samples, 0.31%)</title><rect x="68.0208%" y="501" width="0.3125%" height="15" fill="rgb(231,110,42)"/><text x="68.2708%" y="511.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.21%)</title><rect x="68.1250%" y="485" width="0.2083%" height="15" fill="rgb(208,170,48)"/><text x="68.3750%" y="495.50"></text></g><g><title>loopback_xmit (1 samples, 0.10%)</title><rect x="68.2292%" y="469" width="0.1042%" height="15" fill="rgb(239,116,25)"/><text x="68.4792%" y="479.50"></text></g><g><title>netif_rx (1 samples, 0.10%)</title><rect x="68.2292%" y="453" width="0.1042%" height="15" fill="rgb(219,200,50)"/><text x="68.4792%" y="463.50"></text></g><g><title>netif_rx_internal (1 samples, 0.10%)</title><rect x="68.2292%" y="437" width="0.1042%" height="15" fill="rgb(245,200,0)"/><text x="68.4792%" y="447.50"></text></g><g><title>enqueue_to_backlog (1 samples, 0.10%)</title><rect x="68.2292%" y="421" width="0.1042%" height="15" fill="rgb(245,119,33)"/><text x="68.4792%" y="431.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.10%)</title><rect x="68.2292%" y="405" width="0.1042%" height="15" fill="rgb(231,125,12)"/><text x="68.4792%" y="415.50"></text></g><g><title>preempt_count_sub (1 samples, 0.10%)</title><rect x="68.2292%" y="389" width="0.1042%" height="15" fill="rgb(216,96,41)"/><text x="68.4792%" y="399.50"></text></g><g><title>irqtime_account_irq (2 samples, 0.21%)</title><rect x="68.3333%" y="437" width="0.2083%" height="15" fill="rgb(248,43,45)"/><text x="68.5833%" y="447.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.10%)</title><rect x="68.4375%" y="421" width="0.1042%" height="15" fill="rgb(217,222,7)"/><text x="68.6875%" y="431.50"></text></g><g><title>sk_reset_timer (1 samples, 0.10%)</title><rect x="68.5417%" y="277" width="0.1042%" height="15" fill="rgb(233,28,6)"/><text x="68.7917%" y="287.50"></text></g><g><title>enqueue_task (3 samples, 0.31%)</title><rect x="68.6458%" y="213" width="0.3125%" height="15" fill="rgb(231,218,15)"/><text x="68.8958%" y="223.50"></text></g><g><title>psi_task_change (3 samples, 0.31%)</title><rect x="68.6458%" y="197" width="0.3125%" height="15" fill="rgb(226,171,48)"/><text x="68.8958%" y="207.50"></text></g><g><title>psi_group_change (3 samples, 0.31%)</title><rect x="68.6458%" y="181" width="0.3125%" height="15" fill="rgb(235,201,9)"/><text x="68.8958%" y="191.50"></text></g><g><title>enqueue_task_fair (2 samples, 0.21%)</title><rect x="68.9583%" y="213" width="0.2083%" height="15" fill="rgb(217,80,15)"/><text x="69.2083%" y="223.50"></text></g><g><title>enqueue_entity (2 samples, 0.21%)</title><rect x="68.9583%" y="197" width="0.2083%" height="15" fill="rgb(219,152,8)"/><text x="69.2083%" y="207.50"></text></g><g><title>update_load_avg (2 samples, 0.21%)</title><rect x="68.9583%" y="181" width="0.2083%" height="15" fill="rgb(243,107,38)"/><text x="69.2083%" y="191.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.10%)</title><rect x="69.0625%" y="165" width="0.1042%" height="15" fill="rgb(231,17,5)"/><text x="69.3125%" y="175.50"></text></g><g><title>__wake_up_common (6 samples, 0.62%)</title><rect x="68.6458%" y="245" width="0.6250%" height="15" fill="rgb(209,25,54)"/><text x="68.8958%" y="255.50"></text></g><g><title>try_to_wake_up (6 samples, 0.62%)</title><rect x="68.6458%" y="229" width="0.6250%" height="15" fill="rgb(219,0,2)"/><text x="68.8958%" y="239.50"></text></g><g><title>update_rq_clock (1 samples, 0.10%)</title><rect x="69.1667%" y="213" width="0.1042%" height="15" fill="rgb(246,9,5)"/><text x="69.4167%" y="223.50"></text></g><g><title>sock_def_readable (7 samples, 0.73%)</title><rect x="68.6458%" y="277" width="0.7292%" height="15" fill="rgb(226,159,4)"/><text x="68.8958%" y="287.50"></text></g><g><title>__wake_up_common_lock (7 samples, 0.73%)</title><rect x="68.6458%" y="261" width="0.7292%" height="15" fill="rgb(219,175,34)"/><text x="68.8958%" y="271.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.10%)</title><rect x="69.2708%" y="245" width="0.1042%" height="15" fill="rgb(236,10,46)"/><text x="69.5208%" y="255.50"></text></g><g><title>tcp_ack (2 samples, 0.21%)</title><rect x="69.3750%" y="277" width="0.2083%" height="15" fill="rgb(240,211,16)"/><text x="69.6250%" y="287.50"></text></g><g><title>__kfree_skb (1 samples, 0.10%)</title><rect x="69.4792%" y="261" width="0.1042%" height="15" fill="rgb(205,3,43)"/><text x="69.7292%" y="271.50"></text></g><g><title>skb_release_data (1 samples, 0.10%)</title><rect x="69.4792%" y="245" width="0.1042%" height="15" fill="rgb(245,7,22)"/><text x="69.7292%" y="255.50"></text></g><g><title>ip_local_deliver (11 samples, 1.15%)</title><rect x="68.5417%" y="373" width="1.1458%" height="15" fill="rgb(239,132,32)"/><text x="68.7917%" y="383.50"></text></g><g><title>ip_local_deliver_finish (11 samples, 1.15%)</title><rect x="68.5417%" y="357" width="1.1458%" height="15" fill="rgb(228,202,34)"/><text x="68.7917%" y="367.50"></text></g><g><title>ip_protocol_deliver_rcu (11 samples, 1.15%)</title><rect x="68.5417%" y="341" width="1.1458%" height="15" fill="rgb(254,200,22)"/><text x="68.7917%" y="351.50"></text></g><g><title>tcp_v4_rcv (11 samples, 1.15%)</title><rect x="68.5417%" y="325" width="1.1458%" height="15" fill="rgb(219,10,39)"/><text x="68.7917%" y="335.50"></text></g><g><title>tcp_v4_do_rcv (11 samples, 1.15%)</title><rect x="68.5417%" y="309" width="1.1458%" height="15" fill="rgb(226,210,39)"/><text x="68.7917%" y="319.50"></text></g><g><title>tcp_rcv_established (11 samples, 1.15%)</title><rect x="68.5417%" y="293" width="1.1458%" height="15" fill="rgb(208,219,16)"/><text x="68.7917%" y="303.50"></text></g><g><title>tcp_event_data_recv (1 samples, 0.10%)</title><rect x="69.5833%" y="277" width="0.1042%" height="15" fill="rgb(216,158,51)"/><text x="69.8333%" y="287.50"></text></g><g><title>__local_bh_enable_ip (14 samples, 1.46%)</title><rect x="68.3333%" y="501" width="1.4583%" height="15" fill="rgb(233,14,44)"/><text x="68.5833%" y="511.50"></text></g><g><title>do_softirq (14 samples, 1.46%)</title><rect x="68.3333%" y="485" width="1.4583%" height="15" fill="rgb(237,97,39)"/><text x="68.5833%" y="495.50"></text></g><g><title>do_softirq_own_stack (14 samples, 1.46%)</title><rect x="68.3333%" y="469" width="1.4583%" height="15" fill="rgb(218,198,43)"/><text x="68.5833%" y="479.50"></text></g><g><title>__do_softirq (14 samples, 1.46%)</title><rect x="68.3333%" y="453" width="1.4583%" height="15" fill="rgb(231,104,20)"/><text x="68.5833%" y="463.50"></text></g><g><title>net_rx_action (12 samples, 1.25%)</title><rect x="68.5417%" y="437" width="1.2500%" height="15" fill="rgb(254,36,13)"/><text x="68.7917%" y="447.50"></text></g><g><title>process_backlog (12 samples, 1.25%)</title><rect x="68.5417%" y="421" width="1.2500%" height="15" fill="rgb(248,14,50)"/><text x="68.7917%" y="431.50"></text></g><g><title>__netif_receive_skb_one_core (12 samples, 1.25%)</title><rect x="68.5417%" y="405" width="1.2500%" height="15" fill="rgb(217,107,29)"/><text x="68.7917%" y="415.50"></text></g><g><title>ip_rcv (12 samples, 1.25%)</title><rect x="68.5417%" y="389" width="1.2500%" height="15" fill="rgb(251,169,33)"/><text x="68.7917%" y="399.50"></text></g><g><title>ip_rcv_core (1 samples, 0.10%)</title><rect x="69.6875%" y="373" width="0.1042%" height="15" fill="rgb(217,108,32)"/><text x="69.9375%" y="383.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.10%)</title><rect x="69.6875%" y="357" width="0.1042%" height="15" fill="rgb(219,66,42)"/><text x="69.9375%" y="367.50"></text></g><g><title>__tcp_transmit_skb (21 samples, 2.19%)</title><rect x="67.7083%" y="565" width="2.1875%" height="15" fill="rgb(206,180,7)"/><text x="67.9583%" y="575.50">_..</text></g><g><title>__ip_queue_xmit (20 samples, 2.08%)</title><rect x="67.8125%" y="549" width="2.0833%" height="15" fill="rgb(208,226,31)"/><text x="68.0625%" y="559.50">_..</text></g><g><title>ip_output (20 samples, 2.08%)</title><rect x="67.8125%" y="533" width="2.0833%" height="15" fill="rgb(218,26,49)"/><text x="68.0625%" y="543.50">i..</text></g><g><title>ip_finish_output2 (19 samples, 1.98%)</title><rect x="67.9167%" y="517" width="1.9792%" height="15" fill="rgb(233,197,48)"/><text x="68.1667%" y="527.50">i..</text></g><g><title>preempt_count_add (1 samples, 0.10%)</title><rect x="69.7917%" y="501" width="0.1042%" height="15" fill="rgb(252,181,51)"/><text x="70.0417%" y="511.50"></text></g><g><title>ktime_get (1 samples, 0.10%)</title><rect x="69.8958%" y="565" width="0.1042%" height="15" fill="rgb(253,90,19)"/><text x="70.1458%" y="575.50"></text></g><g><title>__tcp_push_pending_frames (25 samples, 2.60%)</title><rect x="67.6042%" y="597" width="2.6042%" height="15" fill="rgb(215,171,30)"/><text x="67.8542%" y="607.50">__..</text></g><g><title>tcp_write_xmit (25 samples, 2.60%)</title><rect x="67.6042%" y="581" width="2.6042%" height="15" fill="rgb(214,222,9)"/><text x="67.8542%" y="591.50">tc..</text></g><g><title>tcp_schedule_loss_probe.part.0 (2 samples, 0.21%)</title><rect x="70.0000%" y="565" width="0.2083%" height="15" fill="rgb(223,3,22)"/><text x="70.2500%" y="575.50"></text></g><g><title>jiffies_to_usecs (1 samples, 0.10%)</title><rect x="70.1042%" y="549" width="0.1042%" height="15" fill="rgb(225,196,46)"/><text x="70.3542%" y="559.50"></text></g><g><title>__alloc_skb (3 samples, 0.31%)</title><rect x="70.2083%" y="581" width="0.3125%" height="15" fill="rgb(209,110,37)"/><text x="70.4583%" y="591.50"></text></g><g><title>__kmalloc_node_track_caller (1 samples, 0.10%)</title><rect x="70.4167%" y="565" width="0.1042%" height="15" fill="rgb(249,89,12)"/><text x="70.6667%" y="575.50"></text></g><g><title>sk_stream_alloc_skb (4 samples, 0.42%)</title><rect x="70.2083%" y="597" width="0.4167%" height="15" fill="rgb(226,27,33)"/><text x="70.4583%" y="607.50"></text></g><g><title>sk_forced_mem_schedule (1 samples, 0.10%)</title><rect x="70.5208%" y="581" width="0.1042%" height="15" fill="rgb(213,82,22)"/><text x="70.7708%" y="591.50"></text></g><g><title>__x64_sys_sendto (31 samples, 3.23%)</title><rect x="67.5000%" y="677" width="3.2292%" height="15" fill="rgb(248,140,0)"/><text x="67.7500%" y="687.50">__x..</text></g><g><title>__sys_sendto (31 samples, 3.23%)</title><rect x="67.5000%" y="661" width="3.2292%" height="15" fill="rgb(228,106,3)"/><text x="67.7500%" y="671.50">__s..</text></g><g><title>sock_sendmsg (31 samples, 3.23%)</title><rect x="67.5000%" y="645" width="3.2292%" height="15" fill="rgb(209,23,37)"/><text x="67.7500%" y="655.50">soc..</text></g><g><title>tcp_sendmsg (30 samples, 3.12%)</title><rect x="67.6042%" y="629" width="3.1250%" height="15" fill="rgb(241,93,50)"/><text x="67.8542%" y="639.50">tcp..</text></g><g><title>tcp_sendmsg_locked (30 samples, 3.12%)</title><rect x="67.6042%" y="613" width="3.1250%" height="15" fill="rgb(253,46,43)"/><text x="67.8542%" y="623.50">tcp..</text></g><g><title>tcp_send_mss (1 samples, 0.10%)</title><rect x="70.6250%" y="597" width="0.1042%" height="15" fill="rgb(226,206,43)"/><text x="70.8750%" y="607.50"></text></g><g><title>tcp_current_mss (1 samples, 0.10%)</title><rect x="70.6250%" y="581" width="0.1042%" height="15" fill="rgb(217,54,7)"/><text x="70.8750%" y="591.50"></text></g><g><title>ipv4_mtu (1 samples, 0.10%)</title><rect x="70.6250%" y="565" width="0.1042%" height="15" fill="rgb(223,5,52)"/><text x="70.8750%" y="575.50"></text></g><g><title>syscall_slow_exit_work (1 samples, 0.10%)</title><rect x="70.7292%" y="677" width="0.1042%" height="15" fill="rgb(206,52,46)"/><text x="70.9792%" y="687.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.10%)</title><rect x="70.7292%" y="661" width="0.1042%" height="15" fill="rgb(253,136,11)"/><text x="70.9792%" y="671.50"></text></g><g><title>do_syscall_64 (34 samples, 3.54%)</title><rect x="67.3958%" y="693" width="3.5417%" height="15" fill="rgb(208,106,33)"/><text x="67.6458%" y="703.50">do_s..</text></g><g><title>syscall_trace_enter (1 samples, 0.10%)</title><rect x="70.8333%" y="677" width="0.1042%" height="15" fill="rgb(206,54,4)"/><text x="71.0833%" y="687.50"></text></g><g><title>ktime_get_coarse_real_ts64 (1 samples, 0.10%)</title><rect x="70.8333%" y="661" width="0.1042%" height="15" fill="rgb(213,3,15)"/><text x="71.0833%" y="671.50"></text></g><g><title>decor::Shim::run_on_tcp (151 samples, 15.73%)</title><rect x="55.5208%" y="805" width="15.7292%" height="15" fill="rgb(252,211,39)"/><text x="55.7708%" y="815.50">decor::Shim::run_on_tcp</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (151 samples, 15.73%)</title><rect x="55.5208%" y="789" width="15.7292%" height="15" fill="rgb(223,6,36)"/><text x="55.7708%" y="799.50">msql_srv::MysqlIntermedi..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (38 samples, 3.96%)</title><rect x="67.2917%" y="773" width="3.9583%" height="15" fill="rgb(252,169,45)"/><text x="67.5417%" y="783.50">std:..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (38 samples, 3.96%)</title><rect x="67.2917%" y="757" width="3.9583%" height="15" fill="rgb(212,48,26)"/><text x="67.5417%" y="767.50">&lt;std..</text></g><g><title>std::sys_common::net::TcpStream::write (38 samples, 3.96%)</title><rect x="67.2917%" y="741" width="3.9583%" height="15" fill="rgb(251,102,48)"/><text x="67.5417%" y="751.50">std:..</text></g><g><title>__libc_send (38 samples, 3.96%)</title><rect x="67.2917%" y="725" width="3.9583%" height="15" fill="rgb(243,208,16)"/><text x="67.5417%" y="735.50">__li..</text></g><g><title>entry_SYSCALL_64 (37 samples, 3.85%)</title><rect x="67.3958%" y="709" width="3.8542%" height="15" fill="rgb(219,96,24)"/><text x="67.6458%" y="719.50">entr..</text></g><g><title>prepare_exit_to_usermode (3 samples, 0.31%)</title><rect x="70.9375%" y="693" width="0.3125%" height="15" fill="rgb(219,33,29)"/><text x="71.1875%" y="703.50"></text></g><g><title>__GI___clone (153 samples, 15.94%)</title><rect x="55.4167%" y="917" width="15.9375%" height="15" fill="rgb(223,176,5)"/><text x="55.6667%" y="927.50">__GI___clone</text></g><g><title>start_thread (153 samples, 15.94%)</title><rect x="55.4167%" y="901" width="15.9375%" height="15" fill="rgb(228,140,14)"/><text x="55.6667%" y="911.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (153 samples, 15.94%)</title><rect x="55.4167%" y="885" width="15.9375%" height="15" fill="rgb(217,179,31)"/><text x="55.6667%" y="895.50">std::sys::unix::thread::T..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (153 samples, 15.94%)</title><rect x="55.4167%" y="869" width="15.9375%" height="15" fill="rgb(230,9,30)"/><text x="55.6667%" y="879.50">&lt;alloc::boxed::Box&lt;F&gt; as ..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (153 samples, 15.94%)</title><rect x="55.4167%" y="853" width="15.9375%" height="15" fill="rgb(230,136,20)"/><text x="55.6667%" y="863.50">&lt;alloc::boxed::Box&lt;F&gt; as ..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (153 samples, 15.94%)</title><rect x="55.4167%" y="837" width="15.9375%" height="15" fill="rgb(215,210,22)"/><text x="55.6667%" y="847.50">core::ops::function::FnOn..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (153 samples, 15.94%)</title><rect x="55.4167%" y="821" width="15.9375%" height="15" fill="rgb(218,43,5)"/><text x="55.6667%" y="831.50">std::sys_common::backtrac..</text></g><g><title>mysql::conn::Conn::new (1 samples, 0.10%)</title><rect x="71.2500%" y="805" width="0.1042%" height="15" fill="rgb(216,11,5)"/><text x="71.5000%" y="815.50"></text></g><g><title>mysql::conn::Conn::connect_stream (1 samples, 0.10%)</title><rect x="71.2500%" y="789" width="0.1042%" height="15" fill="rgb(209,82,29)"/><text x="71.5000%" y="799.50"></text></g><g><title>mysql::io::Stream::connect_tcp (1 samples, 0.10%)</title><rect x="71.2500%" y="773" width="0.1042%" height="15" fill="rgb(244,115,12)"/><text x="71.5000%" y="783.50"></text></g><g><title>net2::tcp::TcpBuilder::new_v4 (1 samples, 0.10%)</title><rect x="71.2500%" y="757" width="0.1042%" height="15" fill="rgb(222,82,18)"/><text x="71.5000%" y="767.50"></text></g><g><title>net2::sys::Socket::new (1 samples, 0.10%)</title><rect x="71.2500%" y="741" width="0.1042%" height="15" fill="rgb(249,227,8)"/><text x="71.5000%" y="751.50"></text></g><g><title>__GI___socket (1 samples, 0.10%)</title><rect x="71.2500%" y="725" width="0.1042%" height="15" fill="rgb(253,141,45)"/><text x="71.5000%" y="735.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.10%)</title><rect x="71.2500%" y="709" width="0.1042%" height="15" fill="rgb(234,184,4)"/><text x="71.5000%" y="719.50"></text></g><g><title>do_syscall_64 (1 samples, 0.10%)</title><rect x="71.2500%" y="693" width="0.1042%" height="15" fill="rgb(218,194,23)"/><text x="71.5000%" y="703.50"></text></g><g><title>__x64_sys_socket (1 samples, 0.10%)</title><rect x="71.2500%" y="677" width="0.1042%" height="15" fill="rgb(235,66,41)"/><text x="71.5000%" y="687.50"></text></g><g><title>__sys_socket (1 samples, 0.10%)</title><rect x="71.2500%" y="661" width="0.1042%" height="15" fill="rgb(245,217,1)"/><text x="71.5000%" y="671.50"></text></g><g><title>__sock_create (1 samples, 0.10%)</title><rect x="71.2500%" y="645" width="0.1042%" height="15" fill="rgb(229,91,1)"/><text x="71.5000%" y="655.50"></text></g><g><title>inet_create (1 samples, 0.10%)</title><rect x="71.2500%" y="629" width="0.1042%" height="15" fill="rgb(207,101,30)"/><text x="71.5000%" y="639.50"></text></g><g><title>tcp_v4_init_sock (1 samples, 0.10%)</title><rect x="71.2500%" y="613" width="0.1042%" height="15" fill="rgb(223,82,49)"/><text x="71.5000%" y="623.50"></text></g><g><title>tcp_init_sock (1 samples, 0.10%)</title><rect x="71.2500%" y="597" width="0.1042%" height="15" fill="rgb(218,167,17)"/><text x="71.5000%" y="607.50"></text></g><g><title>tcp_init_xmit_timers (1 samples, 0.10%)</title><rect x="71.2500%" y="581" width="0.1042%" height="15" fill="rgb(208,103,14)"/><text x="71.5000%" y="591.50"></text></g><g><title>__hrtimer_init (1 samples, 0.10%)</title><rect x="71.2500%" y="565" width="0.1042%" height="15" fill="rgb(238,20,8)"/><text x="71.5000%" y="575.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.10%)</title><rect x="71.3542%" y="725" width="0.1042%" height="15" fill="rgb(218,80,54)"/><text x="71.6042%" y="735.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (1 samples, 0.10%)</title><rect x="71.4583%" y="693" width="0.1042%" height="15" fill="rgb(240,144,17)"/><text x="71.7083%" y="703.50"></text></g><g><title>alloc::fmt::format (3 samples, 0.31%)</title><rect x="71.3542%" y="741" width="0.3125%" height="15" fill="rgb(245,27,50)"/><text x="71.6042%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.21%)</title><rect x="71.4583%" y="725" width="0.2083%" height="15" fill="rgb(251,51,7)"/><text x="71.7083%" y="735.50"></text></g><g><title>core::fmt::write (2 samples, 0.21%)</title><rect x="71.4583%" y="709" width="0.2083%" height="15" fill="rgb(245,217,29)"/><text x="71.7083%" y="719.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.10%)</title><rect x="71.5625%" y="693" width="0.1042%" height="15" fill="rgb(221,176,29)"/><text x="71.8125%" y="703.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.10%)</title><rect x="71.5625%" y="677" width="0.1042%" height="15" fill="rgb(212,180,24)"/><text x="71.8125%" y="687.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.10%)</title><rect x="71.6667%" y="741" width="0.1042%" height="15" fill="rgb(254,24,2)"/><text x="71.9167%" y="751.50"></text></g><g><title>hwloc_topology_destroy (1 samples, 0.10%)</title><rect x="71.6667%" y="725" width="0.1042%" height="15" fill="rgb(230,100,2)"/><text x="71.9167%" y="735.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.10%)</title><rect x="71.6667%" y="709" width="0.1042%" height="15" fill="rgb(219,142,25)"/><text x="71.9167%" y="719.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.10%)</title><rect x="71.6667%" y="693" width="0.1042%" height="15" fill="rgb(240,73,43)"/><text x="71.9167%" y="703.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.10%)</title><rect x="71.6667%" y="677" width="0.1042%" height="15" fill="rgb(214,114,15)"/><text x="71.9167%" y="687.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.10%)</title><rect x="71.6667%" y="661" width="0.1042%" height="15" fill="rgb(207,130,4)"/><text x="71.9167%" y="671.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.10%)</title><rect x="71.6667%" y="645" width="0.1042%" height="15" fill="rgb(221,25,40)"/><text x="71.9167%" y="655.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.10%)</title><rect x="71.6667%" y="629" width="0.1042%" height="15" fill="rgb(241,184,7)"/><text x="71.9167%" y="639.50"></text></g><g><title>__GI___libc_free (1 samples, 0.10%)</title><rect x="71.6667%" y="613" width="0.1042%" height="15" fill="rgb(235,159,4)"/><text x="71.9167%" y="623.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.10%)</title><rect x="71.8750%" y="661" width="0.1042%" height="15" fill="rgb(214,87,48)"/><text x="72.1250%" y="671.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (230 samples, 23.96%)</title><rect x="72.2917%" y="437" width="23.9583%" height="15" fill="rgb(246,198,24)"/><text x="72.5417%" y="447.50">__intel_pmu_enable_all.constprop.0</text></g><g><title>native_write_msr (230 samples, 23.96%)</title><rect x="72.2917%" y="421" width="23.9583%" height="15" fill="rgb(209,66,40)"/><text x="72.5417%" y="431.50">native_write_msr</text></g><g><title>do_syscall_64 (234 samples, 24.38%)</title><rect x="72.1875%" y="613" width="24.3750%" height="15" fill="rgb(233,147,39)"/><text x="72.4375%" y="623.50">do_syscall_64</text></g><g><title>__x64_sys_sched_setaffinity (234 samples, 24.38%)</title><rect x="72.1875%" y="597" width="24.3750%" height="15" fill="rgb(231,145,52)"/><text x="72.4375%" y="607.50">__x64_sys_sched_setaffinity</text></g><g><title>sched_setaffinity (234 samples, 24.38%)</title><rect x="72.1875%" y="581" width="24.3750%" height="15" fill="rgb(206,20,26)"/><text x="72.4375%" y="591.50">sched_setaffinity</text></g><g><title>__set_cpus_allowed_ptr (234 samples, 24.38%)</title><rect x="72.1875%" y="565" width="24.3750%" height="15" fill="rgb(238,220,4)"/><text x="72.4375%" y="575.50">__set_cpus_allowed_ptr</text></g><g><title>stop_one_cpu (234 samples, 24.38%)</title><rect x="72.1875%" y="549" width="24.3750%" height="15" fill="rgb(252,195,42)"/><text x="72.4375%" y="559.50">stop_one_cpu</text></g><g><title>cpu_stop_queue_work (234 samples, 24.38%)</title><rect x="72.1875%" y="533" width="24.3750%" height="15" fill="rgb(209,10,6)"/><text x="72.4375%" y="543.50">cpu_stop_queue_work</text></g><g><title>preempt_schedule_thunk (234 samples, 24.38%)</title><rect x="72.1875%" y="517" width="24.3750%" height="15" fill="rgb(229,3,52)"/><text x="72.4375%" y="527.50">preempt_schedule_thunk</text></g><g><title>preempt_schedule_common (234 samples, 24.38%)</title><rect x="72.1875%" y="501" width="24.3750%" height="15" fill="rgb(253,49,37)"/><text x="72.4375%" y="511.50">preempt_schedule_common</text></g><g><title>__schedule (234 samples, 24.38%)</title><rect x="72.1875%" y="485" width="24.3750%" height="15" fill="rgb(240,103,49)"/><text x="72.4375%" y="495.50">__schedule</text></g><g><title>finish_task_switch (234 samples, 24.38%)</title><rect x="72.1875%" y="469" width="24.3750%" height="15" fill="rgb(250,182,30)"/><text x="72.4375%" y="479.50">finish_task_switch</text></g><g><title>__perf_event_task_sched_in (234 samples, 24.38%)</title><rect x="72.1875%" y="453" width="24.3750%" height="15" fill="rgb(248,8,30)"/><text x="72.4375%" y="463.50">__perf_event_task_sched_in</text></g><g><title>_raw_spin_unlock (3 samples, 0.31%)</title><rect x="96.2500%" y="437" width="0.3125%" height="15" fill="rgb(237,120,30)"/><text x="96.5000%" y="447.50"></text></g><g><title>preempt_count_sub (1 samples, 0.10%)</title><rect x="96.4583%" y="421" width="0.1042%" height="15" fill="rgb(221,146,34)"/><text x="96.7083%" y="431.50"></text></g><g><title>__GI___sched_setaffinity_new (238 samples, 24.79%)</title><rect x="71.9792%" y="645" width="24.7917%" height="15" fill="rgb(242,55,13)"/><text x="72.2292%" y="655.50">__GI___sched_setaffinity_new</text></g><g><title>entry_SYSCALL_64 (236 samples, 24.58%)</title><rect x="72.1875%" y="629" width="24.5833%" height="15" fill="rgb(242,112,31)"/><text x="72.4375%" y="639.50">entry_SYSCALL_64</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.21%)</title><rect x="96.5625%" y="613" width="0.2083%" height="15" fill="rgb(249,192,27)"/><text x="96.8125%" y="623.50"></text></g><g><title>switch_fpu_return (1 samples, 0.10%)</title><rect x="96.6667%" y="597" width="0.1042%" height="15" fill="rgb(208,204,44)"/><text x="96.9167%" y="607.50"></text></g><g><title>[libhwloc.so.15.2.0] (241 samples, 25.10%)</title><rect x="71.7708%" y="677" width="25.1042%" height="15" fill="rgb(208,93,54)"/><text x="72.0208%" y="687.50">[libhwloc.so.15.2.0]</text></g><g><title>hwloc_linux_set_tid_cpubind (239 samples, 24.90%)</title><rect x="71.9792%" y="661" width="24.8958%" height="15" fill="rgb(242,1,31)"/><text x="72.2292%" y="671.50">hwloc_linux_set_tid_cpubind</text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="96.7708%" y="645" width="0.1042%" height="15" fill="rgb(241,83,25)"/><text x="97.0208%" y="655.50"></text></g><g><title>hwloc::Topology::new (242 samples, 25.21%)</title><rect x="71.7708%" y="741" width="25.2083%" height="15" fill="rgb(205,169,50)"/><text x="72.0208%" y="751.50">hwloc::Topology::new</text></g><g><title>hwloc_topology_load (242 samples, 25.21%)</title><rect x="71.7708%" y="725" width="25.2083%" height="15" fill="rgb(239,186,37)"/><text x="72.0208%" y="735.50">hwloc_topology_load</text></g><g><title>[libhwloc.so.15.2.0] (242 samples, 25.21%)</title><rect x="71.7708%" y="709" width="25.2083%" height="15" fill="rgb(205,221,10)"/><text x="72.0208%" y="719.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (242 samples, 25.21%)</title><rect x="71.7708%" y="693" width="25.2083%" height="15" fill="rgb(218,196,15)"/><text x="72.0208%" y="703.50">[libhwloc.so.15.2.0]</text></g><g><title>__isoc99_fscanf (1 samples, 0.10%)</title><rect x="96.8750%" y="677" width="0.1042%" height="15" fill="rgb(218,196,35)"/><text x="97.1250%" y="687.50"></text></g><g><title>lobsters::init_database (1 samples, 0.10%)</title><rect x="96.9792%" y="741" width="0.1042%" height="15" fill="rgb(233,63,24)"/><text x="97.2292%" y="751.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.10%)</title><rect x="96.9792%" y="725" width="0.1042%" height="15" fill="rgb(225,8,4)"/><text x="97.2292%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.10%)</title><rect x="96.9792%" y="709" width="0.1042%" height="15" fill="rgb(234,105,35)"/><text x="97.2292%" y="719.50"></text></g><g><title>core::fmt::write (1 samples, 0.10%)</title><rect x="96.9792%" y="693" width="0.1042%" height="15" fill="rgb(236,21,32)"/><text x="97.2292%" y="703.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="96.9792%" y="677" width="0.1042%" height="15" fill="rgb(228,109,6)"/><text x="97.2292%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="96.9792%" y="661" width="0.1042%" height="15" fill="rgb(229,215,31)"/><text x="97.2292%" y="671.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.10%)</title><rect x="96.9792%" y="645" width="0.1042%" height="15" fill="rgb(221,52,54)"/><text x="97.2292%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="96.9792%" y="629" width="0.1042%" height="15" fill="rgb(252,129,43)"/><text x="97.2292%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="96.9792%" y="613" width="0.1042%" height="15" fill="rgb(248,183,27)"/><text x="97.2292%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.10%)</title><rect x="96.9792%" y="597" width="0.1042%" height="15" fill="rgb(250,0,22)"/><text x="97.2292%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.10%)</title><rect x="96.9792%" y="581" width="0.1042%" height="15" fill="rgb(213,166,10)"/><text x="97.2292%" y="591.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.10%)</title><rect x="96.9792%" y="565" width="0.1042%" height="15" fill="rgb(207,163,36)"/><text x="97.2292%" y="575.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.21%)</title><rect x="97.2917%" y="725" width="0.2083%" height="15" fill="rgb(208,122,22)"/><text x="97.5417%" y="735.50"></text></g><g><title>__rdl_alloc (1 samples, 0.10%)</title><rect x="97.6042%" y="709" width="0.1042%" height="15" fill="rgb(207,104,49)"/><text x="97.8542%" y="719.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.10%)</title><rect x="97.6042%" y="693" width="0.1042%" height="15" fill="rgb(248,211,50)"/><text x="97.8542%" y="703.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::reset_seq_id (1 samples, 0.10%)</title><rect x="97.7083%" y="709" width="0.1042%" height="15" fill="rgb(217,13,45)"/><text x="97.9583%" y="719.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (8 samples, 0.83%)</title><rect x="97.0833%" y="741" width="0.8333%" height="15" fill="rgb(211,216,49)"/><text x="97.3333%" y="751.50"></text></g><g><title>mysql::conn::Conn::_query (4 samples, 0.42%)</title><rect x="97.5000%" y="725" width="0.4167%" height="15" fill="rgb(221,58,53)"/><text x="97.7500%" y="735.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.10%)</title><rect x="97.8125%" y="709" width="0.1042%" height="15" fill="rgb(220,112,41)"/><text x="98.0625%" y="719.50"></text></g><g><title>std::thread::JoinHandle&lt;T&gt;::join (1 samples, 0.10%)</title><rect x="97.9167%" y="741" width="0.1042%" height="15" fill="rgb(236,38,28)"/><text x="98.1667%" y="751.50"></text></g><g><title>std::sys::unix::thread::Thread::join (1 samples, 0.10%)</title><rect x="97.9167%" y="725" width="0.1042%" height="15" fill="rgb(227,195,22)"/><text x="98.1667%" y="735.50"></text></g><g><title>__pthread_clockjoin_ex (1 samples, 0.10%)</title><rect x="97.9167%" y="709" width="0.1042%" height="15" fill="rgb(214,55,33)"/><text x="98.1667%" y="719.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.10%)</title><rect x="97.9167%" y="693" width="0.1042%" height="15" fill="rgb(248,80,13)"/><text x="98.1667%" y="703.50"></text></g><g><title>do_syscall_64 (1 samples, 0.10%)</title><rect x="97.9167%" y="677" width="0.1042%" height="15" fill="rgb(238,52,6)"/><text x="98.1667%" y="687.50"></text></g><g><title>__x64_sys_futex (1 samples, 0.10%)</title><rect x="97.9167%" y="661" width="0.1042%" height="15" fill="rgb(224,198,47)"/><text x="98.1667%" y="671.50"></text></g><g><title>do_futex (1 samples, 0.10%)</title><rect x="97.9167%" y="645" width="0.1042%" height="15" fill="rgb(233,171,20)"/><text x="98.1667%" y="655.50"></text></g><g><title>futex_wait (1 samples, 0.10%)</title><rect x="97.9167%" y="629" width="0.1042%" height="15" fill="rgb(241,30,25)"/><text x="98.1667%" y="639.50"></text></g><g><title>futex_wait_queue_me (1 samples, 0.10%)</title><rect x="97.9167%" y="613" width="0.1042%" height="15" fill="rgb(207,171,38)"/><text x="98.1667%" y="623.50"></text></g><g><title>schedule (1 samples, 0.10%)</title><rect x="97.9167%" y="597" width="0.1042%" height="15" fill="rgb(234,70,1)"/><text x="98.1667%" y="607.50"></text></g><g><title>__schedule (1 samples, 0.10%)</title><rect x="97.9167%" y="581" width="0.1042%" height="15" fill="rgb(232,178,18)"/><text x="98.1667%" y="591.50"></text></g><g><title>dequeue_task_fair (1 samples, 0.10%)</title><rect x="97.9167%" y="565" width="0.1042%" height="15" fill="rgb(241,78,40)"/><text x="98.1667%" y="575.50"></text></g><g><title>dequeue_entity (1 samples, 0.10%)</title><rect x="97.9167%" y="549" width="0.1042%" height="15" fill="rgb(222,35,25)"/><text x="98.1667%" y="559.50"></text></g><g><title>__libc_start_main (257 samples, 26.77%)</title><rect x="71.3542%" y="901" width="26.7708%" height="15" fill="rgb(207,92,16)"/><text x="71.6042%" y="911.50">__libc_start_main</text></g><g><title>main (257 samples, 26.77%)</title><rect x="71.3542%" y="885" width="26.7708%" height="15" fill="rgb(216,59,51)"/><text x="71.6042%" y="895.50">main</text></g><g><title>std::rt::lang_start_internal (257 samples, 26.77%)</title><rect x="71.3542%" y="869" width="26.7708%" height="15" fill="rgb(213,80,28)"/><text x="71.6042%" y="879.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (257 samples, 26.77%)</title><rect x="71.3542%" y="853" width="26.7708%" height="15" fill="rgb(220,93,7)"/><text x="71.6042%" y="863.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (257 samples, 26.77%)</title><rect x="71.3542%" y="837" width="26.7708%" height="15" fill="rgb(225,24,44)"/><text x="71.6042%" y="847.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (257 samples, 26.77%)</title><rect x="71.3542%" y="821" width="26.7708%" height="15" fill="rgb(243,74,40)"/><text x="71.6042%" y="831.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (257 samples, 26.77%)</title><rect x="71.3542%" y="805" width="26.7708%" height="15" fill="rgb(228,39,7)"/><text x="71.6042%" y="815.50">core::ops::function::impls::&lt;impl core::ops..</text></g><g><title>std::rt::lang_start::_{{closure}} (257 samples, 26.77%)</title><rect x="71.3542%" y="789" width="26.7708%" height="15" fill="rgb(227,79,8)"/><text x="71.6042%" y="799.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (257 samples, 26.77%)</title><rect x="71.3542%" y="773" width="26.7708%" height="15" fill="rgb(236,58,11)"/><text x="71.6042%" y="783.50">std::sys_common::backtrace::__rust_begin_sh..</text></g><g><title>lobsters::main (257 samples, 26.77%)</title><rect x="71.3542%" y="757" width="26.7708%" height="15" fill="rgb(249,63,35)"/><text x="71.6042%" y="767.50">lobsters::main</text></g><g><title>std::thread::spawn (1 samples, 0.10%)</title><rect x="98.0208%" y="741" width="0.1042%" height="15" fill="rgb(252,114,16)"/><text x="98.2708%" y="751.50"></text></g><g><title>std::sys_common::thread::min_stack (1 samples, 0.10%)</title><rect x="98.0208%" y="725" width="0.1042%" height="15" fill="rgb(254,151,24)"/><text x="98.2708%" y="735.50"></text></g><g><title>std::env::var (1 samples, 0.10%)</title><rect x="98.0208%" y="709" width="0.1042%" height="15" fill="rgb(253,54,39)"/><text x="98.2708%" y="719.50"></text></g><g><title>std::env::_var (1 samples, 0.10%)</title><rect x="98.0208%" y="693" width="0.1042%" height="15" fill="rgb(243,25,45)"/><text x="98.2708%" y="703.50"></text></g><g><title>std::env::var_os (1 samples, 0.10%)</title><rect x="98.0208%" y="677" width="0.1042%" height="15" fill="rgb(234,134,9)"/><text x="98.2708%" y="687.50"></text></g><g><title>std::env::_var_os (1 samples, 0.10%)</title><rect x="98.0208%" y="661" width="0.1042%" height="15" fill="rgb(227,166,31)"/><text x="98.2708%" y="671.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.10%)</title><rect x="98.0208%" y="645" width="0.1042%" height="15" fill="rgb(245,143,41)"/><text x="98.2708%" y="655.50"></text></g><g><title>std::ffi::c_str::CString::new (1 samples, 0.10%)</title><rect x="98.0208%" y="629" width="0.1042%" height="15" fill="rgb(238,181,32)"/><text x="98.2708%" y="639.50"></text></g><g><title>&lt;&amp;[u8] as std::ffi::c_str::CString::new::SpecIntoVec&gt;::into_vec (1 samples, 0.10%)</title><rect x="98.0208%" y="613" width="0.1042%" height="15" fill="rgb(224,113,18)"/><text x="98.2708%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (1 samples, 0.10%)</title><rect x="98.0208%" y="597" width="0.1042%" height="15" fill="rgb(240,229,28)"/><text x="98.2708%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="98.0208%" y="581" width="0.1042%" height="15" fill="rgb(250,185,3)"/><text x="98.2708%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.10%)</title><rect x="98.0208%" y="565" width="0.1042%" height="15" fill="rgb(212,59,25)"/><text x="98.2708%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.10%)</title><rect x="98.0208%" y="549" width="0.1042%" height="15" fill="rgb(221,87,20)"/><text x="98.2708%" y="559.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.10%)</title><rect x="98.0208%" y="533" width="0.1042%" height="15" fill="rgb(213,74,28)"/><text x="98.2708%" y="543.50"></text></g><g><title>page_fault (1 samples, 0.10%)</title><rect x="98.0208%" y="517" width="0.1042%" height="15" fill="rgb(224,132,34)"/><text x="98.2708%" y="527.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.10%)</title><rect x="98.0208%" y="501" width="0.1042%" height="15" fill="rgb(222,101,24)"/><text x="98.2708%" y="511.50"></text></g><g><title>handle_mm_fault (1 samples, 0.10%)</title><rect x="98.0208%" y="485" width="0.1042%" height="15" fill="rgb(254,142,4)"/><text x="98.2708%" y="495.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.10%)</title><rect x="98.0208%" y="469" width="0.1042%" height="15" fill="rgb(230,229,49)"/><text x="98.2708%" y="479.50"></text></g><g><title>filemap_map_pages (1 samples, 0.10%)</title><rect x="98.0208%" y="453" width="0.1042%" height="15" fill="rgb(238,70,47)"/><text x="98.2708%" y="463.50"></text></g><g><title>alloc_set_pte (1 samples, 0.10%)</title><rect x="98.0208%" y="437" width="0.1042%" height="15" fill="rgb(231,160,17)"/><text x="98.2708%" y="447.50"></text></g><g><title>_start (258 samples, 26.88%)</title><rect x="71.3542%" y="917" width="26.8750%" height="15" fill="rgb(218,68,53)"/><text x="71.6042%" y="927.50">_start</text></g><g><title>_dl_start (1 samples, 0.10%)</title><rect x="98.1250%" y="901" width="0.1042%" height="15" fill="rgb(236,111,10)"/><text x="98.3750%" y="911.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.10%)</title><rect x="98.1250%" y="885" width="0.1042%" height="15" fill="rgb(224,34,41)"/><text x="98.3750%" y="895.50"></text></g><g><title>dl_main (1 samples, 0.10%)</title><rect x="98.1250%" y="869" width="0.1042%" height="15" fill="rgb(241,118,19)"/><text x="98.3750%" y="879.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.10%)</title><rect x="98.1250%" y="853" width="0.1042%" height="15" fill="rgb(238,129,25)"/><text x="98.3750%" y="863.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.10%)</title><rect x="98.1250%" y="837" width="0.1042%" height="15" fill="rgb(238,22,31)"/><text x="98.3750%" y="847.50"></text></g><g><title>openaux (1 samples, 0.10%)</title><rect x="98.1250%" y="821" width="0.1042%" height="15" fill="rgb(222,174,48)"/><text x="98.3750%" y="831.50"></text></g><g><title>_dl_map_object (1 samples, 0.10%)</title><rect x="98.1250%" y="805" width="0.1042%" height="15" fill="rgb(206,152,40)"/><text x="98.3750%" y="815.50"></text></g><g><title>_dl_map_object_from_fd (1 samples, 0.10%)</title><rect x="98.1250%" y="789" width="0.1042%" height="15" fill="rgb(218,99,54)"/><text x="98.3750%" y="799.50"></text></g><g><title>__mmap (1 samples, 0.10%)</title><rect x="98.1250%" y="773" width="0.1042%" height="15" fill="rgb(220,174,26)"/><text x="98.3750%" y="783.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.10%)</title><rect x="98.1250%" y="757" width="0.1042%" height="15" fill="rgb(245,116,9)"/><text x="98.3750%" y="767.50"></text></g><g><title>do_syscall_64 (1 samples, 0.10%)</title><rect x="98.1250%" y="741" width="0.1042%" height="15" fill="rgb(209,72,35)"/><text x="98.3750%" y="751.50"></text></g><g><title>ksys_mmap_pgoff (1 samples, 0.10%)</title><rect x="98.1250%" y="725" width="0.1042%" height="15" fill="rgb(226,126,21)"/><text x="98.3750%" y="735.50"></text></g><g><title>vm_mmap_pgoff (1 samples, 0.10%)</title><rect x="98.1250%" y="709" width="0.1042%" height="15" fill="rgb(227,192,1)"/><text x="98.3750%" y="719.50"></text></g><g><title>do_mmap (1 samples, 0.10%)</title><rect x="98.1250%" y="693" width="0.1042%" height="15" fill="rgb(237,180,29)"/><text x="98.3750%" y="703.50"></text></g><g><title>mmap_region (1 samples, 0.10%)</title><rect x="98.1250%" y="677" width="0.1042%" height="15" fill="rgb(230,197,35)"/><text x="98.3750%" y="687.50"></text></g><g><title>__do_munmap (1 samples, 0.10%)</title><rect x="98.1250%" y="661" width="0.1042%" height="15" fill="rgb(246,193,31)"/><text x="98.3750%" y="671.50"></text></g><g><title>unmap_region (1 samples, 0.10%)</title><rect x="98.1250%" y="645" width="0.1042%" height="15" fill="rgb(241,36,4)"/><text x="98.3750%" y="655.50"></text></g><g><title>free_pgtables (1 samples, 0.10%)</title><rect x="98.1250%" y="629" width="0.1042%" height="15" fill="rgb(241,130,17)"/><text x="98.3750%" y="639.50"></text></g><g><title>unlink_file_vma (1 samples, 0.10%)</title><rect x="98.1250%" y="613" width="0.1042%" height="15" fill="rgb(206,137,32)"/><text x="98.3750%" y="623.50"></text></g><g><title>vma_interval_tree_remove (1 samples, 0.10%)</title><rect x="98.1250%" y="597" width="0.1042%" height="15" fill="rgb(237,228,51)"/><text x="98.3750%" y="607.50"></text></g><g><title>anon.144e612f7a92f11708487d2575dcc3d1.3.llvm.9538235009918832389 (1 samples, 0.10%)</title><rect x="98.2292%" y="917" width="0.1042%" height="15" fill="rgb(243,6,42)"/><text x="98.4792%" y="927.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.10%)</title><rect x="98.2292%" y="901" width="0.1042%" height="15" fill="rgb(251,74,28)"/><text x="98.4792%" y="911.50"></text></g><g><title>free_pgtables (1 samples, 0.10%)</title><rect x="98.6458%" y="805" width="0.1042%" height="15" fill="rgb(218,20,49)"/><text x="98.8958%" y="815.50"></text></g><g><title>free_pgd_range (1 samples, 0.10%)</title><rect x="98.6458%" y="789" width="0.1042%" height="15" fill="rgb(238,28,14)"/><text x="98.8958%" y="799.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.10%)</title><rect x="98.7500%" y="805" width="0.1042%" height="15" fill="rgb(229,40,46)"/><text x="99.0000%" y="815.50"></text></g><g><title>release_pages (1 samples, 0.10%)</title><rect x="98.7500%" y="789" width="0.1042%" height="15" fill="rgb(244,195,20)"/><text x="99.0000%" y="799.50"></text></g><g><title>[vmlinux] (4 samples, 0.42%)</title><rect x="98.6458%" y="885" width="0.4167%" height="15" fill="rgb(253,56,35)"/><text x="98.8958%" y="895.50"></text></g><g><title>do_group_exit (4 samples, 0.42%)</title><rect x="98.6458%" y="869" width="0.4167%" height="15" fill="rgb(210,149,44)"/><text x="98.8958%" y="879.50"></text></g><g><title>do_exit (4 samples, 0.42%)</title><rect x="98.6458%" y="853" width="0.4167%" height="15" fill="rgb(240,135,12)"/><text x="98.8958%" y="863.50"></text></g><g><title>mmput (4 samples, 0.42%)</title><rect x="98.6458%" y="837" width="0.4167%" height="15" fill="rgb(251,24,50)"/><text x="98.8958%" y="847.50"></text></g><g><title>exit_mmap (4 samples, 0.42%)</title><rect x="98.6458%" y="821" width="0.4167%" height="15" fill="rgb(243,200,47)"/><text x="98.8958%" y="831.50"></text></g><g><title>unmap_vmas (2 samples, 0.21%)</title><rect x="98.8542%" y="805" width="0.2083%" height="15" fill="rgb(224,166,26)"/><text x="99.1042%" y="815.50"></text></g><g><title>unmap_page_range (2 samples, 0.21%)</title><rect x="98.8542%" y="789" width="0.2083%" height="15" fill="rgb(233,0,47)"/><text x="99.1042%" y="799.50"></text></g><g><title>mark_page_accessed (1 samples, 0.10%)</title><rect x="98.9583%" y="773" width="0.1042%" height="15" fill="rgb(253,80,5)"/><text x="99.2083%" y="783.50"></text></g><g><title>entry_SYSCALL_64 (8 samples, 0.83%)</title><rect x="98.3333%" y="917" width="0.8333%" height="15" fill="rgb(214,133,25)"/><text x="98.5833%" y="927.50"></text></g><g><title>do_syscall_64 (5 samples, 0.52%)</title><rect x="98.6458%" y="901" width="0.5208%" height="15" fill="rgb(209,27,14)"/><text x="98.8958%" y="911.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.10%)</title><rect x="99.0625%" y="885" width="0.1042%" height="15" fill="rgb(219,102,51)"/><text x="99.3125%" y="895.50"></text></g><g><title>do_execve (1 samples, 0.10%)</title><rect x="99.0625%" y="869" width="0.1042%" height="15" fill="rgb(237,18,16)"/><text x="99.3125%" y="879.50"></text></g><g><title>__do_execve_file (1 samples, 0.10%)</title><rect x="99.0625%" y="853" width="0.1042%" height="15" fill="rgb(241,85,17)"/><text x="99.3125%" y="863.50"></text></g><g><title>search_binary_handler.part.0 (1 samples, 0.10%)</title><rect x="99.0625%" y="837" width="0.1042%" height="15" fill="rgb(236,90,42)"/><text x="99.3125%" y="847.50"></text></g><g><title>load_elf_binary (1 samples, 0.10%)</title><rect x="99.0625%" y="821" width="0.1042%" height="15" fill="rgb(249,57,21)"/><text x="99.3125%" y="831.50"></text></g><g><title>__clear_user (1 samples, 0.10%)</title><rect x="99.0625%" y="805" width="0.1042%" height="15" fill="rgb(243,12,36)"/><text x="99.3125%" y="815.50"></text></g><g><title>page_fault (1 samples, 0.10%)</title><rect x="99.0625%" y="789" width="0.1042%" height="15" fill="rgb(253,128,47)"/><text x="99.3125%" y="799.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.10%)</title><rect x="99.0625%" y="773" width="0.1042%" height="15" fill="rgb(207,33,20)"/><text x="99.3125%" y="783.50"></text></g><g><title>handle_mm_fault (1 samples, 0.10%)</title><rect x="99.0625%" y="757" width="0.1042%" height="15" fill="rgb(233,215,35)"/><text x="99.3125%" y="767.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.10%)</title><rect x="99.0625%" y="741" width="0.1042%" height="15" fill="rgb(249,188,52)"/><text x="99.3125%" y="751.50"></text></g><g><title>__pmd_alloc (1 samples, 0.10%)</title><rect x="99.0625%" y="725" width="0.1042%" height="15" fill="rgb(225,12,32)"/><text x="99.3125%" y="735.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.10%)</title><rect x="99.0625%" y="709" width="0.1042%" height="15" fill="rgb(247,98,14)"/><text x="99.3125%" y="719.50"></text></g><g><title>__memcg_kmem_charge_page (1 samples, 0.10%)</title><rect x="99.0625%" y="693" width="0.1042%" height="15" fill="rgb(247,219,48)"/><text x="99.3125%" y="703.50"></text></g><g><title>__memcg_kmem_charge (1 samples, 0.10%)</title><rect x="99.0625%" y="677" width="0.1042%" height="15" fill="rgb(253,60,48)"/><text x="99.3125%" y="687.50"></text></g><g><title>page_counter_try_charge (1 samples, 0.10%)</title><rect x="99.0625%" y="661" width="0.1042%" height="15" fill="rgb(245,15,52)"/><text x="99.3125%" y="671.50"></text></g><g><title>page_fault (1 samples, 0.10%)</title><rect x="99.1667%" y="917" width="0.1042%" height="15" fill="rgb(220,133,28)"/><text x="99.4167%" y="927.50"></text></g><g><title>lobsters (954 samples, 99.38%)</title><rect x="0.0000%" y="933" width="99.3750%" height="15" fill="rgb(217,180,4)"/><text x="0.2500%" y="943.50">lobsters</text></g><g><title>syscall_return_via_sysret (1 samples, 0.10%)</title><rect x="99.2708%" y="917" width="0.1042%" height="15" fill="rgb(251,24,1)"/><text x="99.5208%" y="927.50"></text></g><g><title>all (960 samples, 100%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(212,185,49)"/><text x="0.2500%" y="959.50"></text></g><g><title>perf (6 samples, 0.62%)</title><rect x="99.3750%" y="933" width="0.6250%" height="15" fill="rgb(215,175,22)"/><text x="99.6250%" y="943.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.62%)</title><rect x="99.3750%" y="917" width="0.6250%" height="15" fill="rgb(250,205,14)"/><text x="99.6250%" y="927.50"></text></g><g><title>do_syscall_64 (6 samples, 0.62%)</title><rect x="99.3750%" y="901" width="0.6250%" height="15" fill="rgb(225,211,22)"/><text x="99.6250%" y="911.50"></text></g><g><title>__x64_sys_execve (6 samples, 0.62%)</title><rect x="99.3750%" y="885" width="0.6250%" height="15" fill="rgb(251,179,42)"/><text x="99.6250%" y="895.50"></text></g><g><title>do_execve (6 samples, 0.62%)</title><rect x="99.3750%" y="869" width="0.6250%" height="15" fill="rgb(208,216,51)"/><text x="99.6250%" y="879.50"></text></g><g><title>__do_execve_file (6 samples, 0.62%)</title><rect x="99.3750%" y="853" width="0.6250%" height="15" fill="rgb(235,36,11)"/><text x="99.6250%" y="863.50"></text></g><g><title>search_binary_handler.part.0 (6 samples, 0.62%)</title><rect x="99.3750%" y="837" width="0.6250%" height="15" fill="rgb(213,189,28)"/><text x="99.6250%" y="847.50"></text></g><g><title>load_elf_binary (6 samples, 0.62%)</title><rect x="99.3750%" y="821" width="0.6250%" height="15" fill="rgb(227,203,42)"/><text x="99.6250%" y="831.50"></text></g><g><title>setup_new_exec (6 samples, 0.62%)</title><rect x="99.3750%" y="805" width="0.6250%" height="15" fill="rgb(244,72,36)"/><text x="99.6250%" y="815.50"></text></g><g><title>perf_event_exec (6 samples, 0.62%)</title><rect x="99.3750%" y="789" width="0.6250%" height="15" fill="rgb(213,53,17)"/><text x="99.6250%" y="799.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.52%)</title><rect x="99.4792%" y="773" width="0.5208%" height="15" fill="rgb(207,167,3)"/><text x="99.7292%" y="783.50"></text></g><g><title>native_write_msr (5 samples, 0.52%)</title><rect x="99.4792%" y="757" width="0.5208%" height="15" fill="rgb(216,98,30)"/><text x="99.7292%" y="767.50"></text></g></svg></svg>