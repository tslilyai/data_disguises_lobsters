<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="950" onload="init(evt)" viewBox="0 0 1200 950" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="950" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="933.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="933.00"> </text><svg id="frames" x="10" width="1180"><g><title>&lt;sql_parser::tokenizer::Token as core::fmt::Display&gt;::fmt (1 samples, 0.12%)</title><rect x="0.0000%" y="869" width="0.1227%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="879.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (4 samples, 0.49%)</title><rect x="0.1227%" y="853" width="0.4908%" height="15" fill="rgb(217,0,24)"/><text x="0.3727%" y="863.50"></text></g><g><title>std::sys_common::net::TcpStream::read (4 samples, 0.49%)</title><rect x="0.1227%" y="837" width="0.4908%" height="15" fill="rgb(221,193,54)"/><text x="0.3727%" y="847.50"></text></g><g><title>std::sys::unix::net::Socket::read (4 samples, 0.49%)</title><rect x="0.1227%" y="821" width="0.4908%" height="15" fill="rgb(248,212,6)"/><text x="0.3727%" y="831.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (4 samples, 0.49%)</title><rect x="0.1227%" y="805" width="0.4908%" height="15" fill="rgb(208,68,35)"/><text x="0.3727%" y="815.50"></text></g><g><title>__libc_recv (4 samples, 0.49%)</title><rect x="0.1227%" y="789" width="0.4908%" height="15" fill="rgb(232,128,0)"/><text x="0.3727%" y="799.50"></text></g><g><title>entry_SYSCALL_64 (4 samples, 0.49%)</title><rect x="0.1227%" y="773" width="0.4908%" height="15" fill="rgb(207,160,47)"/><text x="0.3727%" y="783.50"></text></g><g><title>[[heap]] (5 samples, 0.61%)</title><rect x="0.1227%" y="869" width="0.6135%" height="15" fill="rgb(228,23,34)"/><text x="0.3727%" y="879.50"></text></g><g><title>hwloc_linux_set_tid_cpubind (1 samples, 0.12%)</title><rect x="0.6135%" y="853" width="0.1227%" height="15" fill="rgb(218,30,26)"/><text x="0.8635%" y="863.50"></text></g><g><title>&lt;std::io::buffered::BufWriter&lt;W&gt;::flush_buf::BufGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.12%)</title><rect x="0.7362%" y="853" width="0.1227%" height="15" fill="rgb(220,122,19)"/><text x="0.9862%" y="863.50"></text></g><g><title>__libc_send (1 samples, 0.12%)</title><rect x="0.8589%" y="853" width="0.1227%" height="15" fill="rgb(250,228,42)"/><text x="1.1089%" y="863.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.12%)</title><rect x="0.8589%" y="837" width="0.1227%" height="15" fill="rgb(240,193,28)"/><text x="1.1089%" y="847.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.12%)</title><rect x="0.9816%" y="853" width="0.1227%" height="15" fill="rgb(216,20,37)"/><text x="1.2316%" y="863.50"></text></g><g><title>[[stack]] (4 samples, 0.49%)</title><rect x="0.7362%" y="869" width="0.4908%" height="15" fill="rgb(206,188,39)"/><text x="0.9862%" y="879.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.12%)</title><rect x="1.1043%" y="853" width="0.1227%" height="15" fill="rgb(217,207,13)"/><text x="1.3543%" y="863.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.25%)</title><rect x="1.2270%" y="853" width="0.2454%" height="15" fill="rgb(231,73,38)"/><text x="1.4770%" y="863.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.12%)</title><rect x="1.4724%" y="853" width="0.1227%" height="15" fill="rgb(225,20,46)"/><text x="1.7224%" y="863.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.12%)</title><rect x="1.5951%" y="853" width="0.1227%" height="15" fill="rgb(210,31,41)"/><text x="1.8451%" y="863.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.12%)</title><rect x="1.7178%" y="853" width="0.1227%" height="15" fill="rgb(221,200,47)"/><text x="1.9678%" y="863.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.12%)</title><rect x="1.8405%" y="853" width="0.1227%" height="15" fill="rgb(226,26,5)"/><text x="2.0905%" y="863.50"></text></g><g><title>__GI___libc_free (1 samples, 0.12%)</title><rect x="1.9632%" y="853" width="0.1227%" height="15" fill="rgb(249,33,26)"/><text x="2.2132%" y="863.50"></text></g><g><title>__libc_send (1 samples, 0.12%)</title><rect x="2.0859%" y="853" width="0.1227%" height="15" fill="rgb(235,183,28)"/><text x="2.3359%" y="863.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.12%)</title><rect x="2.0859%" y="837" width="0.1227%" height="15" fill="rgb(221,5,38)"/><text x="2.3359%" y="847.50"></text></g><g><title>_int_free (1 samples, 0.12%)</title><rect x="2.2086%" y="853" width="0.1227%" height="15" fill="rgb(247,18,42)"/><text x="2.4586%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="2.3313%" y="853" width="0.1227%" height="15" fill="rgb(241,131,45)"/><text x="2.5813%" y="863.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (3 samples, 0.37%)</title><rect x="2.4540%" y="853" width="0.3681%" height="15" fill="rgb(249,31,29)"/><text x="2.7040%" y="863.50"></text></g><g><title>core::fmt::write (4 samples, 0.49%)</title><rect x="2.8221%" y="853" width="0.4908%" height="15" fill="rgb(225,111,53)"/><text x="3.0721%" y="863.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_lower (1 samples, 0.12%)</title><rect x="3.3129%" y="853" width="0.1227%" height="15" fill="rgb(238,160,17)"/><text x="3.5629%" y="863.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.12%)</title><rect x="3.4356%" y="853" width="0.1227%" height="15" fill="rgb(214,148,48)"/><text x="3.6856%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (1 samples, 0.12%)</title><rect x="3.5583%" y="853" width="0.1227%" height="15" fill="rgb(232,36,49)"/><text x="3.8083%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (3 samples, 0.37%)</title><rect x="3.6810%" y="853" width="0.3681%" height="15" fill="rgb(209,103,24)"/><text x="3.9310%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (1 samples, 0.12%)</title><rect x="4.0491%" y="853" width="0.1227%" height="15" fill="rgb(229,88,8)"/><text x="4.2991%" y="863.50"></text></g><g><title>sql_parser::parser::parse_statements (1 samples, 0.12%)</title><rect x="4.1718%" y="853" width="0.1227%" height="15" fill="rgb(213,181,19)"/><text x="4.4218%" y="863.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (1 samples, 0.12%)</title><rect x="4.2945%" y="853" width="0.1227%" height="15" fill="rgb(254,191,54)"/><text x="4.5445%" y="863.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (1 samples, 0.12%)</title><rect x="4.4172%" y="853" width="0.1227%" height="15" fill="rgb(241,83,37)"/><text x="4.6672%" y="863.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_string (1 samples, 0.12%)</title><rect x="4.5399%" y="853" width="0.1227%" height="15" fill="rgb(233,36,39)"/><text x="4.7899%" y="863.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_word (1 samples, 0.12%)</title><rect x="4.6626%" y="853" width="0.1227%" height="15" fill="rgb(226,3,54)"/><text x="4.9126%" y="863.50"></text></g><g><title>[anon] (30 samples, 3.68%)</title><rect x="1.2270%" y="869" width="3.6810%" height="15" fill="rgb(245,192,40)"/><text x="1.4770%" y="879.50">[ano..</text></g><g><title>stacker::remaining_stack (1 samples, 0.12%)</title><rect x="4.7853%" y="853" width="0.1227%" height="15" fill="rgb(238,167,29)"/><text x="5.0353%" y="863.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.12%)</title><rect x="4.9080%" y="853" width="0.1227%" height="15" fill="rgb(232,182,51)"/><text x="5.1580%" y="863.50"></text></g><g><title>[lobsters] (2 samples, 0.25%)</title><rect x="4.9080%" y="869" width="0.2454%" height="15" fill="rgb(231,60,39)"/><text x="5.1580%" y="879.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.12%)</title><rect x="5.0307%" y="853" width="0.1227%" height="15" fill="rgb(208,69,12)"/><text x="5.2807%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.12%)</title><rect x="5.1534%" y="725" width="0.1227%" height="15" fill="rgb(235,93,37)"/><text x="5.4034%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.12%)</title><rect x="5.1534%" y="709" width="0.1227%" height="15" fill="rgb(213,116,39)"/><text x="5.4034%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.12%)</title><rect x="5.1534%" y="693" width="0.1227%" height="15" fill="rgb(222,207,29)"/><text x="5.4034%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.12%)</title><rect x="5.1534%" y="677" width="0.1227%" height="15" fill="rgb(206,96,30)"/><text x="5.4034%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="5.1534%" y="661" width="0.1227%" height="15" fill="rgb(218,138,4)"/><text x="5.4034%" y="671.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (2 samples, 0.25%)</title><rect x="5.1534%" y="805" width="0.2454%" height="15" fill="rgb(250,191,14)"/><text x="5.4034%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.25%)</title><rect x="5.1534%" y="789" width="0.2454%" height="15" fill="rgb(239,60,40)"/><text x="5.4034%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.25%)</title><rect x="5.1534%" y="773" width="0.2454%" height="15" fill="rgb(206,27,48)"/><text x="5.4034%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.25%)</title><rect x="5.1534%" y="757" width="0.2454%" height="15" fill="rgb(225,35,8)"/><text x="5.4034%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.25%)</title><rect x="5.1534%" y="741" width="0.2454%" height="15" fill="rgb(250,213,24)"/><text x="5.4034%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.12%)</title><rect x="5.2761%" y="725" width="0.1227%" height="15" fill="rgb(247,123,22)"/><text x="5.5261%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.12%)</title><rect x="5.2761%" y="709" width="0.1227%" height="15" fill="rgb(231,138,38)"/><text x="5.5261%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.12%)</title><rect x="5.2761%" y="693" width="0.1227%" height="15" fill="rgb(231,145,46)"/><text x="5.5261%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.12%)</title><rect x="5.2761%" y="677" width="0.1227%" height="15" fill="rgb(251,118,11)"/><text x="5.5261%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.12%)</title><rect x="5.2761%" y="661" width="0.1227%" height="15" fill="rgb(217,147,25)"/><text x="5.5261%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.12%)</title><rect x="5.2761%" y="645" width="0.1227%" height="15" fill="rgb(247,81,37)"/><text x="5.5261%" y="655.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.12%)</title><rect x="5.2761%" y="629" width="0.1227%" height="15" fill="rgb(209,12,38)"/><text x="5.5261%" y="639.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.12%)</title><rect x="5.2761%" y="613" width="0.1227%" height="15" fill="rgb(227,1,9)"/><text x="5.5261%" y="623.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.12%)</title><rect x="5.3988%" y="805" width="0.1227%" height="15" fill="rgb(248,47,43)"/><text x="5.6488%" y="815.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="5.5215%" y="805" width="0.1227%" height="15" fill="rgb(221,10,30)"/><text x="5.7715%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (3 samples, 0.37%)</title><rect x="5.6442%" y="805" width="0.3681%" height="15" fill="rgb(210,229,1)"/><text x="5.8942%" y="815.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.12%)</title><rect x="5.8896%" y="789" width="0.1227%" height="15" fill="rgb(222,148,37)"/><text x="6.1396%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="6.0123%" y="789" width="0.1227%" height="15" fill="rgb(234,67,33)"/><text x="6.2623%" y="799.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (1 samples, 0.12%)</title><rect x="6.1350%" y="757" width="0.1227%" height="15" fill="rgb(247,98,35)"/><text x="6.3850%" y="767.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.12%)</title><rect x="6.2577%" y="757" width="0.1227%" height="15" fill="rgb(247,138,52)"/><text x="6.5077%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.12%)</title><rect x="6.2577%" y="741" width="0.1227%" height="15" fill="rgb(213,79,30)"/><text x="6.5077%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.12%)</title><rect x="6.2577%" y="725" width="0.1227%" height="15" fill="rgb(246,177,23)"/><text x="6.5077%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.12%)</title><rect x="6.2577%" y="709" width="0.1227%" height="15" fill="rgb(230,62,27)"/><text x="6.5077%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.12%)</title><rect x="6.2577%" y="693" width="0.1227%" height="15" fill="rgb(216,154,8)"/><text x="6.5077%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.12%)</title><rect x="6.2577%" y="677" width="0.1227%" height="15" fill="rgb(244,35,45)"/><text x="6.5077%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.12%)</title><rect x="6.2577%" y="661" width="0.1227%" height="15" fill="rgb(251,115,12)"/><text x="6.5077%" y="671.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.12%)</title><rect x="6.2577%" y="645" width="0.1227%" height="15" fill="rgb(240,54,50)"/><text x="6.5077%" y="655.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.12%)</title><rect x="6.2577%" y="629" width="0.1227%" height="15" fill="rgb(233,84,52)"/><text x="6.5077%" y="639.50"></text></g><g><title>_int_malloc (1 samples, 0.12%)</title><rect x="6.2577%" y="613" width="0.1227%" height="15" fill="rgb(207,117,47)"/><text x="6.5077%" y="623.50"></text></g><g><title>sql_parser::parser::Parser::parse_object_name (5 samples, 0.61%)</title><rect x="6.0123%" y="805" width="0.6135%" height="15" fill="rgb(249,43,39)"/><text x="6.2623%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::parse_identifier (4 samples, 0.49%)</title><rect x="6.1350%" y="789" width="0.4908%" height="15" fill="rgb(209,38,44)"/><text x="6.3850%" y="799.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (4 samples, 0.49%)</title><rect x="6.1350%" y="773" width="0.4908%" height="15" fill="rgb(236,212,23)"/><text x="6.3850%" y="783.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_lower (2 samples, 0.25%)</title><rect x="6.3804%" y="757" width="0.2454%" height="15" fill="rgb(242,79,21)"/><text x="6.6304%" y="767.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.25%)</title><rect x="6.3804%" y="741" width="0.2454%" height="15" fill="rgb(211,96,35)"/><text x="6.6304%" y="751.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.25%)</title><rect x="6.3804%" y="725" width="0.2454%" height="15" fill="rgb(253,215,40)"/><text x="6.6304%" y="735.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (2 samples, 0.25%)</title><rect x="6.3804%" y="709" width="0.2454%" height="15" fill="rgb(211,81,21)"/><text x="6.6304%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="6.8712%" y="789" width="0.1227%" height="15" fill="rgb(208,190,38)"/><text x="7.1212%" y="799.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.12%)</title><rect x="6.8712%" y="773" width="0.1227%" height="15" fill="rgb(235,213,38)"/><text x="7.1212%" y="783.50"></text></g><g><title>__GI___libc_free (1 samples, 0.12%)</title><rect x="6.9939%" y="773" width="0.1227%" height="15" fill="rgb(237,122,38)"/><text x="7.2439%" y="783.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="7.2393%" y="757" width="0.1227%" height="15" fill="rgb(244,218,35)"/><text x="7.4893%" y="767.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="7.2393%" y="741" width="0.1227%" height="15" fill="rgb(240,68,47)"/><text x="7.4893%" y="751.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.12%)</title><rect x="7.2393%" y="725" width="0.1227%" height="15" fill="rgb(210,16,53)"/><text x="7.4893%" y="735.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="7.2393%" y="709" width="0.1227%" height="15" fill="rgb(235,124,12)"/><text x="7.4893%" y="719.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.12%)</title><rect x="7.2393%" y="693" width="0.1227%" height="15" fill="rgb(224,169,11)"/><text x="7.4893%" y="703.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (1 samples, 0.12%)</title><rect x="7.3620%" y="757" width="0.1227%" height="15" fill="rgb(250,166,2)"/><text x="7.6120%" y="767.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.12%)</title><rect x="7.4847%" y="757" width="0.1227%" height="15" fill="rgb(242,216,29)"/><text x="7.7347%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.12%)</title><rect x="7.4847%" y="741" width="0.1227%" height="15" fill="rgb(230,116,27)"/><text x="7.7347%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (1 samples, 0.12%)</title><rect x="7.4847%" y="725" width="0.1227%" height="15" fill="rgb(228,99,48)"/><text x="7.7347%" y="735.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (26 samples, 3.19%)</title><rect x="5.1534%" y="853" width="3.1902%" height="15" fill="rgb(253,11,6)"/><text x="5.4034%" y="863.50">&lt;de..</text></g><g><title>sql_parser::parser::parse_statements (26 samples, 3.19%)</title><rect x="5.1534%" y="837" width="3.1902%" height="15" fill="rgb(247,143,39)"/><text x="5.4034%" y="847.50">sql..</text></g><g><title>sql_parser::parser::Parser::parse_statement (26 samples, 3.19%)</title><rect x="5.1534%" y="821" width="3.1902%" height="15" fill="rgb(236,97,10)"/><text x="5.4034%" y="831.50">sql..</text></g><g><title>sql_parser::parser::Parser::parse_parenthesized_column_list (14 samples, 1.72%)</title><rect x="6.6258%" y="805" width="1.7178%" height="15" fill="rgb(233,208,19)"/><text x="6.8758%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::parse_identifier (11 samples, 1.35%)</title><rect x="6.9939%" y="789" width="1.3497%" height="15" fill="rgb(216,164,2)"/><text x="7.2439%" y="799.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (10 samples, 1.23%)</title><rect x="7.1166%" y="773" width="1.2270%" height="15" fill="rgb(220,129,5)"/><text x="7.3666%" y="783.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_lower (6 samples, 0.74%)</title><rect x="7.6074%" y="757" width="0.7362%" height="15" fill="rgb(242,17,10)"/><text x="7.8574%" y="767.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (5 samples, 0.61%)</title><rect x="7.7301%" y="741" width="0.6135%" height="15" fill="rgb(242,107,0)"/><text x="7.9801%" y="751.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (5 samples, 0.61%)</title><rect x="7.7301%" y="725" width="0.6135%" height="15" fill="rgb(251,28,31)"/><text x="7.9801%" y="735.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (3 samples, 0.37%)</title><rect x="7.9755%" y="709" width="0.3681%" height="15" fill="rgb(233,223,10)"/><text x="8.2255%" y="719.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="8.3436%" y="853" width="0.1227%" height="15" fill="rgb(215,21,27)"/><text x="8.5936%" y="863.50"></text></g><g><title>&lt;mysql::conn::ConnMut as core::ops::deref::Deref&gt;::deref (1 samples, 0.12%)</title><rect x="8.3436%" y="837" width="0.1227%" height="15" fill="rgb(232,23,21)"/><text x="8.5936%" y="847.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.12%)</title><rect x="8.4663%" y="693" width="0.1227%" height="15" fill="rgb(244,5,23)"/><text x="8.7163%" y="703.50"></text></g><g><title>hwloc_topology_destroy (1 samples, 0.12%)</title><rect x="8.4663%" y="677" width="0.1227%" height="15" fill="rgb(226,81,46)"/><text x="8.7163%" y="687.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.12%)</title><rect x="8.4663%" y="661" width="0.1227%" height="15" fill="rgb(247,70,30)"/><text x="8.7163%" y="671.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.12%)</title><rect x="8.4663%" y="645" width="0.1227%" height="15" fill="rgb(212,68,19)"/><text x="8.7163%" y="655.50"></text></g><g><title>dlclose (1 samples, 0.12%)</title><rect x="8.4663%" y="629" width="0.1227%" height="15" fill="rgb(240,187,13)"/><text x="8.7163%" y="639.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.12%)</title><rect x="8.4663%" y="613" width="0.1227%" height="15" fill="rgb(223,113,26)"/><text x="8.7163%" y="623.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.12%)</title><rect x="8.4663%" y="597" width="0.1227%" height="15" fill="rgb(206,192,2)"/><text x="8.7163%" y="607.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.12%)</title><rect x="8.4663%" y="581" width="0.1227%" height="15" fill="rgb(241,108,4)"/><text x="8.7163%" y="591.50"></text></g><g><title>_dl_close (1 samples, 0.12%)</title><rect x="8.4663%" y="565" width="0.1227%" height="15" fill="rgb(247,173,49)"/><text x="8.7163%" y="575.50"></text></g><g><title>_dl_close_worker (1 samples, 0.12%)</title><rect x="8.4663%" y="549" width="0.1227%" height="15" fill="rgb(224,114,35)"/><text x="8.7163%" y="559.50"></text></g><g><title>_dl_unmap (1 samples, 0.12%)</title><rect x="8.4663%" y="533" width="0.1227%" height="15" fill="rgb(245,159,27)"/><text x="8.7163%" y="543.50"></text></g><g><title>munmap (1 samples, 0.12%)</title><rect x="8.4663%" y="517" width="0.1227%" height="15" fill="rgb(245,172,44)"/><text x="8.7163%" y="527.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.12%)</title><rect x="8.4663%" y="501" width="0.1227%" height="15" fill="rgb(236,23,11)"/><text x="8.7163%" y="511.50"></text></g><g><title>do_syscall_64 (1 samples, 0.12%)</title><rect x="8.4663%" y="485" width="0.1227%" height="15" fill="rgb(205,117,38)"/><text x="8.7163%" y="495.50"></text></g><g><title>__x64_sys_munmap (1 samples, 0.12%)</title><rect x="8.4663%" y="469" width="0.1227%" height="15" fill="rgb(237,72,25)"/><text x="8.7163%" y="479.50"></text></g><g><title>__vm_munmap (1 samples, 0.12%)</title><rect x="8.4663%" y="453" width="0.1227%" height="15" fill="rgb(244,70,9)"/><text x="8.7163%" y="463.50"></text></g><g><title>__do_munmap (1 samples, 0.12%)</title><rect x="8.4663%" y="437" width="0.1227%" height="15" fill="rgb(217,125,39)"/><text x="8.7163%" y="447.50"></text></g><g><title>unmap_region (1 samples, 0.12%)</title><rect x="8.4663%" y="421" width="0.1227%" height="15" fill="rgb(235,36,10)"/><text x="8.7163%" y="431.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.12%)</title><rect x="8.4663%" y="405" width="0.1227%" height="15" fill="rgb(251,123,47)"/><text x="8.7163%" y="415.50"></text></g><g><title>release_pages (1 samples, 0.12%)</title><rect x="8.4663%" y="389" width="0.1227%" height="15" fill="rgb(221,13,13)"/><text x="8.7163%" y="399.50"></text></g><g><title>__local_bh_enable_ip (2 samples, 0.25%)</title><rect x="9.3252%" y="485" width="0.2454%" height="15" fill="rgb(238,131,9)"/><text x="9.5752%" y="495.50"></text></g><g><title>preempt_count_sub (2 samples, 0.25%)</title><rect x="9.3252%" y="469" width="0.2454%" height="15" fill="rgb(211,50,8)"/><text x="9.5752%" y="479.50"></text></g><g><title>__ip_local_out (1 samples, 0.12%)</title><rect x="10.5521%" y="405" width="0.1227%" height="15" fill="rgb(245,182,24)"/><text x="10.8021%" y="415.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.12%)</title><rect x="10.6748%" y="405" width="0.1227%" height="15" fill="rgb(242,14,37)"/><text x="10.9248%" y="415.50"></text></g><g><title>eth_type_trans (1 samples, 0.12%)</title><rect x="11.1656%" y="325" width="0.1227%" height="15" fill="rgb(246,228,12)"/><text x="11.4156%" y="335.50"></text></g><g><title>netif_rx (2 samples, 0.25%)</title><rect x="11.2883%" y="325" width="0.2454%" height="15" fill="rgb(213,55,15)"/><text x="11.5383%" y="335.50"></text></g><g><title>netif_rx_internal (2 samples, 0.25%)</title><rect x="11.2883%" y="309" width="0.2454%" height="15" fill="rgb(209,9,3)"/><text x="11.5383%" y="319.50"></text></g><g><title>ktime_get_with_offset (2 samples, 0.25%)</title><rect x="11.2883%" y="293" width="0.2454%" height="15" fill="rgb(230,59,30)"/><text x="11.5383%" y="303.50"></text></g><g><title>read_tsc (1 samples, 0.12%)</title><rect x="11.4110%" y="277" width="0.1227%" height="15" fill="rgb(209,121,21)"/><text x="11.6610%" y="287.50"></text></g><g><title>__dev_queue_xmit (6 samples, 0.74%)</title><rect x="10.9202%" y="373" width="0.7362%" height="15" fill="rgb(220,109,13)"/><text x="11.1702%" y="383.50"></text></g><g><title>dev_hard_start_xmit (6 samples, 0.74%)</title><rect x="10.9202%" y="357" width="0.7362%" height="15" fill="rgb(232,18,1)"/><text x="11.1702%" y="367.50"></text></g><g><title>loopback_xmit (6 samples, 0.74%)</title><rect x="10.9202%" y="341" width="0.7362%" height="15" fill="rgb(215,41,42)"/><text x="11.1702%" y="351.50"></text></g><g><title>tcp_wfree (1 samples, 0.12%)</title><rect x="11.5337%" y="325" width="0.1227%" height="15" fill="rgb(224,123,36)"/><text x="11.7837%" y="335.50"></text></g><g><title>irqtime_account_irq (1 samples, 0.12%)</title><rect x="11.7791%" y="309" width="0.1227%" height="15" fill="rgb(240,125,3)"/><text x="12.0291%" y="319.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.12%)</title><rect x="11.7791%" y="293" width="0.1227%" height="15" fill="rgb(205,98,50)"/><text x="12.0291%" y="303.50"></text></g><g><title>sched_clock (1 samples, 0.12%)</title><rect x="11.7791%" y="277" width="0.1227%" height="15" fill="rgb(205,185,37)"/><text x="12.0291%" y="287.50"></text></g><g><title>native_sched_clock (1 samples, 0.12%)</title><rect x="11.7791%" y="261" width="0.1227%" height="15" fill="rgb(238,207,15)"/><text x="12.0291%" y="271.50"></text></g><g><title>__netif_receive_skb_core (1 samples, 0.12%)</title><rect x="12.1472%" y="261" width="0.1227%" height="15" fill="rgb(213,199,42)"/><text x="12.3972%" y="271.50"></text></g><g><title>__inet_lookup_established (2 samples, 0.25%)</title><rect x="12.7607%" y="181" width="0.2454%" height="15" fill="rgb(235,201,11)"/><text x="13.0107%" y="191.50"></text></g><g><title>__tcp_ack_snd_check (1 samples, 0.12%)</title><rect x="13.3742%" y="149" width="0.1227%" height="15" fill="rgb(207,46,11)"/><text x="13.6242%" y="159.50"></text></g><g><title>sk_reset_timer (2 samples, 0.25%)</title><rect x="13.4969%" y="149" width="0.2454%" height="15" fill="rgb(241,35,35)"/><text x="13.7469%" y="159.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.12%)</title><rect x="13.8650%" y="85" width="0.1227%" height="15" fill="rgb(243,32,47)"/><text x="14.1150%" y="95.50"></text></g><g><title>psi_flags_change (1 samples, 0.12%)</title><rect x="13.9877%" y="53" width="0.1227%" height="15" fill="rgb(247,202,23)"/><text x="14.2377%" y="63.50"></text></g><g><title>psi_task_change (2 samples, 0.25%)</title><rect x="13.9877%" y="69" width="0.2454%" height="15" fill="rgb(219,102,11)"/><text x="14.2377%" y="79.50"></text></g><g><title>psi_group_change (1 samples, 0.12%)</title><rect x="14.1104%" y="53" width="0.1227%" height="15" fill="rgb(243,110,44)"/><text x="14.3604%" y="63.50"></text></g><g><title>enqueue_task (3 samples, 0.37%)</title><rect x="13.9877%" y="85" width="0.3681%" height="15" fill="rgb(222,74,54)"/><text x="14.2377%" y="95.50"></text></g><g><title>uclamp_rq_inc_id (1 samples, 0.12%)</title><rect x="14.2331%" y="69" width="0.1227%" height="15" fill="rgb(216,99,12)"/><text x="14.4831%" y="79.50"></text></g><g><title>account_entity_enqueue (1 samples, 0.12%)</title><rect x="14.4785%" y="53" width="0.1227%" height="15" fill="rgb(226,22,26)"/><text x="14.7285%" y="63.50"></text></g><g><title>enqueue_task_fair (4 samples, 0.49%)</title><rect x="14.3558%" y="85" width="0.4908%" height="15" fill="rgb(217,163,10)"/><text x="14.6058%" y="95.50"></text></g><g><title>enqueue_entity (4 samples, 0.49%)</title><rect x="14.3558%" y="69" width="0.4908%" height="15" fill="rgb(213,25,53)"/><text x="14.6058%" y="79.50"></text></g><g><title>update_load_avg (2 samples, 0.25%)</title><rect x="14.6012%" y="53" width="0.2454%" height="15" fill="rgb(252,105,26)"/><text x="14.8512%" y="63.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.12%)</title><rect x="14.7239%" y="37" width="0.1227%" height="15" fill="rgb(220,39,43)"/><text x="14.9739%" y="47.50"></text></g><g><title>find_first_bit (1 samples, 0.12%)</title><rect x="14.8466%" y="85" width="0.1227%" height="15" fill="rgb(229,68,48)"/><text x="15.0966%" y="95.50"></text></g><g><title>__wake_up_common (12 samples, 1.47%)</title><rect x="13.8650%" y="117" width="1.4724%" height="15" fill="rgb(252,8,32)"/><text x="14.1150%" y="127.50"></text></g><g><title>try_to_wake_up (12 samples, 1.47%)</title><rect x="13.8650%" y="101" width="1.4724%" height="15" fill="rgb(223,20,43)"/><text x="14.1150%" y="111.50"></text></g><g><title>ttwu_do_wakeup (3 samples, 0.37%)</title><rect x="14.9693%" y="85" width="0.3681%" height="15" fill="rgb(229,81,49)"/><text x="15.2193%" y="95.50"></text></g><g><title>check_preempt_curr (3 samples, 0.37%)</title><rect x="14.9693%" y="69" width="0.3681%" height="15" fill="rgb(236,28,36)"/><text x="15.2193%" y="79.50"></text></g><g><title>resched_curr (3 samples, 0.37%)</title><rect x="14.9693%" y="53" width="0.3681%" height="15" fill="rgb(249,185,26)"/><text x="15.2193%" y="63.50"></text></g><g><title>sock_def_readable (15 samples, 1.84%)</title><rect x="13.7423%" y="149" width="1.8405%" height="15" fill="rgb(249,174,33)"/><text x="13.9923%" y="159.50">s..</text></g><g><title>__wake_up_common_lock (15 samples, 1.84%)</title><rect x="13.7423%" y="133" width="1.8405%" height="15" fill="rgb(233,201,37)"/><text x="13.9923%" y="143.50">_..</text></g><g><title>_raw_spin_lock_irqsave (2 samples, 0.25%)</title><rect x="15.3374%" y="117" width="0.2454%" height="15" fill="rgb(221,78,26)"/><text x="15.5874%" y="127.50"></text></g><g><title>kfree (1 samples, 0.12%)</title><rect x="15.9509%" y="117" width="0.1227%" height="15" fill="rgb(250,127,30)"/><text x="16.2009%" y="127.50"></text></g><g><title>__slab_free (1 samples, 0.12%)</title><rect x="15.9509%" y="101" width="0.1227%" height="15" fill="rgb(230,49,44)"/><text x="16.2009%" y="111.50"></text></g><g><title>__kfree_skb (6 samples, 0.74%)</title><rect x="15.9509%" y="133" width="0.7362%" height="15" fill="rgb(229,67,23)"/><text x="16.2009%" y="143.50"></text></g><g><title>skb_release_data (5 samples, 0.61%)</title><rect x="16.0736%" y="117" width="0.6135%" height="15" fill="rgb(249,83,47)"/><text x="16.3236%" y="127.50"></text></g><g><title>bictcp_acked (1 samples, 0.12%)</title><rect x="16.6871%" y="133" width="0.1227%" height="15" fill="rgb(215,43,3)"/><text x="16.9371%" y="143.50"></text></g><g><title>tcp_ack_update_rtt (2 samples, 0.25%)</title><rect x="16.8098%" y="133" width="0.2454%" height="15" fill="rgb(238,154,13)"/><text x="17.0598%" y="143.50"></text></g><g><title>__usecs_to_jiffies (1 samples, 0.12%)</title><rect x="16.9325%" y="117" width="0.1227%" height="15" fill="rgb(219,56,2)"/><text x="17.1825%" y="127.50"></text></g><g><title>tcp_chrono_stop (1 samples, 0.12%)</title><rect x="17.0552%" y="133" width="0.1227%" height="15" fill="rgb(233,0,4)"/><text x="17.3052%" y="143.50"></text></g><g><title>tcp_ack (14 samples, 1.72%)</title><rect x="15.5828%" y="149" width="1.7178%" height="15" fill="rgb(235,30,7)"/><text x="15.8328%" y="159.50"></text></g><g><title>tcp_schedule_loss_probe (1 samples, 0.12%)</title><rect x="17.1779%" y="133" width="0.1227%" height="15" fill="rgb(250,79,13)"/><text x="17.4279%" y="143.50"></text></g><g><title>tcp_queue_rcv (2 samples, 0.25%)</title><rect x="17.3006%" y="149" width="0.2454%" height="15" fill="rgb(211,146,34)"/><text x="17.5506%" y="159.50"></text></g><g><title>ip_local_deliver (42 samples, 5.15%)</title><rect x="12.5153%" y="245" width="5.1534%" height="15" fill="rgb(228,22,38)"/><text x="12.7653%" y="255.50">ip_loc..</text></g><g><title>ip_local_deliver_finish (42 samples, 5.15%)</title><rect x="12.5153%" y="229" width="5.1534%" height="15" fill="rgb(235,168,5)"/><text x="12.7653%" y="239.50">ip_loc..</text></g><g><title>ip_protocol_deliver_rcu (41 samples, 5.03%)</title><rect x="12.6380%" y="213" width="5.0307%" height="15" fill="rgb(221,155,16)"/><text x="12.8880%" y="223.50">ip_pro..</text></g><g><title>tcp_v4_rcv (41 samples, 5.03%)</title><rect x="12.6380%" y="197" width="5.0307%" height="15" fill="rgb(215,215,53)"/><text x="12.8880%" y="207.50">tcp_v4..</text></g><g><title>tcp_v4_do_rcv (38 samples, 4.66%)</title><rect x="13.0061%" y="181" width="4.6626%" height="15" fill="rgb(223,4,10)"/><text x="13.2561%" y="191.50">tcp_v..</text></g><g><title>tcp_rcv_established (38 samples, 4.66%)</title><rect x="13.0061%" y="165" width="4.6626%" height="15" fill="rgb(234,103,6)"/><text x="13.2561%" y="175.50">tcp_r..</text></g><g><title>tcp_send_delayed_ack (1 samples, 0.12%)</title><rect x="17.5460%" y="149" width="0.1227%" height="15" fill="rgb(227,97,0)"/><text x="17.7960%" y="159.50"></text></g><g><title>__netif_receive_skb_one_core (47 samples, 5.77%)</title><rect x="12.0245%" y="277" width="5.7669%" height="15" fill="rgb(234,150,53)"/><text x="12.2745%" y="287.50">__netif..</text></g><g><title>ip_rcv (45 samples, 5.52%)</title><rect x="12.2699%" y="261" width="5.5215%" height="15" fill="rgb(228,201,54)"/><text x="12.5199%" y="271.50">ip_rcv</text></g><g><title>ip_rcv_core (1 samples, 0.12%)</title><rect x="17.6687%" y="245" width="0.1227%" height="15" fill="rgb(222,22,37)"/><text x="17.9187%" y="255.50"></text></g><g><title>__rcu_read_unlock (2 samples, 0.25%)</title><rect x="17.7914%" y="277" width="0.2454%" height="15" fill="rgb(237,53,32)"/><text x="18.0414%" y="287.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.12%)</title><rect x="18.0368%" y="277" width="0.1227%" height="15" fill="rgb(233,25,53)"/><text x="18.2868%" y="287.50"></text></g><g><title>ip_finish_output2 (61 samples, 7.48%)</title><rect x="10.7975%" y="389" width="7.4847%" height="15" fill="rgb(210,40,34)"/><text x="11.0475%" y="399.50">ip_finish_..</text></g><g><title>__local_bh_enable_ip (54 samples, 6.63%)</title><rect x="11.6564%" y="373" width="6.6258%" height="15" fill="rgb(241,220,44)"/><text x="11.9064%" y="383.50">__local_b..</text></g><g><title>do_softirq (54 samples, 6.63%)</title><rect x="11.6564%" y="357" width="6.6258%" height="15" fill="rgb(235,28,35)"/><text x="11.9064%" y="367.50">do_softirq</text></g><g><title>do_softirq_own_stack (53 samples, 6.50%)</title><rect x="11.7791%" y="341" width="6.5031%" height="15" fill="rgb(210,56,17)"/><text x="12.0291%" y="351.50">do_softir..</text></g><g><title>__do_softirq (53 samples, 6.50%)</title><rect x="11.7791%" y="325" width="6.5031%" height="15" fill="rgb(224,130,29)"/><text x="12.0291%" y="335.50">__do_soft..</text></g><g><title>net_rx_action (52 samples, 6.38%)</title><rect x="11.9018%" y="309" width="6.3804%" height="15" fill="rgb(235,212,8)"/><text x="12.1518%" y="319.50">net_rx_a..</text></g><g><title>process_backlog (52 samples, 6.38%)</title><rect x="11.9018%" y="293" width="6.3804%" height="15" fill="rgb(223,33,50)"/><text x="12.1518%" y="303.50">process_..</text></g><g><title>_raw_spin_unlock (1 samples, 0.12%)</title><rect x="18.1595%" y="277" width="0.1227%" height="15" fill="rgb(219,149,13)"/><text x="18.4095%" y="287.50"></text></g><g><title>preempt_count_sub (1 samples, 0.12%)</title><rect x="18.1595%" y="261" width="0.1227%" height="15" fill="rgb(250,156,29)"/><text x="18.4095%" y="271.50"></text></g><g><title>ip_output (62 samples, 7.61%)</title><rect x="10.7975%" y="405" width="7.6074%" height="15" fill="rgb(216,193,19)"/><text x="11.0475%" y="415.50">ip_output</text></g><g><title>ip_finish_output (1 samples, 0.12%)</title><rect x="18.2822%" y="389" width="0.1227%" height="15" fill="rgb(216,135,14)"/><text x="18.5322%" y="399.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (1 samples, 0.12%)</title><rect x="18.2822%" y="373" width="0.1227%" height="15" fill="rgb(241,47,5)"/><text x="18.5322%" y="383.50"></text></g><g><title>preempt_count_sub (1 samples, 0.12%)</title><rect x="18.2822%" y="357" width="0.1227%" height="15" fill="rgb(233,42,35)"/><text x="18.5322%" y="367.50"></text></g><g><title>__ip_queue_xmit (66 samples, 8.10%)</title><rect x="10.4294%" y="421" width="8.0982%" height="15" fill="rgb(231,13,6)"/><text x="10.6794%" y="431.50">__ip_queue_..</text></g><g><title>skb_push (1 samples, 0.12%)</title><rect x="18.4049%" y="405" width="0.1227%" height="15" fill="rgb(207,181,40)"/><text x="18.6549%" y="415.50"></text></g><g><title>__tcp_transmit_skb (70 samples, 8.59%)</title><rect x="10.0613%" y="437" width="8.5890%" height="15" fill="rgb(254,173,49)"/><text x="10.3113%" y="447.50">__tcp_transm..</text></g><g><title>tcp_established_options (1 samples, 0.12%)</title><rect x="18.5276%" y="421" width="0.1227%" height="15" fill="rgb(221,1,38)"/><text x="18.7776%" y="431.50"></text></g><g><title>sk_reset_timer (1 samples, 0.12%)</title><rect x="18.6503%" y="421" width="0.1227%" height="15" fill="rgb(206,124,46)"/><text x="18.9003%" y="431.50"></text></g><g><title>__mod_timer (1 samples, 0.12%)</title><rect x="18.6503%" y="405" width="0.1227%" height="15" fill="rgb(249,21,11)"/><text x="18.9003%" y="415.50"></text></g><g><title>lock_timer_base.constprop.0 (1 samples, 0.12%)</title><rect x="18.6503%" y="389" width="0.1227%" height="15" fill="rgb(222,201,40)"/><text x="18.9003%" y="399.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.12%)</title><rect x="18.6503%" y="373" width="0.1227%" height="15" fill="rgb(235,61,29)"/><text x="18.9003%" y="383.50"></text></g><g><title>preempt_count_add (1 samples, 0.12%)</title><rect x="18.6503%" y="357" width="0.1227%" height="15" fill="rgb(219,207,3)"/><text x="18.9003%" y="367.50"></text></g><g><title>in_lock_functions (1 samples, 0.12%)</title><rect x="18.6503%" y="341" width="0.1227%" height="15" fill="rgb(222,56,46)"/><text x="18.9003%" y="351.50"></text></g><g><title>tcp_event_new_data_sent (2 samples, 0.25%)</title><rect x="18.6503%" y="437" width="0.2454%" height="15" fill="rgb(239,76,54)"/><text x="18.9003%" y="447.50"></text></g><g><title>tcp_rbtree_insert (1 samples, 0.12%)</title><rect x="18.7730%" y="421" width="0.1227%" height="15" fill="rgb(231,124,27)"/><text x="19.0230%" y="431.50"></text></g><g><title>__tcp_push_pending_frames (74 samples, 9.08%)</title><rect x="9.9387%" y="469" width="9.0798%" height="15" fill="rgb(249,195,6)"/><text x="10.1887%" y="479.50">__tcp_push_pe..</text></g><g><title>tcp_write_xmit (74 samples, 9.08%)</title><rect x="9.9387%" y="453" width="9.0798%" height="15" fill="rgb(237,174,47)"/><text x="10.1887%" y="463.50">tcp_write_xmit</text></g><g><title>tcp_schedule_loss_probe.part.0 (1 samples, 0.12%)</title><rect x="18.8957%" y="437" width="0.1227%" height="15" fill="rgb(206,201,31)"/><text x="19.1457%" y="447.50"></text></g><g><title>sk_page_frag_refill (3 samples, 0.37%)</title><rect x="19.0184%" y="469" width="0.3681%" height="15" fill="rgb(231,57,52)"/><text x="19.2684%" y="479.50"></text></g><g><title>skb_page_frag_refill (2 samples, 0.25%)</title><rect x="19.1411%" y="453" width="0.2454%" height="15" fill="rgb(248,177,22)"/><text x="19.3911%" y="463.50"></text></g><g><title>__kmalloc_node_track_caller (2 samples, 0.25%)</title><rect x="19.7546%" y="437" width="0.2454%" height="15" fill="rgb(215,211,37)"/><text x="20.0046%" y="447.50"></text></g><g><title>memset_erms (1 samples, 0.12%)</title><rect x="19.8773%" y="421" width="0.1227%" height="15" fill="rgb(241,128,51)"/><text x="20.1273%" y="431.50"></text></g><g><title>__ksize (2 samples, 0.25%)</title><rect x="20.0000%" y="437" width="0.2454%" height="15" fill="rgb(227,165,31)"/><text x="20.2500%" y="447.50"></text></g><g><title>sk_stream_alloc_skb (9 samples, 1.10%)</title><rect x="19.3865%" y="469" width="1.1043%" height="15" fill="rgb(228,167,24)"/><text x="19.6365%" y="479.50"></text></g><g><title>__alloc_skb (8 samples, 0.98%)</title><rect x="19.5092%" y="453" width="0.9816%" height="15" fill="rgb(228,143,12)"/><text x="19.7592%" y="463.50"></text></g><g><title>kmem_cache_alloc_node (2 samples, 0.25%)</title><rect x="20.2454%" y="437" width="0.2454%" height="15" fill="rgb(249,149,8)"/><text x="20.4954%" y="447.50"></text></g><g><title>memset_erms (1 samples, 0.12%)</title><rect x="20.3681%" y="421" width="0.1227%" height="15" fill="rgb(243,35,44)"/><text x="20.6181%" y="431.50"></text></g><g><title>skb_do_copy_data_nocache (2 samples, 0.25%)</title><rect x="20.4908%" y="469" width="0.2454%" height="15" fill="rgb(246,89,9)"/><text x="20.7408%" y="479.50"></text></g><g><title>_copy_from_iter_full (2 samples, 0.25%)</title><rect x="20.4908%" y="453" width="0.2454%" height="15" fill="rgb(233,213,13)"/><text x="20.7408%" y="463.50"></text></g><g><title>copy_user_enhanced_fast_string (1 samples, 0.12%)</title><rect x="20.6135%" y="437" width="0.1227%" height="15" fill="rgb(233,141,41)"/><text x="20.8635%" y="447.50"></text></g><g><title>tcp_push (1 samples, 0.12%)</title><rect x="20.7362%" y="469" width="0.1227%" height="15" fill="rgb(239,167,4)"/><text x="20.9862%" y="479.50"></text></g><g><title>do_syscall_64 (98 samples, 12.02%)</title><rect x="8.9571%" y="565" width="12.0245%" height="15" fill="rgb(209,217,16)"/><text x="9.2071%" y="575.50">do_syscall_64</text></g><g><title>__x64_sys_sendto (98 samples, 12.02%)</title><rect x="8.9571%" y="549" width="12.0245%" height="15" fill="rgb(219,88,35)"/><text x="9.2071%" y="559.50">__x64_sys_sendto</text></g><g><title>__sys_sendto (97 samples, 11.90%)</title><rect x="9.0798%" y="533" width="11.9018%" height="15" fill="rgb(220,193,23)"/><text x="9.3298%" y="543.50">__sys_sendto</text></g><g><title>sock_sendmsg (96 samples, 11.78%)</title><rect x="9.2025%" y="517" width="11.7791%" height="15" fill="rgb(230,90,52)"/><text x="9.4525%" y="527.50">sock_sendmsg</text></g><g><title>tcp_sendmsg (96 samples, 11.78%)</title><rect x="9.2025%" y="501" width="11.7791%" height="15" fill="rgb(252,106,19)"/><text x="9.4525%" y="511.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (93 samples, 11.41%)</title><rect x="9.5706%" y="485" width="11.4110%" height="15" fill="rgb(206,74,20)"/><text x="9.8206%" y="495.50">tcp_sendmsg_locked</text></g><g><title>tcp_send_mss (1 samples, 0.12%)</title><rect x="20.8589%" y="469" width="0.1227%" height="15" fill="rgb(230,138,44)"/><text x="21.1089%" y="479.50"></text></g><g><title>tcp_current_mss (1 samples, 0.12%)</title><rect x="20.8589%" y="453" width="0.1227%" height="15" fill="rgb(235,182,43)"/><text x="21.1089%" y="463.50"></text></g><g><title>entry_SYSCALL_64 (105 samples, 12.88%)</title><rect x="8.9571%" y="581" width="12.8834%" height="15" fill="rgb(242,16,51)"/><text x="9.2071%" y="591.50">entry_SYSCALL_64</text></g><g><title>prepare_exit_to_usermode (7 samples, 0.86%)</title><rect x="20.9816%" y="565" width="0.8589%" height="15" fill="rgb(248,9,4)"/><text x="21.2316%" y="575.50"></text></g><g><title>__libc_start_main (112 samples, 13.74%)</title><rect x="8.4663%" y="853" width="13.7423%" height="15" fill="rgb(210,31,22)"/><text x="8.7163%" y="863.50">__libc_start_main</text></g><g><title>main (112 samples, 13.74%)</title><rect x="8.4663%" y="837" width="13.7423%" height="15" fill="rgb(239,54,39)"/><text x="8.7163%" y="847.50">main</text></g><g><title>std::rt::lang_start_internal (112 samples, 13.74%)</title><rect x="8.4663%" y="821" width="13.7423%" height="15" fill="rgb(230,99,41)"/><text x="8.7163%" y="831.50">std::rt::lang_start_i..</text></g><g><title>std::panic::catch_unwind (112 samples, 13.74%)</title><rect x="8.4663%" y="805" width="13.7423%" height="15" fill="rgb(253,106,12)"/><text x="8.7163%" y="815.50">std::panic::catch_unw..</text></g><g><title>std::panicking::try (112 samples, 13.74%)</title><rect x="8.4663%" y="789" width="13.7423%" height="15" fill="rgb(213,46,41)"/><text x="8.7163%" y="799.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (112 samples, 13.74%)</title><rect x="8.4663%" y="773" width="13.7423%" height="15" fill="rgb(215,133,35)"/><text x="8.7163%" y="783.50">std::panicking::try::..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (112 samples, 13.74%)</title><rect x="8.4663%" y="757" width="13.7423%" height="15" fill="rgb(213,28,5)"/><text x="8.7163%" y="767.50">core::ops::function::..</text></g><g><title>std::rt::lang_start::_{{closure}} (112 samples, 13.74%)</title><rect x="8.4663%" y="741" width="13.7423%" height="15" fill="rgb(215,77,49)"/><text x="8.7163%" y="751.50">std::rt::lang_start::..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (112 samples, 13.74%)</title><rect x="8.4663%" y="725" width="13.7423%" height="15" fill="rgb(248,100,22)"/><text x="8.7163%" y="735.50">std::sys_common::back..</text></g><g><title>lobsters::main (112 samples, 13.74%)</title><rect x="8.4663%" y="709" width="13.7423%" height="15" fill="rgb(208,67,9)"/><text x="8.7163%" y="719.50">lobsters::main</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (111 samples, 13.62%)</title><rect x="8.5890%" y="693" width="13.6196%" height="15" fill="rgb(219,133,21)"/><text x="8.8390%" y="703.50">mysql::conn::queryabl..</text></g><g><title>mysql::conn::Conn::_query (111 samples, 13.62%)</title><rect x="8.5890%" y="677" width="13.6196%" height="15" fill="rgb(246,46,29)"/><text x="8.8390%" y="687.50">mysql::conn::Conn::_q..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (111 samples, 13.62%)</title><rect x="8.5890%" y="661" width="13.6196%" height="15" fill="rgb(246,185,52)"/><text x="8.8390%" y="671.50">mysql_common::proto::..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (111 samples, 13.62%)</title><rect x="8.5890%" y="645" width="13.6196%" height="15" fill="rgb(252,136,11)"/><text x="8.8390%" y="655.50">std::io::buffered::Bu..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (109 samples, 13.37%)</title><rect x="8.8344%" y="629" width="13.3742%" height="15" fill="rgb(219,138,53)"/><text x="9.0844%" y="639.50">&lt;std::net::tcp::TcpS..</text></g><g><title>std::sys_common::net::TcpStream::write (109 samples, 13.37%)</title><rect x="8.8344%" y="613" width="13.3742%" height="15" fill="rgb(211,51,23)"/><text x="9.0844%" y="623.50">std::sys_common::net..</text></g><g><title>__libc_send (109 samples, 13.37%)</title><rect x="8.8344%" y="597" width="13.3742%" height="15" fill="rgb(247,221,28)"/><text x="9.0844%" y="607.50">__libc_send</text></g><g><title>syscall_return_via_sysret (3 samples, 0.37%)</title><rect x="21.8405%" y="581" width="0.3681%" height="15" fill="rgb(251,222,45)"/><text x="22.0905%" y="591.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.12%)</title><rect x="22.2086%" y="853" width="0.1227%" height="15" fill="rgb(217,162,53)"/><text x="22.4586%" y="863.50"></text></g><g><title>__rdl_realloc (1 samples, 0.12%)</title><rect x="22.3313%" y="853" width="0.1227%" height="15" fill="rgb(229,93,14)"/><text x="22.5813%" y="863.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.12%)</title><rect x="22.3313%" y="837" width="0.1227%" height="15" fill="rgb(209,67,49)"/><text x="22.5813%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.25%)</title><rect x="22.4540%" y="853" width="0.2454%" height="15" fill="rgb(213,87,29)"/><text x="22.7040%" y="863.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.12%)</title><rect x="22.6994%" y="853" width="0.1227%" height="15" fill="rgb(205,151,52)"/><text x="22.9494%" y="863.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (5 samples, 0.61%)</title><rect x="22.8221%" y="853" width="0.6135%" height="15" fill="rgb(253,215,39)"/><text x="23.0721%" y="863.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (5 samples, 0.61%)</title><rect x="22.8221%" y="837" width="0.6135%" height="15" fill="rgb(221,220,41)"/><text x="23.0721%" y="847.50"></text></g><g><title>decor::Shim::run_on_tcp (5 samples, 0.61%)</title><rect x="22.8221%" y="821" width="0.6135%" height="15" fill="rgb(218,133,21)"/><text x="23.0721%" y="831.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (5 samples, 0.61%)</title><rect x="22.8221%" y="805" width="0.6135%" height="15" fill="rgb(221,193,43)"/><text x="23.0721%" y="815.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (5 samples, 0.61%)</title><rect x="22.8221%" y="789" width="0.6135%" height="15" fill="rgb(240,128,52)"/><text x="23.0721%" y="799.50"></text></g><g><title>sql_parser::parser::parse_statements (5 samples, 0.61%)</title><rect x="22.8221%" y="773" width="0.6135%" height="15" fill="rgb(253,114,12)"/><text x="23.0721%" y="783.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (5 samples, 0.61%)</title><rect x="22.8221%" y="757" width="0.6135%" height="15" fill="rgb(215,223,47)"/><text x="23.0721%" y="767.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (5 samples, 0.61%)</title><rect x="22.8221%" y="741" width="0.6135%" height="15" fill="rgb(248,225,23)"/><text x="23.0721%" y="751.50"></text></g><g><title>sql_parser::tokenizer::PeekableChars::next (4 samples, 0.49%)</title><rect x="22.9448%" y="725" width="0.4908%" height="15" fill="rgb(250,108,0)"/><text x="23.1948%" y="735.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.12%)</title><rect x="23.4356%" y="853" width="0.1227%" height="15" fill="rgb(228,208,7)"/><text x="23.6856%" y="863.50"></text></g><g><title>decor::Shim::create_schema (1 samples, 0.12%)</title><rect x="23.5583%" y="853" width="0.1227%" height="15" fill="rgb(244,45,10)"/><text x="23.8083%" y="863.50"></text></g><g><title>sql_parser::parser::parse_statements (1 samples, 0.12%)</title><rect x="23.5583%" y="837" width="0.1227%" height="15" fill="rgb(207,125,25)"/><text x="23.8083%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (1 samples, 0.12%)</title><rect x="23.5583%" y="821" width="0.1227%" height="15" fill="rgb(210,195,18)"/><text x="23.8083%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_one_of_keywords (1 samples, 0.12%)</title><rect x="23.5583%" y="805" width="0.1227%" height="15" fill="rgb(249,80,12)"/><text x="23.8083%" y="815.50"></text></g><g><title>decor::Shim::run_on_tcp (1 samples, 0.12%)</title><rect x="23.6810%" y="853" width="0.1227%" height="15" fill="rgb(221,65,9)"/><text x="23.9310%" y="863.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (1 samples, 0.12%)</title><rect x="23.6810%" y="837" width="0.1227%" height="15" fill="rgb(235,49,36)"/><text x="23.9310%" y="847.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (1 samples, 0.12%)</title><rect x="23.6810%" y="821" width="0.1227%" height="15" fill="rgb(225,32,20)"/><text x="23.9310%" y="831.50"></text></g><g><title>decor::Shim::create_schema (1 samples, 0.12%)</title><rect x="23.6810%" y="805" width="0.1227%" height="15" fill="rgb(215,141,46)"/><text x="23.9310%" y="815.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (1 samples, 0.12%)</title><rect x="23.6810%" y="789" width="0.1227%" height="15" fill="rgb(250,160,47)"/><text x="23.9310%" y="799.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (1 samples, 0.12%)</title><rect x="23.6810%" y="773" width="0.1227%" height="15" fill="rgb(216,222,40)"/><text x="23.9310%" y="783.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.12%)</title><rect x="23.6810%" y="757" width="0.1227%" height="15" fill="rgb(234,217,39)"/><text x="23.9310%" y="767.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.12%)</title><rect x="23.6810%" y="741" width="0.1227%" height="15" fill="rgb(207,178,40)"/><text x="23.9310%" y="751.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.12%)</title><rect x="23.6810%" y="725" width="0.1227%" height="15" fill="rgb(221,136,13)"/><text x="23.9310%" y="735.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.12%)</title><rect x="23.6810%" y="709" width="0.1227%" height="15" fill="rgb(249,199,10)"/><text x="23.9310%" y="719.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1 samples, 0.12%)</title><rect x="23.6810%" y="693" width="0.1227%" height="15" fill="rgb(249,222,13)"/><text x="23.9310%" y="703.50"></text></g><g><title>__libc_send (1 samples, 0.12%)</title><rect x="23.6810%" y="677" width="0.1227%" height="15" fill="rgb(244,185,38)"/><text x="23.9310%" y="687.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.12%)</title><rect x="23.6810%" y="661" width="0.1227%" height="15" fill="rgb(236,202,9)"/><text x="23.9310%" y="671.50"></text></g><g><title>do_syscall_64 (1 samples, 0.12%)</title><rect x="23.6810%" y="645" width="0.1227%" height="15" fill="rgb(250,229,37)"/><text x="23.9310%" y="655.50"></text></g><g><title>__x64_sys_sendto (1 samples, 0.12%)</title><rect x="23.6810%" y="629" width="0.1227%" height="15" fill="rgb(206,174,23)"/><text x="23.9310%" y="639.50"></text></g><g><title>__sys_sendto (1 samples, 0.12%)</title><rect x="23.6810%" y="613" width="0.1227%" height="15" fill="rgb(211,33,43)"/><text x="23.9310%" y="623.50"></text></g><g><title>sockfd_lookup_light (1 samples, 0.12%)</title><rect x="23.6810%" y="597" width="0.1227%" height="15" fill="rgb(245,58,50)"/><text x="23.9310%" y="607.50"></text></g><g><title>__fget_light (1 samples, 0.12%)</title><rect x="23.6810%" y="581" width="0.1227%" height="15" fill="rgb(244,68,36)"/><text x="23.9310%" y="591.50"></text></g><g><title>hwloc::Topology::new (1 samples, 0.12%)</title><rect x="23.9264%" y="837" width="0.1227%" height="15" fill="rgb(232,229,15)"/><text x="24.1764%" y="847.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.12%)</title><rect x="23.9264%" y="821" width="0.1227%" height="15" fill="rgb(254,30,23)"/><text x="24.1764%" y="831.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.12%)</title><rect x="23.9264%" y="805" width="0.1227%" height="15" fill="rgb(235,160,14)"/><text x="24.1764%" y="815.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.12%)</title><rect x="23.9264%" y="789" width="0.1227%" height="15" fill="rgb(212,155,44)"/><text x="24.1764%" y="799.50"></text></g><g><title>dlopen (1 samples, 0.12%)</title><rect x="23.9264%" y="773" width="0.1227%" height="15" fill="rgb(226,2,50)"/><text x="24.1764%" y="783.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.12%)</title><rect x="23.9264%" y="757" width="0.1227%" height="15" fill="rgb(234,177,6)"/><text x="24.1764%" y="767.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.12%)</title><rect x="23.9264%" y="741" width="0.1227%" height="15" fill="rgb(217,24,9)"/><text x="24.1764%" y="751.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.12%)</title><rect x="23.9264%" y="725" width="0.1227%" height="15" fill="rgb(220,13,46)"/><text x="24.1764%" y="735.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.12%)</title><rect x="23.9264%" y="709" width="0.1227%" height="15" fill="rgb(239,221,27)"/><text x="24.1764%" y="719.50"></text></g><g><title>_dl_open (1 samples, 0.12%)</title><rect x="23.9264%" y="693" width="0.1227%" height="15" fill="rgb(222,198,25)"/><text x="24.1764%" y="703.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.12%)</title><rect x="23.9264%" y="677" width="0.1227%" height="15" fill="rgb(211,99,13)"/><text x="24.1764%" y="687.50"></text></g><g><title>dl_open_worker (1 samples, 0.12%)</title><rect x="23.9264%" y="661" width="0.1227%" height="15" fill="rgb(232,111,31)"/><text x="24.1764%" y="671.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.12%)</title><rect x="23.9264%" y="645" width="0.1227%" height="15" fill="rgb(245,82,37)"/><text x="24.1764%" y="655.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.12%)</title><rect x="23.9264%" y="629" width="0.1227%" height="15" fill="rgb(227,149,46)"/><text x="24.1764%" y="639.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.12%)</title><rect x="24.1718%" y="773" width="0.1227%" height="15" fill="rgb(218,36,50)"/><text x="24.4218%" y="783.50"></text></g><g><title>__pthread_disable_asynccancel (1 samples, 0.12%)</title><rect x="24.5399%" y="661" width="0.1227%" height="15" fill="rgb(226,80,48)"/><text x="24.7899%" y="671.50"></text></g><g><title>fput_many (1 samples, 0.12%)</title><rect x="25.0307%" y="597" width="0.1227%" height="15" fill="rgb(238,224,15)"/><text x="25.2807%" y="607.50"></text></g><g><title>skb_release_data (1 samples, 0.12%)</title><rect x="25.8896%" y="549" width="0.1227%" height="15" fill="rgb(241,136,10)"/><text x="26.1396%" y="559.50"></text></g><g><title>dst_release (1 samples, 0.12%)</title><rect x="26.0123%" y="533" width="0.1227%" height="15" fill="rgb(208,32,45)"/><text x="26.2623%" y="543.50"></text></g><g><title>__kfree_skb (3 samples, 0.37%)</title><rect x="25.8896%" y="565" width="0.3681%" height="15" fill="rgb(207,135,9)"/><text x="26.1396%" y="575.50"></text></g><g><title>skb_release_head_state (2 samples, 0.25%)</title><rect x="26.0123%" y="549" width="0.2454%" height="15" fill="rgb(206,86,44)"/><text x="26.2623%" y="559.50"></text></g><g><title>sock_rfree (1 samples, 0.12%)</title><rect x="26.1350%" y="533" width="0.1227%" height="15" fill="rgb(245,177,15)"/><text x="26.3850%" y="543.50"></text></g><g><title>lock_sock_nested (1 samples, 0.12%)</title><rect x="26.2577%" y="565" width="0.1227%" height="15" fill="rgb(206,64,50)"/><text x="26.5077%" y="575.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.12%)</title><rect x="26.2577%" y="549" width="0.1227%" height="15" fill="rgb(234,36,40)"/><text x="26.5077%" y="559.50"></text></g><g><title>release_sock (2 samples, 0.25%)</title><rect x="26.3804%" y="565" width="0.2454%" height="15" fill="rgb(213,64,8)"/><text x="26.6304%" y="575.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.12%)</title><rect x="26.5031%" y="549" width="0.1227%" height="15" fill="rgb(210,75,36)"/><text x="26.7531%" y="559.50"></text></g><g><title>preempt_count_add (1 samples, 0.12%)</title><rect x="26.5031%" y="533" width="0.1227%" height="15" fill="rgb(229,88,21)"/><text x="26.7531%" y="543.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.12%)</title><rect x="26.6258%" y="549" width="0.1227%" height="15" fill="rgb(252,204,47)"/><text x="26.8758%" y="559.50"></text></g><g><title>preempt_count_sub (1 samples, 0.12%)</title><rect x="26.6258%" y="533" width="0.1227%" height="15" fill="rgb(208,77,27)"/><text x="26.8758%" y="543.50"></text></g><g><title>_raw_spin_unlock_irqrestore (1 samples, 0.12%)</title><rect x="26.7485%" y="549" width="0.1227%" height="15" fill="rgb(221,76,26)"/><text x="26.9985%" y="559.50"></text></g><g><title>preempt_count_sub (1 samples, 0.12%)</title><rect x="26.7485%" y="533" width="0.1227%" height="15" fill="rgb(225,139,18)"/><text x="26.9985%" y="543.50"></text></g><g><title>add_wait_queue (1 samples, 0.12%)</title><rect x="26.8712%" y="549" width="0.1227%" height="15" fill="rgb(230,137,11)"/><text x="27.1212%" y="559.50"></text></g><g><title>remove_wait_queue (2 samples, 0.25%)</title><rect x="26.9939%" y="549" width="0.2454%" height="15" fill="rgb(212,28,1)"/><text x="27.2439%" y="559.50"></text></g><g><title>_raw_spin_lock_irqsave (2 samples, 0.25%)</title><rect x="26.9939%" y="533" width="0.2454%" height="15" fill="rgb(248,164,17)"/><text x="27.2439%" y="543.50"></text></g><g><title>preempt_count_add (1 samples, 0.12%)</title><rect x="27.1166%" y="517" width="0.1227%" height="15" fill="rgb(222,171,42)"/><text x="27.3666%" y="527.50"></text></g><g><title>__perf_event_task_sched_out (1 samples, 0.12%)</title><rect x="27.4847%" y="485" width="0.1227%" height="15" fill="rgb(243,84,45)"/><text x="27.7347%" y="495.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.12%)</title><rect x="27.4847%" y="469" width="0.1227%" height="15" fill="rgb(252,49,23)"/><text x="27.7347%" y="479.50"></text></g><g><title>__calc_delta (2 samples, 0.25%)</title><rect x="27.8528%" y="437" width="0.2454%" height="15" fill="rgb(215,19,7)"/><text x="28.1028%" y="447.50"></text></g><g><title>update_curr (3 samples, 0.37%)</title><rect x="27.8528%" y="453" width="0.3681%" height="15" fill="rgb(238,81,41)"/><text x="28.1028%" y="463.50"></text></g><g><title>__cgroup_account_cputime (1 samples, 0.12%)</title><rect x="28.0982%" y="437" width="0.1227%" height="15" fill="rgb(210,199,37)"/><text x="28.3482%" y="447.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.12%)</title><rect x="28.2209%" y="437" width="0.1227%" height="15" fill="rgb(244,192,49)"/><text x="28.4709%" y="447.50"></text></g><g><title>dequeue_task_fair (7 samples, 0.86%)</title><rect x="27.6074%" y="485" width="0.8589%" height="15" fill="rgb(226,211,11)"/><text x="27.8574%" y="495.50"></text></g><g><title>dequeue_entity (5 samples, 0.61%)</title><rect x="27.8528%" y="469" width="0.6135%" height="15" fill="rgb(236,162,54)"/><text x="28.1028%" y="479.50"></text></g><g><title>update_load_avg (2 samples, 0.25%)</title><rect x="28.2209%" y="453" width="0.2454%" height="15" fill="rgb(220,229,9)"/><text x="28.4709%" y="463.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.12%)</title><rect x="28.3436%" y="437" width="0.1227%" height="15" fill="rgb(250,87,22)"/><text x="28.5936%" y="447.50"></text></g><g><title>finish_task_switch (1 samples, 0.12%)</title><rect x="28.4663%" y="485" width="0.1227%" height="15" fill="rgb(239,43,17)"/><text x="28.7163%" y="495.50"></text></g><g><title>__perf_event_task_sched_in (1 samples, 0.12%)</title><rect x="28.4663%" y="469" width="0.1227%" height="15" fill="rgb(231,177,25)"/><text x="28.7163%" y="479.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (1 samples, 0.12%)</title><rect x="28.4663%" y="453" width="0.1227%" height="15" fill="rgb(219,179,1)"/><text x="28.7163%" y="463.50"></text></g><g><title>native_write_msr (1 samples, 0.12%)</title><rect x="28.4663%" y="437" width="0.1227%" height="15" fill="rgb(238,219,53)"/><text x="28.7163%" y="447.50"></text></g><g><title>pick_next_task_fair (2 samples, 0.25%)</title><rect x="28.5890%" y="485" width="0.2454%" height="15" fill="rgb(232,167,36)"/><text x="28.8390%" y="495.50"></text></g><g><title>newidle_balance (1 samples, 0.12%)</title><rect x="28.7117%" y="469" width="0.1227%" height="15" fill="rgb(244,19,51)"/><text x="28.9617%" y="479.50"></text></g><g><title>pick_next_task_idle (1 samples, 0.12%)</title><rect x="28.8344%" y="485" width="0.1227%" height="15" fill="rgb(224,6,22)"/><text x="29.0844%" y="495.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.12%)</title><rect x="28.8344%" y="469" width="0.1227%" height="15" fill="rgb(224,145,5)"/><text x="29.0844%" y="479.50"></text></g><g><title>psi_task_change (1 samples, 0.12%)</title><rect x="28.9571%" y="485" width="0.1227%" height="15" fill="rgb(234,130,49)"/><text x="29.2071%" y="495.50"></text></g><g><title>psi_group_change (1 samples, 0.12%)</title><rect x="28.9571%" y="469" width="0.1227%" height="15" fill="rgb(254,6,2)"/><text x="29.2071%" y="479.50"></text></g><g><title>record_times (1 samples, 0.12%)</title><rect x="28.9571%" y="453" width="0.1227%" height="15" fill="rgb(208,96,46)"/><text x="29.2071%" y="463.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.12%)</title><rect x="28.9571%" y="437" width="0.1227%" height="15" fill="rgb(239,3,39)"/><text x="29.2071%" y="447.50"></text></g><g><title>sched_clock (1 samples, 0.12%)</title><rect x="28.9571%" y="421" width="0.1227%" height="15" fill="rgb(233,210,1)"/><text x="29.2071%" y="431.50"></text></g><g><title>native_sched_clock (1 samples, 0.12%)</title><rect x="28.9571%" y="405" width="0.1227%" height="15" fill="rgb(244,137,37)"/><text x="29.2071%" y="415.50"></text></g><g><title>put_prev_task_fair (1 samples, 0.12%)</title><rect x="29.0798%" y="485" width="0.1227%" height="15" fill="rgb(240,136,2)"/><text x="29.3298%" y="495.50"></text></g><g><title>uclamp_rq_dec_id (1 samples, 0.12%)</title><rect x="29.2025%" y="485" width="0.1227%" height="15" fill="rgb(239,18,37)"/><text x="29.4525%" y="495.50"></text></g><g><title>sk_wait_data (24 samples, 2.94%)</title><rect x="26.6258%" y="565" width="2.9448%" height="15" fill="rgb(218,185,22)"/><text x="26.8758%" y="575.50">sk..</text></g><g><title>wait_woken (19 samples, 2.33%)</title><rect x="27.2393%" y="549" width="2.3313%" height="15" fill="rgb(225,218,4)"/><text x="27.4893%" y="559.50">w..</text></g><g><title>schedule_timeout (19 samples, 2.33%)</title><rect x="27.2393%" y="533" width="2.3313%" height="15" fill="rgb(230,182,32)"/><text x="27.4893%" y="543.50">s..</text></g><g><title>schedule (18 samples, 2.21%)</title><rect x="27.3620%" y="517" width="2.2086%" height="15" fill="rgb(242,56,43)"/><text x="27.6120%" y="527.50">s..</text></g><g><title>__schedule (18 samples, 2.21%)</title><rect x="27.3620%" y="501" width="2.2086%" height="15" fill="rgb(233,99,24)"/><text x="27.6120%" y="511.50">_..</text></g><g><title>update_rq_clock (2 samples, 0.25%)</title><rect x="29.3252%" y="485" width="0.2454%" height="15" fill="rgb(234,209,42)"/><text x="29.5752%" y="495.50"></text></g><g><title>inet_recvmsg (40 samples, 4.91%)</title><rect x="25.1534%" y="597" width="4.9080%" height="15" fill="rgb(227,7,12)"/><text x="25.4034%" y="607.50">inet_r..</text></g><g><title>tcp_recvmsg (40 samples, 4.91%)</title><rect x="25.1534%" y="581" width="4.9080%" height="15" fill="rgb(245,203,43)"/><text x="25.4034%" y="591.50">tcp_re..</text></g><g><title>skb_copy_datagram_iter (4 samples, 0.49%)</title><rect x="29.5706%" y="565" width="0.4908%" height="15" fill="rgb(238,205,33)"/><text x="29.8206%" y="575.50"></text></g><g><title>__skb_datagram_iter (4 samples, 0.49%)</title><rect x="29.5706%" y="549" width="0.4908%" height="15" fill="rgb(231,56,7)"/><text x="29.8206%" y="559.50"></text></g><g><title>simple_copy_to_iter (1 samples, 0.12%)</title><rect x="29.9387%" y="533" width="0.1227%" height="15" fill="rgb(244,186,29)"/><text x="30.1887%" y="543.50"></text></g><g><title>__check_object_size (1 samples, 0.12%)</title><rect x="29.9387%" y="517" width="0.1227%" height="15" fill="rgb(234,111,31)"/><text x="30.1887%" y="527.50"></text></g><g><title>__x64_sys_recvfrom (44 samples, 5.40%)</title><rect x="24.7853%" y="629" width="5.3988%" height="15" fill="rgb(241,149,10)"/><text x="25.0353%" y="639.50">__x64_s..</text></g><g><title>__sys_recvfrom (43 samples, 5.28%)</title><rect x="24.9080%" y="613" width="5.2761%" height="15" fill="rgb(249,206,44)"/><text x="25.1580%" y="623.50">__sys_..</text></g><g><title>sockfd_lookup_light (1 samples, 0.12%)</title><rect x="30.0613%" y="597" width="0.1227%" height="15" fill="rgb(251,153,30)"/><text x="30.3113%" y="607.50"></text></g><g><title>__fget_light (1 samples, 0.12%)</title><rect x="30.0613%" y="581" width="0.1227%" height="15" fill="rgb(239,152,38)"/><text x="30.3113%" y="591.50"></text></g><g><title>syscall_slow_exit_work (1 samples, 0.12%)</title><rect x="30.1840%" y="629" width="0.1227%" height="15" fill="rgb(249,139,47)"/><text x="30.4340%" y="639.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.12%)</title><rect x="30.1840%" y="613" width="0.1227%" height="15" fill="rgb(244,64,35)"/><text x="30.4340%" y="623.50"></text></g><g><title>do_syscall_64 (46 samples, 5.64%)</title><rect x="24.7853%" y="645" width="5.6442%" height="15" fill="rgb(216,46,15)"/><text x="25.0353%" y="655.50">do_sysc..</text></g><g><title>syscall_trace_enter (1 samples, 0.12%)</title><rect x="30.3067%" y="629" width="0.1227%" height="15" fill="rgb(250,74,19)"/><text x="30.5567%" y="639.50"></text></g><g><title>__audit_syscall_entry (1 samples, 0.12%)</title><rect x="30.3067%" y="613" width="0.1227%" height="15" fill="rgb(249,42,33)"/><text x="30.5567%" y="623.50"></text></g><g><title>entry_SYSCALL_64 (52 samples, 6.38%)</title><rect x="24.6626%" y="661" width="6.3804%" height="15" fill="rgb(242,149,17)"/><text x="24.9126%" y="671.50">entry_SY..</text></g><g><title>prepare_exit_to_usermode (5 samples, 0.61%)</title><rect x="30.4294%" y="645" width="0.6135%" height="15" fill="rgb(244,29,21)"/><text x="30.6794%" y="655.50"></text></g><g><title>switch_fpu_return (2 samples, 0.25%)</title><rect x="30.7975%" y="629" width="0.2454%" height="15" fill="rgb(220,130,37)"/><text x="31.0475%" y="639.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (58 samples, 7.12%)</title><rect x="24.2945%" y="757" width="7.1166%" height="15" fill="rgb(211,67,2)"/><text x="24.5445%" y="767.50">&lt;std::io::..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (57 samples, 6.99%)</title><rect x="24.4172%" y="741" width="6.9939%" height="15" fill="rgb(235,68,52)"/><text x="24.6672%" y="751.50">&lt;std::net..</text></g><g><title>std::sys_common::net::TcpStream::read (57 samples, 6.99%)</title><rect x="24.4172%" y="725" width="6.9939%" height="15" fill="rgb(246,142,3)"/><text x="24.6672%" y="735.50">std::sys_..</text></g><g><title>std::sys::unix::net::Socket::read (57 samples, 6.99%)</title><rect x="24.4172%" y="709" width="6.9939%" height="15" fill="rgb(241,25,7)"/><text x="24.6672%" y="719.50">std::sys:..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (57 samples, 6.99%)</title><rect x="24.4172%" y="693" width="6.9939%" height="15" fill="rgb(242,119,39)"/><text x="24.6672%" y="703.50">std::sys:..</text></g><g><title>__libc_recv (57 samples, 6.99%)</title><rect x="24.4172%" y="677" width="6.9939%" height="15" fill="rgb(241,98,45)"/><text x="24.6672%" y="687.50">__libc_re..</text></g><g><title>syscall_return_via_sysret (3 samples, 0.37%)</title><rect x="31.0429%" y="661" width="0.3681%" height="15" fill="rgb(254,28,30)"/><text x="31.2929%" y="671.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (60 samples, 7.36%)</title><rect x="24.2945%" y="773" width="7.3620%" height="15" fill="rgb(241,142,54)"/><text x="24.5445%" y="783.50">&lt;mysql_com..</text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (2 samples, 0.25%)</title><rect x="31.4110%" y="757" width="0.2454%" height="15" fill="rgb(222,85,15)"/><text x="31.6610%" y="767.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (1 samples, 0.12%)</title><rect x="31.5337%" y="741" width="0.1227%" height="15" fill="rgb(210,85,47)"/><text x="31.7837%" y="751.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.12%)</title><rect x="31.5337%" y="725" width="0.1227%" height="15" fill="rgb(224,206,25)"/><text x="31.7837%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="31.5337%" y="709" width="0.1227%" height="15" fill="rgb(243,201,19)"/><text x="31.7837%" y="719.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.12%)</title><rect x="31.5337%" y="693" width="0.1227%" height="15" fill="rgb(236,59,4)"/><text x="31.7837%" y="703.50"></text></g><g><title>mysql::conn::Conn::read_packet (65 samples, 7.98%)</title><rect x="24.0491%" y="789" width="7.9755%" height="15" fill="rgb(254,179,45)"/><text x="24.2991%" y="799.50">mysql::conn..</text></g><g><title>_int_free (3 samples, 0.37%)</title><rect x="31.6564%" y="773" width="0.3681%" height="15" fill="rgb(226,14,10)"/><text x="31.9064%" y="783.50"></text></g><g><title>lobsters::main (69 samples, 8.47%)</title><rect x="23.8037%" y="853" width="8.4663%" height="15" fill="rgb(244,27,41)"/><text x="24.0537%" y="863.50">lobsters::ma..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (67 samples, 8.22%)</title><rect x="24.0491%" y="837" width="8.2209%" height="15" fill="rgb(235,35,32)"/><text x="24.2991%" y="847.50">mysql::conn..</text></g><g><title>mysql::conn::Conn::_query (67 samples, 8.22%)</title><rect x="24.0491%" y="821" width="8.2209%" height="15" fill="rgb(218,68,31)"/><text x="24.2991%" y="831.50">mysql::conn..</text></g><g><title>mysql::conn::Conn::handle_result_set (67 samples, 8.22%)</title><rect x="24.0491%" y="805" width="8.2209%" height="15" fill="rgb(207,120,37)"/><text x="24.2991%" y="815.50">mysql::conn..</text></g><g><title>mysql_common::packets::parse_ok_packet (2 samples, 0.25%)</title><rect x="32.0245%" y="789" width="0.2454%" height="15" fill="rgb(227,98,0)"/><text x="32.2745%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="32.2699%" y="773" width="0.1227%" height="15" fill="rgb(207,7,3)"/><text x="32.5199%" y="783.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.12%)</title><rect x="32.2699%" y="757" width="0.1227%" height="15" fill="rgb(206,98,19)"/><text x="32.5199%" y="767.50"></text></g><g><title>_int_realloc (1 samples, 0.12%)</title><rect x="32.2699%" y="741" width="0.1227%" height="15" fill="rgb(217,5,26)"/><text x="32.5199%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="32.2699%" y="725" width="0.1227%" height="15" fill="rgb(235,190,38)"/><text x="32.5199%" y="735.50"></text></g><g><title>page_fault (1 samples, 0.12%)</title><rect x="32.2699%" y="709" width="0.1227%" height="15" fill="rgb(247,86,24)"/><text x="32.5199%" y="719.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.12%)</title><rect x="32.2699%" y="693" width="0.1227%" height="15" fill="rgb(205,101,16)"/><text x="32.5199%" y="703.50"></text></g><g><title>handle_mm_fault (1 samples, 0.12%)</title><rect x="32.2699%" y="677" width="0.1227%" height="15" fill="rgb(246,168,33)"/><text x="32.5199%" y="687.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.12%)</title><rect x="32.2699%" y="661" width="0.1227%" height="15" fill="rgb(231,114,1)"/><text x="32.5199%" y="671.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.12%)</title><rect x="32.2699%" y="645" width="0.1227%" height="15" fill="rgb(207,184,53)"/><text x="32.5199%" y="655.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.12%)</title><rect x="32.2699%" y="629" width="0.1227%" height="15" fill="rgb(224,95,51)"/><text x="32.5199%" y="639.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.12%)</title><rect x="32.2699%" y="613" width="0.1227%" height="15" fill="rgb(212,188,45)"/><text x="32.5199%" y="623.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (2 samples, 0.25%)</title><rect x="32.2699%" y="853" width="0.2454%" height="15" fill="rgb(223,154,38)"/><text x="32.5199%" y="863.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (2 samples, 0.25%)</title><rect x="32.2699%" y="837" width="0.2454%" height="15" fill="rgb(251,22,52)"/><text x="32.5199%" y="847.50"></text></g><g><title>decor::Shim::create_schema (2 samples, 0.25%)</title><rect x="32.2699%" y="821" width="0.2454%" height="15" fill="rgb(229,209,22)"/><text x="32.5199%" y="831.50"></text></g><g><title>sql_parser::parser::parse_statements (2 samples, 0.25%)</title><rect x="32.2699%" y="805" width="0.2454%" height="15" fill="rgb(234,138,34)"/><text x="32.5199%" y="815.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (2 samples, 0.25%)</title><rect x="32.2699%" y="789" width="0.2454%" height="15" fill="rgb(212,95,11)"/><text x="32.5199%" y="799.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (1 samples, 0.12%)</title><rect x="32.3926%" y="773" width="0.1227%" height="15" fill="rgb(240,179,47)"/><text x="32.6426%" y="783.50"></text></g><g><title>msql_srv::resultset::QueryResultWriter&lt;W&gt;::start (1 samples, 0.12%)</title><rect x="32.5153%" y="853" width="0.1227%" height="15" fill="rgb(240,163,11)"/><text x="32.7653%" y="863.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.12%)</title><rect x="32.6380%" y="853" width="0.1227%" height="15" fill="rgb(236,37,12)"/><text x="32.8880%" y="863.50"></text></g><g><title>regex::compile::Compiler::c (1 samples, 0.12%)</title><rect x="32.7607%" y="821" width="0.1227%" height="15" fill="rgb(232,164,16)"/><text x="33.0107%" y="831.50"></text></g><g><title>regex::compile::Compiler::c_repeat_range (1 samples, 0.12%)</title><rect x="32.7607%" y="805" width="0.1227%" height="15" fill="rgb(244,205,15)"/><text x="33.0107%" y="815.50"></text></g><g><title>regex::compile::Compiler::c_class (1 samples, 0.12%)</title><rect x="32.7607%" y="789" width="0.1227%" height="15" fill="rgb(223,117,47)"/><text x="33.0107%" y="799.50"></text></g><g><title>regex::exec::ExecBuilder::build (2 samples, 0.25%)</title><rect x="32.7607%" y="853" width="0.2454%" height="15" fill="rgb(244,107,35)"/><text x="33.0107%" y="863.50"></text></g><g><title>regex::compile::Compiler::compile (2 samples, 0.25%)</title><rect x="32.7607%" y="837" width="0.2454%" height="15" fill="rgb(205,140,8)"/><text x="33.0107%" y="847.50"></text></g><g><title>regex::compile::Compiler::compile_finish (1 samples, 0.12%)</title><rect x="32.8834%" y="821" width="0.1227%" height="15" fill="rgb(228,84,46)"/><text x="33.1334%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.12%)</title><rect x="32.8834%" y="805" width="0.1227%" height="15" fill="rgb(254,188,9)"/><text x="33.1334%" y="815.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.25%)</title><rect x="33.2515%" y="773" width="0.2454%" height="15" fill="rgb(206,112,54)"/><text x="33.5015%" y="783.50"></text></g><g><title>_int_free (1 samples, 0.12%)</title><rect x="33.4969%" y="773" width="0.1227%" height="15" fill="rgb(216,84,49)"/><text x="33.7469%" y="783.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.12%)</title><rect x="33.6196%" y="773" width="0.1227%" height="15" fill="rgb(214,194,35)"/><text x="33.8696%" y="783.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.12%)</title><rect x="33.7423%" y="757" width="0.1227%" height="15" fill="rgb(249,28,3)"/><text x="33.9923%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.12%)</title><rect x="33.7423%" y="741" width="0.1227%" height="15" fill="rgb(222,56,52)"/><text x="33.9923%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.12%)</title><rect x="33.7423%" y="725" width="0.1227%" height="15" fill="rgb(245,217,50)"/><text x="33.9923%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.12%)</title><rect x="33.7423%" y="709" width="0.1227%" height="15" fill="rgb(213,201,24)"/><text x="33.9923%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.12%)</title><rect x="33.7423%" y="693" width="0.1227%" height="15" fill="rgb(248,116,28)"/><text x="33.9923%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.12%)</title><rect x="33.7423%" y="677" width="0.1227%" height="15" fill="rgb(219,72,43)"/><text x="33.9923%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.12%)</title><rect x="33.7423%" y="661" width="0.1227%" height="15" fill="rgb(209,138,14)"/><text x="33.9923%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.12%)</title><rect x="33.7423%" y="645" width="0.1227%" height="15" fill="rgb(222,18,33)"/><text x="33.9923%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.12%)</title><rect x="33.7423%" y="629" width="0.1227%" height="15" fill="rgb(213,199,7)"/><text x="33.9923%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.12%)</title><rect x="33.7423%" y="613" width="0.1227%" height="15" fill="rgb(250,110,10)"/><text x="33.9923%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.12%)</title><rect x="33.7423%" y="597" width="0.1227%" height="15" fill="rgb(248,123,6)"/><text x="33.9923%" y="607.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.12%)</title><rect x="33.7423%" y="581" width="0.1227%" height="15" fill="rgb(206,91,31)"/><text x="33.9923%" y="591.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.12%)</title><rect x="33.7423%" y="565" width="0.1227%" height="15" fill="rgb(211,154,13)"/><text x="33.9923%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (16 samples, 1.96%)</title><rect x="33.8650%" y="741" width="1.9632%" height="15" fill="rgb(225,148,7)"/><text x="34.1150%" y="751.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (16 samples, 1.96%)</title><rect x="33.8650%" y="725" width="1.9632%" height="15" fill="rgb(220,160,43)"/><text x="34.1150%" y="735.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (16 samples, 1.96%)</title><rect x="33.8650%" y="709" width="1.9632%" height="15" fill="rgb(213,52,39)"/><text x="34.1150%" y="719.50">a..</text></g><g><title>alloc::slice::hack::to_vec (16 samples, 1.96%)</title><rect x="33.8650%" y="693" width="1.9632%" height="15" fill="rgb(243,137,7)"/><text x="34.1150%" y="703.50">a..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (16 samples, 1.96%)</title><rect x="33.8650%" y="677" width="1.9632%" height="15" fill="rgb(230,79,13)"/><text x="34.1150%" y="687.50">a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (16 samples, 1.96%)</title><rect x="33.8650%" y="661" width="1.9632%" height="15" fill="rgb(247,105,23)"/><text x="34.1150%" y="671.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (16 samples, 1.96%)</title><rect x="33.8650%" y="645" width="1.9632%" height="15" fill="rgb(223,179,41)"/><text x="34.1150%" y="655.50">a..</text></g><g><title>core::intrinsics::copy_nonoverlapping (16 samples, 1.96%)</title><rect x="33.8650%" y="629" width="1.9632%" height="15" fill="rgb(218,9,34)"/><text x="34.1150%" y="639.50">c..</text></g><g><title>__memmove_avx_unaligned_erms (16 samples, 1.96%)</title><rect x="33.8650%" y="613" width="1.9632%" height="15" fill="rgb(222,106,8)"/><text x="34.1150%" y="623.50">_..</text></g><g><title>__GI___libc_free (1 samples, 0.12%)</title><rect x="35.8282%" y="741" width="0.1227%" height="15" fill="rgb(211,220,0)"/><text x="36.0782%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (19 samples, 2.33%)</title><rect x="33.7423%" y="773" width="2.3313%" height="15" fill="rgb(229,52,16)"/><text x="33.9923%" y="783.50">s..</text></g><g><title>sql_parser::parser::Parser::expected (18 samples, 2.21%)</title><rect x="33.8650%" y="757" width="2.2086%" height="15" fill="rgb(212,155,18)"/><text x="34.1150%" y="767.50">s..</text></g><g><title>_int_free (1 samples, 0.12%)</title><rect x="35.9509%" y="741" width="0.1227%" height="15" fill="rgb(242,21,14)"/><text x="36.2009%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.12%)</title><rect x="36.1963%" y="757" width="0.1227%" height="15" fill="rgb(222,19,48)"/><text x="36.4463%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.12%)</title><rect x="36.1963%" y="741" width="0.1227%" height="15" fill="rgb(232,45,27)"/><text x="36.4463%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.12%)</title><rect x="36.1963%" y="725" width="0.1227%" height="15" fill="rgb(249,103,42)"/><text x="36.4463%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.12%)</title><rect x="36.1963%" y="709" width="0.1227%" height="15" fill="rgb(246,81,33)"/><text x="36.4463%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.12%)</title><rect x="36.1963%" y="693" width="0.1227%" height="15" fill="rgb(252,33,42)"/><text x="36.4463%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.12%)</title><rect x="36.1963%" y="677" width="0.1227%" height="15" fill="rgb(209,212,41)"/><text x="36.4463%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.12%)</title><rect x="36.1963%" y="661" width="0.1227%" height="15" fill="rgb(207,154,6)"/><text x="36.4463%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.12%)</title><rect x="36.1963%" y="645" width="0.1227%" height="15" fill="rgb(223,64,47)"/><text x="36.4463%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.12%)</title><rect x="36.1963%" y="629" width="0.1227%" height="15" fill="rgb(211,161,38)"/><text x="36.4463%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.12%)</title><rect x="36.1963%" y="613" width="0.1227%" height="15" fill="rgb(219,138,40)"/><text x="36.4463%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.12%)</title><rect x="36.1963%" y="597" width="0.1227%" height="15" fill="rgb(241,228,46)"/><text x="36.4463%" y="607.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.12%)</title><rect x="36.1963%" y="581" width="0.1227%" height="15" fill="rgb(223,209,38)"/><text x="36.4463%" y="591.50"></text></g><g><title>_int_malloc (1 samples, 0.12%)</title><rect x="36.1963%" y="565" width="0.1227%" height="15" fill="rgb(236,164,45)"/><text x="36.4463%" y="575.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.12%)</title><rect x="36.3190%" y="757" width="0.1227%" height="15" fill="rgb(231,15,5)"/><text x="36.5690%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.12%)</title><rect x="36.3190%" y="741" width="0.1227%" height="15" fill="rgb(252,35,15)"/><text x="36.5690%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.12%)</title><rect x="36.3190%" y="725" width="0.1227%" height="15" fill="rgb(248,181,18)"/><text x="36.5690%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.12%)</title><rect x="36.3190%" y="709" width="0.1227%" height="15" fill="rgb(233,39,42)"/><text x="36.5690%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.12%)</title><rect x="36.3190%" y="693" width="0.1227%" height="15" fill="rgb(238,110,33)"/><text x="36.5690%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (29 samples, 3.56%)</title><rect x="33.0061%" y="853" width="3.5583%" height="15" fill="rgb(233,195,10)"/><text x="33.2561%" y="863.50">sql_..</text></g><g><title>sql_parser::parser::Parser::parse_query_body (29 samples, 3.56%)</title><rect x="33.0061%" y="837" width="3.5583%" height="15" fill="rgb(254,105,3)"/><text x="33.2561%" y="847.50">sql_..</text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (29 samples, 3.56%)</title><rect x="33.0061%" y="821" width="3.5583%" height="15" fill="rgb(221,225,9)"/><text x="33.2561%" y="831.50">sql_..</text></g><g><title>sql_parser::parser::Parser::check_descent (29 samples, 3.56%)</title><rect x="33.0061%" y="805" width="3.5583%" height="15" fill="rgb(224,227,45)"/><text x="33.2561%" y="815.50">sql_..</text></g><g><title>sql_parser::parser::Parser::parse_prefix (29 samples, 3.56%)</title><rect x="33.0061%" y="789" width="3.5583%" height="15" fill="rgb(229,198,43)"/><text x="33.2561%" y="799.50">sql_..</text></g><g><title>sql_parser::parser::Parser::parse_value (4 samples, 0.49%)</title><rect x="36.0736%" y="773" width="0.4908%" height="15" fill="rgb(206,209,35)"/><text x="36.3236%" y="783.50"></text></g><g><title>_int_free (1 samples, 0.12%)</title><rect x="36.4417%" y="757" width="0.1227%" height="15" fill="rgb(245,195,53)"/><text x="36.6917%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::expect_token (1 samples, 0.12%)</title><rect x="36.5644%" y="853" width="0.1227%" height="15" fill="rgb(240,92,26)"/><text x="36.8144%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (1 samples, 0.12%)</title><rect x="36.6871%" y="853" width="0.1227%" height="15" fill="rgb(207,40,23)"/><text x="36.9371%" y="863.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.25%)</title><rect x="36.8098%" y="757" width="0.2454%" height="15" fill="rgb(223,111,35)"/><text x="37.0598%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.25%)</title><rect x="36.8098%" y="741" width="0.2454%" height="15" fill="rgb(229,147,28)"/><text x="37.0598%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.25%)</title><rect x="36.8098%" y="725" width="0.2454%" height="15" fill="rgb(211,29,28)"/><text x="37.0598%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.25%)</title><rect x="36.8098%" y="709" width="0.2454%" height="15" fill="rgb(228,72,33)"/><text x="37.0598%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.25%)</title><rect x="36.8098%" y="693" width="0.2454%" height="15" fill="rgb(205,214,31)"/><text x="37.0598%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.25%)</title><rect x="36.8098%" y="677" width="0.2454%" height="15" fill="rgb(224,111,15)"/><text x="37.0598%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.25%)</title><rect x="36.8098%" y="661" width="0.2454%" height="15" fill="rgb(253,21,26)"/><text x="37.0598%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.25%)</title><rect x="36.8098%" y="645" width="0.2454%" height="15" fill="rgb(245,139,43)"/><text x="37.0598%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.25%)</title><rect x="36.8098%" y="629" width="0.2454%" height="15" fill="rgb(252,170,7)"/><text x="37.0598%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.25%)</title><rect x="36.8098%" y="613" width="0.2454%" height="15" fill="rgb(231,118,14)"/><text x="37.0598%" y="623.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.25%)</title><rect x="36.8098%" y="597" width="0.2454%" height="15" fill="rgb(238,83,0)"/><text x="37.0598%" y="607.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.25%)</title><rect x="36.8098%" y="581" width="0.2454%" height="15" fill="rgb(221,39,39)"/><text x="37.0598%" y="591.50"></text></g><g><title>_int_malloc (2 samples, 0.25%)</title><rect x="36.8098%" y="565" width="0.2454%" height="15" fill="rgb(222,119,46)"/><text x="37.0598%" y="575.50"></text></g><g><title>sysmalloc (2 samples, 0.25%)</title><rect x="36.8098%" y="549" width="0.2454%" height="15" fill="rgb(222,165,49)"/><text x="37.0598%" y="559.50"></text></g><g><title>page_fault (1 samples, 0.12%)</title><rect x="36.9325%" y="533" width="0.1227%" height="15" fill="rgb(219,113,52)"/><text x="37.1825%" y="543.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.12%)</title><rect x="36.9325%" y="517" width="0.1227%" height="15" fill="rgb(214,7,15)"/><text x="37.1825%" y="527.50"></text></g><g><title>handle_mm_fault (1 samples, 0.12%)</title><rect x="36.9325%" y="501" width="0.1227%" height="15" fill="rgb(235,32,4)"/><text x="37.1825%" y="511.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.12%)</title><rect x="36.9325%" y="485" width="0.1227%" height="15" fill="rgb(238,90,54)"/><text x="37.1825%" y="495.50"></text></g><g><title>mem_cgroup_try_charge_delay (1 samples, 0.12%)</title><rect x="36.9325%" y="469" width="0.1227%" height="15" fill="rgb(213,208,19)"/><text x="37.1825%" y="479.50"></text></g><g><title>mem_cgroup_try_charge (1 samples, 0.12%)</title><rect x="36.9325%" y="453" width="0.1227%" height="15" fill="rgb(233,156,4)"/><text x="37.1825%" y="463.50"></text></g><g><title>try_charge (1 samples, 0.12%)</title><rect x="36.9325%" y="437" width="0.1227%" height="15" fill="rgb(207,194,5)"/><text x="37.1825%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.12%)</title><rect x="37.1779%" y="613" width="0.1227%" height="15" fill="rgb(206,111,30)"/><text x="37.4279%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="37.1779%" y="597" width="0.1227%" height="15" fill="rgb(243,70,54)"/><text x="37.4279%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.12%)</title><rect x="37.1779%" y="581" width="0.1227%" height="15" fill="rgb(242,28,8)"/><text x="37.4279%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.12%)</title><rect x="37.1779%" y="565" width="0.1227%" height="15" fill="rgb(219,106,18)"/><text x="37.4279%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.12%)</title><rect x="37.1779%" y="549" width="0.1227%" height="15" fill="rgb(244,222,10)"/><text x="37.4279%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (1 samples, 0.12%)</title><rect x="37.1779%" y="533" width="0.1227%" height="15" fill="rgb(236,179,52)"/><text x="37.4279%" y="543.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.12%)</title><rect x="37.1779%" y="517" width="0.1227%" height="15" fill="rgb(213,23,39)"/><text x="37.4279%" y="527.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.12%)</title><rect x="37.1779%" y="501" width="0.1227%" height="15" fill="rgb(238,48,10)"/><text x="37.4279%" y="511.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.12%)</title><rect x="37.1779%" y="485" width="0.1227%" height="15" fill="rgb(251,196,23)"/><text x="37.4279%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.25%)</title><rect x="37.1779%" y="709" width="0.2454%" height="15" fill="rgb(250,152,24)"/><text x="37.4279%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.25%)</title><rect x="37.1779%" y="693" width="0.2454%" height="15" fill="rgb(209,150,17)"/><text x="37.4279%" y="703.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.25%)</title><rect x="37.1779%" y="677" width="0.2454%" height="15" fill="rgb(234,202,34)"/><text x="37.4279%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.25%)</title><rect x="37.1779%" y="661" width="0.2454%" height="15" fill="rgb(253,148,53)"/><text x="37.4279%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.25%)</title><rect x="37.1779%" y="645" width="0.2454%" height="15" fill="rgb(218,129,16)"/><text x="37.4279%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (2 samples, 0.25%)</title><rect x="37.1779%" y="629" width="0.2454%" height="15" fill="rgb(216,85,19)"/><text x="37.4279%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.12%)</title><rect x="37.3006%" y="613" width="0.1227%" height="15" fill="rgb(235,228,7)"/><text x="37.5506%" y="623.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="37.3006%" y="597" width="0.1227%" height="15" fill="rgb(245,175,0)"/><text x="37.5506%" y="607.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::fmt::Display&gt;::fmt (1 samples, 0.12%)</title><rect x="37.4233%" y="709" width="0.1227%" height="15" fill="rgb(208,168,36)"/><text x="37.6733%" y="719.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.12%)</title><rect x="37.4233%" y="693" width="0.1227%" height="15" fill="rgb(246,171,24)"/><text x="37.6733%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.12%)</title><rect x="37.4233%" y="677" width="0.1227%" height="15" fill="rgb(215,142,24)"/><text x="37.6733%" y="687.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.12%)</title><rect x="37.4233%" y="661" width="0.1227%" height="15" fill="rgb(250,187,7)"/><text x="37.6733%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.12%)</title><rect x="37.4233%" y="645" width="0.1227%" height="15" fill="rgb(228,66,33)"/><text x="37.6733%" y="655.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.12%)</title><rect x="37.4233%" y="629" width="0.1227%" height="15" fill="rgb(234,215,21)"/><text x="37.6733%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.12%)</title><rect x="37.4233%" y="613" width="0.1227%" height="15" fill="rgb(222,191,20)"/><text x="37.6733%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.12%)</title><rect x="37.4233%" y="597" width="0.1227%" height="15" fill="rgb(245,79,54)"/><text x="37.6733%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.12%)</title><rect x="37.4233%" y="581" width="0.1227%" height="15" fill="rgb(240,10,37)"/><text x="37.6733%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.12%)</title><rect x="37.4233%" y="565" width="0.1227%" height="15" fill="rgb(214,192,32)"/><text x="37.6733%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="37.4233%" y="549" width="0.1227%" height="15" fill="rgb(209,36,54)"/><text x="37.6733%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.12%)</title><rect x="37.4233%" y="533" width="0.1227%" height="15" fill="rgb(220,10,11)"/><text x="37.6733%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.12%)</title><rect x="37.4233%" y="517" width="0.1227%" height="15" fill="rgb(221,106,17)"/><text x="37.6733%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.12%)</title><rect x="37.4233%" y="501" width="0.1227%" height="15" fill="rgb(251,142,44)"/><text x="37.6733%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (1 samples, 0.12%)</title><rect x="37.4233%" y="485" width="0.1227%" height="15" fill="rgb(238,13,15)"/><text x="37.6733%" y="495.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.12%)</title><rect x="37.4233%" y="469" width="0.1227%" height="15" fill="rgb(208,107,27)"/><text x="37.6733%" y="479.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.12%)</title><rect x="37.4233%" y="453" width="0.1227%" height="15" fill="rgb(205,136,37)"/><text x="37.6733%" y="463.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (7 samples, 0.86%)</title><rect x="36.8098%" y="853" width="0.8589%" height="15" fill="rgb(250,205,27)"/><text x="37.0598%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (7 samples, 0.86%)</title><rect x="36.8098%" y="837" width="0.8589%" height="15" fill="rgb(210,80,43)"/><text x="37.0598%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (7 samples, 0.86%)</title><rect x="36.8098%" y="821" width="0.8589%" height="15" fill="rgb(247,160,36)"/><text x="37.0598%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (7 samples, 0.86%)</title><rect x="36.8098%" y="805" width="0.8589%" height="15" fill="rgb(234,13,49)"/><text x="37.0598%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (7 samples, 0.86%)</title><rect x="36.8098%" y="789" width="0.8589%" height="15" fill="rgb(234,122,0)"/><text x="37.0598%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::expected (7 samples, 0.86%)</title><rect x="36.8098%" y="773" width="0.8589%" height="15" fill="rgb(207,146,38)"/><text x="37.0598%" y="783.50"></text></g><g><title>alloc::fmt::format (5 samples, 0.61%)</title><rect x="37.0552%" y="757" width="0.6135%" height="15" fill="rgb(207,177,25)"/><text x="37.3052%" y="767.50"></text></g><g><title>core::fmt::Write::write_fmt (5 samples, 0.61%)</title><rect x="37.0552%" y="741" width="0.6135%" height="15" fill="rgb(211,178,42)"/><text x="37.3052%" y="751.50"></text></g><g><title>core::fmt::write (5 samples, 0.61%)</title><rect x="37.0552%" y="725" width="0.6135%" height="15" fill="rgb(230,69,54)"/><text x="37.3052%" y="735.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.12%)</title><rect x="37.5460%" y="709" width="0.1227%" height="15" fill="rgb(214,135,41)"/><text x="37.7960%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.25%)</title><rect x="37.7914%" y="789" width="0.2454%" height="15" fill="rgb(237,67,25)"/><text x="38.0414%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="38.0368%" y="789" width="0.1227%" height="15" fill="rgb(222,189,50)"/><text x="38.2868%" y="799.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.12%)</title><rect x="38.0368%" y="773" width="0.1227%" height="15" fill="rgb(245,148,34)"/><text x="38.2868%" y="783.50"></text></g><g><title>_int_realloc (1 samples, 0.12%)</title><rect x="38.0368%" y="757" width="0.1227%" height="15" fill="rgb(222,29,6)"/><text x="38.2868%" y="767.50"></text></g><g><title>_int_free (1 samples, 0.12%)</title><rect x="38.0368%" y="741" width="0.1227%" height="15" fill="rgb(221,189,43)"/><text x="38.2868%" y="751.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.12%)</title><rect x="38.1595%" y="789" width="0.1227%" height="15" fill="rgb(207,36,27)"/><text x="38.4095%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (6 samples, 0.74%)</title><rect x="37.7914%" y="805" width="0.7362%" height="15" fill="rgb(217,90,24)"/><text x="38.0414%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (2 samples, 0.25%)</title><rect x="38.2822%" y="789" width="0.2454%" height="15" fill="rgb(224,66,35)"/><text x="38.5322%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::get_next_precedence (1 samples, 0.12%)</title><rect x="38.4049%" y="773" width="0.1227%" height="15" fill="rgb(221,13,50)"/><text x="38.6549%" y="783.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (13 samples, 1.60%)</title><rect x="37.6687%" y="853" width="1.5951%" height="15" fill="rgb(236,68,49)"/><text x="37.9187%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (13 samples, 1.60%)</title><rect x="37.6687%" y="837" width="1.5951%" height="15" fill="rgb(229,146,28)"/><text x="37.9187%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (13 samples, 1.60%)</title><rect x="37.6687%" y="821" width="1.5951%" height="15" fill="rgb(225,31,38)"/><text x="37.9187%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (6 samples, 0.74%)</title><rect x="38.5276%" y="805" width="0.7362%" height="15" fill="rgb(250,208,3)"/><text x="38.7776%" y="815.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.25%)</title><rect x="39.0184%" y="789" width="0.2454%" height="15" fill="rgb(246,54,23)"/><text x="39.2684%" y="799.50"></text></g><g><title>sql_parser::parser::parse_statements (6 samples, 0.74%)</title><rect x="39.2638%" y="853" width="0.7362%" height="15" fill="rgb(243,76,11)"/><text x="39.5138%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (6 samples, 0.74%)</title><rect x="39.2638%" y="837" width="0.7362%" height="15" fill="rgb(245,21,50)"/><text x="39.5138%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (6 samples, 0.74%)</title><rect x="39.2638%" y="821" width="0.7362%" height="15" fill="rgb(228,9,43)"/><text x="39.5138%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (4 samples, 0.49%)</title><rect x="39.5092%" y="805" width="0.4908%" height="15" fill="rgb(208,100,47)"/><text x="39.7592%" y="815.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.12%)</title><rect x="39.8773%" y="789" width="0.1227%" height="15" fill="rgb(232,26,8)"/><text x="40.1273%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.25%)</title><rect x="40.1227%" y="677" width="0.2454%" height="15" fill="rgb(216,166,38)"/><text x="40.3727%" y="687.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.12%)</title><rect x="40.2454%" y="661" width="0.1227%" height="15" fill="rgb(251,202,51)"/><text x="40.4954%" y="671.50"></text></g><g><title>start_thread (4 samples, 0.49%)</title><rect x="40.0000%" y="853" width="0.4908%" height="15" fill="rgb(254,216,34)"/><text x="40.2500%" y="863.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (4 samples, 0.49%)</title><rect x="40.0000%" y="837" width="0.4908%" height="15" fill="rgb(251,32,27)"/><text x="40.2500%" y="847.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (4 samples, 0.49%)</title><rect x="40.0000%" y="821" width="0.4908%" height="15" fill="rgb(208,127,28)"/><text x="40.2500%" y="831.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (4 samples, 0.49%)</title><rect x="40.0000%" y="805" width="0.4908%" height="15" fill="rgb(224,137,22)"/><text x="40.2500%" y="815.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (4 samples, 0.49%)</title><rect x="40.0000%" y="789" width="0.4908%" height="15" fill="rgb(254,70,32)"/><text x="40.2500%" y="799.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (4 samples, 0.49%)</title><rect x="40.0000%" y="773" width="0.4908%" height="15" fill="rgb(229,75,37)"/><text x="40.2500%" y="783.50"></text></g><g><title>decor::Shim::run_on_tcp (4 samples, 0.49%)</title><rect x="40.0000%" y="757" width="0.4908%" height="15" fill="rgb(252,64,23)"/><text x="40.2500%" y="767.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (4 samples, 0.49%)</title><rect x="40.0000%" y="741" width="0.4908%" height="15" fill="rgb(232,162,48)"/><text x="40.2500%" y="751.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (4 samples, 0.49%)</title><rect x="40.0000%" y="725" width="0.4908%" height="15" fill="rgb(246,160,12)"/><text x="40.2500%" y="735.50"></text></g><g><title>sql_parser::parser::parse_statements (4 samples, 0.49%)</title><rect x="40.0000%" y="709" width="0.4908%" height="15" fill="rgb(247,166,0)"/><text x="40.2500%" y="719.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (4 samples, 0.49%)</title><rect x="40.0000%" y="693" width="0.4908%" height="15" fill="rgb(249,219,21)"/><text x="40.2500%" y="703.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.12%)</title><rect x="40.3681%" y="677" width="0.1227%" height="15" fill="rgb(205,209,3)"/><text x="40.6181%" y="687.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.12%)</title><rect x="40.3681%" y="661" width="0.1227%" height="15" fill="rgb(243,44,1)"/><text x="40.6181%" y="671.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (2 samples, 0.25%)</title><rect x="40.4908%" y="853" width="0.2454%" height="15" fill="rgb(206,159,16)"/><text x="40.7408%" y="863.50"></text></g><g><title>std::net::tcp::TcpStream::set_write_timeout (1 samples, 0.12%)</title><rect x="40.7362%" y="853" width="0.1227%" height="15" fill="rgb(244,77,30)"/><text x="40.9862%" y="863.50"></text></g><g><title>std::sys_common::net::TcpStream::set_write_timeout (1 samples, 0.12%)</title><rect x="40.7362%" y="837" width="0.1227%" height="15" fill="rgb(218,69,12)"/><text x="40.9862%" y="847.50"></text></g><g><title>std::sys::unix::net::Socket::set_timeout (1 samples, 0.12%)</title><rect x="40.7362%" y="821" width="0.1227%" height="15" fill="rgb(212,87,7)"/><text x="40.9862%" y="831.50"></text></g><g><title>std::io::error::Error::new (1 samples, 0.12%)</title><rect x="40.7362%" y="805" width="0.1227%" height="15" fill="rgb(245,114,25)"/><text x="40.9862%" y="815.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.12%)</title><rect x="40.7362%" y="789" width="0.1227%" height="15" fill="rgb(210,61,42)"/><text x="40.9862%" y="799.50"></text></g><g><title>std::error::&lt;impl core::convert::From&lt;&amp;str&gt; for alloc::boxed::Box&lt;dyn std::error::Error+core::marker::Sync+core::marker::Send&gt;&gt;::from (1 samples, 0.12%)</title><rect x="40.7362%" y="773" width="0.1227%" height="15" fill="rgb(211,52,33)"/><text x="40.9862%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.12%)</title><rect x="40.7362%" y="757" width="0.1227%" height="15" fill="rgb(234,58,33)"/><text x="40.9862%" y="767.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.12%)</title><rect x="40.7362%" y="741" width="0.1227%" height="15" fill="rgb(220,115,36)"/><text x="40.9862%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.12%)</title><rect x="40.7362%" y="725" width="0.1227%" height="15" fill="rgb(243,153,54)"/><text x="40.9862%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.12%)</title><rect x="40.7362%" y="709" width="0.1227%" height="15" fill="rgb(251,47,18)"/><text x="40.9862%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.12%)</title><rect x="40.7362%" y="693" width="0.1227%" height="15" fill="rgb(242,102,42)"/><text x="40.9862%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.12%)</title><rect x="40.7362%" y="677" width="0.1227%" height="15" fill="rgb(234,31,38)"/><text x="40.9862%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.12%)</title><rect x="40.7362%" y="661" width="0.1227%" height="15" fill="rgb(221,117,51)"/><text x="40.9862%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.12%)</title><rect x="40.7362%" y="645" width="0.1227%" height="15" fill="rgb(212,20,18)"/><text x="40.9862%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.12%)</title><rect x="40.7362%" y="629" width="0.1227%" height="15" fill="rgb(245,133,36)"/><text x="40.9862%" y="639.50"></text></g><g><title>__libc_recv (1 samples, 0.12%)</title><rect x="40.7362%" y="613" width="0.1227%" height="15" fill="rgb(212,6,19)"/><text x="40.9862%" y="623.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.12%)</title><rect x="40.7362%" y="597" width="0.1227%" height="15" fill="rgb(218,1,36)"/><text x="40.9862%" y="607.50"></text></g><g><title>link_path_walk (1 samples, 0.12%)</title><rect x="40.8589%" y="533" width="0.1227%" height="15" fill="rgb(246,84,54)"/><text x="41.1089%" y="543.50"></text></g><g><title>walk_component (1 samples, 0.12%)</title><rect x="40.8589%" y="517" width="0.1227%" height="15" fill="rgb(242,110,6)"/><text x="41.1089%" y="527.50"></text></g><g><title>step_into (1 samples, 0.12%)</title><rect x="40.8589%" y="501" width="0.1227%" height="15" fill="rgb(214,47,5)"/><text x="41.1089%" y="511.50"></text></g><g><title>dput (1 samples, 0.12%)</title><rect x="40.8589%" y="485" width="0.1227%" height="15" fill="rgb(218,159,25)"/><text x="41.1089%" y="495.50"></text></g><g><title>lockref_put_return (1 samples, 0.12%)</title><rect x="40.8589%" y="469" width="0.1227%" height="15" fill="rgb(215,211,28)"/><text x="41.1089%" y="479.50"></text></g><g><title>hwloc::Topology::new (2 samples, 0.25%)</title><rect x="40.8589%" y="725" width="0.2454%" height="15" fill="rgb(238,59,32)"/><text x="41.1089%" y="735.50"></text></g><g><title>hwloc_topology_load (2 samples, 0.25%)</title><rect x="40.8589%" y="709" width="0.2454%" height="15" fill="rgb(226,82,3)"/><text x="41.1089%" y="719.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.25%)</title><rect x="40.8589%" y="693" width="0.2454%" height="15" fill="rgb(240,164,32)"/><text x="41.1089%" y="703.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.25%)</title><rect x="40.8589%" y="677" width="0.2454%" height="15" fill="rgb(232,46,7)"/><text x="41.1089%" y="687.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.25%)</title><rect x="40.8589%" y="661" width="0.2454%" height="15" fill="rgb(229,129,53)"/><text x="41.1089%" y="671.50"></text></g><g><title>__GI___openat (2 samples, 0.25%)</title><rect x="40.8589%" y="645" width="0.2454%" height="15" fill="rgb(234,188,29)"/><text x="41.1089%" y="655.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.25%)</title><rect x="40.8589%" y="629" width="0.2454%" height="15" fill="rgb(246,141,4)"/><text x="41.1089%" y="639.50"></text></g><g><title>do_syscall_64 (2 samples, 0.25%)</title><rect x="40.8589%" y="613" width="0.2454%" height="15" fill="rgb(229,23,39)"/><text x="41.1089%" y="623.50"></text></g><g><title>__x64_sys_openat (2 samples, 0.25%)</title><rect x="40.8589%" y="597" width="0.2454%" height="15" fill="rgb(206,12,3)"/><text x="41.1089%" y="607.50"></text></g><g><title>do_sys_openat2 (2 samples, 0.25%)</title><rect x="40.8589%" y="581" width="0.2454%" height="15" fill="rgb(252,226,20)"/><text x="41.1089%" y="591.50"></text></g><g><title>do_filp_open (2 samples, 0.25%)</title><rect x="40.8589%" y="565" width="0.2454%" height="15" fill="rgb(216,123,35)"/><text x="41.1089%" y="575.50"></text></g><g><title>path_openat (2 samples, 0.25%)</title><rect x="40.8589%" y="549" width="0.2454%" height="15" fill="rgb(212,68,40)"/><text x="41.1089%" y="559.50"></text></g><g><title>path_init (1 samples, 0.12%)</title><rect x="40.9816%" y="533" width="0.1227%" height="15" fill="rgb(254,125,32)"/><text x="41.2316%" y="543.50"></text></g><g><title>std::rt::lang_start_internal (4 samples, 0.49%)</title><rect x="40.8589%" y="853" width="0.4908%" height="15" fill="rgb(253,97,22)"/><text x="41.1089%" y="863.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.49%)</title><rect x="40.8589%" y="837" width="0.4908%" height="15" fill="rgb(241,101,14)"/><text x="41.1089%" y="847.50"></text></g><g><title>std::panicking::try (4 samples, 0.49%)</title><rect x="40.8589%" y="821" width="0.4908%" height="15" fill="rgb(238,103,29)"/><text x="41.1089%" y="831.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.49%)</title><rect x="40.8589%" y="805" width="0.4908%" height="15" fill="rgb(233,195,47)"/><text x="41.1089%" y="815.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (4 samples, 0.49%)</title><rect x="40.8589%" y="789" width="0.4908%" height="15" fill="rgb(246,218,30)"/><text x="41.1089%" y="799.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (4 samples, 0.49%)</title><rect x="40.8589%" y="773" width="0.4908%" height="15" fill="rgb(219,145,47)"/><text x="41.1089%" y="783.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (4 samples, 0.49%)</title><rect x="40.8589%" y="757" width="0.4908%" height="15" fill="rgb(243,12,26)"/><text x="41.1089%" y="767.50"></text></g><g><title>lobsters::main (4 samples, 0.49%)</title><rect x="40.8589%" y="741" width="0.4908%" height="15" fill="rgb(214,87,16)"/><text x="41.1089%" y="751.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (2 samples, 0.25%)</title><rect x="41.1043%" y="725" width="0.2454%" height="15" fill="rgb(208,99,42)"/><text x="41.3543%" y="735.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.25%)</title><rect x="41.1043%" y="709" width="0.2454%" height="15" fill="rgb(253,99,2)"/><text x="41.3543%" y="719.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (2 samples, 0.25%)</title><rect x="41.1043%" y="693" width="0.2454%" height="15" fill="rgb(220,168,23)"/><text x="41.3543%" y="703.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::encode (2 samples, 0.25%)</title><rect x="41.1043%" y="677" width="0.2454%" height="15" fill="rgb(242,38,24)"/><text x="41.3543%" y="687.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::encode (2 samples, 0.25%)</title><rect x="41.1043%" y="661" width="0.2454%" height="15" fill="rgb(225,182,9)"/><text x="41.3543%" y="671.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (2 samples, 0.25%)</title><rect x="41.1043%" y="645" width="0.2454%" height="15" fill="rgb(243,178,37)"/><text x="41.3543%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.25%)</title><rect x="41.1043%" y="629" width="0.2454%" height="15" fill="rgb(232,139,19)"/><text x="41.3543%" y="639.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (2 samples, 0.25%)</title><rect x="41.3497%" y="853" width="0.2454%" height="15" fill="rgb(225,201,24)"/><text x="41.5997%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (2 samples, 0.25%)</title><rect x="41.3497%" y="837" width="0.2454%" height="15" fill="rgb(221,47,46)"/><text x="41.5997%" y="847.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (2 samples, 0.25%)</title><rect x="41.3497%" y="821" width="0.2454%" height="15" fill="rgb(249,23,13)"/><text x="41.5997%" y="831.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (2 samples, 0.25%)</title><rect x="41.3497%" y="805" width="0.2454%" height="15" fill="rgb(219,9,5)"/><text x="41.5997%" y="815.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2 samples, 0.25%)</title><rect x="41.3497%" y="789" width="0.2454%" height="15" fill="rgb(254,171,16)"/><text x="41.5997%" y="799.50"></text></g><g><title>decor::Shim::run_on_tcp (2 samples, 0.25%)</title><rect x="41.3497%" y="773" width="0.2454%" height="15" fill="rgb(230,171,20)"/><text x="41.5997%" y="783.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (2 samples, 0.25%)</title><rect x="41.3497%" y="757" width="0.2454%" height="15" fill="rgb(210,71,41)"/><text x="41.5997%" y="767.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (2 samples, 0.25%)</title><rect x="41.3497%" y="741" width="0.2454%" height="15" fill="rgb(206,173,20)"/><text x="41.5997%" y="751.50"></text></g><g><title>sql_parser::parser::parse_statements (2 samples, 0.25%)</title><rect x="41.3497%" y="725" width="0.2454%" height="15" fill="rgb(233,88,34)"/><text x="41.5997%" y="735.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (2 samples, 0.25%)</title><rect x="41.3497%" y="709" width="0.2454%" height="15" fill="rgb(223,209,46)"/><text x="41.5997%" y="719.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_number (2 samples, 0.25%)</title><rect x="41.3497%" y="693" width="0.2454%" height="15" fill="rgb(250,43,18)"/><text x="41.5997%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="41.4724%" y="677" width="0.1227%" height="15" fill="rgb(208,13,10)"/><text x="41.7224%" y="687.50"></text></g><g><title>_int_free (1 samples, 0.12%)</title><rect x="41.5951%" y="709" width="0.1227%" height="15" fill="rgb(212,200,36)"/><text x="41.8451%" y="719.50"></text></g><g><title>malloc_consolidate (4 samples, 0.49%)</title><rect x="41.8405%" y="693" width="0.4908%" height="15" fill="rgb(225,90,30)"/><text x="42.0905%" y="703.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.12%)</title><rect x="42.2086%" y="677" width="0.1227%" height="15" fill="rgb(236,182,39)"/><text x="42.4586%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (7 samples, 0.86%)</title><rect x="41.5951%" y="757" width="0.8589%" height="15" fill="rgb(212,144,35)"/><text x="41.8451%" y="767.50"></text></g><g><title>__GI___libc_realloc (7 samples, 0.86%)</title><rect x="41.5951%" y="741" width="0.8589%" height="15" fill="rgb(228,63,44)"/><text x="41.8451%" y="751.50"></text></g><g><title>_int_realloc (7 samples, 0.86%)</title><rect x="41.5951%" y="725" width="0.8589%" height="15" fill="rgb(228,109,6)"/><text x="41.8451%" y="735.50"></text></g><g><title>_int_malloc (6 samples, 0.74%)</title><rect x="41.7178%" y="709" width="0.7362%" height="15" fill="rgb(238,117,24)"/><text x="41.9678%" y="719.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.12%)</title><rect x="42.3313%" y="693" width="0.1227%" height="15" fill="rgb(242,26,26)"/><text x="42.5813%" y="703.50"></text></g><g><title>__GI___libc_free (1 samples, 0.12%)</title><rect x="42.4540%" y="741" width="0.1227%" height="15" fill="rgb(221,92,48)"/><text x="42.7040%" y="751.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.37%)</title><rect x="43.5583%" y="725" width="0.3681%" height="15" fill="rgb(209,209,32)"/><text x="43.8083%" y="735.50"></text></g><g><title>_int_malloc (1 samples, 0.12%)</title><rect x="43.8037%" y="709" width="0.1227%" height="15" fill="rgb(221,70,22)"/><text x="44.0537%" y="719.50"></text></g><g><title>__memcmp_avx2_movbe (3 samples, 0.37%)</title><rect x="43.9264%" y="725" width="0.3681%" height="15" fill="rgb(248,145,5)"/><text x="44.1764%" y="735.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="44.6626%" y="709" width="0.1227%" height="15" fill="rgb(226,116,26)"/><text x="44.9126%" y="719.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.12%)</title><rect x="44.6626%" y="693" width="0.1227%" height="15" fill="rgb(244,5,17)"/><text x="44.9126%" y="703.50"></text></g><g><title>alloc::string::String::push (2 samples, 0.25%)</title><rect x="44.7853%" y="709" width="0.2454%" height="15" fill="rgb(252,159,33)"/><text x="45.0353%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (2 samples, 0.25%)</title><rect x="44.7853%" y="693" width="0.2454%" height="15" fill="rgb(206,71,0)"/><text x="45.0353%" y="703.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.12%)</title><rect x="45.0307%" y="709" width="0.1227%" height="15" fill="rgb(233,118,54)"/><text x="45.2807%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.12%)</title><rect x="45.0307%" y="693" width="0.1227%" height="15" fill="rgb(234,83,48)"/><text x="45.2807%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.12%)</title><rect x="45.0307%" y="677" width="0.1227%" height="15" fill="rgb(228,3,54)"/><text x="45.2807%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.12%)</title><rect x="45.0307%" y="661" width="0.1227%" height="15" fill="rgb(226,155,13)"/><text x="45.2807%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.12%)</title><rect x="45.0307%" y="645" width="0.1227%" height="15" fill="rgb(241,28,37)"/><text x="45.2807%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.12%)</title><rect x="45.0307%" y="629" width="0.1227%" height="15" fill="rgb(233,93,10)"/><text x="45.2807%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.12%)</title><rect x="45.0307%" y="613" width="0.1227%" height="15" fill="rgb(225,113,19)"/><text x="45.2807%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.12%)</title><rect x="45.0307%" y="597" width="0.1227%" height="15" fill="rgb(241,2,18)"/><text x="45.2807%" y="607.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.12%)</title><rect x="45.0307%" y="581" width="0.1227%" height="15" fill="rgb(228,207,21)"/><text x="45.2807%" y="591.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (31 samples, 3.80%)</title><rect x="42.5767%" y="741" width="3.8037%" height="15" fill="rgb(213,211,35)"/><text x="42.8267%" y="751.50">sql_..</text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (17 samples, 2.09%)</title><rect x="44.2945%" y="725" width="2.0859%" height="15" fill="rgb(209,83,10)"/><text x="44.5445%" y="735.50">a..</text></g><g><title>core::unicode::unicode_data::conversions::to_upper (10 samples, 1.23%)</title><rect x="45.1534%" y="709" width="1.2270%" height="15" fill="rgb(209,164,1)"/><text x="45.4034%" y="719.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (8 samples, 0.98%)</title><rect x="45.3988%" y="693" width="0.9816%" height="15" fill="rgb(213,184,43)"/><text x="45.6488%" y="703.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (8 samples, 0.98%)</title><rect x="45.3988%" y="677" width="0.9816%" height="15" fill="rgb(231,61,34)"/><text x="45.6488%" y="687.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (6 samples, 0.74%)</title><rect x="45.6442%" y="661" width="0.7362%" height="15" fill="rgb(235,75,3)"/><text x="45.8942%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="46.3804%" y="725" width="0.1227%" height="15" fill="rgb(220,106,47)"/><text x="46.6304%" y="735.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.12%)</title><rect x="46.3804%" y="709" width="0.1227%" height="15" fill="rgb(210,196,33)"/><text x="46.6304%" y="719.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_string (2 samples, 0.25%)</title><rect x="46.3804%" y="741" width="0.2454%" height="15" fill="rgb(229,154,42)"/><text x="46.6304%" y="751.50"></text></g><g><title>sql_parser::tokenizer::PeekableChars::next (1 samples, 0.12%)</title><rect x="46.5031%" y="725" width="0.1227%" height="15" fill="rgb(228,114,26)"/><text x="46.7531%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.25%)</title><rect x="46.7485%" y="725" width="0.2454%" height="15" fill="rgb(208,144,1)"/><text x="46.9985%" y="735.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.12%)</title><rect x="46.8712%" y="709" width="0.1227%" height="15" fill="rgb(239,112,37)"/><text x="47.1212%" y="719.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (38 samples, 4.66%)</title><rect x="42.4540%" y="757" width="4.6626%" height="15" fill="rgb(210,96,50)"/><text x="42.7040%" y="767.50">sql_p..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_word (4 samples, 0.49%)</title><rect x="46.6258%" y="741" width="0.4908%" height="15" fill="rgb(222,178,2)"/><text x="46.8758%" y="751.50"></text></g><g><title>sql_parser::tokenizer::PeekableChars::next (1 samples, 0.12%)</title><rect x="46.9939%" y="725" width="0.1227%" height="15" fill="rgb(226,74,18)"/><text x="47.2439%" y="735.50"></text></g><g><title>decor::Shim::run_on_tcp (46 samples, 5.64%)</title><rect x="41.5951%" y="837" width="5.6442%" height="15" fill="rgb(225,67,54)"/><text x="41.8451%" y="847.50">decor::..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (46 samples, 5.64%)</title><rect x="41.5951%" y="821" width="5.6442%" height="15" fill="rgb(251,92,32)"/><text x="41.8451%" y="831.50">msql_sr..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (46 samples, 5.64%)</title><rect x="41.5951%" y="805" width="5.6442%" height="15" fill="rgb(228,149,22)"/><text x="41.8451%" y="815.50">&lt;decor:..</text></g><g><title>sql_parser::parser::parse_statements (46 samples, 5.64%)</title><rect x="41.5951%" y="789" width="5.6442%" height="15" fill="rgb(243,54,13)"/><text x="41.8451%" y="799.50">sql_par..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (46 samples, 5.64%)</title><rect x="41.5951%" y="773" width="5.6442%" height="15" fill="rgb(243,180,28)"/><text x="41.8451%" y="783.50">sql_par..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_number (1 samples, 0.12%)</title><rect x="47.1166%" y="757" width="0.1227%" height="15" fill="rgb(208,167,24)"/><text x="47.3666%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="47.1166%" y="741" width="0.1227%" height="15" fill="rgb(245,73,45)"/><text x="47.3666%" y="751.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.12%)</title><rect x="47.1166%" y="725" width="0.1227%" height="15" fill="rgb(237,203,48)"/><text x="47.3666%" y="735.50"></text></g><g><title>_int_malloc (1 samples, 0.12%)</title><rect x="47.1166%" y="709" width="0.1227%" height="15" fill="rgb(211,197,16)"/><text x="47.3666%" y="719.50"></text></g><g><title>[unknown] (344 samples, 42.21%)</title><rect x="5.1534%" y="869" width="42.2086%" height="15" fill="rgb(243,99,51)"/><text x="5.4034%" y="879.50">[unknown]</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (47 samples, 5.77%)</title><rect x="41.5951%" y="853" width="5.7669%" height="15" fill="rgb(215,123,29)"/><text x="41.8451%" y="863.50">std::sy..</text></g><g><title>lobsters::main (1 samples, 0.12%)</title><rect x="47.2393%" y="837" width="0.1227%" height="15" fill="rgb(239,186,37)"/><text x="47.4893%" y="847.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (1 samples, 0.12%)</title><rect x="47.2393%" y="821" width="0.1227%" height="15" fill="rgb(252,136,39)"/><text x="47.4893%" y="831.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.12%)</title><rect x="47.2393%" y="805" width="0.1227%" height="15" fill="rgb(223,213,32)"/><text x="47.4893%" y="815.50"></text></g><g><title>mysql::conn::query_result::QueryResult&lt;T&gt;::handle_next (1 samples, 0.12%)</title><rect x="47.2393%" y="789" width="0.1227%" height="15" fill="rgb(233,115,5)"/><text x="47.4893%" y="799.50"></text></g><g><title>&lt;mysql::conn::ConnMut as core::ops::deref::Deref&gt;::deref (1 samples, 0.12%)</title><rect x="47.2393%" y="773" width="0.1227%" height="15" fill="rgb(207,226,44)"/><text x="47.4893%" y="783.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.12%)</title><rect x="47.3620%" y="741" width="0.1227%" height="15" fill="rgb(208,126,0)"/><text x="47.6120%" y="751.50"></text></g><g><title>_int_malloc (1 samples, 0.12%)</title><rect x="47.3620%" y="725" width="0.1227%" height="15" fill="rgb(244,66,21)"/><text x="47.6120%" y="735.50"></text></g><g><title>sysmalloc (1 samples, 0.12%)</title><rect x="47.3620%" y="709" width="0.1227%" height="15" fill="rgb(222,97,12)"/><text x="47.6120%" y="719.50"></text></g><g><title>__GI___mprotect (1 samples, 0.12%)</title><rect x="47.3620%" y="693" width="0.1227%" height="15" fill="rgb(219,213,19)"/><text x="47.6120%" y="703.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.12%)</title><rect x="47.3620%" y="677" width="0.1227%" height="15" fill="rgb(252,169,30)"/><text x="47.6120%" y="687.50"></text></g><g><title>do_syscall_64 (1 samples, 0.12%)</title><rect x="47.3620%" y="661" width="0.1227%" height="15" fill="rgb(206,32,51)"/><text x="47.6120%" y="671.50"></text></g><g><title>__x64_sys_mprotect (1 samples, 0.12%)</title><rect x="47.3620%" y="645" width="0.1227%" height="15" fill="rgb(250,172,42)"/><text x="47.6120%" y="655.50"></text></g><g><title>do_mprotect_pkey (1 samples, 0.12%)</title><rect x="47.3620%" y="629" width="0.1227%" height="15" fill="rgb(209,34,43)"/><text x="47.6120%" y="639.50"></text></g><g><title>mprotect_fixup (1 samples, 0.12%)</title><rect x="47.3620%" y="613" width="0.1227%" height="15" fill="rgb(223,11,35)"/><text x="47.6120%" y="623.50"></text></g><g><title>vma_merge (1 samples, 0.12%)</title><rect x="47.3620%" y="597" width="0.1227%" height="15" fill="rgb(251,219,26)"/><text x="47.6120%" y="607.50"></text></g><g><title>__vma_adjust (1 samples, 0.12%)</title><rect x="47.3620%" y="581" width="0.1227%" height="15" fill="rgb(231,119,3)"/><text x="47.6120%" y="591.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (1 samples, 0.12%)</title><rect x="47.6074%" y="709" width="0.1227%" height="15" fill="rgb(216,97,11)"/><text x="47.8574%" y="719.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.12%)</title><rect x="47.6074%" y="693" width="0.1227%" height="15" fill="rgb(223,59,9)"/><text x="47.8574%" y="703.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.12%)</title><rect x="47.6074%" y="677" width="0.1227%" height="15" fill="rgb(233,93,31)"/><text x="47.8574%" y="687.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.12%)</title><rect x="47.6074%" y="661" width="0.1227%" height="15" fill="rgb(239,81,33)"/><text x="47.8574%" y="671.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="47.6074%" y="645" width="0.1227%" height="15" fill="rgb(213,120,34)"/><text x="47.8574%" y="655.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (1 samples, 0.12%)</title><rect x="47.6074%" y="629" width="0.1227%" height="15" fill="rgb(243,49,53)"/><text x="47.8574%" y="639.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (1 samples, 0.12%)</title><rect x="47.6074%" y="613" width="0.1227%" height="15" fill="rgb(247,216,33)"/><text x="47.8574%" y="623.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.12%)</title><rect x="47.6074%" y="597" width="0.1227%" height="15" fill="rgb(226,26,14)"/><text x="47.8574%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="47.6074%" y="581" width="0.1227%" height="15" fill="rgb(215,49,53)"/><text x="47.8574%" y="591.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.12%)</title><rect x="47.6074%" y="565" width="0.1227%" height="15" fill="rgb(245,162,40)"/><text x="47.8574%" y="575.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (2 samples, 0.25%)</title><rect x="47.6074%" y="725" width="0.2454%" height="15" fill="rgb(229,68,17)"/><text x="47.8574%" y="735.50"></text></g><g><title>decor::Shim::create_schema (1 samples, 0.12%)</title><rect x="47.7301%" y="709" width="0.1227%" height="15" fill="rgb(213,182,10)"/><text x="47.9801%" y="719.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.12%)</title><rect x="47.7301%" y="693" width="0.1227%" height="15" fill="rgb(245,125,30)"/><text x="47.9801%" y="703.50"></text></g><g><title>_int_free (1 samples, 0.12%)</title><rect x="47.7301%" y="677" width="0.1227%" height="15" fill="rgb(232,202,2)"/><text x="47.9801%" y="687.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.12%)</title><rect x="48.2209%" y="437" width="0.1227%" height="15" fill="rgb(237,140,51)"/><text x="48.4709%" y="447.50"></text></g><g><title>preempt_count_sub (1 samples, 0.12%)</title><rect x="48.2209%" y="421" width="0.1227%" height="15" fill="rgb(236,157,25)"/><text x="48.4709%" y="431.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.12%)</title><rect x="48.3436%" y="421" width="0.1227%" height="15" fill="rgb(219,209,0)"/><text x="48.5936%" y="431.50"></text></g><g><title>preempt_count_sub (1 samples, 0.12%)</title><rect x="48.3436%" y="405" width="0.1227%" height="15" fill="rgb(240,116,54)"/><text x="48.5936%" y="415.50"></text></g><g><title>_raw_spin_lock_bh (2 samples, 0.25%)</title><rect x="48.4663%" y="421" width="0.2454%" height="15" fill="rgb(216,10,36)"/><text x="48.7163%" y="431.50"></text></g><g><title>__perf_event_task_sched_out (1 samples, 0.12%)</title><rect x="48.9571%" y="357" width="0.1227%" height="15" fill="rgb(222,72,44)"/><text x="49.2071%" y="367.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.12%)</title><rect x="48.9571%" y="341" width="0.1227%" height="15" fill="rgb(232,159,9)"/><text x="49.2071%" y="351.50"></text></g><g><title>dequeue_task_fair (1 samples, 0.12%)</title><rect x="49.0798%" y="357" width="0.1227%" height="15" fill="rgb(210,39,32)"/><text x="49.3298%" y="367.50"></text></g><g><title>dequeue_entity (1 samples, 0.12%)</title><rect x="49.0798%" y="341" width="0.1227%" height="15" fill="rgb(216,194,45)"/><text x="49.3298%" y="351.50"></text></g><g><title>update_curr (1 samples, 0.12%)</title><rect x="49.0798%" y="325" width="0.1227%" height="15" fill="rgb(218,18,35)"/><text x="49.3298%" y="335.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.12%)</title><rect x="49.0798%" y="309" width="0.1227%" height="15" fill="rgb(207,83,51)"/><text x="49.3298%" y="319.50"></text></g><g><title>finish_task_switch (1 samples, 0.12%)</title><rect x="49.2025%" y="357" width="0.1227%" height="15" fill="rgb(225,63,43)"/><text x="49.4525%" y="367.50"></text></g><g><title>pick_next_task_fair (1 samples, 0.12%)</title><rect x="49.3252%" y="357" width="0.1227%" height="15" fill="rgb(207,57,36)"/><text x="49.5752%" y="367.50"></text></g><g><title>newidle_balance (1 samples, 0.12%)</title><rect x="49.3252%" y="341" width="0.1227%" height="15" fill="rgb(216,99,33)"/><text x="49.5752%" y="351.50"></text></g><g><title>pick_next_task_idle (1 samples, 0.12%)</title><rect x="49.4479%" y="357" width="0.1227%" height="15" fill="rgb(225,42,16)"/><text x="49.6979%" y="367.50"></text></g><g><title>__update_idle_core (1 samples, 0.12%)</title><rect x="49.4479%" y="341" width="0.1227%" height="15" fill="rgb(220,201,45)"/><text x="49.6979%" y="351.50"></text></g><g><title>psi_task_change (1 samples, 0.12%)</title><rect x="49.5706%" y="357" width="0.1227%" height="15" fill="rgb(225,33,4)"/><text x="49.8206%" y="367.50"></text></g><g><title>psi_group_change (1 samples, 0.12%)</title><rect x="49.5706%" y="341" width="0.1227%" height="15" fill="rgb(224,33,50)"/><text x="49.8206%" y="351.50"></text></g><g><title>uclamp_rq_dec_id (1 samples, 0.12%)</title><rect x="49.6933%" y="357" width="0.1227%" height="15" fill="rgb(246,198,51)"/><text x="49.9433%" y="367.50"></text></g><g><title>sk_wait_data (13 samples, 1.60%)</title><rect x="48.3436%" y="437" width="1.5951%" height="15" fill="rgb(205,22,4)"/><text x="48.5936%" y="447.50"></text></g><g><title>wait_woken (10 samples, 1.23%)</title><rect x="48.7117%" y="421" width="1.2270%" height="15" fill="rgb(206,3,8)"/><text x="48.9617%" y="431.50"></text></g><g><title>schedule_timeout (9 samples, 1.10%)</title><rect x="48.8344%" y="405" width="1.1043%" height="15" fill="rgb(251,23,15)"/><text x="49.0844%" y="415.50"></text></g><g><title>schedule (9 samples, 1.10%)</title><rect x="48.8344%" y="389" width="1.1043%" height="15" fill="rgb(252,88,28)"/><text x="49.0844%" y="399.50"></text></g><g><title>__schedule (8 samples, 0.98%)</title><rect x="48.9571%" y="373" width="0.9816%" height="15" fill="rgb(212,127,14)"/><text x="49.2071%" y="383.50"></text></g><g><title>update_rq_clock (1 samples, 0.12%)</title><rect x="49.8160%" y="357" width="0.1227%" height="15" fill="rgb(247,145,37)"/><text x="50.0660%" y="367.50"></text></g><g><title>update_irq_load_avg (1 samples, 0.12%)</title><rect x="49.8160%" y="341" width="0.1227%" height="15" fill="rgb(209,117,53)"/><text x="50.0660%" y="351.50"></text></g><g><title>_copy_to_iter (1 samples, 0.12%)</title><rect x="50.0613%" y="405" width="0.1227%" height="15" fill="rgb(212,90,42)"/><text x="50.3113%" y="415.50"></text></g><g><title>copy_user_generic_unrolled (1 samples, 0.12%)</title><rect x="50.0613%" y="389" width="0.1227%" height="15" fill="rgb(218,164,37)"/><text x="50.3113%" y="399.50"></text></g><g><title>skb_copy_datagram_iter (3 samples, 0.37%)</title><rect x="49.9387%" y="437" width="0.3681%" height="15" fill="rgb(246,65,34)"/><text x="50.1887%" y="447.50"></text></g><g><title>__skb_datagram_iter (3 samples, 0.37%)</title><rect x="49.9387%" y="421" width="0.3681%" height="15" fill="rgb(231,100,33)"/><text x="50.1887%" y="431.50"></text></g><g><title>simple_copy_to_iter (1 samples, 0.12%)</title><rect x="50.1840%" y="405" width="0.1227%" height="15" fill="rgb(228,126,14)"/><text x="50.4340%" y="415.50"></text></g><g><title>entry_SYSCALL_64 (20 samples, 2.45%)</title><rect x="47.9755%" y="533" width="2.4540%" height="15" fill="rgb(215,173,21)"/><text x="48.2255%" y="543.50">en..</text></g><g><title>do_syscall_64 (19 samples, 2.33%)</title><rect x="48.0982%" y="517" width="2.3313%" height="15" fill="rgb(210,6,40)"/><text x="48.3482%" y="527.50">d..</text></g><g><title>__x64_sys_recvfrom (19 samples, 2.33%)</title><rect x="48.0982%" y="501" width="2.3313%" height="15" fill="rgb(212,48,18)"/><text x="48.3482%" y="511.50">_..</text></g><g><title>__sys_recvfrom (19 samples, 2.33%)</title><rect x="48.0982%" y="485" width="2.3313%" height="15" fill="rgb(230,214,11)"/><text x="48.3482%" y="495.50">_..</text></g><g><title>inet_recvmsg (19 samples, 2.33%)</title><rect x="48.0982%" y="469" width="2.3313%" height="15" fill="rgb(254,105,39)"/><text x="48.3482%" y="479.50">i..</text></g><g><title>tcp_recvmsg (19 samples, 2.33%)</title><rect x="48.0982%" y="453" width="2.3313%" height="15" fill="rgb(245,158,5)"/><text x="48.3482%" y="463.50">t..</text></g><g><title>tcp_rcv_space_adjust (1 samples, 0.12%)</title><rect x="50.3067%" y="437" width="0.1227%" height="15" fill="rgb(249,208,11)"/><text x="50.5567%" y="447.50"></text></g><g><title>tcp_mstamp_refresh (1 samples, 0.12%)</title><rect x="50.3067%" y="421" width="0.1227%" height="15" fill="rgb(210,39,28)"/><text x="50.5567%" y="431.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (21 samples, 2.58%)</title><rect x="47.9755%" y="629" width="2.5767%" height="15" fill="rgb(211,56,53)"/><text x="48.2255%" y="639.50">&lt;s..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (21 samples, 2.58%)</title><rect x="47.9755%" y="613" width="2.5767%" height="15" fill="rgb(226,201,30)"/><text x="48.2255%" y="623.50">&lt;s..</text></g><g><title>std::sys_common::net::TcpStream::read (21 samples, 2.58%)</title><rect x="47.9755%" y="597" width="2.5767%" height="15" fill="rgb(239,101,34)"/><text x="48.2255%" y="607.50">st..</text></g><g><title>std::sys::unix::net::Socket::read (21 samples, 2.58%)</title><rect x="47.9755%" y="581" width="2.5767%" height="15" fill="rgb(226,209,5)"/><text x="48.2255%" y="591.50">st..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (21 samples, 2.58%)</title><rect x="47.9755%" y="565" width="2.5767%" height="15" fill="rgb(250,105,47)"/><text x="48.2255%" y="575.50">st..</text></g><g><title>__libc_recv (21 samples, 2.58%)</title><rect x="47.9755%" y="549" width="2.5767%" height="15" fill="rgb(230,72,3)"/><text x="48.2255%" y="559.50">__..</text></g><g><title>syscall_return_via_sysret (1 samples, 0.12%)</title><rect x="50.4294%" y="533" width="0.1227%" height="15" fill="rgb(232,218,39)"/><text x="50.6794%" y="543.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 2.70%)</title><rect x="47.9755%" y="645" width="2.6994%" height="15" fill="rgb(248,166,6)"/><text x="48.2255%" y="655.50">&lt;m..</text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (1 samples, 0.12%)</title><rect x="50.5521%" y="629" width="0.1227%" height="15" fill="rgb(247,89,20)"/><text x="50.8021%" y="639.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (1 samples, 0.12%)</title><rect x="50.5521%" y="613" width="0.1227%" height="15" fill="rgb(248,130,54)"/><text x="50.8021%" y="623.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.12%)</title><rect x="50.5521%" y="597" width="0.1227%" height="15" fill="rgb(234,196,4)"/><text x="50.8021%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="50.5521%" y="581" width="0.1227%" height="15" fill="rgb(250,143,31)"/><text x="50.8021%" y="591.50"></text></g><g><title>__GI___libc_free (1 samples, 0.12%)</title><rect x="50.6748%" y="645" width="0.1227%" height="15" fill="rgb(211,110,34)"/><text x="50.9248%" y="655.50"></text></g><g><title>mysql::conn::Conn::read_packet (25 samples, 3.07%)</title><rect x="47.9755%" y="661" width="3.0675%" height="15" fill="rgb(215,124,48)"/><text x="48.2255%" y="671.50">mys..</text></g><g><title>std::io::error::Error::_new (2 samples, 0.25%)</title><rect x="50.7975%" y="645" width="0.2454%" height="15" fill="rgb(216,46,13)"/><text x="51.0475%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.12%)</title><rect x="50.9202%" y="629" width="0.1227%" height="15" fill="rgb(205,184,25)"/><text x="51.1702%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.12%)</title><rect x="50.9202%" y="613" width="0.1227%" height="15" fill="rgb(228,1,10)"/><text x="51.1702%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.12%)</title><rect x="50.9202%" y="597" width="0.1227%" height="15" fill="rgb(213,116,27)"/><text x="51.1702%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.12%)</title><rect x="50.9202%" y="581" width="0.1227%" height="15" fill="rgb(241,95,50)"/><text x="51.1702%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.12%)</title><rect x="50.9202%" y="565" width="0.1227%" height="15" fill="rgb(238,48,32)"/><text x="51.1702%" y="575.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.12%)</title><rect x="50.9202%" y="549" width="0.1227%" height="15" fill="rgb(235,113,49)"/><text x="51.1702%" y="559.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (26 samples, 3.19%)</title><rect x="47.9755%" y="677" width="3.1902%" height="15" fill="rgb(205,127,43)"/><text x="48.2255%" y="687.50">mys..</text></g><g><title>mysql_common::packets::parse_ok_packet (1 samples, 0.12%)</title><rect x="51.0429%" y="661" width="0.1227%" height="15" fill="rgb(250,162,2)"/><text x="51.2929%" y="671.50"></text></g><g><title>lock_sock_nested (1 samples, 0.12%)</title><rect x="51.4110%" y="501" width="0.1227%" height="15" fill="rgb(220,13,41)"/><text x="51.6610%" y="511.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.12%)</title><rect x="51.4110%" y="485" width="0.1227%" height="15" fill="rgb(249,221,25)"/><text x="51.6610%" y="495.50"></text></g><g><title>__ip_local_out (1 samples, 0.12%)</title><rect x="51.7791%" y="421" width="0.1227%" height="15" fill="rgb(215,208,19)"/><text x="52.0291%" y="431.50"></text></g><g><title>ip_send_check (1 samples, 0.12%)</title><rect x="51.7791%" y="405" width="0.1227%" height="15" fill="rgb(236,175,2)"/><text x="52.0291%" y="415.50"></text></g><g><title>__dev_queue_xmit (2 samples, 0.25%)</title><rect x="52.0245%" y="389" width="0.2454%" height="15" fill="rgb(241,52,2)"/><text x="52.2745%" y="399.50"></text></g><g><title>dev_hard_start_xmit (1 samples, 0.12%)</title><rect x="52.1472%" y="373" width="0.1227%" height="15" fill="rgb(248,140,14)"/><text x="52.3972%" y="383.50"></text></g><g><title>loopback_xmit (1 samples, 0.12%)</title><rect x="52.1472%" y="357" width="0.1227%" height="15" fill="rgb(253,22,42)"/><text x="52.3972%" y="367.50"></text></g><g><title>tcp_wfree (1 samples, 0.12%)</title><rect x="52.1472%" y="341" width="0.1227%" height="15" fill="rgb(234,61,47)"/><text x="52.3972%" y="351.50"></text></g><g><title>__usecs_to_jiffies (1 samples, 0.12%)</title><rect x="52.3926%" y="309" width="0.1227%" height="15" fill="rgb(208,226,15)"/><text x="52.6426%" y="319.50"></text></g><g><title>__netif_receive_skb_core (1 samples, 0.12%)</title><rect x="52.5153%" y="277" width="0.1227%" height="15" fill="rgb(217,221,4)"/><text x="52.7653%" y="287.50"></text></g><g><title>sk_filter_trim_cap (1 samples, 0.12%)</title><rect x="52.8834%" y="197" width="0.1227%" height="15" fill="rgb(212,174,34)"/><text x="53.1334%" y="207.50"></text></g><g><title>security_sock_rcv_skb (1 samples, 0.12%)</title><rect x="52.8834%" y="181" width="0.1227%" height="15" fill="rgb(253,83,4)"/><text x="53.1334%" y="191.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.12%)</title><rect x="53.6196%" y="85" width="0.1227%" height="15" fill="rgb(250,195,49)"/><text x="53.8696%" y="95.50"></text></g><g><title>sock_def_readable (4 samples, 0.49%)</title><rect x="53.4969%" y="165" width="0.4908%" height="15" fill="rgb(241,192,25)"/><text x="53.7469%" y="175.50"></text></g><g><title>__wake_up_common_lock (3 samples, 0.37%)</title><rect x="53.6196%" y="149" width="0.3681%" height="15" fill="rgb(208,124,10)"/><text x="53.8696%" y="159.50"></text></g><g><title>__wake_up_common (3 samples, 0.37%)</title><rect x="53.6196%" y="133" width="0.3681%" height="15" fill="rgb(222,33,0)"/><text x="53.8696%" y="143.50"></text></g><g><title>pollwake (3 samples, 0.37%)</title><rect x="53.6196%" y="117" width="0.3681%" height="15" fill="rgb(234,209,28)"/><text x="53.8696%" y="127.50"></text></g><g><title>try_to_wake_up (3 samples, 0.37%)</title><rect x="53.6196%" y="101" width="0.3681%" height="15" fill="rgb(224,11,23)"/><text x="53.8696%" y="111.50"></text></g><g><title>enqueue_task_fair (2 samples, 0.25%)</title><rect x="53.7423%" y="85" width="0.2454%" height="15" fill="rgb(232,99,1)"/><text x="53.9923%" y="95.50"></text></g><g><title>enqueue_entity (2 samples, 0.25%)</title><rect x="53.7423%" y="69" width="0.2454%" height="15" fill="rgb(237,95,45)"/><text x="53.9923%" y="79.50"></text></g><g><title>update_load_avg (1 samples, 0.12%)</title><rect x="53.8650%" y="53" width="0.1227%" height="15" fill="rgb(208,109,11)"/><text x="54.1150%" y="63.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.12%)</title><rect x="53.8650%" y="37" width="0.1227%" height="15" fill="rgb(216,190,48)"/><text x="54.1150%" y="47.50"></text></g><g><title>__kfree_skb (1 samples, 0.12%)</title><rect x="54.1104%" y="149" width="0.1227%" height="15" fill="rgb(251,171,36)"/><text x="54.3604%" y="159.50"></text></g><g><title>kfree (1 samples, 0.12%)</title><rect x="54.1104%" y="133" width="0.1227%" height="15" fill="rgb(230,62,22)"/><text x="54.3604%" y="143.50"></text></g><g><title>slab_free_freelist_hook (1 samples, 0.12%)</title><rect x="54.1104%" y="117" width="0.1227%" height="15" fill="rgb(225,114,35)"/><text x="54.3604%" y="127.50"></text></g><g><title>bictcp_acked (1 samples, 0.12%)</title><rect x="54.2331%" y="149" width="0.1227%" height="15" fill="rgb(215,118,42)"/><text x="54.4831%" y="159.50"></text></g><g><title>kfree_skbmem (1 samples, 0.12%)</title><rect x="54.3558%" y="149" width="0.1227%" height="15" fill="rgb(243,119,21)"/><text x="54.6058%" y="159.50"></text></g><g><title>kmem_cache_free (2 samples, 0.25%)</title><rect x="54.4785%" y="149" width="0.2454%" height="15" fill="rgb(252,177,53)"/><text x="54.7285%" y="159.50"></text></g><g><title>cache_from_obj (1 samples, 0.12%)</title><rect x="54.6012%" y="133" width="0.1227%" height="15" fill="rgb(237,209,29)"/><text x="54.8512%" y="143.50"></text></g><g><title>rb_erase (1 samples, 0.12%)</title><rect x="54.7239%" y="149" width="0.1227%" height="15" fill="rgb(212,65,23)"/><text x="54.9739%" y="159.50"></text></g><g><title>tcp_rack_update_reo_wnd (1 samples, 0.12%)</title><rect x="54.8466%" y="149" width="0.1227%" height="15" fill="rgb(230,222,46)"/><text x="55.0966%" y="159.50"></text></g><g><title>tcp_schedule_loss_probe.part.0 (1 samples, 0.12%)</title><rect x="54.9693%" y="149" width="0.1227%" height="15" fill="rgb(215,135,32)"/><text x="55.2193%" y="159.50"></text></g><g><title>tcp_ack (10 samples, 1.23%)</title><rect x="53.9877%" y="165" width="1.2270%" height="15" fill="rgb(246,101,22)"/><text x="54.2377%" y="175.50"></text></g><g><title>tcp_update_pacing_rate (1 samples, 0.12%)</title><rect x="55.0920%" y="149" width="0.1227%" height="15" fill="rgb(206,107,13)"/><text x="55.3420%" y="159.50"></text></g><g><title>tcp_check_space (1 samples, 0.12%)</title><rect x="55.2147%" y="165" width="0.1227%" height="15" fill="rgb(250,100,44)"/><text x="55.4647%" y="175.50"></text></g><g><title>tcp_queue_rcv (1 samples, 0.12%)</title><rect x="55.3374%" y="165" width="0.1227%" height="15" fill="rgb(231,147,38)"/><text x="55.5874%" y="175.50"></text></g><g><title>__tcp_transmit_skb (32 samples, 3.93%)</title><rect x="51.7791%" y="453" width="3.9264%" height="15" fill="rgb(229,8,40)"/><text x="52.0291%" y="463.50">__tc..</text></g><g><title>__ip_queue_xmit (32 samples, 3.93%)</title><rect x="51.7791%" y="437" width="3.9264%" height="15" fill="rgb(221,135,30)"/><text x="52.0291%" y="447.50">__ip..</text></g><g><title>ip_output (31 samples, 3.80%)</title><rect x="51.9018%" y="421" width="3.8037%" height="15" fill="rgb(249,193,18)"/><text x="52.1518%" y="431.50">ip_o..</text></g><g><title>ip_finish_output2 (31 samples, 3.80%)</title><rect x="51.9018%" y="405" width="3.8037%" height="15" fill="rgb(209,133,39)"/><text x="52.1518%" y="415.50">ip_f..</text></g><g><title>__local_bh_enable_ip (28 samples, 3.44%)</title><rect x="52.2699%" y="389" width="3.4356%" height="15" fill="rgb(232,100,14)"/><text x="52.5199%" y="399.50">__l..</text></g><g><title>do_softirq (28 samples, 3.44%)</title><rect x="52.2699%" y="373" width="3.4356%" height="15" fill="rgb(224,185,1)"/><text x="52.5199%" y="383.50">do_..</text></g><g><title>do_softirq_own_stack (28 samples, 3.44%)</title><rect x="52.2699%" y="357" width="3.4356%" height="15" fill="rgb(223,139,8)"/><text x="52.5199%" y="367.50">do_..</text></g><g><title>__do_softirq (28 samples, 3.44%)</title><rect x="52.2699%" y="341" width="3.4356%" height="15" fill="rgb(232,213,38)"/><text x="52.5199%" y="351.50">__d..</text></g><g><title>net_rx_action (28 samples, 3.44%)</title><rect x="52.2699%" y="325" width="3.4356%" height="15" fill="rgb(207,94,22)"/><text x="52.5199%" y="335.50">net..</text></g><g><title>process_backlog (26 samples, 3.19%)</title><rect x="52.5153%" y="309" width="3.1902%" height="15" fill="rgb(219,183,54)"/><text x="52.7653%" y="319.50">pro..</text></g><g><title>__netif_receive_skb_one_core (26 samples, 3.19%)</title><rect x="52.5153%" y="293" width="3.1902%" height="15" fill="rgb(216,185,54)"/><text x="52.7653%" y="303.50">__n..</text></g><g><title>ip_rcv (25 samples, 3.07%)</title><rect x="52.6380%" y="277" width="3.0675%" height="15" fill="rgb(254,217,39)"/><text x="52.8880%" y="287.50">ip_..</text></g><g><title>ip_local_deliver (25 samples, 3.07%)</title><rect x="52.6380%" y="261" width="3.0675%" height="15" fill="rgb(240,178,23)"/><text x="52.8880%" y="271.50">ip_..</text></g><g><title>ip_local_deliver_finish (25 samples, 3.07%)</title><rect x="52.6380%" y="245" width="3.0675%" height="15" fill="rgb(218,11,47)"/><text x="52.8880%" y="255.50">ip_..</text></g><g><title>ip_protocol_deliver_rcu (25 samples, 3.07%)</title><rect x="52.6380%" y="229" width="3.0675%" height="15" fill="rgb(218,51,51)"/><text x="52.8880%" y="239.50">ip_..</text></g><g><title>tcp_v4_rcv (24 samples, 2.94%)</title><rect x="52.7607%" y="213" width="2.9448%" height="15" fill="rgb(238,126,27)"/><text x="53.0107%" y="223.50">tc..</text></g><g><title>tcp_v4_do_rcv (22 samples, 2.70%)</title><rect x="53.0061%" y="197" width="2.6994%" height="15" fill="rgb(249,202,22)"/><text x="53.2561%" y="207.50">tc..</text></g><g><title>tcp_rcv_established (22 samples, 2.70%)</title><rect x="53.0061%" y="181" width="2.6994%" height="15" fill="rgb(254,195,49)"/><text x="53.2561%" y="191.50">tc..</text></g><g><title>tcp_send_delayed_ack (2 samples, 0.25%)</title><rect x="55.4601%" y="165" width="0.2454%" height="15" fill="rgb(208,123,14)"/><text x="55.7101%" y="175.50"></text></g><g><title>ktime_get (1 samples, 0.12%)</title><rect x="55.7055%" y="453" width="0.1227%" height="15" fill="rgb(224,200,8)"/><text x="55.9555%" y="463.50"></text></g><g><title>__tcp_push_pending_frames (36 samples, 4.42%)</title><rect x="51.5337%" y="485" width="4.4172%" height="15" fill="rgb(217,61,36)"/><text x="51.7837%" y="495.50">__tcp..</text></g><g><title>tcp_write_xmit (36 samples, 4.42%)</title><rect x="51.5337%" y="469" width="4.4172%" height="15" fill="rgb(206,35,45)"/><text x="51.7837%" y="479.50">tcp_w..</text></g><g><title>tcp_event_new_data_sent (1 samples, 0.12%)</title><rect x="55.8282%" y="453" width="0.1227%" height="15" fill="rgb(217,65,33)"/><text x="56.0782%" y="463.50"></text></g><g><title>sk_page_frag_refill (1 samples, 0.12%)</title><rect x="55.9509%" y="485" width="0.1227%" height="15" fill="rgb(222,158,48)"/><text x="56.2009%" y="495.50"></text></g><g><title>skb_page_frag_refill (1 samples, 0.12%)</title><rect x="55.9509%" y="469" width="0.1227%" height="15" fill="rgb(254,2,54)"/><text x="56.2009%" y="479.50"></text></g><g><title>skb_do_copy_data_nocache (1 samples, 0.12%)</title><rect x="56.0736%" y="485" width="0.1227%" height="15" fill="rgb(250,143,38)"/><text x="56.3236%" y="495.50"></text></g><g><title>_copy_from_iter_full (1 samples, 0.12%)</title><rect x="56.0736%" y="469" width="0.1227%" height="15" fill="rgb(248,25,0)"/><text x="56.3236%" y="479.50"></text></g><g><title>iov_iter_advance (1 samples, 0.12%)</title><rect x="56.0736%" y="453" width="0.1227%" height="15" fill="rgb(206,152,27)"/><text x="56.3236%" y="463.50"></text></g><g><title>__x64_sys_sendto (40 samples, 4.91%)</title><rect x="51.4110%" y="565" width="4.9080%" height="15" fill="rgb(240,77,30)"/><text x="51.6610%" y="575.50">__x64_..</text></g><g><title>__sys_sendto (40 samples, 4.91%)</title><rect x="51.4110%" y="549" width="4.9080%" height="15" fill="rgb(231,5,3)"/><text x="51.6610%" y="559.50">__sys_..</text></g><g><title>sock_sendmsg (40 samples, 4.91%)</title><rect x="51.4110%" y="533" width="4.9080%" height="15" fill="rgb(207,226,32)"/><text x="51.6610%" y="543.50">sock_s..</text></g><g><title>tcp_sendmsg (40 samples, 4.91%)</title><rect x="51.4110%" y="517" width="4.9080%" height="15" fill="rgb(222,207,47)"/><text x="51.6610%" y="527.50">tcp_se..</text></g><g><title>tcp_sendmsg_locked (39 samples, 4.79%)</title><rect x="51.5337%" y="501" width="4.7853%" height="15" fill="rgb(229,115,45)"/><text x="51.7837%" y="511.50">tcp_se..</text></g><g><title>tcp_stream_memory_free (1 samples, 0.12%)</title><rect x="56.1963%" y="485" width="0.1227%" height="15" fill="rgb(224,191,6)"/><text x="56.4463%" y="495.50"></text></g><g><title>syscall_slow_exit_work (1 samples, 0.12%)</title><rect x="56.3190%" y="565" width="0.1227%" height="15" fill="rgb(230,227,24)"/><text x="56.5690%" y="575.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.12%)</title><rect x="56.3190%" y="549" width="0.1227%" height="15" fill="rgb(228,80,19)"/><text x="56.5690%" y="559.50"></text></g><g><title>do_syscall_64 (44 samples, 5.40%)</title><rect x="51.1656%" y="581" width="5.3988%" height="15" fill="rgb(247,229,0)"/><text x="51.4156%" y="591.50">do_sysc..</text></g><g><title>syscall_trace_enter (1 samples, 0.12%)</title><rect x="56.4417%" y="565" width="0.1227%" height="15" fill="rgb(237,194,15)"/><text x="56.6917%" y="575.50"></text></g><g><title>__audit_syscall_entry (1 samples, 0.12%)</title><rect x="56.4417%" y="549" width="0.1227%" height="15" fill="rgb(219,203,20)"/><text x="56.6917%" y="559.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (71 samples, 8.71%)</title><rect x="47.9755%" y="709" width="8.7117%" height="15" fill="rgb(234,128,8)"/><text x="48.2255%" y="719.50">&lt;mysql::conn..</text></g><g><title>mysql::conn::Conn::_query (71 samples, 8.71%)</title><rect x="47.9755%" y="693" width="8.7117%" height="15" fill="rgb(248,202,8)"/><text x="48.2255%" y="703.50">mysql::conn:..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (45 samples, 5.52%)</title><rect x="51.1656%" y="677" width="5.5215%" height="15" fill="rgb(206,104,37)"/><text x="51.4156%" y="687.50">mysql_c..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (45 samples, 5.52%)</title><rect x="51.1656%" y="661" width="5.5215%" height="15" fill="rgb(223,8,27)"/><text x="51.4156%" y="671.50">std::io..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (45 samples, 5.52%)</title><rect x="51.1656%" y="645" width="5.5215%" height="15" fill="rgb(216,217,28)"/><text x="51.4156%" y="655.50">&lt;std::n..</text></g><g><title>std::sys_common::net::TcpStream::write (45 samples, 5.52%)</title><rect x="51.1656%" y="629" width="5.5215%" height="15" fill="rgb(249,199,1)"/><text x="51.4156%" y="639.50">std::sy..</text></g><g><title>__libc_send (45 samples, 5.52%)</title><rect x="51.1656%" y="613" width="5.5215%" height="15" fill="rgb(240,85,17)"/><text x="51.4156%" y="623.50">__libc_..</text></g><g><title>entry_SYSCALL_64 (45 samples, 5.52%)</title><rect x="51.1656%" y="597" width="5.5215%" height="15" fill="rgb(206,108,45)"/><text x="51.4156%" y="607.50">entry_S..</text></g><g><title>prepare_exit_to_usermode (1 samples, 0.12%)</title><rect x="56.5644%" y="581" width="0.1227%" height="15" fill="rgb(245,210,41)"/><text x="56.8144%" y="591.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="57.0552%" y="597" width="0.1227%" height="15" fill="rgb(206,13,37)"/><text x="57.3052%" y="607.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.12%)</title><rect x="57.1779%" y="597" width="0.1227%" height="15" fill="rgb(250,61,18)"/><text x="57.4279%" y="607.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.12%)</title><rect x="57.1779%" y="581" width="0.1227%" height="15" fill="rgb(235,172,48)"/><text x="57.4279%" y="591.50"></text></g><g><title>_int_free (1 samples, 0.12%)</title><rect x="57.3006%" y="597" width="0.1227%" height="15" fill="rgb(249,201,17)"/><text x="57.5506%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (6 samples, 0.74%)</title><rect x="56.8098%" y="629" width="0.7362%" height="15" fill="rgb(219,208,6)"/><text x="57.0598%" y="639.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (6 samples, 0.74%)</title><rect x="56.8098%" y="613" width="0.7362%" height="15" fill="rgb(248,31,23)"/><text x="57.0598%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="57.4233%" y="597" width="0.1227%" height="15" fill="rgb(245,15,42)"/><text x="57.6733%" y="607.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.12%)</title><rect x="57.4233%" y="581" width="0.1227%" height="15" fill="rgb(222,217,39)"/><text x="57.6733%" y="591.50"></text></g><g><title>_int_realloc (1 samples, 0.12%)</title><rect x="57.4233%" y="565" width="0.1227%" height="15" fill="rgb(210,219,27)"/><text x="57.6733%" y="575.50"></text></g><g><title>_int_malloc (1 samples, 0.12%)</title><rect x="57.4233%" y="549" width="0.1227%" height="15" fill="rgb(252,166,36)"/><text x="57.6733%" y="559.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (7 samples, 0.86%)</title><rect x="56.8098%" y="645" width="0.8589%" height="15" fill="rgb(245,132,34)"/><text x="57.0598%" y="655.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.12%)</title><rect x="57.5460%" y="629" width="0.1227%" height="15" fill="rgb(236,54,3)"/><text x="57.7960%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="57.5460%" y="613" width="0.1227%" height="15" fill="rgb(241,173,43)"/><text x="57.7960%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (9 samples, 1.10%)</title><rect x="56.8098%" y="677" width="1.1043%" height="15" fill="rgb(215,190,9)"/><text x="57.0598%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Values as sql_parser::ast::display::AstDisplay&gt;::fmt (9 samples, 1.10%)</title><rect x="56.8098%" y="661" width="1.1043%" height="15" fill="rgb(242,101,16)"/><text x="57.0598%" y="671.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.25%)</title><rect x="57.6687%" y="645" width="0.2454%" height="15" fill="rgb(223,190,21)"/><text x="57.9187%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.12%)</title><rect x="57.7914%" y="629" width="0.1227%" height="15" fill="rgb(215,228,25)"/><text x="58.0414%" y="639.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.12%)</title><rect x="57.7914%" y="613" width="0.1227%" height="15" fill="rgb(225,36,22)"/><text x="58.0414%" y="623.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="57.7914%" y="597" width="0.1227%" height="15" fill="rgb(251,106,46)"/><text x="58.0414%" y="607.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.25%)</title><rect x="57.9141%" y="613" width="0.2454%" height="15" fill="rgb(208,90,1)"/><text x="58.1641%" y="623.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (2 samples, 0.25%)</title><rect x="57.9141%" y="597" width="0.2454%" height="15" fill="rgb(243,10,4)"/><text x="58.1641%" y="607.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.12%)</title><rect x="58.1595%" y="613" width="0.1227%" height="15" fill="rgb(212,137,27)"/><text x="58.4095%" y="623.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::len_utf8 (1 samples, 0.12%)</title><rect x="58.1595%" y="597" width="0.1227%" height="15" fill="rgb(231,220,49)"/><text x="58.4095%" y="607.50"></text></g><g><title>core::char::methods::len_utf8 (1 samples, 0.12%)</title><rect x="58.1595%" y="581" width="0.1227%" height="15" fill="rgb(237,96,20)"/><text x="58.4095%" y="591.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (8 samples, 0.98%)</title><rect x="57.9141%" y="629" width="0.9816%" height="15" fill="rgb(239,229,30)"/><text x="58.1641%" y="639.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (5 samples, 0.61%)</title><rect x="58.2822%" y="613" width="0.6135%" height="15" fill="rgb(219,65,33)"/><text x="58.5322%" y="623.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (3 samples, 0.37%)</title><rect x="58.5276%" y="597" width="0.3681%" height="15" fill="rgb(243,134,7)"/><text x="58.7776%" y="607.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (3 samples, 0.37%)</title><rect x="58.5276%" y="581" width="0.3681%" height="15" fill="rgb(216,177,54)"/><text x="58.7776%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (9 samples, 1.10%)</title><rect x="57.9141%" y="661" width="1.1043%" height="15" fill="rgb(211,160,20)"/><text x="58.1641%" y="671.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (9 samples, 1.10%)</title><rect x="57.9141%" y="645" width="1.1043%" height="15" fill="rgb(239,85,39)"/><text x="58.1641%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (1 samples, 0.12%)</title><rect x="58.8957%" y="629" width="0.1227%" height="15" fill="rgb(232,125,22)"/><text x="59.1457%" y="639.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.12%)</title><rect x="58.8957%" y="613" width="0.1227%" height="15" fill="rgb(244,57,34)"/><text x="59.1457%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.12%)</title><rect x="58.8957%" y="597" width="0.1227%" height="15" fill="rgb(214,203,32)"/><text x="59.1457%" y="607.50"></text></g><g><title>__GI___libc_free (1 samples, 0.12%)</title><rect x="59.1411%" y="645" width="0.1227%" height="15" fill="rgb(207,58,43)"/><text x="59.3911%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.25%)</title><rect x="59.2638%" y="645" width="0.2454%" height="15" fill="rgb(215,193,15)"/><text x="59.5138%" y="655.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.25%)</title><rect x="59.2638%" y="629" width="0.2454%" height="15" fill="rgb(232,15,44)"/><text x="59.5138%" y="639.50"></text></g><g><title>_int_realloc (1 samples, 0.12%)</title><rect x="59.3865%" y="613" width="0.1227%" height="15" fill="rgb(212,3,48)"/><text x="59.6365%" y="623.50"></text></g><g><title>_int_malloc (1 samples, 0.12%)</title><rect x="59.3865%" y="597" width="0.1227%" height="15" fill="rgb(218,128,7)"/><text x="59.6365%" y="607.50"></text></g><g><title>core::fmt::write (25 samples, 3.07%)</title><rect x="56.6871%" y="709" width="3.0675%" height="15" fill="rgb(226,216,39)"/><text x="56.9371%" y="719.50">cor..</text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (25 samples, 3.07%)</title><rect x="56.6871%" y="693" width="3.0675%" height="15" fill="rgb(243,47,51)"/><text x="56.9371%" y="703.50">&lt;sq..</text></g><g><title>&lt;sql_parser::ast::defs::statement::InsertStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (15 samples, 1.84%)</title><rect x="57.9141%" y="677" width="1.8405%" height="15" fill="rgb(241,183,40)"/><text x="58.1641%" y="687.50">&lt;..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (6 samples, 0.74%)</title><rect x="59.0184%" y="661" width="0.7362%" height="15" fill="rgb(231,217,32)"/><text x="59.2684%" y="671.50"></text></g><g><title>core::fmt::write (2 samples, 0.25%)</title><rect x="59.5092%" y="645" width="0.2454%" height="15" fill="rgb(229,61,38)"/><text x="59.7592%" y="655.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.12%)</title><rect x="59.6319%" y="629" width="0.1227%" height="15" fill="rgb(225,210,5)"/><text x="59.8819%" y="639.50"></text></g><g><title>decor::answer_rows (1 samples, 0.12%)</title><rect x="59.7546%" y="709" width="0.1227%" height="15" fill="rgb(231,79,45)"/><text x="60.0046%" y="719.50"></text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::finish (1 samples, 0.12%)</title><rect x="59.7546%" y="693" width="0.1227%" height="15" fill="rgb(224,100,7)"/><text x="60.0046%" y="703.50"></text></g><g><title>msql_srv::writers::write_ok_packet (1 samples, 0.12%)</title><rect x="59.7546%" y="677" width="0.1227%" height="15" fill="rgb(241,198,18)"/><text x="60.0046%" y="687.50"></text></g><g><title>mysql_common::io::WriteMysqlExt::write_lenenc_int (1 samples, 0.12%)</title><rect x="59.7546%" y="661" width="0.1227%" height="15" fill="rgb(252,97,53)"/><text x="60.0046%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.12%)</title><rect x="59.7546%" y="645" width="0.1227%" height="15" fill="rgb(220,88,7)"/><text x="60.0046%" y="655.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.12%)</title><rect x="59.8773%" y="693" width="0.1227%" height="15" fill="rgb(213,176,14)"/><text x="60.1273%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.12%)</title><rect x="59.8773%" y="677" width="0.1227%" height="15" fill="rgb(246,73,7)"/><text x="60.1273%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.12%)</title><rect x="59.8773%" y="661" width="0.1227%" height="15" fill="rgb(245,64,36)"/><text x="60.1273%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.12%)</title><rect x="59.8773%" y="645" width="0.1227%" height="15" fill="rgb(245,80,10)"/><text x="60.1273%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.12%)</title><rect x="59.8773%" y="629" width="0.1227%" height="15" fill="rgb(232,107,50)"/><text x="60.1273%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.12%)</title><rect x="59.8773%" y="613" width="0.1227%" height="15" fill="rgb(253,3,0)"/><text x="60.1273%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.12%)</title><rect x="59.8773%" y="597" width="0.1227%" height="15" fill="rgb(212,99,53)"/><text x="60.1273%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.12%)</title><rect x="59.8773%" y="581" width="0.1227%" height="15" fill="rgb(249,111,54)"/><text x="60.1273%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.12%)</title><rect x="59.8773%" y="565" width="0.1227%" height="15" fill="rgb(249,55,30)"/><text x="60.1273%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.12%)</title><rect x="59.8773%" y="549" width="0.1227%" height="15" fill="rgb(237,47,42)"/><text x="60.1273%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.12%)</title><rect x="59.8773%" y="533" width="0.1227%" height="15" fill="rgb(211,20,18)"/><text x="60.1273%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.12%)</title><rect x="59.8773%" y="517" width="0.1227%" height="15" fill="rgb(231,203,46)"/><text x="60.1273%" y="527.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.12%)</title><rect x="59.8773%" y="501" width="0.1227%" height="15" fill="rgb(237,142,3)"/><text x="60.1273%" y="511.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (101 samples, 12.39%)</title><rect x="47.8528%" y="725" width="12.3926%" height="15" fill="rgb(241,107,1)"/><text x="48.1028%" y="735.50">&lt;decor::Shim as msq..</text></g><g><title>sql_parser::parser::parse_statements (3 samples, 0.37%)</title><rect x="59.8773%" y="709" width="0.3681%" height="15" fill="rgb(229,83,13)"/><text x="60.1273%" y="719.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.25%)</title><rect x="60.0000%" y="693" width="0.2454%" height="15" fill="rgb(241,91,40)"/><text x="60.2500%" y="703.50"></text></g><g><title>_int_free (2 samples, 0.25%)</title><rect x="60.0000%" y="677" width="0.2454%" height="15" fill="rgb(225,3,45)"/><text x="60.2500%" y="687.50"></text></g><g><title>msql_srv::commands::parse (1 samples, 0.12%)</title><rect x="60.2454%" y="725" width="0.1227%" height="15" fill="rgb(244,223,14)"/><text x="60.4954%" y="735.50"></text></g><g><title>fput_many (1 samples, 0.12%)</title><rect x="60.7362%" y="549" width="0.1227%" height="15" fill="rgb(224,124,37)"/><text x="60.9862%" y="559.50"></text></g><g><title>__kfree_skb (2 samples, 0.25%)</title><rect x="60.8589%" y="517" width="0.2454%" height="15" fill="rgb(251,171,30)"/><text x="61.1089%" y="527.50"></text></g><g><title>skb_release_head_state (2 samples, 0.25%)</title><rect x="60.8589%" y="501" width="0.2454%" height="15" fill="rgb(236,46,54)"/><text x="61.1089%" y="511.50"></text></g><g><title>dst_release (2 samples, 0.25%)</title><rect x="60.8589%" y="485" width="0.2454%" height="15" fill="rgb(245,213,5)"/><text x="61.1089%" y="495.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.12%)</title><rect x="61.1043%" y="517" width="0.1227%" height="15" fill="rgb(230,144,27)"/><text x="61.3543%" y="527.50"></text></g><g><title>__ip_local_out (1 samples, 0.12%)</title><rect x="61.3497%" y="485" width="0.1227%" height="15" fill="rgb(220,86,6)"/><text x="61.5997%" y="495.50"></text></g><g><title>__kfree_skb (1 samples, 0.12%)</title><rect x="61.7178%" y="229" width="0.1227%" height="15" fill="rgb(240,20,13)"/><text x="61.9678%" y="239.50"></text></g><g><title>skb_release_head_state (1 samples, 0.12%)</title><rect x="61.7178%" y="213" width="0.1227%" height="15" fill="rgb(217,89,34)"/><text x="61.9678%" y="223.50"></text></g><g><title>__tcp_transmit_skb (6 samples, 0.74%)</title><rect x="61.2270%" y="517" width="0.7362%" height="15" fill="rgb(229,13,5)"/><text x="61.4770%" y="527.50"></text></g><g><title>__ip_queue_xmit (5 samples, 0.61%)</title><rect x="61.3497%" y="501" width="0.6135%" height="15" fill="rgb(244,67,35)"/><text x="61.5997%" y="511.50"></text></g><g><title>ip_output (4 samples, 0.49%)</title><rect x="61.4724%" y="485" width="0.4908%" height="15" fill="rgb(221,40,2)"/><text x="61.7224%" y="495.50"></text></g><g><title>ip_finish_output2 (3 samples, 0.37%)</title><rect x="61.5951%" y="469" width="0.3681%" height="15" fill="rgb(237,157,21)"/><text x="61.8451%" y="479.50"></text></g><g><title>__local_bh_enable_ip (3 samples, 0.37%)</title><rect x="61.5951%" y="453" width="0.3681%" height="15" fill="rgb(222,94,11)"/><text x="61.8451%" y="463.50"></text></g><g><title>do_softirq (3 samples, 0.37%)</title><rect x="61.5951%" y="437" width="0.3681%" height="15" fill="rgb(249,113,6)"/><text x="61.8451%" y="447.50"></text></g><g><title>do_softirq_own_stack (3 samples, 0.37%)</title><rect x="61.5951%" y="421" width="0.3681%" height="15" fill="rgb(238,137,36)"/><text x="61.8451%" y="431.50"></text></g><g><title>__do_softirq (3 samples, 0.37%)</title><rect x="61.5951%" y="405" width="0.3681%" height="15" fill="rgb(210,102,26)"/><text x="61.8451%" y="415.50"></text></g><g><title>net_rx_action (3 samples, 0.37%)</title><rect x="61.5951%" y="389" width="0.3681%" height="15" fill="rgb(218,30,30)"/><text x="61.8451%" y="399.50"></text></g><g><title>process_backlog (3 samples, 0.37%)</title><rect x="61.5951%" y="373" width="0.3681%" height="15" fill="rgb(214,67,26)"/><text x="61.8451%" y="383.50"></text></g><g><title>__netif_receive_skb_one_core (3 samples, 0.37%)</title><rect x="61.5951%" y="357" width="0.3681%" height="15" fill="rgb(251,9,53)"/><text x="61.8451%" y="367.50"></text></g><g><title>ip_rcv (2 samples, 0.25%)</title><rect x="61.7178%" y="341" width="0.2454%" height="15" fill="rgb(228,204,25)"/><text x="61.9678%" y="351.50"></text></g><g><title>ip_local_deliver (2 samples, 0.25%)</title><rect x="61.7178%" y="325" width="0.2454%" height="15" fill="rgb(207,153,8)"/><text x="61.9678%" y="335.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.25%)</title><rect x="61.7178%" y="309" width="0.2454%" height="15" fill="rgb(242,9,16)"/><text x="61.9678%" y="319.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.25%)</title><rect x="61.7178%" y="293" width="0.2454%" height="15" fill="rgb(217,211,10)"/><text x="61.9678%" y="303.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.25%)</title><rect x="61.7178%" y="277" width="0.2454%" height="15" fill="rgb(219,228,52)"/><text x="61.9678%" y="287.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.25%)</title><rect x="61.7178%" y="261" width="0.2454%" height="15" fill="rgb(231,92,29)"/><text x="61.9678%" y="271.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.25%)</title><rect x="61.7178%" y="245" width="0.2454%" height="15" fill="rgb(232,8,23)"/><text x="61.9678%" y="255.50"></text></g><g><title>tcp_ack (1 samples, 0.12%)</title><rect x="61.8405%" y="229" width="0.1227%" height="15" fill="rgb(216,211,34)"/><text x="62.0905%" y="239.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.12%)</title><rect x="61.9632%" y="501" width="0.1227%" height="15" fill="rgb(236,151,0)"/><text x="62.2132%" y="511.50"></text></g><g><title>preempt_count_sub (1 samples, 0.12%)</title><rect x="61.9632%" y="485" width="0.1227%" height="15" fill="rgb(209,168,3)"/><text x="62.2132%" y="495.50"></text></g><g><title>do_syscall_64 (17 samples, 2.09%)</title><rect x="60.3681%" y="597" width="2.0859%" height="15" fill="rgb(208,129,28)"/><text x="60.6181%" y="607.50">d..</text></g><g><title>__x64_sys_recvfrom (17 samples, 2.09%)</title><rect x="60.3681%" y="581" width="2.0859%" height="15" fill="rgb(229,78,22)"/><text x="60.6181%" y="591.50">_..</text></g><g><title>__sys_recvfrom (15 samples, 1.84%)</title><rect x="60.6135%" y="565" width="1.8405%" height="15" fill="rgb(228,187,13)"/><text x="60.8635%" y="575.50">_..</text></g><g><title>inet_recvmsg (13 samples, 1.60%)</title><rect x="60.8589%" y="549" width="1.5951%" height="15" fill="rgb(240,119,24)"/><text x="61.1089%" y="559.50"></text></g><g><title>tcp_recvmsg (13 samples, 1.60%)</title><rect x="60.8589%" y="533" width="1.5951%" height="15" fill="rgb(209,194,42)"/><text x="61.1089%" y="543.50"></text></g><g><title>sk_wait_data (4 samples, 0.49%)</title><rect x="61.9632%" y="517" width="0.4908%" height="15" fill="rgb(247,200,46)"/><text x="62.2132%" y="527.50"></text></g><g><title>wait_woken (3 samples, 0.37%)</title><rect x="62.0859%" y="501" width="0.3681%" height="15" fill="rgb(218,76,16)"/><text x="62.3359%" y="511.50"></text></g><g><title>schedule_timeout (3 samples, 0.37%)</title><rect x="62.0859%" y="485" width="0.3681%" height="15" fill="rgb(225,21,48)"/><text x="62.3359%" y="495.50"></text></g><g><title>schedule (3 samples, 0.37%)</title><rect x="62.0859%" y="469" width="0.3681%" height="15" fill="rgb(239,223,50)"/><text x="62.3359%" y="479.50"></text></g><g><title>__schedule (2 samples, 0.25%)</title><rect x="62.2086%" y="453" width="0.2454%" height="15" fill="rgb(244,45,21)"/><text x="62.4586%" y="463.50"></text></g><g><title>pick_next_task_fair (1 samples, 0.12%)</title><rect x="62.3313%" y="437" width="0.1227%" height="15" fill="rgb(232,33,43)"/><text x="62.5813%" y="447.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (19 samples, 2.33%)</title><rect x="60.3681%" y="709" width="2.3313%" height="15" fill="rgb(209,8,3)"/><text x="60.6181%" y="719.50">&lt;..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (19 samples, 2.33%)</title><rect x="60.3681%" y="693" width="2.3313%" height="15" fill="rgb(214,25,53)"/><text x="60.6181%" y="703.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::read (19 samples, 2.33%)</title><rect x="60.3681%" y="677" width="2.3313%" height="15" fill="rgb(254,186,54)"/><text x="60.6181%" y="687.50">s..</text></g><g><title>std::sys::unix::net::Socket::read (19 samples, 2.33%)</title><rect x="60.3681%" y="661" width="2.3313%" height="15" fill="rgb(208,174,49)"/><text x="60.6181%" y="671.50">s..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (19 samples, 2.33%)</title><rect x="60.3681%" y="645" width="2.3313%" height="15" fill="rgb(233,191,51)"/><text x="60.6181%" y="655.50">s..</text></g><g><title>__libc_recv (19 samples, 2.33%)</title><rect x="60.3681%" y="629" width="2.3313%" height="15" fill="rgb(222,134,10)"/><text x="60.6181%" y="639.50">_..</text></g><g><title>entry_SYSCALL_64 (19 samples, 2.33%)</title><rect x="60.3681%" y="613" width="2.3313%" height="15" fill="rgb(230,226,20)"/><text x="60.6181%" y="623.50">e..</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.25%)</title><rect x="62.4540%" y="597" width="0.2454%" height="15" fill="rgb(251,111,25)"/><text x="62.7040%" y="607.50"></text></g><g><title>msql_srv::packet::PacketReader&lt;R&gt;::next (20 samples, 2.45%)</title><rect x="60.3681%" y="725" width="2.4540%" height="15" fill="rgb(224,40,46)"/><text x="60.6181%" y="735.50">ms..</text></g><g><title>msql_srv::packet::packet (1 samples, 0.12%)</title><rect x="62.6994%" y="709" width="0.1227%" height="15" fill="rgb(236,108,47)"/><text x="62.9494%" y="719.50"></text></g><g><title>__pthread_disable_asynccancel (1 samples, 0.12%)</title><rect x="62.9448%" y="661" width="0.1227%" height="15" fill="rgb(234,93,0)"/><text x="63.1948%" y="671.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.12%)</title><rect x="63.6810%" y="485" width="0.1227%" height="15" fill="rgb(224,213,32)"/><text x="63.9310%" y="495.50"></text></g><g><title>__sk_dst_check (1 samples, 0.12%)</title><rect x="63.8037%" y="485" width="0.1227%" height="15" fill="rgb(251,11,48)"/><text x="64.0537%" y="495.50"></text></g><g><title>ipv4_dst_check (1 samples, 0.12%)</title><rect x="63.8037%" y="469" width="0.1227%" height="15" fill="rgb(236,173,5)"/><text x="64.0537%" y="479.50"></text></g><g><title>__dev_queue_xmit (1 samples, 0.12%)</title><rect x="63.9264%" y="453" width="0.1227%" height="15" fill="rgb(230,95,12)"/><text x="64.1764%" y="463.50"></text></g><g><title>dev_hard_start_xmit (1 samples, 0.12%)</title><rect x="63.9264%" y="437" width="0.1227%" height="15" fill="rgb(232,209,1)"/><text x="64.1764%" y="447.50"></text></g><g><title>loopback_xmit (1 samples, 0.12%)</title><rect x="63.9264%" y="421" width="0.1227%" height="15" fill="rgb(232,6,1)"/><text x="64.1764%" y="431.50"></text></g><g><title>netif_rx (1 samples, 0.12%)</title><rect x="63.9264%" y="405" width="0.1227%" height="15" fill="rgb(210,224,50)"/><text x="64.1764%" y="415.50"></text></g><g><title>netif_rx_internal (1 samples, 0.12%)</title><rect x="63.9264%" y="389" width="0.1227%" height="15" fill="rgb(228,127,35)"/><text x="64.1764%" y="399.50"></text></g><g><title>irqtime_account_irq (1 samples, 0.12%)</title><rect x="64.0491%" y="389" width="0.1227%" height="15" fill="rgb(245,102,45)"/><text x="64.2991%" y="399.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.12%)</title><rect x="64.0491%" y="373" width="0.1227%" height="15" fill="rgb(214,1,49)"/><text x="64.2991%" y="383.50"></text></g><g><title>__netif_receive_skb_core (1 samples, 0.12%)</title><rect x="64.1718%" y="341" width="0.1227%" height="15" fill="rgb(226,163,40)"/><text x="64.4218%" y="351.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.12%)</title><rect x="64.6626%" y="165" width="0.1227%" height="15" fill="rgb(239,212,28)"/><text x="64.9126%" y="175.50"></text></g><g><title>preempt_count_add (1 samples, 0.12%)</title><rect x="64.6626%" y="149" width="0.1227%" height="15" fill="rgb(220,20,13)"/><text x="64.9126%" y="159.50"></text></g><g><title>enqueue_task (2 samples, 0.25%)</title><rect x="64.7853%" y="165" width="0.2454%" height="15" fill="rgb(210,164,35)"/><text x="65.0353%" y="175.50"></text></g><g><title>psi_task_change (2 samples, 0.25%)</title><rect x="64.7853%" y="149" width="0.2454%" height="15" fill="rgb(248,109,41)"/><text x="65.0353%" y="159.50"></text></g><g><title>psi_group_change (2 samples, 0.25%)</title><rect x="64.7853%" y="133" width="0.2454%" height="15" fill="rgb(238,23,50)"/><text x="65.0353%" y="143.50"></text></g><g><title>enqueue_task_fair (2 samples, 0.25%)</title><rect x="65.0307%" y="165" width="0.2454%" height="15" fill="rgb(211,48,49)"/><text x="65.2807%" y="175.50"></text></g><g><title>enqueue_entity (2 samples, 0.25%)</title><rect x="65.0307%" y="149" width="0.2454%" height="15" fill="rgb(223,36,21)"/><text x="65.2807%" y="159.50"></text></g><g><title>update_load_avg (2 samples, 0.25%)</title><rect x="65.0307%" y="133" width="0.2454%" height="15" fill="rgb(207,123,46)"/><text x="65.2807%" y="143.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.12%)</title><rect x="65.1534%" y="117" width="0.1227%" height="15" fill="rgb(240,218,32)"/><text x="65.4034%" y="127.50"></text></g><g><title>sock_def_readable (6 samples, 0.74%)</title><rect x="64.6626%" y="229" width="0.7362%" height="15" fill="rgb(252,5,43)"/><text x="64.9126%" y="239.50"></text></g><g><title>__wake_up_common_lock (6 samples, 0.74%)</title><rect x="64.6626%" y="213" width="0.7362%" height="15" fill="rgb(252,84,19)"/><text x="64.9126%" y="223.50"></text></g><g><title>__wake_up_common (6 samples, 0.74%)</title><rect x="64.6626%" y="197" width="0.7362%" height="15" fill="rgb(243,152,39)"/><text x="64.9126%" y="207.50"></text></g><g><title>try_to_wake_up (6 samples, 0.74%)</title><rect x="64.6626%" y="181" width="0.7362%" height="15" fill="rgb(234,160,15)"/><text x="64.9126%" y="191.50"></text></g><g><title>ttwu_do_wakeup (1 samples, 0.12%)</title><rect x="65.2761%" y="165" width="0.1227%" height="15" fill="rgb(237,34,20)"/><text x="65.5261%" y="175.50"></text></g><g><title>check_preempt_curr (1 samples, 0.12%)</title><rect x="65.2761%" y="149" width="0.1227%" height="15" fill="rgb(229,97,13)"/><text x="65.5261%" y="159.50"></text></g><g><title>resched_curr (1 samples, 0.12%)</title><rect x="65.2761%" y="133" width="0.1227%" height="15" fill="rgb(234,71,50)"/><text x="65.5261%" y="143.50"></text></g><g><title>kfree (2 samples, 0.25%)</title><rect x="65.7669%" y="197" width="0.2454%" height="15" fill="rgb(253,155,4)"/><text x="66.0169%" y="207.50"></text></g><g><title>__slab_free (2 samples, 0.25%)</title><rect x="65.7669%" y="181" width="0.2454%" height="15" fill="rgb(222,185,37)"/><text x="66.0169%" y="191.50"></text></g><g><title>__kfree_skb (3 samples, 0.37%)</title><rect x="65.7669%" y="213" width="0.3681%" height="15" fill="rgb(251,177,13)"/><text x="66.0169%" y="223.50"></text></g><g><title>skb_release_data (1 samples, 0.12%)</title><rect x="66.0123%" y="197" width="0.1227%" height="15" fill="rgb(250,179,40)"/><text x="66.2623%" y="207.50"></text></g><g><title>ip_local_deliver (16 samples, 1.96%)</title><rect x="64.2945%" y="325" width="1.9632%" height="15" fill="rgb(242,44,2)"/><text x="64.5445%" y="335.50">i..</text></g><g><title>ip_local_deliver_finish (15 samples, 1.84%)</title><rect x="64.4172%" y="309" width="1.8405%" height="15" fill="rgb(216,177,13)"/><text x="64.6672%" y="319.50">i..</text></g><g><title>ip_protocol_deliver_rcu (15 samples, 1.84%)</title><rect x="64.4172%" y="293" width="1.8405%" height="15" fill="rgb(216,106,43)"/><text x="64.6672%" y="303.50">i..</text></g><g><title>tcp_v4_rcv (14 samples, 1.72%)</title><rect x="64.5399%" y="277" width="1.7178%" height="15" fill="rgb(216,183,2)"/><text x="64.7899%" y="287.50"></text></g><g><title>tcp_v4_do_rcv (14 samples, 1.72%)</title><rect x="64.5399%" y="261" width="1.7178%" height="15" fill="rgb(249,75,3)"/><text x="64.7899%" y="271.50"></text></g><g><title>tcp_rcv_established (14 samples, 1.72%)</title><rect x="64.5399%" y="245" width="1.7178%" height="15" fill="rgb(219,67,39)"/><text x="64.7899%" y="255.50"></text></g><g><title>tcp_ack (7 samples, 0.86%)</title><rect x="65.3988%" y="229" width="0.8589%" height="15" fill="rgb(253,228,2)"/><text x="65.6488%" y="239.50"></text></g><g><title>tcp_newly_delivered (1 samples, 0.12%)</title><rect x="66.1350%" y="213" width="0.1227%" height="15" fill="rgb(235,138,27)"/><text x="66.3850%" y="223.50"></text></g><g><title>__netif_receive_skb_one_core (18 samples, 2.21%)</title><rect x="64.1718%" y="357" width="2.2086%" height="15" fill="rgb(236,97,51)"/><text x="64.4218%" y="367.50">_..</text></g><g><title>ip_rcv (17 samples, 2.09%)</title><rect x="64.2945%" y="341" width="2.0859%" height="15" fill="rgb(240,80,30)"/><text x="64.5445%" y="351.50">i..</text></g><g><title>ip_rcv_core (1 samples, 0.12%)</title><rect x="66.2577%" y="325" width="0.1227%" height="15" fill="rgb(230,178,19)"/><text x="66.5077%" y="335.50"></text></g><g><title>__ip_queue_xmit (23 samples, 2.82%)</title><rect x="63.6810%" y="501" width="2.8221%" height="15" fill="rgb(210,190,27)"/><text x="63.9310%" y="511.50">__..</text></g><g><title>ip_output (21 samples, 2.58%)</title><rect x="63.9264%" y="485" width="2.5767%" height="15" fill="rgb(222,107,31)"/><text x="64.1764%" y="495.50">ip..</text></g><g><title>ip_finish_output2 (21 samples, 2.58%)</title><rect x="63.9264%" y="469" width="2.5767%" height="15" fill="rgb(216,127,34)"/><text x="64.1764%" y="479.50">ip..</text></g><g><title>__local_bh_enable_ip (20 samples, 2.45%)</title><rect x="64.0491%" y="453" width="2.4540%" height="15" fill="rgb(234,116,52)"/><text x="64.2991%" y="463.50">__..</text></g><g><title>do_softirq (20 samples, 2.45%)</title><rect x="64.0491%" y="437" width="2.4540%" height="15" fill="rgb(222,124,15)"/><text x="64.2991%" y="447.50">do..</text></g><g><title>do_softirq_own_stack (20 samples, 2.45%)</title><rect x="64.0491%" y="421" width="2.4540%" height="15" fill="rgb(231,179,28)"/><text x="64.2991%" y="431.50">do..</text></g><g><title>__do_softirq (20 samples, 2.45%)</title><rect x="64.0491%" y="405" width="2.4540%" height="15" fill="rgb(226,93,45)"/><text x="64.2991%" y="415.50">__..</text></g><g><title>net_rx_action (19 samples, 2.33%)</title><rect x="64.1718%" y="389" width="2.3313%" height="15" fill="rgb(215,8,51)"/><text x="64.4218%" y="399.50">n..</text></g><g><title>process_backlog (19 samples, 2.33%)</title><rect x="64.1718%" y="373" width="2.3313%" height="15" fill="rgb(223,106,5)"/><text x="64.4218%" y="383.50">p..</text></g><g><title>_raw_spin_lock (1 samples, 0.12%)</title><rect x="66.3804%" y="357" width="0.1227%" height="15" fill="rgb(250,191,5)"/><text x="66.6304%" y="367.50"></text></g><g><title>__tcp_transmit_skb (24 samples, 2.94%)</title><rect x="63.6810%" y="517" width="2.9448%" height="15" fill="rgb(242,132,44)"/><text x="63.9310%" y="527.50">__..</text></g><g><title>tcp_established_options (1 samples, 0.12%)</title><rect x="66.5031%" y="501" width="0.1227%" height="15" fill="rgb(251,152,29)"/><text x="66.7531%" y="511.50"></text></g><g><title>__tcp_push_pending_frames (27 samples, 3.31%)</title><rect x="63.4356%" y="549" width="3.3129%" height="15" fill="rgb(218,179,5)"/><text x="63.6856%" y="559.50">__t..</text></g><g><title>tcp_write_xmit (26 samples, 3.19%)</title><rect x="63.5583%" y="533" width="3.1902%" height="15" fill="rgb(227,67,19)"/><text x="63.8083%" y="543.50">tcp..</text></g><g><title>tcp_event_new_data_sent (1 samples, 0.12%)</title><rect x="66.6258%" y="517" width="0.1227%" height="15" fill="rgb(233,119,31)"/><text x="66.8758%" y="527.50"></text></g><g><title>tcp_rearm_rto (1 samples, 0.12%)</title><rect x="66.6258%" y="501" width="0.1227%" height="15" fill="rgb(241,120,22)"/><text x="66.8758%" y="511.50"></text></g><g><title>sk_page_frag_refill (1 samples, 0.12%)</title><rect x="66.7485%" y="549" width="0.1227%" height="15" fill="rgb(224,102,30)"/><text x="66.9985%" y="559.50"></text></g><g><title>skb_page_frag_refill (1 samples, 0.12%)</title><rect x="66.7485%" y="533" width="0.1227%" height="15" fill="rgb(210,164,37)"/><text x="66.9985%" y="543.50"></text></g><g><title>skb_do_copy_data_nocache (1 samples, 0.12%)</title><rect x="66.8712%" y="549" width="0.1227%" height="15" fill="rgb(226,191,16)"/><text x="67.1212%" y="559.50"></text></g><g><title>_copy_from_iter_full (1 samples, 0.12%)</title><rect x="66.8712%" y="533" width="0.1227%" height="15" fill="rgb(214,40,45)"/><text x="67.1212%" y="543.50"></text></g><g><title>iov_iter_advance (1 samples, 0.12%)</title><rect x="66.8712%" y="517" width="0.1227%" height="15" fill="rgb(244,29,26)"/><text x="67.1212%" y="527.50"></text></g><g><title>do_syscall_64 (33 samples, 4.05%)</title><rect x="63.0675%" y="645" width="4.0491%" height="15" fill="rgb(216,16,5)"/><text x="63.3175%" y="655.50">do_s..</text></g><g><title>__x64_sys_sendto (32 samples, 3.93%)</title><rect x="63.1902%" y="629" width="3.9264%" height="15" fill="rgb(249,76,35)"/><text x="63.4402%" y="639.50">__x6..</text></g><g><title>__sys_sendto (32 samples, 3.93%)</title><rect x="63.1902%" y="613" width="3.9264%" height="15" fill="rgb(207,11,44)"/><text x="63.4402%" y="623.50">__sy..</text></g><g><title>sock_sendmsg (32 samples, 3.93%)</title><rect x="63.1902%" y="597" width="3.9264%" height="15" fill="rgb(228,190,49)"/><text x="63.4402%" y="607.50">sock..</text></g><g><title>tcp_sendmsg (32 samples, 3.93%)</title><rect x="63.1902%" y="581" width="3.9264%" height="15" fill="rgb(214,173,12)"/><text x="63.4402%" y="591.50">tcp_..</text></g><g><title>tcp_sendmsg_locked (32 samples, 3.93%)</title><rect x="63.1902%" y="565" width="3.9264%" height="15" fill="rgb(218,26,35)"/><text x="63.4402%" y="575.50">tcp_..</text></g><g><title>tcp_send_mss (1 samples, 0.12%)</title><rect x="66.9939%" y="549" width="0.1227%" height="15" fill="rgb(220,200,19)"/><text x="67.2439%" y="559.50"></text></g><g><title>tcp_current_mss (1 samples, 0.12%)</title><rect x="66.9939%" y="533" width="0.1227%" height="15" fill="rgb(239,95,49)"/><text x="67.2439%" y="543.50"></text></g><g><title>ipv4_mtu (1 samples, 0.12%)</title><rect x="66.9939%" y="517" width="0.1227%" height="15" fill="rgb(235,85,53)"/><text x="67.2439%" y="527.50"></text></g><g><title>entry_SYSCALL_64 (34 samples, 4.17%)</title><rect x="63.0675%" y="661" width="4.1718%" height="15" fill="rgb(233,133,31)"/><text x="63.3175%" y="671.50">entry..</text></g><g><title>prepare_exit_to_usermode (1 samples, 0.12%)</title><rect x="67.1166%" y="645" width="0.1227%" height="15" fill="rgb(218,25,20)"/><text x="67.3666%" y="655.50"></text></g><g><title>decor::Shim::run_on_tcp (163 samples, 20.00%)</title><rect x="47.3620%" y="757" width="20.0000%" height="15" fill="rgb(252,210,38)"/><text x="47.6120%" y="767.50">decor::Shim::run_on_tcp</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (162 samples, 19.88%)</title><rect x="47.4847%" y="741" width="19.8773%" height="15" fill="rgb(242,134,21)"/><text x="47.7347%" y="751.50">msql_srv::MysqlIntermediary&lt;B,R..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (37 samples, 4.54%)</title><rect x="62.8221%" y="725" width="4.5399%" height="15" fill="rgb(213,28,48)"/><text x="63.0721%" y="735.50">std::..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (37 samples, 4.54%)</title><rect x="62.8221%" y="709" width="4.5399%" height="15" fill="rgb(250,196,2)"/><text x="63.0721%" y="719.50">&lt;std:..</text></g><g><title>std::sys_common::net::TcpStream::write (37 samples, 4.54%)</title><rect x="62.8221%" y="693" width="4.5399%" height="15" fill="rgb(227,5,17)"/><text x="63.0721%" y="703.50">std::..</text></g><g><title>__libc_send (37 samples, 4.54%)</title><rect x="62.8221%" y="677" width="4.5399%" height="15" fill="rgb(221,226,24)"/><text x="63.0721%" y="687.50">__lib..</text></g><g><title>syscall_return_via_sysret (1 samples, 0.12%)</title><rect x="67.2393%" y="661" width="0.1227%" height="15" fill="rgb(211,5,48)"/><text x="67.4893%" y="671.50"></text></g><g><title>__GI___clone (164 samples, 20.12%)</title><rect x="47.3620%" y="869" width="20.1227%" height="15" fill="rgb(219,150,6)"/><text x="47.6120%" y="879.50">__GI___clone</text></g><g><title>start_thread (164 samples, 20.12%)</title><rect x="47.3620%" y="853" width="20.1227%" height="15" fill="rgb(251,46,16)"/><text x="47.6120%" y="863.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (164 samples, 20.12%)</title><rect x="47.3620%" y="837" width="20.1227%" height="15" fill="rgb(220,204,40)"/><text x="47.6120%" y="847.50">std::sys::unix::thread::Thread::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (164 samples, 20.12%)</title><rect x="47.3620%" y="821" width="20.1227%" height="15" fill="rgb(211,85,2)"/><text x="47.6120%" y="831.50">&lt;alloc::boxed::Box&lt;F&gt; as core::o..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (164 samples, 20.12%)</title><rect x="47.3620%" y="805" width="20.1227%" height="15" fill="rgb(229,17,7)"/><text x="47.6120%" y="815.50">&lt;alloc::boxed::Box&lt;F&gt; as core::o..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (164 samples, 20.12%)</title><rect x="47.3620%" y="789" width="20.1227%" height="15" fill="rgb(239,72,28)"/><text x="47.6120%" y="799.50">core::ops::function::FnOnce::cal..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (164 samples, 20.12%)</title><rect x="47.3620%" y="773" width="20.1227%" height="15" fill="rgb(230,47,54)"/><text x="47.6120%" y="783.50">std::sys_common::backtrace::__ru..</text></g><g><title>std::net::tcp::TcpListener::accept (1 samples, 0.12%)</title><rect x="67.3620%" y="757" width="0.1227%" height="15" fill="rgb(214,50,8)"/><text x="67.6120%" y="767.50"></text></g><g><title>std::sys_common::net::TcpListener::accept (1 samples, 0.12%)</title><rect x="67.3620%" y="741" width="0.1227%" height="15" fill="rgb(216,198,43)"/><text x="67.6120%" y="751.50"></text></g><g><title>std::sys::unix::net::Socket::accept (1 samples, 0.12%)</title><rect x="67.3620%" y="725" width="0.1227%" height="15" fill="rgb(234,20,35)"/><text x="67.6120%" y="735.50"></text></g><g><title>std::sys::unix::cvt_r (1 samples, 0.12%)</title><rect x="67.3620%" y="709" width="0.1227%" height="15" fill="rgb(254,45,19)"/><text x="67.6120%" y="719.50"></text></g><g><title>std::sys::unix::net::Socket::accept::{{closure}} (1 samples, 0.12%)</title><rect x="67.3620%" y="693" width="0.1227%" height="15" fill="rgb(219,14,44)"/><text x="67.6120%" y="703.50"></text></g><g><title>accept4 (1 samples, 0.12%)</title><rect x="67.3620%" y="677" width="0.1227%" height="15" fill="rgb(217,220,26)"/><text x="67.6120%" y="687.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.12%)</title><rect x="67.3620%" y="661" width="0.1227%" height="15" fill="rgb(213,158,28)"/><text x="67.6120%" y="671.50"></text></g><g><title>do_syscall_64 (1 samples, 0.12%)</title><rect x="67.3620%" y="645" width="0.1227%" height="15" fill="rgb(252,51,52)"/><text x="67.6120%" y="655.50"></text></g><g><title>__x64_sys_accept4 (1 samples, 0.12%)</title><rect x="67.3620%" y="629" width="0.1227%" height="15" fill="rgb(246,89,16)"/><text x="67.6120%" y="639.50"></text></g><g><title>__sys_accept4 (1 samples, 0.12%)</title><rect x="67.3620%" y="613" width="0.1227%" height="15" fill="rgb(216,158,49)"/><text x="67.6120%" y="623.50"></text></g><g><title>__sys_accept4_file (1 samples, 0.12%)</title><rect x="67.3620%" y="597" width="0.1227%" height="15" fill="rgb(236,107,19)"/><text x="67.6120%" y="607.50"></text></g><g><title>inet_accept (1 samples, 0.12%)</title><rect x="67.3620%" y="581" width="0.1227%" height="15" fill="rgb(228,185,30)"/><text x="67.6120%" y="591.50"></text></g><g><title>release_sock (1 samples, 0.12%)</title><rect x="67.3620%" y="565" width="0.1227%" height="15" fill="rgb(246,134,8)"/><text x="67.6120%" y="575.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.12%)</title><rect x="67.3620%" y="549" width="0.1227%" height="15" fill="rgb(214,143,50)"/><text x="67.6120%" y="559.50"></text></g><g><title>preempt_count_add (1 samples, 0.12%)</title><rect x="67.3620%" y="533" width="0.1227%" height="15" fill="rgb(228,75,8)"/><text x="67.6120%" y="543.50"></text></g><g><title>in_lock_functions (1 samples, 0.12%)</title><rect x="67.3620%" y="517" width="0.1227%" height="15" fill="rgb(207,175,4)"/><text x="67.6120%" y="527.50"></text></g><g><title>_int_free (1 samples, 0.12%)</title><rect x="67.7301%" y="693" width="0.1227%" height="15" fill="rgb(205,108,24)"/><text x="67.9801%" y="703.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.25%)</title><rect x="68.0982%" y="645" width="0.2454%" height="15" fill="rgb(244,120,49)"/><text x="68.3482%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.25%)</title><rect x="68.0982%" y="629" width="0.2454%" height="15" fill="rgb(223,47,38)"/><text x="68.3482%" y="639.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.25%)</title><rect x="68.0982%" y="613" width="0.2454%" height="15" fill="rgb(229,179,11)"/><text x="68.3482%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.25%)</title><rect x="68.0982%" y="597" width="0.2454%" height="15" fill="rgb(231,122,1)"/><text x="68.3482%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.25%)</title><rect x="68.0982%" y="581" width="0.2454%" height="15" fill="rgb(245,119,9)"/><text x="68.3482%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (2 samples, 0.25%)</title><rect x="68.0982%" y="565" width="0.2454%" height="15" fill="rgb(241,163,25)"/><text x="68.3482%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.25%)</title><rect x="68.0982%" y="549" width="0.2454%" height="15" fill="rgb(217,214,3)"/><text x="68.3482%" y="559.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.25%)</title><rect x="68.0982%" y="533" width="0.2454%" height="15" fill="rgb(240,86,28)"/><text x="68.3482%" y="543.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (1 samples, 0.12%)</title><rect x="68.3436%" y="645" width="0.1227%" height="15" fill="rgb(215,47,9)"/><text x="68.5936%" y="655.50"></text></g><g><title>alloc::fmt::format (6 samples, 0.74%)</title><rect x="67.8528%" y="693" width="0.7362%" height="15" fill="rgb(252,25,45)"/><text x="68.1028%" y="703.50"></text></g><g><title>core::fmt::Write::write_fmt (6 samples, 0.74%)</title><rect x="67.8528%" y="677" width="0.7362%" height="15" fill="rgb(251,164,9)"/><text x="68.1028%" y="687.50"></text></g><g><title>core::fmt::write (6 samples, 0.74%)</title><rect x="67.8528%" y="661" width="0.7362%" height="15" fill="rgb(233,194,0)"/><text x="68.1028%" y="671.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.12%)</title><rect x="68.4663%" y="645" width="0.1227%" height="15" fill="rgb(249,111,24)"/><text x="68.7163%" y="655.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.12%)</title><rect x="68.4663%" y="629" width="0.1227%" height="15" fill="rgb(250,223,3)"/><text x="68.7163%" y="639.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.12%)</title><rect x="68.4663%" y="613" width="0.1227%" height="15" fill="rgb(236,178,37)"/><text x="68.7163%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.12%)</title><rect x="68.4663%" y="597" width="0.1227%" height="15" fill="rgb(241,158,50)"/><text x="68.7163%" y="607.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.12%)</title><rect x="68.4663%" y="581" width="0.1227%" height="15" fill="rgb(213,121,41)"/><text x="68.7163%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.12%)</title><rect x="68.4663%" y="565" width="0.1227%" height="15" fill="rgb(240,92,3)"/><text x="68.7163%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.12%)</title><rect x="68.4663%" y="549" width="0.1227%" height="15" fill="rgb(205,123,3)"/><text x="68.7163%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.12%)</title><rect x="68.4663%" y="533" width="0.1227%" height="15" fill="rgb(205,97,47)"/><text x="68.7163%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (1 samples, 0.12%)</title><rect x="68.4663%" y="517" width="0.1227%" height="15" fill="rgb(247,152,14)"/><text x="68.7163%" y="527.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.12%)</title><rect x="68.5890%" y="613" width="0.1227%" height="15" fill="rgb(248,195,53)"/><text x="68.8390%" y="623.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.12%)</title><rect x="68.5890%" y="597" width="0.1227%" height="15" fill="rgb(226,201,16)"/><text x="68.8390%" y="607.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.12%)</title><rect x="68.5890%" y="581" width="0.1227%" height="15" fill="rgb(205,98,0)"/><text x="68.8390%" y="591.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.12%)</title><rect x="68.5890%" y="565" width="0.1227%" height="15" fill="rgb(214,191,48)"/><text x="68.8390%" y="575.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.12%)</title><rect x="68.5890%" y="549" width="0.1227%" height="15" fill="rgb(237,112,39)"/><text x="68.8390%" y="559.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.12%)</title><rect x="68.5890%" y="533" width="0.1227%" height="15" fill="rgb(247,203,27)"/><text x="68.8390%" y="543.50"></text></g><g><title>_int_malloc (1 samples, 0.12%)</title><rect x="68.5890%" y="517" width="0.1227%" height="15" fill="rgb(235,124,28)"/><text x="68.8390%" y="527.50"></text></g><g><title>page_fault (1 samples, 0.12%)</title><rect x="68.5890%" y="501" width="0.1227%" height="15" fill="rgb(208,207,46)"/><text x="68.8390%" y="511.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.12%)</title><rect x="68.5890%" y="485" width="0.1227%" height="15" fill="rgb(234,176,4)"/><text x="68.8390%" y="495.50"></text></g><g><title>handle_mm_fault (1 samples, 0.12%)</title><rect x="68.5890%" y="469" width="0.1227%" height="15" fill="rgb(230,133,28)"/><text x="68.8390%" y="479.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.12%)</title><rect x="68.5890%" y="453" width="0.1227%" height="15" fill="rgb(211,137,40)"/><text x="68.8390%" y="463.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.12%)</title><rect x="68.5890%" y="437" width="0.1227%" height="15" fill="rgb(254,35,13)"/><text x="68.8390%" y="447.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.12%)</title><rect x="68.5890%" y="421" width="0.1227%" height="15" fill="rgb(225,49,51)"/><text x="68.8390%" y="431.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.12%)</title><rect x="68.5890%" y="405" width="0.1227%" height="15" fill="rgb(251,10,15)"/><text x="68.8390%" y="415.50"></text></g><g><title>__libc_read (1 samples, 0.12%)</title><rect x="68.7117%" y="613" width="0.1227%" height="15" fill="rgb(228,207,15)"/><text x="68.9617%" y="623.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.12%)</title><rect x="68.7117%" y="597" width="0.1227%" height="15" fill="rgb(241,99,19)"/><text x="68.9617%" y="607.50"></text></g><g><title>do_syscall_64 (1 samples, 0.12%)</title><rect x="68.7117%" y="581" width="0.1227%" height="15" fill="rgb(207,104,49)"/><text x="68.9617%" y="591.50"></text></g><g><title>ksys_read (1 samples, 0.12%)</title><rect x="68.7117%" y="565" width="0.1227%" height="15" fill="rgb(234,99,18)"/><text x="68.9617%" y="575.50"></text></g><g><title>vfs_read (1 samples, 0.12%)</title><rect x="68.7117%" y="549" width="0.1227%" height="15" fill="rgb(213,191,49)"/><text x="68.9617%" y="559.50"></text></g><g><title>seq_read (1 samples, 0.12%)</title><rect x="68.7117%" y="533" width="0.1227%" height="15" fill="rgb(210,226,19)"/><text x="68.9617%" y="543.50"></text></g><g><title>sysfs_kf_seq_show (1 samples, 0.12%)</title><rect x="68.7117%" y="517" width="0.1227%" height="15" fill="rgb(229,97,18)"/><text x="68.9617%" y="527.50"></text></g><g><title>dev_attr_show (1 samples, 0.12%)</title><rect x="68.7117%" y="501" width="0.1227%" height="15" fill="rgb(211,167,15)"/><text x="68.9617%" y="511.50"></text></g><g><title>sys_dmi_field_show (1 samples, 0.12%)</title><rect x="68.7117%" y="485" width="0.1227%" height="15" fill="rgb(210,169,34)"/><text x="68.9617%" y="495.50"></text></g><g><title>scnprintf (1 samples, 0.12%)</title><rect x="68.7117%" y="469" width="0.1227%" height="15" fill="rgb(241,121,31)"/><text x="68.9617%" y="479.50"></text></g><g><title>vsnprintf (1 samples, 0.12%)</title><rect x="68.7117%" y="453" width="0.1227%" height="15" fill="rgb(232,40,11)"/><text x="68.9617%" y="463.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.12%)</title><rect x="68.8344%" y="597" width="0.1227%" height="15" fill="rgb(205,86,26)"/><text x="69.0844%" y="607.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (228 samples, 27.98%)</title><rect x="69.0798%" y="389" width="27.9755%" height="15" fill="rgb(231,126,28)"/><text x="69.3298%" y="399.50">__intel_pmu_enable_all.constprop.0</text></g><g><title>native_write_msr (227 samples, 27.85%)</title><rect x="69.2025%" y="373" width="27.8528%" height="15" fill="rgb(219,221,18)"/><text x="69.4525%" y="383.50">native_write_msr</text></g><g><title>do_syscall_64 (234 samples, 28.71%)</title><rect x="68.9571%" y="565" width="28.7117%" height="15" fill="rgb(211,40,0)"/><text x="69.2071%" y="575.50">do_syscall_64</text></g><g><title>__x64_sys_sched_setaffinity (234 samples, 28.71%)</title><rect x="68.9571%" y="549" width="28.7117%" height="15" fill="rgb(239,85,43)"/><text x="69.2071%" y="559.50">__x64_sys_sched_setaffinity</text></g><g><title>sched_setaffinity (234 samples, 28.71%)</title><rect x="68.9571%" y="533" width="28.7117%" height="15" fill="rgb(231,55,21)"/><text x="69.2071%" y="543.50">sched_setaffinity</text></g><g><title>__set_cpus_allowed_ptr (234 samples, 28.71%)</title><rect x="68.9571%" y="517" width="28.7117%" height="15" fill="rgb(225,184,43)"/><text x="69.2071%" y="527.50">__set_cpus_allowed_ptr</text></g><g><title>stop_one_cpu (234 samples, 28.71%)</title><rect x="68.9571%" y="501" width="28.7117%" height="15" fill="rgb(251,158,41)"/><text x="69.2071%" y="511.50">stop_one_cpu</text></g><g><title>cpu_stop_queue_work (234 samples, 28.71%)</title><rect x="68.9571%" y="485" width="28.7117%" height="15" fill="rgb(234,159,37)"/><text x="69.2071%" y="495.50">cpu_stop_queue_work</text></g><g><title>preempt_schedule_thunk (234 samples, 28.71%)</title><rect x="68.9571%" y="469" width="28.7117%" height="15" fill="rgb(216,204,22)"/><text x="69.2071%" y="479.50">preempt_schedule_thunk</text></g><g><title>preempt_schedule_common (234 samples, 28.71%)</title><rect x="68.9571%" y="453" width="28.7117%" height="15" fill="rgb(214,17,3)"/><text x="69.2071%" y="463.50">preempt_schedule_common</text></g><g><title>__schedule (234 samples, 28.71%)</title><rect x="68.9571%" y="437" width="28.7117%" height="15" fill="rgb(212,111,17)"/><text x="69.2071%" y="447.50">__schedule</text></g><g><title>finish_task_switch (234 samples, 28.71%)</title><rect x="68.9571%" y="421" width="28.7117%" height="15" fill="rgb(221,157,24)"/><text x="69.2071%" y="431.50">finish_task_switch</text></g><g><title>__perf_event_task_sched_in (233 samples, 28.59%)</title><rect x="69.0798%" y="405" width="28.5890%" height="15" fill="rgb(252,16,13)"/><text x="69.3298%" y="415.50">__perf_event_task_sched_in</text></g><g><title>_raw_spin_unlock (5 samples, 0.61%)</title><rect x="97.0552%" y="389" width="0.6135%" height="15" fill="rgb(221,62,2)"/><text x="97.3052%" y="399.50"></text></g><g><title>preempt_count_sub (1 samples, 0.12%)</title><rect x="97.5460%" y="373" width="0.1227%" height="15" fill="rgb(247,87,22)"/><text x="97.7960%" y="383.50"></text></g><g><title>[libhwloc.so.15.2.0] (238 samples, 29.20%)</title><rect x="68.5890%" y="629" width="29.2025%" height="15" fill="rgb(215,73,9)"/><text x="68.8390%" y="639.50">[libhwloc.so.15.2.0]</text></g><g><title>hwloc_linux_set_tid_cpubind (236 samples, 28.96%)</title><rect x="68.8344%" y="613" width="28.9571%" height="15" fill="rgb(207,175,33)"/><text x="69.0844%" y="623.50">hwloc_linux_set_tid_cpubind</text></g><g><title>__GI___sched_setaffinity_new (235 samples, 28.83%)</title><rect x="68.9571%" y="597" width="28.8344%" height="15" fill="rgb(243,129,54)"/><text x="69.2071%" y="607.50">__GI___sched_setaffinity_new</text></g><g><title>entry_SYSCALL_64 (235 samples, 28.83%)</title><rect x="68.9571%" y="581" width="28.8344%" height="15" fill="rgb(227,119,45)"/><text x="69.2071%" y="591.50">entry_SYSCALL_64</text></g><g><title>prepare_exit_to_usermode (1 samples, 0.12%)</title><rect x="97.6687%" y="565" width="0.1227%" height="15" fill="rgb(205,109,36)"/><text x="97.9187%" y="575.50"></text></g><g><title>switch_fpu_return (1 samples, 0.12%)</title><rect x="97.6687%" y="549" width="0.1227%" height="15" fill="rgb(205,6,39)"/><text x="97.9187%" y="559.50"></text></g><g><title>hwloc::Topology::new (239 samples, 29.33%)</title><rect x="68.5890%" y="693" width="29.3252%" height="15" fill="rgb(221,32,16)"/><text x="68.8390%" y="703.50">hwloc::Topology::new</text></g><g><title>hwloc_topology_load (239 samples, 29.33%)</title><rect x="68.5890%" y="677" width="29.3252%" height="15" fill="rgb(228,144,50)"/><text x="68.8390%" y="687.50">hwloc_topology_load</text></g><g><title>[libhwloc.so.15.2.0] (239 samples, 29.33%)</title><rect x="68.5890%" y="661" width="29.3252%" height="15" fill="rgb(229,201,53)"/><text x="68.8390%" y="671.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (239 samples, 29.33%)</title><rect x="68.5890%" y="645" width="29.3252%" height="15" fill="rgb(249,153,27)"/><text x="68.8390%" y="655.50">[libhwloc.so.15.2.0]</text></g><g><title>fgets (1 samples, 0.12%)</title><rect x="97.7914%" y="629" width="0.1227%" height="15" fill="rgb(227,106,25)"/><text x="98.0414%" y="639.50"></text></g><g><title>__GI__IO_getline_info (1 samples, 0.12%)</title><rect x="97.7914%" y="613" width="0.1227%" height="15" fill="rgb(230,65,29)"/><text x="98.0414%" y="623.50"></text></g><g><title>__GI__IO_default_uflow (1 samples, 0.12%)</title><rect x="97.7914%" y="597" width="0.1227%" height="15" fill="rgb(221,57,46)"/><text x="98.0414%" y="607.50"></text></g><g><title>__GI__IO_file_underflow (1 samples, 0.12%)</title><rect x="97.7914%" y="581" width="0.1227%" height="15" fill="rgb(229,161,17)"/><text x="98.0414%" y="591.50"></text></g><g><title>__GI___read (1 samples, 0.12%)</title><rect x="97.7914%" y="565" width="0.1227%" height="15" fill="rgb(222,213,11)"/><text x="98.0414%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.12%)</title><rect x="97.7914%" y="549" width="0.1227%" height="15" fill="rgb(235,35,13)"/><text x="98.0414%" y="559.50"></text></g><g><title>do_syscall_64 (1 samples, 0.12%)</title><rect x="97.7914%" y="533" width="0.1227%" height="15" fill="rgb(233,158,34)"/><text x="98.0414%" y="543.50"></text></g><g><title>ksys_read (1 samples, 0.12%)</title><rect x="97.7914%" y="517" width="0.1227%" height="15" fill="rgb(215,151,48)"/><text x="98.0414%" y="527.50"></text></g><g><title>vfs_read (1 samples, 0.12%)</title><rect x="97.7914%" y="501" width="0.1227%" height="15" fill="rgb(229,84,14)"/><text x="98.0414%" y="511.50"></text></g><g><title>seq_read (1 samples, 0.12%)</title><rect x="97.7914%" y="485" width="0.1227%" height="15" fill="rgb(229,68,14)"/><text x="98.0414%" y="495.50"></text></g><g><title>show_cpuinfo (1 samples, 0.12%)</title><rect x="97.7914%" y="469" width="0.1227%" height="15" fill="rgb(243,106,26)"/><text x="98.0414%" y="479.50"></text></g><g><title>seq_printf (1 samples, 0.12%)</title><rect x="97.7914%" y="453" width="0.1227%" height="15" fill="rgb(206,45,38)"/><text x="98.0414%" y="463.50"></text></g><g><title>vsnprintf (1 samples, 0.12%)</title><rect x="97.7914%" y="437" width="0.1227%" height="15" fill="rgb(226,6,15)"/><text x="98.0414%" y="447.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (2 samples, 0.25%)</title><rect x="97.9141%" y="693" width="0.2454%" height="15" fill="rgb(232,22,54)"/><text x="98.1641%" y="703.50"></text></g><g><title>__libc_start_main (251 samples, 30.80%)</title><rect x="67.4847%" y="853" width="30.7975%" height="15" fill="rgb(229,222,32)"/><text x="67.7347%" y="863.50">__libc_start_main</text></g><g><title>main (251 samples, 30.80%)</title><rect x="67.4847%" y="837" width="30.7975%" height="15" fill="rgb(228,62,29)"/><text x="67.7347%" y="847.50">main</text></g><g><title>std::rt::lang_start_internal (251 samples, 30.80%)</title><rect x="67.4847%" y="821" width="30.7975%" height="15" fill="rgb(251,103,34)"/><text x="67.7347%" y="831.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (251 samples, 30.80%)</title><rect x="67.4847%" y="805" width="30.7975%" height="15" fill="rgb(233,12,30)"/><text x="67.7347%" y="815.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (251 samples, 30.80%)</title><rect x="67.4847%" y="789" width="30.7975%" height="15" fill="rgb(238,52,0)"/><text x="67.7347%" y="799.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (251 samples, 30.80%)</title><rect x="67.4847%" y="773" width="30.7975%" height="15" fill="rgb(223,98,5)"/><text x="67.7347%" y="783.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (251 samples, 30.80%)</title><rect x="67.4847%" y="757" width="30.7975%" height="15" fill="rgb(228,75,37)"/><text x="67.7347%" y="767.50">core::ops::function::impls::&lt;impl core::ops::funct..</text></g><g><title>std::rt::lang_start::_{{closure}} (251 samples, 30.80%)</title><rect x="67.4847%" y="741" width="30.7975%" height="15" fill="rgb(205,115,49)"/><text x="67.7347%" y="751.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (251 samples, 30.80%)</title><rect x="67.4847%" y="725" width="30.7975%" height="15" fill="rgb(250,154,43)"/><text x="67.7347%" y="735.50">std::sys_common::backtrace::__rust_begin_short_bac..</text></g><g><title>lobsters::main (251 samples, 30.80%)</title><rect x="67.4847%" y="709" width="30.7975%" height="15" fill="rgb(226,43,29)"/><text x="67.7347%" y="719.50">lobsters::main</text></g><g><title>std::net::each_addr (1 samples, 0.12%)</title><rect x="98.1595%" y="693" width="0.1227%" height="15" fill="rgb(249,228,39)"/><text x="98.4095%" y="703.50"></text></g><g><title>std::sys_common::net::TcpListener::bind (1 samples, 0.12%)</title><rect x="98.1595%" y="677" width="0.1227%" height="15" fill="rgb(216,79,43)"/><text x="98.4095%" y="687.50"></text></g><g><title>__bind (1 samples, 0.12%)</title><rect x="98.1595%" y="661" width="0.1227%" height="15" fill="rgb(228,95,12)"/><text x="98.4095%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.12%)</title><rect x="98.1595%" y="645" width="0.1227%" height="15" fill="rgb(249,221,15)"/><text x="98.4095%" y="655.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.12%)</title><rect x="98.1595%" y="629" width="0.1227%" height="15" fill="rgb(233,34,13)"/><text x="98.4095%" y="639.50"></text></g><g><title>_start (252 samples, 30.92%)</title><rect x="67.4847%" y="869" width="30.9202%" height="15" fill="rgb(214,103,39)"/><text x="67.7347%" y="879.50">_start</text></g><g><title>_dl_start (1 samples, 0.12%)</title><rect x="98.2822%" y="853" width="0.1227%" height="15" fill="rgb(251,126,39)"/><text x="98.5322%" y="863.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.12%)</title><rect x="98.2822%" y="837" width="0.1227%" height="15" fill="rgb(214,216,36)"/><text x="98.5322%" y="847.50"></text></g><g><title>dl_main (1 samples, 0.12%)</title><rect x="98.2822%" y="821" width="0.1227%" height="15" fill="rgb(220,221,8)"/><text x="98.5322%" y="831.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.12%)</title><rect x="98.2822%" y="805" width="0.1227%" height="15" fill="rgb(240,216,3)"/><text x="98.5322%" y="815.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.12%)</title><rect x="98.2822%" y="789" width="0.1227%" height="15" fill="rgb(232,218,17)"/><text x="98.5322%" y="799.50"></text></g><g><title>openaux (1 samples, 0.12%)</title><rect x="98.2822%" y="773" width="0.1227%" height="15" fill="rgb(229,163,45)"/><text x="98.5322%" y="783.50"></text></g><g><title>_dl_map_object (1 samples, 0.12%)</title><rect x="98.2822%" y="757" width="0.1227%" height="15" fill="rgb(231,110,42)"/><text x="98.5322%" y="767.50"></text></g><g><title>_dl_map_object_from_fd (1 samples, 0.12%)</title><rect x="98.2822%" y="741" width="0.1227%" height="15" fill="rgb(208,170,48)"/><text x="98.5322%" y="751.50"></text></g><g><title>_dl_new_object (1 samples, 0.12%)</title><rect x="98.2822%" y="725" width="0.1227%" height="15" fill="rgb(239,116,25)"/><text x="98.5322%" y="735.50"></text></g><g><title>page_fault (1 samples, 0.12%)</title><rect x="98.2822%" y="709" width="0.1227%" height="15" fill="rgb(219,200,50)"/><text x="98.5322%" y="719.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.12%)</title><rect x="98.2822%" y="693" width="0.1227%" height="15" fill="rgb(245,200,0)"/><text x="98.5322%" y="703.50"></text></g><g><title>handle_mm_fault (1 samples, 0.12%)</title><rect x="98.2822%" y="677" width="0.1227%" height="15" fill="rgb(245,119,33)"/><text x="98.5322%" y="687.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.12%)</title><rect x="98.2822%" y="661" width="0.1227%" height="15" fill="rgb(231,125,12)"/><text x="98.5322%" y="671.50"></text></g><g><title>mem_cgroup_try_charge_delay (1 samples, 0.12%)</title><rect x="98.2822%" y="645" width="0.1227%" height="15" fill="rgb(216,96,41)"/><text x="98.5322%" y="655.50"></text></g><g><title>mem_cgroup_try_charge (1 samples, 0.12%)</title><rect x="98.2822%" y="629" width="0.1227%" height="15" fill="rgb(248,43,45)"/><text x="98.5322%" y="639.50"></text></g><g><title>try_charge (1 samples, 0.12%)</title><rect x="98.2822%" y="613" width="0.1227%" height="15" fill="rgb(217,222,7)"/><text x="98.5322%" y="623.50"></text></g><g><title>anon.0e14438aa7ed785dba4bf4e4bda49435.1.llvm.11462767089839115235 (1 samples, 0.12%)</title><rect x="98.4049%" y="869" width="0.1227%" height="15" fill="rgb(233,28,6)"/><text x="98.6549%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="98.4049%" y="853" width="0.1227%" height="15" fill="rgb(231,218,15)"/><text x="98.6549%" y="863.50"></text></g><g><title>__rdl_realloc (1 samples, 0.12%)</title><rect x="98.5276%" y="853" width="0.1227%" height="15" fill="rgb(226,171,48)"/><text x="98.7776%" y="863.50"></text></g><g><title>anon.144e612f7a92f11708487d2575dcc3d1.3.llvm.9538235009918832389 (2 samples, 0.25%)</title><rect x="98.5276%" y="869" width="0.2454%" height="15" fill="rgb(235,201,9)"/><text x="98.7776%" y="879.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.12%)</title><rect x="98.6503%" y="853" width="0.1227%" height="15" fill="rgb(217,80,15)"/><text x="98.9003%" y="863.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.12%)</title><rect x="98.8957%" y="757" width="0.1227%" height="15" fill="rgb(219,152,8)"/><text x="99.1457%" y="767.50"></text></g><g><title>release_pages (1 samples, 0.12%)</title><rect x="98.8957%" y="741" width="0.1227%" height="15" fill="rgb(243,107,38)"/><text x="99.1457%" y="751.50"></text></g><g><title>free_unref_page_list (1 samples, 0.12%)</title><rect x="98.8957%" y="725" width="0.1227%" height="15" fill="rgb(231,17,5)"/><text x="99.1457%" y="735.50"></text></g><g><title>free_pcppages_bulk (1 samples, 0.12%)</title><rect x="98.8957%" y="709" width="0.1227%" height="15" fill="rgb(209,25,54)"/><text x="99.1457%" y="719.50"></text></g><g><title>__free_one_page (1 samples, 0.12%)</title><rect x="98.8957%" y="693" width="0.1227%" height="15" fill="rgb(219,0,2)"/><text x="99.1457%" y="703.50"></text></g><g><title>[vmlinux] (2 samples, 0.25%)</title><rect x="98.8957%" y="837" width="0.2454%" height="15" fill="rgb(246,9,5)"/><text x="99.1457%" y="847.50"></text></g><g><title>do_group_exit (2 samples, 0.25%)</title><rect x="98.8957%" y="821" width="0.2454%" height="15" fill="rgb(226,159,4)"/><text x="99.1457%" y="831.50"></text></g><g><title>do_exit (2 samples, 0.25%)</title><rect x="98.8957%" y="805" width="0.2454%" height="15" fill="rgb(219,175,34)"/><text x="99.1457%" y="815.50"></text></g><g><title>mmput (2 samples, 0.25%)</title><rect x="98.8957%" y="789" width="0.2454%" height="15" fill="rgb(236,10,46)"/><text x="99.1457%" y="799.50"></text></g><g><title>exit_mmap (2 samples, 0.25%)</title><rect x="98.8957%" y="773" width="0.2454%" height="15" fill="rgb(240,211,16)"/><text x="99.1457%" y="783.50"></text></g><g><title>unmap_vmas (1 samples, 0.12%)</title><rect x="99.0184%" y="757" width="0.1227%" height="15" fill="rgb(205,3,43)"/><text x="99.2684%" y="767.50"></text></g><g><title>unmap_page_range (1 samples, 0.12%)</title><rect x="99.0184%" y="741" width="0.1227%" height="15" fill="rgb(245,7,22)"/><text x="99.2684%" y="751.50"></text></g><g><title>lobsters (809 samples, 99.26%)</title><rect x="0.0000%" y="885" width="99.2638%" height="15" fill="rgb(239,132,32)"/><text x="0.2500%" y="895.50">lobsters</text></g><g><title>entry_SYSCALL_64 (4 samples, 0.49%)</title><rect x="98.7730%" y="869" width="0.4908%" height="15" fill="rgb(228,202,34)"/><text x="99.0230%" y="879.50"></text></g><g><title>do_syscall_64 (3 samples, 0.37%)</title><rect x="98.8957%" y="853" width="0.3681%" height="15" fill="rgb(254,200,22)"/><text x="99.1457%" y="863.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.12%)</title><rect x="99.1411%" y="837" width="0.1227%" height="15" fill="rgb(219,10,39)"/><text x="99.3911%" y="847.50"></text></g><g><title>do_execve (1 samples, 0.12%)</title><rect x="99.1411%" y="821" width="0.1227%" height="15" fill="rgb(226,210,39)"/><text x="99.3911%" y="831.50"></text></g><g><title>__do_execve_file (1 samples, 0.12%)</title><rect x="99.1411%" y="805" width="0.1227%" height="15" fill="rgb(208,219,16)"/><text x="99.3911%" y="815.50"></text></g><g><title>search_binary_handler.part.0 (1 samples, 0.12%)</title><rect x="99.1411%" y="789" width="0.1227%" height="15" fill="rgb(216,158,51)"/><text x="99.3911%" y="799.50"></text></g><g><title>load_elf_binary (1 samples, 0.12%)</title><rect x="99.1411%" y="773" width="0.1227%" height="15" fill="rgb(233,14,44)"/><text x="99.3911%" y="783.50"></text></g><g><title>elf_map (1 samples, 0.12%)</title><rect x="99.1411%" y="757" width="0.1227%" height="15" fill="rgb(237,97,39)"/><text x="99.3911%" y="767.50"></text></g><g><title>vm_mmap_pgoff (1 samples, 0.12%)</title><rect x="99.1411%" y="741" width="0.1227%" height="15" fill="rgb(218,198,43)"/><text x="99.3911%" y="751.50"></text></g><g><title>do_mmap (1 samples, 0.12%)</title><rect x="99.1411%" y="725" width="0.1227%" height="15" fill="rgb(231,104,20)"/><text x="99.3911%" y="735.50"></text></g><g><title>mmap_region (1 samples, 0.12%)</title><rect x="99.1411%" y="709" width="0.1227%" height="15" fill="rgb(254,36,13)"/><text x="99.3911%" y="719.50"></text></g><g><title>perf_event_mmap (1 samples, 0.12%)</title><rect x="99.1411%" y="693" width="0.1227%" height="15" fill="rgb(248,14,50)"/><text x="99.3911%" y="703.50"></text></g><g><title>d_path (1 samples, 0.12%)</title><rect x="99.1411%" y="677" width="0.1227%" height="15" fill="rgb(217,107,29)"/><text x="99.3911%" y="687.50"></text></g><g><title>prepend_path (1 samples, 0.12%)</title><rect x="99.1411%" y="661" width="0.1227%" height="15" fill="rgb(251,169,33)"/><text x="99.3911%" y="671.50"></text></g><g><title>prepend_name (1 samples, 0.12%)</title><rect x="99.1411%" y="645" width="0.1227%" height="15" fill="rgb(217,108,32)"/><text x="99.3911%" y="655.50"></text></g><g><title>all (815 samples, 100%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(219,66,42)"/><text x="0.2500%" y="911.50"></text></g><g><title>perf (6 samples, 0.74%)</title><rect x="99.2638%" y="885" width="0.7362%" height="15" fill="rgb(206,180,7)"/><text x="99.5138%" y="895.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.74%)</title><rect x="99.2638%" y="869" width="0.7362%" height="15" fill="rgb(208,226,31)"/><text x="99.5138%" y="879.50"></text></g><g><title>do_syscall_64 (6 samples, 0.74%)</title><rect x="99.2638%" y="853" width="0.7362%" height="15" fill="rgb(218,26,49)"/><text x="99.5138%" y="863.50"></text></g><g><title>__x64_sys_execve (6 samples, 0.74%)</title><rect x="99.2638%" y="837" width="0.7362%" height="15" fill="rgb(233,197,48)"/><text x="99.5138%" y="847.50"></text></g><g><title>do_execve (6 samples, 0.74%)</title><rect x="99.2638%" y="821" width="0.7362%" height="15" fill="rgb(252,181,51)"/><text x="99.5138%" y="831.50"></text></g><g><title>__do_execve_file (6 samples, 0.74%)</title><rect x="99.2638%" y="805" width="0.7362%" height="15" fill="rgb(253,90,19)"/><text x="99.5138%" y="815.50"></text></g><g><title>search_binary_handler.part.0 (6 samples, 0.74%)</title><rect x="99.2638%" y="789" width="0.7362%" height="15" fill="rgb(215,171,30)"/><text x="99.5138%" y="799.50"></text></g><g><title>load_elf_binary (6 samples, 0.74%)</title><rect x="99.2638%" y="773" width="0.7362%" height="15" fill="rgb(214,222,9)"/><text x="99.5138%" y="783.50"></text></g><g><title>setup_new_exec (6 samples, 0.74%)</title><rect x="99.2638%" y="757" width="0.7362%" height="15" fill="rgb(223,3,22)"/><text x="99.5138%" y="767.50"></text></g><g><title>perf_event_exec (6 samples, 0.74%)</title><rect x="99.2638%" y="741" width="0.7362%" height="15" fill="rgb(225,196,46)"/><text x="99.5138%" y="751.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.61%)</title><rect x="99.3865%" y="725" width="0.6135%" height="15" fill="rgb(209,110,37)"/><text x="99.6365%" y="735.50"></text></g><g><title>native_write_msr (5 samples, 0.61%)</title><rect x="99.3865%" y="709" width="0.6135%" height="15" fill="rgb(249,89,12)"/><text x="99.6365%" y="719.50"></text></g></svg></svg>