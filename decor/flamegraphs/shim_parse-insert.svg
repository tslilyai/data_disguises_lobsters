<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="998" onload="init(evt)" viewBox="0 0 1200 998" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="998" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="981.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="981.00"> </text><svg id="frames" x="10" width="1180"><g><title>[[stack]] (1 samples, 0.14%)</title><rect x="0.0000%" y="917" width="0.1393%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="927.50"></text></g><g><title>bytes::bytes_mut::BytesMut::set_start (1 samples, 0.14%)</title><rect x="0.0000%" y="901" width="0.1393%" height="15" fill="rgb(217,0,24)"/><text x="0.2500%" y="911.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.28%)</title><rect x="0.1393%" y="901" width="0.2786%" height="15" fill="rgb(221,193,54)"/><text x="0.3893%" y="911.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.14%)</title><rect x="0.4178%" y="901" width="0.1393%" height="15" fill="rgb(248,212,6)"/><text x="0.6678%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="0.5571%" y="901" width="0.1393%" height="15" fill="rgb(208,68,35)"/><text x="0.8071%" y="911.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="0.6964%" y="901" width="0.1393%" height="15" fill="rgb(232,128,0)"/><text x="0.9464%" y="911.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.14%)</title><rect x="0.8357%" y="901" width="0.1393%" height="15" fill="rgb(207,160,47)"/><text x="1.0857%" y="911.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="0.9749%" y="901" width="0.1393%" height="15" fill="rgb(228,23,34)"/><text x="1.2249%" y="911.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.14%)</title><rect x="1.1142%" y="901" width="0.1393%" height="15" fill="rgb(218,30,26)"/><text x="1.3642%" y="911.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="1.2535%" y="901" width="0.1393%" height="15" fill="rgb(220,122,19)"/><text x="1.5035%" y="911.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.28%)</title><rect x="1.3928%" y="901" width="0.2786%" height="15" fill="rgb(250,228,42)"/><text x="1.6428%" y="911.50"></text></g><g><title>__libc_send (1 samples, 0.14%)</title><rect x="1.6713%" y="901" width="0.1393%" height="15" fill="rgb(240,193,28)"/><text x="1.9213%" y="911.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="1.6713%" y="885" width="0.1393%" height="15" fill="rgb(216,20,37)"/><text x="1.9213%" y="895.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.14%)</title><rect x="1.8106%" y="901" width="0.1393%" height="15" fill="rgb(206,188,39)"/><text x="2.0606%" y="911.50"></text></g><g><title>__rdl_realloc (1 samples, 0.14%)</title><rect x="1.9499%" y="901" width="0.1393%" height="15" fill="rgb(217,207,13)"/><text x="2.1999%" y="911.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.14%)</title><rect x="1.9499%" y="885" width="0.1393%" height="15" fill="rgb(231,73,38)"/><text x="2.1999%" y="895.50"></text></g><g><title>_int_free (2 samples, 0.28%)</title><rect x="2.0891%" y="901" width="0.2786%" height="15" fill="rgb(225,20,46)"/><text x="2.3391%" y="911.50"></text></g><g><title>_int_malloc (3 samples, 0.42%)</title><rect x="2.3677%" y="901" width="0.4178%" height="15" fill="rgb(210,31,41)"/><text x="2.6177%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.28%)</title><rect x="2.7855%" y="901" width="0.2786%" height="15" fill="rgb(221,200,47)"/><text x="3.0355%" y="911.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (3 samples, 0.42%)</title><rect x="3.0641%" y="901" width="0.4178%" height="15" fill="rgb(226,26,5)"/><text x="3.3141%" y="911.50"></text></g><g><title>alloc::string::String::push (2 samples, 0.28%)</title><rect x="3.4819%" y="901" width="0.2786%" height="15" fill="rgb(249,33,26)"/><text x="3.7319%" y="911.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.14%)</title><rect x="3.7604%" y="901" width="0.1393%" height="15" fill="rgb(235,183,28)"/><text x="4.0104%" y="911.50"></text></g><g><title>decor::helpers::answer_rows (2 samples, 0.28%)</title><rect x="3.8997%" y="901" width="0.2786%" height="15" fill="rgb(221,5,38)"/><text x="4.1497%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (1 samples, 0.14%)</title><rect x="4.1783%" y="901" width="0.1393%" height="15" fill="rgb(247,18,42)"/><text x="4.4283%" y="911.50"></text></g><g><title>malloc_consolidate (1 samples, 0.14%)</title><rect x="4.3175%" y="901" width="0.1393%" height="15" fill="rgb(241,131,45)"/><text x="4.5675%" y="911.50"></text></g><g><title>msql_srv::packet::PacketReader&lt;R&gt;::next (1 samples, 0.14%)</title><rect x="4.4568%" y="901" width="0.1393%" height="15" fill="rgb(249,31,29)"/><text x="4.7068%" y="911.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.28%)</title><rect x="4.5961%" y="901" width="0.2786%" height="15" fill="rgb(225,111,53)"/><text x="4.8461%" y="911.50"></text></g><g><title>sql_parser::parser::Parser::expect_token (1 samples, 0.14%)</title><rect x="4.8747%" y="901" width="0.1393%" height="15" fill="rgb(238,160,17)"/><text x="5.1247%" y="911.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (2 samples, 0.28%)</title><rect x="5.0139%" y="901" width="0.2786%" height="15" fill="rgb(214,148,48)"/><text x="5.2639%" y="911.50"></text></g><g><title>[anon] (38 samples, 5.29%)</title><rect x="0.1393%" y="917" width="5.2925%" height="15" fill="rgb(232,36,49)"/><text x="0.3893%" y="927.50">[anon]</text></g><g><title>sql_parser::tokenizer::Token::make_word (1 samples, 0.14%)</title><rect x="5.2925%" y="901" width="0.1393%" height="15" fill="rgb(209,103,24)"/><text x="5.5425%" y="911.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.14%)</title><rect x="5.4318%" y="901" width="0.1393%" height="15" fill="rgb(229,88,8)"/><text x="5.6818%" y="911.50"></text></g><g><title>[lobsters] (2 samples, 0.28%)</title><rect x="5.4318%" y="917" width="0.2786%" height="15" fill="rgb(213,181,19)"/><text x="5.6818%" y="927.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.14%)</title><rect x="5.5710%" y="901" width="0.1393%" height="15" fill="rgb(254,191,54)"/><text x="5.8210%" y="911.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (1 samples, 0.14%)</title><rect x="5.7103%" y="901" width="0.1393%" height="15" fill="rgb(241,83,37)"/><text x="5.9603%" y="911.50"></text></g><g><title>decor::Shim::create_schema (1 samples, 0.14%)</title><rect x="5.7103%" y="885" width="0.1393%" height="15" fill="rgb(233,36,39)"/><text x="5.9603%" y="895.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (1 samples, 0.14%)</title><rect x="5.7103%" y="869" width="0.1393%" height="15" fill="rgb(226,3,54)"/><text x="5.9603%" y="879.50"></text></g><g><title>sql_parser::parser::parse_statements (1 samples, 0.14%)</title><rect x="5.7103%" y="853" width="0.1393%" height="15" fill="rgb(245,192,40)"/><text x="5.9603%" y="863.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (1 samples, 0.14%)</title><rect x="5.7103%" y="837" width="0.1393%" height="15" fill="rgb(238,167,29)"/><text x="5.9603%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.14%)</title><rect x="5.7103%" y="821" width="0.1393%" height="15" fill="rgb(232,182,51)"/><text x="5.9603%" y="831.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.14%)</title><rect x="5.7103%" y="805" width="0.1393%" height="15" fill="rgb(231,60,39)"/><text x="5.9603%" y="815.50"></text></g><g><title>_int_realloc (1 samples, 0.14%)</title><rect x="5.7103%" y="789" width="0.1393%" height="15" fill="rgb(208,69,12)"/><text x="5.9603%" y="799.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.14%)</title><rect x="5.7103%" y="773" width="0.1393%" height="15" fill="rgb(235,93,37)"/><text x="5.9603%" y="783.50"></text></g><g><title>page_fault (1 samples, 0.14%)</title><rect x="5.7103%" y="757" width="0.1393%" height="15" fill="rgb(213,116,39)"/><text x="5.9603%" y="767.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.14%)</title><rect x="5.7103%" y="741" width="0.1393%" height="15" fill="rgb(222,207,29)"/><text x="5.9603%" y="751.50"></text></g><g><title>handle_mm_fault (1 samples, 0.14%)</title><rect x="5.7103%" y="725" width="0.1393%" height="15" fill="rgb(206,96,30)"/><text x="5.9603%" y="735.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.14%)</title><rect x="5.7103%" y="709" width="0.1393%" height="15" fill="rgb(218,138,4)"/><text x="5.9603%" y="719.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.14%)</title><rect x="5.7103%" y="693" width="0.1393%" height="15" fill="rgb(250,191,14)"/><text x="5.9603%" y="703.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.14%)</title><rect x="5.7103%" y="677" width="0.1393%" height="15" fill="rgb(239,60,40)"/><text x="5.9603%" y="687.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.14%)</title><rect x="5.7103%" y="661" width="0.1393%" height="15" fill="rgb(206,27,48)"/><text x="5.9603%" y="671.50"></text></g><g><title>prep_new_page (1 samples, 0.14%)</title><rect x="5.7103%" y="645" width="0.1393%" height="15" fill="rgb(225,35,8)"/><text x="5.9603%" y="655.50"></text></g><g><title>kernel_init_free_pages (1 samples, 0.14%)</title><rect x="5.7103%" y="629" width="0.1393%" height="15" fill="rgb(250,213,24)"/><text x="5.9603%" y="639.50"></text></g><g><title>clear_page_erms (1 samples, 0.14%)</title><rect x="5.7103%" y="613" width="0.1393%" height="15" fill="rgb(247,123,22)"/><text x="5.9603%" y="623.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.28%)</title><rect x="5.8496%" y="821" width="0.2786%" height="15" fill="rgb(231,138,38)"/><text x="6.0996%" y="831.50"></text></g><g><title>_int_malloc (1 samples, 0.14%)</title><rect x="5.9889%" y="805" width="0.1393%" height="15" fill="rgb(231,145,46)"/><text x="6.2389%" y="815.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.28%)</title><rect x="6.2674%" y="789" width="0.2786%" height="15" fill="rgb(251,118,11)"/><text x="6.5174%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.28%)</title><rect x="6.2674%" y="773" width="0.2786%" height="15" fill="rgb(217,147,25)"/><text x="6.5174%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.28%)</title><rect x="6.2674%" y="757" width="0.2786%" height="15" fill="rgb(247,81,37)"/><text x="6.5174%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.28%)</title><rect x="6.2674%" y="741" width="0.2786%" height="15" fill="rgb(209,12,38)"/><text x="6.5174%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.28%)</title><rect x="6.2674%" y="725" width="0.2786%" height="15" fill="rgb(227,1,9)"/><text x="6.5174%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.28%)</title><rect x="6.2674%" y="709" width="0.2786%" height="15" fill="rgb(248,47,43)"/><text x="6.5174%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.28%)</title><rect x="6.2674%" y="693" width="0.2786%" height="15" fill="rgb(221,10,30)"/><text x="6.5174%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.28%)</title><rect x="6.2674%" y="677" width="0.2786%" height="15" fill="rgb(210,229,1)"/><text x="6.5174%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.28%)</title><rect x="6.2674%" y="661" width="0.2786%" height="15" fill="rgb(222,148,37)"/><text x="6.5174%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.28%)</title><rect x="6.2674%" y="645" width="0.2786%" height="15" fill="rgb(234,67,33)"/><text x="6.5174%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.28%)</title><rect x="6.2674%" y="629" width="0.2786%" height="15" fill="rgb(247,98,35)"/><text x="6.5174%" y="639.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.28%)</title><rect x="6.2674%" y="613" width="0.2786%" height="15" fill="rgb(247,138,52)"/><text x="6.5174%" y="623.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.28%)</title><rect x="6.2674%" y="597" width="0.2786%" height="15" fill="rgb(213,79,30)"/><text x="6.5174%" y="607.50"></text></g><g><title>_int_malloc (2 samples, 0.28%)</title><rect x="6.2674%" y="581" width="0.2786%" height="15" fill="rgb(246,177,23)"/><text x="6.5174%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.56%)</title><rect x="6.1281%" y="805" width="0.5571%" height="15" fill="rgb(230,62,27)"/><text x="6.3781%" y="815.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.14%)</title><rect x="6.5460%" y="789" width="0.1393%" height="15" fill="rgb(216,154,8)"/><text x="6.7960%" y="799.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (7 samples, 0.97%)</title><rect x="5.8496%" y="869" width="0.9749%" height="15" fill="rgb(244,35,45)"/><text x="6.0996%" y="879.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (7 samples, 0.97%)</title><rect x="5.8496%" y="853" width="0.9749%" height="15" fill="rgb(251,115,12)"/><text x="6.0996%" y="863.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (7 samples, 0.97%)</title><rect x="5.8496%" y="837" width="0.9749%" height="15" fill="rgb(240,54,50)"/><text x="6.0996%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (5 samples, 0.70%)</title><rect x="6.1281%" y="821" width="0.6964%" height="15" fill="rgb(233,84,52)"/><text x="6.3781%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.14%)</title><rect x="6.6852%" y="805" width="0.1393%" height="15" fill="rgb(207,117,47)"/><text x="6.9352%" y="815.50"></text></g><g><title>malloc_consolidate (5 samples, 0.70%)</title><rect x="6.8245%" y="773" width="0.6964%" height="15" fill="rgb(249,43,39)"/><text x="7.0745%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.84%)</title><rect x="6.8245%" y="837" width="0.8357%" height="15" fill="rgb(209,38,44)"/><text x="7.0745%" y="847.50"></text></g><g><title>__GI___libc_realloc (6 samples, 0.84%)</title><rect x="6.8245%" y="821" width="0.8357%" height="15" fill="rgb(236,212,23)"/><text x="7.0745%" y="831.50"></text></g><g><title>_int_realloc (6 samples, 0.84%)</title><rect x="6.8245%" y="805" width="0.8357%" height="15" fill="rgb(242,79,21)"/><text x="7.0745%" y="815.50"></text></g><g><title>_int_malloc (6 samples, 0.84%)</title><rect x="6.8245%" y="789" width="0.8357%" height="15" fill="rgb(211,96,35)"/><text x="7.0745%" y="799.50"></text></g><g><title>sysmalloc (1 samples, 0.14%)</title><rect x="7.5209%" y="773" width="0.1393%" height="15" fill="rgb(253,215,40)"/><text x="7.7709%" y="783.50"></text></g><g><title>page_fault (1 samples, 0.14%)</title><rect x="7.5209%" y="757" width="0.1393%" height="15" fill="rgb(211,81,21)"/><text x="7.7709%" y="767.50"></text></g><g><title>do_page_fault (1 samples, 0.14%)</title><rect x="7.5209%" y="741" width="0.1393%" height="15" fill="rgb(208,190,38)"/><text x="7.7709%" y="751.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="8.2173%" y="805" width="0.1393%" height="15" fill="rgb(235,213,38)"/><text x="8.4673%" y="815.50"></text></g><g><title>_int_malloc (1 samples, 0.14%)</title><rect x="8.2173%" y="789" width="0.1393%" height="15" fill="rgb(237,122,38)"/><text x="8.4673%" y="799.50"></text></g><g><title>__memcmp_avx2_movbe (8 samples, 1.11%)</title><rect x="8.3565%" y="805" width="1.1142%" height="15" fill="rgb(244,218,35)"/><text x="8.6065%" y="815.50"></text></g><g><title>_int_free (1 samples, 0.14%)</title><rect x="9.4708%" y="805" width="0.1393%" height="15" fill="rgb(240,68,47)"/><text x="9.7208%" y="815.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="9.7493%" y="789" width="0.1393%" height="15" fill="rgb(210,16,53)"/><text x="9.9993%" y="799.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.14%)</title><rect x="9.7493%" y="773" width="0.1393%" height="15" fill="rgb(235,124,12)"/><text x="9.9993%" y="783.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (25 samples, 3.48%)</title><rect x="7.6602%" y="821" width="3.4819%" height="15" fill="rgb(224,169,11)"/><text x="7.9102%" y="831.50">sql..</text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (11 samples, 1.53%)</title><rect x="9.6100%" y="805" width="1.5320%" height="15" fill="rgb(250,166,2)"/><text x="9.8600%" y="815.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (9 samples, 1.25%)</title><rect x="9.8886%" y="789" width="1.2535%" height="15" fill="rgb(242,216,29)"/><text x="10.1386%" y="799.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (7 samples, 0.97%)</title><rect x="10.1671%" y="773" width="0.9749%" height="15" fill="rgb(230,116,27)"/><text x="10.4171%" y="783.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (7 samples, 0.97%)</title><rect x="10.1671%" y="757" width="0.9749%" height="15" fill="rgb(228,99,48)"/><text x="10.4171%" y="767.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (3 samples, 0.42%)</title><rect x="10.7242%" y="741" width="0.4178%" height="15" fill="rgb(253,11,6)"/><text x="10.9742%" y="751.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (39 samples, 5.43%)</title><rect x="5.8496%" y="901" width="5.4318%" height="15" fill="rgb(247,143,39)"/><text x="6.0996%" y="911.50">&lt;decor:..</text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (39 samples, 5.43%)</title><rect x="5.8496%" y="885" width="5.4318%" height="15" fill="rgb(236,97,10)"/><text x="6.0996%" y="895.50">decor::..</text></g><g><title>sql_parser::parser::parse_statements (32 samples, 4.46%)</title><rect x="6.8245%" y="869" width="4.4568%" height="15" fill="rgb(233,208,19)"/><text x="7.0745%" y="879.50">sql_p..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (32 samples, 4.46%)</title><rect x="6.8245%" y="853" width="4.4568%" height="15" fill="rgb(216,164,2)"/><text x="7.0745%" y="863.50">sql_p..</text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (26 samples, 3.62%)</title><rect x="7.6602%" y="837" width="3.6212%" height="15" fill="rgb(220,129,5)"/><text x="7.9102%" y="847.50">sql_..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_word (1 samples, 0.14%)</title><rect x="11.1421%" y="821" width="0.1393%" height="15" fill="rgb(242,17,10)"/><text x="11.3921%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.14%)</title><rect x="11.1421%" y="805" width="0.1393%" height="15" fill="rgb(242,107,0)"/><text x="11.3921%" y="815.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.14%)</title><rect x="11.1421%" y="789" width="0.1393%" height="15" fill="rgb(251,28,31)"/><text x="11.3921%" y="799.50"></text></g><g><title>hwloc::Topology::new (1 samples, 0.14%)</title><rect x="11.2813%" y="741" width="0.1393%" height="15" fill="rgb(233,223,10)"/><text x="11.5313%" y="751.50"></text></g><g><title>hwloc_topology_load (1 samples, 0.14%)</title><rect x="11.2813%" y="725" width="0.1393%" height="15" fill="rgb(215,21,27)"/><text x="11.5313%" y="735.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.14%)</title><rect x="11.2813%" y="709" width="0.1393%" height="15" fill="rgb(232,23,21)"/><text x="11.5313%" y="719.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.14%)</title><rect x="11.2813%" y="693" width="0.1393%" height="15" fill="rgb(244,5,23)"/><text x="11.5313%" y="703.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.14%)</title><rect x="11.2813%" y="677" width="0.1393%" height="15" fill="rgb(226,81,46)"/><text x="11.5313%" y="687.50"></text></g><g><title>__libc_read (1 samples, 0.14%)</title><rect x="11.2813%" y="661" width="0.1393%" height="15" fill="rgb(247,70,30)"/><text x="11.5313%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="11.2813%" y="645" width="0.1393%" height="15" fill="rgb(212,68,19)"/><text x="11.5313%" y="655.50"></text></g><g><title>do_syscall_64 (1 samples, 0.14%)</title><rect x="11.2813%" y="629" width="0.1393%" height="15" fill="rgb(240,187,13)"/><text x="11.5313%" y="639.50"></text></g><g><title>ksys_read (1 samples, 0.14%)</title><rect x="11.2813%" y="613" width="0.1393%" height="15" fill="rgb(223,113,26)"/><text x="11.5313%" y="623.50"></text></g><g><title>vfs_read (1 samples, 0.14%)</title><rect x="11.2813%" y="597" width="0.1393%" height="15" fill="rgb(206,192,2)"/><text x="11.5313%" y="607.50"></text></g><g><title>seq_read (1 samples, 0.14%)</title><rect x="11.2813%" y="581" width="0.1393%" height="15" fill="rgb(241,108,4)"/><text x="11.5313%" y="591.50"></text></g><g><title>sysfs_kf_seq_show (1 samples, 0.14%)</title><rect x="11.2813%" y="565" width="0.1393%" height="15" fill="rgb(247,173,49)"/><text x="11.5313%" y="575.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.14%)</title><rect x="11.6992%" y="533" width="0.1393%" height="15" fill="rgb(224,114,35)"/><text x="11.9492%" y="543.50"></text></g><g><title>preempt_count_sub (1 samples, 0.14%)</title><rect x="11.6992%" y="517" width="0.1393%" height="15" fill="rgb(245,159,27)"/><text x="11.9492%" y="527.50"></text></g><g><title>__dev_queue_xmit (2 samples, 0.28%)</title><rect x="12.3955%" y="421" width="0.2786%" height="15" fill="rgb(245,172,44)"/><text x="12.6455%" y="431.50"></text></g><g><title>__local_bh_enable_ip (2 samples, 0.28%)</title><rect x="12.3955%" y="405" width="0.2786%" height="15" fill="rgb(236,23,11)"/><text x="12.6455%" y="415.50"></text></g><g><title>preempt_count_sub (2 samples, 0.28%)</title><rect x="12.3955%" y="389" width="0.2786%" height="15" fill="rgb(205,117,38)"/><text x="12.6455%" y="399.50"></text></g><g><title>sk_reset_timer (1 samples, 0.14%)</title><rect x="12.8134%" y="197" width="0.1393%" height="15" fill="rgb(237,72,25)"/><text x="13.0634%" y="207.50"></text></g><g><title>__mod_timer (1 samples, 0.14%)</title><rect x="12.8134%" y="181" width="0.1393%" height="15" fill="rgb(244,70,9)"/><text x="13.0634%" y="191.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.14%)</title><rect x="13.0919%" y="133" width="0.1393%" height="15" fill="rgb(217,125,39)"/><text x="13.3419%" y="143.50"></text></g><g><title>psi_task_change (2 samples, 0.28%)</title><rect x="13.2312%" y="117" width="0.2786%" height="15" fill="rgb(235,36,10)"/><text x="13.4812%" y="127.50"></text></g><g><title>psi_group_change (2 samples, 0.28%)</title><rect x="13.2312%" y="101" width="0.2786%" height="15" fill="rgb(251,123,47)"/><text x="13.4812%" y="111.50"></text></g><g><title>record_times (1 samples, 0.14%)</title><rect x="13.3705%" y="85" width="0.1393%" height="15" fill="rgb(221,13,13)"/><text x="13.6205%" y="95.50"></text></g><g><title>enqueue_task (3 samples, 0.42%)</title><rect x="13.2312%" y="133" width="0.4178%" height="15" fill="rgb(238,131,9)"/><text x="13.4812%" y="143.50"></text></g><g><title>uclamp_rq_inc_id (1 samples, 0.14%)</title><rect x="13.5097%" y="117" width="0.1393%" height="15" fill="rgb(211,50,8)"/><text x="13.7597%" y="127.50"></text></g><g><title>enqueue_task_fair (1 samples, 0.14%)</title><rect x="13.6490%" y="133" width="0.1393%" height="15" fill="rgb(245,182,24)"/><text x="13.8990%" y="143.50"></text></g><g><title>enqueue_entity (1 samples, 0.14%)</title><rect x="13.6490%" y="117" width="0.1393%" height="15" fill="rgb(242,14,37)"/><text x="13.8990%" y="127.50"></text></g><g><title>update_load_avg (1 samples, 0.14%)</title><rect x="13.6490%" y="101" width="0.1393%" height="15" fill="rgb(246,228,12)"/><text x="13.8990%" y="111.50"></text></g><g><title>__wake_up_common (7 samples, 0.97%)</title><rect x="12.9526%" y="165" width="0.9749%" height="15" fill="rgb(213,55,15)"/><text x="13.2026%" y="175.50"></text></g><g><title>try_to_wake_up (7 samples, 0.97%)</title><rect x="12.9526%" y="149" width="0.9749%" height="15" fill="rgb(209,9,3)"/><text x="13.2026%" y="159.50"></text></g><g><title>ttwu_do_wakeup (1 samples, 0.14%)</title><rect x="13.7883%" y="133" width="0.1393%" height="15" fill="rgb(230,59,30)"/><text x="14.0383%" y="143.50"></text></g><g><title>check_preempt_curr (1 samples, 0.14%)</title><rect x="13.7883%" y="117" width="0.1393%" height="15" fill="rgb(209,121,21)"/><text x="14.0383%" y="127.50"></text></g><g><title>resched_curr (1 samples, 0.14%)</title><rect x="13.7883%" y="101" width="0.1393%" height="15" fill="rgb(220,109,13)"/><text x="14.0383%" y="111.50"></text></g><g><title>sock_def_readable (8 samples, 1.11%)</title><rect x="12.9526%" y="197" width="1.1142%" height="15" fill="rgb(232,18,1)"/><text x="13.2026%" y="207.50"></text></g><g><title>__wake_up_common_lock (8 samples, 1.11%)</title><rect x="12.9526%" y="181" width="1.1142%" height="15" fill="rgb(215,41,42)"/><text x="13.2026%" y="191.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.14%)</title><rect x="13.9276%" y="165" width="0.1393%" height="15" fill="rgb(224,123,36)"/><text x="14.1776%" y="175.50"></text></g><g><title>bictcp_cong_avoid (1 samples, 0.14%)</title><rect x="14.0669%" y="181" width="0.1393%" height="15" fill="rgb(240,125,3)"/><text x="14.3169%" y="191.50"></text></g><g><title>tcp_ack (2 samples, 0.28%)</title><rect x="14.0669%" y="197" width="0.2786%" height="15" fill="rgb(205,98,50)"/><text x="14.3169%" y="207.50"></text></g><g><title>tcp_newly_delivered (1 samples, 0.14%)</title><rect x="14.2061%" y="181" width="0.1393%" height="15" fill="rgb(205,185,37)"/><text x="14.4561%" y="191.50"></text></g><g><title>tcp_mstamp_refresh (1 samples, 0.14%)</title><rect x="14.3454%" y="197" width="0.1393%" height="15" fill="rgb(238,207,15)"/><text x="14.5954%" y="207.50"></text></g><g><title>__ip_queue_xmit (18 samples, 2.51%)</title><rect x="12.2563%" y="469" width="2.5070%" height="15" fill="rgb(213,199,42)"/><text x="12.5063%" y="479.50">__..</text></g><g><title>ip_output (18 samples, 2.51%)</title><rect x="12.2563%" y="453" width="2.5070%" height="15" fill="rgb(235,201,11)"/><text x="12.5063%" y="463.50">ip..</text></g><g><title>ip_finish_output2 (18 samples, 2.51%)</title><rect x="12.2563%" y="437" width="2.5070%" height="15" fill="rgb(207,46,11)"/><text x="12.5063%" y="447.50">ip..</text></g><g><title>__local_bh_enable_ip (15 samples, 2.09%)</title><rect x="12.6741%" y="421" width="2.0891%" height="15" fill="rgb(241,35,35)"/><text x="12.9241%" y="431.50">_..</text></g><g><title>do_softirq (15 samples, 2.09%)</title><rect x="12.6741%" y="405" width="2.0891%" height="15" fill="rgb(243,32,47)"/><text x="12.9241%" y="415.50">d..</text></g><g><title>do_softirq_own_stack (15 samples, 2.09%)</title><rect x="12.6741%" y="389" width="2.0891%" height="15" fill="rgb(247,202,23)"/><text x="12.9241%" y="399.50">d..</text></g><g><title>__do_softirq (15 samples, 2.09%)</title><rect x="12.6741%" y="373" width="2.0891%" height="15" fill="rgb(219,102,11)"/><text x="12.9241%" y="383.50">_..</text></g><g><title>net_rx_action (15 samples, 2.09%)</title><rect x="12.6741%" y="357" width="2.0891%" height="15" fill="rgb(243,110,44)"/><text x="12.9241%" y="367.50">n..</text></g><g><title>process_backlog (15 samples, 2.09%)</title><rect x="12.6741%" y="341" width="2.0891%" height="15" fill="rgb(222,74,54)"/><text x="12.9241%" y="351.50">p..</text></g><g><title>__netif_receive_skb_one_core (15 samples, 2.09%)</title><rect x="12.6741%" y="325" width="2.0891%" height="15" fill="rgb(216,99,12)"/><text x="12.9241%" y="335.50">_..</text></g><g><title>ip_rcv (15 samples, 2.09%)</title><rect x="12.6741%" y="309" width="2.0891%" height="15" fill="rgb(226,22,26)"/><text x="12.9241%" y="319.50">i..</text></g><g><title>ip_local_deliver (15 samples, 2.09%)</title><rect x="12.6741%" y="293" width="2.0891%" height="15" fill="rgb(217,163,10)"/><text x="12.9241%" y="303.50">i..</text></g><g><title>ip_local_deliver_finish (15 samples, 2.09%)</title><rect x="12.6741%" y="277" width="2.0891%" height="15" fill="rgb(213,25,53)"/><text x="12.9241%" y="287.50">i..</text></g><g><title>ip_protocol_deliver_rcu (15 samples, 2.09%)</title><rect x="12.6741%" y="261" width="2.0891%" height="15" fill="rgb(252,105,26)"/><text x="12.9241%" y="271.50">i..</text></g><g><title>tcp_v4_rcv (15 samples, 2.09%)</title><rect x="12.6741%" y="245" width="2.0891%" height="15" fill="rgb(220,39,43)"/><text x="12.9241%" y="255.50">t..</text></g><g><title>tcp_v4_do_rcv (15 samples, 2.09%)</title><rect x="12.6741%" y="229" width="2.0891%" height="15" fill="rgb(229,68,48)"/><text x="12.9241%" y="239.50">t..</text></g><g><title>tcp_rcv_established (15 samples, 2.09%)</title><rect x="12.6741%" y="213" width="2.0891%" height="15" fill="rgb(252,8,32)"/><text x="12.9241%" y="223.50">t..</text></g><g><title>tcp_queue_rcv (2 samples, 0.28%)</title><rect x="14.4847%" y="197" width="0.2786%" height="15" fill="rgb(223,20,43)"/><text x="14.7347%" y="207.50"></text></g><g><title>__tcp_transmit_skb (19 samples, 2.65%)</title><rect x="12.2563%" y="485" width="2.6462%" height="15" fill="rgb(229,81,49)"/><text x="12.5063%" y="495.50">__..</text></g><g><title>skb_clone (1 samples, 0.14%)</title><rect x="14.7632%" y="469" width="0.1393%" height="15" fill="rgb(236,28,36)"/><text x="15.0132%" y="479.50"></text></g><g><title>__tcp_push_pending_frames (20 samples, 2.79%)</title><rect x="12.2563%" y="517" width="2.7855%" height="15" fill="rgb(249,185,26)"/><text x="12.5063%" y="527.50">__..</text></g><g><title>tcp_write_xmit (20 samples, 2.79%)</title><rect x="12.2563%" y="501" width="2.7855%" height="15" fill="rgb(249,174,33)"/><text x="12.5063%" y="511.50">tc..</text></g><g><title>tcp_event_new_data_sent (1 samples, 0.14%)</title><rect x="14.9025%" y="485" width="0.1393%" height="15" fill="rgb(233,201,37)"/><text x="15.1525%" y="495.50"></text></g><g><title>memcg_kmem_put_cache (1 samples, 0.14%)</title><rect x="15.0418%" y="469" width="0.1393%" height="15" fill="rgb(221,78,26)"/><text x="15.2918%" y="479.50"></text></g><g><title>__kmalloc_node_track_caller (2 samples, 0.28%)</title><rect x="15.0418%" y="485" width="0.2786%" height="15" fill="rgb(250,127,30)"/><text x="15.2918%" y="495.50"></text></g><g><title>memset_erms (1 samples, 0.14%)</title><rect x="15.1811%" y="469" width="0.1393%" height="15" fill="rgb(230,49,44)"/><text x="15.4311%" y="479.50"></text></g><g><title>sk_stream_alloc_skb (4 samples, 0.56%)</title><rect x="15.0418%" y="517" width="0.5571%" height="15" fill="rgb(229,67,23)"/><text x="15.2918%" y="527.50"></text></g><g><title>__alloc_skb (4 samples, 0.56%)</title><rect x="15.0418%" y="501" width="0.5571%" height="15" fill="rgb(249,83,47)"/><text x="15.2918%" y="511.50"></text></g><g><title>kmem_cache_alloc_node (2 samples, 0.28%)</title><rect x="15.3203%" y="485" width="0.2786%" height="15" fill="rgb(215,43,3)"/><text x="15.5703%" y="495.50"></text></g><g><title>sock_sendmsg (29 samples, 4.04%)</title><rect x="11.6992%" y="565" width="4.0390%" height="15" fill="rgb(238,154,13)"/><text x="11.9492%" y="575.50">sock..</text></g><g><title>tcp_sendmsg (29 samples, 4.04%)</title><rect x="11.6992%" y="549" width="4.0390%" height="15" fill="rgb(219,56,2)"/><text x="11.9492%" y="559.50">tcp_..</text></g><g><title>tcp_sendmsg_locked (28 samples, 3.90%)</title><rect x="11.8384%" y="533" width="3.8997%" height="15" fill="rgb(233,0,4)"/><text x="12.0884%" y="543.50">tcp_..</text></g><g><title>tcp_send_mss (1 samples, 0.14%)</title><rect x="15.5989%" y="517" width="0.1393%" height="15" fill="rgb(235,30,7)"/><text x="15.8489%" y="527.50"></text></g><g><title>tcp_current_mss (1 samples, 0.14%)</title><rect x="15.5989%" y="501" width="0.1393%" height="15" fill="rgb(250,79,13)"/><text x="15.8489%" y="511.50"></text></g><g><title>__x64_sys_sendto (30 samples, 4.18%)</title><rect x="11.6992%" y="597" width="4.1783%" height="15" fill="rgb(211,146,34)"/><text x="11.9492%" y="607.50">__x64..</text></g><g><title>__sys_sendto (30 samples, 4.18%)</title><rect x="11.6992%" y="581" width="4.1783%" height="15" fill="rgb(228,22,38)"/><text x="11.9492%" y="591.50">__sys..</text></g><g><title>sockfd_lookup_light (1 samples, 0.14%)</title><rect x="15.7382%" y="565" width="0.1393%" height="15" fill="rgb(235,168,5)"/><text x="15.9882%" y="575.50"></text></g><g><title>__fget_light (1 samples, 0.14%)</title><rect x="15.7382%" y="549" width="0.1393%" height="15" fill="rgb(221,155,16)"/><text x="15.9882%" y="559.50"></text></g><g><title>entry_SYSCALL_64 (32 samples, 4.46%)</title><rect x="11.5599%" y="629" width="4.4568%" height="15" fill="rgb(215,215,53)"/><text x="11.8099%" y="639.50">entry..</text></g><g><title>do_syscall_64 (31 samples, 4.32%)</title><rect x="11.6992%" y="613" width="4.3175%" height="15" fill="rgb(223,4,10)"/><text x="11.9492%" y="623.50">do_sy..</text></g><g><title>syscall_trace_enter (1 samples, 0.14%)</title><rect x="15.8774%" y="597" width="0.1393%" height="15" fill="rgb(234,103,6)"/><text x="16.1274%" y="607.50"></text></g><g><title>__libc_start_main (35 samples, 4.87%)</title><rect x="11.2813%" y="901" width="4.8747%" height="15" fill="rgb(227,97,0)"/><text x="11.5313%" y="911.50">__libc..</text></g><g><title>main (35 samples, 4.87%)</title><rect x="11.2813%" y="885" width="4.8747%" height="15" fill="rgb(234,150,53)"/><text x="11.5313%" y="895.50">main</text></g><g><title>std::rt::lang_start_internal (35 samples, 4.87%)</title><rect x="11.2813%" y="869" width="4.8747%" height="15" fill="rgb(228,201,54)"/><text x="11.5313%" y="879.50">std::r..</text></g><g><title>std::panic::catch_unwind (35 samples, 4.87%)</title><rect x="11.2813%" y="853" width="4.8747%" height="15" fill="rgb(222,22,37)"/><text x="11.5313%" y="863.50">std::p..</text></g><g><title>std::panicking::try (35 samples, 4.87%)</title><rect x="11.2813%" y="837" width="4.8747%" height="15" fill="rgb(237,53,32)"/><text x="11.5313%" y="847.50">std::p..</text></g><g><title>std::panicking::try::do_call (35 samples, 4.87%)</title><rect x="11.2813%" y="821" width="4.8747%" height="15" fill="rgb(233,25,53)"/><text x="11.5313%" y="831.50">std::p..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (35 samples, 4.87%)</title><rect x="11.2813%" y="805" width="4.8747%" height="15" fill="rgb(210,40,34)"/><text x="11.5313%" y="815.50">core::..</text></g><g><title>std::rt::lang_start::_{{closure}} (35 samples, 4.87%)</title><rect x="11.2813%" y="789" width="4.8747%" height="15" fill="rgb(241,220,44)"/><text x="11.5313%" y="799.50">std::r..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (35 samples, 4.87%)</title><rect x="11.2813%" y="773" width="4.8747%" height="15" fill="rgb(235,28,35)"/><text x="11.5313%" y="783.50">std::s..</text></g><g><title>lobsters::main (35 samples, 4.87%)</title><rect x="11.2813%" y="757" width="4.8747%" height="15" fill="rgb(210,56,17)"/><text x="11.5313%" y="767.50">lobste..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (34 samples, 4.74%)</title><rect x="11.4206%" y="741" width="4.7354%" height="15" fill="rgb(224,130,29)"/><text x="11.6706%" y="751.50">mysql:..</text></g><g><title>mysql::conn::Conn::_query (34 samples, 4.74%)</title><rect x="11.4206%" y="725" width="4.7354%" height="15" fill="rgb(235,212,8)"/><text x="11.6706%" y="735.50">mysql:..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (34 samples, 4.74%)</title><rect x="11.4206%" y="709" width="4.7354%" height="15" fill="rgb(223,33,50)"/><text x="11.6706%" y="719.50">mysql_..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (34 samples, 4.74%)</title><rect x="11.4206%" y="693" width="4.7354%" height="15" fill="rgb(219,149,13)"/><text x="11.6706%" y="703.50">std::i..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (34 samples, 4.74%)</title><rect x="11.4206%" y="677" width="4.7354%" height="15" fill="rgb(250,156,29)"/><text x="11.6706%" y="687.50">&lt;std::..</text></g><g><title>std::sys_common::net::TcpStream::write (34 samples, 4.74%)</title><rect x="11.4206%" y="661" width="4.7354%" height="15" fill="rgb(216,193,19)"/><text x="11.6706%" y="671.50">std::s..</text></g><g><title>__libc_send (34 samples, 4.74%)</title><rect x="11.4206%" y="645" width="4.7354%" height="15" fill="rgb(216,135,14)"/><text x="11.6706%" y="655.50">__libc..</text></g><g><title>syscall_return_via_sysret (1 samples, 0.14%)</title><rect x="16.0167%" y="629" width="0.1393%" height="15" fill="rgb(241,47,5)"/><text x="16.2667%" y="639.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.14%)</title><rect x="16.1560%" y="901" width="0.1393%" height="15" fill="rgb(233,42,35)"/><text x="16.4060%" y="911.50"></text></g><g><title>__rdl_alloc (1 samples, 0.14%)</title><rect x="16.2953%" y="901" width="0.1393%" height="15" fill="rgb(231,13,6)"/><text x="16.5453%" y="911.50"></text></g><g><title>_int_free (2 samples, 0.28%)</title><rect x="16.4345%" y="901" width="0.2786%" height="15" fill="rgb(207,181,40)"/><text x="16.6845%" y="911.50"></text></g><g><title>_int_malloc (2 samples, 0.28%)</title><rect x="16.7131%" y="901" width="0.2786%" height="15" fill="rgb(254,173,49)"/><text x="16.9631%" y="911.50"></text></g><g><title>sysmalloc (1 samples, 0.14%)</title><rect x="16.8524%" y="885" width="0.1393%" height="15" fill="rgb(221,1,38)"/><text x="17.1024%" y="895.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="16.8524%" y="869" width="0.1393%" height="15" fill="rgb(206,124,46)"/><text x="17.1024%" y="879.50"></text></g><g><title>alloc::fmt::format (2 samples, 0.28%)</title><rect x="16.9916%" y="901" width="0.2786%" height="15" fill="rgb(249,21,11)"/><text x="17.2416%" y="911.50"></text></g><g><title>alloc::string::String::with_capacity (2 samples, 0.28%)</title><rect x="16.9916%" y="885" width="0.2786%" height="15" fill="rgb(222,201,40)"/><text x="17.2416%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.28%)</title><rect x="16.9916%" y="869" width="0.2786%" height="15" fill="rgb(235,61,29)"/><text x="17.2416%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.28%)</title><rect x="16.9916%" y="853" width="0.2786%" height="15" fill="rgb(219,207,3)"/><text x="17.2416%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.28%)</title><rect x="16.9916%" y="837" width="0.2786%" height="15" fill="rgb(222,56,46)"/><text x="17.2416%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.28%)</title><rect x="16.9916%" y="821" width="0.2786%" height="15" fill="rgb(239,76,54)"/><text x="17.2416%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.28%)</title><rect x="16.9916%" y="805" width="0.2786%" height="15" fill="rgb(231,124,27)"/><text x="17.2416%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.28%)</title><rect x="16.9916%" y="789" width="0.2786%" height="15" fill="rgb(249,195,6)"/><text x="17.2416%" y="799.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.28%)</title><rect x="16.9916%" y="773" width="0.2786%" height="15" fill="rgb(237,174,47)"/><text x="17.2416%" y="783.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.14%)</title><rect x="17.2702%" y="901" width="0.1393%" height="15" fill="rgb(206,201,31)"/><text x="17.5202%" y="911.50"></text></g><g><title>decor::Shim::create_schema (1 samples, 0.14%)</title><rect x="17.4095%" y="901" width="0.1393%" height="15" fill="rgb(231,57,52)"/><text x="17.6595%" y="911.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query_drop (1 samples, 0.14%)</title><rect x="17.4095%" y="885" width="0.1393%" height="15" fill="rgb(248,177,22)"/><text x="17.6595%" y="895.50"></text></g><g><title>decor::query_transformer::QueryTransformer::issue_to_dt_and_get_mv_stmt (1 samples, 0.14%)</title><rect x="17.4095%" y="869" width="0.1393%" height="15" fill="rgb(215,211,37)"/><text x="17.6595%" y="879.50"></text></g><g><title>decor::mv_transformer::MVTransformer::objname_to_mv_string (1 samples, 0.14%)</title><rect x="17.4095%" y="853" width="0.1393%" height="15" fill="rgb(241,128,51)"/><text x="17.6595%" y="863.50"></text></g><g><title>core::fmt::write (1 samples, 0.14%)</title><rect x="17.4095%" y="837" width="0.1393%" height="15" fill="rgb(227,165,31)"/><text x="17.6595%" y="847.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::ObjectName as core::fmt::Display&gt;::fmt (1 samples, 0.14%)</title><rect x="17.4095%" y="821" width="0.1393%" height="15" fill="rgb(228,167,24)"/><text x="17.6595%" y="831.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.14%)</title><rect x="17.4095%" y="805" width="0.1393%" height="15" fill="rgb(228,143,12)"/><text x="17.6595%" y="815.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (1 samples, 0.14%)</title><rect x="17.4095%" y="789" width="0.1393%" height="15" fill="rgb(249,149,8)"/><text x="17.6595%" y="799.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.14%)</title><rect x="17.4095%" y="773" width="0.1393%" height="15" fill="rgb(243,35,44)"/><text x="17.6595%" y="783.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (1 samples, 0.14%)</title><rect x="17.4095%" y="757" width="0.1393%" height="15" fill="rgb(246,89,9)"/><text x="17.6595%" y="767.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (1 samples, 0.14%)</title><rect x="17.4095%" y="741" width="0.1393%" height="15" fill="rgb(233,213,13)"/><text x="17.6595%" y="751.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.14%)</title><rect x="17.4095%" y="725" width="0.1393%" height="15" fill="rgb(233,141,41)"/><text x="17.6595%" y="735.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (1 samples, 0.14%)</title><rect x="17.4095%" y="709" width="0.1393%" height="15" fill="rgb(239,167,4)"/><text x="17.6595%" y="719.50"></text></g><g><title>_int_free (2 samples, 0.28%)</title><rect x="17.5487%" y="837" width="0.2786%" height="15" fill="rgb(209,217,16)"/><text x="17.7987%" y="847.50"></text></g><g><title>_int_free (2 samples, 0.28%)</title><rect x="17.8273%" y="821" width="0.2786%" height="15" fill="rgb(219,88,35)"/><text x="18.0773%" y="831.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.42%)</title><rect x="17.8273%" y="837" width="0.4178%" height="15" fill="rgb(220,193,23)"/><text x="18.0773%" y="847.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.14%)</title><rect x="18.1058%" y="821" width="0.1393%" height="15" fill="rgb(230,90,52)"/><text x="18.3558%" y="831.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.14%)</title><rect x="18.1058%" y="805" width="0.1393%" height="15" fill="rgb(252,106,19)"/><text x="18.3558%" y="815.50"></text></g><g><title>__rust_dealloc (1 samples, 0.14%)</title><rect x="18.1058%" y="789" width="0.1393%" height="15" fill="rgb(206,74,20)"/><text x="18.3558%" y="799.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.14%)</title><rect x="18.2451%" y="837" width="0.1393%" height="15" fill="rgb(230,138,44)"/><text x="18.4951%" y="847.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.14%)</title><rect x="18.2451%" y="821" width="0.1393%" height="15" fill="rgb(235,182,43)"/><text x="18.4951%" y="831.50"></text></g><g><title>error_entry (2 samples, 0.28%)</title><rect x="18.3844%" y="789" width="0.2786%" height="15" fill="rgb(242,16,51)"/><text x="18.6344%" y="799.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.56%)</title><rect x="18.3844%" y="805" width="0.5571%" height="15" fill="rgb(248,9,4)"/><text x="18.6344%" y="815.50"></text></g><g><title>page_fault (2 samples, 0.28%)</title><rect x="18.6630%" y="789" width="0.2786%" height="15" fill="rgb(210,31,22)"/><text x="18.9130%" y="799.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.28%)</title><rect x="18.6630%" y="773" width="0.2786%" height="15" fill="rgb(239,54,39)"/><text x="18.9130%" y="783.50"></text></g><g><title>handle_mm_fault (2 samples, 0.28%)</title><rect x="18.6630%" y="757" width="0.2786%" height="15" fill="rgb(230,99,41)"/><text x="18.9130%" y="767.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.28%)</title><rect x="18.6630%" y="741" width="0.2786%" height="15" fill="rgb(253,106,12)"/><text x="18.9130%" y="751.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.14%)</title><rect x="18.8022%" y="725" width="0.1393%" height="15" fill="rgb(213,46,41)"/><text x="19.0522%" y="735.50"></text></g><g><title>decor::Shim::run_on_tcp (11 samples, 1.53%)</title><rect x="17.5487%" y="901" width="1.5320%" height="15" fill="rgb(215,133,35)"/><text x="17.7987%" y="911.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (11 samples, 1.53%)</title><rect x="17.5487%" y="885" width="1.5320%" height="15" fill="rgb(213,28,5)"/><text x="17.7987%" y="895.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (11 samples, 1.53%)</title><rect x="17.5487%" y="869" width="1.5320%" height="15" fill="rgb(215,77,49)"/><text x="17.7987%" y="879.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (11 samples, 1.53%)</title><rect x="17.5487%" y="853" width="1.5320%" height="15" fill="rgb(248,100,22)"/><text x="17.7987%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (5 samples, 0.70%)</title><rect x="18.3844%" y="837" width="0.6964%" height="15" fill="rgb(208,67,9)"/><text x="18.6344%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (5 samples, 0.70%)</title><rect x="18.3844%" y="821" width="0.6964%" height="15" fill="rgb(219,133,21)"/><text x="18.6344%" y="831.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.14%)</title><rect x="18.9415%" y="805" width="0.1393%" height="15" fill="rgb(246,46,29)"/><text x="19.1915%" y="815.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.14%)</title><rect x="18.9415%" y="789" width="0.1393%" height="15" fill="rgb(246,185,52)"/><text x="19.1915%" y="799.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query_drop (1 samples, 0.14%)</title><rect x="19.0808%" y="901" width="0.1393%" height="15" fill="rgb(252,136,11)"/><text x="19.3308%" y="911.50"></text></g><g><title>decor::query_transformer::QueryTransformer::issue_to_dt_and_get_mv_stmt (1 samples, 0.14%)</title><rect x="19.0808%" y="885" width="0.1393%" height="15" fill="rgb(219,138,53)"/><text x="19.3308%" y="895.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (1 samples, 0.14%)</title><rect x="19.0808%" y="869" width="0.1393%" height="15" fill="rgb(211,51,23)"/><text x="19.3308%" y="879.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (1 samples, 0.14%)</title><rect x="19.0808%" y="853" width="0.1393%" height="15" fill="rgb(247,221,28)"/><text x="19.3308%" y="863.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.14%)</title><rect x="19.0808%" y="837" width="0.1393%" height="15" fill="rgb(251,222,45)"/><text x="19.3308%" y="847.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.14%)</title><rect x="19.0808%" y="821" width="0.1393%" height="15" fill="rgb(217,162,53)"/><text x="19.3308%" y="831.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.14%)</title><rect x="19.0808%" y="805" width="0.1393%" height="15" fill="rgb(229,93,14)"/><text x="19.3308%" y="815.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.14%)</title><rect x="19.0808%" y="789" width="0.1393%" height="15" fill="rgb(209,67,49)"/><text x="19.3308%" y="799.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1 samples, 0.14%)</title><rect x="19.0808%" y="773" width="0.1393%" height="15" fill="rgb(213,87,29)"/><text x="19.3308%" y="783.50"></text></g><g><title>__libc_send (1 samples, 0.14%)</title><rect x="19.0808%" y="757" width="0.1393%" height="15" fill="rgb(205,151,52)"/><text x="19.3308%" y="767.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="19.0808%" y="741" width="0.1393%" height="15" fill="rgb(253,215,39)"/><text x="19.3308%" y="751.50"></text></g><g><title>do_syscall_64 (1 samples, 0.14%)</title><rect x="19.0808%" y="725" width="0.1393%" height="15" fill="rgb(221,220,41)"/><text x="19.3308%" y="735.50"></text></g><g><title>__x64_sys_sendto (1 samples, 0.14%)</title><rect x="19.0808%" y="709" width="0.1393%" height="15" fill="rgb(218,133,21)"/><text x="19.3308%" y="719.50"></text></g><g><title>__sys_sendto (1 samples, 0.14%)</title><rect x="19.0808%" y="693" width="0.1393%" height="15" fill="rgb(221,193,43)"/><text x="19.3308%" y="703.50"></text></g><g><title>sock_sendmsg (1 samples, 0.14%)</title><rect x="19.0808%" y="677" width="0.1393%" height="15" fill="rgb(240,128,52)"/><text x="19.3308%" y="687.50"></text></g><g><title>tcp_sendmsg (1 samples, 0.14%)</title><rect x="19.0808%" y="661" width="0.1393%" height="15" fill="rgb(253,114,12)"/><text x="19.3308%" y="671.50"></text></g><g><title>tcp_sendmsg_locked (1 samples, 0.14%)</title><rect x="19.0808%" y="645" width="0.1393%" height="15" fill="rgb(215,223,47)"/><text x="19.3308%" y="655.50"></text></g><g><title>__tcp_push_pending_frames (1 samples, 0.14%)</title><rect x="19.0808%" y="629" width="0.1393%" height="15" fill="rgb(248,225,23)"/><text x="19.3308%" y="639.50"></text></g><g><title>tcp_write_xmit (1 samples, 0.14%)</title><rect x="19.0808%" y="613" width="0.1393%" height="15" fill="rgb(250,108,0)"/><text x="19.3308%" y="623.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.14%)</title><rect x="19.0808%" y="597" width="0.1393%" height="15" fill="rgb(228,208,7)"/><text x="19.3308%" y="607.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.14%)</title><rect x="19.0808%" y="581" width="0.1393%" height="15" fill="rgb(244,45,10)"/><text x="19.3308%" y="591.50"></text></g><g><title>ip_output (1 samples, 0.14%)</title><rect x="19.0808%" y="565" width="0.1393%" height="15" fill="rgb(207,125,25)"/><text x="19.3308%" y="575.50"></text></g><g><title>ip_finish_output2 (1 samples, 0.14%)</title><rect x="19.0808%" y="549" width="0.1393%" height="15" fill="rgb(210,195,18)"/><text x="19.3308%" y="559.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.14%)</title><rect x="19.0808%" y="533" width="0.1393%" height="15" fill="rgb(249,80,12)"/><text x="19.3308%" y="543.50"></text></g><g><title>do_softirq (1 samples, 0.14%)</title><rect x="19.0808%" y="517" width="0.1393%" height="15" fill="rgb(221,65,9)"/><text x="19.3308%" y="527.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.14%)</title><rect x="19.0808%" y="501" width="0.1393%" height="15" fill="rgb(235,49,36)"/><text x="19.3308%" y="511.50"></text></g><g><title>__do_softirq (1 samples, 0.14%)</title><rect x="19.0808%" y="485" width="0.1393%" height="15" fill="rgb(225,32,20)"/><text x="19.3308%" y="495.50"></text></g><g><title>net_rx_action (1 samples, 0.14%)</title><rect x="19.0808%" y="469" width="0.1393%" height="15" fill="rgb(215,141,46)"/><text x="19.3308%" y="479.50"></text></g><g><title>process_backlog (1 samples, 0.14%)</title><rect x="19.0808%" y="453" width="0.1393%" height="15" fill="rgb(250,160,47)"/><text x="19.3308%" y="463.50"></text></g><g><title>__netif_receive_skb_one_core (1 samples, 0.14%)</title><rect x="19.0808%" y="437" width="0.1393%" height="15" fill="rgb(216,222,40)"/><text x="19.3308%" y="447.50"></text></g><g><title>ip_rcv (1 samples, 0.14%)</title><rect x="19.0808%" y="421" width="0.1393%" height="15" fill="rgb(234,217,39)"/><text x="19.3308%" y="431.50"></text></g><g><title>ip_local_deliver (1 samples, 0.14%)</title><rect x="19.0808%" y="405" width="0.1393%" height="15" fill="rgb(207,178,40)"/><text x="19.3308%" y="415.50"></text></g><g><title>ip_local_deliver_finish (1 samples, 0.14%)</title><rect x="19.0808%" y="389" width="0.1393%" height="15" fill="rgb(221,136,13)"/><text x="19.3308%" y="399.50"></text></g><g><title>ip_protocol_deliver_rcu (1 samples, 0.14%)</title><rect x="19.0808%" y="373" width="0.1393%" height="15" fill="rgb(249,199,10)"/><text x="19.3308%" y="383.50"></text></g><g><title>tcp_v4_rcv (1 samples, 0.14%)</title><rect x="19.0808%" y="357" width="0.1393%" height="15" fill="rgb(249,222,13)"/><text x="19.3308%" y="367.50"></text></g><g><title>tcp_v4_do_rcv (1 samples, 0.14%)</title><rect x="19.0808%" y="341" width="0.1393%" height="15" fill="rgb(244,185,38)"/><text x="19.3308%" y="351.50"></text></g><g><title>tcp_rcv_established (1 samples, 0.14%)</title><rect x="19.0808%" y="325" width="0.1393%" height="15" fill="rgb(236,202,9)"/><text x="19.3308%" y="335.50"></text></g><g><title>tcp_ack (1 samples, 0.14%)</title><rect x="19.0808%" y="309" width="0.1393%" height="15" fill="rgb(250,229,37)"/><text x="19.3308%" y="319.50"></text></g><g><title>kmem_cache_free (1 samples, 0.14%)</title><rect x="19.0808%" y="293" width="0.1393%" height="15" fill="rgb(206,174,23)"/><text x="19.3308%" y="303.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.14%)</title><rect x="19.4986%" y="853" width="0.1393%" height="15" fill="rgb(211,33,43)"/><text x="19.7486%" y="863.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="19.9164%" y="837" width="0.1393%" height="15" fill="rgb(245,58,50)"/><text x="20.1664%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="19.9164%" y="821" width="0.1393%" height="15" fill="rgb(244,68,36)"/><text x="20.1664%" y="831.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.14%)</title><rect x="20.0557%" y="837" width="0.1393%" height="15" fill="rgb(232,229,15)"/><text x="20.3057%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (5 samples, 0.70%)</title><rect x="19.6379%" y="853" width="0.6964%" height="15" fill="rgb(254,30,23)"/><text x="19.8879%" y="863.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.14%)</title><rect x="20.1950%" y="837" width="0.1393%" height="15" fill="rgb(235,160,14)"/><text x="20.4450%" y="847.50"></text></g><g><title>_int_free (1 samples, 0.14%)</title><rect x="20.1950%" y="821" width="0.1393%" height="15" fill="rgb(212,155,44)"/><text x="20.4450%" y="831.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="20.3343%" y="821" width="0.1393%" height="15" fill="rgb(226,2,50)"/><text x="20.5843%" y="831.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="20.3343%" y="805" width="0.1393%" height="15" fill="rgb(234,177,6)"/><text x="20.5843%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="20.3343%" y="789" width="0.1393%" height="15" fill="rgb(217,24,9)"/><text x="20.5843%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.14%)</title><rect x="20.3343%" y="773" width="0.1393%" height="15" fill="rgb(220,13,46)"/><text x="20.5843%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.14%)</title><rect x="20.3343%" y="757" width="0.1393%" height="15" fill="rgb(239,221,27)"/><text x="20.5843%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.14%)</title><rect x="20.3343%" y="741" width="0.1393%" height="15" fill="rgb(222,198,25)"/><text x="20.5843%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.14%)</title><rect x="20.3343%" y="725" width="0.1393%" height="15" fill="rgb(211,99,13)"/><text x="20.5843%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="20.3343%" y="709" width="0.1393%" height="15" fill="rgb(232,111,31)"/><text x="20.5843%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.14%)</title><rect x="20.3343%" y="693" width="0.1393%" height="15" fill="rgb(245,82,37)"/><text x="20.5843%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.14%)</title><rect x="20.3343%" y="677" width="0.1393%" height="15" fill="rgb(227,149,46)"/><text x="20.5843%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.14%)</title><rect x="20.3343%" y="661" width="0.1393%" height="15" fill="rgb(218,36,50)"/><text x="20.5843%" y="671.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.14%)</title><rect x="20.3343%" y="645" width="0.1393%" height="15" fill="rgb(226,80,48)"/><text x="20.5843%" y="655.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="20.3343%" y="629" width="0.1393%" height="15" fill="rgb(238,224,15)"/><text x="20.5843%" y="639.50"></text></g><g><title>_int_malloc (1 samples, 0.14%)</title><rect x="20.3343%" y="613" width="0.1393%" height="15" fill="rgb(241,136,10)"/><text x="20.5843%" y="623.50"></text></g><g><title>sql_parser::parser::Parser::parse_object_name (2 samples, 0.28%)</title><rect x="20.3343%" y="853" width="0.2786%" height="15" fill="rgb(208,32,45)"/><text x="20.5843%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::parse_identifier (2 samples, 0.28%)</title><rect x="20.3343%" y="837" width="0.2786%" height="15" fill="rgb(207,135,9)"/><text x="20.5843%" y="847.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (1 samples, 0.14%)</title><rect x="20.4735%" y="821" width="0.1393%" height="15" fill="rgb(206,86,44)"/><text x="20.7235%" y="831.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="20.4735%" y="805" width="0.1393%" height="15" fill="rgb(245,177,15)"/><text x="20.7235%" y="815.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="20.4735%" y="789" width="0.1393%" height="15" fill="rgb(206,64,50)"/><text x="20.7235%" y="799.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.14%)</title><rect x="20.4735%" y="773" width="0.1393%" height="15" fill="rgb(234,36,40)"/><text x="20.7235%" y="783.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="20.4735%" y="757" width="0.1393%" height="15" fill="rgb(213,64,8)"/><text x="20.7235%" y="767.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.14%)</title><rect x="20.4735%" y="741" width="0.1393%" height="15" fill="rgb(210,75,36)"/><text x="20.7235%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.28%)</title><rect x="20.6128%" y="821" width="0.2786%" height="15" fill="rgb(229,88,21)"/><text x="20.8628%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="20.7521%" y="805" width="0.1393%" height="15" fill="rgb(252,204,47)"/><text x="21.0021%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.14%)</title><rect x="20.7521%" y="789" width="0.1393%" height="15" fill="rgb(208,77,27)"/><text x="21.0021%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.14%)</title><rect x="20.7521%" y="773" width="0.1393%" height="15" fill="rgb(221,76,26)"/><text x="21.0021%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.14%)</title><rect x="20.7521%" y="757" width="0.1393%" height="15" fill="rgb(225,139,18)"/><text x="21.0021%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.14%)</title><rect x="20.7521%" y="741" width="0.1393%" height="15" fill="rgb(230,137,11)"/><text x="21.0021%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="20.7521%" y="725" width="0.1393%" height="15" fill="rgb(212,28,1)"/><text x="21.0021%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.14%)</title><rect x="20.7521%" y="709" width="0.1393%" height="15" fill="rgb(248,164,17)"/><text x="21.0021%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.14%)</title><rect x="20.7521%" y="693" width="0.1393%" height="15" fill="rgb(222,171,42)"/><text x="21.0021%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.14%)</title><rect x="20.7521%" y="677" width="0.1393%" height="15" fill="rgb(243,84,45)"/><text x="21.0021%" y="687.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.14%)</title><rect x="20.7521%" y="661" width="0.1393%" height="15" fill="rgb(252,49,23)"/><text x="21.0021%" y="671.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="20.7521%" y="645" width="0.1393%" height="15" fill="rgb(215,19,7)"/><text x="21.0021%" y="655.50"></text></g><g><title>_int_malloc (1 samples, 0.14%)</title><rect x="20.7521%" y="629" width="0.1393%" height="15" fill="rgb(238,81,41)"/><text x="21.0021%" y="639.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.14%)</title><rect x="20.7521%" y="613" width="0.1393%" height="15" fill="rgb(210,199,37)"/><text x="21.0021%" y="623.50"></text></g><g><title>__GI___libc_free (1 samples, 0.14%)</title><rect x="20.8914%" y="821" width="0.1393%" height="15" fill="rgb(244,192,49)"/><text x="21.1414%" y="831.50"></text></g><g><title>alloc::string::String::push (6 samples, 0.84%)</title><rect x="21.0306%" y="805" width="0.8357%" height="15" fill="rgb(226,211,11)"/><text x="21.2806%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (4 samples, 0.56%)</title><rect x="21.3092%" y="789" width="0.5571%" height="15" fill="rgb(236,162,54)"/><text x="21.5592%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (4 samples, 0.56%)</title><rect x="21.3092%" y="773" width="0.5571%" height="15" fill="rgb(220,229,9)"/><text x="21.5592%" y="783.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (21 samples, 2.92%)</title><rect x="19.2201%" y="901" width="2.9248%" height="15" fill="rgb(250,87,22)"/><text x="19.4701%" y="911.50">de..</text></g><g><title>sql_parser::parser::parse_statements (21 samples, 2.92%)</title><rect x="19.2201%" y="885" width="2.9248%" height="15" fill="rgb(239,43,17)"/><text x="19.4701%" y="895.50">sq..</text></g><g><title>sql_parser::parser::Parser::parse_statement (21 samples, 2.92%)</title><rect x="19.2201%" y="869" width="2.9248%" height="15" fill="rgb(231,177,25)"/><text x="19.4701%" y="879.50">sq..</text></g><g><title>sql_parser::parser::Parser::parse_parenthesized_column_list (11 samples, 1.53%)</title><rect x="20.6128%" y="853" width="1.5320%" height="15" fill="rgb(219,179,1)"/><text x="20.8628%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::parse_identifier (11 samples, 1.53%)</title><rect x="20.6128%" y="837" width="1.5320%" height="15" fill="rgb(238,219,53)"/><text x="20.8628%" y="847.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (8 samples, 1.11%)</title><rect x="21.0306%" y="821" width="1.1142%" height="15" fill="rgb(232,167,36)"/><text x="21.2806%" y="831.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_lower (2 samples, 0.28%)</title><rect x="21.8663%" y="805" width="0.2786%" height="15" fill="rgb(244,19,51)"/><text x="22.1163%" y="815.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.28%)</title><rect x="21.8663%" y="789" width="0.2786%" height="15" fill="rgb(224,6,22)"/><text x="22.1163%" y="799.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.28%)</title><rect x="21.8663%" y="773" width="0.2786%" height="15" fill="rgb(224,145,5)"/><text x="22.1163%" y="783.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (1 samples, 0.14%)</title><rect x="22.0056%" y="757" width="0.1393%" height="15" fill="rgb(234,130,49)"/><text x="22.2556%" y="767.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.14%)</title><rect x="22.1448%" y="869" width="0.1393%" height="15" fill="rgb(254,6,2)"/><text x="22.3948%" y="879.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.14%)</title><rect x="22.1448%" y="853" width="0.1393%" height="15" fill="rgb(208,96,46)"/><text x="22.3948%" y="863.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.14%)</title><rect x="22.1448%" y="837" width="0.1393%" height="15" fill="rgb(239,3,39)"/><text x="22.3948%" y="847.50"></text></g><g><title>dlopen (1 samples, 0.14%)</title><rect x="22.1448%" y="821" width="0.1393%" height="15" fill="rgb(233,210,1)"/><text x="22.3948%" y="831.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.14%)</title><rect x="22.1448%" y="805" width="0.1393%" height="15" fill="rgb(244,137,37)"/><text x="22.3948%" y="815.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.14%)</title><rect x="22.1448%" y="789" width="0.1393%" height="15" fill="rgb(240,136,2)"/><text x="22.3948%" y="799.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.14%)</title><rect x="22.1448%" y="773" width="0.1393%" height="15" fill="rgb(239,18,37)"/><text x="22.3948%" y="783.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.14%)</title><rect x="22.1448%" y="757" width="0.1393%" height="15" fill="rgb(218,185,22)"/><text x="22.3948%" y="767.50"></text></g><g><title>_dl_open (1 samples, 0.14%)</title><rect x="22.1448%" y="741" width="0.1393%" height="15" fill="rgb(225,218,4)"/><text x="22.3948%" y="751.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.14%)</title><rect x="22.1448%" y="725" width="0.1393%" height="15" fill="rgb(230,182,32)"/><text x="22.3948%" y="735.50"></text></g><g><title>dl_open_worker (1 samples, 0.14%)</title><rect x="22.1448%" y="709" width="0.1393%" height="15" fill="rgb(242,56,43)"/><text x="22.3948%" y="719.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.14%)</title><rect x="22.1448%" y="693" width="0.1393%" height="15" fill="rgb(233,99,24)"/><text x="22.3948%" y="703.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.14%)</title><rect x="22.1448%" y="677" width="0.1393%" height="15" fill="rgb(234,209,42)"/><text x="22.3948%" y="687.50"></text></g><g><title>hwloc::Topology::new (2 samples, 0.28%)</title><rect x="22.1448%" y="885" width="0.2786%" height="15" fill="rgb(227,7,12)"/><text x="22.3948%" y="895.50"></text></g><g><title>hwloc_topology_load (1 samples, 0.14%)</title><rect x="22.2841%" y="869" width="0.1393%" height="15" fill="rgb(245,203,43)"/><text x="22.5341%" y="879.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.14%)</title><rect x="22.2841%" y="853" width="0.1393%" height="15" fill="rgb(238,205,33)"/><text x="22.5341%" y="863.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.14%)</title><rect x="22.2841%" y="837" width="0.1393%" height="15" fill="rgb(231,56,7)"/><text x="22.5341%" y="847.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.14%)</title><rect x="22.2841%" y="821" width="0.1393%" height="15" fill="rgb(244,186,29)"/><text x="22.5341%" y="831.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.14%)</title><rect x="22.2841%" y="805" width="0.1393%" height="15" fill="rgb(234,111,31)"/><text x="22.5341%" y="815.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.14%)</title><rect x="22.2841%" y="789" width="0.1393%" height="15" fill="rgb(241,149,10)"/><text x="22.5341%" y="799.50"></text></g><g><title>__libc_read (1 samples, 0.14%)</title><rect x="22.2841%" y="773" width="0.1393%" height="15" fill="rgb(249,206,44)"/><text x="22.5341%" y="783.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="22.2841%" y="757" width="0.1393%" height="15" fill="rgb(251,153,30)"/><text x="22.5341%" y="767.50"></text></g><g><title>do_syscall_64 (1 samples, 0.14%)</title><rect x="22.2841%" y="741" width="0.1393%" height="15" fill="rgb(239,152,38)"/><text x="22.5341%" y="751.50"></text></g><g><title>syscall_trace_enter (1 samples, 0.14%)</title><rect x="22.2841%" y="725" width="0.1393%" height="15" fill="rgb(249,139,47)"/><text x="22.5341%" y="735.50"></text></g><g><title>ktime_get_coarse_real_ts64 (1 samples, 0.14%)</title><rect x="22.2841%" y="709" width="0.1393%" height="15" fill="rgb(244,64,35)"/><text x="22.5341%" y="719.50"></text></g><g><title>_int_free (1 samples, 0.14%)</title><rect x="22.4234%" y="837" width="0.1393%" height="15" fill="rgb(216,46,15)"/><text x="22.6734%" y="847.50"></text></g><g><title>__kfree_skb (1 samples, 0.14%)</title><rect x="22.5627%" y="613" width="0.1393%" height="15" fill="rgb(250,74,19)"/><text x="22.8127%" y="623.50"></text></g><g><title>skb_release_head_state (1 samples, 0.14%)</title><rect x="22.5627%" y="597" width="0.1393%" height="15" fill="rgb(249,42,33)"/><text x="22.8127%" y="607.50"></text></g><g><title>dst_release (1 samples, 0.14%)</title><rect x="22.5627%" y="581" width="0.1393%" height="15" fill="rgb(242,149,17)"/><text x="22.8127%" y="591.50"></text></g><g><title>dequeue_task_fair (3 samples, 0.42%)</title><rect x="22.8412%" y="533" width="0.4178%" height="15" fill="rgb(244,29,21)"/><text x="23.0912%" y="543.50"></text></g><g><title>dequeue_entity (2 samples, 0.28%)</title><rect x="22.9805%" y="517" width="0.2786%" height="15" fill="rgb(220,130,37)"/><text x="23.2305%" y="527.50"></text></g><g><title>update_load_avg (2 samples, 0.28%)</title><rect x="22.9805%" y="501" width="0.2786%" height="15" fill="rgb(211,67,2)"/><text x="23.2305%" y="511.50"></text></g><g><title>inet_recvmsg (6 samples, 0.84%)</title><rect x="22.5627%" y="645" width="0.8357%" height="15" fill="rgb(235,68,52)"/><text x="22.8127%" y="655.50"></text></g><g><title>tcp_recvmsg (6 samples, 0.84%)</title><rect x="22.5627%" y="629" width="0.8357%" height="15" fill="rgb(246,142,3)"/><text x="22.8127%" y="639.50"></text></g><g><title>sk_wait_data (5 samples, 0.70%)</title><rect x="22.7019%" y="613" width="0.6964%" height="15" fill="rgb(241,25,7)"/><text x="22.9519%" y="623.50"></text></g><g><title>wait_woken (5 samples, 0.70%)</title><rect x="22.7019%" y="597" width="0.6964%" height="15" fill="rgb(242,119,39)"/><text x="22.9519%" y="607.50"></text></g><g><title>schedule_timeout (5 samples, 0.70%)</title><rect x="22.7019%" y="581" width="0.6964%" height="15" fill="rgb(241,98,45)"/><text x="22.9519%" y="591.50"></text></g><g><title>schedule (5 samples, 0.70%)</title><rect x="22.7019%" y="565" width="0.6964%" height="15" fill="rgb(254,28,30)"/><text x="22.9519%" y="575.50"></text></g><g><title>__schedule (5 samples, 0.70%)</title><rect x="22.7019%" y="549" width="0.6964%" height="15" fill="rgb(241,142,54)"/><text x="22.9519%" y="559.50"></text></g><g><title>psi_task_change (1 samples, 0.14%)</title><rect x="23.2591%" y="533" width="0.1393%" height="15" fill="rgb(222,85,15)"/><text x="23.5091%" y="543.50"></text></g><g><title>psi_group_change (1 samples, 0.14%)</title><rect x="23.2591%" y="517" width="0.1393%" height="15" fill="rgb(210,85,47)"/><text x="23.5091%" y="527.50"></text></g><g><title>do_syscall_64 (7 samples, 0.97%)</title><rect x="22.5627%" y="693" width="0.9749%" height="15" fill="rgb(224,206,25)"/><text x="22.8127%" y="703.50"></text></g><g><title>__x64_sys_recvfrom (7 samples, 0.97%)</title><rect x="22.5627%" y="677" width="0.9749%" height="15" fill="rgb(243,201,19)"/><text x="22.8127%" y="687.50"></text></g><g><title>__sys_recvfrom (7 samples, 0.97%)</title><rect x="22.5627%" y="661" width="0.9749%" height="15" fill="rgb(236,59,4)"/><text x="22.8127%" y="671.50"></text></g><g><title>sockfd_lookup_light (1 samples, 0.14%)</title><rect x="23.3983%" y="645" width="0.1393%" height="15" fill="rgb(254,179,45)"/><text x="23.6483%" y="655.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (8 samples, 1.11%)</title><rect x="22.5627%" y="805" width="1.1142%" height="15" fill="rgb(226,14,10)"/><text x="22.8127%" y="815.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (8 samples, 1.11%)</title><rect x="22.5627%" y="789" width="1.1142%" height="15" fill="rgb(244,27,41)"/><text x="22.8127%" y="799.50"></text></g><g><title>std::sys_common::net::TcpStream::read (8 samples, 1.11%)</title><rect x="22.5627%" y="773" width="1.1142%" height="15" fill="rgb(235,35,32)"/><text x="22.8127%" y="783.50"></text></g><g><title>std::sys::unix::net::Socket::read (8 samples, 1.11%)</title><rect x="22.5627%" y="757" width="1.1142%" height="15" fill="rgb(218,68,31)"/><text x="22.8127%" y="767.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (8 samples, 1.11%)</title><rect x="22.5627%" y="741" width="1.1142%" height="15" fill="rgb(207,120,37)"/><text x="22.8127%" y="751.50"></text></g><g><title>__libc_recv (8 samples, 1.11%)</title><rect x="22.5627%" y="725" width="1.1142%" height="15" fill="rgb(227,98,0)"/><text x="22.8127%" y="735.50"></text></g><g><title>entry_SYSCALL_64 (8 samples, 1.11%)</title><rect x="22.5627%" y="709" width="1.1142%" height="15" fill="rgb(207,7,3)"/><text x="22.8127%" y="719.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.14%)</title><rect x="23.5376%" y="693" width="0.1393%" height="15" fill="rgb(206,98,19)"/><text x="23.7876%" y="703.50"></text></g><g><title>lobsters::main (12 samples, 1.67%)</title><rect x="22.1448%" y="901" width="1.6713%" height="15" fill="rgb(217,5,26)"/><text x="22.3948%" y="911.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (10 samples, 1.39%)</title><rect x="22.4234%" y="885" width="1.3928%" height="15" fill="rgb(235,190,38)"/><text x="22.6734%" y="895.50"></text></g><g><title>mysql::conn::Conn::_query (10 samples, 1.39%)</title><rect x="22.4234%" y="869" width="1.3928%" height="15" fill="rgb(247,86,24)"/><text x="22.6734%" y="879.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (10 samples, 1.39%)</title><rect x="22.4234%" y="853" width="1.3928%" height="15" fill="rgb(205,101,16)"/><text x="22.6734%" y="863.50"></text></g><g><title>mysql::conn::Conn::read_packet (9 samples, 1.25%)</title><rect x="22.5627%" y="837" width="1.2535%" height="15" fill="rgb(246,168,33)"/><text x="22.8127%" y="847.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 1.25%)</title><rect x="22.5627%" y="821" width="1.2535%" height="15" fill="rgb(231,114,1)"/><text x="22.8127%" y="831.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (1 samples, 0.14%)</title><rect x="23.6769%" y="805" width="0.1393%" height="15" fill="rgb(207,184,53)"/><text x="23.9269%" y="815.50"></text></g><g><title>malloc_consolidate (1 samples, 0.14%)</title><rect x="23.8162%" y="901" width="0.1393%" height="15" fill="rgb(224,95,51)"/><text x="24.0662%" y="911.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (1 samples, 0.14%)</title><rect x="23.9554%" y="837" width="0.1393%" height="15" fill="rgb(212,188,45)"/><text x="24.2054%" y="847.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (1 samples, 0.14%)</title><rect x="23.9554%" y="821" width="0.1393%" height="15" fill="rgb(223,154,38)"/><text x="24.2054%" y="831.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.14%)</title><rect x="23.9554%" y="805" width="0.1393%" height="15" fill="rgb(251,22,52)"/><text x="24.2054%" y="815.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.14%)</title><rect x="23.9554%" y="789" width="0.1393%" height="15" fill="rgb(229,209,22)"/><text x="24.2054%" y="799.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.14%)</title><rect x="23.9554%" y="773" width="0.1393%" height="15" fill="rgb(234,138,34)"/><text x="24.2054%" y="783.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="23.9554%" y="757" width="0.1393%" height="15" fill="rgb(212,95,11)"/><text x="24.2054%" y="767.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.14%)</title><rect x="23.9554%" y="741" width="0.1393%" height="15" fill="rgb(240,179,47)"/><text x="24.2054%" y="751.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.14%)</title><rect x="23.9554%" y="725" width="0.1393%" height="15" fill="rgb(240,163,11)"/><text x="24.2054%" y="735.50"></text></g><g><title>std::sys_common::net::TcpStream::read (1 samples, 0.14%)</title><rect x="23.9554%" y="709" width="0.1393%" height="15" fill="rgb(236,37,12)"/><text x="24.2054%" y="719.50"></text></g><g><title>std::sys::unix::net::Socket::read (1 samples, 0.14%)</title><rect x="23.9554%" y="693" width="0.1393%" height="15" fill="rgb(232,164,16)"/><text x="24.2054%" y="703.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (1 samples, 0.14%)</title><rect x="23.9554%" y="677" width="0.1393%" height="15" fill="rgb(244,205,15)"/><text x="24.2054%" y="687.50"></text></g><g><title>__libc_recv (1 samples, 0.14%)</title><rect x="23.9554%" y="661" width="0.1393%" height="15" fill="rgb(223,117,47)"/><text x="24.2054%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="23.9554%" y="645" width="0.1393%" height="15" fill="rgb(244,107,35)"/><text x="24.2054%" y="655.50"></text></g><g><title>do_syscall_64 (1 samples, 0.14%)</title><rect x="23.9554%" y="629" width="0.1393%" height="15" fill="rgb(205,140,8)"/><text x="24.2054%" y="639.50"></text></g><g><title>__x64_sys_recvfrom (1 samples, 0.14%)</title><rect x="23.9554%" y="613" width="0.1393%" height="15" fill="rgb(228,84,46)"/><text x="24.2054%" y="623.50"></text></g><g><title>__sys_recvfrom (1 samples, 0.14%)</title><rect x="23.9554%" y="597" width="0.1393%" height="15" fill="rgb(254,188,9)"/><text x="24.2054%" y="607.50"></text></g><g><title>inet_recvmsg (1 samples, 0.14%)</title><rect x="23.9554%" y="581" width="0.1393%" height="15" fill="rgb(206,112,54)"/><text x="24.2054%" y="591.50"></text></g><g><title>tcp_recvmsg (1 samples, 0.14%)</title><rect x="23.9554%" y="565" width="0.1393%" height="15" fill="rgb(216,84,49)"/><text x="24.2054%" y="575.50"></text></g><g><title>sk_wait_data (1 samples, 0.14%)</title><rect x="23.9554%" y="549" width="0.1393%" height="15" fill="rgb(214,194,35)"/><text x="24.2054%" y="559.50"></text></g><g><title>wait_woken (1 samples, 0.14%)</title><rect x="23.9554%" y="533" width="0.1393%" height="15" fill="rgb(249,28,3)"/><text x="24.2054%" y="543.50"></text></g><g><title>schedule_timeout (1 samples, 0.14%)</title><rect x="23.9554%" y="517" width="0.1393%" height="15" fill="rgb(222,56,52)"/><text x="24.2054%" y="527.50"></text></g><g><title>schedule (1 samples, 0.14%)</title><rect x="23.9554%" y="501" width="0.1393%" height="15" fill="rgb(245,217,50)"/><text x="24.2054%" y="511.50"></text></g><g><title>__schedule (1 samples, 0.14%)</title><rect x="23.9554%" y="485" width="0.1393%" height="15" fill="rgb(213,201,24)"/><text x="24.2054%" y="495.50"></text></g><g><title>__perf_event_task_sched_out (1 samples, 0.14%)</title><rect x="23.9554%" y="469" width="0.1393%" height="15" fill="rgb(248,116,28)"/><text x="24.2054%" y="479.50"></text></g><g><title>ctx_sched_out (1 samples, 0.14%)</title><rect x="23.9554%" y="453" width="0.1393%" height="15" fill="rgb(219,72,43)"/><text x="24.2054%" y="463.50"></text></g><g><title>intel_pmu_disable_all (1 samples, 0.14%)</title><rect x="23.9554%" y="437" width="0.1393%" height="15" fill="rgb(209,138,14)"/><text x="24.2054%" y="447.50"></text></g><g><title>native_write_msr (1 samples, 0.14%)</title><rect x="23.9554%" y="421" width="0.1393%" height="15" fill="rgb(222,18,33)"/><text x="24.2054%" y="431.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.14%)</title><rect x="24.0947%" y="741" width="0.1393%" height="15" fill="rgb(213,199,7)"/><text x="24.3447%" y="751.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.14%)</title><rect x="24.0947%" y="725" width="0.1393%" height="15" fill="rgb(250,110,10)"/><text x="24.3447%" y="735.50"></text></g><g><title>std::sys_common::net::TcpStream::read (1 samples, 0.14%)</title><rect x="24.0947%" y="709" width="0.1393%" height="15" fill="rgb(248,123,6)"/><text x="24.3447%" y="719.50"></text></g><g><title>std::sys::unix::net::Socket::read (1 samples, 0.14%)</title><rect x="24.0947%" y="693" width="0.1393%" height="15" fill="rgb(206,91,31)"/><text x="24.3447%" y="703.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (1 samples, 0.14%)</title><rect x="24.0947%" y="677" width="0.1393%" height="15" fill="rgb(211,154,13)"/><text x="24.3447%" y="687.50"></text></g><g><title>__libc_recv (1 samples, 0.14%)</title><rect x="24.0947%" y="661" width="0.1393%" height="15" fill="rgb(225,148,7)"/><text x="24.3447%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="24.0947%" y="645" width="0.1393%" height="15" fill="rgb(220,160,43)"/><text x="24.3447%" y="655.50"></text></g><g><title>do_syscall_64 (1 samples, 0.14%)</title><rect x="24.0947%" y="629" width="0.1393%" height="15" fill="rgb(213,52,39)"/><text x="24.3447%" y="639.50"></text></g><g><title>__x64_sys_recvfrom (1 samples, 0.14%)</title><rect x="24.0947%" y="613" width="0.1393%" height="15" fill="rgb(243,137,7)"/><text x="24.3447%" y="623.50"></text></g><g><title>__sys_recvfrom (1 samples, 0.14%)</title><rect x="24.0947%" y="597" width="0.1393%" height="15" fill="rgb(230,79,13)"/><text x="24.3447%" y="607.50"></text></g><g><title>inet_recvmsg (1 samples, 0.14%)</title><rect x="24.0947%" y="581" width="0.1393%" height="15" fill="rgb(247,105,23)"/><text x="24.3447%" y="591.50"></text></g><g><title>tcp_recvmsg (1 samples, 0.14%)</title><rect x="24.0947%" y="565" width="0.1393%" height="15" fill="rgb(223,179,41)"/><text x="24.3447%" y="575.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (2 samples, 0.28%)</title><rect x="24.0947%" y="789" width="0.2786%" height="15" fill="rgb(218,9,34)"/><text x="24.3447%" y="799.50"></text></g><g><title>mysql::conn::Conn::read_packet (2 samples, 0.28%)</title><rect x="24.0947%" y="773" width="0.2786%" height="15" fill="rgb(222,106,8)"/><text x="24.3447%" y="783.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.28%)</title><rect x="24.0947%" y="757" width="0.2786%" height="15" fill="rgb(211,220,0)"/><text x="24.3447%" y="767.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (1 samples, 0.14%)</title><rect x="24.2340%" y="741" width="0.1393%" height="15" fill="rgb(229,52,16)"/><text x="24.4840%" y="751.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (4 samples, 0.56%)</title><rect x="23.9554%" y="885" width="0.5571%" height="15" fill="rgb(212,155,18)"/><text x="24.2054%" y="895.50"></text></g><g><title>decor::Shim::create_schema (4 samples, 0.56%)</title><rect x="23.9554%" y="869" width="0.5571%" height="15" fill="rgb(242,21,14)"/><text x="24.2054%" y="879.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query_drop (4 samples, 0.56%)</title><rect x="23.9554%" y="853" width="0.5571%" height="15" fill="rgb(222,19,48)"/><text x="24.2054%" y="863.50"></text></g><g><title>mysql::conn::transaction::Transaction::commit (3 samples, 0.42%)</title><rect x="24.0947%" y="837" width="0.4178%" height="15" fill="rgb(232,45,27)"/><text x="24.3447%" y="847.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (3 samples, 0.42%)</title><rect x="24.0947%" y="821" width="0.4178%" height="15" fill="rgb(249,103,42)"/><text x="24.3447%" y="831.50"></text></g><g><title>mysql::conn::Conn::_query (3 samples, 0.42%)</title><rect x="24.0947%" y="805" width="0.4178%" height="15" fill="rgb(246,81,33)"/><text x="24.3447%" y="815.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.14%)</title><rect x="24.3733%" y="789" width="0.1393%" height="15" fill="rgb(252,33,42)"/><text x="24.6233%" y="799.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.14%)</title><rect x="24.3733%" y="773" width="0.1393%" height="15" fill="rgb(209,212,41)"/><text x="24.6233%" y="783.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.14%)</title><rect x="24.3733%" y="757" width="0.1393%" height="15" fill="rgb(207,154,6)"/><text x="24.6233%" y="767.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1 samples, 0.14%)</title><rect x="24.3733%" y="741" width="0.1393%" height="15" fill="rgb(223,64,47)"/><text x="24.6233%" y="751.50"></text></g><g><title>__libc_send (1 samples, 0.14%)</title><rect x="24.3733%" y="725" width="0.1393%" height="15" fill="rgb(211,161,38)"/><text x="24.6233%" y="735.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="24.3733%" y="709" width="0.1393%" height="15" fill="rgb(219,138,40)"/><text x="24.6233%" y="719.50"></text></g><g><title>do_syscall_64 (1 samples, 0.14%)</title><rect x="24.3733%" y="693" width="0.1393%" height="15" fill="rgb(241,228,46)"/><text x="24.6233%" y="703.50"></text></g><g><title>__x64_sys_sendto (1 samples, 0.14%)</title><rect x="24.3733%" y="677" width="0.1393%" height="15" fill="rgb(223,209,38)"/><text x="24.6233%" y="687.50"></text></g><g><title>__sys_sendto (1 samples, 0.14%)</title><rect x="24.3733%" y="661" width="0.1393%" height="15" fill="rgb(236,164,45)"/><text x="24.6233%" y="671.50"></text></g><g><title>sock_sendmsg (1 samples, 0.14%)</title><rect x="24.3733%" y="645" width="0.1393%" height="15" fill="rgb(231,15,5)"/><text x="24.6233%" y="655.50"></text></g><g><title>tcp_sendmsg (1 samples, 0.14%)</title><rect x="24.3733%" y="629" width="0.1393%" height="15" fill="rgb(252,35,15)"/><text x="24.6233%" y="639.50"></text></g><g><title>tcp_sendmsg_locked (1 samples, 0.14%)</title><rect x="24.3733%" y="613" width="0.1393%" height="15" fill="rgb(248,181,18)"/><text x="24.6233%" y="623.50"></text></g><g><title>__tcp_push_pending_frames (1 samples, 0.14%)</title><rect x="24.3733%" y="597" width="0.1393%" height="15" fill="rgb(233,39,42)"/><text x="24.6233%" y="607.50"></text></g><g><title>tcp_write_xmit (1 samples, 0.14%)</title><rect x="24.3733%" y="581" width="0.1393%" height="15" fill="rgb(238,110,33)"/><text x="24.6233%" y="591.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.14%)</title><rect x="24.3733%" y="565" width="0.1393%" height="15" fill="rgb(233,195,10)"/><text x="24.6233%" y="575.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.14%)</title><rect x="24.3733%" y="549" width="0.1393%" height="15" fill="rgb(254,105,3)"/><text x="24.6233%" y="559.50"></text></g><g><title>ip_output (1 samples, 0.14%)</title><rect x="24.3733%" y="533" width="0.1393%" height="15" fill="rgb(221,225,9)"/><text x="24.6233%" y="543.50"></text></g><g><title>ip_finish_output2 (1 samples, 0.14%)</title><rect x="24.3733%" y="517" width="0.1393%" height="15" fill="rgb(224,227,45)"/><text x="24.6233%" y="527.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.14%)</title><rect x="24.3733%" y="501" width="0.1393%" height="15" fill="rgb(229,198,43)"/><text x="24.6233%" y="511.50"></text></g><g><title>do_softirq (1 samples, 0.14%)</title><rect x="24.3733%" y="485" width="0.1393%" height="15" fill="rgb(206,209,35)"/><text x="24.6233%" y="495.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.14%)</title><rect x="24.3733%" y="469" width="0.1393%" height="15" fill="rgb(245,195,53)"/><text x="24.6233%" y="479.50"></text></g><g><title>__do_softirq (1 samples, 0.14%)</title><rect x="24.3733%" y="453" width="0.1393%" height="15" fill="rgb(240,92,26)"/><text x="24.6233%" y="463.50"></text></g><g><title>net_rx_action (1 samples, 0.14%)</title><rect x="24.3733%" y="437" width="0.1393%" height="15" fill="rgb(207,40,23)"/><text x="24.6233%" y="447.50"></text></g><g><title>process_backlog (1 samples, 0.14%)</title><rect x="24.3733%" y="421" width="0.1393%" height="15" fill="rgb(223,111,35)"/><text x="24.6233%" y="431.50"></text></g><g><title>__netif_receive_skb_one_core (1 samples, 0.14%)</title><rect x="24.3733%" y="405" width="0.1393%" height="15" fill="rgb(229,147,28)"/><text x="24.6233%" y="415.50"></text></g><g><title>ip_rcv (1 samples, 0.14%)</title><rect x="24.3733%" y="389" width="0.1393%" height="15" fill="rgb(211,29,28)"/><text x="24.6233%" y="399.50"></text></g><g><title>ip_local_deliver (1 samples, 0.14%)</title><rect x="24.3733%" y="373" width="0.1393%" height="15" fill="rgb(228,72,33)"/><text x="24.6233%" y="383.50"></text></g><g><title>ip_local_deliver_finish (1 samples, 0.14%)</title><rect x="24.3733%" y="357" width="0.1393%" height="15" fill="rgb(205,214,31)"/><text x="24.6233%" y="367.50"></text></g><g><title>ip_protocol_deliver_rcu (1 samples, 0.14%)</title><rect x="24.3733%" y="341" width="0.1393%" height="15" fill="rgb(224,111,15)"/><text x="24.6233%" y="351.50"></text></g><g><title>tcp_v4_rcv (1 samples, 0.14%)</title><rect x="24.3733%" y="325" width="0.1393%" height="15" fill="rgb(253,21,26)"/><text x="24.6233%" y="335.50"></text></g><g><title>tcp_v4_do_rcv (1 samples, 0.14%)</title><rect x="24.3733%" y="309" width="0.1393%" height="15" fill="rgb(245,139,43)"/><text x="24.6233%" y="319.50"></text></g><g><title>tcp_rcv_established (1 samples, 0.14%)</title><rect x="24.3733%" y="293" width="0.1393%" height="15" fill="rgb(252,170,7)"/><text x="24.6233%" y="303.50"></text></g><g><title>tcp_ack (1 samples, 0.14%)</title><rect x="24.3733%" y="277" width="0.1393%" height="15" fill="rgb(231,118,14)"/><text x="24.6233%" y="287.50"></text></g><g><title>__kfree_skb (1 samples, 0.14%)</title><rect x="24.3733%" y="261" width="0.1393%" height="15" fill="rgb(238,83,0)"/><text x="24.6233%" y="271.50"></text></g><g><title>skb_release_data (1 samples, 0.14%)</title><rect x="24.3733%" y="245" width="0.1393%" height="15" fill="rgb(221,39,39)"/><text x="24.6233%" y="255.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.28%)</title><rect x="24.5125%" y="837" width="0.2786%" height="15" fill="rgb(222,119,46)"/><text x="24.7625%" y="847.50"></text></g><g><title>_int_malloc (1 samples, 0.14%)</title><rect x="24.6518%" y="821" width="0.1393%" height="15" fill="rgb(222,165,49)"/><text x="24.9018%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.14%)</title><rect x="24.7911%" y="789" width="0.1393%" height="15" fill="rgb(219,113,52)"/><text x="25.0411%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_ptr (1 samples, 0.14%)</title><rect x="24.7911%" y="773" width="0.1393%" height="15" fill="rgb(214,7,15)"/><text x="25.0411%" y="783.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.28%)</title><rect x="24.9304%" y="645" width="0.2786%" height="15" fill="rgb(235,32,4)"/><text x="25.1804%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (6 samples, 0.84%)</title><rect x="24.5125%" y="853" width="0.8357%" height="15" fill="rgb(238,90,54)"/><text x="24.7625%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (4 samples, 0.56%)</title><rect x="24.7911%" y="837" width="0.5571%" height="15" fill="rgb(213,208,19)"/><text x="25.0411%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.56%)</title><rect x="24.7911%" y="821" width="0.5571%" height="15" fill="rgb(233,156,4)"/><text x="25.0411%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.56%)</title><rect x="24.7911%" y="805" width="0.5571%" height="15" fill="rgb(207,194,5)"/><text x="25.0411%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.42%)</title><rect x="24.9304%" y="789" width="0.4178%" height="15" fill="rgb(206,111,30)"/><text x="25.1804%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.42%)</title><rect x="24.9304%" y="773" width="0.4178%" height="15" fill="rgb(243,70,54)"/><text x="25.1804%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.42%)</title><rect x="24.9304%" y="757" width="0.4178%" height="15" fill="rgb(242,28,8)"/><text x="25.1804%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.42%)</title><rect x="24.9304%" y="741" width="0.4178%" height="15" fill="rgb(219,106,18)"/><text x="25.1804%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.42%)</title><rect x="24.9304%" y="725" width="0.4178%" height="15" fill="rgb(244,222,10)"/><text x="25.1804%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.42%)</title><rect x="24.9304%" y="709" width="0.4178%" height="15" fill="rgb(236,179,52)"/><text x="25.1804%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (3 samples, 0.42%)</title><rect x="24.9304%" y="693" width="0.4178%" height="15" fill="rgb(213,23,39)"/><text x="25.1804%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.42%)</title><rect x="24.9304%" y="677" width="0.4178%" height="15" fill="rgb(238,48,10)"/><text x="25.1804%" y="687.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.42%)</title><rect x="24.9304%" y="661" width="0.4178%" height="15" fill="rgb(251,196,23)"/><text x="25.1804%" y="671.50"></text></g><g><title>__rdl_alloc (1 samples, 0.14%)</title><rect x="25.2089%" y="645" width="0.1393%" height="15" fill="rgb(250,152,24)"/><text x="25.4589%" y="655.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.14%)</title><rect x="25.2089%" y="629" width="0.1393%" height="15" fill="rgb(209,150,17)"/><text x="25.4589%" y="639.50"></text></g><g><title>__GI___libc_free (1 samples, 0.14%)</title><rect x="25.3482%" y="837" width="0.1393%" height="15" fill="rgb(234,202,34)"/><text x="25.5982%" y="847.50"></text></g><g><title>_int_free (1 samples, 0.14%)</title><rect x="25.4875%" y="837" width="0.1393%" height="15" fill="rgb(253,148,53)"/><text x="25.7375%" y="847.50"></text></g><g><title>find_vma (1 samples, 0.14%)</title><rect x="26.0446%" y="693" width="0.1393%" height="15" fill="rgb(218,129,16)"/><text x="26.2946%" y="703.50"></text></g><g><title>__GI___mprotect (4 samples, 0.56%)</title><rect x="26.0446%" y="773" width="0.5571%" height="15" fill="rgb(216,85,19)"/><text x="26.2946%" y="783.50"></text></g><g><title>entry_SYSCALL_64 (4 samples, 0.56%)</title><rect x="26.0446%" y="757" width="0.5571%" height="15" fill="rgb(235,228,7)"/><text x="26.2946%" y="767.50"></text></g><g><title>do_syscall_64 (4 samples, 0.56%)</title><rect x="26.0446%" y="741" width="0.5571%" height="15" fill="rgb(245,175,0)"/><text x="26.2946%" y="751.50"></text></g><g><title>__x64_sys_mprotect (4 samples, 0.56%)</title><rect x="26.0446%" y="725" width="0.5571%" height="15" fill="rgb(208,168,36)"/><text x="26.2946%" y="735.50"></text></g><g><title>do_mprotect_pkey (4 samples, 0.56%)</title><rect x="26.0446%" y="709" width="0.5571%" height="15" fill="rgb(246,171,24)"/><text x="26.2946%" y="719.50"></text></g><g><title>mprotect_fixup (3 samples, 0.42%)</title><rect x="26.1838%" y="693" width="0.4178%" height="15" fill="rgb(215,142,24)"/><text x="26.4338%" y="703.50"></text></g><g><title>perf_event_mmap (3 samples, 0.42%)</title><rect x="26.1838%" y="677" width="0.4178%" height="15" fill="rgb(250,187,7)"/><text x="26.4338%" y="687.50"></text></g><g><title>perf_iterate_sb (2 samples, 0.28%)</title><rect x="26.3231%" y="661" width="0.2786%" height="15" fill="rgb(228,66,33)"/><text x="26.5731%" y="671.50"></text></g><g><title>perf_iterate_ctx (2 samples, 0.28%)</title><rect x="26.3231%" y="645" width="0.2786%" height="15" fill="rgb(234,215,21)"/><text x="26.5731%" y="655.50"></text></g><g><title>perf_event_mmap_output (2 samples, 0.28%)</title><rect x="26.3231%" y="629" width="0.2786%" height="15" fill="rgb(222,191,20)"/><text x="26.5731%" y="639.50"></text></g><g><title>__perf_event_header__init_id (1 samples, 0.14%)</title><rect x="26.4624%" y="613" width="0.1393%" height="15" fill="rgb(245,79,54)"/><text x="26.7124%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (10 samples, 1.39%)</title><rect x="25.6267%" y="837" width="1.3928%" height="15" fill="rgb(240,10,37)"/><text x="25.8767%" y="847.50"></text></g><g><title>__GI___libc_malloc (10 samples, 1.39%)</title><rect x="25.6267%" y="821" width="1.3928%" height="15" fill="rgb(214,192,32)"/><text x="25.8767%" y="831.50"></text></g><g><title>_int_malloc (10 samples, 1.39%)</title><rect x="25.6267%" y="805" width="1.3928%" height="15" fill="rgb(209,36,54)"/><text x="25.8767%" y="815.50"></text></g><g><title>sysmalloc (7 samples, 0.97%)</title><rect x="26.0446%" y="789" width="0.9749%" height="15" fill="rgb(220,10,11)"/><text x="26.2946%" y="799.50"></text></g><g><title>page_fault (3 samples, 0.42%)</title><rect x="26.6017%" y="773" width="0.4178%" height="15" fill="rgb(221,106,17)"/><text x="26.8517%" y="783.50"></text></g><g><title>do_user_addr_fault (3 samples, 0.42%)</title><rect x="26.6017%" y="757" width="0.4178%" height="15" fill="rgb(251,142,44)"/><text x="26.8517%" y="767.50"></text></g><g><title>handle_mm_fault (3 samples, 0.42%)</title><rect x="26.6017%" y="741" width="0.4178%" height="15" fill="rgb(238,13,15)"/><text x="26.8517%" y="751.50"></text></g><g><title>__handle_mm_fault (3 samples, 0.42%)</title><rect x="26.6017%" y="725" width="0.4178%" height="15" fill="rgb(208,107,27)"/><text x="26.8517%" y="735.50"></text></g><g><title>alloc_pages_vma (3 samples, 0.42%)</title><rect x="26.6017%" y="709" width="0.4178%" height="15" fill="rgb(205,136,37)"/><text x="26.8517%" y="719.50"></text></g><g><title>__alloc_pages_nodemask (3 samples, 0.42%)</title><rect x="26.6017%" y="693" width="0.4178%" height="15" fill="rgb(250,205,27)"/><text x="26.8517%" y="703.50"></text></g><g><title>get_page_from_freelist (3 samples, 0.42%)</title><rect x="26.6017%" y="677" width="0.4178%" height="15" fill="rgb(210,80,43)"/><text x="26.8517%" y="687.50"></text></g><g><title>prep_new_page (1 samples, 0.14%)</title><rect x="26.8802%" y="661" width="0.1393%" height="15" fill="rgb(247,160,36)"/><text x="27.1302%" y="671.50"></text></g><g><title>kernel_init_free_pages (1 samples, 0.14%)</title><rect x="26.8802%" y="645" width="0.1393%" height="15" fill="rgb(234,13,49)"/><text x="27.1302%" y="655.50"></text></g><g><title>clear_page_erms (1 samples, 0.14%)</title><rect x="26.8802%" y="629" width="0.1393%" height="15" fill="rgb(234,122,0)"/><text x="27.1302%" y="639.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.14%)</title><rect x="27.5766%" y="773" width="0.1393%" height="15" fill="rgb(207,146,38)"/><text x="27.8266%" y="783.50"></text></g><g><title>page_fault (1 samples, 0.14%)</title><rect x="27.5766%" y="757" width="0.1393%" height="15" fill="rgb(207,177,25)"/><text x="27.8266%" y="767.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.14%)</title><rect x="27.5766%" y="741" width="0.1393%" height="15" fill="rgb(211,178,42)"/><text x="27.8266%" y="751.50"></text></g><g><title>handle_mm_fault (1 samples, 0.14%)</title><rect x="27.5766%" y="725" width="0.1393%" height="15" fill="rgb(230,69,54)"/><text x="27.8266%" y="735.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.14%)</title><rect x="27.5766%" y="709" width="0.1393%" height="15" fill="rgb(214,135,41)"/><text x="27.8266%" y="719.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.14%)</title><rect x="27.5766%" y="693" width="0.1393%" height="15" fill="rgb(237,67,25)"/><text x="27.8266%" y="703.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.14%)</title><rect x="27.5766%" y="677" width="0.1393%" height="15" fill="rgb(222,189,50)"/><text x="27.8266%" y="687.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.14%)</title><rect x="27.5766%" y="661" width="0.1393%" height="15" fill="rgb(245,148,34)"/><text x="27.8266%" y="671.50"></text></g><g><title>prep_new_page (1 samples, 0.14%)</title><rect x="27.5766%" y="645" width="0.1393%" height="15" fill="rgb(222,29,6)"/><text x="27.8266%" y="655.50"></text></g><g><title>kernel_init_free_pages (1 samples, 0.14%)</title><rect x="27.5766%" y="629" width="0.1393%" height="15" fill="rgb(221,189,43)"/><text x="27.8266%" y="639.50"></text></g><g><title>clear_page_erms (1 samples, 0.14%)</title><rect x="27.5766%" y="613" width="0.1393%" height="15" fill="rgb(207,36,27)"/><text x="27.8266%" y="623.50"></text></g><g><title>_int_free (1 samples, 0.14%)</title><rect x="27.7159%" y="773" width="0.1393%" height="15" fill="rgb(217,90,24)"/><text x="27.9659%" y="783.50"></text></g><g><title>malloc_consolidate (1 samples, 0.14%)</title><rect x="27.7159%" y="757" width="0.1393%" height="15" fill="rgb(224,66,35)"/><text x="27.9659%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.56%)</title><rect x="27.4373%" y="821" width="0.5571%" height="15" fill="rgb(221,13,50)"/><text x="27.6873%" y="831.50"></text></g><g><title>__GI___libc_realloc (4 samples, 0.56%)</title><rect x="27.4373%" y="805" width="0.5571%" height="15" fill="rgb(236,68,49)"/><text x="27.6873%" y="815.50"></text></g><g><title>_int_realloc (3 samples, 0.42%)</title><rect x="27.5766%" y="789" width="0.4178%" height="15" fill="rgb(229,146,28)"/><text x="27.8266%" y="799.50"></text></g><g><title>_int_malloc (1 samples, 0.14%)</title><rect x="27.8552%" y="773" width="0.1393%" height="15" fill="rgb(225,31,38)"/><text x="28.1052%" y="783.50"></text></g><g><title>page_fault (1 samples, 0.14%)</title><rect x="27.9944%" y="821" width="0.1393%" height="15" fill="rgb(250,208,3)"/><text x="28.2444%" y="831.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.14%)</title><rect x="27.9944%" y="805" width="0.1393%" height="15" fill="rgb(246,54,23)"/><text x="28.2444%" y="815.50"></text></g><g><title>handle_mm_fault (1 samples, 0.14%)</title><rect x="27.9944%" y="789" width="0.1393%" height="15" fill="rgb(243,76,11)"/><text x="28.2444%" y="799.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.14%)</title><rect x="27.9944%" y="773" width="0.1393%" height="15" fill="rgb(245,21,50)"/><text x="28.2444%" y="783.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.14%)</title><rect x="27.9944%" y="757" width="0.1393%" height="15" fill="rgb(228,9,43)"/><text x="28.2444%" y="767.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.14%)</title><rect x="27.9944%" y="741" width="0.1393%" height="15" fill="rgb(208,100,47)"/><text x="28.2444%" y="751.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.14%)</title><rect x="27.9944%" y="725" width="0.1393%" height="15" fill="rgb(232,26,8)"/><text x="28.2444%" y="735.50"></text></g><g><title>prep_new_page (1 samples, 0.14%)</title><rect x="27.9944%" y="709" width="0.1393%" height="15" fill="rgb(216,166,38)"/><text x="28.2444%" y="719.50"></text></g><g><title>kernel_init_free_pages (1 samples, 0.14%)</title><rect x="27.9944%" y="693" width="0.1393%" height="15" fill="rgb(251,202,51)"/><text x="28.2444%" y="703.50"></text></g><g><title>clear_page_erms (1 samples, 0.14%)</title><rect x="27.9944%" y="677" width="0.1393%" height="15" fill="rgb(254,216,34)"/><text x="28.2444%" y="687.50"></text></g><g><title>sql_parser::tokenizer::PeekableChars::next (7 samples, 0.97%)</title><rect x="29.1086%" y="805" width="0.9749%" height="15" fill="rgb(251,32,27)"/><text x="29.3586%" y="815.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_string (1 samples, 0.14%)</title><rect x="30.0836%" y="805" width="0.1393%" height="15" fill="rgb(208,127,28)"/><text x="30.3336%" y="815.50"></text></g><g><title>sql_parser::tokenizer::PeekableChars::next (1 samples, 0.14%)</title><rect x="30.0836%" y="789" width="0.1393%" height="15" fill="rgb(224,137,22)"/><text x="30.3336%" y="799.50"></text></g><g><title>__GI___libc_free (1 samples, 0.14%)</title><rect x="30.6407%" y="789" width="0.1393%" height="15" fill="rgb(254,70,32)"/><text x="30.8907%" y="799.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="30.7799%" y="789" width="0.1393%" height="15" fill="rgb(229,75,37)"/><text x="31.0299%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.14%)</title><rect x="30.9192%" y="789" width="0.1393%" height="15" fill="rgb(252,64,23)"/><text x="31.1692%" y="799.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="30.9192%" y="773" width="0.1393%" height="15" fill="rgb(232,162,48)"/><text x="31.1692%" y="783.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (22 samples, 3.06%)</title><rect x="28.1337%" y="821" width="3.0641%" height="15" fill="rgb(246,160,12)"/><text x="28.3837%" y="831.50">sql..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_word (7 samples, 0.97%)</title><rect x="30.2228%" y="805" width="0.9749%" height="15" fill="rgb(247,166,0)"/><text x="30.4728%" y="815.50"></text></g><g><title>sql_parser::tokenizer::PeekableChars::next (1 samples, 0.14%)</title><rect x="31.0585%" y="789" width="0.1393%" height="15" fill="rgb(249,219,21)"/><text x="31.3085%" y="799.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (57 samples, 7.94%)</title><rect x="23.9554%" y="901" width="7.9387%" height="15" fill="rgb(205,209,3)"/><text x="24.2054%" y="911.50">msql_srv::M..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (53 samples, 7.38%)</title><rect x="24.5125%" y="885" width="7.3816%" height="15" fill="rgb(243,44,1)"/><text x="24.7625%" y="895.50">&lt;decor::Sh..</text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (53 samples, 7.38%)</title><rect x="24.5125%" y="869" width="7.3816%" height="15" fill="rgb(206,159,16)"/><text x="24.7625%" y="879.50">decor::sql..</text></g><g><title>sql_parser::parser::parse_statements (47 samples, 6.55%)</title><rect x="25.3482%" y="853" width="6.5460%" height="15" fill="rgb(244,77,30)"/><text x="25.5982%" y="863.50">sql_parse..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (35 samples, 4.87%)</title><rect x="27.0195%" y="837" width="4.8747%" height="15" fill="rgb(218,69,12)"/><text x="27.2695%" y="847.50">sql_pa..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_number (5 samples, 0.70%)</title><rect x="31.1978%" y="821" width="0.6964%" height="15" fill="rgb(212,87,7)"/><text x="31.4478%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.56%)</title><rect x="31.3370%" y="805" width="0.5571%" height="15" fill="rgb(245,114,25)"/><text x="31.5870%" y="815.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.56%)</title><rect x="31.3370%" y="789" width="0.5571%" height="15" fill="rgb(210,61,42)"/><text x="31.5870%" y="799.50"></text></g><g><title>_int_malloc (3 samples, 0.42%)</title><rect x="31.4763%" y="773" width="0.4178%" height="15" fill="rgb(211,52,33)"/><text x="31.7263%" y="783.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.14%)</title><rect x="31.8942%" y="901" width="0.1393%" height="15" fill="rgb(234,58,33)"/><text x="32.1442%" y="911.50"></text></g><g><title>regex::exec::ExecBuilder::build (1 samples, 0.14%)</title><rect x="32.0334%" y="901" width="0.1393%" height="15" fill="rgb(220,115,36)"/><text x="32.2834%" y="911.50"></text></g><g><title>regex::compile::Compiler::compile (1 samples, 0.14%)</title><rect x="32.0334%" y="885" width="0.1393%" height="15" fill="rgb(243,153,54)"/><text x="32.2834%" y="895.50"></text></g><g><title>regex::compile::Compiler::c (1 samples, 0.14%)</title><rect x="32.0334%" y="869" width="0.1393%" height="15" fill="rgb(251,47,18)"/><text x="32.2834%" y="879.50"></text></g><g><title>regex::compile::Compiler::c_repeat_range (1 samples, 0.14%)</title><rect x="32.0334%" y="853" width="0.1393%" height="15" fill="rgb(242,102,42)"/><text x="32.2834%" y="863.50"></text></g><g><title>regex::compile::Compiler::c_concat (1 samples, 0.14%)</title><rect x="32.0334%" y="837" width="0.1393%" height="15" fill="rgb(234,31,38)"/><text x="32.2834%" y="847.50"></text></g><g><title>regex::compile::Compiler::c_class (1 samples, 0.14%)</title><rect x="32.0334%" y="821" width="0.1393%" height="15" fill="rgb(221,117,51)"/><text x="32.2834%" y="831.50"></text></g><g><title>&lt;regex_syntax::utf8::Utf8Sequences as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="32.0334%" y="805" width="0.1393%" height="15" fill="rgb(212,20,18)"/><text x="32.2834%" y="815.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (2 samples, 0.28%)</title><rect x="32.5905%" y="805" width="0.2786%" height="15" fill="rgb(245,133,36)"/><text x="32.8405%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.28%)</title><rect x="32.5905%" y="789" width="0.2786%" height="15" fill="rgb(212,6,19)"/><text x="32.8405%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.28%)</title><rect x="32.5905%" y="773" width="0.2786%" height="15" fill="rgb(218,1,36)"/><text x="32.8405%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.28%)</title><rect x="32.5905%" y="757" width="0.2786%" height="15" fill="rgb(246,84,54)"/><text x="32.8405%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.28%)</title><rect x="32.5905%" y="741" width="0.2786%" height="15" fill="rgb(242,110,6)"/><text x="32.8405%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.28%)</title><rect x="32.5905%" y="725" width="0.2786%" height="15" fill="rgb(214,47,5)"/><text x="32.8405%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.28%)</title><rect x="32.5905%" y="709" width="0.2786%" height="15" fill="rgb(218,159,25)"/><text x="32.8405%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.28%)</title><rect x="32.5905%" y="693" width="0.2786%" height="15" fill="rgb(215,211,28)"/><text x="32.8405%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.28%)</title><rect x="32.5905%" y="677" width="0.2786%" height="15" fill="rgb(238,59,32)"/><text x="32.8405%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.28%)</title><rect x="32.5905%" y="661" width="0.2786%" height="15" fill="rgb(226,82,3)"/><text x="32.8405%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.28%)</title><rect x="32.5905%" y="645" width="0.2786%" height="15" fill="rgb(240,164,32)"/><text x="32.8405%" y="655.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.28%)</title><rect x="32.5905%" y="629" width="0.2786%" height="15" fill="rgb(232,46,7)"/><text x="32.8405%" y="639.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.28%)</title><rect x="32.5905%" y="613" width="0.2786%" height="15" fill="rgb(229,129,53)"/><text x="32.8405%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (18 samples, 2.51%)</title><rect x="33.0084%" y="789" width="2.5070%" height="15" fill="rgb(234,188,29)"/><text x="33.2584%" y="799.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (18 samples, 2.51%)</title><rect x="33.0084%" y="773" width="2.5070%" height="15" fill="rgb(246,141,4)"/><text x="33.2584%" y="783.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (18 samples, 2.51%)</title><rect x="33.0084%" y="757" width="2.5070%" height="15" fill="rgb(229,23,39)"/><text x="33.2584%" y="767.50">al..</text></g><g><title>alloc::slice::hack::to_vec (18 samples, 2.51%)</title><rect x="33.0084%" y="741" width="2.5070%" height="15" fill="rgb(206,12,3)"/><text x="33.2584%" y="751.50">al..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (18 samples, 2.51%)</title><rect x="33.0084%" y="725" width="2.5070%" height="15" fill="rgb(252,226,20)"/><text x="33.2584%" y="735.50">al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (18 samples, 2.51%)</title><rect x="33.0084%" y="709" width="2.5070%" height="15" fill="rgb(216,123,35)"/><text x="33.2584%" y="719.50">&lt;a..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (18 samples, 2.51%)</title><rect x="33.0084%" y="693" width="2.5070%" height="15" fill="rgb(212,68,40)"/><text x="33.2584%" y="703.50">al..</text></g><g><title>core::intrinsics::copy_nonoverlapping (18 samples, 2.51%)</title><rect x="33.0084%" y="677" width="2.5070%" height="15" fill="rgb(254,125,32)"/><text x="33.2584%" y="687.50">co..</text></g><g><title>__memmove_avx_unaligned_erms (18 samples, 2.51%)</title><rect x="33.0084%" y="661" width="2.5070%" height="15" fill="rgb(253,97,22)"/><text x="33.2584%" y="671.50">__..</text></g><g><title>page_fault (1 samples, 0.14%)</title><rect x="35.3760%" y="645" width="0.1393%" height="15" fill="rgb(241,101,14)"/><text x="35.6260%" y="655.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.14%)</title><rect x="35.3760%" y="629" width="0.1393%" height="15" fill="rgb(238,103,29)"/><text x="35.6260%" y="639.50"></text></g><g><title>handle_mm_fault (1 samples, 0.14%)</title><rect x="35.3760%" y="613" width="0.1393%" height="15" fill="rgb(233,195,47)"/><text x="35.6260%" y="623.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.14%)</title><rect x="35.3760%" y="597" width="0.1393%" height="15" fill="rgb(246,218,30)"/><text x="35.6260%" y="607.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (23 samples, 3.20%)</title><rect x="32.4513%" y="821" width="3.2033%" height="15" fill="rgb(219,145,47)"/><text x="32.7013%" y="831.50">sql..</text></g><g><title>sql_parser::parser::Parser::expected (20 samples, 2.79%)</title><rect x="32.8691%" y="805" width="2.7855%" height="15" fill="rgb(243,12,26)"/><text x="33.1191%" y="815.50">sq..</text></g><g><title>alloc::fmt::format (1 samples, 0.14%)</title><rect x="35.5153%" y="789" width="0.1393%" height="15" fill="rgb(214,87,16)"/><text x="35.7653%" y="799.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.14%)</title><rect x="35.5153%" y="773" width="0.1393%" height="15" fill="rgb(208,99,42)"/><text x="35.7653%" y="783.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (26 samples, 3.62%)</title><rect x="32.1727%" y="901" width="3.6212%" height="15" fill="rgb(253,99,2)"/><text x="32.4227%" y="911.50">sql_..</text></g><g><title>sql_parser::parser::Parser::parse_query_body (26 samples, 3.62%)</title><rect x="32.1727%" y="885" width="3.6212%" height="15" fill="rgb(220,168,23)"/><text x="32.4227%" y="895.50">sql_..</text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (26 samples, 3.62%)</title><rect x="32.1727%" y="869" width="3.6212%" height="15" fill="rgb(242,38,24)"/><text x="32.4227%" y="879.50">sql_..</text></g><g><title>sql_parser::parser::Parser::check_descent (26 samples, 3.62%)</title><rect x="32.1727%" y="853" width="3.6212%" height="15" fill="rgb(225,182,9)"/><text x="32.4227%" y="863.50">sql_..</text></g><g><title>sql_parser::parser::Parser::parse_prefix (26 samples, 3.62%)</title><rect x="32.1727%" y="837" width="3.6212%" height="15" fill="rgb(243,178,37)"/><text x="32.4227%" y="847.50">sql_..</text></g><g><title>sql_parser::parser::Parser::parse_keyword (1 samples, 0.14%)</title><rect x="35.6546%" y="821" width="0.1393%" height="15" fill="rgb(232,139,19)"/><text x="35.9046%" y="831.50"></text></g><g><title>__GI___mprotect (1 samples, 0.14%)</title><rect x="35.9331%" y="581" width="0.1393%" height="15" fill="rgb(225,201,24)"/><text x="36.1831%" y="591.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="35.9331%" y="565" width="0.1393%" height="15" fill="rgb(221,47,46)"/><text x="36.1831%" y="575.50"></text></g><g><title>do_syscall_64 (1 samples, 0.14%)</title><rect x="35.9331%" y="549" width="0.1393%" height="15" fill="rgb(249,23,13)"/><text x="36.1831%" y="559.50"></text></g><g><title>__x64_sys_mprotect (1 samples, 0.14%)</title><rect x="35.9331%" y="533" width="0.1393%" height="15" fill="rgb(219,9,5)"/><text x="36.1831%" y="543.50"></text></g><g><title>do_mprotect_pkey (1 samples, 0.14%)</title><rect x="35.9331%" y="517" width="0.1393%" height="15" fill="rgb(254,171,16)"/><text x="36.1831%" y="527.50"></text></g><g><title>mprotect_fixup (1 samples, 0.14%)</title><rect x="35.9331%" y="501" width="0.1393%" height="15" fill="rgb(230,171,20)"/><text x="36.1831%" y="511.50"></text></g><g><title>perf_event_mmap (1 samples, 0.14%)</title><rect x="35.9331%" y="485" width="0.1393%" height="15" fill="rgb(210,71,41)"/><text x="36.1831%" y="495.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.14%)</title><rect x="35.9331%" y="469" width="0.1393%" height="15" fill="rgb(206,173,20)"/><text x="36.1831%" y="479.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.14%)</title><rect x="35.9331%" y="453" width="0.1393%" height="15" fill="rgb(233,88,34)"/><text x="36.1831%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.42%)</title><rect x="35.7939%" y="805" width="0.4178%" height="15" fill="rgb(223,209,46)"/><text x="36.0439%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.42%)</title><rect x="35.7939%" y="789" width="0.4178%" height="15" fill="rgb(250,43,18)"/><text x="36.0439%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.42%)</title><rect x="35.7939%" y="773" width="0.4178%" height="15" fill="rgb(208,13,10)"/><text x="36.0439%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.42%)</title><rect x="35.7939%" y="757" width="0.4178%" height="15" fill="rgb(212,200,36)"/><text x="36.0439%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.42%)</title><rect x="35.7939%" y="741" width="0.4178%" height="15" fill="rgb(225,90,30)"/><text x="36.0439%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.42%)</title><rect x="35.7939%" y="725" width="0.4178%" height="15" fill="rgb(236,182,39)"/><text x="36.0439%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.42%)</title><rect x="35.7939%" y="709" width="0.4178%" height="15" fill="rgb(212,144,35)"/><text x="36.0439%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.42%)</title><rect x="35.7939%" y="693" width="0.4178%" height="15" fill="rgb(228,63,44)"/><text x="36.0439%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (3 samples, 0.42%)</title><rect x="35.7939%" y="677" width="0.4178%" height="15" fill="rgb(228,109,6)"/><text x="36.0439%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.42%)</title><rect x="35.7939%" y="661" width="0.4178%" height="15" fill="rgb(238,117,24)"/><text x="36.0439%" y="671.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.42%)</title><rect x="35.7939%" y="645" width="0.4178%" height="15" fill="rgb(242,26,26)"/><text x="36.0439%" y="655.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.42%)</title><rect x="35.7939%" y="629" width="0.4178%" height="15" fill="rgb(221,92,48)"/><text x="36.0439%" y="639.50"></text></g><g><title>_int_malloc (3 samples, 0.42%)</title><rect x="35.7939%" y="613" width="0.4178%" height="15" fill="rgb(209,209,32)"/><text x="36.0439%" y="623.50"></text></g><g><title>sysmalloc (2 samples, 0.28%)</title><rect x="35.9331%" y="597" width="0.2786%" height="15" fill="rgb(221,70,22)"/><text x="36.1831%" y="607.50"></text></g><g><title>page_fault (1 samples, 0.14%)</title><rect x="36.0724%" y="581" width="0.1393%" height="15" fill="rgb(248,145,5)"/><text x="36.3224%" y="591.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.14%)</title><rect x="36.0724%" y="565" width="0.1393%" height="15" fill="rgb(226,116,26)"/><text x="36.3224%" y="575.50"></text></g><g><title>handle_mm_fault (1 samples, 0.14%)</title><rect x="36.0724%" y="549" width="0.1393%" height="15" fill="rgb(244,5,17)"/><text x="36.3224%" y="559.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.14%)</title><rect x="36.0724%" y="533" width="0.1393%" height="15" fill="rgb(252,159,33)"/><text x="36.3224%" y="543.50"></text></g><g><title>page_add_new_anon_rmap (1 samples, 0.14%)</title><rect x="36.0724%" y="517" width="0.1393%" height="15" fill="rgb(206,71,0)"/><text x="36.3224%" y="527.50"></text></g><g><title>__mod_node_page_state (1 samples, 0.14%)</title><rect x="36.0724%" y="501" width="0.1393%" height="15" fill="rgb(233,118,54)"/><text x="36.3224%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.14%)</title><rect x="36.2117%" y="581" width="0.1393%" height="15" fill="rgb(234,83,48)"/><text x="36.4617%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.14%)</title><rect x="36.2117%" y="565" width="0.1393%" height="15" fill="rgb(228,3,54)"/><text x="36.4617%" y="575.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.14%)</title><rect x="36.2117%" y="549" width="0.1393%" height="15" fill="rgb(226,155,13)"/><text x="36.4617%" y="559.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="36.2117%" y="533" width="0.1393%" height="15" fill="rgb(241,28,37)"/><text x="36.4617%" y="543.50"></text></g><g><title>_int_malloc (1 samples, 0.14%)</title><rect x="36.2117%" y="517" width="0.1393%" height="15" fill="rgb(233,93,10)"/><text x="36.4617%" y="527.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.14%)</title><rect x="36.3510%" y="501" width="0.1393%" height="15" fill="rgb(225,113,19)"/><text x="36.6010%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (3 samples, 0.42%)</title><rect x="36.2117%" y="661" width="0.4178%" height="15" fill="rgb(241,2,18)"/><text x="36.4617%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.42%)</title><rect x="36.2117%" y="645" width="0.4178%" height="15" fill="rgb(228,207,21)"/><text x="36.4617%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (3 samples, 0.42%)</title><rect x="36.2117%" y="629" width="0.4178%" height="15" fill="rgb(213,211,35)"/><text x="36.4617%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.42%)</title><rect x="36.2117%" y="613" width="0.4178%" height="15" fill="rgb(209,83,10)"/><text x="36.4617%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.42%)</title><rect x="36.2117%" y="597" width="0.4178%" height="15" fill="rgb(209,164,1)"/><text x="36.4617%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (2 samples, 0.28%)</title><rect x="36.3510%" y="581" width="0.2786%" height="15" fill="rgb(213,184,43)"/><text x="36.6010%" y="591.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.28%)</title><rect x="36.3510%" y="565" width="0.2786%" height="15" fill="rgb(231,61,34)"/><text x="36.6010%" y="575.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.28%)</title><rect x="36.3510%" y="549" width="0.2786%" height="15" fill="rgb(235,75,3)"/><text x="36.6010%" y="559.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.28%)</title><rect x="36.3510%" y="533" width="0.2786%" height="15" fill="rgb(220,106,47)"/><text x="36.6010%" y="543.50"></text></g><g><title>_int_realloc (2 samples, 0.28%)</title><rect x="36.3510%" y="517" width="0.2786%" height="15" fill="rgb(210,196,33)"/><text x="36.6010%" y="527.50"></text></g><g><title>_int_malloc (1 samples, 0.14%)</title><rect x="36.4903%" y="501" width="0.1393%" height="15" fill="rgb(229,154,42)"/><text x="36.7403%" y="511.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (4 samples, 0.56%)</title><rect x="36.2117%" y="757" width="0.5571%" height="15" fill="rgb(228,114,26)"/><text x="36.4617%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.56%)</title><rect x="36.2117%" y="741" width="0.5571%" height="15" fill="rgb(208,144,1)"/><text x="36.4617%" y="751.50"></text></g><g><title>alloc::string::String::push_str (4 samples, 0.56%)</title><rect x="36.2117%" y="725" width="0.5571%" height="15" fill="rgb(239,112,37)"/><text x="36.4617%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (4 samples, 0.56%)</title><rect x="36.2117%" y="709" width="0.5571%" height="15" fill="rgb(210,96,50)"/><text x="36.4617%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 0.56%)</title><rect x="36.2117%" y="693" width="0.5571%" height="15" fill="rgb(222,178,2)"/><text x="36.4617%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (4 samples, 0.56%)</title><rect x="36.2117%" y="677" width="0.5571%" height="15" fill="rgb(226,74,18)"/><text x="36.4617%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.14%)</title><rect x="36.6295%" y="661" width="0.1393%" height="15" fill="rgb(225,67,54)"/><text x="36.8795%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.14%)</title><rect x="36.6295%" y="645" width="0.1393%" height="15" fill="rgb(251,92,32)"/><text x="36.8795%" y="655.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (8 samples, 1.11%)</title><rect x="35.7939%" y="901" width="1.1142%" height="15" fill="rgb(228,149,22)"/><text x="36.0439%" y="911.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (8 samples, 1.11%)</title><rect x="35.7939%" y="885" width="1.1142%" height="15" fill="rgb(243,54,13)"/><text x="36.0439%" y="895.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (8 samples, 1.11%)</title><rect x="35.7939%" y="869" width="1.1142%" height="15" fill="rgb(243,180,28)"/><text x="36.0439%" y="879.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (8 samples, 1.11%)</title><rect x="35.7939%" y="853" width="1.1142%" height="15" fill="rgb(208,167,24)"/><text x="36.0439%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (8 samples, 1.11%)</title><rect x="35.7939%" y="837" width="1.1142%" height="15" fill="rgb(245,73,45)"/><text x="36.0439%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::expected (8 samples, 1.11%)</title><rect x="35.7939%" y="821" width="1.1142%" height="15" fill="rgb(237,203,48)"/><text x="36.0439%" y="831.50"></text></g><g><title>alloc::fmt::format (5 samples, 0.70%)</title><rect x="36.2117%" y="805" width="0.6964%" height="15" fill="rgb(211,197,16)"/><text x="36.4617%" y="815.50"></text></g><g><title>core::fmt::Write::write_fmt (5 samples, 0.70%)</title><rect x="36.2117%" y="789" width="0.6964%" height="15" fill="rgb(243,99,51)"/><text x="36.4617%" y="799.50"></text></g><g><title>core::fmt::write (5 samples, 0.70%)</title><rect x="36.2117%" y="773" width="0.6964%" height="15" fill="rgb(215,123,29)"/><text x="36.4617%" y="783.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::fmt::Display&gt;::fmt (1 samples, 0.14%)</title><rect x="36.7688%" y="757" width="0.1393%" height="15" fill="rgb(239,186,37)"/><text x="37.0188%" y="767.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.14%)</title><rect x="36.7688%" y="741" width="0.1393%" height="15" fill="rgb(252,136,39)"/><text x="37.0188%" y="751.50"></text></g><g><title>core::fmt::write (1 samples, 0.14%)</title><rect x="36.7688%" y="725" width="0.1393%" height="15" fill="rgb(223,213,32)"/><text x="37.0188%" y="735.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.14%)</title><rect x="36.7688%" y="709" width="0.1393%" height="15" fill="rgb(233,115,5)"/><text x="37.0188%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.14%)</title><rect x="36.7688%" y="693" width="0.1393%" height="15" fill="rgb(207,226,44)"/><text x="37.0188%" y="703.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.14%)</title><rect x="36.7688%" y="677" width="0.1393%" height="15" fill="rgb(208,126,0)"/><text x="37.0188%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.14%)</title><rect x="36.7688%" y="661" width="0.1393%" height="15" fill="rgb(244,66,21)"/><text x="37.0188%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.14%)</title><rect x="36.7688%" y="645" width="0.1393%" height="15" fill="rgb(222,97,12)"/><text x="37.0188%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.14%)</title><rect x="36.7688%" y="629" width="0.1393%" height="15" fill="rgb(219,213,19)"/><text x="37.0188%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.14%)</title><rect x="36.7688%" y="613" width="0.1393%" height="15" fill="rgb(252,169,30)"/><text x="37.0188%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.14%)</title><rect x="36.7688%" y="597" width="0.1393%" height="15" fill="rgb(206,32,51)"/><text x="37.0188%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.14%)</title><rect x="36.7688%" y="581" width="0.1393%" height="15" fill="rgb(250,172,42)"/><text x="37.0188%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.14%)</title><rect x="36.7688%" y="565" width="0.1393%" height="15" fill="rgb(209,34,43)"/><text x="37.0188%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.14%)</title><rect x="36.7688%" y="549" width="0.1393%" height="15" fill="rgb(223,11,35)"/><text x="37.0188%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.14%)</title><rect x="36.7688%" y="533" width="0.1393%" height="15" fill="rgb(251,219,26)"/><text x="37.0188%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.14%)</title><rect x="36.7688%" y="517" width="0.1393%" height="15" fill="rgb(231,119,3)"/><text x="37.0188%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.14%)</title><rect x="36.7688%" y="501" width="0.1393%" height="15" fill="rgb(216,97,11)"/><text x="37.0188%" y="511.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="36.7688%" y="485" width="0.1393%" height="15" fill="rgb(223,59,9)"/><text x="37.0188%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.70%)</title><rect x="36.9081%" y="837" width="0.6964%" height="15" fill="rgb(233,93,31)"/><text x="37.1581%" y="847.50"></text></g><g><title>__GI___libc_realloc (5 samples, 0.70%)</title><rect x="36.9081%" y="821" width="0.6964%" height="15" fill="rgb(239,81,33)"/><text x="37.1581%" y="831.50"></text></g><g><title>_int_realloc (5 samples, 0.70%)</title><rect x="36.9081%" y="805" width="0.6964%" height="15" fill="rgb(213,120,34)"/><text x="37.1581%" y="815.50"></text></g><g><title>_int_malloc (5 samples, 0.70%)</title><rect x="36.9081%" y="789" width="0.6964%" height="15" fill="rgb(243,49,53)"/><text x="37.1581%" y="799.50"></text></g><g><title>malloc_consolidate (3 samples, 0.42%)</title><rect x="37.1866%" y="773" width="0.4178%" height="15" fill="rgb(247,216,33)"/><text x="37.4366%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.14%)</title><rect x="37.6045%" y="821" width="0.1393%" height="15" fill="rgb(226,26,14)"/><text x="37.8545%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::get_next_precedence (1 samples, 0.14%)</title><rect x="37.7437%" y="821" width="0.1393%" height="15" fill="rgb(215,49,53)"/><text x="37.9937%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (8 samples, 1.11%)</title><rect x="36.9081%" y="853" width="1.1142%" height="15" fill="rgb(245,162,40)"/><text x="37.1581%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (3 samples, 0.42%)</title><rect x="37.6045%" y="837" width="0.4178%" height="15" fill="rgb(229,68,17)"/><text x="37.8545%" y="847.50"></text></g><g><title>stacker::remaining_stack (1 samples, 0.14%)</title><rect x="37.8830%" y="821" width="0.1393%" height="15" fill="rgb(213,182,10)"/><text x="38.1330%" y="831.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (2 samples, 0.28%)</title><rect x="38.4401%" y="837" width="0.2786%" height="15" fill="rgb(245,125,30)"/><text x="38.6901%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="38.5794%" y="821" width="0.1393%" height="15" fill="rgb(232,202,2)"/><text x="38.8294%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="38.5794%" y="805" width="0.1393%" height="15" fill="rgb(237,140,51)"/><text x="38.8294%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.14%)</title><rect x="38.5794%" y="789" width="0.1393%" height="15" fill="rgb(236,157,25)"/><text x="38.8294%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.14%)</title><rect x="38.5794%" y="773" width="0.1393%" height="15" fill="rgb(219,209,0)"/><text x="38.8294%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.14%)</title><rect x="38.5794%" y="757" width="0.1393%" height="15" fill="rgb(240,116,54)"/><text x="38.8294%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.14%)</title><rect x="38.5794%" y="741" width="0.1393%" height="15" fill="rgb(216,10,36)"/><text x="38.8294%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="38.5794%" y="725" width="0.1393%" height="15" fill="rgb(222,72,44)"/><text x="38.8294%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.14%)</title><rect x="38.5794%" y="709" width="0.1393%" height="15" fill="rgb(232,159,9)"/><text x="38.8294%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.14%)</title><rect x="38.5794%" y="693" width="0.1393%" height="15" fill="rgb(210,39,32)"/><text x="38.8294%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.14%)</title><rect x="38.5794%" y="677" width="0.1393%" height="15" fill="rgb(216,194,45)"/><text x="38.8294%" y="687.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.14%)</title><rect x="38.5794%" y="661" width="0.1393%" height="15" fill="rgb(218,18,35)"/><text x="38.8294%" y="671.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="38.5794%" y="645" width="0.1393%" height="15" fill="rgb(207,83,51)"/><text x="38.8294%" y="655.50"></text></g><g><title>_int_malloc (1 samples, 0.14%)</title><rect x="38.5794%" y="629" width="0.1393%" height="15" fill="rgb(225,63,43)"/><text x="38.8294%" y="639.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (17 samples, 2.37%)</title><rect x="36.9081%" y="901" width="2.3677%" height="15" fill="rgb(207,57,36)"/><text x="37.1581%" y="911.50">sq..</text></g><g><title>sql_parser::parser::Parser::check_descent (17 samples, 2.37%)</title><rect x="36.9081%" y="885" width="2.3677%" height="15" fill="rgb(216,99,33)"/><text x="37.1581%" y="895.50">sq..</text></g><g><title>sql_parser::parser::Parser::parse_query_body (17 samples, 2.37%)</title><rect x="36.9081%" y="869" width="2.3677%" height="15" fill="rgb(225,42,16)"/><text x="37.1581%" y="879.50">sq..</text></g><g><title>sql_parser::parser::Parser::parse_keyword (9 samples, 1.25%)</title><rect x="38.0223%" y="853" width="1.2535%" height="15" fill="rgb(220,201,45)"/><text x="38.2723%" y="863.50"></text></g><g><title>__memcmp_avx2_movbe (4 samples, 0.56%)</title><rect x="38.7187%" y="837" width="0.5571%" height="15" fill="rgb(225,33,4)"/><text x="38.9687%" y="847.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="39.4150%" y="853" width="0.1393%" height="15" fill="rgb(224,33,50)"/><text x="39.6650%" y="863.50"></text></g><g><title>sql_parser::parser::parse_statements (12 samples, 1.67%)</title><rect x="39.2758%" y="901" width="1.6713%" height="15" fill="rgb(246,198,51)"/><text x="39.5258%" y="911.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (12 samples, 1.67%)</title><rect x="39.2758%" y="885" width="1.6713%" height="15" fill="rgb(205,22,4)"/><text x="39.5258%" y="895.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (12 samples, 1.67%)</title><rect x="39.2758%" y="869" width="1.6713%" height="15" fill="rgb(206,3,8)"/><text x="39.5258%" y="879.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (10 samples, 1.39%)</title><rect x="39.5543%" y="853" width="1.3928%" height="15" fill="rgb(251,23,15)"/><text x="39.8043%" y="863.50"></text></g><g><title>__memcmp_avx2_movbe (6 samples, 0.84%)</title><rect x="40.1114%" y="837" width="0.8357%" height="15" fill="rgb(252,88,28)"/><text x="40.3614%" y="847.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.14%)</title><rect x="40.9471%" y="709" width="0.1393%" height="15" fill="rgb(212,127,14)"/><text x="41.1971%" y="719.50"></text></g><g><title>_int_free (1 samples, 0.14%)</title><rect x="40.9471%" y="693" width="0.1393%" height="15" fill="rgb(247,145,37)"/><text x="41.1971%" y="703.50"></text></g><g><title>start_thread (2 samples, 0.28%)</title><rect x="40.9471%" y="901" width="0.2786%" height="15" fill="rgb(209,117,53)"/><text x="41.1971%" y="911.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (2 samples, 0.28%)</title><rect x="40.9471%" y="885" width="0.2786%" height="15" fill="rgb(212,90,42)"/><text x="41.1971%" y="895.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (2 samples, 0.28%)</title><rect x="40.9471%" y="869" width="0.2786%" height="15" fill="rgb(218,164,37)"/><text x="41.1971%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (2 samples, 0.28%)</title><rect x="40.9471%" y="853" width="0.2786%" height="15" fill="rgb(246,65,34)"/><text x="41.1971%" y="863.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (2 samples, 0.28%)</title><rect x="40.9471%" y="837" width="0.2786%" height="15" fill="rgb(231,100,33)"/><text x="41.1971%" y="847.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2 samples, 0.28%)</title><rect x="40.9471%" y="821" width="0.2786%" height="15" fill="rgb(228,126,14)"/><text x="41.1971%" y="831.50"></text></g><g><title>decor::Shim::run_on_tcp (2 samples, 0.28%)</title><rect x="40.9471%" y="805" width="0.2786%" height="15" fill="rgb(215,173,21)"/><text x="41.1971%" y="815.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (2 samples, 0.28%)</title><rect x="40.9471%" y="789" width="0.2786%" height="15" fill="rgb(210,6,40)"/><text x="41.1971%" y="799.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (2 samples, 0.28%)</title><rect x="40.9471%" y="773" width="0.2786%" height="15" fill="rgb(212,48,18)"/><text x="41.1971%" y="783.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (2 samples, 0.28%)</title><rect x="40.9471%" y="757" width="0.2786%" height="15" fill="rgb(230,214,11)"/><text x="41.1971%" y="767.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.28%)</title><rect x="40.9471%" y="741" width="0.2786%" height="15" fill="rgb(254,105,39)"/><text x="41.1971%" y="751.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (2 samples, 0.28%)</title><rect x="40.9471%" y="725" width="0.2786%" height="15" fill="rgb(245,158,5)"/><text x="41.1971%" y="735.50"></text></g><g><title>mysql_common::packets::parse_ok_packet (1 samples, 0.14%)</title><rect x="41.0864%" y="709" width="0.1393%" height="15" fill="rgb(249,208,11)"/><text x="41.3364%" y="719.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.14%)</title><rect x="41.2256%" y="901" width="0.1393%" height="15" fill="rgb(210,39,28)"/><text x="41.4756%" y="911.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf::BufGuard::new (1 samples, 0.14%)</title><rect x="41.3649%" y="901" width="0.1393%" height="15" fill="rgb(211,56,53)"/><text x="41.6149%" y="911.50"></text></g><g><title>std::rt::lang_start_internal (1 samples, 0.14%)</title><rect x="41.5042%" y="901" width="0.1393%" height="15" fill="rgb(226,201,30)"/><text x="41.7542%" y="911.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.14%)</title><rect x="41.5042%" y="885" width="0.1393%" height="15" fill="rgb(239,101,34)"/><text x="41.7542%" y="895.50"></text></g><g><title>std::panicking::try (1 samples, 0.14%)</title><rect x="41.5042%" y="869" width="0.1393%" height="15" fill="rgb(226,209,5)"/><text x="41.7542%" y="879.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.14%)</title><rect x="41.5042%" y="853" width="0.1393%" height="15" fill="rgb(250,105,47)"/><text x="41.7542%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1 samples, 0.14%)</title><rect x="41.5042%" y="837" width="0.1393%" height="15" fill="rgb(230,72,3)"/><text x="41.7542%" y="847.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (1 samples, 0.14%)</title><rect x="41.5042%" y="821" width="0.1393%" height="15" fill="rgb(232,218,39)"/><text x="41.7542%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.14%)</title><rect x="41.5042%" y="805" width="0.1393%" height="15" fill="rgb(248,166,6)"/><text x="41.7542%" y="815.50"></text></g><g><title>lobsters::main (1 samples, 0.14%)</title><rect x="41.5042%" y="789" width="0.1393%" height="15" fill="rgb(247,89,20)"/><text x="41.7542%" y="799.50"></text></g><g><title>hwloc::Topology::new (1 samples, 0.14%)</title><rect x="41.5042%" y="773" width="0.1393%" height="15" fill="rgb(248,130,54)"/><text x="41.7542%" y="783.50"></text></g><g><title>hwloc_topology_load (1 samples, 0.14%)</title><rect x="41.5042%" y="757" width="0.1393%" height="15" fill="rgb(234,196,4)"/><text x="41.7542%" y="767.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.14%)</title><rect x="41.5042%" y="741" width="0.1393%" height="15" fill="rgb(250,143,31)"/><text x="41.7542%" y="751.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.14%)</title><rect x="41.5042%" y="725" width="0.1393%" height="15" fill="rgb(211,110,34)"/><text x="41.7542%" y="735.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.14%)</title><rect x="41.5042%" y="709" width="0.1393%" height="15" fill="rgb(215,124,48)"/><text x="41.7542%" y="719.50"></text></g><g><title>__GI___openat (1 samples, 0.14%)</title><rect x="41.5042%" y="693" width="0.1393%" height="15" fill="rgb(216,46,13)"/><text x="41.7542%" y="703.50"></text></g><g><title>syscall_return_via_sysret (1 samples, 0.14%)</title><rect x="41.5042%" y="677" width="0.1393%" height="15" fill="rgb(205,184,25)"/><text x="41.7542%" y="687.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.14%)</title><rect x="41.6435%" y="901" width="0.1393%" height="15" fill="rgb(228,1,10)"/><text x="41.8935%" y="911.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (1 samples, 0.14%)</title><rect x="41.6435%" y="885" width="0.1393%" height="15" fill="rgb(213,116,27)"/><text x="41.8935%" y="895.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (1 samples, 0.14%)</title><rect x="41.6435%" y="869" width="0.1393%" height="15" fill="rgb(241,95,50)"/><text x="41.8935%" y="879.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (1 samples, 0.14%)</title><rect x="41.6435%" y="853" width="0.1393%" height="15" fill="rgb(238,48,32)"/><text x="41.8935%" y="863.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.14%)</title><rect x="41.6435%" y="837" width="0.1393%" height="15" fill="rgb(235,113,49)"/><text x="41.8935%" y="847.50"></text></g><g><title>decor::Shim::run_on_tcp (1 samples, 0.14%)</title><rect x="41.6435%" y="821" width="0.1393%" height="15" fill="rgb(205,127,43)"/><text x="41.8935%" y="831.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (1 samples, 0.14%)</title><rect x="41.6435%" y="805" width="0.1393%" height="15" fill="rgb(250,162,2)"/><text x="41.8935%" y="815.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (1 samples, 0.14%)</title><rect x="41.6435%" y="789" width="0.1393%" height="15" fill="rgb(220,13,41)"/><text x="41.8935%" y="799.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (1 samples, 0.14%)</title><rect x="41.6435%" y="773" width="0.1393%" height="15" fill="rgb(249,221,25)"/><text x="41.8935%" y="783.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.14%)</title><rect x="41.6435%" y="757" width="0.1393%" height="15" fill="rgb(215,208,19)"/><text x="41.8935%" y="767.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.14%)</title><rect x="41.6435%" y="741" width="0.1393%" height="15" fill="rgb(236,175,2)"/><text x="41.8935%" y="751.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.14%)</title><rect x="41.6435%" y="725" width="0.1393%" height="15" fill="rgb(241,52,2)"/><text x="41.8935%" y="735.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="41.6435%" y="709" width="0.1393%" height="15" fill="rgb(248,140,14)"/><text x="41.8935%" y="719.50"></text></g><g><title>mysql_common::proto::codec::transmute_buf (1 samples, 0.14%)</title><rect x="41.6435%" y="693" width="0.1393%" height="15" fill="rgb(253,22,42)"/><text x="41.8935%" y="703.50"></text></g><g><title>__kfree_skb (1 samples, 0.14%)</title><rect x="42.0613%" y="565" width="0.1393%" height="15" fill="rgb(234,61,47)"/><text x="42.3113%" y="575.50"></text></g><g><title>skb_release_head_state (1 samples, 0.14%)</title><rect x="42.0613%" y="549" width="0.1393%" height="15" fill="rgb(208,226,15)"/><text x="42.3113%" y="559.50"></text></g><g><title>dst_release (1 samples, 0.14%)</title><rect x="42.0613%" y="533" width="0.1393%" height="15" fill="rgb(217,221,4)"/><text x="42.3113%" y="543.50"></text></g><g><title>__calc_delta (1 samples, 0.14%)</title><rect x="42.4791%" y="437" width="0.1393%" height="15" fill="rgb(212,174,34)"/><text x="42.7291%" y="447.50"></text></g><g><title>update_curr (2 samples, 0.28%)</title><rect x="42.4791%" y="453" width="0.2786%" height="15" fill="rgb(253,83,4)"/><text x="42.7291%" y="463.50"></text></g><g><title>cpuacct_charge (1 samples, 0.14%)</title><rect x="42.6184%" y="437" width="0.1393%" height="15" fill="rgb(250,195,49)"/><text x="42.8684%" y="447.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.14%)</title><rect x="42.7577%" y="437" width="0.1393%" height="15" fill="rgb(241,192,25)"/><text x="43.0077%" y="447.50"></text></g><g><title>dequeue_task_fair (4 samples, 0.56%)</title><rect x="42.4791%" y="485" width="0.5571%" height="15" fill="rgb(208,124,10)"/><text x="42.7291%" y="495.50"></text></g><g><title>dequeue_entity (4 samples, 0.56%)</title><rect x="42.4791%" y="469" width="0.5571%" height="15" fill="rgb(222,33,0)"/><text x="42.7291%" y="479.50"></text></g><g><title>update_load_avg (2 samples, 0.28%)</title><rect x="42.7577%" y="453" width="0.2786%" height="15" fill="rgb(234,209,28)"/><text x="43.0077%" y="463.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.14%)</title><rect x="42.8969%" y="437" width="0.1393%" height="15" fill="rgb(224,11,23)"/><text x="43.1469%" y="447.50"></text></g><g><title>sk_wait_data (7 samples, 0.97%)</title><rect x="42.2006%" y="565" width="0.9749%" height="15" fill="rgb(232,99,1)"/><text x="42.4506%" y="575.50"></text></g><g><title>wait_woken (7 samples, 0.97%)</title><rect x="42.2006%" y="549" width="0.9749%" height="15" fill="rgb(237,95,45)"/><text x="42.4506%" y="559.50"></text></g><g><title>schedule_timeout (6 samples, 0.84%)</title><rect x="42.3398%" y="533" width="0.8357%" height="15" fill="rgb(208,109,11)"/><text x="42.5898%" y="543.50"></text></g><g><title>schedule (5 samples, 0.70%)</title><rect x="42.4791%" y="517" width="0.6964%" height="15" fill="rgb(216,190,48)"/><text x="42.7291%" y="527.50"></text></g><g><title>__schedule (5 samples, 0.70%)</title><rect x="42.4791%" y="501" width="0.6964%" height="15" fill="rgb(251,171,36)"/><text x="42.7291%" y="511.50"></text></g><g><title>finish_task_switch (1 samples, 0.14%)</title><rect x="43.0362%" y="485" width="0.1393%" height="15" fill="rgb(230,62,22)"/><text x="43.2862%" y="495.50"></text></g><g><title>_raw_spin_unlock_irq (1 samples, 0.14%)</title><rect x="43.0362%" y="469" width="0.1393%" height="15" fill="rgb(225,114,35)"/><text x="43.2862%" y="479.50"></text></g><g><title>inet_recvmsg (11 samples, 1.53%)</title><rect x="41.7827%" y="597" width="1.5320%" height="15" fill="rgb(215,118,42)"/><text x="42.0327%" y="607.50"></text></g><g><title>tcp_recvmsg (10 samples, 1.39%)</title><rect x="41.9220%" y="581" width="1.3928%" height="15" fill="rgb(243,119,21)"/><text x="42.1720%" y="591.50"></text></g><g><title>tcp_recv_timestamp (1 samples, 0.14%)</title><rect x="43.1755%" y="565" width="0.1393%" height="15" fill="rgb(252,177,53)"/><text x="43.4255%" y="575.50"></text></g><g><title>do_syscall_64 (12 samples, 1.67%)</title><rect x="41.7827%" y="645" width="1.6713%" height="15" fill="rgb(237,209,29)"/><text x="42.0327%" y="655.50"></text></g><g><title>__x64_sys_recvfrom (12 samples, 1.67%)</title><rect x="41.7827%" y="629" width="1.6713%" height="15" fill="rgb(212,65,23)"/><text x="42.0327%" y="639.50"></text></g><g><title>__sys_recvfrom (12 samples, 1.67%)</title><rect x="41.7827%" y="613" width="1.6713%" height="15" fill="rgb(230,222,46)"/><text x="42.0327%" y="623.50"></text></g><g><title>sockfd_lookup_light (1 samples, 0.14%)</title><rect x="43.3148%" y="597" width="0.1393%" height="15" fill="rgb(215,135,32)"/><text x="43.5648%" y="607.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (13 samples, 1.81%)</title><rect x="41.7827%" y="757" width="1.8106%" height="15" fill="rgb(246,101,22)"/><text x="42.0327%" y="767.50">&lt;..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (13 samples, 1.81%)</title><rect x="41.7827%" y="741" width="1.8106%" height="15" fill="rgb(206,107,13)"/><text x="42.0327%" y="751.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::read (13 samples, 1.81%)</title><rect x="41.7827%" y="725" width="1.8106%" height="15" fill="rgb(250,100,44)"/><text x="42.0327%" y="735.50">s..</text></g><g><title>std::sys::unix::net::Socket::read (13 samples, 1.81%)</title><rect x="41.7827%" y="709" width="1.8106%" height="15" fill="rgb(231,147,38)"/><text x="42.0327%" y="719.50">s..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (13 samples, 1.81%)</title><rect x="41.7827%" y="693" width="1.8106%" height="15" fill="rgb(229,8,40)"/><text x="42.0327%" y="703.50">s..</text></g><g><title>__libc_recv (13 samples, 1.81%)</title><rect x="41.7827%" y="677" width="1.8106%" height="15" fill="rgb(221,135,30)"/><text x="42.0327%" y="687.50">_..</text></g><g><title>entry_SYSCALL_64 (13 samples, 1.81%)</title><rect x="41.7827%" y="661" width="1.8106%" height="15" fill="rgb(249,193,18)"/><text x="42.0327%" y="671.50">e..</text></g><g><title>prepare_exit_to_usermode (1 samples, 0.14%)</title><rect x="43.4540%" y="645" width="0.1393%" height="15" fill="rgb(209,133,39)"/><text x="43.7040%" y="655.50"></text></g><g><title>[unknown] (273 samples, 38.02%)</title><rect x="5.7103%" y="917" width="38.0223%" height="15" fill="rgb(232,100,14)"/><text x="5.9603%" y="927.50">[unknown]</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (14 samples, 1.95%)</title><rect x="41.7827%" y="901" width="1.9499%" height="15" fill="rgb(224,185,1)"/><text x="42.0327%" y="911.50">s..</text></g><g><title>decor::Shim::run_on_tcp (14 samples, 1.95%)</title><rect x="41.7827%" y="885" width="1.9499%" height="15" fill="rgb(223,139,8)"/><text x="42.0327%" y="895.50">d..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (14 samples, 1.95%)</title><rect x="41.7827%" y="869" width="1.9499%" height="15" fill="rgb(232,213,38)"/><text x="42.0327%" y="879.50">m..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (14 samples, 1.95%)</title><rect x="41.7827%" y="853" width="1.9499%" height="15" fill="rgb(207,94,22)"/><text x="42.0327%" y="863.50">&lt;..</text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (14 samples, 1.95%)</title><rect x="41.7827%" y="837" width="1.9499%" height="15" fill="rgb(219,183,54)"/><text x="42.0327%" y="847.50">&lt;..</text></g><g><title>mysql::conn::Conn::_query (14 samples, 1.95%)</title><rect x="41.7827%" y="821" width="1.9499%" height="15" fill="rgb(216,185,54)"/><text x="42.0327%" y="831.50">m..</text></g><g><title>mysql::conn::Conn::handle_result_set (14 samples, 1.95%)</title><rect x="41.7827%" y="805" width="1.9499%" height="15" fill="rgb(254,217,39)"/><text x="42.0327%" y="815.50">m..</text></g><g><title>mysql::conn::Conn::read_packet (14 samples, 1.95%)</title><rect x="41.7827%" y="789" width="1.9499%" height="15" fill="rgb(240,178,23)"/><text x="42.0327%" y="799.50">m..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 1.95%)</title><rect x="41.7827%" y="773" width="1.9499%" height="15" fill="rgb(218,11,47)"/><text x="42.0327%" y="783.50">&lt;..</text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (1 samples, 0.14%)</title><rect x="43.5933%" y="757" width="0.1393%" height="15" fill="rgb(218,51,51)"/><text x="43.8433%" y="767.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (1 samples, 0.14%)</title><rect x="43.5933%" y="741" width="0.1393%" height="15" fill="rgb(238,126,27)"/><text x="43.8433%" y="751.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.14%)</title><rect x="43.5933%" y="725" width="0.1393%" height="15" fill="rgb(249,202,22)"/><text x="43.8433%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.14%)</title><rect x="43.5933%" y="709" width="0.1393%" height="15" fill="rgb(254,195,49)"/><text x="43.8433%" y="719.50"></text></g><g><title>__rdl_alloc (1 samples, 0.14%)</title><rect x="43.5933%" y="693" width="0.1393%" height="15" fill="rgb(208,123,14)"/><text x="43.8433%" y="703.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.14%)</title><rect x="43.5933%" y="677" width="0.1393%" height="15" fill="rgb(224,200,8)"/><text x="43.8433%" y="687.50"></text></g><g><title>__malloc_arena_thread_freeres (1 samples, 0.14%)</title><rect x="43.7326%" y="885" width="0.1393%" height="15" fill="rgb(217,61,36)"/><text x="43.9826%" y="895.50"></text></g><g><title>_int_free (1 samples, 0.14%)</title><rect x="43.7326%" y="869" width="0.1393%" height="15" fill="rgb(206,35,45)"/><text x="43.9826%" y="879.50"></text></g><g><title>__GI_madvise (1 samples, 0.14%)</title><rect x="43.7326%" y="853" width="0.1393%" height="15" fill="rgb(217,65,33)"/><text x="43.9826%" y="863.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="43.7326%" y="837" width="0.1393%" height="15" fill="rgb(222,158,48)"/><text x="43.9826%" y="847.50"></text></g><g><title>do_syscall_64 (1 samples, 0.14%)</title><rect x="43.7326%" y="821" width="0.1393%" height="15" fill="rgb(254,2,54)"/><text x="43.9826%" y="831.50"></text></g><g><title>__x64_sys_madvise (1 samples, 0.14%)</title><rect x="43.7326%" y="805" width="0.1393%" height="15" fill="rgb(250,143,38)"/><text x="43.9826%" y="815.50"></text></g><g><title>do_madvise (1 samples, 0.14%)</title><rect x="43.7326%" y="789" width="0.1393%" height="15" fill="rgb(248,25,0)"/><text x="43.9826%" y="799.50"></text></g><g><title>zap_page_range (1 samples, 0.14%)</title><rect x="43.7326%" y="773" width="0.1393%" height="15" fill="rgb(206,152,27)"/><text x="43.9826%" y="783.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.14%)</title><rect x="43.7326%" y="757" width="0.1393%" height="15" fill="rgb(240,77,30)"/><text x="43.9826%" y="767.50"></text></g><g><title>release_pages (1 samples, 0.14%)</title><rect x="43.7326%" y="741" width="0.1393%" height="15" fill="rgb(231,5,3)"/><text x="43.9826%" y="751.50"></text></g><g><title>free_unref_page_list (1 samples, 0.14%)</title><rect x="43.7326%" y="725" width="0.1393%" height="15" fill="rgb(207,226,32)"/><text x="43.9826%" y="735.50"></text></g><g><title>free_pcppages_bulk (1 samples, 0.14%)</title><rect x="43.7326%" y="709" width="0.1393%" height="15" fill="rgb(222,207,47)"/><text x="43.9826%" y="719.50"></text></g><g><title>__free_one_page (1 samples, 0.14%)</title><rect x="43.7326%" y="693" width="0.1393%" height="15" fill="rgb(229,115,45)"/><text x="43.9826%" y="703.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (1 samples, 0.14%)</title><rect x="44.0111%" y="773" width="0.1393%" height="15" fill="rgb(224,191,6)"/><text x="44.2611%" y="783.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (1 samples, 0.14%)</title><rect x="44.0111%" y="757" width="0.1393%" height="15" fill="rgb(230,227,24)"/><text x="44.2611%" y="767.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.14%)</title><rect x="44.0111%" y="741" width="0.1393%" height="15" fill="rgb(228,80,19)"/><text x="44.2611%" y="751.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.14%)</title><rect x="44.0111%" y="725" width="0.1393%" height="15" fill="rgb(247,229,0)"/><text x="44.2611%" y="735.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.14%)</title><rect x="44.1504%" y="725" width="0.1393%" height="15" fill="rgb(237,194,15)"/><text x="44.4004%" y="735.50"></text></g><g><title>__pthread_enable_asynccancel (1 samples, 0.14%)</title><rect x="44.2897%" y="645" width="0.1393%" height="15" fill="rgb(219,203,20)"/><text x="44.5397%" y="655.50"></text></g><g><title>__x86_indirect_thunk_rax (1 samples, 0.14%)</title><rect x="44.4290%" y="645" width="0.1393%" height="15" fill="rgb(234,128,8)"/><text x="44.6790%" y="655.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.14%)</title><rect x="44.8468%" y="469" width="0.1393%" height="15" fill="rgb(248,202,8)"/><text x="45.0968%" y="479.50"></text></g><g><title>__dev_queue_xmit (3 samples, 0.42%)</title><rect x="44.9861%" y="437" width="0.4178%" height="15" fill="rgb(206,104,37)"/><text x="45.2361%" y="447.50"></text></g><g><title>validate_xmit_skb (1 samples, 0.14%)</title><rect x="45.2646%" y="421" width="0.1393%" height="15" fill="rgb(223,8,27)"/><text x="45.5146%" y="431.50"></text></g><g><title>__netif_receive_skb_core (4 samples, 0.56%)</title><rect x="45.5432%" y="325" width="0.5571%" height="15" fill="rgb(216,217,28)"/><text x="45.7932%" y="335.50"></text></g><g><title>__inet_lookup_established (1 samples, 0.14%)</title><rect x="46.5181%" y="245" width="0.1393%" height="15" fill="rgb(249,199,1)"/><text x="46.7681%" y="255.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.14%)</title><rect x="46.6574%" y="133" width="0.1393%" height="15" fill="rgb(240,85,17)"/><text x="46.9074%" y="143.50"></text></g><g><title>psi_task_change (1 samples, 0.14%)</title><rect x="46.7967%" y="117" width="0.1393%" height="15" fill="rgb(206,108,45)"/><text x="47.0467%" y="127.50"></text></g><g><title>psi_group_change (1 samples, 0.14%)</title><rect x="46.7967%" y="101" width="0.1393%" height="15" fill="rgb(245,210,41)"/><text x="47.0467%" y="111.50"></text></g><g><title>record_times (1 samples, 0.14%)</title><rect x="46.7967%" y="85" width="0.1393%" height="15" fill="rgb(206,13,37)"/><text x="47.0467%" y="95.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.14%)</title><rect x="46.7967%" y="69" width="0.1393%" height="15" fill="rgb(250,61,18)"/><text x="47.0467%" y="79.50"></text></g><g><title>sched_clock (1 samples, 0.14%)</title><rect x="46.7967%" y="53" width="0.1393%" height="15" fill="rgb(235,172,48)"/><text x="47.0467%" y="63.50"></text></g><g><title>native_sched_clock (1 samples, 0.14%)</title><rect x="46.7967%" y="37" width="0.1393%" height="15" fill="rgb(249,201,17)"/><text x="47.0467%" y="47.50"></text></g><g><title>enqueue_task (2 samples, 0.28%)</title><rect x="46.7967%" y="133" width="0.2786%" height="15" fill="rgb(219,208,6)"/><text x="47.0467%" y="143.50"></text></g><g><title>uclamp_rq_inc_id (1 samples, 0.14%)</title><rect x="46.9359%" y="117" width="0.1393%" height="15" fill="rgb(248,31,23)"/><text x="47.1859%" y="127.50"></text></g><g><title>enqueue_task_fair (3 samples, 0.42%)</title><rect x="47.0752%" y="133" width="0.4178%" height="15" fill="rgb(245,15,42)"/><text x="47.3252%" y="143.50"></text></g><g><title>enqueue_entity (3 samples, 0.42%)</title><rect x="47.0752%" y="117" width="0.4178%" height="15" fill="rgb(222,217,39)"/><text x="47.3252%" y="127.50"></text></g><g><title>update_load_avg (2 samples, 0.28%)</title><rect x="47.2145%" y="101" width="0.2786%" height="15" fill="rgb(210,219,27)"/><text x="47.4645%" y="111.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.14%)</title><rect x="47.3538%" y="85" width="0.1393%" height="15" fill="rgb(252,166,36)"/><text x="47.6038%" y="95.50"></text></g><g><title>sock_def_readable (9 samples, 1.25%)</title><rect x="46.6574%" y="213" width="1.2535%" height="15" fill="rgb(245,132,34)"/><text x="46.9074%" y="223.50"></text></g><g><title>__wake_up_common_lock (9 samples, 1.25%)</title><rect x="46.6574%" y="197" width="1.2535%" height="15" fill="rgb(236,54,3)"/><text x="46.9074%" y="207.50"></text></g><g><title>__wake_up_common (9 samples, 1.25%)</title><rect x="46.6574%" y="181" width="1.2535%" height="15" fill="rgb(241,173,43)"/><text x="46.9074%" y="191.50"></text></g><g><title>pollwake (9 samples, 1.25%)</title><rect x="46.6574%" y="165" width="1.2535%" height="15" fill="rgb(215,190,9)"/><text x="46.9074%" y="175.50"></text></g><g><title>try_to_wake_up (9 samples, 1.25%)</title><rect x="46.6574%" y="149" width="1.2535%" height="15" fill="rgb(242,101,16)"/><text x="46.9074%" y="159.50"></text></g><g><title>select_task_rq_fair (3 samples, 0.42%)</title><rect x="47.4930%" y="133" width="0.4178%" height="15" fill="rgb(223,190,21)"/><text x="47.7430%" y="143.50"></text></g><g><title>available_idle_cpu (3 samples, 0.42%)</title><rect x="47.4930%" y="117" width="0.4178%" height="15" fill="rgb(215,228,25)"/><text x="47.7430%" y="127.50"></text></g><g><title>tcp_ack (1 samples, 0.14%)</title><rect x="47.9109%" y="213" width="0.1393%" height="15" fill="rgb(225,36,22)"/><text x="48.1609%" y="223.50"></text></g><g><title>tcp_ack_update_rtt (1 samples, 0.14%)</title><rect x="47.9109%" y="197" width="0.1393%" height="15" fill="rgb(251,106,46)"/><text x="48.1609%" y="207.50"></text></g><g><title>do_softirq (20 samples, 2.79%)</title><rect x="45.4039%" y="421" width="2.7855%" height="15" fill="rgb(208,90,1)"/><text x="45.6539%" y="431.50">do..</text></g><g><title>do_softirq_own_stack (20 samples, 2.79%)</title><rect x="45.4039%" y="405" width="2.7855%" height="15" fill="rgb(243,10,4)"/><text x="45.6539%" y="415.50">do..</text></g><g><title>__do_softirq (20 samples, 2.79%)</title><rect x="45.4039%" y="389" width="2.7855%" height="15" fill="rgb(212,137,27)"/><text x="45.6539%" y="399.50">__..</text></g><g><title>net_rx_action (20 samples, 2.79%)</title><rect x="45.4039%" y="373" width="2.7855%" height="15" fill="rgb(231,220,49)"/><text x="45.6539%" y="383.50">ne..</text></g><g><title>process_backlog (19 samples, 2.65%)</title><rect x="45.5432%" y="357" width="2.6462%" height="15" fill="rgb(237,96,20)"/><text x="45.7932%" y="367.50">pr..</text></g><g><title>__netif_receive_skb_one_core (19 samples, 2.65%)</title><rect x="45.5432%" y="341" width="2.6462%" height="15" fill="rgb(239,229,30)"/><text x="45.7932%" y="351.50">__..</text></g><g><title>ip_rcv (15 samples, 2.09%)</title><rect x="46.1003%" y="325" width="2.0891%" height="15" fill="rgb(219,65,33)"/><text x="46.3503%" y="335.50">i..</text></g><g><title>ip_local_deliver (15 samples, 2.09%)</title><rect x="46.1003%" y="309" width="2.0891%" height="15" fill="rgb(243,134,7)"/><text x="46.3503%" y="319.50">i..</text></g><g><title>ip_local_deliver_finish (15 samples, 2.09%)</title><rect x="46.1003%" y="293" width="2.0891%" height="15" fill="rgb(216,177,54)"/><text x="46.3503%" y="303.50">i..</text></g><g><title>ip_protocol_deliver_rcu (14 samples, 1.95%)</title><rect x="46.2396%" y="277" width="1.9499%" height="15" fill="rgb(211,160,20)"/><text x="46.4896%" y="287.50">i..</text></g><g><title>tcp_v4_rcv (14 samples, 1.95%)</title><rect x="46.2396%" y="261" width="1.9499%" height="15" fill="rgb(239,85,39)"/><text x="46.4896%" y="271.50">t..</text></g><g><title>tcp_v4_do_rcv (11 samples, 1.53%)</title><rect x="46.6574%" y="245" width="1.5320%" height="15" fill="rgb(232,125,22)"/><text x="46.9074%" y="255.50"></text></g><g><title>tcp_rcv_established (11 samples, 1.53%)</title><rect x="46.6574%" y="229" width="1.5320%" height="15" fill="rgb(244,57,34)"/><text x="46.9074%" y="239.50"></text></g><g><title>tcp_send_delayed_ack (1 samples, 0.14%)</title><rect x="48.0501%" y="213" width="0.1393%" height="15" fill="rgb(214,203,32)"/><text x="48.3001%" y="223.50"></text></g><g><title>__tcp_push_pending_frames (26 samples, 3.62%)</title><rect x="44.7075%" y="533" width="3.6212%" height="15" fill="rgb(207,58,43)"/><text x="44.9575%" y="543.50">__tc..</text></g><g><title>tcp_write_xmit (26 samples, 3.62%)</title><rect x="44.7075%" y="517" width="3.6212%" height="15" fill="rgb(215,193,15)"/><text x="44.9575%" y="527.50">tcp_..</text></g><g><title>__tcp_transmit_skb (26 samples, 3.62%)</title><rect x="44.7075%" y="501" width="3.6212%" height="15" fill="rgb(232,15,44)"/><text x="44.9575%" y="511.50">__tc..</text></g><g><title>__ip_queue_xmit (25 samples, 3.48%)</title><rect x="44.8468%" y="485" width="3.4819%" height="15" fill="rgb(212,3,48)"/><text x="45.0968%" y="495.50">__i..</text></g><g><title>ip_output (24 samples, 3.34%)</title><rect x="44.9861%" y="469" width="3.3426%" height="15" fill="rgb(218,128,7)"/><text x="45.2361%" y="479.50">ip_..</text></g><g><title>ip_finish_output2 (24 samples, 3.34%)</title><rect x="44.9861%" y="453" width="3.3426%" height="15" fill="rgb(226,216,39)"/><text x="45.2361%" y="463.50">ip_..</text></g><g><title>__local_bh_enable_ip (21 samples, 2.92%)</title><rect x="45.4039%" y="437" width="2.9248%" height="15" fill="rgb(243,47,51)"/><text x="45.6539%" y="447.50">__..</text></g><g><title>preempt_count_sub (1 samples, 0.14%)</title><rect x="48.1894%" y="421" width="0.1393%" height="15" fill="rgb(241,183,40)"/><text x="48.4394%" y="431.50"></text></g><g><title>sk_stream_alloc_skb (1 samples, 0.14%)</title><rect x="48.3287%" y="533" width="0.1393%" height="15" fill="rgb(231,217,32)"/><text x="48.5787%" y="543.50"></text></g><g><title>__alloc_skb (1 samples, 0.14%)</title><rect x="48.3287%" y="517" width="0.1393%" height="15" fill="rgb(229,61,38)"/><text x="48.5787%" y="527.50"></text></g><g><title>__kmalloc_node_track_caller (1 samples, 0.14%)</title><rect x="48.3287%" y="501" width="0.1393%" height="15" fill="rgb(225,210,5)"/><text x="48.5787%" y="511.50"></text></g><g><title>skb_do_copy_data_nocache (1 samples, 0.14%)</title><rect x="48.4680%" y="533" width="0.1393%" height="15" fill="rgb(231,79,45)"/><text x="48.7180%" y="543.50"></text></g><g><title>_copy_from_iter_full (1 samples, 0.14%)</title><rect x="48.4680%" y="517" width="0.1393%" height="15" fill="rgb(224,100,7)"/><text x="48.7180%" y="527.50"></text></g><g><title>__x64_sys_sendto (29 samples, 4.04%)</title><rect x="44.7075%" y="613" width="4.0390%" height="15" fill="rgb(241,198,18)"/><text x="44.9575%" y="623.50">__x6..</text></g><g><title>__sys_sendto (29 samples, 4.04%)</title><rect x="44.7075%" y="597" width="4.0390%" height="15" fill="rgb(252,97,53)"/><text x="44.9575%" y="607.50">__sy..</text></g><g><title>sock_sendmsg (29 samples, 4.04%)</title><rect x="44.7075%" y="581" width="4.0390%" height="15" fill="rgb(220,88,7)"/><text x="44.9575%" y="591.50">sock..</text></g><g><title>tcp_sendmsg (29 samples, 4.04%)</title><rect x="44.7075%" y="565" width="4.0390%" height="15" fill="rgb(213,176,14)"/><text x="44.9575%" y="575.50">tcp_..</text></g><g><title>tcp_sendmsg_locked (29 samples, 4.04%)</title><rect x="44.7075%" y="549" width="4.0390%" height="15" fill="rgb(246,73,7)"/><text x="44.9575%" y="559.50">tcp_..</text></g><g><title>tcp_stream_memory_free (1 samples, 0.14%)</title><rect x="48.6072%" y="533" width="0.1393%" height="15" fill="rgb(245,64,36)"/><text x="48.8572%" y="543.50"></text></g><g><title>apic_timer_interrupt (1 samples, 0.14%)</title><rect x="48.7465%" y="613" width="0.1393%" height="15" fill="rgb(245,80,10)"/><text x="48.9965%" y="623.50"></text></g><g><title>smp_apic_timer_interrupt (1 samples, 0.14%)</title><rect x="48.7465%" y="597" width="0.1393%" height="15" fill="rgb(232,107,50)"/><text x="48.9965%" y="607.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.14%)</title><rect x="48.7465%" y="581" width="0.1393%" height="15" fill="rgb(253,3,0)"/><text x="48.9965%" y="591.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.14%)</title><rect x="48.7465%" y="565" width="0.1393%" height="15" fill="rgb(212,99,53)"/><text x="48.9965%" y="575.50"></text></g><g><title>tick_sched_timer (1 samples, 0.14%)</title><rect x="48.7465%" y="549" width="0.1393%" height="15" fill="rgb(249,111,54)"/><text x="48.9965%" y="559.50"></text></g><g><title>tick_sched_handle (1 samples, 0.14%)</title><rect x="48.7465%" y="533" width="0.1393%" height="15" fill="rgb(249,55,30)"/><text x="48.9965%" y="543.50"></text></g><g><title>update_process_times (1 samples, 0.14%)</title><rect x="48.7465%" y="517" width="0.1393%" height="15" fill="rgb(237,47,42)"/><text x="48.9965%" y="527.50"></text></g><g><title>scheduler_tick (1 samples, 0.14%)</title><rect x="48.7465%" y="501" width="0.1393%" height="15" fill="rgb(211,20,18)"/><text x="48.9965%" y="511.50"></text></g><g><title>perf_event_task_tick (1 samples, 0.14%)</title><rect x="48.7465%" y="485" width="0.1393%" height="15" fill="rgb(231,203,46)"/><text x="48.9965%" y="495.50"></text></g><g><title>do_syscall_64 (33 samples, 4.60%)</title><rect x="44.5682%" y="629" width="4.5961%" height="15" fill="rgb(237,142,3)"/><text x="44.8182%" y="639.50">do_sy..</text></g><g><title>syscall_trace_enter (2 samples, 0.28%)</title><rect x="48.8858%" y="613" width="0.2786%" height="15" fill="rgb(241,107,1)"/><text x="49.1358%" y="623.50"></text></g><g><title>__audit_syscall_entry (2 samples, 0.28%)</title><rect x="48.8858%" y="597" width="0.2786%" height="15" fill="rgb(229,83,13)"/><text x="49.1358%" y="607.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (38 samples, 5.29%)</title><rect x="44.1504%" y="757" width="5.2925%" height="15" fill="rgb(241,91,40)"/><text x="44.4004%" y="767.50">&lt;mysql..</text></g><g><title>mysql::conn::Conn::_query (38 samples, 5.29%)</title><rect x="44.1504%" y="741" width="5.2925%" height="15" fill="rgb(225,3,45)"/><text x="44.4004%" y="751.50">mysql:..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (37 samples, 5.15%)</title><rect x="44.2897%" y="725" width="5.1532%" height="15" fill="rgb(244,223,14)"/><text x="44.5397%" y="735.50">mysql_..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (37 samples, 5.15%)</title><rect x="44.2897%" y="709" width="5.1532%" height="15" fill="rgb(224,124,37)"/><text x="44.5397%" y="719.50">std::i..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (37 samples, 5.15%)</title><rect x="44.2897%" y="693" width="5.1532%" height="15" fill="rgb(251,171,30)"/><text x="44.5397%" y="703.50">&lt;std::..</text></g><g><title>std::sys_common::net::TcpStream::write (37 samples, 5.15%)</title><rect x="44.2897%" y="677" width="5.1532%" height="15" fill="rgb(236,46,54)"/><text x="44.5397%" y="687.50">std::s..</text></g><g><title>__libc_send (37 samples, 5.15%)</title><rect x="44.2897%" y="661" width="5.1532%" height="15" fill="rgb(245,213,5)"/><text x="44.5397%" y="671.50">__libc..</text></g><g><title>entry_SYSCALL_64 (35 samples, 4.87%)</title><rect x="44.5682%" y="645" width="4.8747%" height="15" fill="rgb(230,144,27)"/><text x="44.8182%" y="655.50">entry_..</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.28%)</title><rect x="49.1643%" y="629" width="0.2786%" height="15" fill="rgb(220,86,6)"/><text x="49.4143%" y="639.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.14%)</title><rect x="49.4429%" y="725" width="0.1393%" height="15" fill="rgb(240,20,13)"/><text x="49.6929%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.14%)</title><rect x="49.4429%" y="709" width="0.1393%" height="15" fill="rgb(217,89,34)"/><text x="49.6929%" y="719.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="49.5822%" y="645" width="0.1393%" height="15" fill="rgb(229,13,5)"/><text x="49.8322%" y="655.50"></text></g><g><title>_int_malloc (1 samples, 0.14%)</title><rect x="49.5822%" y="629" width="0.1393%" height="15" fill="rgb(244,67,35)"/><text x="49.8322%" y="639.50"></text></g><g><title>_int_free (3 samples, 0.42%)</title><rect x="49.7214%" y="645" width="0.4178%" height="15" fill="rgb(221,40,2)"/><text x="49.9714%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (5 samples, 0.70%)</title><rect x="49.5822%" y="677" width="0.6964%" height="15" fill="rgb(237,157,21)"/><text x="49.8322%" y="687.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (5 samples, 0.70%)</title><rect x="49.5822%" y="661" width="0.6964%" height="15" fill="rgb(222,94,11)"/><text x="49.8322%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.14%)</title><rect x="50.1393%" y="645" width="0.1393%" height="15" fill="rgb(249,113,6)"/><text x="50.3893%" y="655.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.14%)</title><rect x="50.1393%" y="629" width="0.1393%" height="15" fill="rgb(238,137,36)"/><text x="50.3893%" y="639.50"></text></g><g><title>_int_realloc (1 samples, 0.14%)</title><rect x="50.1393%" y="613" width="0.1393%" height="15" fill="rgb(210,102,26)"/><text x="50.3893%" y="623.50"></text></g><g><title>_int_malloc (1 samples, 0.14%)</title><rect x="50.1393%" y="597" width="0.1393%" height="15" fill="rgb(218,30,30)"/><text x="50.3893%" y="607.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.14%)</title><rect x="50.4178%" y="661" width="0.1393%" height="15" fill="rgb(214,67,26)"/><text x="50.6678%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (8 samples, 1.11%)</title><rect x="49.5822%" y="693" width="1.1142%" height="15" fill="rgb(251,9,53)"/><text x="49.8322%" y="703.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (3 samples, 0.42%)</title><rect x="50.2786%" y="677" width="0.4178%" height="15" fill="rgb(228,204,25)"/><text x="50.5286%" y="687.50"></text></g><g><title>__rdl_realloc (1 samples, 0.14%)</title><rect x="50.5571%" y="661" width="0.1393%" height="15" fill="rgb(207,153,8)"/><text x="50.8071%" y="671.50"></text></g><g><title>_int_free (1 samples, 0.14%)</title><rect x="50.8357%" y="677" width="0.1393%" height="15" fill="rgb(242,9,16)"/><text x="51.0857%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (13 samples, 1.81%)</title><rect x="49.5822%" y="725" width="1.8106%" height="15" fill="rgb(217,211,10)"/><text x="49.8322%" y="735.50">&lt;..</text></g><g><title>&lt;sql_parser::ast::defs::query::Values as sql_parser::ast::display::AstDisplay&gt;::fmt (13 samples, 1.81%)</title><rect x="49.5822%" y="709" width="1.8106%" height="15" fill="rgb(219,228,52)"/><text x="49.8322%" y="719.50">&lt;..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (5 samples, 0.70%)</title><rect x="50.6964%" y="693" width="0.6964%" height="15" fill="rgb(231,92,29)"/><text x="50.9464%" y="703.50"></text></g><g><title>core::fmt::write (3 samples, 0.42%)</title><rect x="50.9749%" y="677" width="0.4178%" height="15" fill="rgb(232,8,23)"/><text x="51.2249%" y="687.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.14%)</title><rect x="51.2535%" y="661" width="0.1393%" height="15" fill="rgb(216,211,34)"/><text x="51.5035%" y="671.50"></text></g><g><title>_int_free (2 samples, 0.28%)</title><rect x="51.5320%" y="677" width="0.2786%" height="15" fill="rgb(236,151,0)"/><text x="51.7820%" y="687.50"></text></g><g><title>apic_timer_interrupt (1 samples, 0.14%)</title><rect x="51.6713%" y="661" width="0.1393%" height="15" fill="rgb(209,168,3)"/><text x="51.9213%" y="671.50"></text></g><g><title>smp_apic_timer_interrupt (1 samples, 0.14%)</title><rect x="51.6713%" y="645" width="0.1393%" height="15" fill="rgb(208,129,28)"/><text x="51.9213%" y="655.50"></text></g><g><title>irq_exit (1 samples, 0.14%)</title><rect x="51.6713%" y="629" width="0.1393%" height="15" fill="rgb(229,78,22)"/><text x="51.9213%" y="639.50"></text></g><g><title>__do_softirq (1 samples, 0.14%)</title><rect x="51.6713%" y="613" width="0.1393%" height="15" fill="rgb(228,187,13)"/><text x="51.9213%" y="623.50"></text></g><g><title>irqtime_account_irq (1 samples, 0.14%)</title><rect x="51.6713%" y="597" width="0.1393%" height="15" fill="rgb(240,119,24)"/><text x="51.9213%" y="607.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.14%)</title><rect x="51.6713%" y="581" width="0.1393%" height="15" fill="rgb(209,194,42)"/><text x="51.9213%" y="591.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.14%)</title><rect x="51.8106%" y="661" width="0.1393%" height="15" fill="rgb(247,200,46)"/><text x="52.0606%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.14%)</title><rect x="51.8106%" y="645" width="0.1393%" height="15" fill="rgb(218,76,16)"/><text x="52.0606%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.14%)</title><rect x="51.8106%" y="629" width="0.1393%" height="15" fill="rgb(225,21,48)"/><text x="52.0606%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="51.8106%" y="613" width="0.1393%" height="15" fill="rgb(239,223,50)"/><text x="52.0606%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.14%)</title><rect x="51.8106%" y="597" width="0.1393%" height="15" fill="rgb(244,45,21)"/><text x="52.0606%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.14%)</title><rect x="51.8106%" y="581" width="0.1393%" height="15" fill="rgb(232,33,43)"/><text x="52.0606%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.14%)</title><rect x="51.8106%" y="565" width="0.1393%" height="15" fill="rgb(209,8,3)"/><text x="52.0606%" y="575.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.14%)</title><rect x="51.8106%" y="549" width="0.1393%" height="15" fill="rgb(214,25,53)"/><text x="52.0606%" y="559.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="51.8106%" y="533" width="0.1393%" height="15" fill="rgb(254,186,54)"/><text x="52.0606%" y="543.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (2 samples, 0.28%)</title><rect x="51.9499%" y="613" width="0.2786%" height="15" fill="rgb(208,174,49)"/><text x="52.1999%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (7 samples, 0.97%)</title><rect x="51.3928%" y="709" width="0.9749%" height="15" fill="rgb(233,191,51)"/><text x="51.6428%" y="719.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (7 samples, 0.97%)</title><rect x="51.3928%" y="693" width="0.9749%" height="15" fill="rgb(222,134,10)"/><text x="51.6428%" y="703.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (4 samples, 0.56%)</title><rect x="51.8106%" y="677" width="0.5571%" height="15" fill="rgb(230,226,20)"/><text x="52.0606%" y="687.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (3 samples, 0.42%)</title><rect x="51.9499%" y="661" width="0.4178%" height="15" fill="rgb(251,111,25)"/><text x="52.1999%" y="671.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (3 samples, 0.42%)</title><rect x="51.9499%" y="645" width="0.4178%" height="15" fill="rgb(224,40,46)"/><text x="52.1999%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (3 samples, 0.42%)</title><rect x="51.9499%" y="629" width="0.4178%" height="15" fill="rgb(236,108,47)"/><text x="52.1999%" y="639.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table::{{closure}} (1 samples, 0.14%)</title><rect x="52.2284%" y="613" width="0.1393%" height="15" fill="rgb(234,93,0)"/><text x="52.4784%" y="623.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for char&gt;::cmp (1 samples, 0.14%)</title><rect x="52.2284%" y="597" width="0.1393%" height="15" fill="rgb(224,213,32)"/><text x="52.4784%" y="607.50"></text></g><g><title>__GI___libc_free (1 samples, 0.14%)</title><rect x="52.3677%" y="693" width="0.1393%" height="15" fill="rgb(251,11,48)"/><text x="52.6177%" y="703.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.14%)</title><rect x="52.5070%" y="693" width="0.1393%" height="15" fill="rgb(236,173,5)"/><text x="52.7570%" y="703.50"></text></g><g><title>_int_realloc (1 samples, 0.14%)</title><rect x="52.5070%" y="677" width="0.1393%" height="15" fill="rgb(230,95,12)"/><text x="52.7570%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.14%)</title><rect x="52.6462%" y="693" width="0.1393%" height="15" fill="rgb(232,209,1)"/><text x="52.8962%" y="703.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.14%)</title><rect x="53.0641%" y="677" width="0.1393%" height="15" fill="rgb(232,6,1)"/><text x="53.3141%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.14%)</title><rect x="53.0641%" y="661" width="0.1393%" height="15" fill="rgb(210,224,50)"/><text x="53.3141%" y="671.50"></text></g><g><title>core::fmt::write (28 samples, 3.90%)</title><rect x="49.4429%" y="757" width="3.8997%" height="15" fill="rgb(228,127,35)"/><text x="49.6929%" y="767.50">core..</text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (28 samples, 3.90%)</title><rect x="49.4429%" y="741" width="3.8997%" height="15" fill="rgb(245,102,45)"/><text x="49.6929%" y="751.50">&lt;sql..</text></g><g><title>&lt;sql_parser::ast::defs::statement::InsertStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (14 samples, 1.95%)</title><rect x="51.3928%" y="725" width="1.9499%" height="15" fill="rgb(214,1,49)"/><text x="51.6428%" y="735.50">&lt;..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (7 samples, 0.97%)</title><rect x="52.3677%" y="709" width="0.9749%" height="15" fill="rgb(226,163,40)"/><text x="52.6177%" y="719.50"></text></g><g><title>core::fmt::write (4 samples, 0.56%)</title><rect x="52.7855%" y="693" width="0.5571%" height="15" fill="rgb(239,212,28)"/><text x="53.0355%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (1 samples, 0.14%)</title><rect x="53.2033%" y="677" width="0.1393%" height="15" fill="rgb(220,20,13)"/><text x="53.4533%" y="687.50"></text></g><g><title>core::iter::adapters::zip::Zip&lt;A,B&gt;::new (1 samples, 0.14%)</title><rect x="53.2033%" y="661" width="0.1393%" height="15" fill="rgb(210,164,35)"/><text x="53.4533%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (1 samples, 0.14%)</title><rect x="53.2033%" y="645" width="0.1393%" height="15" fill="rgb(248,109,41)"/><text x="53.4533%" y="655.50"></text></g><g><title>core::cmp::min (1 samples, 0.14%)</title><rect x="53.2033%" y="629" width="0.1393%" height="15" fill="rgb(238,23,50)"/><text x="53.4533%" y="639.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.14%)</title><rect x="53.2033%" y="613" width="0.1393%" height="15" fill="rgb(211,48,49)"/><text x="53.4533%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.14%)</title><rect x="53.2033%" y="597" width="0.1393%" height="15" fill="rgb(223,36,21)"/><text x="53.4533%" y="607.50"></text></g><g><title>_int_free (1 samples, 0.14%)</title><rect x="53.6212%" y="741" width="0.1393%" height="15" fill="rgb(207,123,46)"/><text x="53.8712%" y="751.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.56%)</title><rect x="53.3426%" y="757" width="0.5571%" height="15" fill="rgb(240,218,32)"/><text x="53.5926%" y="767.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.14%)</title><rect x="53.7604%" y="741" width="0.1393%" height="15" fill="rgb(252,5,43)"/><text x="54.0104%" y="751.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.14%)</title><rect x="53.7604%" y="725" width="0.1393%" height="15" fill="rgb(252,84,19)"/><text x="54.0104%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="53.7604%" y="709" width="0.1393%" height="15" fill="rgb(243,152,39)"/><text x="54.0104%" y="719.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.14%)</title><rect x="53.7604%" y="693" width="0.1393%" height="15" fill="rgb(234,160,15)"/><text x="54.0104%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.14%)</title><rect x="54.0390%" y="741" width="0.1393%" height="15" fill="rgb(237,34,20)"/><text x="54.2890%" y="751.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (73 samples, 10.17%)</title><rect x="44.1504%" y="773" width="10.1671%" height="15" fill="rgb(229,97,13)"/><text x="44.4004%" y="783.50">&lt;decor::Shim as..</text></g><g><title>decor::helpers::answer_rows (3 samples, 0.42%)</title><rect x="53.8997%" y="757" width="0.4178%" height="15" fill="rgb(234,71,50)"/><text x="54.1497%" y="767.50"></text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::finish (1 samples, 0.14%)</title><rect x="54.1783%" y="741" width="0.1393%" height="15" fill="rgb(253,155,4)"/><text x="54.4283%" y="751.50"></text></g><g><title>_int_free (1 samples, 0.14%)</title><rect x="54.3175%" y="661" width="0.1393%" height="15" fill="rgb(222,185,37)"/><text x="54.5675%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.28%)</title><rect x="54.3175%" y="741" width="0.2786%" height="15" fill="rgb(251,177,13)"/><text x="54.5675%" y="751.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.28%)</title><rect x="54.3175%" y="725" width="0.2786%" height="15" fill="rgb(250,179,40)"/><text x="54.5675%" y="735.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.28%)</title><rect x="54.3175%" y="709" width="0.2786%" height="15" fill="rgb(242,44,2)"/><text x="54.5675%" y="719.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.28%)</title><rect x="54.3175%" y="693" width="0.2786%" height="15" fill="rgb(216,177,13)"/><text x="54.5675%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.28%)</title><rect x="54.3175%" y="677" width="0.2786%" height="15" fill="rgb(216,106,43)"/><text x="54.5675%" y="687.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.14%)</title><rect x="54.4568%" y="661" width="0.1393%" height="15" fill="rgb(216,183,2)"/><text x="54.7068%" y="671.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.56%)</title><rect x="54.3175%" y="773" width="0.5571%" height="15" fill="rgb(249,75,3)"/><text x="54.5675%" y="783.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.56%)</title><rect x="54.3175%" y="757" width="0.5571%" height="15" fill="rgb(219,67,39)"/><text x="54.5675%" y="767.50"></text></g><g><title>_int_free (2 samples, 0.28%)</title><rect x="54.5961%" y="741" width="0.2786%" height="15" fill="rgb(253,228,2)"/><text x="54.8461%" y="751.50"></text></g><g><title>malloc_consolidate (2 samples, 0.28%)</title><rect x="54.5961%" y="725" width="0.2786%" height="15" fill="rgb(235,138,27)"/><text x="54.8461%" y="735.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.14%)</title><rect x="54.8747%" y="773" width="0.1393%" height="15" fill="rgb(236,97,51)"/><text x="55.1247%" y="783.50"></text></g><g><title>core::str::validations::run_utf8_validation (1 samples, 0.14%)</title><rect x="54.8747%" y="757" width="0.1393%" height="15" fill="rgb(240,80,30)"/><text x="55.1247%" y="767.50"></text></g><g><title>msql_srv::commands::parse (2 samples, 0.28%)</title><rect x="55.0139%" y="773" width="0.2786%" height="15" fill="rgb(230,178,19)"/><text x="55.2639%" y="783.50"></text></g><g><title>&lt;(A,B,C,D,E,F,G,H,I) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.14%)</title><rect x="55.1532%" y="757" width="0.1393%" height="15" fill="rgb(210,190,27)"/><text x="55.4032%" y="767.50"></text></g><g><title>__kfree_skb (1 samples, 0.14%)</title><rect x="55.9889%" y="565" width="0.1393%" height="15" fill="rgb(222,107,31)"/><text x="56.2389%" y="575.50"></text></g><g><title>skb_release_head_state (1 samples, 0.14%)</title><rect x="55.9889%" y="549" width="0.1393%" height="15" fill="rgb(216,127,34)"/><text x="56.2389%" y="559.50"></text></g><g><title>dst_release (1 samples, 0.14%)</title><rect x="55.9889%" y="533" width="0.1393%" height="15" fill="rgb(234,116,52)"/><text x="56.2389%" y="543.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.14%)</title><rect x="56.1281%" y="549" width="0.1393%" height="15" fill="rgb(222,124,15)"/><text x="56.3781%" y="559.50"></text></g><g><title>preempt_count_add (1 samples, 0.14%)</title><rect x="56.1281%" y="533" width="0.1393%" height="15" fill="rgb(231,179,28)"/><text x="56.3781%" y="543.50"></text></g><g><title>__perf_event_task_sched_out (1 samples, 0.14%)</title><rect x="56.6852%" y="485" width="0.1393%" height="15" fill="rgb(226,93,45)"/><text x="56.9352%" y="495.50"></text></g><g><title>ctx_sched_out (1 samples, 0.14%)</title><rect x="56.6852%" y="469" width="0.1393%" height="15" fill="rgb(215,8,51)"/><text x="56.9352%" y="479.50"></text></g><g><title>x86_pmu_disable (1 samples, 0.14%)</title><rect x="56.6852%" y="453" width="0.1393%" height="15" fill="rgb(223,106,5)"/><text x="56.9352%" y="463.50"></text></g><g><title>update_curr (1 samples, 0.14%)</title><rect x="56.8245%" y="453" width="0.1393%" height="15" fill="rgb(250,191,5)"/><text x="57.0745%" y="463.50"></text></g><g><title>__cgroup_account_cputime (1 samples, 0.14%)</title><rect x="56.8245%" y="437" width="0.1393%" height="15" fill="rgb(242,132,44)"/><text x="57.0745%" y="447.50"></text></g><g><title>dequeue_task_fair (2 samples, 0.28%)</title><rect x="56.8245%" y="485" width="0.2786%" height="15" fill="rgb(251,152,29)"/><text x="57.0745%" y="495.50"></text></g><g><title>dequeue_entity (2 samples, 0.28%)</title><rect x="56.8245%" y="469" width="0.2786%" height="15" fill="rgb(218,179,5)"/><text x="57.0745%" y="479.50"></text></g><g><title>update_load_avg (1 samples, 0.14%)</title><rect x="56.9638%" y="453" width="0.1393%" height="15" fill="rgb(227,67,19)"/><text x="57.2138%" y="463.50"></text></g><g><title>sk_wait_data (8 samples, 1.11%)</title><rect x="56.1281%" y="565" width="1.1142%" height="15" fill="rgb(233,119,31)"/><text x="56.3781%" y="575.50"></text></g><g><title>wait_woken (7 samples, 0.97%)</title><rect x="56.2674%" y="549" width="0.9749%" height="15" fill="rgb(241,120,22)"/><text x="56.5174%" y="559.50"></text></g><g><title>schedule_timeout (6 samples, 0.84%)</title><rect x="56.4067%" y="533" width="0.8357%" height="15" fill="rgb(224,102,30)"/><text x="56.6567%" y="543.50"></text></g><g><title>schedule (6 samples, 0.84%)</title><rect x="56.4067%" y="517" width="0.8357%" height="15" fill="rgb(210,164,37)"/><text x="56.6567%" y="527.50"></text></g><g><title>__schedule (6 samples, 0.84%)</title><rect x="56.4067%" y="501" width="0.8357%" height="15" fill="rgb(226,191,16)"/><text x="56.6567%" y="511.50"></text></g><g><title>finish_task_switch (1 samples, 0.14%)</title><rect x="57.1031%" y="485" width="0.1393%" height="15" fill="rgb(214,40,45)"/><text x="57.3531%" y="495.50"></text></g><g><title>_raw_spin_unlock_irq (1 samples, 0.14%)</title><rect x="57.1031%" y="469" width="0.1393%" height="15" fill="rgb(244,29,26)"/><text x="57.3531%" y="479.50"></text></g><g><title>skb_copy_datagram_iter (2 samples, 0.28%)</title><rect x="57.2423%" y="565" width="0.2786%" height="15" fill="rgb(216,16,5)"/><text x="57.4923%" y="575.50"></text></g><g><title>__skb_datagram_iter (2 samples, 0.28%)</title><rect x="57.2423%" y="549" width="0.2786%" height="15" fill="rgb(249,76,35)"/><text x="57.4923%" y="559.50"></text></g><g><title>do_syscall_64 (17 samples, 2.37%)</title><rect x="55.4318%" y="645" width="2.3677%" height="15" fill="rgb(207,11,44)"/><text x="55.6818%" y="655.50">do..</text></g><g><title>__x64_sys_recvfrom (15 samples, 2.09%)</title><rect x="55.7103%" y="629" width="2.0891%" height="15" fill="rgb(228,190,49)"/><text x="55.9603%" y="639.50">_..</text></g><g><title>__sys_recvfrom (14 samples, 1.95%)</title><rect x="55.8496%" y="613" width="1.9499%" height="15" fill="rgb(214,173,12)"/><text x="56.0996%" y="623.50">_..</text></g><g><title>inet_recvmsg (14 samples, 1.95%)</title><rect x="55.8496%" y="597" width="1.9499%" height="15" fill="rgb(218,26,35)"/><text x="56.0996%" y="607.50">i..</text></g><g><title>tcp_recvmsg (14 samples, 1.95%)</title><rect x="55.8496%" y="581" width="1.9499%" height="15" fill="rgb(220,200,19)"/><text x="56.0996%" y="591.50">t..</text></g><g><title>tcp_rcv_space_adjust (2 samples, 0.28%)</title><rect x="57.5209%" y="565" width="0.2786%" height="15" fill="rgb(239,95,49)"/><text x="57.7709%" y="575.50"></text></g><g><title>tcp_mstamp_refresh (1 samples, 0.14%)</title><rect x="57.6602%" y="549" width="0.1393%" height="15" fill="rgb(235,85,53)"/><text x="57.9102%" y="559.50"></text></g><g><title>entry_SYSCALL_64 (20 samples, 2.79%)</title><rect x="55.4318%" y="661" width="2.7855%" height="15" fill="rgb(233,133,31)"/><text x="55.6818%" y="671.50">en..</text></g><g><title>prepare_exit_to_usermode (3 samples, 0.42%)</title><rect x="57.7994%" y="645" width="0.4178%" height="15" fill="rgb(218,25,20)"/><text x="58.0494%" y="655.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (22 samples, 3.06%)</title><rect x="55.2925%" y="757" width="3.0641%" height="15" fill="rgb(252,210,38)"/><text x="55.5425%" y="767.50">&lt;st..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (22 samples, 3.06%)</title><rect x="55.2925%" y="741" width="3.0641%" height="15" fill="rgb(242,134,21)"/><text x="55.5425%" y="751.50">&lt;st..</text></g><g><title>std::sys_common::net::TcpStream::read (22 samples, 3.06%)</title><rect x="55.2925%" y="725" width="3.0641%" height="15" fill="rgb(213,28,48)"/><text x="55.5425%" y="735.50">std..</text></g><g><title>std::sys::unix::net::Socket::read (22 samples, 3.06%)</title><rect x="55.2925%" y="709" width="3.0641%" height="15" fill="rgb(250,196,2)"/><text x="55.5425%" y="719.50">std..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (22 samples, 3.06%)</title><rect x="55.2925%" y="693" width="3.0641%" height="15" fill="rgb(227,5,17)"/><text x="55.5425%" y="703.50">std..</text></g><g><title>__libc_recv (22 samples, 3.06%)</title><rect x="55.2925%" y="677" width="3.0641%" height="15" fill="rgb(221,226,24)"/><text x="55.5425%" y="687.50">__l..</text></g><g><title>syscall_return_via_sysret (1 samples, 0.14%)</title><rect x="58.2173%" y="661" width="0.1393%" height="15" fill="rgb(211,5,48)"/><text x="58.4673%" y="671.50"></text></g><g><title>__memset_avx2_erms (2 samples, 0.28%)</title><rect x="58.3565%" y="757" width="0.2786%" height="15" fill="rgb(219,150,6)"/><text x="58.6065%" y="767.50"></text></g><g><title>msql_srv::packet::PacketReader&lt;R&gt;::next (25 samples, 3.48%)</title><rect x="55.2925%" y="773" width="3.4819%" height="15" fill="rgb(251,46,16)"/><text x="55.5425%" y="783.50">msq..</text></g><g><title>__memset_avx2_unaligned_erms (1 samples, 0.14%)</title><rect x="58.6351%" y="757" width="0.1393%" height="15" fill="rgb(220,204,40)"/><text x="58.8851%" y="767.50"></text></g><g><title>msql_srv::packet::PacketWriter&lt;W&gt;::maybe_end_packet (1 samples, 0.14%)</title><rect x="58.7744%" y="773" width="0.1393%" height="15" fill="rgb(211,85,2)"/><text x="59.0244%" y="783.50"></text></g><g><title>import_single_range (1 samples, 0.14%)</title><rect x="59.1922%" y="645" width="0.1393%" height="15" fill="rgb(229,17,7)"/><text x="59.4422%" y="655.50"></text></g><g><title>__ip_finish_output (1 samples, 0.14%)</title><rect x="59.7493%" y="517" width="0.1393%" height="15" fill="rgb(239,72,28)"/><text x="59.9993%" y="527.50"></text></g><g><title>dev_hard_start_xmit (1 samples, 0.14%)</title><rect x="60.1671%" y="485" width="0.1393%" height="15" fill="rgb(230,47,54)"/><text x="60.4171%" y="495.50"></text></g><g><title>loopback_xmit (1 samples, 0.14%)</title><rect x="60.1671%" y="469" width="0.1393%" height="15" fill="rgb(214,50,8)"/><text x="60.4171%" y="479.50"></text></g><g><title>netif_rx (1 samples, 0.14%)</title><rect x="60.1671%" y="453" width="0.1393%" height="15" fill="rgb(216,198,43)"/><text x="60.4171%" y="463.50"></text></g><g><title>netif_rx_internal (1 samples, 0.14%)</title><rect x="60.1671%" y="437" width="0.1393%" height="15" fill="rgb(234,20,35)"/><text x="60.4171%" y="447.50"></text></g><g><title>enqueue_to_backlog (1 samples, 0.14%)</title><rect x="60.1671%" y="421" width="0.1393%" height="15" fill="rgb(254,45,19)"/><text x="60.4171%" y="431.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.14%)</title><rect x="60.1671%" y="405" width="0.1393%" height="15" fill="rgb(219,14,44)"/><text x="60.4171%" y="415.50"></text></g><g><title>__dev_queue_xmit (3 samples, 0.42%)</title><rect x="60.0279%" y="501" width="0.4178%" height="15" fill="rgb(217,220,26)"/><text x="60.2779%" y="511.50"></text></g><g><title>validate_xmit_skb (1 samples, 0.14%)</title><rect x="60.3064%" y="485" width="0.1393%" height="15" fill="rgb(213,158,28)"/><text x="60.5564%" y="495.50"></text></g><g><title>netif_skb_features (1 samples, 0.14%)</title><rect x="60.3064%" y="469" width="0.1393%" height="15" fill="rgb(252,51,52)"/><text x="60.5564%" y="479.50"></text></g><g><title>skb_network_protocol (1 samples, 0.14%)</title><rect x="60.3064%" y="453" width="0.1393%" height="15" fill="rgb(246,89,16)"/><text x="60.5564%" y="463.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.14%)</title><rect x="60.4457%" y="437" width="0.1393%" height="15" fill="rgb(216,158,49)"/><text x="60.6957%" y="447.50"></text></g><g><title>irqtime_account_irq (1 samples, 0.14%)</title><rect x="60.5850%" y="437" width="0.1393%" height="15" fill="rgb(236,107,19)"/><text x="60.8350%" y="447.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.14%)</title><rect x="60.5850%" y="421" width="0.1393%" height="15" fill="rgb(228,185,30)"/><text x="60.8350%" y="431.50"></text></g><g><title>sched_clock (1 samples, 0.14%)</title><rect x="60.5850%" y="405" width="0.1393%" height="15" fill="rgb(246,134,8)"/><text x="60.8350%" y="415.50"></text></g><g><title>native_sched_clock (1 samples, 0.14%)</title><rect x="60.5850%" y="389" width="0.1393%" height="15" fill="rgb(214,143,50)"/><text x="60.8350%" y="399.50"></text></g><g><title>enqueue_task (2 samples, 0.28%)</title><rect x="61.0028%" y="213" width="0.2786%" height="15" fill="rgb(228,75,8)"/><text x="61.2528%" y="223.50"></text></g><g><title>psi_task_change (2 samples, 0.28%)</title><rect x="61.0028%" y="197" width="0.2786%" height="15" fill="rgb(207,175,4)"/><text x="61.2528%" y="207.50"></text></g><g><title>psi_group_change (2 samples, 0.28%)</title><rect x="61.0028%" y="181" width="0.2786%" height="15" fill="rgb(205,108,24)"/><text x="61.2528%" y="191.50"></text></g><g><title>update_curr (1 samples, 0.14%)</title><rect x="61.2813%" y="181" width="0.1393%" height="15" fill="rgb(244,120,49)"/><text x="61.5313%" y="191.50"></text></g><g><title>enqueue_task_fair (2 samples, 0.28%)</title><rect x="61.2813%" y="213" width="0.2786%" height="15" fill="rgb(223,47,38)"/><text x="61.5313%" y="223.50"></text></g><g><title>enqueue_entity (2 samples, 0.28%)</title><rect x="61.2813%" y="197" width="0.2786%" height="15" fill="rgb(229,179,11)"/><text x="61.5313%" y="207.50"></text></g><g><title>update_load_avg (1 samples, 0.14%)</title><rect x="61.4206%" y="181" width="0.1393%" height="15" fill="rgb(231,122,1)"/><text x="61.6706%" y="191.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.14%)</title><rect x="61.4206%" y="165" width="0.1393%" height="15" fill="rgb(245,119,9)"/><text x="61.6706%" y="175.50"></text></g><g><title>sock_def_readable (6 samples, 0.84%)</title><rect x="60.8635%" y="277" width="0.8357%" height="15" fill="rgb(241,163,25)"/><text x="61.1135%" y="287.50"></text></g><g><title>__wake_up_common_lock (6 samples, 0.84%)</title><rect x="60.8635%" y="261" width="0.8357%" height="15" fill="rgb(217,214,3)"/><text x="61.1135%" y="271.50"></text></g><g><title>__wake_up_common (6 samples, 0.84%)</title><rect x="60.8635%" y="245" width="0.8357%" height="15" fill="rgb(240,86,28)"/><text x="61.1135%" y="255.50"></text></g><g><title>try_to_wake_up (6 samples, 0.84%)</title><rect x="60.8635%" y="229" width="0.8357%" height="15" fill="rgb(215,47,9)"/><text x="61.1135%" y="239.50"></text></g><g><title>update_rq_clock (1 samples, 0.14%)</title><rect x="61.5599%" y="213" width="0.1393%" height="15" fill="rgb(252,25,45)"/><text x="61.8099%" y="223.50"></text></g><g><title>tcp_ack (2 samples, 0.28%)</title><rect x="61.6992%" y="277" width="0.2786%" height="15" fill="rgb(251,164,9)"/><text x="61.9492%" y="287.50"></text></g><g><title>ip_local_deliver (9 samples, 1.25%)</title><rect x="60.8635%" y="373" width="1.2535%" height="15" fill="rgb(233,194,0)"/><text x="61.1135%" y="383.50"></text></g><g><title>ip_local_deliver_finish (9 samples, 1.25%)</title><rect x="60.8635%" y="357" width="1.2535%" height="15" fill="rgb(249,111,24)"/><text x="61.1135%" y="367.50"></text></g><g><title>ip_protocol_deliver_rcu (9 samples, 1.25%)</title><rect x="60.8635%" y="341" width="1.2535%" height="15" fill="rgb(250,223,3)"/><text x="61.1135%" y="351.50"></text></g><g><title>tcp_v4_rcv (9 samples, 1.25%)</title><rect x="60.8635%" y="325" width="1.2535%" height="15" fill="rgb(236,178,37)"/><text x="61.1135%" y="335.50"></text></g><g><title>tcp_v4_do_rcv (9 samples, 1.25%)</title><rect x="60.8635%" y="309" width="1.2535%" height="15" fill="rgb(241,158,50)"/><text x="61.1135%" y="319.50"></text></g><g><title>tcp_rcv_established (9 samples, 1.25%)</title><rect x="60.8635%" y="293" width="1.2535%" height="15" fill="rgb(213,121,41)"/><text x="61.1135%" y="303.50"></text></g><g><title>tcp_queue_rcv (1 samples, 0.14%)</title><rect x="61.9777%" y="277" width="0.1393%" height="15" fill="rgb(240,92,3)"/><text x="62.2277%" y="287.50"></text></g><g><title>__tcp_push_pending_frames (22 samples, 3.06%)</title><rect x="59.3315%" y="597" width="3.0641%" height="15" fill="rgb(205,123,3)"/><text x="59.5815%" y="607.50">__t..</text></g><g><title>tcp_write_xmit (22 samples, 3.06%)</title><rect x="59.3315%" y="581" width="3.0641%" height="15" fill="rgb(205,97,47)"/><text x="59.5815%" y="591.50">tcp..</text></g><g><title>__tcp_transmit_skb (22 samples, 3.06%)</title><rect x="59.3315%" y="565" width="3.0641%" height="15" fill="rgb(247,152,14)"/><text x="59.5815%" y="575.50">__t..</text></g><g><title>__ip_queue_xmit (20 samples, 2.79%)</title><rect x="59.6100%" y="549" width="2.7855%" height="15" fill="rgb(248,195,53)"/><text x="59.8600%" y="559.50">__..</text></g><g><title>ip_output (19 samples, 2.65%)</title><rect x="59.7493%" y="533" width="2.6462%" height="15" fill="rgb(226,201,16)"/><text x="59.9993%" y="543.50">ip..</text></g><g><title>ip_finish_output2 (18 samples, 2.51%)</title><rect x="59.8886%" y="517" width="2.5070%" height="15" fill="rgb(205,98,0)"/><text x="60.1386%" y="527.50">ip..</text></g><g><title>__local_bh_enable_ip (14 samples, 1.95%)</title><rect x="60.4457%" y="501" width="1.9499%" height="15" fill="rgb(214,191,48)"/><text x="60.6957%" y="511.50">_..</text></g><g><title>do_softirq (14 samples, 1.95%)</title><rect x="60.4457%" y="485" width="1.9499%" height="15" fill="rgb(237,112,39)"/><text x="60.6957%" y="495.50">d..</text></g><g><title>do_softirq_own_stack (14 samples, 1.95%)</title><rect x="60.4457%" y="469" width="1.9499%" height="15" fill="rgb(247,203,27)"/><text x="60.6957%" y="479.50">d..</text></g><g><title>__do_softirq (14 samples, 1.95%)</title><rect x="60.4457%" y="453" width="1.9499%" height="15" fill="rgb(235,124,28)"/><text x="60.6957%" y="463.50">_..</text></g><g><title>net_rx_action (12 samples, 1.67%)</title><rect x="60.7242%" y="437" width="1.6713%" height="15" fill="rgb(208,207,46)"/><text x="60.9742%" y="447.50"></text></g><g><title>process_backlog (12 samples, 1.67%)</title><rect x="60.7242%" y="421" width="1.6713%" height="15" fill="rgb(234,176,4)"/><text x="60.9742%" y="431.50"></text></g><g><title>__netif_receive_skb_one_core (12 samples, 1.67%)</title><rect x="60.7242%" y="405" width="1.6713%" height="15" fill="rgb(230,133,28)"/><text x="60.9742%" y="415.50"></text></g><g><title>ip_rcv (11 samples, 1.53%)</title><rect x="60.8635%" y="389" width="1.5320%" height="15" fill="rgb(211,137,40)"/><text x="61.1135%" y="399.50"></text></g><g><title>ip_rcv_core (2 samples, 0.28%)</title><rect x="62.1170%" y="373" width="0.2786%" height="15" fill="rgb(254,35,13)"/><text x="62.3670%" y="383.50"></text></g><g><title>sk_stream_alloc_skb (1 samples, 0.14%)</title><rect x="62.3955%" y="597" width="0.1393%" height="15" fill="rgb(225,49,51)"/><text x="62.6455%" y="607.50"></text></g><g><title>__alloc_skb (1 samples, 0.14%)</title><rect x="62.3955%" y="581" width="0.1393%" height="15" fill="rgb(251,10,15)"/><text x="62.6455%" y="591.50"></text></g><g><title>__kmalloc_node_track_caller (1 samples, 0.14%)</title><rect x="62.3955%" y="565" width="0.1393%" height="15" fill="rgb(228,207,15)"/><text x="62.6455%" y="575.50"></text></g><g><title>sock_sendmsg (25 samples, 3.48%)</title><rect x="59.3315%" y="645" width="3.4819%" height="15" fill="rgb(241,99,19)"/><text x="59.5815%" y="655.50">soc..</text></g><g><title>tcp_sendmsg (25 samples, 3.48%)</title><rect x="59.3315%" y="629" width="3.4819%" height="15" fill="rgb(207,104,49)"/><text x="59.5815%" y="639.50">tcp..</text></g><g><title>tcp_sendmsg_locked (25 samples, 3.48%)</title><rect x="59.3315%" y="613" width="3.4819%" height="15" fill="rgb(234,99,18)"/><text x="59.5815%" y="623.50">tcp..</text></g><g><title>skb_do_copy_data_nocache (2 samples, 0.28%)</title><rect x="62.5348%" y="597" width="0.2786%" height="15" fill="rgb(213,191,49)"/><text x="62.7848%" y="607.50"></text></g><g><title>__check_object_size (2 samples, 0.28%)</title><rect x="62.5348%" y="581" width="0.2786%" height="15" fill="rgb(210,226,19)"/><text x="62.7848%" y="591.50"></text></g><g><title>__virt_addr_valid (1 samples, 0.14%)</title><rect x="62.6741%" y="565" width="0.1393%" height="15" fill="rgb(229,97,18)"/><text x="62.9241%" y="575.50"></text></g><g><title>decor::Shim::run_on_tcp (137 samples, 19.08%)</title><rect x="43.8719%" y="805" width="19.0808%" height="15" fill="rgb(211,167,15)"/><text x="44.1219%" y="815.50">decor::Shim::run_on_tcp</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (137 samples, 19.08%)</title><rect x="43.8719%" y="789" width="19.0808%" height="15" fill="rgb(210,169,34)"/><text x="44.1219%" y="799.50">msql_srv::MysqlIntermediary&lt;B,..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (29 samples, 4.04%)</title><rect x="58.9136%" y="773" width="4.0390%" height="15" fill="rgb(241,121,31)"/><text x="59.1636%" y="783.50">std:..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (28 samples, 3.90%)</title><rect x="59.0529%" y="757" width="3.8997%" height="15" fill="rgb(232,40,11)"/><text x="59.3029%" y="767.50">&lt;std..</text></g><g><title>std::sys_common::net::TcpStream::write (28 samples, 3.90%)</title><rect x="59.0529%" y="741" width="3.8997%" height="15" fill="rgb(205,86,26)"/><text x="59.3029%" y="751.50">std:..</text></g><g><title>__libc_send (28 samples, 3.90%)</title><rect x="59.0529%" y="725" width="3.8997%" height="15" fill="rgb(231,126,28)"/><text x="59.3029%" y="735.50">__li..</text></g><g><title>entry_SYSCALL_64 (28 samples, 3.90%)</title><rect x="59.0529%" y="709" width="3.8997%" height="15" fill="rgb(219,221,18)"/><text x="59.3029%" y="719.50">entr..</text></g><g><title>do_syscall_64 (27 samples, 3.76%)</title><rect x="59.1922%" y="693" width="3.7604%" height="15" fill="rgb(211,40,0)"/><text x="59.4422%" y="703.50">do_s..</text></g><g><title>__x64_sys_sendto (27 samples, 3.76%)</title><rect x="59.1922%" y="677" width="3.7604%" height="15" fill="rgb(239,85,43)"/><text x="59.4422%" y="687.50">__x6..</text></g><g><title>__sys_sendto (27 samples, 3.76%)</title><rect x="59.1922%" y="661" width="3.7604%" height="15" fill="rgb(231,55,21)"/><text x="59.4422%" y="671.50">__sy..</text></g><g><title>sockfd_lookup_light (1 samples, 0.14%)</title><rect x="62.8134%" y="645" width="0.1393%" height="15" fill="rgb(225,184,43)"/><text x="63.0634%" y="655.50"></text></g><g><title>__fget_light (1 samples, 0.14%)</title><rect x="62.8134%" y="629" width="0.1393%" height="15" fill="rgb(251,158,41)"/><text x="63.0634%" y="639.50"></text></g><g><title>__fget_files (1 samples, 0.14%)</title><rect x="62.8134%" y="613" width="0.1393%" height="15" fill="rgb(234,159,37)"/><text x="63.0634%" y="623.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.14%)</title><rect x="62.9526%" y="789" width="0.1393%" height="15" fill="rgb(216,204,22)"/><text x="63.2026%" y="799.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.14%)</title><rect x="62.9526%" y="773" width="0.1393%" height="15" fill="rgb(214,17,3)"/><text x="63.2026%" y="783.50"></text></g><g><title>__GI_munmap (1 samples, 0.14%)</title><rect x="62.9526%" y="757" width="0.1393%" height="15" fill="rgb(212,111,17)"/><text x="63.2026%" y="767.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="62.9526%" y="741" width="0.1393%" height="15" fill="rgb(221,157,24)"/><text x="63.2026%" y="751.50"></text></g><g><title>do_syscall_64 (1 samples, 0.14%)</title><rect x="62.9526%" y="725" width="0.1393%" height="15" fill="rgb(252,16,13)"/><text x="63.2026%" y="735.50"></text></g><g><title>__x64_sys_munmap (1 samples, 0.14%)</title><rect x="62.9526%" y="709" width="0.1393%" height="15" fill="rgb(221,62,2)"/><text x="63.2026%" y="719.50"></text></g><g><title>__vm_munmap (1 samples, 0.14%)</title><rect x="62.9526%" y="693" width="0.1393%" height="15" fill="rgb(247,87,22)"/><text x="63.2026%" y="703.50"></text></g><g><title>__do_munmap (1 samples, 0.14%)</title><rect x="62.9526%" y="677" width="0.1393%" height="15" fill="rgb(215,73,9)"/><text x="63.2026%" y="687.50"></text></g><g><title>unmap_region (1 samples, 0.14%)</title><rect x="62.9526%" y="661" width="0.1393%" height="15" fill="rgb(207,175,33)"/><text x="63.2026%" y="671.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.14%)</title><rect x="62.9526%" y="645" width="0.1393%" height="15" fill="rgb(243,129,54)"/><text x="63.2026%" y="655.50"></text></g><g><title>flush_tlb_mm_range (1 samples, 0.14%)</title><rect x="62.9526%" y="629" width="0.1393%" height="15" fill="rgb(227,119,45)"/><text x="63.2026%" y="639.50"></text></g><g><title>smp_call_function_many_cond (1 samples, 0.14%)</title><rect x="62.9526%" y="613" width="0.1393%" height="15" fill="rgb(205,109,36)"/><text x="63.2026%" y="623.50"></text></g><g><title>default_send_IPI_mask_sequence_phys (1 samples, 0.14%)</title><rect x="62.9526%" y="597" width="0.1393%" height="15" fill="rgb(205,6,39)"/><text x="63.2026%" y="607.50"></text></g><g><title>__GI___clone (140 samples, 19.50%)</title><rect x="43.7326%" y="917" width="19.4986%" height="15" fill="rgb(221,32,16)"/><text x="43.9826%" y="927.50">__GI___clone</text></g><g><title>start_thread (140 samples, 19.50%)</title><rect x="43.7326%" y="901" width="19.4986%" height="15" fill="rgb(228,144,50)"/><text x="43.9826%" y="911.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (139 samples, 19.36%)</title><rect x="43.8719%" y="885" width="19.3593%" height="15" fill="rgb(229,201,53)"/><text x="44.1219%" y="895.50">std::sys::unix::thread::Thread..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (139 samples, 19.36%)</title><rect x="43.8719%" y="869" width="19.3593%" height="15" fill="rgb(249,153,27)"/><text x="44.1219%" y="879.50">&lt;alloc::boxed::Box&lt;F&gt; as core:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (139 samples, 19.36%)</title><rect x="43.8719%" y="853" width="19.3593%" height="15" fill="rgb(227,106,25)"/><text x="44.1219%" y="863.50">&lt;alloc::boxed::Box&lt;F&gt; as core:..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (139 samples, 19.36%)</title><rect x="43.8719%" y="837" width="19.3593%" height="15" fill="rgb(230,65,29)"/><text x="44.1219%" y="847.50">core::ops::function::FnOnce::c..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (139 samples, 19.36%)</title><rect x="43.8719%" y="821" width="19.3593%" height="15" fill="rgb(221,57,46)"/><text x="44.1219%" y="831.50">std::sys_common::backtrace::__..</text></g><g><title>mysql::conn::Conn::new (2 samples, 0.28%)</title><rect x="62.9526%" y="805" width="0.2786%" height="15" fill="rgb(229,161,17)"/><text x="63.2026%" y="815.50"></text></g><g><title>mysql::conn::opts::from_url (1 samples, 0.14%)</title><rect x="63.0919%" y="789" width="0.1393%" height="15" fill="rgb(222,213,11)"/><text x="63.3419%" y="799.50"></text></g><g><title>url::ParseOptions::parse (1 samples, 0.14%)</title><rect x="63.0919%" y="773" width="0.1393%" height="15" fill="rgb(235,35,13)"/><text x="63.3419%" y="783.50"></text></g><g><title>url::parser::Parser::parse_url (1 samples, 0.14%)</title><rect x="63.0919%" y="757" width="0.1393%" height="15" fill="rgb(233,158,34)"/><text x="63.3419%" y="767.50"></text></g><g><title>url::parser::Parser::parse_scheme (1 samples, 0.14%)</title><rect x="63.0919%" y="741" width="0.1393%" height="15" fill="rgb(215,151,48)"/><text x="63.3419%" y="751.50"></text></g><g><title>[libhwloc.so.15.2.0] (6 samples, 0.84%)</title><rect x="63.2312%" y="661" width="0.8357%" height="15" fill="rgb(229,84,14)"/><text x="63.4812%" y="671.50"></text></g><g><title>[libhwloc.so.15.2.0] (6 samples, 0.84%)</title><rect x="63.2312%" y="645" width="0.8357%" height="15" fill="rgb(229,68,14)"/><text x="63.4812%" y="655.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.14%)</title><rect x="63.9276%" y="629" width="0.1393%" height="15" fill="rgb(243,106,26)"/><text x="64.1776%" y="639.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.14%)</title><rect x="63.9276%" y="613" width="0.1393%" height="15" fill="rgb(206,45,38)"/><text x="64.1776%" y="623.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.14%)</title><rect x="63.9276%" y="597" width="0.1393%" height="15" fill="rgb(226,6,15)"/><text x="64.1776%" y="607.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="63.9276%" y="581" width="0.1393%" height="15" fill="rgb(232,22,54)"/><text x="64.1776%" y="591.50"></text></g><g><title>_int_malloc (1 samples, 0.14%)</title><rect x="63.9276%" y="565" width="0.1393%" height="15" fill="rgb(229,222,32)"/><text x="64.1776%" y="575.50"></text></g><g><title>page_fault (1 samples, 0.14%)</title><rect x="63.9276%" y="549" width="0.1393%" height="15" fill="rgb(228,62,29)"/><text x="64.1776%" y="559.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.14%)</title><rect x="63.9276%" y="533" width="0.1393%" height="15" fill="rgb(251,103,34)"/><text x="64.1776%" y="543.50"></text></g><g><title>handle_mm_fault (1 samples, 0.14%)</title><rect x="63.9276%" y="517" width="0.1393%" height="15" fill="rgb(233,12,30)"/><text x="64.1776%" y="527.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.14%)</title><rect x="63.9276%" y="501" width="0.1393%" height="15" fill="rgb(238,52,0)"/><text x="64.1776%" y="511.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.14%)</title><rect x="63.9276%" y="485" width="0.1393%" height="15" fill="rgb(223,98,5)"/><text x="64.1776%" y="495.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.14%)</title><rect x="63.9276%" y="469" width="0.1393%" height="15" fill="rgb(228,75,37)"/><text x="64.1776%" y="479.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.14%)</title><rect x="63.9276%" y="453" width="0.1393%" height="15" fill="rgb(205,115,49)"/><text x="64.1776%" y="463.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.14%)</title><rect x="64.2061%" y="645" width="0.1393%" height="15" fill="rgb(250,154,43)"/><text x="64.4561%" y="655.50"></text></g><g><title>__GI___libc_free (2 samples, 0.28%)</title><rect x="64.3454%" y="645" width="0.2786%" height="15" fill="rgb(226,43,29)"/><text x="64.5954%" y="655.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (231 samples, 32.17%)</title><rect x="65.1811%" y="437" width="32.1727%" height="15" fill="rgb(249,228,39)"/><text x="65.4311%" y="447.50">__intel_pmu_enable_all.constprop.0</text></g><g><title>native_write_msr (230 samples, 32.03%)</title><rect x="65.3203%" y="421" width="32.0334%" height="15" fill="rgb(216,79,43)"/><text x="65.5703%" y="431.50">native_write_msr</text></g><g><title>__perf_event_task_sched_in (234 samples, 32.59%)</title><rect x="64.9025%" y="453" width="32.5905%" height="15" fill="rgb(228,95,12)"/><text x="65.1525%" y="463.50">__perf_event_task_sched_in</text></g><g><title>_raw_spin_unlock (1 samples, 0.14%)</title><rect x="97.3538%" y="437" width="0.1393%" height="15" fill="rgb(249,221,15)"/><text x="97.6038%" y="447.50"></text></g><g><title>preempt_count_sub (1 samples, 0.14%)</title><rect x="97.3538%" y="421" width="0.1393%" height="15" fill="rgb(233,34,13)"/><text x="97.6038%" y="431.50"></text></g><g><title>__x64_sys_sched_setaffinity (236 samples, 32.87%)</title><rect x="64.7632%" y="597" width="32.8691%" height="15" fill="rgb(214,103,39)"/><text x="65.0132%" y="607.50">__x64_sys_sched_setaffinity</text></g><g><title>sched_setaffinity (236 samples, 32.87%)</title><rect x="64.7632%" y="581" width="32.8691%" height="15" fill="rgb(251,126,39)"/><text x="65.0132%" y="591.50">sched_setaffinity</text></g><g><title>__set_cpus_allowed_ptr (235 samples, 32.73%)</title><rect x="64.9025%" y="565" width="32.7298%" height="15" fill="rgb(214,216,36)"/><text x="65.1525%" y="575.50">__set_cpus_allowed_ptr</text></g><g><title>stop_one_cpu (235 samples, 32.73%)</title><rect x="64.9025%" y="549" width="32.7298%" height="15" fill="rgb(220,221,8)"/><text x="65.1525%" y="559.50">stop_one_cpu</text></g><g><title>cpu_stop_queue_work (235 samples, 32.73%)</title><rect x="64.9025%" y="533" width="32.7298%" height="15" fill="rgb(240,216,3)"/><text x="65.1525%" y="543.50">cpu_stop_queue_work</text></g><g><title>preempt_schedule_thunk (235 samples, 32.73%)</title><rect x="64.9025%" y="517" width="32.7298%" height="15" fill="rgb(232,218,17)"/><text x="65.1525%" y="527.50">preempt_schedule_thunk</text></g><g><title>preempt_schedule_common (235 samples, 32.73%)</title><rect x="64.9025%" y="501" width="32.7298%" height="15" fill="rgb(229,163,45)"/><text x="65.1525%" y="511.50">preempt_schedule_common</text></g><g><title>__schedule (235 samples, 32.73%)</title><rect x="64.9025%" y="485" width="32.7298%" height="15" fill="rgb(231,110,42)"/><text x="65.1525%" y="495.50">__schedule</text></g><g><title>finish_task_switch (235 samples, 32.73%)</title><rect x="64.9025%" y="469" width="32.7298%" height="15" fill="rgb(208,170,48)"/><text x="65.1525%" y="479.50">finish_task_switch</text></g><g><title>_raw_spin_unlock_irq (1 samples, 0.14%)</title><rect x="97.4930%" y="453" width="0.1393%" height="15" fill="rgb(239,116,25)"/><text x="97.7430%" y="463.50"></text></g><g><title>apic_timer_interrupt (1 samples, 0.14%)</title><rect x="97.4930%" y="437" width="0.1393%" height="15" fill="rgb(219,200,50)"/><text x="97.7430%" y="447.50"></text></g><g><title>smp_apic_timer_interrupt (1 samples, 0.14%)</title><rect x="97.4930%" y="421" width="0.1393%" height="15" fill="rgb(245,200,0)"/><text x="97.7430%" y="431.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.14%)</title><rect x="97.4930%" y="405" width="0.1393%" height="15" fill="rgb(245,119,33)"/><text x="97.7430%" y="415.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.14%)</title><rect x="97.4930%" y="389" width="0.1393%" height="15" fill="rgb(231,125,12)"/><text x="97.7430%" y="399.50"></text></g><g><title>tick_sched_timer (1 samples, 0.14%)</title><rect x="97.4930%" y="373" width="0.1393%" height="15" fill="rgb(216,96,41)"/><text x="97.7430%" y="383.50"></text></g><g><title>tick_sched_handle (1 samples, 0.14%)</title><rect x="97.4930%" y="357" width="0.1393%" height="15" fill="rgb(248,43,45)"/><text x="97.7430%" y="367.50"></text></g><g><title>update_process_times (1 samples, 0.14%)</title><rect x="97.4930%" y="341" width="0.1393%" height="15" fill="rgb(217,222,7)"/><text x="97.7430%" y="351.50"></text></g><g><title>scheduler_tick (1 samples, 0.14%)</title><rect x="97.4930%" y="325" width="0.1393%" height="15" fill="rgb(233,28,6)"/><text x="97.7430%" y="335.50"></text></g><g><title>task_tick_fair (1 samples, 0.14%)</title><rect x="97.4930%" y="309" width="0.1393%" height="15" fill="rgb(231,218,15)"/><text x="97.7430%" y="319.50"></text></g><g><title>update_curr (1 samples, 0.14%)</title><rect x="97.4930%" y="293" width="0.1393%" height="15" fill="rgb(226,171,48)"/><text x="97.7430%" y="303.50"></text></g><g><title>cpuacct_charge (1 samples, 0.14%)</title><rect x="97.4930%" y="277" width="0.1393%" height="15" fill="rgb(235,201,9)"/><text x="97.7430%" y="287.50"></text></g><g><title>do_syscall_64 (237 samples, 33.01%)</title><rect x="64.7632%" y="613" width="33.0084%" height="15" fill="rgb(217,80,15)"/><text x="65.0132%" y="623.50">do_syscall_64</text></g><g><title>syscall_slow_exit_work (1 samples, 0.14%)</title><rect x="97.6323%" y="597" width="0.1393%" height="15" fill="rgb(219,152,8)"/><text x="97.8823%" y="607.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.14%)</title><rect x="97.6323%" y="581" width="0.1393%" height="15" fill="rgb(243,107,38)"/><text x="97.8823%" y="591.50"></text></g><g><title>[libhwloc.so.15.2.0] (250 samples, 34.82%)</title><rect x="63.2312%" y="677" width="34.8189%" height="15" fill="rgb(231,17,5)"/><text x="63.4812%" y="687.50">[libhwloc.so.15.2.0]</text></g><g><title>hwloc_linux_set_tid_cpubind (244 samples, 33.98%)</title><rect x="64.0669%" y="661" width="33.9833%" height="15" fill="rgb(209,25,54)"/><text x="64.3169%" y="671.50">hwloc_linux_set_tid_cpubind</text></g><g><title>__GI___sched_setaffinity_new (240 samples, 33.43%)</title><rect x="64.6240%" y="645" width="33.4262%" height="15" fill="rgb(219,0,2)"/><text x="64.8740%" y="655.50">__GI___sched_setaffinity_new</text></g><g><title>entry_SYSCALL_64 (240 samples, 33.43%)</title><rect x="64.6240%" y="629" width="33.4262%" height="15" fill="rgb(246,9,5)"/><text x="64.8740%" y="639.50">entry_SYSCALL_64</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.28%)</title><rect x="97.7716%" y="613" width="0.2786%" height="15" fill="rgb(226,159,4)"/><text x="98.0216%" y="623.50"></text></g><g><title>hwloc::Topology::new (251 samples, 34.96%)</title><rect x="63.2312%" y="741" width="34.9582%" height="15" fill="rgb(219,175,34)"/><text x="63.4812%" y="751.50">hwloc::Topology::new</text></g><g><title>hwloc_topology_load (251 samples, 34.96%)</title><rect x="63.2312%" y="725" width="34.9582%" height="15" fill="rgb(236,10,46)"/><text x="63.4812%" y="735.50">hwloc_topology_load</text></g><g><title>[libhwloc.so.15.2.0] (251 samples, 34.96%)</title><rect x="63.2312%" y="709" width="34.9582%" height="15" fill="rgb(240,211,16)"/><text x="63.4812%" y="719.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (251 samples, 34.96%)</title><rect x="63.2312%" y="693" width="34.9582%" height="15" fill="rgb(205,3,43)"/><text x="63.4812%" y="703.50">[libhwloc.so.15.2.0]</text></g><g><title>fgets (1 samples, 0.14%)</title><rect x="98.0501%" y="677" width="0.1393%" height="15" fill="rgb(245,7,22)"/><text x="98.3001%" y="687.50"></text></g><g><title>__GI__IO_getline_info (1 samples, 0.14%)</title><rect x="98.0501%" y="661" width="0.1393%" height="15" fill="rgb(239,132,32)"/><text x="98.3001%" y="671.50"></text></g><g><title>__GI__IO_default_uflow (1 samples, 0.14%)</title><rect x="98.0501%" y="645" width="0.1393%" height="15" fill="rgb(228,202,34)"/><text x="98.3001%" y="655.50"></text></g><g><title>__GI__IO_file_underflow (1 samples, 0.14%)</title><rect x="98.0501%" y="629" width="0.1393%" height="15" fill="rgb(254,200,22)"/><text x="98.3001%" y="639.50"></text></g><g><title>__GI___read (1 samples, 0.14%)</title><rect x="98.0501%" y="613" width="0.1393%" height="15" fill="rgb(219,10,39)"/><text x="98.3001%" y="623.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="98.0501%" y="597" width="0.1393%" height="15" fill="rgb(226,210,39)"/><text x="98.3001%" y="607.50"></text></g><g><title>do_syscall_64 (1 samples, 0.14%)</title><rect x="98.0501%" y="581" width="0.1393%" height="15" fill="rgb(208,219,16)"/><text x="98.3001%" y="591.50"></text></g><g><title>ksys_read (1 samples, 0.14%)</title><rect x="98.0501%" y="565" width="0.1393%" height="15" fill="rgb(216,158,51)"/><text x="98.3001%" y="575.50"></text></g><g><title>vfs_read (1 samples, 0.14%)</title><rect x="98.0501%" y="549" width="0.1393%" height="15" fill="rgb(233,14,44)"/><text x="98.3001%" y="559.50"></text></g><g><title>seq_read (1 samples, 0.14%)</title><rect x="98.0501%" y="533" width="0.1393%" height="15" fill="rgb(237,97,39)"/><text x="98.3001%" y="543.50"></text></g><g><title>show_cpuinfo (1 samples, 0.14%)</title><rect x="98.0501%" y="517" width="0.1393%" height="15" fill="rgb(218,198,43)"/><text x="98.3001%" y="527.50"></text></g><g><title>seq_printf (1 samples, 0.14%)</title><rect x="98.0501%" y="501" width="0.1393%" height="15" fill="rgb(231,104,20)"/><text x="98.3001%" y="511.50"></text></g><g><title>vsnprintf (1 samples, 0.14%)</title><rect x="98.0501%" y="485" width="0.1393%" height="15" fill="rgb(254,36,13)"/><text x="98.3001%" y="495.50"></text></g><g><title>hwloc::Topology::set_cpubind_for_process (1 samples, 0.14%)</title><rect x="98.1894%" y="741" width="0.1393%" height="15" fill="rgb(248,14,50)"/><text x="98.4394%" y="751.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.14%)</title><rect x="98.1894%" y="725" width="0.1393%" height="15" fill="rgb(217,107,29)"/><text x="98.4394%" y="735.50"></text></g><g><title>__GI___close_nocancel (1 samples, 0.14%)</title><rect x="98.1894%" y="709" width="0.1393%" height="15" fill="rgb(251,169,33)"/><text x="98.4394%" y="719.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="98.1894%" y="693" width="0.1393%" height="15" fill="rgb(217,108,32)"/><text x="98.4394%" y="703.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.14%)</title><rect x="98.1894%" y="677" width="0.1393%" height="15" fill="rgb(219,66,42)"/><text x="98.4394%" y="687.50"></text></g><g><title>task_work_run (1 samples, 0.14%)</title><rect x="98.1894%" y="661" width="0.1393%" height="15" fill="rgb(206,180,7)"/><text x="98.4394%" y="671.50"></text></g><g><title>__fput (1 samples, 0.14%)</title><rect x="98.1894%" y="645" width="0.1393%" height="15" fill="rgb(208,226,31)"/><text x="98.4394%" y="655.50"></text></g><g><title>__libc_start_main (253 samples, 35.24%)</title><rect x="63.2312%" y="901" width="35.2368%" height="15" fill="rgb(218,26,49)"/><text x="63.4812%" y="911.50">__libc_start_main</text></g><g><title>main (253 samples, 35.24%)</title><rect x="63.2312%" y="885" width="35.2368%" height="15" fill="rgb(233,197,48)"/><text x="63.4812%" y="895.50">main</text></g><g><title>std::rt::lang_start_internal (253 samples, 35.24%)</title><rect x="63.2312%" y="869" width="35.2368%" height="15" fill="rgb(252,181,51)"/><text x="63.4812%" y="879.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (253 samples, 35.24%)</title><rect x="63.2312%" y="853" width="35.2368%" height="15" fill="rgb(253,90,19)"/><text x="63.4812%" y="863.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (253 samples, 35.24%)</title><rect x="63.2312%" y="837" width="35.2368%" height="15" fill="rgb(215,171,30)"/><text x="63.4812%" y="847.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (253 samples, 35.24%)</title><rect x="63.2312%" y="821" width="35.2368%" height="15" fill="rgb(214,222,9)"/><text x="63.4812%" y="831.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (253 samples, 35.24%)</title><rect x="63.2312%" y="805" width="35.2368%" height="15" fill="rgb(223,3,22)"/><text x="63.4812%" y="815.50">core::ops::function::impls::&lt;impl core::ops::function::Fn..</text></g><g><title>std::rt::lang_start::_{{closure}} (253 samples, 35.24%)</title><rect x="63.2312%" y="789" width="35.2368%" height="15" fill="rgb(225,196,46)"/><text x="63.4812%" y="799.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (253 samples, 35.24%)</title><rect x="63.2312%" y="773" width="35.2368%" height="15" fill="rgb(209,110,37)"/><text x="63.4812%" y="783.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>lobsters::main (253 samples, 35.24%)</title><rect x="63.2312%" y="757" width="35.2368%" height="15" fill="rgb(249,89,12)"/><text x="63.4812%" y="767.50">lobsters::main</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (1 samples, 0.14%)</title><rect x="98.3287%" y="741" width="0.1393%" height="15" fill="rgb(226,27,33)"/><text x="98.5787%" y="751.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.14%)</title><rect x="98.3287%" y="725" width="0.1393%" height="15" fill="rgb(213,82,22)"/><text x="98.5787%" y="735.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="98.3287%" y="709" width="0.1393%" height="15" fill="rgb(248,140,0)"/><text x="98.5787%" y="719.50"></text></g><g><title>_start (254 samples, 35.38%)</title><rect x="63.2312%" y="917" width="35.3760%" height="15" fill="rgb(228,106,3)"/><text x="63.4812%" y="927.50">_start</text></g><g><title>_dl_start (1 samples, 0.14%)</title><rect x="98.4680%" y="901" width="0.1393%" height="15" fill="rgb(209,23,37)"/><text x="98.7180%" y="911.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.14%)</title><rect x="98.4680%" y="885" width="0.1393%" height="15" fill="rgb(241,93,50)"/><text x="98.7180%" y="895.50"></text></g><g><title>dl_main (1 samples, 0.14%)</title><rect x="98.4680%" y="869" width="0.1393%" height="15" fill="rgb(253,46,43)"/><text x="98.7180%" y="879.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.14%)</title><rect x="98.4680%" y="853" width="0.1393%" height="15" fill="rgb(226,206,43)"/><text x="98.7180%" y="863.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.14%)</title><rect x="98.4680%" y="837" width="0.1393%" height="15" fill="rgb(217,54,7)"/><text x="98.7180%" y="847.50"></text></g><g><title>openaux (1 samples, 0.14%)</title><rect x="98.4680%" y="821" width="0.1393%" height="15" fill="rgb(223,5,52)"/><text x="98.7180%" y="831.50"></text></g><g><title>_dl_map_object (1 samples, 0.14%)</title><rect x="98.4680%" y="805" width="0.1393%" height="15" fill="rgb(206,52,46)"/><text x="98.7180%" y="815.50"></text></g><g><title>open_path (1 samples, 0.14%)</title><rect x="98.4680%" y="789" width="0.1393%" height="15" fill="rgb(253,136,11)"/><text x="98.7180%" y="799.50"></text></g><g><title>open_verify.constprop.0 (1 samples, 0.14%)</title><rect x="98.4680%" y="773" width="0.1393%" height="15" fill="rgb(208,106,33)"/><text x="98.7180%" y="783.50"></text></g><g><title>__GI___open_nocancel (1 samples, 0.14%)</title><rect x="98.4680%" y="757" width="0.1393%" height="15" fill="rgb(206,54,4)"/><text x="98.7180%" y="767.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="98.4680%" y="741" width="0.1393%" height="15" fill="rgb(213,3,15)"/><text x="98.7180%" y="751.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.14%)</title><rect x="98.4680%" y="725" width="0.1393%" height="15" fill="rgb(252,211,39)"/><text x="98.7180%" y="735.50"></text></g><g><title>task_work_run (1 samples, 0.14%)</title><rect x="98.4680%" y="709" width="0.1393%" height="15" fill="rgb(223,6,36)"/><text x="98.7180%" y="719.50"></text></g><g><title>call_rcu (1 samples, 0.14%)</title><rect x="98.4680%" y="693" width="0.1393%" height="15" fill="rgb(252,169,45)"/><text x="98.7180%" y="703.50"></text></g><g><title>rcu_segcblist_enqueue (1 samples, 0.14%)</title><rect x="98.4680%" y="677" width="0.1393%" height="15" fill="rgb(212,48,26)"/><text x="98.7180%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.14%)</title><rect x="98.6072%" y="917" width="0.1393%" height="15" fill="rgb(251,102,48)"/><text x="98.8572%" y="927.50"></text></g><g><title>[vmlinux] (1 samples, 0.14%)</title><rect x="98.8858%" y="885" width="0.1393%" height="15" fill="rgb(243,208,16)"/><text x="99.1358%" y="895.50"></text></g><g><title>do_group_exit (1 samples, 0.14%)</title><rect x="98.8858%" y="869" width="0.1393%" height="15" fill="rgb(219,96,24)"/><text x="99.1358%" y="879.50"></text></g><g><title>do_exit (1 samples, 0.14%)</title><rect x="98.8858%" y="853" width="0.1393%" height="15" fill="rgb(219,33,29)"/><text x="99.1358%" y="863.50"></text></g><g><title>mmput (1 samples, 0.14%)</title><rect x="98.8858%" y="837" width="0.1393%" height="15" fill="rgb(223,176,5)"/><text x="99.1358%" y="847.50"></text></g><g><title>exit_mmap (1 samples, 0.14%)</title><rect x="98.8858%" y="821" width="0.1393%" height="15" fill="rgb(228,140,14)"/><text x="99.1358%" y="831.50"></text></g><g><title>unmap_vmas (1 samples, 0.14%)</title><rect x="98.8858%" y="805" width="0.1393%" height="15" fill="rgb(217,179,31)"/><text x="99.1358%" y="815.50"></text></g><g><title>unmap_page_range (1 samples, 0.14%)</title><rect x="98.8858%" y="789" width="0.1393%" height="15" fill="rgb(230,9,30)"/><text x="99.1358%" y="799.50"></text></g><g><title>lobsters (712 samples, 99.16%)</title><rect x="0.0000%" y="933" width="99.1643%" height="15" fill="rgb(230,136,20)"/><text x="0.2500%" y="943.50">lobsters</text></g><g><title>entry_SYSCALL_64 (3 samples, 0.42%)</title><rect x="98.7465%" y="917" width="0.4178%" height="15" fill="rgb(215,210,22)"/><text x="98.9965%" y="927.50"></text></g><g><title>do_syscall_64 (2 samples, 0.28%)</title><rect x="98.8858%" y="901" width="0.2786%" height="15" fill="rgb(218,43,5)"/><text x="99.1358%" y="911.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.14%)</title><rect x="99.0251%" y="885" width="0.1393%" height="15" fill="rgb(216,11,5)"/><text x="99.2751%" y="895.50"></text></g><g><title>do_execve (1 samples, 0.14%)</title><rect x="99.0251%" y="869" width="0.1393%" height="15" fill="rgb(209,82,29)"/><text x="99.2751%" y="879.50"></text></g><g><title>__do_execve_file (1 samples, 0.14%)</title><rect x="99.0251%" y="853" width="0.1393%" height="15" fill="rgb(244,115,12)"/><text x="99.2751%" y="863.50"></text></g><g><title>search_binary_handler.part.0 (1 samples, 0.14%)</title><rect x="99.0251%" y="837" width="0.1393%" height="15" fill="rgb(222,82,18)"/><text x="99.2751%" y="847.50"></text></g><g><title>load_elf_binary (1 samples, 0.14%)</title><rect x="99.0251%" y="821" width="0.1393%" height="15" fill="rgb(249,227,8)"/><text x="99.2751%" y="831.50"></text></g><g><title>elf_map (1 samples, 0.14%)</title><rect x="99.0251%" y="805" width="0.1393%" height="15" fill="rgb(253,141,45)"/><text x="99.2751%" y="815.50"></text></g><g><title>vm_mmap_pgoff (1 samples, 0.14%)</title><rect x="99.0251%" y="789" width="0.1393%" height="15" fill="rgb(234,184,4)"/><text x="99.2751%" y="799.50"></text></g><g><title>do_mmap (1 samples, 0.14%)</title><rect x="99.0251%" y="773" width="0.1393%" height="15" fill="rgb(218,194,23)"/><text x="99.2751%" y="783.50"></text></g><g><title>mmap_region (1 samples, 0.14%)</title><rect x="99.0251%" y="757" width="0.1393%" height="15" fill="rgb(235,66,41)"/><text x="99.2751%" y="767.50"></text></g><g><title>vma_link (1 samples, 0.14%)</title><rect x="99.0251%" y="741" width="0.1393%" height="15" fill="rgb(245,217,1)"/><text x="99.2751%" y="751.50"></text></g><g><title>vma_gap_callbacks_rotate (1 samples, 0.14%)</title><rect x="99.0251%" y="725" width="0.1393%" height="15" fill="rgb(229,91,1)"/><text x="99.2751%" y="735.50"></text></g><g><title>all (718 samples, 100%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(207,101,30)"/><text x="0.2500%" y="959.50"></text></g><g><title>perf (6 samples, 0.84%)</title><rect x="99.1643%" y="933" width="0.8357%" height="15" fill="rgb(223,82,49)"/><text x="99.4143%" y="943.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.84%)</title><rect x="99.1643%" y="917" width="0.8357%" height="15" fill="rgb(218,167,17)"/><text x="99.4143%" y="927.50"></text></g><g><title>do_syscall_64 (6 samples, 0.84%)</title><rect x="99.1643%" y="901" width="0.8357%" height="15" fill="rgb(208,103,14)"/><text x="99.4143%" y="911.50"></text></g><g><title>__x64_sys_execve (6 samples, 0.84%)</title><rect x="99.1643%" y="885" width="0.8357%" height="15" fill="rgb(238,20,8)"/><text x="99.4143%" y="895.50"></text></g><g><title>do_execve (6 samples, 0.84%)</title><rect x="99.1643%" y="869" width="0.8357%" height="15" fill="rgb(218,80,54)"/><text x="99.4143%" y="879.50"></text></g><g><title>__do_execve_file (6 samples, 0.84%)</title><rect x="99.1643%" y="853" width="0.8357%" height="15" fill="rgb(240,144,17)"/><text x="99.4143%" y="863.50"></text></g><g><title>search_binary_handler.part.0 (6 samples, 0.84%)</title><rect x="99.1643%" y="837" width="0.8357%" height="15" fill="rgb(245,27,50)"/><text x="99.4143%" y="847.50"></text></g><g><title>load_elf_binary (6 samples, 0.84%)</title><rect x="99.1643%" y="821" width="0.8357%" height="15" fill="rgb(251,51,7)"/><text x="99.4143%" y="831.50"></text></g><g><title>setup_new_exec (6 samples, 0.84%)</title><rect x="99.1643%" y="805" width="0.8357%" height="15" fill="rgb(245,217,29)"/><text x="99.4143%" y="815.50"></text></g><g><title>perf_event_exec (6 samples, 0.84%)</title><rect x="99.1643%" y="789" width="0.8357%" height="15" fill="rgb(221,176,29)"/><text x="99.4143%" y="799.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.70%)</title><rect x="99.3036%" y="773" width="0.6964%" height="15" fill="rgb(212,180,24)"/><text x="99.5536%" y="783.50"></text></g><g><title>native_write_msr (5 samples, 0.70%)</title><rect x="99.3036%" y="757" width="0.6964%" height="15" fill="rgb(254,24,2)"/><text x="99.5536%" y="767.50"></text></g></svg></svg>