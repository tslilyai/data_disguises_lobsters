<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="998" onload="init(evt)" viewBox="0 0 1200 998" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="998" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="981.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="981.00"> </text><svg id="frames" x="10" width="1180"><g><title>__rdl_alloc (1 samples, 0.10%)</title><rect x="0.0000%" y="901" width="0.1044%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="911.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.10%)</title><rect x="0.0000%" y="885" width="0.1044%" height="15" fill="rgb(217,0,24)"/><text x="0.2500%" y="895.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="0.1044%" y="901" width="0.1044%" height="15" fill="rgb(221,193,54)"/><text x="0.3544%" y="911.50"></text></g><g><title>hwloc_linux_set_tid_cpubind (1 samples, 0.10%)</title><rect x="0.2088%" y="901" width="0.1044%" height="15" fill="rgb(248,212,6)"/><text x="0.4588%" y="911.50"></text></g><g><title>[[heap]] (4 samples, 0.42%)</title><rect x="0.0000%" y="917" width="0.4175%" height="15" fill="rgb(208,68,35)"/><text x="0.2500%" y="927.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.10%)</title><rect x="0.3132%" y="901" width="0.1044%" height="15" fill="rgb(232,128,0)"/><text x="0.5632%" y="911.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.10%)</title><rect x="0.4175%" y="901" width="0.1044%" height="15" fill="rgb(207,160,47)"/><text x="0.6675%" y="911.50"></text></g><g><title>__libc_send (2 samples, 0.21%)</title><rect x="0.5219%" y="901" width="0.2088%" height="15" fill="rgb(228,23,34)"/><text x="0.7719%" y="911.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.21%)</title><rect x="0.5219%" y="885" width="0.2088%" height="15" fill="rgb(218,30,26)"/><text x="0.7719%" y="895.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="0.7307%" y="901" width="0.1044%" height="15" fill="rgb(220,122,19)"/><text x="0.9807%" y="911.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.10%)</title><rect x="0.8351%" y="901" width="0.1044%" height="15" fill="rgb(250,228,42)"/><text x="1.0851%" y="911.50"></text></g><g><title>core::fmt::write (1 samples, 0.10%)</title><rect x="0.9395%" y="901" width="0.1044%" height="15" fill="rgb(240,193,28)"/><text x="1.1895%" y="911.50"></text></g><g><title>[[stack]] (7 samples, 0.73%)</title><rect x="0.4175%" y="917" width="0.7307%" height="15" fill="rgb(216,20,37)"/><text x="0.6675%" y="927.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="1.0438%" y="901" width="0.1044%" height="15" fill="rgb(206,188,39)"/><text x="1.2938%" y="911.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.10%)</title><rect x="1.1482%" y="901" width="0.1044%" height="15" fill="rgb(217,207,13)"/><text x="1.3982%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.21%)</title><rect x="1.2526%" y="901" width="0.2088%" height="15" fill="rgb(231,73,38)"/><text x="1.5026%" y="911.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (1 samples, 0.10%)</title><rect x="1.4614%" y="901" width="0.1044%" height="15" fill="rgb(225,20,46)"/><text x="1.7114%" y="911.50"></text></g><g><title>&lt;mysql::conn::query_result::SetIteratorState as core::convert::From&lt;mysql::conn::query_result::Or&lt;alloc::vec::Vec&lt;mysql_common::packets::Column&gt;,mysql_common::packets::OkPacket&gt;&gt;&gt;::from (1 samples, 0.10%)</title><rect x="1.5658%" y="901" width="0.1044%" height="15" fill="rgb(210,31,41)"/><text x="1.8158%" y="911.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="1.6701%" y="901" width="0.1044%" height="15" fill="rgb(221,200,47)"/><text x="1.9201%" y="911.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.10%)</title><rect x="1.7745%" y="901" width="0.1044%" height="15" fill="rgb(226,26,5)"/><text x="2.0245%" y="911.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.10%)</title><rect x="1.8789%" y="901" width="0.1044%" height="15" fill="rgb(249,33,26)"/><text x="2.1289%" y="911.50"></text></g><g><title>std::sys_common::net::TcpStream::read (1 samples, 0.10%)</title><rect x="1.8789%" y="885" width="0.1044%" height="15" fill="rgb(235,183,28)"/><text x="2.1289%" y="895.50"></text></g><g><title>std::sys::unix::net::Socket::read (1 samples, 0.10%)</title><rect x="1.8789%" y="869" width="0.1044%" height="15" fill="rgb(221,5,38)"/><text x="2.1289%" y="879.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (1 samples, 0.10%)</title><rect x="1.8789%" y="853" width="0.1044%" height="15" fill="rgb(247,18,42)"/><text x="2.1289%" y="863.50"></text></g><g><title>__libc_recv (1 samples, 0.10%)</title><rect x="1.8789%" y="837" width="0.1044%" height="15" fill="rgb(241,131,45)"/><text x="2.1289%" y="847.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.10%)</title><rect x="1.8789%" y="821" width="0.1044%" height="15" fill="rgb(249,31,29)"/><text x="2.1289%" y="831.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="1.9833%" y="901" width="0.1044%" height="15" fill="rgb(225,111,53)"/><text x="2.2333%" y="911.50"></text></g><g><title>__rdl_realloc (1 samples, 0.10%)</title><rect x="2.0877%" y="901" width="0.1044%" height="15" fill="rgb(238,160,17)"/><text x="2.3377%" y="911.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.10%)</title><rect x="2.0877%" y="885" width="0.1044%" height="15" fill="rgb(214,148,48)"/><text x="2.3377%" y="895.50"></text></g><g><title>_int_free (2 samples, 0.21%)</title><rect x="2.1921%" y="901" width="0.2088%" height="15" fill="rgb(232,36,49)"/><text x="2.4421%" y="911.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="2.4008%" y="901" width="0.1044%" height="15" fill="rgb(209,103,24)"/><text x="2.6508%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="2.5052%" y="901" width="0.1044%" height="15" fill="rgb(229,88,8)"/><text x="2.7552%" y="911.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.10%)</title><rect x="2.6096%" y="901" width="0.1044%" height="15" fill="rgb(213,181,19)"/><text x="2.8596%" y="911.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="2.7140%" y="901" width="0.1044%" height="15" fill="rgb(254,191,54)"/><text x="2.9640%" y="911.50"></text></g><g><title>decor::helpers::answer_rows (3 samples, 0.31%)</title><rect x="2.8184%" y="901" width="0.3132%" height="15" fill="rgb(241,83,37)"/><text x="3.0684%" y="911.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.10%)</title><rect x="3.1315%" y="901" width="0.1044%" height="15" fill="rgb(233,36,39)"/><text x="3.3815%" y="911.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (1 samples, 0.10%)</title><rect x="3.2359%" y="901" width="0.1044%" height="15" fill="rgb(226,3,54)"/><text x="3.4859%" y="911.50"></text></g><g><title>sql_parser::parser::Parser::expect_token (1 samples, 0.10%)</title><rect x="3.3403%" y="901" width="0.1044%" height="15" fill="rgb(245,192,40)"/><text x="3.5903%" y="911.50"></text></g><g><title>sql_parser::parser::Parser::expected (1 samples, 0.10%)</title><rect x="3.4447%" y="901" width="0.1044%" height="15" fill="rgb(238,167,29)"/><text x="3.6947%" y="911.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.10%)</title><rect x="3.4447%" y="885" width="0.1044%" height="15" fill="rgb(232,182,51)"/><text x="3.6947%" y="895.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.10%)</title><rect x="3.4447%" y="869" width="0.1044%" height="15" fill="rgb(231,60,39)"/><text x="3.6947%" y="879.50"></text></g><g><title>core::fmt::write (1 samples, 0.10%)</title><rect x="3.4447%" y="853" width="0.1044%" height="15" fill="rgb(208,69,12)"/><text x="3.6947%" y="863.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="3.4447%" y="837" width="0.1044%" height="15" fill="rgb(235,93,37)"/><text x="3.6947%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="3.4447%" y="821" width="0.1044%" height="15" fill="rgb(213,116,39)"/><text x="3.6947%" y="831.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.10%)</title><rect x="3.4447%" y="805" width="0.1044%" height="15" fill="rgb(222,207,29)"/><text x="3.6947%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="3.4447%" y="789" width="0.1044%" height="15" fill="rgb(206,96,30)"/><text x="3.6947%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="3.4447%" y="773" width="0.1044%" height="15" fill="rgb(218,138,4)"/><text x="3.6947%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.10%)</title><rect x="3.4447%" y="757" width="0.1044%" height="15" fill="rgb(250,191,14)"/><text x="3.6947%" y="767.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.10%)</title><rect x="3.4447%" y="741" width="0.1044%" height="15" fill="rgb(239,60,40)"/><text x="3.6947%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.10%)</title><rect x="3.4447%" y="725" width="0.1044%" height="15" fill="rgb(206,27,48)"/><text x="3.6947%" y="735.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.10%)</title><rect x="3.4447%" y="709" width="0.1044%" height="15" fill="rgb(225,35,8)"/><text x="3.6947%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_identifier (1 samples, 0.10%)</title><rect x="3.5491%" y="901" width="0.1044%" height="15" fill="rgb(250,213,24)"/><text x="3.7991%" y="911.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (1 samples, 0.10%)</title><rect x="3.6534%" y="901" width="0.1044%" height="15" fill="rgb(247,123,22)"/><text x="3.9034%" y="911.50"></text></g><g><title>sql_parser::parser::Parser::parse_parenthesized_column_list (1 samples, 0.10%)</title><rect x="3.7578%" y="901" width="0.1044%" height="15" fill="rgb(231,138,38)"/><text x="4.0078%" y="911.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (1 samples, 0.10%)</title><rect x="3.8622%" y="901" width="0.1044%" height="15" fill="rgb(231,145,46)"/><text x="4.1122%" y="911.50"></text></g><g><title>[anon] (30 samples, 3.13%)</title><rect x="1.1482%" y="917" width="3.1315%" height="15" fill="rgb(251,118,11)"/><text x="1.3982%" y="927.50">[an..</text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (3 samples, 0.31%)</title><rect x="3.9666%" y="901" width="0.3132%" height="15" fill="rgb(217,147,25)"/><text x="4.2166%" y="911.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="4.2797%" y="901" width="0.1044%" height="15" fill="rgb(247,81,37)"/><text x="4.5297%" y="911.50"></text></g><g><title>[lobsters] (2 samples, 0.21%)</title><rect x="4.2797%" y="917" width="0.2088%" height="15" fill="rgb(209,12,38)"/><text x="4.5297%" y="927.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.10%)</title><rect x="4.3841%" y="901" width="0.1044%" height="15" fill="rgb(227,1,9)"/><text x="4.6341%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="4.4885%" y="901" width="0.1044%" height="15" fill="rgb(248,47,43)"/><text x="4.7385%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="4.5929%" y="821" width="0.1044%" height="15" fill="rgb(221,10,30)"/><text x="4.8429%" y="831.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.10%)</title><rect x="4.5929%" y="805" width="0.1044%" height="15" fill="rgb(210,229,1)"/><text x="4.8429%" y="815.50"></text></g><g><title>_int_realloc (1 samples, 0.10%)</title><rect x="4.5929%" y="789" width="0.1044%" height="15" fill="rgb(222,148,37)"/><text x="4.8429%" y="799.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="4.5929%" y="773" width="0.1044%" height="15" fill="rgb(234,67,33)"/><text x="4.8429%" y="783.50"></text></g><g><title>sysmalloc (1 samples, 0.10%)</title><rect x="4.5929%" y="757" width="0.1044%" height="15" fill="rgb(247,98,35)"/><text x="4.8429%" y="767.50"></text></g><g><title>__GI___mprotect (1 samples, 0.10%)</title><rect x="4.5929%" y="741" width="0.1044%" height="15" fill="rgb(247,138,52)"/><text x="4.8429%" y="751.50"></text></g><g><title>error_entry (1 samples, 0.10%)</title><rect x="4.5929%" y="725" width="0.1044%" height="15" fill="rgb(213,79,30)"/><text x="4.8429%" y="735.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (2 samples, 0.21%)</title><rect x="4.5929%" y="901" width="0.2088%" height="15" fill="rgb(246,177,23)"/><text x="4.8429%" y="911.50"></text></g><g><title>decor::Shim::create_schema (2 samples, 0.21%)</title><rect x="4.5929%" y="885" width="0.2088%" height="15" fill="rgb(230,62,27)"/><text x="4.8429%" y="895.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (2 samples, 0.21%)</title><rect x="4.5929%" y="869" width="0.2088%" height="15" fill="rgb(216,154,8)"/><text x="4.8429%" y="879.50"></text></g><g><title>sql_parser::parser::parse_statements (2 samples, 0.21%)</title><rect x="4.5929%" y="853" width="0.2088%" height="15" fill="rgb(244,35,45)"/><text x="4.8429%" y="863.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (2 samples, 0.21%)</title><rect x="4.5929%" y="837" width="0.2088%" height="15" fill="rgb(251,115,12)"/><text x="4.8429%" y="847.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (1 samples, 0.10%)</title><rect x="4.6973%" y="821" width="0.1044%" height="15" fill="rgb(240,54,50)"/><text x="4.9473%" y="831.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (1 samples, 0.10%)</title><rect x="4.6973%" y="805" width="0.1044%" height="15" fill="rgb(233,84,52)"/><text x="4.9473%" y="815.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.10%)</title><rect x="4.6973%" y="789" width="0.1044%" height="15" fill="rgb(207,117,47)"/><text x="4.9473%" y="799.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (1 samples, 0.10%)</title><rect x="4.6973%" y="773" width="0.1044%" height="15" fill="rgb(249,43,39)"/><text x="4.9473%" y="783.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (1 samples, 0.10%)</title><rect x="4.6973%" y="757" width="0.1044%" height="15" fill="rgb(209,38,44)"/><text x="4.9473%" y="767.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.10%)</title><rect x="4.6973%" y="741" width="0.1044%" height="15" fill="rgb(236,212,23)"/><text x="4.9473%" y="751.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (1 samples, 0.10%)</title><rect x="4.6973%" y="725" width="0.1044%" height="15" fill="rgb(242,79,21)"/><text x="4.9473%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="4.8017%" y="709" width="0.1044%" height="15" fill="rgb(211,96,35)"/><text x="5.0517%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="4.8017%" y="693" width="0.1044%" height="15" fill="rgb(253,215,40)"/><text x="5.0517%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.10%)</title><rect x="4.8017%" y="677" width="0.1044%" height="15" fill="rgb(211,81,21)"/><text x="5.0517%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.10%)</title><rect x="4.8017%" y="661" width="0.1044%" height="15" fill="rgb(208,190,38)"/><text x="5.0517%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (4 samples, 0.42%)</title><rect x="4.8017%" y="789" width="0.4175%" height="15" fill="rgb(235,213,38)"/><text x="5.0517%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.42%)</title><rect x="4.8017%" y="773" width="0.4175%" height="15" fill="rgb(237,122,38)"/><text x="5.0517%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.42%)</title><rect x="4.8017%" y="757" width="0.4175%" height="15" fill="rgb(244,218,35)"/><text x="5.0517%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (4 samples, 0.42%)</title><rect x="4.8017%" y="741" width="0.4175%" height="15" fill="rgb(240,68,47)"/><text x="5.0517%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.42%)</title><rect x="4.8017%" y="725" width="0.4175%" height="15" fill="rgb(210,16,53)"/><text x="5.0517%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.31%)</title><rect x="4.9061%" y="709" width="0.3132%" height="15" fill="rgb(235,124,12)"/><text x="5.1561%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.31%)</title><rect x="4.9061%" y="693" width="0.3132%" height="15" fill="rgb(224,169,11)"/><text x="5.1561%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.31%)</title><rect x="4.9061%" y="677" width="0.3132%" height="15" fill="rgb(250,166,2)"/><text x="5.1561%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.31%)</title><rect x="4.9061%" y="661" width="0.3132%" height="15" fill="rgb(242,216,29)"/><text x="5.1561%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (3 samples, 0.31%)</title><rect x="4.9061%" y="645" width="0.3132%" height="15" fill="rgb(230,116,27)"/><text x="5.1561%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.31%)</title><rect x="4.9061%" y="629" width="0.3132%" height="15" fill="rgb(228,99,48)"/><text x="5.1561%" y="639.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.31%)</title><rect x="4.9061%" y="613" width="0.3132%" height="15" fill="rgb(253,11,6)"/><text x="5.1561%" y="623.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.31%)</title><rect x="4.9061%" y="597" width="0.3132%" height="15" fill="rgb(247,143,39)"/><text x="5.1561%" y="607.50"></text></g><g><title>_int_malloc (2 samples, 0.21%)</title><rect x="5.0104%" y="581" width="0.2088%" height="15" fill="rgb(236,97,10)"/><text x="5.2604%" y="591.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (6 samples, 0.63%)</title><rect x="4.8017%" y="901" width="0.6263%" height="15" fill="rgb(233,208,19)"/><text x="5.0517%" y="911.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (6 samples, 0.63%)</title><rect x="4.8017%" y="885" width="0.6263%" height="15" fill="rgb(216,164,2)"/><text x="5.0517%" y="895.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (6 samples, 0.63%)</title><rect x="4.8017%" y="869" width="0.6263%" height="15" fill="rgb(220,129,5)"/><text x="5.0517%" y="879.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (6 samples, 0.63%)</title><rect x="4.8017%" y="853" width="0.6263%" height="15" fill="rgb(242,17,10)"/><text x="5.0517%" y="863.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (6 samples, 0.63%)</title><rect x="4.8017%" y="837" width="0.6263%" height="15" fill="rgb(242,107,0)"/><text x="5.0517%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (6 samples, 0.63%)</title><rect x="4.8017%" y="821" width="0.6263%" height="15" fill="rgb(251,28,31)"/><text x="5.0517%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (6 samples, 0.63%)</title><rect x="4.8017%" y="805" width="0.6263%" height="15" fill="rgb(233,223,10)"/><text x="5.0517%" y="815.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.21%)</title><rect x="5.2192%" y="789" width="0.2088%" height="15" fill="rgb(215,21,27)"/><text x="5.4692%" y="799.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="5.3236%" y="773" width="0.1044%" height="15" fill="rgb(232,23,21)"/><text x="5.5736%" y="783.50"></text></g><g><title>sysmalloc (1 samples, 0.10%)</title><rect x="5.3236%" y="757" width="0.1044%" height="15" fill="rgb(244,5,23)"/><text x="5.5736%" y="767.50"></text></g><g><title>page_fault (1 samples, 0.10%)</title><rect x="5.3236%" y="741" width="0.1044%" height="15" fill="rgb(226,81,46)"/><text x="5.5736%" y="751.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.10%)</title><rect x="5.3236%" y="725" width="0.1044%" height="15" fill="rgb(247,70,30)"/><text x="5.5736%" y="735.50"></text></g><g><title>handle_mm_fault (1 samples, 0.10%)</title><rect x="5.3236%" y="709" width="0.1044%" height="15" fill="rgb(212,68,19)"/><text x="5.5736%" y="719.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.10%)</title><rect x="5.3236%" y="693" width="0.1044%" height="15" fill="rgb(240,187,13)"/><text x="5.5736%" y="703.50"></text></g><g><title>lru_cache_add_active_or_unevictable (1 samples, 0.10%)</title><rect x="5.3236%" y="677" width="0.1044%" height="15" fill="rgb(223,113,26)"/><text x="5.5736%" y="687.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="5.4280%" y="901" width="0.1044%" height="15" fill="rgb(206,192,2)"/><text x="5.6780%" y="911.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.21%)</title><rect x="5.5324%" y="901" width="0.2088%" height="15" fill="rgb(241,108,4)"/><text x="5.7824%" y="911.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.10%)</title><rect x="5.7411%" y="901" width="0.1044%" height="15" fill="rgb(247,173,49)"/><text x="5.9911%" y="911.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.21%)</title><rect x="5.8455%" y="901" width="0.2088%" height="15" fill="rgb(224,114,35)"/><text x="6.0955%" y="911.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.10%)</title><rect x="6.0543%" y="741" width="0.1044%" height="15" fill="rgb(245,159,27)"/><text x="6.3043%" y="751.50"></text></g><g><title>hwloc_topology_destroy (1 samples, 0.10%)</title><rect x="6.0543%" y="725" width="0.1044%" height="15" fill="rgb(245,172,44)"/><text x="6.3043%" y="735.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.10%)</title><rect x="6.0543%" y="709" width="0.1044%" height="15" fill="rgb(236,23,11)"/><text x="6.3043%" y="719.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.10%)</title><rect x="6.0543%" y="693" width="0.1044%" height="15" fill="rgb(205,117,38)"/><text x="6.3043%" y="703.50"></text></g><g><title>dlclose (1 samples, 0.10%)</title><rect x="6.0543%" y="677" width="0.1044%" height="15" fill="rgb(237,72,25)"/><text x="6.3043%" y="687.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.10%)</title><rect x="6.0543%" y="661" width="0.1044%" height="15" fill="rgb(244,70,9)"/><text x="6.3043%" y="671.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.10%)</title><rect x="6.0543%" y="645" width="0.1044%" height="15" fill="rgb(217,125,39)"/><text x="6.3043%" y="655.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.10%)</title><rect x="6.0543%" y="629" width="0.1044%" height="15" fill="rgb(235,36,10)"/><text x="6.3043%" y="639.50"></text></g><g><title>_dl_close (1 samples, 0.10%)</title><rect x="6.0543%" y="613" width="0.1044%" height="15" fill="rgb(251,123,47)"/><text x="6.3043%" y="623.50"></text></g><g><title>_dl_close_worker (1 samples, 0.10%)</title><rect x="6.0543%" y="597" width="0.1044%" height="15" fill="rgb(221,13,13)"/><text x="6.3043%" y="607.50"></text></g><g><title>_dl_unmap (1 samples, 0.10%)</title><rect x="6.0543%" y="581" width="0.1044%" height="15" fill="rgb(238,131,9)"/><text x="6.3043%" y="591.50"></text></g><g><title>munmap (1 samples, 0.10%)</title><rect x="6.0543%" y="565" width="0.1044%" height="15" fill="rgb(211,50,8)"/><text x="6.3043%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.10%)</title><rect x="6.0543%" y="549" width="0.1044%" height="15" fill="rgb(245,182,24)"/><text x="6.3043%" y="559.50"></text></g><g><title>do_syscall_64 (1 samples, 0.10%)</title><rect x="6.0543%" y="533" width="0.1044%" height="15" fill="rgb(242,14,37)"/><text x="6.3043%" y="543.50"></text></g><g><title>__x64_sys_munmap (1 samples, 0.10%)</title><rect x="6.0543%" y="517" width="0.1044%" height="15" fill="rgb(246,228,12)"/><text x="6.3043%" y="527.50"></text></g><g><title>__vm_munmap (1 samples, 0.10%)</title><rect x="6.0543%" y="501" width="0.1044%" height="15" fill="rgb(213,55,15)"/><text x="6.3043%" y="511.50"></text></g><g><title>__do_munmap (1 samples, 0.10%)</title><rect x="6.0543%" y="485" width="0.1044%" height="15" fill="rgb(209,9,3)"/><text x="6.3043%" y="495.50"></text></g><g><title>unmap_region (1 samples, 0.10%)</title><rect x="6.0543%" y="469" width="0.1044%" height="15" fill="rgb(230,59,30)"/><text x="6.3043%" y="479.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.10%)</title><rect x="6.0543%" y="453" width="0.1044%" height="15" fill="rgb(209,121,21)"/><text x="6.3043%" y="463.50"></text></g><g><title>flush_tlb_mm_range (1 samples, 0.10%)</title><rect x="6.0543%" y="437" width="0.1044%" height="15" fill="rgb(220,109,13)"/><text x="6.3043%" y="447.50"></text></g><g><title>flush_tlb_func_common.constprop.0 (1 samples, 0.10%)</title><rect x="6.0543%" y="421" width="0.1044%" height="15" fill="rgb(232,18,1)"/><text x="6.3043%" y="431.50"></text></g><g><title>native_flush_tlb_one_user (1 samples, 0.10%)</title><rect x="6.0543%" y="405" width="0.1044%" height="15" fill="rgb(215,41,42)"/><text x="6.3043%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.10%)</title><rect x="6.1587%" y="693" width="0.1044%" height="15" fill="rgb(224,123,36)"/><text x="6.4087%" y="703.50"></text></g><g><title>&lt;std::io::buffered::BufWriter&lt;W&gt;::flush_buf::BufGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="6.2630%" y="677" width="0.1044%" height="15" fill="rgb(240,125,3)"/><text x="6.5130%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::drain (1 samples, 0.10%)</title><rect x="6.2630%" y="661" width="0.1044%" height="15" fill="rgb(205,98,50)"/><text x="6.5130%" y="671.50"></text></g><g><title>lock_sock_nested (1 samples, 0.10%)</title><rect x="6.4718%" y="533" width="0.1044%" height="15" fill="rgb(205,185,37)"/><text x="6.7218%" y="543.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.10%)</title><rect x="6.4718%" y="517" width="0.1044%" height="15" fill="rgb(238,207,15)"/><text x="6.7218%" y="527.50"></text></g><g><title>release_sock (1 samples, 0.10%)</title><rect x="6.5762%" y="533" width="0.1044%" height="15" fill="rgb(213,199,42)"/><text x="6.8262%" y="543.50"></text></g><g><title>__ip_local_out (1 samples, 0.10%)</title><rect x="7.9332%" y="453" width="0.1044%" height="15" fill="rgb(235,201,11)"/><text x="8.1832%" y="463.50"></text></g><g><title>ip_send_check (1 samples, 0.10%)</title><rect x="7.9332%" y="437" width="0.1044%" height="15" fill="rgb(207,46,11)"/><text x="8.1832%" y="447.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.10%)</title><rect x="8.0376%" y="453" width="0.1044%" height="15" fill="rgb(241,35,35)"/><text x="8.2876%" y="463.50"></text></g><g><title>__sk_dst_check (1 samples, 0.10%)</title><rect x="8.1420%" y="453" width="0.1044%" height="15" fill="rgb(243,32,47)"/><text x="8.3920%" y="463.50"></text></g><g><title>ipv4_dst_check (1 samples, 0.10%)</title><rect x="8.1420%" y="437" width="0.1044%" height="15" fill="rgb(247,202,23)"/><text x="8.3920%" y="447.50"></text></g><g><title>__ip_finish_output (1 samples, 0.10%)</title><rect x="8.2463%" y="437" width="0.1044%" height="15" fill="rgb(219,102,11)"/><text x="8.4963%" y="447.50"></text></g><g><title>enqueue_to_backlog (1 samples, 0.10%)</title><rect x="8.7683%" y="341" width="0.1044%" height="15" fill="rgb(243,110,44)"/><text x="9.0183%" y="351.50"></text></g><g><title>netif_rx (2 samples, 0.21%)</title><rect x="8.7683%" y="373" width="0.2088%" height="15" fill="rgb(222,74,54)"/><text x="9.0183%" y="383.50"></text></g><g><title>netif_rx_internal (2 samples, 0.21%)</title><rect x="8.7683%" y="357" width="0.2088%" height="15" fill="rgb(216,99,12)"/><text x="9.0183%" y="367.50"></text></g><g><title>ktime_get_with_offset (1 samples, 0.10%)</title><rect x="8.8727%" y="341" width="0.1044%" height="15" fill="rgb(226,22,26)"/><text x="9.1227%" y="351.50"></text></g><g><title>read_tsc (1 samples, 0.10%)</title><rect x="8.8727%" y="325" width="0.1044%" height="15" fill="rgb(217,163,10)"/><text x="9.1227%" y="335.50"></text></g><g><title>dev_hard_start_xmit (4 samples, 0.42%)</title><rect x="8.6639%" y="405" width="0.4175%" height="15" fill="rgb(213,25,53)"/><text x="8.9139%" y="415.50"></text></g><g><title>loopback_xmit (3 samples, 0.31%)</title><rect x="8.7683%" y="389" width="0.3132%" height="15" fill="rgb(252,105,26)"/><text x="9.0183%" y="399.50"></text></g><g><title>tcp_wfree (1 samples, 0.10%)</title><rect x="8.9770%" y="373" width="0.1044%" height="15" fill="rgb(220,39,43)"/><text x="9.2270%" y="383.50"></text></g><g><title>__dev_queue_xmit (8 samples, 0.84%)</title><rect x="8.5595%" y="421" width="0.8351%" height="15" fill="rgb(229,68,48)"/><text x="8.8095%" y="431.50"></text></g><g><title>validate_xmit_skb (3 samples, 0.31%)</title><rect x="9.0814%" y="405" width="0.3132%" height="15" fill="rgb(252,8,32)"/><text x="9.3314%" y="415.50"></text></g><g><title>netif_skb_features (2 samples, 0.21%)</title><rect x="9.1858%" y="389" width="0.2088%" height="15" fill="rgb(223,20,43)"/><text x="9.4358%" y="399.50"></text></g><g><title>irqtime_account_irq (2 samples, 0.21%)</title><rect x="10.1253%" y="357" width="0.2088%" height="15" fill="rgb(229,81,49)"/><text x="10.3753%" y="367.50"></text></g><g><title>__netif_receive_skb_core (3 samples, 0.31%)</title><rect x="10.5428%" y="309" width="0.3132%" height="15" fill="rgb(236,28,36)"/><text x="10.7928%" y="319.50"></text></g><g><title>raw_local_deliver (1 samples, 0.10%)</title><rect x="11.1691%" y="245" width="0.1044%" height="15" fill="rgb(249,185,26)"/><text x="11.4191%" y="255.50"></text></g><g><title>__inet_lookup_established (3 samples, 0.31%)</title><rect x="11.7954%" y="229" width="0.3132%" height="15" fill="rgb(249,174,33)"/><text x="12.0454%" y="239.50"></text></g><g><title>sk_filter_trim_cap (2 samples, 0.21%)</title><rect x="12.1086%" y="229" width="0.2088%" height="15" fill="rgb(233,201,37)"/><text x="12.3586%" y="239.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (2 samples, 0.21%)</title><rect x="12.1086%" y="213" width="0.2088%" height="15" fill="rgb(221,78,26)"/><text x="12.3586%" y="223.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.10%)</title><rect x="12.2129%" y="197" width="0.1044%" height="15" fill="rgb(250,127,30)"/><text x="12.4629%" y="207.50"></text></g><g><title>__tcp_ack_snd_check (3 samples, 0.31%)</title><rect x="12.5261%" y="197" width="0.3132%" height="15" fill="rgb(230,49,44)"/><text x="12.7761%" y="207.50"></text></g><g><title>_raw_spin_lock (4 samples, 0.42%)</title><rect x="13.3612%" y="133" width="0.4175%" height="15" fill="rgb(229,67,23)"/><text x="13.6112%" y="143.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.10%)</title><rect x="13.7787%" y="133" width="0.1044%" height="15" fill="rgb(249,83,47)"/><text x="14.0287%" y="143.50"></text></g><g><title>psi_task_change (10 samples, 1.04%)</title><rect x="13.8831%" y="117" width="1.0438%" height="15" fill="rgb(215,43,3)"/><text x="14.1331%" y="127.50"></text></g><g><title>psi_group_change (9 samples, 0.94%)</title><rect x="13.9875%" y="101" width="0.9395%" height="15" fill="rgb(238,154,13)"/><text x="14.2375%" y="111.50"></text></g><g><title>record_times (2 samples, 0.21%)</title><rect x="14.7182%" y="85" width="0.2088%" height="15" fill="rgb(219,56,2)"/><text x="14.9682%" y="95.50"></text></g><g><title>sched_clock_cpu (2 samples, 0.21%)</title><rect x="14.7182%" y="69" width="0.2088%" height="15" fill="rgb(233,0,4)"/><text x="14.9682%" y="79.50"></text></g><g><title>sched_clock (2 samples, 0.21%)</title><rect x="14.7182%" y="53" width="0.2088%" height="15" fill="rgb(235,30,7)"/><text x="14.9682%" y="63.50"></text></g><g><title>native_sched_clock (2 samples, 0.21%)</title><rect x="14.7182%" y="37" width="0.2088%" height="15" fill="rgb(250,79,13)"/><text x="14.9682%" y="47.50"></text></g><g><title>enqueue_task (11 samples, 1.15%)</title><rect x="13.8831%" y="133" width="1.1482%" height="15" fill="rgb(211,146,34)"/><text x="14.1331%" y="143.50"></text></g><g><title>uclamp_rq_inc_id (1 samples, 0.10%)</title><rect x="14.9269%" y="117" width="0.1044%" height="15" fill="rgb(228,22,38)"/><text x="15.1769%" y="127.50"></text></g><g><title>reweight_entity (1 samples, 0.10%)</title><rect x="15.4489%" y="101" width="0.1044%" height="15" fill="rgb(235,168,5)"/><text x="15.6989%" y="111.50"></text></g><g><title>enqueue_task_fair (7 samples, 0.73%)</title><rect x="15.0313%" y="133" width="0.7307%" height="15" fill="rgb(221,155,16)"/><text x="15.2813%" y="143.50"></text></g><g><title>enqueue_entity (7 samples, 0.73%)</title><rect x="15.0313%" y="117" width="0.7307%" height="15" fill="rgb(215,215,53)"/><text x="15.2813%" y="127.50"></text></g><g><title>update_load_avg (2 samples, 0.21%)</title><rect x="15.5532%" y="101" width="0.2088%" height="15" fill="rgb(223,4,10)"/><text x="15.8032%" y="111.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.10%)</title><rect x="15.6576%" y="85" width="0.1044%" height="15" fill="rgb(234,103,6)"/><text x="15.9076%" y="95.50"></text></g><g><title>find_first_bit (2 samples, 0.21%)</title><rect x="15.7620%" y="133" width="0.2088%" height="15" fill="rgb(227,97,0)"/><text x="16.0120%" y="143.50"></text></g><g><title>preempt_count_add (1 samples, 0.10%)</title><rect x="15.9708%" y="133" width="0.1044%" height="15" fill="rgb(234,150,53)"/><text x="16.2208%" y="143.50"></text></g><g><title>ttwu_do_wakeup (3 samples, 0.31%)</title><rect x="16.0752%" y="133" width="0.3132%" height="15" fill="rgb(228,201,54)"/><text x="16.3252%" y="143.50"></text></g><g><title>check_preempt_curr (3 samples, 0.31%)</title><rect x="16.0752%" y="117" width="0.3132%" height="15" fill="rgb(222,22,37)"/><text x="16.3252%" y="127.50"></text></g><g><title>resched_curr (3 samples, 0.31%)</title><rect x="16.0752%" y="101" width="0.3132%" height="15" fill="rgb(237,53,32)"/><text x="16.3252%" y="111.50"></text></g><g><title>__wake_up_common (37 samples, 3.86%)</title><rect x="13.0480%" y="165" width="3.8622%" height="15" fill="rgb(233,25,53)"/><text x="13.2980%" y="175.50">__wa..</text></g><g><title>try_to_wake_up (37 samples, 3.86%)</title><rect x="13.0480%" y="149" width="3.8622%" height="15" fill="rgb(210,40,34)"/><text x="13.2980%" y="159.50">try_..</text></g><g><title>update_rq_clock (5 samples, 0.52%)</title><rect x="16.3883%" y="133" width="0.5219%" height="15" fill="rgb(241,220,44)"/><text x="16.6383%" y="143.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.10%)</title><rect x="16.8058%" y="117" width="0.1044%" height="15" fill="rgb(235,28,35)"/><text x="17.0558%" y="127.50"></text></g><g><title>sched_clock (1 samples, 0.10%)</title><rect x="16.8058%" y="101" width="0.1044%" height="15" fill="rgb(210,56,17)"/><text x="17.0558%" y="111.50"></text></g><g><title>native_sched_clock (1 samples, 0.10%)</title><rect x="16.8058%" y="85" width="0.1044%" height="15" fill="rgb(224,130,29)"/><text x="17.0558%" y="95.50"></text></g><g><title>sock_def_readable (41 samples, 4.28%)</title><rect x="12.8392%" y="197" width="4.2797%" height="15" fill="rgb(235,212,8)"/><text x="13.0892%" y="207.50">sock_..</text></g><g><title>__wake_up_common_lock (40 samples, 4.18%)</title><rect x="12.9436%" y="181" width="4.1754%" height="15" fill="rgb(223,33,50)"/><text x="13.1936%" y="191.50">__wak..</text></g><g><title>_raw_spin_lock_irqsave (2 samples, 0.21%)</title><rect x="16.9102%" y="165" width="0.2088%" height="15" fill="rgb(219,149,13)"/><text x="17.1602%" y="175.50"></text></g><g><title>kfree (1 samples, 0.10%)</title><rect x="17.3278%" y="165" width="0.1044%" height="15" fill="rgb(250,156,29)"/><text x="17.5778%" y="175.50"></text></g><g><title>__slab_free (1 samples, 0.10%)</title><rect x="17.3278%" y="149" width="0.1044%" height="15" fill="rgb(216,193,19)"/><text x="17.5778%" y="159.50"></text></g><g><title>skb_release_data (4 samples, 0.42%)</title><rect x="17.4322%" y="165" width="0.4175%" height="15" fill="rgb(216,135,14)"/><text x="17.6822%" y="175.50"></text></g><g><title>__kfree_skb (6 samples, 0.63%)</title><rect x="17.3278%" y="181" width="0.6263%" height="15" fill="rgb(241,47,5)"/><text x="17.5778%" y="191.50"></text></g><g><title>skb_release_head_state (1 samples, 0.10%)</title><rect x="17.8497%" y="165" width="0.1044%" height="15" fill="rgb(233,42,35)"/><text x="18.0997%" y="175.50"></text></g><g><title>bictcp_acked (1 samples, 0.10%)</title><rect x="17.9541%" y="181" width="0.1044%" height="15" fill="rgb(231,13,6)"/><text x="18.2041%" y="191.50"></text></g><g><title>bictcp_cong_avoid (1 samples, 0.10%)</title><rect x="18.0585%" y="181" width="0.1044%" height="15" fill="rgb(207,181,40)"/><text x="18.3085%" y="191.50"></text></g><g><title>kmem_cache_free (2 samples, 0.21%)</title><rect x="18.1628%" y="181" width="0.2088%" height="15" fill="rgb(254,173,49)"/><text x="18.4128%" y="191.50"></text></g><g><title>rb_first (1 samples, 0.10%)</title><rect x="18.3716%" y="181" width="0.1044%" height="15" fill="rgb(221,1,38)"/><text x="18.6216%" y="191.50"></text></g><g><title>tcp_rate_gen (1 samples, 0.10%)</title><rect x="18.4760%" y="181" width="0.1044%" height="15" fill="rgb(206,124,46)"/><text x="18.7260%" y="191.50"></text></g><g><title>tcp_rearm_rto (1 samples, 0.10%)</title><rect x="18.5804%" y="181" width="0.1044%" height="15" fill="rgb(249,21,11)"/><text x="18.8304%" y="191.50"></text></g><g><title>tcp_ack (17 samples, 1.77%)</title><rect x="17.1190%" y="197" width="1.7745%" height="15" fill="rgb(222,201,40)"/><text x="17.3690%" y="207.50">t..</text></g><g><title>tcp_update_pacing_rate (2 samples, 0.21%)</title><rect x="18.6848%" y="181" width="0.2088%" height="15" fill="rgb(235,61,29)"/><text x="18.9348%" y="191.50"></text></g><g><title>tcp_grow_window (2 samples, 0.21%)</title><rect x="18.8935%" y="197" width="0.2088%" height="15" fill="rgb(219,207,3)"/><text x="19.1435%" y="207.50"></text></g><g><title>tcp_v4_do_rcv (66 samples, 6.89%)</title><rect x="12.3173%" y="229" width="6.8894%" height="15" fill="rgb(222,56,46)"/><text x="12.5673%" y="239.50">tcp_v4_do..</text></g><g><title>tcp_rcv_established (66 samples, 6.89%)</title><rect x="12.3173%" y="213" width="6.8894%" height="15" fill="rgb(239,76,54)"/><text x="12.5673%" y="223.50">tcp_rcv_e..</text></g><g><title>tcp_send_delayed_ack (1 samples, 0.10%)</title><rect x="19.1023%" y="197" width="0.1044%" height="15" fill="rgb(231,124,27)"/><text x="19.3523%" y="207.50"></text></g><g><title>ip_local_deliver (80 samples, 8.35%)</title><rect x="10.9603%" y="293" width="8.3507%" height="15" fill="rgb(249,195,6)"/><text x="11.2103%" y="303.50">ip_local_del..</text></g><g><title>ip_local_deliver_finish (79 samples, 8.25%)</title><rect x="11.0647%" y="277" width="8.2463%" height="15" fill="rgb(237,174,47)"/><text x="11.3147%" y="287.50">ip_local_de..</text></g><g><title>ip_protocol_deliver_rcu (79 samples, 8.25%)</title><rect x="11.0647%" y="261" width="8.2463%" height="15" fill="rgb(206,201,31)"/><text x="11.3147%" y="271.50">ip_protocol..</text></g><g><title>tcp_v4_rcv (77 samples, 8.04%)</title><rect x="11.2735%" y="245" width="8.0376%" height="15" fill="rgb(231,57,52)"/><text x="11.5235%" y="255.50">tcp_v4_rcv</text></g><g><title>tcp_v4_inbound_md5_hash (1 samples, 0.10%)</title><rect x="19.2067%" y="229" width="0.1044%" height="15" fill="rgb(248,177,22)"/><text x="19.4567%" y="239.50"></text></g><g><title>__netif_receive_skb_one_core (86 samples, 8.98%)</title><rect x="10.5428%" y="325" width="8.9770%" height="15" fill="rgb(215,211,37)"/><text x="10.7928%" y="335.50">__netif_recei..</text></g><g><title>ip_rcv (83 samples, 8.66%)</title><rect x="10.8559%" y="309" width="8.6639%" height="15" fill="rgb(241,128,51)"/><text x="11.1059%" y="319.50">ip_rcv</text></g><g><title>ip_rcv_core (2 samples, 0.21%)</title><rect x="19.3111%" y="293" width="0.2088%" height="15" fill="rgb(227,165,31)"/><text x="19.5611%" y="303.50"></text></g><g><title>do_softirq (96 samples, 10.02%)</title><rect x="9.6033%" y="405" width="10.0209%" height="15" fill="rgb(228,167,24)"/><text x="9.8533%" y="415.50">do_softirq</text></g><g><title>do_softirq_own_stack (95 samples, 9.92%)</title><rect x="9.7077%" y="389" width="9.9165%" height="15" fill="rgb(228,143,12)"/><text x="9.9577%" y="399.50">do_softirq_own..</text></g><g><title>__do_softirq (95 samples, 9.92%)</title><rect x="9.7077%" y="373" width="9.9165%" height="15" fill="rgb(249,149,8)"/><text x="9.9577%" y="383.50">__do_softirq</text></g><g><title>net_rx_action (89 samples, 9.29%)</title><rect x="10.3340%" y="357" width="9.2902%" height="15" fill="rgb(243,35,44)"/><text x="10.5840%" y="367.50">net_rx_action</text></g><g><title>process_backlog (89 samples, 9.29%)</title><rect x="10.3340%" y="341" width="9.2902%" height="15" fill="rgb(246,89,9)"/><text x="10.5840%" y="351.50">process_backl..</text></g><g><title>_raw_spin_lock (1 samples, 0.10%)</title><rect x="19.5198%" y="325" width="0.1044%" height="15" fill="rgb(233,213,13)"/><text x="19.7698%" y="335.50"></text></g><g><title>preempt_count_add (1 samples, 0.10%)</title><rect x="19.5198%" y="309" width="0.1044%" height="15" fill="rgb(233,141,41)"/><text x="19.7698%" y="319.50"></text></g><g><title>ip_finish_output2 (109 samples, 11.38%)</title><rect x="8.3507%" y="437" width="11.3779%" height="15" fill="rgb(239,167,4)"/><text x="8.6007%" y="447.50">ip_finish_output2</text></g><g><title>__local_bh_enable_ip (99 samples, 10.33%)</title><rect x="9.3946%" y="421" width="10.3340%" height="15" fill="rgb(209,217,16)"/><text x="9.6446%" y="431.50">__local_bh_enab..</text></g><g><title>preempt_count_sub (1 samples, 0.10%)</title><rect x="19.6242%" y="405" width="0.1044%" height="15" fill="rgb(219,88,35)"/><text x="19.8742%" y="415.50"></text></g><g><title>ip_output (112 samples, 11.69%)</title><rect x="8.2463%" y="453" width="11.6910%" height="15" fill="rgb(220,193,23)"/><text x="8.4963%" y="463.50">ip_output</text></g><g><title>ip_finish_output (2 samples, 0.21%)</title><rect x="19.7286%" y="437" width="0.2088%" height="15" fill="rgb(230,90,52)"/><text x="19.9786%" y="447.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (2 samples, 0.21%)</title><rect x="19.7286%" y="421" width="0.2088%" height="15" fill="rgb(252,106,19)"/><text x="19.9786%" y="431.50"></text></g><g><title>__ip_queue_xmit (116 samples, 12.11%)</title><rect x="7.9332%" y="469" width="12.1086%" height="15" fill="rgb(206,74,20)"/><text x="8.1832%" y="479.50">__ip_queue_xmit</text></g><g><title>skb_push (1 samples, 0.10%)</title><rect x="19.9374%" y="453" width="0.1044%" height="15" fill="rgb(230,138,44)"/><text x="20.1874%" y="463.50"></text></g><g><title>skb_clone (1 samples, 0.10%)</title><rect x="20.0418%" y="469" width="0.1044%" height="15" fill="rgb(235,182,43)"/><text x="20.2918%" y="479.50"></text></g><g><title>__copy_skb_header (1 samples, 0.10%)</title><rect x="20.0418%" y="453" width="0.1044%" height="15" fill="rgb(242,16,51)"/><text x="20.2918%" y="463.50"></text></g><g><title>tcp_rate_skb_sent (1 samples, 0.10%)</title><rect x="20.1461%" y="469" width="0.1044%" height="15" fill="rgb(248,9,4)"/><text x="20.3961%" y="479.50"></text></g><g><title>__tcp_transmit_skb (125 samples, 13.05%)</title><rect x="7.3069%" y="485" width="13.0480%" height="15" fill="rgb(210,31,22)"/><text x="7.5569%" y="495.50">__tcp_transmit_skb</text></g><g><title>tcp_update_skb_after_send (1 samples, 0.10%)</title><rect x="20.2505%" y="469" width="0.1044%" height="15" fill="rgb(239,54,39)"/><text x="20.5005%" y="479.50"></text></g><g><title>__tcp_push_pending_frames (127 samples, 13.26%)</title><rect x="7.3069%" y="517" width="13.2568%" height="15" fill="rgb(230,99,41)"/><text x="7.5569%" y="527.50">__tcp_push_pending_f..</text></g><g><title>tcp_write_xmit (127 samples, 13.26%)</title><rect x="7.3069%" y="501" width="13.2568%" height="15" fill="rgb(253,106,12)"/><text x="7.5569%" y="511.50">tcp_write_xmit</text></g><g><title>tcp_event_new_data_sent (2 samples, 0.21%)</title><rect x="20.3549%" y="485" width="0.2088%" height="15" fill="rgb(213,46,41)"/><text x="20.6049%" y="495.50"></text></g><g><title>tcp_rearm_rto (1 samples, 0.10%)</title><rect x="20.4593%" y="469" width="0.1044%" height="15" fill="rgb(215,133,35)"/><text x="20.7093%" y="479.50"></text></g><g><title>sk_page_frag_refill (3 samples, 0.31%)</title><rect x="20.5637%" y="517" width="0.3132%" height="15" fill="rgb(213,28,5)"/><text x="20.8137%" y="527.50"></text></g><g><title>skb_page_frag_refill (3 samples, 0.31%)</title><rect x="20.5637%" y="501" width="0.3132%" height="15" fill="rgb(215,77,49)"/><text x="20.8137%" y="511.50"></text></g><g><title>__kmalloc_node_track_caller (1 samples, 0.10%)</title><rect x="21.1900%" y="485" width="0.1044%" height="15" fill="rgb(248,100,22)"/><text x="21.4400%" y="495.50"></text></g><g><title>memset_erms (1 samples, 0.10%)</title><rect x="21.1900%" y="469" width="0.1044%" height="15" fill="rgb(208,67,9)"/><text x="21.4400%" y="479.50"></text></g><g><title>__ksize (2 samples, 0.21%)</title><rect x="21.2944%" y="485" width="0.2088%" height="15" fill="rgb(219,133,21)"/><text x="21.5444%" y="495.50"></text></g><g><title>sk_stream_alloc_skb (7 samples, 0.73%)</title><rect x="20.8768%" y="517" width="0.7307%" height="15" fill="rgb(246,46,29)"/><text x="21.1268%" y="527.50"></text></g><g><title>__alloc_skb (7 samples, 0.73%)</title><rect x="20.8768%" y="501" width="0.7307%" height="15" fill="rgb(246,185,52)"/><text x="21.1268%" y="511.50"></text></g><g><title>kmem_cache_alloc_node (1 samples, 0.10%)</title><rect x="21.5031%" y="485" width="0.1044%" height="15" fill="rgb(252,136,11)"/><text x="21.7531%" y="495.50"></text></g><g><title>__check_object_size (3 samples, 0.31%)</title><rect x="21.6075%" y="501" width="0.3132%" height="15" fill="rgb(219,138,53)"/><text x="21.8575%" y="511.50"></text></g><g><title>check_stack_object (1 samples, 0.10%)</title><rect x="21.8163%" y="485" width="0.1044%" height="15" fill="rgb(211,51,23)"/><text x="22.0663%" y="495.50"></text></g><g><title>skb_do_copy_data_nocache (4 samples, 0.42%)</title><rect x="21.6075%" y="517" width="0.4175%" height="15" fill="rgb(247,221,28)"/><text x="21.8575%" y="527.50"></text></g><g><title>_copy_from_iter_full (1 samples, 0.10%)</title><rect x="21.9207%" y="501" width="0.1044%" height="15" fill="rgb(251,222,45)"/><text x="22.1707%" y="511.50"></text></g><g><title>iov_iter_advance (1 samples, 0.10%)</title><rect x="21.9207%" y="485" width="0.1044%" height="15" fill="rgb(217,162,53)"/><text x="22.1707%" y="495.50"></text></g><g><title>skb_entail (2 samples, 0.21%)</title><rect x="22.0251%" y="517" width="0.2088%" height="15" fill="rgb(229,93,14)"/><text x="22.2751%" y="527.50"></text></g><g><title>tcp_chrono_start (1 samples, 0.10%)</title><rect x="22.1294%" y="501" width="0.1044%" height="15" fill="rgb(209,67,49)"/><text x="22.3794%" y="511.50"></text></g><g><title>tcp_push (1 samples, 0.10%)</title><rect x="22.2338%" y="517" width="0.1044%" height="15" fill="rgb(213,87,29)"/><text x="22.4838%" y="527.50"></text></g><g><title>tcp_send_mss (2 samples, 0.21%)</title><rect x="22.3382%" y="517" width="0.2088%" height="15" fill="rgb(205,151,52)"/><text x="22.5882%" y="527.50"></text></g><g><title>tcp_current_mss (2 samples, 0.21%)</title><rect x="22.3382%" y="501" width="0.2088%" height="15" fill="rgb(253,215,39)"/><text x="22.5882%" y="511.50"></text></g><g><title>ipv4_mtu (1 samples, 0.10%)</title><rect x="22.4426%" y="485" width="0.1044%" height="15" fill="rgb(221,220,41)"/><text x="22.6926%" y="495.50"></text></g><g><title>sock_sendmsg (155 samples, 16.18%)</title><rect x="6.4718%" y="565" width="16.1795%" height="15" fill="rgb(218,133,21)"/><text x="6.7218%" y="575.50">sock_sendmsg</text></g><g><title>tcp_sendmsg (155 samples, 16.18%)</title><rect x="6.4718%" y="549" width="16.1795%" height="15" fill="rgb(221,193,43)"/><text x="6.7218%" y="559.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (153 samples, 15.97%)</title><rect x="6.6806%" y="533" width="15.9708%" height="15" fill="rgb(240,128,52)"/><text x="6.9306%" y="543.50">tcp_sendmsg_locked</text></g><g><title>tcp_stream_memory_free (1 samples, 0.10%)</title><rect x="22.5470%" y="517" width="0.1044%" height="15" fill="rgb(253,114,12)"/><text x="22.7970%" y="527.50"></text></g><g><title>__x64_sys_sendto (157 samples, 16.39%)</title><rect x="6.3674%" y="597" width="16.3883%" height="15" fill="rgb(215,223,47)"/><text x="6.6174%" y="607.50">__x64_sys_sendto</text></g><g><title>__sys_sendto (157 samples, 16.39%)</title><rect x="6.3674%" y="581" width="16.3883%" height="15" fill="rgb(248,225,23)"/><text x="6.6174%" y="591.50">__sys_sendto</text></g><g><title>sockfd_lookup_light (1 samples, 0.10%)</title><rect x="22.6514%" y="565" width="0.1044%" height="15" fill="rgb(250,108,0)"/><text x="22.9014%" y="575.50"></text></g><g><title>__fget_light (1 samples, 0.10%)</title><rect x="22.6514%" y="549" width="0.1044%" height="15" fill="rgb(228,208,7)"/><text x="22.9014%" y="559.50"></text></g><g><title>do_syscall_64 (159 samples, 16.60%)</title><rect x="6.3674%" y="613" width="16.5971%" height="15" fill="rgb(244,45,10)"/><text x="6.6174%" y="623.50">do_syscall_64</text></g><g><title>syscall_trace_enter (2 samples, 0.21%)</title><rect x="22.7557%" y="597" width="0.2088%" height="15" fill="rgb(207,125,25)"/><text x="23.0057%" y="607.50"></text></g><g><title>entry_SYSCALL_64 (165 samples, 17.22%)</title><rect x="6.3674%" y="629" width="17.2234%" height="15" fill="rgb(210,195,18)"/><text x="6.6174%" y="639.50">entry_SYSCALL_64</text></g><g><title>prepare_exit_to_usermode (6 samples, 0.63%)</title><rect x="22.9645%" y="613" width="0.6263%" height="15" fill="rgb(249,80,12)"/><text x="23.2145%" y="623.50"></text></g><g><title>__libc_start_main (174 samples, 18.16%)</title><rect x="6.0543%" y="901" width="18.1628%" height="15" fill="rgb(221,65,9)"/><text x="6.3043%" y="911.50">__libc_start_main</text></g><g><title>main (174 samples, 18.16%)</title><rect x="6.0543%" y="885" width="18.1628%" height="15" fill="rgb(235,49,36)"/><text x="6.3043%" y="895.50">main</text></g><g><title>std::rt::lang_start_internal (174 samples, 18.16%)</title><rect x="6.0543%" y="869" width="18.1628%" height="15" fill="rgb(225,32,20)"/><text x="6.3043%" y="879.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (174 samples, 18.16%)</title><rect x="6.0543%" y="853" width="18.1628%" height="15" fill="rgb(215,141,46)"/><text x="6.3043%" y="863.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (174 samples, 18.16%)</title><rect x="6.0543%" y="837" width="18.1628%" height="15" fill="rgb(250,160,47)"/><text x="6.3043%" y="847.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (174 samples, 18.16%)</title><rect x="6.0543%" y="821" width="18.1628%" height="15" fill="rgb(216,222,40)"/><text x="6.3043%" y="831.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (174 samples, 18.16%)</title><rect x="6.0543%" y="805" width="18.1628%" height="15" fill="rgb(234,217,39)"/><text x="6.3043%" y="815.50">core::ops::function::impls::..</text></g><g><title>std::rt::lang_start::_{{closure}} (174 samples, 18.16%)</title><rect x="6.0543%" y="789" width="18.1628%" height="15" fill="rgb(207,178,40)"/><text x="6.3043%" y="799.50">std::rt::lang_start::_{{clos..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (174 samples, 18.16%)</title><rect x="6.0543%" y="773" width="18.1628%" height="15" fill="rgb(221,136,13)"/><text x="6.3043%" y="783.50">std::sys_common::backtrace::..</text></g><g><title>lobsters::main (174 samples, 18.16%)</title><rect x="6.0543%" y="757" width="18.1628%" height="15" fill="rgb(249,199,10)"/><text x="6.3043%" y="767.50">lobsters::main</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (173 samples, 18.06%)</title><rect x="6.1587%" y="741" width="18.0585%" height="15" fill="rgb(249,222,13)"/><text x="6.4087%" y="751.50">mysql::conn::queryable::Quer..</text></g><g><title>mysql::conn::Conn::_query (173 samples, 18.06%)</title><rect x="6.1587%" y="725" width="18.0585%" height="15" fill="rgb(244,185,38)"/><text x="6.4087%" y="735.50">mysql::conn::Conn::_query</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (173 samples, 18.06%)</title><rect x="6.1587%" y="709" width="18.0585%" height="15" fill="rgb(236,202,9)"/><text x="6.4087%" y="719.50">mysql_common::proto::sync_fr..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (172 samples, 17.95%)</title><rect x="6.2630%" y="693" width="17.9541%" height="15" fill="rgb(250,229,37)"/><text x="6.5130%" y="703.50">std::io::buffered::BufWriter..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (171 samples, 17.85%)</title><rect x="6.3674%" y="677" width="17.8497%" height="15" fill="rgb(206,174,23)"/><text x="6.6174%" y="687.50">&lt;std::net::tcp::TcpStream as..</text></g><g><title>std::sys_common::net::TcpStream::write (171 samples, 17.85%)</title><rect x="6.3674%" y="661" width="17.8497%" height="15" fill="rgb(211,33,43)"/><text x="6.6174%" y="671.50">std::sys_common::net::TcpStr..</text></g><g><title>__libc_send (171 samples, 17.85%)</title><rect x="6.3674%" y="645" width="17.8497%" height="15" fill="rgb(245,58,50)"/><text x="6.6174%" y="655.50">__libc_send</text></g><g><title>syscall_return_via_sysret (6 samples, 0.63%)</title><rect x="23.5908%" y="629" width="0.6263%" height="15" fill="rgb(244,68,36)"/><text x="23.8408%" y="639.50"></text></g><g><title>__rdl_alloc (1 samples, 0.10%)</title><rect x="24.2171%" y="901" width="0.1044%" height="15" fill="rgb(232,229,15)"/><text x="24.4671%" y="911.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="24.3215%" y="901" width="0.1044%" height="15" fill="rgb(254,30,23)"/><text x="24.5715%" y="911.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="24.4259%" y="901" width="0.1044%" height="15" fill="rgb(235,160,14)"/><text x="24.6759%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.21%)</title><rect x="24.5303%" y="901" width="0.2088%" height="15" fill="rgb(212,155,44)"/><text x="24.7803%" y="911.50"></text></g><g><title>core::fmt::write (1 samples, 0.10%)</title><rect x="24.7390%" y="901" width="0.1044%" height="15" fill="rgb(226,2,50)"/><text x="24.9890%" y="911.50"></text></g><g><title>decor::Shim::create_schema (1 samples, 0.10%)</title><rect x="24.8434%" y="901" width="0.1044%" height="15" fill="rgb(234,177,6)"/><text x="25.0934%" y="911.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query_drop (1 samples, 0.10%)</title><rect x="24.8434%" y="885" width="0.1044%" height="15" fill="rgb(217,24,9)"/><text x="25.0934%" y="895.50"></text></g><g><title>decor::query_transformer::QueryTransformer::issue_to_dt_and_get_mv_stmt (1 samples, 0.10%)</title><rect x="24.8434%" y="869" width="0.1044%" height="15" fill="rgb(220,13,46)"/><text x="25.0934%" y="879.50"></text></g><g><title>core::fmt::write (1 samples, 0.10%)</title><rect x="24.8434%" y="853" width="0.1044%" height="15" fill="rgb(239,221,27)"/><text x="25.0934%" y="863.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::CreateTableStatement as core::fmt::Display&gt;::fmt (1 samples, 0.10%)</title><rect x="24.8434%" y="837" width="0.1044%" height="15" fill="rgb(222,198,25)"/><text x="25.0934%" y="847.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::CreateTableStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.10%)</title><rect x="24.8434%" y="821" width="0.1044%" height="15" fill="rgb(211,99,13)"/><text x="25.0934%" y="831.50"></text></g><g><title>&lt;sql_parser::ast::defs::ddl::ColumnDef as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.10%)</title><rect x="24.8434%" y="805" width="0.1044%" height="15" fill="rgb(232,111,31)"/><text x="25.0934%" y="815.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.10%)</title><rect x="24.8434%" y="789" width="0.1044%" height="15" fill="rgb(245,82,37)"/><text x="25.0934%" y="799.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.10%)</title><rect x="24.8434%" y="773" width="0.1044%" height="15" fill="rgb(227,149,46)"/><text x="25.0934%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="25.0522%" y="837" width="0.1044%" height="15" fill="rgb(218,36,50)"/><text x="25.3022%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::parse_object_name (4 samples, 0.42%)</title><rect x="25.0522%" y="853" width="0.4175%" height="15" fill="rgb(226,80,48)"/><text x="25.3022%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::parse_identifier (3 samples, 0.31%)</title><rect x="25.1566%" y="837" width="0.3132%" height="15" fill="rgb(238,224,15)"/><text x="25.4066%" y="847.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (3 samples, 0.31%)</title><rect x="25.1566%" y="821" width="0.3132%" height="15" fill="rgb(241,136,10)"/><text x="25.4066%" y="831.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_lower (3 samples, 0.31%)</title><rect x="25.1566%" y="805" width="0.3132%" height="15" fill="rgb(208,32,45)"/><text x="25.4066%" y="815.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (3 samples, 0.31%)</title><rect x="25.1566%" y="789" width="0.3132%" height="15" fill="rgb(207,135,9)"/><text x="25.4066%" y="799.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (3 samples, 0.31%)</title><rect x="25.1566%" y="773" width="0.3132%" height="15" fill="rgb(206,86,44)"/><text x="25.4066%" y="783.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (1 samples, 0.10%)</title><rect x="25.3653%" y="757" width="0.1044%" height="15" fill="rgb(245,177,15)"/><text x="25.6153%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.21%)</title><rect x="25.4697%" y="837" width="0.2088%" height="15" fill="rgb(206,64,50)"/><text x="25.7197%" y="847.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.21%)</title><rect x="25.4697%" y="821" width="0.2088%" height="15" fill="rgb(234,36,40)"/><text x="25.7197%" y="831.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.10%)</title><rect x="25.8873%" y="805" width="0.1044%" height="15" fill="rgb(213,64,8)"/><text x="26.1373%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.10%)</title><rect x="25.8873%" y="789" width="0.1044%" height="15" fill="rgb(210,75,36)"/><text x="26.1373%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (1 samples, 0.10%)</title><rect x="25.8873%" y="773" width="0.1044%" height="15" fill="rgb(229,88,21)"/><text x="26.1373%" y="783.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.10%)</title><rect x="25.9916%" y="805" width="0.1044%" height="15" fill="rgb(252,204,47)"/><text x="26.2416%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="25.9916%" y="789" width="0.1044%" height="15" fill="rgb(208,77,27)"/><text x="26.2416%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="25.9916%" y="773" width="0.1044%" height="15" fill="rgb(221,76,26)"/><text x="26.2416%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="25.9916%" y="757" width="0.1044%" height="15" fill="rgb(225,139,18)"/><text x="26.2416%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="25.9916%" y="741" width="0.1044%" height="15" fill="rgb(230,137,11)"/><text x="26.2416%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="25.9916%" y="725" width="0.1044%" height="15" fill="rgb(212,28,1)"/><text x="26.2416%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="25.9916%" y="709" width="0.1044%" height="15" fill="rgb(248,164,17)"/><text x="26.2416%" y="719.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="25.9916%" y="693" width="0.1044%" height="15" fill="rgb(222,171,42)"/><text x="26.2416%" y="703.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="25.9916%" y="677" width="0.1044%" height="15" fill="rgb(243,84,45)"/><text x="26.2416%" y="687.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="25.9916%" y="661" width="0.1044%" height="15" fill="rgb(252,49,23)"/><text x="26.2416%" y="671.50"></text></g><g><title>core::str::&lt;impl str&gt;::char_indices (1 samples, 0.10%)</title><rect x="26.0960%" y="805" width="0.1044%" height="15" fill="rgb(215,19,7)"/><text x="26.3460%" y="815.50"></text></g><g><title>core::str::&lt;impl str&gt;::chars (1 samples, 0.10%)</title><rect x="26.0960%" y="789" width="0.1044%" height="15" fill="rgb(238,81,41)"/><text x="26.3460%" y="799.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.10%)</title><rect x="26.0960%" y="773" width="0.1044%" height="15" fill="rgb(210,199,37)"/><text x="26.3460%" y="783.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (1 samples, 0.10%)</title><rect x="26.0960%" y="757" width="0.1044%" height="15" fill="rgb(244,192,49)"/><text x="26.3460%" y="767.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (14 samples, 1.46%)</title><rect x="24.9478%" y="901" width="1.4614%" height="15" fill="rgb(226,211,11)"/><text x="25.1978%" y="911.50"></text></g><g><title>sql_parser::parser::parse_statements (14 samples, 1.46%)</title><rect x="24.9478%" y="885" width="1.4614%" height="15" fill="rgb(236,162,54)"/><text x="25.1978%" y="895.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (14 samples, 1.46%)</title><rect x="24.9478%" y="869" width="1.4614%" height="15" fill="rgb(220,229,9)"/><text x="25.1978%" y="879.50"></text></g><g><title>sql_parser::parser::Parser::parse_parenthesized_column_list (9 samples, 0.94%)</title><rect x="25.4697%" y="853" width="0.9395%" height="15" fill="rgb(250,87,22)"/><text x="25.7197%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::parse_identifier (7 samples, 0.73%)</title><rect x="25.6785%" y="837" width="0.7307%" height="15" fill="rgb(239,43,17)"/><text x="25.9285%" y="847.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (6 samples, 0.63%)</title><rect x="25.7829%" y="821" width="0.6263%" height="15" fill="rgb(231,177,25)"/><text x="26.0329%" y="831.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_lower (2 samples, 0.21%)</title><rect x="26.2004%" y="805" width="0.2088%" height="15" fill="rgb(219,179,1)"/><text x="26.4504%" y="815.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.21%)</title><rect x="26.2004%" y="789" width="0.2088%" height="15" fill="rgb(238,219,53)"/><text x="26.4504%" y="799.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.21%)</title><rect x="26.2004%" y="773" width="0.2088%" height="15" fill="rgb(232,167,36)"/><text x="26.4504%" y="783.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (1 samples, 0.10%)</title><rect x="26.3048%" y="757" width="0.1044%" height="15" fill="rgb(244,19,51)"/><text x="26.5548%" y="767.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.10%)</title><rect x="26.4092%" y="869" width="0.1044%" height="15" fill="rgb(224,6,22)"/><text x="26.6592%" y="879.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.10%)</title><rect x="26.4092%" y="853" width="0.1044%" height="15" fill="rgb(224,145,5)"/><text x="26.6592%" y="863.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.10%)</title><rect x="26.4092%" y="837" width="0.1044%" height="15" fill="rgb(234,130,49)"/><text x="26.6592%" y="847.50"></text></g><g><title>dlopen (1 samples, 0.10%)</title><rect x="26.4092%" y="821" width="0.1044%" height="15" fill="rgb(254,6,2)"/><text x="26.6592%" y="831.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.10%)</title><rect x="26.4092%" y="805" width="0.1044%" height="15" fill="rgb(208,96,46)"/><text x="26.6592%" y="815.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.10%)</title><rect x="26.4092%" y="789" width="0.1044%" height="15" fill="rgb(239,3,39)"/><text x="26.6592%" y="799.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.10%)</title><rect x="26.4092%" y="773" width="0.1044%" height="15" fill="rgb(233,210,1)"/><text x="26.6592%" y="783.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.10%)</title><rect x="26.4092%" y="757" width="0.1044%" height="15" fill="rgb(244,137,37)"/><text x="26.6592%" y="767.50"></text></g><g><title>_dl_open (1 samples, 0.10%)</title><rect x="26.4092%" y="741" width="0.1044%" height="15" fill="rgb(240,136,2)"/><text x="26.6592%" y="751.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.10%)</title><rect x="26.4092%" y="725" width="0.1044%" height="15" fill="rgb(239,18,37)"/><text x="26.6592%" y="735.50"></text></g><g><title>dl_open_worker (1 samples, 0.10%)</title><rect x="26.4092%" y="709" width="0.1044%" height="15" fill="rgb(218,185,22)"/><text x="26.6592%" y="719.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.10%)</title><rect x="26.4092%" y="693" width="0.1044%" height="15" fill="rgb(225,218,4)"/><text x="26.6592%" y="703.50"></text></g><g><title>hwloc::Topology::new (2 samples, 0.21%)</title><rect x="26.4092%" y="885" width="0.2088%" height="15" fill="rgb(230,182,32)"/><text x="26.6592%" y="895.50"></text></g><g><title>hwloc_topology_load (1 samples, 0.10%)</title><rect x="26.5136%" y="869" width="0.1044%" height="15" fill="rgb(242,56,43)"/><text x="26.7636%" y="879.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.10%)</title><rect x="26.5136%" y="853" width="0.1044%" height="15" fill="rgb(233,99,24)"/><text x="26.7636%" y="863.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.10%)</title><rect x="26.5136%" y="837" width="0.1044%" height="15" fill="rgb(234,209,42)"/><text x="26.7636%" y="847.50"></text></g><g><title>__isoc99_fscanf (1 samples, 0.10%)</title><rect x="26.5136%" y="821" width="0.1044%" height="15" fill="rgb(227,7,12)"/><text x="26.7636%" y="831.50"></text></g><g><title>__vfscanf_internal (1 samples, 0.10%)</title><rect x="26.5136%" y="805" width="0.1044%" height="15" fill="rgb(245,203,43)"/><text x="26.7636%" y="815.50"></text></g><g><title>__GI__IO_default_uflow (1 samples, 0.10%)</title><rect x="26.5136%" y="789" width="0.1044%" height="15" fill="rgb(238,205,33)"/><text x="26.7636%" y="799.50"></text></g><g><title>__GI__IO_file_underflow (1 samples, 0.10%)</title><rect x="26.5136%" y="773" width="0.1044%" height="15" fill="rgb(231,56,7)"/><text x="26.7636%" y="783.50"></text></g><g><title>__GI___read (1 samples, 0.10%)</title><rect x="26.5136%" y="757" width="0.1044%" height="15" fill="rgb(244,186,29)"/><text x="26.7636%" y="767.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.10%)</title><rect x="26.5136%" y="741" width="0.1044%" height="15" fill="rgb(234,111,31)"/><text x="26.7636%" y="751.50"></text></g><g><title>do_syscall_64 (1 samples, 0.10%)</title><rect x="26.5136%" y="725" width="0.1044%" height="15" fill="rgb(241,149,10)"/><text x="26.7636%" y="735.50"></text></g><g><title>ksys_read (1 samples, 0.10%)</title><rect x="26.5136%" y="709" width="0.1044%" height="15" fill="rgb(249,206,44)"/><text x="26.7636%" y="719.50"></text></g><g><title>vfs_read (1 samples, 0.10%)</title><rect x="26.5136%" y="693" width="0.1044%" height="15" fill="rgb(251,153,30)"/><text x="26.7636%" y="703.50"></text></g><g><title>seq_read (1 samples, 0.10%)</title><rect x="26.5136%" y="677" width="0.1044%" height="15" fill="rgb(239,152,38)"/><text x="26.7636%" y="687.50"></text></g><g><title>show_cpuinfo (1 samples, 0.10%)</title><rect x="26.5136%" y="661" width="0.1044%" height="15" fill="rgb(249,139,47)"/><text x="26.7636%" y="671.50"></text></g><g><title>seq_printf (1 samples, 0.10%)</title><rect x="26.5136%" y="645" width="0.1044%" height="15" fill="rgb(244,64,35)"/><text x="26.7636%" y="655.50"></text></g><g><title>vsnprintf (1 samples, 0.10%)</title><rect x="26.5136%" y="629" width="0.1044%" height="15" fill="rgb(216,46,15)"/><text x="26.7636%" y="639.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="26.6180%" y="837" width="0.1044%" height="15" fill="rgb(250,74,19)"/><text x="26.8680%" y="847.50"></text></g><g><title>mysql::conn::Conn::handle_ok (2 samples, 0.21%)</title><rect x="26.7223%" y="837" width="0.2088%" height="15" fill="rgb(249,42,33)"/><text x="26.9723%" y="847.50"></text></g><g><title>mysql_common::packets::OkPacket::into_owned (1 samples, 0.10%)</title><rect x="26.8267%" y="821" width="0.1044%" height="15" fill="rgb(242,149,17)"/><text x="27.0767%" y="831.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.10%)</title><rect x="27.0355%" y="821" width="0.1044%" height="15" fill="rgb(244,29,21)"/><text x="27.2855%" y="831.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.10%)</title><rect x="27.0355%" y="805" width="0.1044%" height="15" fill="rgb(220,130,37)"/><text x="27.2855%" y="815.50"></text></g><g><title>skb_release_data (1 samples, 0.10%)</title><rect x="28.4969%" y="597" width="0.1044%" height="15" fill="rgb(211,67,2)"/><text x="28.7469%" y="607.50"></text></g><g><title>__kfree_skb (5 samples, 0.52%)</title><rect x="28.4969%" y="613" width="0.5219%" height="15" fill="rgb(235,68,52)"/><text x="28.7469%" y="623.50"></text></g><g><title>skb_release_head_state (4 samples, 0.42%)</title><rect x="28.6013%" y="597" width="0.4175%" height="15" fill="rgb(246,142,3)"/><text x="28.8513%" y="607.50"></text></g><g><title>dst_release (4 samples, 0.42%)</title><rect x="28.6013%" y="581" width="0.4175%" height="15" fill="rgb(241,25,7)"/><text x="28.8513%" y="591.50"></text></g><g><title>lock_sock_nested (1 samples, 0.10%)</title><rect x="29.0188%" y="613" width="0.1044%" height="15" fill="rgb(242,119,39)"/><text x="29.2688%" y="623.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.10%)</title><rect x="29.0188%" y="597" width="0.1044%" height="15" fill="rgb(241,98,45)"/><text x="29.2688%" y="607.50"></text></g><g><title>preempt_count_add (1 samples, 0.10%)</title><rect x="29.0188%" y="581" width="0.1044%" height="15" fill="rgb(254,28,30)"/><text x="29.2688%" y="591.50"></text></g><g><title>_raw_spin_lock_bh (3 samples, 0.31%)</title><rect x="29.4363%" y="597" width="0.3132%" height="15" fill="rgb(241,142,54)"/><text x="29.6863%" y="607.50"></text></g><g><title>_raw_spin_unlock_irqrestore (1 samples, 0.10%)</title><rect x="29.7495%" y="597" width="0.1044%" height="15" fill="rgb(222,85,15)"/><text x="29.9995%" y="607.50"></text></g><g><title>preempt_count_sub (1 samples, 0.10%)</title><rect x="29.7495%" y="581" width="0.1044%" height="15" fill="rgb(210,85,47)"/><text x="29.9995%" y="591.50"></text></g><g><title>add_wait_queue (1 samples, 0.10%)</title><rect x="29.8539%" y="597" width="0.1044%" height="15" fill="rgb(224,206,25)"/><text x="30.1039%" y="607.50"></text></g><g><title>release_sock (1 samples, 0.10%)</title><rect x="29.9582%" y="597" width="0.1044%" height="15" fill="rgb(243,201,19)"/><text x="30.2082%" y="607.50"></text></g><g><title>remove_wait_queue (5 samples, 0.52%)</title><rect x="30.0626%" y="597" width="0.5219%" height="15" fill="rgb(236,59,4)"/><text x="30.3126%" y="607.50"></text></g><g><title>_raw_spin_lock_irqsave (3 samples, 0.31%)</title><rect x="30.2714%" y="581" width="0.3132%" height="15" fill="rgb(254,179,45)"/><text x="30.5214%" y="591.50"></text></g><g><title>preempt_count_add (1 samples, 0.10%)</title><rect x="30.4802%" y="565" width="0.1044%" height="15" fill="rgb(226,14,10)"/><text x="30.7302%" y="575.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.10%)</title><rect x="31.0021%" y="517" width="0.1044%" height="15" fill="rgb(244,27,41)"/><text x="31.2521%" y="527.50"></text></g><g><title>intel_pmu_disable_all (1 samples, 0.10%)</title><rect x="31.1065%" y="501" width="0.1044%" height="15" fill="rgb(235,35,32)"/><text x="31.3565%" y="511.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.10%)</title><rect x="31.1065%" y="485" width="0.1044%" height="15" fill="rgb(218,68,31)"/><text x="31.3565%" y="495.50"></text></g><g><title>__perf_event_task_sched_out (4 samples, 0.42%)</title><rect x="31.0021%" y="533" width="0.4175%" height="15" fill="rgb(207,120,37)"/><text x="31.2521%" y="543.50"></text></g><g><title>ctx_sched_out (3 samples, 0.31%)</title><rect x="31.1065%" y="517" width="0.3132%" height="15" fill="rgb(227,98,0)"/><text x="31.3565%" y="527.50"></text></g><g><title>x86_pmu_disable (2 samples, 0.21%)</title><rect x="31.2109%" y="501" width="0.2088%" height="15" fill="rgb(207,7,3)"/><text x="31.4609%" y="511.50"></text></g><g><title>account_entity_dequeue (1 samples, 0.10%)</title><rect x="31.5240%" y="501" width="0.1044%" height="15" fill="rgb(206,98,19)"/><text x="31.7740%" y="511.50"></text></g><g><title>update_cfs_group (1 samples, 0.10%)</title><rect x="31.6284%" y="501" width="0.1044%" height="15" fill="rgb(217,5,26)"/><text x="31.8784%" y="511.50"></text></g><g><title>update_curr (2 samples, 0.21%)</title><rect x="31.7328%" y="501" width="0.2088%" height="15" fill="rgb(235,190,38)"/><text x="31.9828%" y="511.50"></text></g><g><title>cpuacct_charge (1 samples, 0.10%)</title><rect x="31.8372%" y="485" width="0.1044%" height="15" fill="rgb(247,86,24)"/><text x="32.0872%" y="495.50"></text></g><g><title>dequeue_entity (6 samples, 0.63%)</title><rect x="31.4196%" y="517" width="0.6263%" height="15" fill="rgb(205,101,16)"/><text x="31.6696%" y="527.50"></text></g><g><title>update_load_avg (1 samples, 0.10%)</title><rect x="31.9415%" y="501" width="0.1044%" height="15" fill="rgb(246,168,33)"/><text x="32.1915%" y="511.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.10%)</title><rect x="31.9415%" y="485" width="0.1044%" height="15" fill="rgb(231,114,1)"/><text x="32.1915%" y="495.50"></text></g><g><title>dequeue_task_fair (7 samples, 0.73%)</title><rect x="31.4196%" y="533" width="0.7307%" height="15" fill="rgb(207,184,53)"/><text x="31.6696%" y="543.50"></text></g><g><title>update_min_vruntime (1 samples, 0.10%)</title><rect x="32.0459%" y="517" width="0.1044%" height="15" fill="rgb(224,95,51)"/><text x="32.2959%" y="527.50"></text></g><g><title>finish_task_switch (6 samples, 0.63%)</title><rect x="32.1503%" y="533" width="0.6263%" height="15" fill="rgb(212,188,45)"/><text x="32.4003%" y="543.50"></text></g><g><title>__perf_event_task_sched_in (1 samples, 0.10%)</title><rect x="32.6722%" y="517" width="0.1044%" height="15" fill="rgb(223,154,38)"/><text x="32.9222%" y="527.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (1 samples, 0.10%)</title><rect x="32.6722%" y="501" width="0.1044%" height="15" fill="rgb(251,22,52)"/><text x="32.9222%" y="511.50"></text></g><g><title>native_write_msr (1 samples, 0.10%)</title><rect x="32.6722%" y="485" width="0.1044%" height="15" fill="rgb(229,209,22)"/><text x="32.9222%" y="495.50"></text></g><g><title>pick_next_task_fair (1 samples, 0.10%)</title><rect x="32.7766%" y="533" width="0.1044%" height="15" fill="rgb(234,138,34)"/><text x="33.0266%" y="543.50"></text></g><g><title>newidle_balance (1 samples, 0.10%)</title><rect x="32.7766%" y="517" width="0.1044%" height="15" fill="rgb(212,95,11)"/><text x="33.0266%" y="527.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.10%)</title><rect x="32.7766%" y="501" width="0.1044%" height="15" fill="rgb(240,179,47)"/><text x="33.0266%" y="511.50"></text></g><g><title>pick_next_task_idle (1 samples, 0.10%)</title><rect x="32.8810%" y="533" width="0.1044%" height="15" fill="rgb(240,163,11)"/><text x="33.1310%" y="543.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.10%)</title><rect x="32.8810%" y="517" width="0.1044%" height="15" fill="rgb(236,37,12)"/><text x="33.1310%" y="527.50"></text></g><g><title>psi_task_change (2 samples, 0.21%)</title><rect x="32.9854%" y="533" width="0.2088%" height="15" fill="rgb(232,164,16)"/><text x="33.2354%" y="543.50"></text></g><g><title>psi_group_change (1 samples, 0.10%)</title><rect x="33.0898%" y="517" width="0.1044%" height="15" fill="rgb(244,205,15)"/><text x="33.3398%" y="527.50"></text></g><g><title>rcu_note_context_switch (1 samples, 0.10%)</title><rect x="33.1942%" y="533" width="0.1044%" height="15" fill="rgb(223,117,47)"/><text x="33.4442%" y="543.50"></text></g><g><title>rcu_preempt_deferred_qs (1 samples, 0.10%)</title><rect x="33.1942%" y="517" width="0.1044%" height="15" fill="rgb(244,107,35)"/><text x="33.4442%" y="527.50"></text></g><g><title>uclamp_rq_dec_id (6 samples, 0.63%)</title><rect x="33.2985%" y="533" width="0.6263%" height="15" fill="rgb(205,140,8)"/><text x="33.5485%" y="543.50"></text></g><g><title>sk_wait_data (47 samples, 4.91%)</title><rect x="29.1232%" y="613" width="4.9061%" height="15" fill="rgb(228,84,46)"/><text x="29.3732%" y="623.50">sk_wai..</text></g><g><title>wait_woken (33 samples, 3.44%)</title><rect x="30.5846%" y="597" width="3.4447%" height="15" fill="rgb(254,188,9)"/><text x="30.8346%" y="607.50">wai..</text></g><g><title>schedule_timeout (33 samples, 3.44%)</title><rect x="30.5846%" y="581" width="3.4447%" height="15" fill="rgb(206,112,54)"/><text x="30.8346%" y="591.50">sch..</text></g><g><title>schedule (33 samples, 3.44%)</title><rect x="30.5846%" y="565" width="3.4447%" height="15" fill="rgb(216,84,49)"/><text x="30.8346%" y="575.50">sch..</text></g><g><title>__schedule (32 samples, 3.34%)</title><rect x="30.6889%" y="549" width="3.3403%" height="15" fill="rgb(214,194,35)"/><text x="30.9389%" y="559.50">__s..</text></g><g><title>update_rq_clock (1 samples, 0.10%)</title><rect x="33.9248%" y="533" width="0.1044%" height="15" fill="rgb(249,28,3)"/><text x="34.1748%" y="543.50"></text></g><g><title>_copy_to_iter (1 samples, 0.10%)</title><rect x="34.3424%" y="581" width="0.1044%" height="15" fill="rgb(222,56,52)"/><text x="34.5924%" y="591.50"></text></g><g><title>__x64_sys_recvfrom (70 samples, 7.31%)</title><rect x="27.4530%" y="677" width="7.3069%" height="15" fill="rgb(245,217,50)"/><text x="27.7030%" y="687.50">__x64_sys_..</text></g><g><title>__sys_recvfrom (69 samples, 7.20%)</title><rect x="27.5574%" y="661" width="7.2025%" height="15" fill="rgb(213,201,24)"/><text x="27.8074%" y="671.50">__sys_recv..</text></g><g><title>inet_recvmsg (67 samples, 6.99%)</title><rect x="27.7662%" y="645" width="6.9937%" height="15" fill="rgb(248,116,28)"/><text x="28.0162%" y="655.50">inet_recv..</text></g><g><title>tcp_recvmsg (66 samples, 6.89%)</title><rect x="27.8706%" y="629" width="6.8894%" height="15" fill="rgb(219,72,43)"/><text x="28.1206%" y="639.50">tcp_recvm..</text></g><g><title>skb_copy_datagram_iter (7 samples, 0.73%)</title><rect x="34.0292%" y="613" width="0.7307%" height="15" fill="rgb(209,138,14)"/><text x="34.2792%" y="623.50"></text></g><g><title>__skb_datagram_iter (7 samples, 0.73%)</title><rect x="34.0292%" y="597" width="0.7307%" height="15" fill="rgb(222,18,33)"/><text x="34.2792%" y="607.50"></text></g><g><title>simple_copy_to_iter (3 samples, 0.31%)</title><rect x="34.4468%" y="581" width="0.3132%" height="15" fill="rgb(213,199,7)"/><text x="34.6968%" y="591.50"></text></g><g><title>__check_object_size (3 samples, 0.31%)</title><rect x="34.4468%" y="565" width="0.3132%" height="15" fill="rgb(250,110,10)"/><text x="34.6968%" y="575.50"></text></g><g><title>syscall_slow_exit_work (1 samples, 0.10%)</title><rect x="34.7599%" y="677" width="0.1044%" height="15" fill="rgb(248,123,6)"/><text x="35.0099%" y="687.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.10%)</title><rect x="34.7599%" y="661" width="0.1044%" height="15" fill="rgb(206,91,31)"/><text x="35.0099%" y="671.50"></text></g><g><title>do_syscall_64 (73 samples, 7.62%)</title><rect x="27.3486%" y="693" width="7.6200%" height="15" fill="rgb(211,154,13)"/><text x="27.5986%" y="703.50">do_syscall..</text></g><g><title>syscall_trace_enter (1 samples, 0.10%)</title><rect x="34.8643%" y="677" width="0.1044%" height="15" fill="rgb(225,148,7)"/><text x="35.1143%" y="687.50"></text></g><g><title>entry_SYSCALL_64 (77 samples, 8.04%)</title><rect x="27.3486%" y="709" width="8.0376%" height="15" fill="rgb(220,160,43)"/><text x="27.5986%" y="719.50">entry_SYSCA..</text></g><g><title>prepare_exit_to_usermode (4 samples, 0.42%)</title><rect x="34.9687%" y="693" width="0.4175%" height="15" fill="rgb(213,52,39)"/><text x="35.2187%" y="703.50"></text></g><g><title>switch_fpu_return (1 samples, 0.10%)</title><rect x="35.2818%" y="677" width="0.1044%" height="15" fill="rgb(243,137,7)"/><text x="35.5318%" y="687.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (79 samples, 8.25%)</title><rect x="27.2443%" y="805" width="8.2463%" height="15" fill="rgb(230,79,13)"/><text x="27.4943%" y="815.50">&lt;std::io::b..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (79 samples, 8.25%)</title><rect x="27.2443%" y="789" width="8.2463%" height="15" fill="rgb(247,105,23)"/><text x="27.4943%" y="799.50">&lt;std::net::..</text></g><g><title>std::sys_common::net::TcpStream::read (79 samples, 8.25%)</title><rect x="27.2443%" y="773" width="8.2463%" height="15" fill="rgb(223,179,41)"/><text x="27.4943%" y="783.50">std::sys_co..</text></g><g><title>std::sys::unix::net::Socket::read (79 samples, 8.25%)</title><rect x="27.2443%" y="757" width="8.2463%" height="15" fill="rgb(218,9,34)"/><text x="27.4943%" y="767.50">std::sys::u..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (79 samples, 8.25%)</title><rect x="27.2443%" y="741" width="8.2463%" height="15" fill="rgb(222,106,8)"/><text x="27.4943%" y="751.50">std::sys::u..</text></g><g><title>__libc_recv (79 samples, 8.25%)</title><rect x="27.2443%" y="725" width="8.2463%" height="15" fill="rgb(211,220,0)"/><text x="27.4943%" y="735.50">__libc_recv</text></g><g><title>syscall_return_via_sysret (1 samples, 0.10%)</title><rect x="35.3862%" y="709" width="0.1044%" height="15" fill="rgb(229,52,16)"/><text x="35.6362%" y="719.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (83 samples, 8.66%)</title><rect x="27.1399%" y="821" width="8.6639%" height="15" fill="rgb(212,155,18)"/><text x="27.3899%" y="831.50">&lt;mysql_commo..</text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (3 samples, 0.31%)</title><rect x="35.4906%" y="805" width="0.3132%" height="15" fill="rgb(242,21,14)"/><text x="35.7406%" y="815.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (1 samples, 0.10%)</title><rect x="35.6994%" y="789" width="0.1044%" height="15" fill="rgb(222,19,48)"/><text x="35.9494%" y="799.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.10%)</title><rect x="35.6994%" y="773" width="0.1044%" height="15" fill="rgb(232,45,27)"/><text x="35.9494%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="35.6994%" y="757" width="0.1044%" height="15" fill="rgb(249,103,42)"/><text x="35.9494%" y="767.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="35.6994%" y="741" width="0.1044%" height="15" fill="rgb(246,81,33)"/><text x="35.9494%" y="751.50"></text></g><g><title>mysql::conn::Conn::read_packet (86 samples, 8.98%)</title><rect x="26.9311%" y="837" width="8.9770%" height="15" fill="rgb(252,33,42)"/><text x="27.1811%" y="847.50">mysql::conn::..</text></g><g><title>__rdl_dealloc (1 samples, 0.10%)</title><rect x="35.8038%" y="821" width="0.1044%" height="15" fill="rgb(209,212,41)"/><text x="36.0538%" y="831.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.10%)</title><rect x="35.8038%" y="805" width="0.1044%" height="15" fill="rgb(207,154,6)"/><text x="36.0538%" y="815.50"></text></g><g><title>lobsters::main (93 samples, 9.71%)</title><rect x="26.4092%" y="901" width="9.7077%" height="15" fill="rgb(223,64,47)"/><text x="26.6592%" y="911.50">lobsters::main</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (91 samples, 9.50%)</title><rect x="26.6180%" y="885" width="9.4990%" height="15" fill="rgb(211,161,38)"/><text x="26.8680%" y="895.50">mysql::conn::q..</text></g><g><title>mysql::conn::Conn::_query (91 samples, 9.50%)</title><rect x="26.6180%" y="869" width="9.4990%" height="15" fill="rgb(219,138,40)"/><text x="26.8680%" y="879.50">mysql::conn::C..</text></g><g><title>mysql::conn::Conn::handle_result_set (91 samples, 9.50%)</title><rect x="26.6180%" y="853" width="9.4990%" height="15" fill="rgb(241,228,46)"/><text x="26.8680%" y="863.50">mysql::conn::C..</text></g><g><title>mysql_common::packets::parse_ok_packet (2 samples, 0.21%)</title><rect x="35.9081%" y="837" width="0.2088%" height="15" fill="rgb(223,209,38)"/><text x="36.1581%" y="847.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.10%)</title><rect x="36.1169%" y="549" width="0.1044%" height="15" fill="rgb(236,164,45)"/><text x="36.3669%" y="559.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.10%)</title><rect x="36.1169%" y="533" width="0.1044%" height="15" fill="rgb(231,15,5)"/><text x="36.3669%" y="543.50"></text></g><g><title>ip_output (1 samples, 0.10%)</title><rect x="36.1169%" y="517" width="0.1044%" height="15" fill="rgb(252,35,15)"/><text x="36.3669%" y="527.50"></text></g><g><title>ip_finish_output2 (1 samples, 0.10%)</title><rect x="36.1169%" y="501" width="0.1044%" height="15" fill="rgb(248,181,18)"/><text x="36.3669%" y="511.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.10%)</title><rect x="36.1169%" y="485" width="0.1044%" height="15" fill="rgb(233,39,42)"/><text x="36.3669%" y="495.50"></text></g><g><title>do_softirq (1 samples, 0.10%)</title><rect x="36.1169%" y="469" width="0.1044%" height="15" fill="rgb(238,110,33)"/><text x="36.3669%" y="479.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.10%)</title><rect x="36.1169%" y="453" width="0.1044%" height="15" fill="rgb(233,195,10)"/><text x="36.3669%" y="463.50"></text></g><g><title>__do_softirq (1 samples, 0.10%)</title><rect x="36.1169%" y="437" width="0.1044%" height="15" fill="rgb(254,105,3)"/><text x="36.3669%" y="447.50"></text></g><g><title>net_rx_action (1 samples, 0.10%)</title><rect x="36.1169%" y="421" width="0.1044%" height="15" fill="rgb(221,225,9)"/><text x="36.3669%" y="431.50"></text></g><g><title>process_backlog (1 samples, 0.10%)</title><rect x="36.1169%" y="405" width="0.1044%" height="15" fill="rgb(224,227,45)"/><text x="36.3669%" y="415.50"></text></g><g><title>__netif_receive_skb_one_core (1 samples, 0.10%)</title><rect x="36.1169%" y="389" width="0.1044%" height="15" fill="rgb(229,198,43)"/><text x="36.3669%" y="399.50"></text></g><g><title>ip_rcv (1 samples, 0.10%)</title><rect x="36.1169%" y="373" width="0.1044%" height="15" fill="rgb(206,209,35)"/><text x="36.3669%" y="383.50"></text></g><g><title>ip_rcv_finish (1 samples, 0.10%)</title><rect x="36.1169%" y="357" width="0.1044%" height="15" fill="rgb(245,195,53)"/><text x="36.3669%" y="367.50"></text></g><g><title>ip_rcv_finish_core.constprop.0 (1 samples, 0.10%)</title><rect x="36.1169%" y="341" width="0.1044%" height="15" fill="rgb(240,92,26)"/><text x="36.3669%" y="351.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.21%)</title><rect x="36.1169%" y="693" width="0.2088%" height="15" fill="rgb(207,40,23)"/><text x="36.3669%" y="703.50"></text></g><g><title>do_syscall_64 (2 samples, 0.21%)</title><rect x="36.1169%" y="677" width="0.2088%" height="15" fill="rgb(223,111,35)"/><text x="36.3669%" y="687.50"></text></g><g><title>__x64_sys_sendto (2 samples, 0.21%)</title><rect x="36.1169%" y="661" width="0.2088%" height="15" fill="rgb(229,147,28)"/><text x="36.3669%" y="671.50"></text></g><g><title>__sys_sendto (2 samples, 0.21%)</title><rect x="36.1169%" y="645" width="0.2088%" height="15" fill="rgb(211,29,28)"/><text x="36.3669%" y="655.50"></text></g><g><title>sock_sendmsg (2 samples, 0.21%)</title><rect x="36.1169%" y="629" width="0.2088%" height="15" fill="rgb(228,72,33)"/><text x="36.3669%" y="639.50"></text></g><g><title>tcp_sendmsg (2 samples, 0.21%)</title><rect x="36.1169%" y="613" width="0.2088%" height="15" fill="rgb(205,214,31)"/><text x="36.3669%" y="623.50"></text></g><g><title>tcp_sendmsg_locked (2 samples, 0.21%)</title><rect x="36.1169%" y="597" width="0.2088%" height="15" fill="rgb(224,111,15)"/><text x="36.3669%" y="607.50"></text></g><g><title>__tcp_push_pending_frames (2 samples, 0.21%)</title><rect x="36.1169%" y="581" width="0.2088%" height="15" fill="rgb(253,21,26)"/><text x="36.3669%" y="591.50"></text></g><g><title>tcp_write_xmit (2 samples, 0.21%)</title><rect x="36.1169%" y="565" width="0.2088%" height="15" fill="rgb(245,139,43)"/><text x="36.3669%" y="575.50"></text></g><g><title>ktime_get (1 samples, 0.10%)</title><rect x="36.2213%" y="549" width="0.1044%" height="15" fill="rgb(252,170,7)"/><text x="36.4713%" y="559.50"></text></g><g><title>read_tsc (1 samples, 0.10%)</title><rect x="36.2213%" y="533" width="0.1044%" height="15" fill="rgb(231,118,14)"/><text x="36.4713%" y="543.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query_drop (3 samples, 0.31%)</title><rect x="36.1169%" y="853" width="0.3132%" height="15" fill="rgb(238,83,0)"/><text x="36.3669%" y="863.50"></text></g><g><title>mysql::conn::Conn::start_transaction (3 samples, 0.31%)</title><rect x="36.1169%" y="837" width="0.3132%" height="15" fill="rgb(221,39,39)"/><text x="36.3669%" y="847.50"></text></g><g><title>mysql::conn::Conn::_start_transaction (3 samples, 0.31%)</title><rect x="36.1169%" y="821" width="0.3132%" height="15" fill="rgb(222,119,46)"/><text x="36.3669%" y="831.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (3 samples, 0.31%)</title><rect x="36.1169%" y="805" width="0.3132%" height="15" fill="rgb(222,165,49)"/><text x="36.3669%" y="815.50"></text></g><g><title>mysql::conn::Conn::_query (3 samples, 0.31%)</title><rect x="36.1169%" y="789" width="0.3132%" height="15" fill="rgb(219,113,52)"/><text x="36.3669%" y="799.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (3 samples, 0.31%)</title><rect x="36.1169%" y="773" width="0.3132%" height="15" fill="rgb(214,7,15)"/><text x="36.3669%" y="783.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (3 samples, 0.31%)</title><rect x="36.1169%" y="757" width="0.3132%" height="15" fill="rgb(235,32,4)"/><text x="36.3669%" y="767.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (3 samples, 0.31%)</title><rect x="36.1169%" y="741" width="0.3132%" height="15" fill="rgb(238,90,54)"/><text x="36.3669%" y="751.50"></text></g><g><title>std::sys_common::net::TcpStream::write (3 samples, 0.31%)</title><rect x="36.1169%" y="725" width="0.3132%" height="15" fill="rgb(213,208,19)"/><text x="36.3669%" y="735.50"></text></g><g><title>__libc_send (3 samples, 0.31%)</title><rect x="36.1169%" y="709" width="0.3132%" height="15" fill="rgb(233,156,4)"/><text x="36.3669%" y="719.50"></text></g><g><title>syscall_return_via_sysret (1 samples, 0.10%)</title><rect x="36.3257%" y="693" width="0.1044%" height="15" fill="rgb(207,194,5)"/><text x="36.5757%" y="703.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (4 samples, 0.42%)</title><rect x="36.1169%" y="885" width="0.4175%" height="15" fill="rgb(206,111,30)"/><text x="36.3669%" y="895.50"></text></g><g><title>decor::Shim::create_schema (4 samples, 0.42%)</title><rect x="36.1169%" y="869" width="0.4175%" height="15" fill="rgb(243,70,54)"/><text x="36.3669%" y="879.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (1 samples, 0.10%)</title><rect x="36.4301%" y="853" width="0.1044%" height="15" fill="rgb(242,28,8)"/><text x="36.6801%" y="863.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="36.4301%" y="837" width="0.1044%" height="15" fill="rgb(219,106,18)"/><text x="36.6801%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="36.4301%" y="821" width="0.1044%" height="15" fill="rgb(244,222,10)"/><text x="36.6801%" y="831.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="36.4301%" y="805" width="0.1044%" height="15" fill="rgb(236,179,52)"/><text x="36.6801%" y="815.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="36.4301%" y="789" width="0.1044%" height="15" fill="rgb(213,23,39)"/><text x="36.6801%" y="799.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (3 samples, 0.31%)</title><rect x="36.6388%" y="837" width="0.3132%" height="15" fill="rgb(238,48,10)"/><text x="36.8888%" y="847.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (2 samples, 0.21%)</title><rect x="36.7432%" y="821" width="0.2088%" height="15" fill="rgb(251,196,23)"/><text x="36.9932%" y="831.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="36.8476%" y="805" width="0.1044%" height="15" fill="rgb(250,152,24)"/><text x="37.0976%" y="815.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="36.8476%" y="789" width="0.1044%" height="15" fill="rgb(209,150,17)"/><text x="37.0976%" y="799.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="36.9520%" y="837" width="0.1044%" height="15" fill="rgb(234,202,34)"/><text x="37.2020%" y="847.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="36.9520%" y="821" width="0.1044%" height="15" fill="rgb(253,148,53)"/><text x="37.2020%" y="831.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (8 samples, 0.84%)</title><rect x="36.5344%" y="853" width="0.8351%" height="15" fill="rgb(218,129,16)"/><text x="36.7844%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (3 samples, 0.31%)</title><rect x="37.0564%" y="837" width="0.3132%" height="15" fill="rgb(216,85,19)"/><text x="37.3064%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.21%)</title><rect x="37.1608%" y="821" width="0.2088%" height="15" fill="rgb(235,228,7)"/><text x="37.4108%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.21%)</title><rect x="37.1608%" y="805" width="0.2088%" height="15" fill="rgb(245,175,0)"/><text x="37.4108%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.21%)</title><rect x="37.1608%" y="789" width="0.2088%" height="15" fill="rgb(208,168,36)"/><text x="37.4108%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.21%)</title><rect x="37.1608%" y="773" width="0.2088%" height="15" fill="rgb(246,171,24)"/><text x="37.4108%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.21%)</title><rect x="37.1608%" y="757" width="0.2088%" height="15" fill="rgb(215,142,24)"/><text x="37.4108%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.21%)</title><rect x="37.1608%" y="741" width="0.2088%" height="15" fill="rgb(250,187,7)"/><text x="37.4108%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.21%)</title><rect x="37.1608%" y="725" width="0.2088%" height="15" fill="rgb(228,66,33)"/><text x="37.4108%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.21%)</title><rect x="37.1608%" y="709" width="0.2088%" height="15" fill="rgb(234,215,21)"/><text x="37.4108%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.21%)</title><rect x="37.1608%" y="693" width="0.2088%" height="15" fill="rgb(222,191,20)"/><text x="37.4108%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.21%)</title><rect x="37.1608%" y="677" width="0.2088%" height="15" fill="rgb(245,79,54)"/><text x="37.4108%" y="687.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.21%)</title><rect x="37.1608%" y="661" width="0.2088%" height="15" fill="rgb(240,10,37)"/><text x="37.4108%" y="671.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.21%)</title><rect x="37.1608%" y="645" width="0.2088%" height="15" fill="rgb(214,192,32)"/><text x="37.4108%" y="655.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="37.2651%" y="629" width="0.1044%" height="15" fill="rgb(209,36,54)"/><text x="37.5151%" y="639.50"></text></g><g><title>kernel_init_free_pages (1 samples, 0.10%)</title><rect x="37.3695%" y="661" width="0.1044%" height="15" fill="rgb(220,10,11)"/><text x="37.6195%" y="671.50"></text></g><g><title>clear_page_erms (1 samples, 0.10%)</title><rect x="37.3695%" y="645" width="0.1044%" height="15" fill="rgb(221,106,17)"/><text x="37.6195%" y="655.50"></text></g><g><title>page_fault (2 samples, 0.21%)</title><rect x="37.3695%" y="789" width="0.2088%" height="15" fill="rgb(251,142,44)"/><text x="37.6195%" y="799.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.21%)</title><rect x="37.3695%" y="773" width="0.2088%" height="15" fill="rgb(238,13,15)"/><text x="37.6195%" y="783.50"></text></g><g><title>handle_mm_fault (2 samples, 0.21%)</title><rect x="37.3695%" y="757" width="0.2088%" height="15" fill="rgb(208,107,27)"/><text x="37.6195%" y="767.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.21%)</title><rect x="37.3695%" y="741" width="0.2088%" height="15" fill="rgb(205,136,37)"/><text x="37.6195%" y="751.50"></text></g><g><title>alloc_pages_vma (2 samples, 0.21%)</title><rect x="37.3695%" y="725" width="0.2088%" height="15" fill="rgb(250,205,27)"/><text x="37.6195%" y="735.50"></text></g><g><title>__alloc_pages_nodemask (2 samples, 0.21%)</title><rect x="37.3695%" y="709" width="0.2088%" height="15" fill="rgb(210,80,43)"/><text x="37.6195%" y="719.50"></text></g><g><title>get_page_from_freelist (2 samples, 0.21%)</title><rect x="37.3695%" y="693" width="0.2088%" height="15" fill="rgb(247,160,36)"/><text x="37.6195%" y="703.50"></text></g><g><title>prep_new_page (2 samples, 0.21%)</title><rect x="37.3695%" y="677" width="0.2088%" height="15" fill="rgb(234,13,49)"/><text x="37.6195%" y="687.50"></text></g><g><title>page_poisoning_enabled (1 samples, 0.10%)</title><rect x="37.4739%" y="661" width="0.1044%" height="15" fill="rgb(234,122,0)"/><text x="37.7239%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (3 samples, 0.31%)</title><rect x="37.3695%" y="853" width="0.3132%" height="15" fill="rgb(207,146,38)"/><text x="37.6195%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (3 samples, 0.31%)</title><rect x="37.3695%" y="837" width="0.3132%" height="15" fill="rgb(207,177,25)"/><text x="37.6195%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (3 samples, 0.31%)</title><rect x="37.3695%" y="821" width="0.3132%" height="15" fill="rgb(211,178,42)"/><text x="37.6195%" y="831.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.31%)</title><rect x="37.3695%" y="805" width="0.3132%" height="15" fill="rgb(230,69,54)"/><text x="37.6195%" y="815.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.10%)</title><rect x="37.5783%" y="789" width="0.1044%" height="15" fill="rgb(214,135,41)"/><text x="37.8283%" y="799.50"></text></g><g><title>malloc_consolidate (1 samples, 0.10%)</title><rect x="37.7871%" y="789" width="0.1044%" height="15" fill="rgb(237,67,25)"/><text x="38.0371%" y="799.50"></text></g><g><title>perf_event_mmap (1 samples, 0.10%)</title><rect x="37.9958%" y="677" width="0.1044%" height="15" fill="rgb(222,189,50)"/><text x="38.2458%" y="687.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.10%)</title><rect x="37.9958%" y="661" width="0.1044%" height="15" fill="rgb(245,148,34)"/><text x="38.2458%" y="671.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.10%)</title><rect x="37.9958%" y="645" width="0.1044%" height="15" fill="rgb(222,29,6)"/><text x="38.2458%" y="655.50"></text></g><g><title>perf_event_mmap_output (1 samples, 0.10%)</title><rect x="37.9958%" y="629" width="0.1044%" height="15" fill="rgb(221,189,43)"/><text x="38.2458%" y="639.50"></text></g><g><title>perf_output_begin (1 samples, 0.10%)</title><rect x="37.9958%" y="613" width="0.1044%" height="15" fill="rgb(207,36,27)"/><text x="38.2458%" y="623.50"></text></g><g><title>__GI___mprotect (3 samples, 0.31%)</title><rect x="37.9958%" y="773" width="0.3132%" height="15" fill="rgb(217,90,24)"/><text x="38.2458%" y="783.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.31%)</title><rect x="37.9958%" y="757" width="0.3132%" height="15" fill="rgb(224,66,35)"/><text x="38.2458%" y="767.50"></text></g><g><title>do_syscall_64 (3 samples, 0.31%)</title><rect x="37.9958%" y="741" width="0.3132%" height="15" fill="rgb(221,13,50)"/><text x="38.2458%" y="751.50"></text></g><g><title>__x64_sys_mprotect (3 samples, 0.31%)</title><rect x="37.9958%" y="725" width="0.3132%" height="15" fill="rgb(236,68,49)"/><text x="38.2458%" y="735.50"></text></g><g><title>do_mprotect_pkey (3 samples, 0.31%)</title><rect x="37.9958%" y="709" width="0.3132%" height="15" fill="rgb(229,146,28)"/><text x="38.2458%" y="719.50"></text></g><g><title>mprotect_fixup (3 samples, 0.31%)</title><rect x="37.9958%" y="693" width="0.3132%" height="15" fill="rgb(225,31,38)"/><text x="38.2458%" y="703.50"></text></g><g><title>vma_merge (2 samples, 0.21%)</title><rect x="38.1002%" y="677" width="0.2088%" height="15" fill="rgb(250,208,3)"/><text x="38.3502%" y="687.50"></text></g><g><title>__vma_adjust (2 samples, 0.21%)</title><rect x="38.1002%" y="661" width="0.2088%" height="15" fill="rgb(246,54,23)"/><text x="38.3502%" y="671.50"></text></g><g><title>anon_vma_interval_tree_remove (1 samples, 0.10%)</title><rect x="38.2046%" y="645" width="0.1044%" height="15" fill="rgb(243,76,11)"/><text x="38.4546%" y="655.50"></text></g><g><title>handle_mm_fault (1 samples, 0.10%)</title><rect x="38.3090%" y="773" width="0.1044%" height="15" fill="rgb(245,21,50)"/><text x="38.5590%" y="783.50"></text></g><g><title>__lru_cache_add (1 samples, 0.10%)</title><rect x="38.4134%" y="709" width="0.1044%" height="15" fill="rgb(228,9,43)"/><text x="38.6634%" y="719.50"></text></g><g><title>pagevec_lru_move_fn (1 samples, 0.10%)</title><rect x="38.4134%" y="693" width="0.1044%" height="15" fill="rgb(208,100,47)"/><text x="38.6634%" y="703.50"></text></g><g><title>__pagevec_lru_add_fn (1 samples, 0.10%)</title><rect x="38.4134%" y="677" width="0.1044%" height="15" fill="rgb(232,26,8)"/><text x="38.6634%" y="687.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.10%)</title><rect x="38.4134%" y="661" width="0.1044%" height="15" fill="rgb(216,166,38)"/><text x="38.6634%" y="671.50"></text></g><g><title>__alloc_pages_nodemask (2 samples, 0.21%)</title><rect x="38.5177%" y="693" width="0.2088%" height="15" fill="rgb(251,202,51)"/><text x="38.7677%" y="703.50"></text></g><g><title>get_page_from_freelist (2 samples, 0.21%)</title><rect x="38.5177%" y="677" width="0.2088%" height="15" fill="rgb(254,216,34)"/><text x="38.7677%" y="687.50"></text></g><g><title>prep_new_page (2 samples, 0.21%)</title><rect x="38.5177%" y="661" width="0.2088%" height="15" fill="rgb(251,32,27)"/><text x="38.7677%" y="671.50"></text></g><g><title>kernel_init_free_pages (2 samples, 0.21%)</title><rect x="38.5177%" y="645" width="0.2088%" height="15" fill="rgb(208,127,28)"/><text x="38.7677%" y="655.50"></text></g><g><title>clear_page_erms (2 samples, 0.21%)</title><rect x="38.5177%" y="629" width="0.2088%" height="15" fill="rgb(224,137,22)"/><text x="38.7677%" y="639.50"></text></g><g><title>page_fault (4 samples, 0.42%)</title><rect x="38.4134%" y="773" width="0.4175%" height="15" fill="rgb(254,70,32)"/><text x="38.6634%" y="783.50"></text></g><g><title>do_user_addr_fault (4 samples, 0.42%)</title><rect x="38.4134%" y="757" width="0.4175%" height="15" fill="rgb(229,75,37)"/><text x="38.6634%" y="767.50"></text></g><g><title>handle_mm_fault (4 samples, 0.42%)</title><rect x="38.4134%" y="741" width="0.4175%" height="15" fill="rgb(252,64,23)"/><text x="38.6634%" y="751.50"></text></g><g><title>__handle_mm_fault (4 samples, 0.42%)</title><rect x="38.4134%" y="725" width="0.4175%" height="15" fill="rgb(232,162,48)"/><text x="38.6634%" y="735.50"></text></g><g><title>alloc_pages_vma (3 samples, 0.31%)</title><rect x="38.5177%" y="709" width="0.3132%" height="15" fill="rgb(246,160,12)"/><text x="38.7677%" y="719.50"></text></g><g><title>policy_node (1 samples, 0.10%)</title><rect x="38.7265%" y="693" width="0.1044%" height="15" fill="rgb(247,166,0)"/><text x="38.9765%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (12 samples, 1.25%)</title><rect x="37.6827%" y="837" width="1.2526%" height="15" fill="rgb(249,219,21)"/><text x="37.9327%" y="847.50"></text></g><g><title>__GI___libc_malloc (12 samples, 1.25%)</title><rect x="37.6827%" y="821" width="1.2526%" height="15" fill="rgb(205,209,3)"/><text x="37.9327%" y="831.50"></text></g><g><title>_int_malloc (12 samples, 1.25%)</title><rect x="37.6827%" y="805" width="1.2526%" height="15" fill="rgb(243,44,1)"/><text x="37.9327%" y="815.50"></text></g><g><title>sysmalloc (10 samples, 1.04%)</title><rect x="37.8914%" y="789" width="1.0438%" height="15" fill="rgb(206,159,16)"/><text x="38.1414%" y="799.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.10%)</title><rect x="38.8309%" y="773" width="0.1044%" height="15" fill="rgb(244,77,30)"/><text x="39.0809%" y="783.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.10%)</title><rect x="38.8309%" y="757" width="0.1044%" height="15" fill="rgb(218,69,12)"/><text x="39.0809%" y="767.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.21%)</title><rect x="38.9353%" y="837" width="0.2088%" height="15" fill="rgb(212,87,7)"/><text x="39.1853%" y="847.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="39.0397%" y="821" width="0.1044%" height="15" fill="rgb(245,114,25)"/><text x="39.2897%" y="831.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.21%)</title><rect x="39.3528%" y="773" width="0.2088%" height="15" fill="rgb(210,61,42)"/><text x="39.6028%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.42%)</title><rect x="39.3528%" y="821" width="0.4175%" height="15" fill="rgb(211,52,33)"/><text x="39.6028%" y="831.50"></text></g><g><title>__GI___libc_realloc (4 samples, 0.42%)</title><rect x="39.3528%" y="805" width="0.4175%" height="15" fill="rgb(234,58,33)"/><text x="39.6028%" y="815.50"></text></g><g><title>_int_realloc (4 samples, 0.42%)</title><rect x="39.3528%" y="789" width="0.4175%" height="15" fill="rgb(220,115,36)"/><text x="39.6028%" y="799.50"></text></g><g><title>_int_malloc (2 samples, 0.21%)</title><rect x="39.5616%" y="773" width="0.2088%" height="15" fill="rgb(243,153,54)"/><text x="39.8116%" y="783.50"></text></g><g><title>malloc_consolidate (2 samples, 0.21%)</title><rect x="39.5616%" y="757" width="0.2088%" height="15" fill="rgb(251,47,18)"/><text x="39.8116%" y="767.50"></text></g><g><title>page_fault (1 samples, 0.10%)</title><rect x="39.7704%" y="821" width="0.1044%" height="15" fill="rgb(242,102,42)"/><text x="40.0204%" y="831.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.10%)</title><rect x="39.7704%" y="805" width="0.1044%" height="15" fill="rgb(234,31,38)"/><text x="40.0204%" y="815.50"></text></g><g><title>handle_mm_fault (1 samples, 0.10%)</title><rect x="39.7704%" y="789" width="0.1044%" height="15" fill="rgb(221,117,51)"/><text x="40.0204%" y="799.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.10%)</title><rect x="39.7704%" y="773" width="0.1044%" height="15" fill="rgb(212,20,18)"/><text x="40.0204%" y="783.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.10%)</title><rect x="39.7704%" y="757" width="0.1044%" height="15" fill="rgb(245,133,36)"/><text x="40.0204%" y="767.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.10%)</title><rect x="39.7704%" y="741" width="0.1044%" height="15" fill="rgb(212,6,19)"/><text x="40.0204%" y="751.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.10%)</title><rect x="39.7704%" y="725" width="0.1044%" height="15" fill="rgb(218,1,36)"/><text x="40.0204%" y="735.50"></text></g><g><title>prep_new_page (1 samples, 0.10%)</title><rect x="39.7704%" y="709" width="0.1044%" height="15" fill="rgb(246,84,54)"/><text x="40.0204%" y="719.50"></text></g><g><title>kernel_init_free_pages (1 samples, 0.10%)</title><rect x="39.7704%" y="693" width="0.1044%" height="15" fill="rgb(242,110,6)"/><text x="40.0204%" y="703.50"></text></g><g><title>clear_page_erms (1 samples, 0.10%)</title><rect x="39.7704%" y="677" width="0.1044%" height="15" fill="rgb(214,47,5)"/><text x="40.0204%" y="687.50"></text></g><g><title>sql_parser::tokenizer::PeekableChars::next (1 samples, 0.10%)</title><rect x="40.2923%" y="805" width="0.1044%" height="15" fill="rgb(218,159,25)"/><text x="40.5423%" y="815.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.21%)</title><rect x="41.9624%" y="789" width="0.2088%" height="15" fill="rgb(215,211,28)"/><text x="42.2124%" y="799.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="42.0668%" y="773" width="0.1044%" height="15" fill="rgb(238,59,32)"/><text x="42.3168%" y="783.50"></text></g><g><title>__memcmp_avx2_movbe (8 samples, 0.84%)</title><rect x="42.1712%" y="789" width="0.8351%" height="15" fill="rgb(226,82,3)"/><text x="42.4212%" y="799.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="43.0063%" y="773" width="0.1044%" height="15" fill="rgb(240,164,32)"/><text x="43.2563%" y="783.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.10%)</title><rect x="43.0063%" y="757" width="0.1044%" height="15" fill="rgb(232,46,7)"/><text x="43.2563%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (2 samples, 0.21%)</title><rect x="43.1106%" y="757" width="0.2088%" height="15" fill="rgb(229,129,53)"/><text x="43.3606%" y="767.50"></text></g><g><title>alloc::string::String::push (3 samples, 0.31%)</title><rect x="43.1106%" y="773" width="0.3132%" height="15" fill="rgb(234,188,29)"/><text x="43.3606%" y="783.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::len_utf8 (1 samples, 0.10%)</title><rect x="43.3194%" y="757" width="0.1044%" height="15" fill="rgb(246,141,4)"/><text x="43.5694%" y="767.50"></text></g><g><title>core::char::methods::len_utf8 (1 samples, 0.10%)</title><rect x="43.3194%" y="741" width="0.1044%" height="15" fill="rgb(229,23,39)"/><text x="43.5694%" y="751.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.10%)</title><rect x="43.4238%" y="773" width="0.1044%" height="15" fill="rgb(206,12,3)"/><text x="43.6738%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="43.4238%" y="757" width="0.1044%" height="15" fill="rgb(252,226,20)"/><text x="43.6738%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="43.4238%" y="741" width="0.1044%" height="15" fill="rgb(216,123,35)"/><text x="43.6738%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="43.4238%" y="725" width="0.1044%" height="15" fill="rgb(212,68,40)"/><text x="43.6738%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="43.4238%" y="709" width="0.1044%" height="15" fill="rgb(254,125,32)"/><text x="43.6738%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="43.4238%" y="693" width="0.1044%" height="15" fill="rgb(253,97,22)"/><text x="43.6738%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="43.4238%" y="677" width="0.1044%" height="15" fill="rgb(241,101,14)"/><text x="43.6738%" y="687.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="43.4238%" y="661" width="0.1044%" height="15" fill="rgb(238,103,29)"/><text x="43.6738%" y="671.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (35 samples, 3.65%)</title><rect x="40.3967%" y="805" width="3.6534%" height="15" fill="rgb(233,195,47)"/><text x="40.6467%" y="815.50">sql_..</text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (10 samples, 1.04%)</title><rect x="43.0063%" y="789" width="1.0438%" height="15" fill="rgb(246,218,30)"/><text x="43.2563%" y="799.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (5 samples, 0.52%)</title><rect x="43.5282%" y="773" width="0.5219%" height="15" fill="rgb(219,145,47)"/><text x="43.7782%" y="783.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (5 samples, 0.52%)</title><rect x="43.5282%" y="757" width="0.5219%" height="15" fill="rgb(243,12,26)"/><text x="43.7782%" y="767.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (5 samples, 0.52%)</title><rect x="43.5282%" y="741" width="0.5219%" height="15" fill="rgb(214,87,16)"/><text x="43.7782%" y="751.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (3 samples, 0.31%)</title><rect x="43.7370%" y="725" width="0.3132%" height="15" fill="rgb(208,99,42)"/><text x="43.9870%" y="735.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_string (2 samples, 0.21%)</title><rect x="44.0501%" y="805" width="0.2088%" height="15" fill="rgb(253,99,2)"/><text x="44.3001%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="44.1545%" y="789" width="0.1044%" height="15" fill="rgb(220,168,23)"/><text x="44.4045%" y="799.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.10%)</title><rect x="44.1545%" y="773" width="0.1044%" height="15" fill="rgb(242,38,24)"/><text x="44.4045%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.10%)</title><rect x="44.3633%" y="789" width="0.1044%" height="15" fill="rgb(225,182,9)"/><text x="44.6133%" y="799.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.21%)</title><rect x="44.4676%" y="773" width="0.2088%" height="15" fill="rgb(243,178,37)"/><text x="44.7176%" y="783.50"></text></g><g><title>__rdl_realloc (1 samples, 0.10%)</title><rect x="44.6764%" y="773" width="0.1044%" height="15" fill="rgb(232,139,19)"/><text x="44.9264%" y="783.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.10%)</title><rect x="44.6764%" y="757" width="0.1044%" height="15" fill="rgb(225,201,24)"/><text x="44.9264%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.42%)</title><rect x="44.4676%" y="789" width="0.4175%" height="15" fill="rgb(221,47,46)"/><text x="44.7176%" y="799.50"></text></g><g><title>__rust_realloc (1 samples, 0.10%)</title><rect x="44.7808%" y="773" width="0.1044%" height="15" fill="rgb(249,23,13)"/><text x="45.0308%" y="783.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (50 samples, 5.22%)</title><rect x="39.8747%" y="821" width="5.2192%" height="15" fill="rgb(219,9,5)"/><text x="40.1247%" y="831.50">sql_pa..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_word (8 samples, 0.84%)</title><rect x="44.2589%" y="805" width="0.8351%" height="15" fill="rgb(254,171,16)"/><text x="44.5089%" y="815.50"></text></g><g><title>sql_parser::tokenizer::PeekableChars::next (2 samples, 0.21%)</title><rect x="44.8852%" y="789" width="0.2088%" height="15" fill="rgb(230,171,20)"/><text x="45.1352%" y="799.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="45.1983%" y="805" width="0.1044%" height="15" fill="rgb(210,71,41)"/><text x="45.4483%" y="815.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (90 samples, 9.39%)</title><rect x="36.1169%" y="901" width="9.3946%" height="15" fill="rgb(206,173,20)"/><text x="36.3669%" y="911.50">msql_srv::Mys..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (86 samples, 8.98%)</title><rect x="36.5344%" y="885" width="8.9770%" height="15" fill="rgb(233,88,34)"/><text x="36.7844%" y="895.50">&lt;decor::Shim ..</text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (86 samples, 8.98%)</title><rect x="36.5344%" y="869" width="8.9770%" height="15" fill="rgb(223,209,46)"/><text x="36.7844%" y="879.50">decor::sqlpar..</text></g><g><title>sql_parser::parser::parse_statements (75 samples, 7.83%)</title><rect x="37.6827%" y="853" width="7.8288%" height="15" fill="rgb(250,43,18)"/><text x="37.9327%" y="863.50">sql_parser:..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (61 samples, 6.37%)</title><rect x="39.1441%" y="837" width="6.3674%" height="15" fill="rgb(208,13,10)"/><text x="39.3941%" y="847.50">sql_pars..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_number (4 samples, 0.42%)</title><rect x="45.0939%" y="821" width="0.4175%" height="15" fill="rgb(212,200,36)"/><text x="45.3439%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.21%)</title><rect x="45.3027%" y="805" width="0.2088%" height="15" fill="rgb(225,90,30)"/><text x="45.5527%" y="815.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.21%)</title><rect x="45.3027%" y="789" width="0.2088%" height="15" fill="rgb(236,182,39)"/><text x="45.5527%" y="799.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="45.4071%" y="773" width="0.1044%" height="15" fill="rgb(212,144,35)"/><text x="45.6571%" y="783.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.10%)</title><rect x="45.5115%" y="901" width="0.1044%" height="15" fill="rgb(228,63,44)"/><text x="45.7615%" y="911.50"></text></g><g><title>regex::exec::ExecBuilder::build (1 samples, 0.10%)</title><rect x="45.6159%" y="901" width="0.1044%" height="15" fill="rgb(228,109,6)"/><text x="45.8659%" y="911.50"></text></g><g><title>regex::compile::Compiler::compile (1 samples, 0.10%)</title><rect x="45.6159%" y="885" width="0.1044%" height="15" fill="rgb(238,117,24)"/><text x="45.8659%" y="895.50"></text></g><g><title>regex::compile::Compiler::compile_finish (1 samples, 0.10%)</title><rect x="45.6159%" y="869" width="0.1044%" height="15" fill="rgb(242,26,26)"/><text x="45.8659%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="45.6159%" y="853" width="0.1044%" height="15" fill="rgb(221,92,48)"/><text x="45.8659%" y="863.50"></text></g><g><title>page_fault (1 samples, 0.10%)</title><rect x="45.6159%" y="837" width="0.1044%" height="15" fill="rgb(209,209,32)"/><text x="45.8659%" y="847.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.10%)</title><rect x="45.6159%" y="821" width="0.1044%" height="15" fill="rgb(221,70,22)"/><text x="45.8659%" y="831.50"></text></g><g><title>handle_mm_fault (1 samples, 0.10%)</title><rect x="45.6159%" y="805" width="0.1044%" height="15" fill="rgb(248,145,5)"/><text x="45.8659%" y="815.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.10%)</title><rect x="45.6159%" y="789" width="0.1044%" height="15" fill="rgb(226,116,26)"/><text x="45.8659%" y="799.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.10%)</title><rect x="45.6159%" y="773" width="0.1044%" height="15" fill="rgb(244,5,17)"/><text x="45.8659%" y="783.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.10%)</title><rect x="45.6159%" y="757" width="0.1044%" height="15" fill="rgb(252,159,33)"/><text x="45.8659%" y="767.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.10%)</title><rect x="45.6159%" y="741" width="0.1044%" height="15" fill="rgb(206,71,0)"/><text x="45.8659%" y="751.50"></text></g><g><title>prep_new_page (1 samples, 0.10%)</title><rect x="45.6159%" y="725" width="0.1044%" height="15" fill="rgb(233,118,54)"/><text x="45.8659%" y="735.50"></text></g><g><title>kernel_init_free_pages (1 samples, 0.10%)</title><rect x="45.6159%" y="709" width="0.1044%" height="15" fill="rgb(234,83,48)"/><text x="45.8659%" y="719.50"></text></g><g><title>clear_page_erms (1 samples, 0.10%)</title><rect x="45.6159%" y="693" width="0.1044%" height="15" fill="rgb(228,3,54)"/><text x="45.8659%" y="703.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="45.9290%" y="821" width="0.1044%" height="15" fill="rgb(226,155,13)"/><text x="46.1790%" y="831.50"></text></g><g><title>__GI___libc_free (1 samples, 0.10%)</title><rect x="46.0334%" y="821" width="0.1044%" height="15" fill="rgb(241,28,37)"/><text x="46.2834%" y="831.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.10%)</title><rect x="46.1378%" y="821" width="0.1044%" height="15" fill="rgb(233,93,10)"/><text x="46.3878%" y="831.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="46.3466%" y="805" width="0.1044%" height="15" fill="rgb(225,113,19)"/><text x="46.5966%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (13 samples, 1.36%)</title><rect x="46.4509%" y="789" width="1.3570%" height="15" fill="rgb(241,2,18)"/><text x="46.7009%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (13 samples, 1.36%)</title><rect x="46.4509%" y="773" width="1.3570%" height="15" fill="rgb(228,207,21)"/><text x="46.7009%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (13 samples, 1.36%)</title><rect x="46.4509%" y="757" width="1.3570%" height="15" fill="rgb(213,211,35)"/><text x="46.7009%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (13 samples, 1.36%)</title><rect x="46.4509%" y="741" width="1.3570%" height="15" fill="rgb(209,83,10)"/><text x="46.7009%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (13 samples, 1.36%)</title><rect x="46.4509%" y="725" width="1.3570%" height="15" fill="rgb(209,164,1)"/><text x="46.7009%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (13 samples, 1.36%)</title><rect x="46.4509%" y="709" width="1.3570%" height="15" fill="rgb(213,184,43)"/><text x="46.7009%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (13 samples, 1.36%)</title><rect x="46.4509%" y="693" width="1.3570%" height="15" fill="rgb(231,61,34)"/><text x="46.7009%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 1.36%)</title><rect x="46.4509%" y="677" width="1.3570%" height="15" fill="rgb(235,75,3)"/><text x="46.7009%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (13 samples, 1.36%)</title><rect x="46.4509%" y="661" width="1.3570%" height="15" fill="rgb(220,106,47)"/><text x="46.7009%" y="671.50"></text></g><g><title>__GI___libc_free (2 samples, 0.21%)</title><rect x="47.8079%" y="789" width="0.2088%" height="15" fill="rgb(210,196,33)"/><text x="48.0579%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (18 samples, 1.88%)</title><rect x="46.2422%" y="821" width="1.8789%" height="15" fill="rgb(229,154,42)"/><text x="46.4922%" y="831.50">s..</text></g><g><title>sql_parser::parser::Parser::expected (16 samples, 1.67%)</title><rect x="46.4509%" y="805" width="1.6701%" height="15" fill="rgb(228,114,26)"/><text x="46.7009%" y="815.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.10%)</title><rect x="48.0167%" y="789" width="0.1044%" height="15" fill="rgb(208,144,1)"/><text x="48.2667%" y="799.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.10%)</title><rect x="48.0167%" y="773" width="0.1044%" height="15" fill="rgb(239,112,37)"/><text x="48.2667%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.10%)</title><rect x="48.0167%" y="757" width="0.1044%" height="15" fill="rgb(210,96,50)"/><text x="48.2667%" y="767.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.10%)</title><rect x="48.0167%" y="741" width="0.1044%" height="15" fill="rgb(222,178,2)"/><text x="48.2667%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="48.0167%" y="725" width="0.1044%" height="15" fill="rgb(226,74,18)"/><text x="48.2667%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.10%)</title><rect x="48.0167%" y="709" width="0.1044%" height="15" fill="rgb(225,67,54)"/><text x="48.2667%" y="719.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.10%)</title><rect x="48.0167%" y="693" width="0.1044%" height="15" fill="rgb(251,92,32)"/><text x="48.2667%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (24 samples, 2.51%)</title><rect x="45.7203%" y="901" width="2.5052%" height="15" fill="rgb(228,149,22)"/><text x="45.9703%" y="911.50">sq..</text></g><g><title>sql_parser::parser::Parser::parse_query_body (24 samples, 2.51%)</title><rect x="45.7203%" y="885" width="2.5052%" height="15" fill="rgb(243,54,13)"/><text x="45.9703%" y="895.50">sq..</text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (24 samples, 2.51%)</title><rect x="45.7203%" y="869" width="2.5052%" height="15" fill="rgb(243,180,28)"/><text x="45.9703%" y="879.50">sq..</text></g><g><title>sql_parser::parser::Parser::check_descent (24 samples, 2.51%)</title><rect x="45.7203%" y="853" width="2.5052%" height="15" fill="rgb(208,167,24)"/><text x="45.9703%" y="863.50">sq..</text></g><g><title>sql_parser::parser::Parser::parse_prefix (24 samples, 2.51%)</title><rect x="45.7203%" y="837" width="2.5052%" height="15" fill="rgb(245,73,45)"/><text x="45.9703%" y="847.50">sq..</text></g><g><title>sql_parser::parser::Parser::parse_value (1 samples, 0.10%)</title><rect x="48.1211%" y="821" width="0.1044%" height="15" fill="rgb(237,203,48)"/><text x="48.3711%" y="831.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="48.1211%" y="805" width="0.1044%" height="15" fill="rgb(211,197,16)"/><text x="48.3711%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="48.1211%" y="789" width="0.1044%" height="15" fill="rgb(243,99,51)"/><text x="48.3711%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="48.1211%" y="773" width="0.1044%" height="15" fill="rgb(215,123,29)"/><text x="48.3711%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="48.1211%" y="757" width="0.1044%" height="15" fill="rgb(239,186,37)"/><text x="48.3711%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="48.1211%" y="741" width="0.1044%" height="15" fill="rgb(252,136,39)"/><text x="48.3711%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="48.1211%" y="725" width="0.1044%" height="15" fill="rgb(223,213,32)"/><text x="48.3711%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="48.1211%" y="709" width="0.1044%" height="15" fill="rgb(233,115,5)"/><text x="48.3711%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="48.1211%" y="693" width="0.1044%" height="15" fill="rgb(207,226,44)"/><text x="48.3711%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="48.1211%" y="677" width="0.1044%" height="15" fill="rgb(208,126,0)"/><text x="48.3711%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="48.1211%" y="661" width="0.1044%" height="15" fill="rgb(244,66,21)"/><text x="48.3711%" y="671.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="48.1211%" y="645" width="0.1044%" height="15" fill="rgb(222,97,12)"/><text x="48.3711%" y="655.50"></text></g><g><title>__rdl_alloc (1 samples, 0.10%)</title><rect x="48.1211%" y="629" width="0.1044%" height="15" fill="rgb(219,213,19)"/><text x="48.3711%" y="639.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.10%)</title><rect x="48.1211%" y="613" width="0.1044%" height="15" fill="rgb(252,169,30)"/><text x="48.3711%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="48.2255%" y="805" width="0.1044%" height="15" fill="rgb(206,32,51)"/><text x="48.4755%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="48.2255%" y="789" width="0.1044%" height="15" fill="rgb(250,172,42)"/><text x="48.4755%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="48.2255%" y="773" width="0.1044%" height="15" fill="rgb(209,34,43)"/><text x="48.4755%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="48.2255%" y="757" width="0.1044%" height="15" fill="rgb(223,11,35)"/><text x="48.4755%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="48.2255%" y="741" width="0.1044%" height="15" fill="rgb(251,219,26)"/><text x="48.4755%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="48.2255%" y="725" width="0.1044%" height="15" fill="rgb(231,119,3)"/><text x="48.4755%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="48.2255%" y="709" width="0.1044%" height="15" fill="rgb(216,97,11)"/><text x="48.4755%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="48.2255%" y="693" width="0.1044%" height="15" fill="rgb(223,59,9)"/><text x="48.4755%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="48.2255%" y="677" width="0.1044%" height="15" fill="rgb(233,93,31)"/><text x="48.4755%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="48.2255%" y="661" width="0.1044%" height="15" fill="rgb(239,81,33)"/><text x="48.4755%" y="671.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="48.2255%" y="645" width="0.1044%" height="15" fill="rgb(213,120,34)"/><text x="48.4755%" y="655.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="48.2255%" y="629" width="0.1044%" height="15" fill="rgb(243,49,53)"/><text x="48.4755%" y="639.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="48.2255%" y="613" width="0.1044%" height="15" fill="rgb(247,216,33)"/><text x="48.4755%" y="623.50"></text></g><g><title>sysmalloc (1 samples, 0.10%)</title><rect x="48.2255%" y="597" width="0.1044%" height="15" fill="rgb(226,26,14)"/><text x="48.4755%" y="607.50"></text></g><g><title>page_fault (1 samples, 0.10%)</title><rect x="48.2255%" y="581" width="0.1044%" height="15" fill="rgb(215,49,53)"/><text x="48.4755%" y="591.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.10%)</title><rect x="48.2255%" y="565" width="0.1044%" height="15" fill="rgb(245,162,40)"/><text x="48.4755%" y="575.50"></text></g><g><title>handle_mm_fault (1 samples, 0.10%)</title><rect x="48.2255%" y="549" width="0.1044%" height="15" fill="rgb(229,68,17)"/><text x="48.4755%" y="559.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.10%)</title><rect x="48.2255%" y="533" width="0.1044%" height="15" fill="rgb(213,182,10)"/><text x="48.4755%" y="543.50"></text></g><g><title>mem_cgroup_try_charge_delay (1 samples, 0.10%)</title><rect x="48.2255%" y="517" width="0.1044%" height="15" fill="rgb(245,125,30)"/><text x="48.4755%" y="527.50"></text></g><g><title>mem_cgroup_try_charge (1 samples, 0.10%)</title><rect x="48.2255%" y="501" width="0.1044%" height="15" fill="rgb(232,202,2)"/><text x="48.4755%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (1 samples, 0.10%)</title><rect x="48.3299%" y="661" width="0.1044%" height="15" fill="rgb(237,140,51)"/><text x="48.5799%" y="671.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.31%)</title><rect x="48.3299%" y="757" width="0.3132%" height="15" fill="rgb(236,157,25)"/><text x="48.5799%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.31%)</title><rect x="48.3299%" y="741" width="0.3132%" height="15" fill="rgb(219,209,0)"/><text x="48.5799%" y="751.50"></text></g><g><title>alloc::string::String::push_str (3 samples, 0.31%)</title><rect x="48.3299%" y="725" width="0.3132%" height="15" fill="rgb(240,116,54)"/><text x="48.5799%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (3 samples, 0.31%)</title><rect x="48.3299%" y="709" width="0.3132%" height="15" fill="rgb(216,10,36)"/><text x="48.5799%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.31%)</title><rect x="48.3299%" y="693" width="0.3132%" height="15" fill="rgb(222,72,44)"/><text x="48.5799%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (3 samples, 0.31%)</title><rect x="48.3299%" y="677" width="0.3132%" height="15" fill="rgb(232,159,9)"/><text x="48.5799%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (2 samples, 0.21%)</title><rect x="48.4342%" y="661" width="0.2088%" height="15" fill="rgb(210,39,32)"/><text x="48.6842%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.21%)</title><rect x="48.4342%" y="645" width="0.2088%" height="15" fill="rgb(216,194,45)"/><text x="48.6842%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (2 samples, 0.21%)</title><rect x="48.4342%" y="629" width="0.2088%" height="15" fill="rgb(218,18,35)"/><text x="48.6842%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.21%)</title><rect x="48.4342%" y="613" width="0.2088%" height="15" fill="rgb(207,83,51)"/><text x="48.6842%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.21%)</title><rect x="48.4342%" y="597" width="0.2088%" height="15" fill="rgb(225,63,43)"/><text x="48.6842%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (2 samples, 0.21%)</title><rect x="48.4342%" y="581" width="0.2088%" height="15" fill="rgb(207,57,36)"/><text x="48.6842%" y="591.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.21%)</title><rect x="48.4342%" y="565" width="0.2088%" height="15" fill="rgb(216,99,33)"/><text x="48.6842%" y="575.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.21%)</title><rect x="48.4342%" y="549" width="0.2088%" height="15" fill="rgb(225,42,16)"/><text x="48.6842%" y="559.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.10%)</title><rect x="48.5386%" y="533" width="0.1044%" height="15" fill="rgb(220,201,45)"/><text x="48.7886%" y="543.50"></text></g><g><title>_int_realloc (1 samples, 0.10%)</title><rect x="48.5386%" y="517" width="0.1044%" height="15" fill="rgb(225,33,4)"/><text x="48.7886%" y="527.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="48.5386%" y="501" width="0.1044%" height="15" fill="rgb(224,33,50)"/><text x="48.7886%" y="511.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (5 samples, 0.52%)</title><rect x="48.2255%" y="901" width="0.5219%" height="15" fill="rgb(246,198,51)"/><text x="48.4755%" y="911.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (5 samples, 0.52%)</title><rect x="48.2255%" y="885" width="0.5219%" height="15" fill="rgb(205,22,4)"/><text x="48.4755%" y="895.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (5 samples, 0.52%)</title><rect x="48.2255%" y="869" width="0.5219%" height="15" fill="rgb(206,3,8)"/><text x="48.4755%" y="879.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (5 samples, 0.52%)</title><rect x="48.2255%" y="853" width="0.5219%" height="15" fill="rgb(251,23,15)"/><text x="48.4755%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (5 samples, 0.52%)</title><rect x="48.2255%" y="837" width="0.5219%" height="15" fill="rgb(252,88,28)"/><text x="48.4755%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::expected (5 samples, 0.52%)</title><rect x="48.2255%" y="821" width="0.5219%" height="15" fill="rgb(212,127,14)"/><text x="48.4755%" y="831.50"></text></g><g><title>alloc::fmt::format (4 samples, 0.42%)</title><rect x="48.3299%" y="805" width="0.4175%" height="15" fill="rgb(247,145,37)"/><text x="48.5799%" y="815.50"></text></g><g><title>core::fmt::Write::write_fmt (4 samples, 0.42%)</title><rect x="48.3299%" y="789" width="0.4175%" height="15" fill="rgb(209,117,53)"/><text x="48.5799%" y="799.50"></text></g><g><title>core::fmt::write (4 samples, 0.42%)</title><rect x="48.3299%" y="773" width="0.4175%" height="15" fill="rgb(212,90,42)"/><text x="48.5799%" y="783.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::fmt::Display&gt;::fmt (1 samples, 0.10%)</title><rect x="48.6430%" y="757" width="0.1044%" height="15" fill="rgb(218,164,37)"/><text x="48.8930%" y="767.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.10%)</title><rect x="48.6430%" y="741" width="0.1044%" height="15" fill="rgb(246,65,34)"/><text x="48.8930%" y="751.50"></text></g><g><title>core::fmt::write (1 samples, 0.10%)</title><rect x="48.6430%" y="725" width="0.1044%" height="15" fill="rgb(231,100,33)"/><text x="48.8930%" y="735.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="48.6430%" y="709" width="0.1044%" height="15" fill="rgb(228,126,14)"/><text x="48.8930%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="48.6430%" y="693" width="0.1044%" height="15" fill="rgb(215,173,21)"/><text x="48.8930%" y="703.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.10%)</title><rect x="48.6430%" y="677" width="0.1044%" height="15" fill="rgb(210,6,40)"/><text x="48.8930%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="48.6430%" y="661" width="0.1044%" height="15" fill="rgb(212,48,18)"/><text x="48.8930%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="48.6430%" y="645" width="0.1044%" height="15" fill="rgb(230,214,11)"/><text x="48.8930%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.10%)</title><rect x="48.6430%" y="629" width="0.1044%" height="15" fill="rgb(254,105,39)"/><text x="48.8930%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.10%)</title><rect x="48.6430%" y="613" width="0.1044%" height="15" fill="rgb(245,158,5)"/><text x="48.8930%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="48.6430%" y="597" width="0.1044%" height="15" fill="rgb(249,208,11)"/><text x="48.8930%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.10%)</title><rect x="48.6430%" y="581" width="0.1044%" height="15" fill="rgb(210,39,28)"/><text x="48.8930%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.10%)</title><rect x="48.6430%" y="565" width="0.1044%" height="15" fill="rgb(211,56,53)"/><text x="48.8930%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.10%)</title><rect x="48.6430%" y="549" width="0.1044%" height="15" fill="rgb(226,201,30)"/><text x="48.8930%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (1 samples, 0.10%)</title><rect x="48.6430%" y="533" width="0.1044%" height="15" fill="rgb(239,101,34)"/><text x="48.8930%" y="543.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.10%)</title><rect x="48.6430%" y="517" width="0.1044%" height="15" fill="rgb(226,209,5)"/><text x="48.8930%" y="527.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.10%)</title><rect x="48.6430%" y="501" width="0.1044%" height="15" fill="rgb(250,105,47)"/><text x="48.8930%" y="511.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.10%)</title><rect x="48.6430%" y="485" width="0.1044%" height="15" fill="rgb(230,72,3)"/><text x="48.8930%" y="495.50"></text></g><g><title>_int_realloc (1 samples, 0.10%)</title><rect x="48.6430%" y="469" width="0.1044%" height="15" fill="rgb(232,218,39)"/><text x="48.8930%" y="479.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="48.6430%" y="453" width="0.1044%" height="15" fill="rgb(248,166,6)"/><text x="48.8930%" y="463.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.10%)</title><rect x="49.0605%" y="837" width="0.1044%" height="15" fill="rgb(247,89,20)"/><text x="49.3105%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.31%)</title><rect x="49.1649%" y="837" width="0.3132%" height="15" fill="rgb(248,130,54)"/><text x="49.4149%" y="847.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.31%)</title><rect x="49.1649%" y="821" width="0.3132%" height="15" fill="rgb(234,196,4)"/><text x="49.4149%" y="831.50"></text></g><g><title>_int_realloc (3 samples, 0.31%)</title><rect x="49.1649%" y="805" width="0.3132%" height="15" fill="rgb(250,143,31)"/><text x="49.4149%" y="815.50"></text></g><g><title>_int_malloc (3 samples, 0.31%)</title><rect x="49.1649%" y="789" width="0.3132%" height="15" fill="rgb(211,110,34)"/><text x="49.4149%" y="799.50"></text></g><g><title>malloc_consolidate (1 samples, 0.10%)</title><rect x="49.3737%" y="773" width="0.1044%" height="15" fill="rgb(215,124,48)"/><text x="49.6237%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.21%)</title><rect x="49.4781%" y="821" width="0.2088%" height="15" fill="rgb(216,46,13)"/><text x="49.7281%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (10 samples, 1.04%)</title><rect x="48.7474%" y="853" width="1.0438%" height="15" fill="rgb(205,184,25)"/><text x="48.9974%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (3 samples, 0.31%)</title><rect x="49.4781%" y="837" width="0.3132%" height="15" fill="rgb(228,1,10)"/><text x="49.7281%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::get_next_precedence (1 samples, 0.10%)</title><rect x="49.6868%" y="821" width="0.1044%" height="15" fill="rgb(213,116,27)"/><text x="49.9368%" y="831.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="50.0000%" y="837" width="0.1044%" height="15" fill="rgb(241,95,50)"/><text x="50.2500%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="50.0000%" y="821" width="0.1044%" height="15" fill="rgb(238,48,32)"/><text x="50.2500%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="50.0000%" y="805" width="0.1044%" height="15" fill="rgb(235,113,49)"/><text x="50.2500%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="50.0000%" y="789" width="0.1044%" height="15" fill="rgb(205,127,43)"/><text x="50.2500%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="50.0000%" y="773" width="0.1044%" height="15" fill="rgb(250,162,2)"/><text x="50.2500%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="50.0000%" y="757" width="0.1044%" height="15" fill="rgb(220,13,41)"/><text x="50.2500%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="50.0000%" y="741" width="0.1044%" height="15" fill="rgb(249,221,25)"/><text x="50.2500%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="50.0000%" y="725" width="0.1044%" height="15" fill="rgb(215,208,19)"/><text x="50.2500%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="50.0000%" y="709" width="0.1044%" height="15" fill="rgb(236,175,2)"/><text x="50.2500%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="50.0000%" y="693" width="0.1044%" height="15" fill="rgb(241,52,2)"/><text x="50.2500%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="50.0000%" y="677" width="0.1044%" height="15" fill="rgb(248,140,14)"/><text x="50.2500%" y="687.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="50.0000%" y="661" width="0.1044%" height="15" fill="rgb(253,22,42)"/><text x="50.2500%" y="671.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="50.0000%" y="645" width="0.1044%" height="15" fill="rgb(234,61,47)"/><text x="50.2500%" y="655.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (16 samples, 1.67%)</title><rect x="48.7474%" y="901" width="1.6701%" height="15" fill="rgb(208,226,15)"/><text x="48.9974%" y="911.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (16 samples, 1.67%)</title><rect x="48.7474%" y="885" width="1.6701%" height="15" fill="rgb(217,221,4)"/><text x="48.9974%" y="895.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (16 samples, 1.67%)</title><rect x="48.7474%" y="869" width="1.6701%" height="15" fill="rgb(212,174,34)"/><text x="48.9974%" y="879.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (6 samples, 0.63%)</title><rect x="49.7912%" y="853" width="0.6263%" height="15" fill="rgb(253,83,4)"/><text x="50.0412%" y="863.50"></text></g><g><title>__memcmp_avx2_movbe (3 samples, 0.31%)</title><rect x="50.1044%" y="837" width="0.3132%" height="15" fill="rgb(250,195,49)"/><text x="50.3544%" y="847.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="51.4614%" y="837" width="0.1044%" height="15" fill="rgb(241,192,25)"/><text x="51.7114%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="51.4614%" y="821" width="0.1044%" height="15" fill="rgb(208,124,10)"/><text x="51.7114%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="51.4614%" y="805" width="0.1044%" height="15" fill="rgb(222,33,0)"/><text x="51.7114%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="51.4614%" y="789" width="0.1044%" height="15" fill="rgb(234,209,28)"/><text x="51.7114%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="51.4614%" y="773" width="0.1044%" height="15" fill="rgb(224,11,23)"/><text x="51.7114%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="51.4614%" y="757" width="0.1044%" height="15" fill="rgb(232,99,1)"/><text x="51.7114%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="51.4614%" y="741" width="0.1044%" height="15" fill="rgb(237,95,45)"/><text x="51.7114%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="51.4614%" y="725" width="0.1044%" height="15" fill="rgb(208,109,11)"/><text x="51.7114%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="51.4614%" y="709" width="0.1044%" height="15" fill="rgb(216,190,48)"/><text x="51.7114%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="51.4614%" y="693" width="0.1044%" height="15" fill="rgb(251,171,36)"/><text x="51.7114%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="51.4614%" y="677" width="0.1044%" height="15" fill="rgb(230,62,22)"/><text x="51.7114%" y="687.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="51.4614%" y="661" width="0.1044%" height="15" fill="rgb(225,114,35)"/><text x="51.7114%" y="671.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="51.4614%" y="645" width="0.1044%" height="15" fill="rgb(215,118,42)"/><text x="51.7114%" y="655.50"></text></g><g><title>__memcmp_avx2_movbe (6 samples, 0.63%)</title><rect x="51.5658%" y="837" width="0.6263%" height="15" fill="rgb(243,119,21)"/><text x="51.8158%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (17 samples, 1.77%)</title><rect x="50.5219%" y="853" width="1.7745%" height="15" fill="rgb(252,177,53)"/><text x="50.7719%" y="863.50">s..</text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="52.1921%" y="837" width="0.1044%" height="15" fill="rgb(237,209,29)"/><text x="52.4421%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (19 samples, 1.98%)</title><rect x="50.4175%" y="869" width="1.9833%" height="15" fill="rgb(212,65,23)"/><text x="50.6675%" y="879.50">s..</text></g><g><title>stacker::remaining_stack (1 samples, 0.10%)</title><rect x="52.2965%" y="853" width="0.1044%" height="15" fill="rgb(230,222,46)"/><text x="52.5465%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (1 samples, 0.10%)</title><rect x="52.4008%" y="853" width="0.1044%" height="15" fill="rgb(215,135,32)"/><text x="52.6508%" y="863.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="52.4008%" y="837" width="0.1044%" height="15" fill="rgb(246,101,22)"/><text x="52.6508%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="52.4008%" y="821" width="0.1044%" height="15" fill="rgb(206,107,13)"/><text x="52.6508%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="52.4008%" y="805" width="0.1044%" height="15" fill="rgb(250,100,44)"/><text x="52.6508%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="52.4008%" y="789" width="0.1044%" height="15" fill="rgb(231,147,38)"/><text x="52.6508%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="52.4008%" y="773" width="0.1044%" height="15" fill="rgb(229,8,40)"/><text x="52.6508%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="52.4008%" y="757" width="0.1044%" height="15" fill="rgb(221,135,30)"/><text x="52.6508%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="52.4008%" y="741" width="0.1044%" height="15" fill="rgb(249,193,18)"/><text x="52.6508%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="52.4008%" y="725" width="0.1044%" height="15" fill="rgb(209,133,39)"/><text x="52.6508%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="52.4008%" y="709" width="0.1044%" height="15" fill="rgb(232,100,14)"/><text x="52.6508%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="52.4008%" y="693" width="0.1044%" height="15" fill="rgb(224,185,1)"/><text x="52.6508%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="52.4008%" y="677" width="0.1044%" height="15" fill="rgb(223,139,8)"/><text x="52.6508%" y="687.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="52.4008%" y="661" width="0.1044%" height="15" fill="rgb(232,213,38)"/><text x="52.6508%" y="671.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="52.4008%" y="645" width="0.1044%" height="15" fill="rgb(207,94,22)"/><text x="52.6508%" y="655.50"></text></g><g><title>sql_parser::parser::parse_statements (21 samples, 2.19%)</title><rect x="50.4175%" y="901" width="2.1921%" height="15" fill="rgb(219,183,54)"/><text x="50.6675%" y="911.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_statement (21 samples, 2.19%)</title><rect x="50.4175%" y="885" width="2.1921%" height="15" fill="rgb(216,185,54)"/><text x="50.6675%" y="895.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_columns (2 samples, 0.21%)</title><rect x="52.4008%" y="869" width="0.2088%" height="15" fill="rgb(254,217,39)"/><text x="52.6508%" y="879.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (1 samples, 0.10%)</title><rect x="52.5052%" y="853" width="0.1044%" height="15" fill="rgb(240,178,23)"/><text x="52.7552%" y="863.50"></text></g><g><title>stacker::remaining_stack (1 samples, 0.10%)</title><rect x="52.6096%" y="901" width="0.1044%" height="15" fill="rgb(218,11,47)"/><text x="52.8596%" y="911.50"></text></g><g><title>__kfree_skb (1 samples, 0.10%)</title><rect x="53.3403%" y="485" width="0.1044%" height="15" fill="rgb(218,51,51)"/><text x="53.5903%" y="495.50"></text></g><g><title>skb_release_head_state (1 samples, 0.10%)</title><rect x="53.3403%" y="469" width="0.1044%" height="15" fill="rgb(238,126,27)"/><text x="53.5903%" y="479.50"></text></g><g><title>sock_rfree (1 samples, 0.10%)</title><rect x="53.3403%" y="453" width="0.1044%" height="15" fill="rgb(249,202,22)"/><text x="53.5903%" y="463.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.10%)</title><rect x="53.5491%" y="469" width="0.1044%" height="15" fill="rgb(254,195,49)"/><text x="53.7991%" y="479.50"></text></g><g><title>_raw_spin_lock_bh (2 samples, 0.21%)</title><rect x="53.6534%" y="469" width="0.2088%" height="15" fill="rgb(208,123,14)"/><text x="53.9034%" y="479.50"></text></g><g><title>_raw_spin_unlock_irqrestore (1 samples, 0.10%)</title><rect x="53.8622%" y="469" width="0.1044%" height="15" fill="rgb(224,200,8)"/><text x="54.1122%" y="479.50"></text></g><g><title>preempt_count_sub (1 samples, 0.10%)</title><rect x="53.8622%" y="453" width="0.1044%" height="15" fill="rgb(217,61,36)"/><text x="54.1122%" y="463.50"></text></g><g><title>remove_wait_queue (1 samples, 0.10%)</title><rect x="53.9666%" y="469" width="0.1044%" height="15" fill="rgb(206,35,45)"/><text x="54.2166%" y="479.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.10%)</title><rect x="53.9666%" y="453" width="0.1044%" height="15" fill="rgb(217,65,33)"/><text x="54.2166%" y="463.50"></text></g><g><title>__perf_event_task_sched_out (2 samples, 0.21%)</title><rect x="54.1754%" y="405" width="0.2088%" height="15" fill="rgb(222,158,48)"/><text x="54.4254%" y="415.50"></text></g><g><title>ctx_sched_out (1 samples, 0.10%)</title><rect x="54.2797%" y="389" width="0.1044%" height="15" fill="rgb(254,2,54)"/><text x="54.5297%" y="399.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.10%)</title><rect x="54.3841%" y="405" width="0.1044%" height="15" fill="rgb(250,143,38)"/><text x="54.6341%" y="415.50"></text></g><g><title>dequeue_task_fair (1 samples, 0.10%)</title><rect x="54.4885%" y="405" width="0.1044%" height="15" fill="rgb(248,25,0)"/><text x="54.7385%" y="415.50"></text></g><g><title>dequeue_entity (1 samples, 0.10%)</title><rect x="54.4885%" y="389" width="0.1044%" height="15" fill="rgb(206,152,27)"/><text x="54.7385%" y="399.50"></text></g><g><title>update_curr (1 samples, 0.10%)</title><rect x="54.4885%" y="373" width="0.1044%" height="15" fill="rgb(240,77,30)"/><text x="54.7385%" y="383.50"></text></g><g><title>finish_task_switch (2 samples, 0.21%)</title><rect x="54.5929%" y="405" width="0.2088%" height="15" fill="rgb(231,5,3)"/><text x="54.8429%" y="415.50"></text></g><g><title>__perf_event_task_sched_in (2 samples, 0.21%)</title><rect x="54.5929%" y="389" width="0.2088%" height="15" fill="rgb(207,226,32)"/><text x="54.8429%" y="399.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (1 samples, 0.10%)</title><rect x="54.6973%" y="373" width="0.1044%" height="15" fill="rgb(222,207,47)"/><text x="54.9473%" y="383.50"></text></g><g><title>native_write_msr (1 samples, 0.10%)</title><rect x="54.6973%" y="357" width="0.1044%" height="15" fill="rgb(229,115,45)"/><text x="54.9473%" y="367.50"></text></g><g><title>pick_next_task_idle (1 samples, 0.10%)</title><rect x="54.8017%" y="405" width="0.1044%" height="15" fill="rgb(224,191,6)"/><text x="55.0517%" y="415.50"></text></g><g><title>psi_task_change (2 samples, 0.21%)</title><rect x="54.9061%" y="405" width="0.2088%" height="15" fill="rgb(230,227,24)"/><text x="55.1561%" y="415.50"></text></g><g><title>psi_group_change (2 samples, 0.21%)</title><rect x="54.9061%" y="389" width="0.2088%" height="15" fill="rgb(228,80,19)"/><text x="55.1561%" y="399.50"></text></g><g><title>put_prev_task_fair (1 samples, 0.10%)</title><rect x="55.1148%" y="405" width="0.1044%" height="15" fill="rgb(247,229,0)"/><text x="55.3648%" y="415.50"></text></g><g><title>put_prev_entity (1 samples, 0.10%)</title><rect x="55.1148%" y="389" width="0.1044%" height="15" fill="rgb(237,194,15)"/><text x="55.3648%" y="399.50"></text></g><g><title>sk_wait_data (18 samples, 1.88%)</title><rect x="53.4447%" y="485" width="1.8789%" height="15" fill="rgb(219,203,20)"/><text x="53.6947%" y="495.50">s..</text></g><g><title>wait_woken (12 samples, 1.25%)</title><rect x="54.0710%" y="469" width="1.2526%" height="15" fill="rgb(234,128,8)"/><text x="54.3210%" y="479.50"></text></g><g><title>schedule_timeout (12 samples, 1.25%)</title><rect x="54.0710%" y="453" width="1.2526%" height="15" fill="rgb(248,202,8)"/><text x="54.3210%" y="463.50"></text></g><g><title>schedule (12 samples, 1.25%)</title><rect x="54.0710%" y="437" width="1.2526%" height="15" fill="rgb(206,104,37)"/><text x="54.3210%" y="447.50"></text></g><g><title>__schedule (12 samples, 1.25%)</title><rect x="54.0710%" y="421" width="1.2526%" height="15" fill="rgb(223,8,27)"/><text x="54.3210%" y="431.50"></text></g><g><title>update_rq_clock (1 samples, 0.10%)</title><rect x="55.2192%" y="405" width="0.1044%" height="15" fill="rgb(216,217,28)"/><text x="55.4692%" y="415.50"></text></g><g><title>update_irq_load_avg (1 samples, 0.10%)</title><rect x="55.2192%" y="389" width="0.1044%" height="15" fill="rgb(249,199,1)"/><text x="55.4692%" y="399.50"></text></g><g><title>do_syscall_64 (27 samples, 2.82%)</title><rect x="52.7140%" y="565" width="2.8184%" height="15" fill="rgb(240,85,17)"/><text x="52.9640%" y="575.50">do..</text></g><g><title>__x64_sys_recvfrom (27 samples, 2.82%)</title><rect x="52.7140%" y="549" width="2.8184%" height="15" fill="rgb(206,108,45)"/><text x="52.9640%" y="559.50">__..</text></g><g><title>__sys_recvfrom (26 samples, 2.71%)</title><rect x="52.8184%" y="533" width="2.7140%" height="15" fill="rgb(245,210,41)"/><text x="53.0684%" y="543.50">__..</text></g><g><title>inet_recvmsg (24 samples, 2.51%)</title><rect x="53.0271%" y="517" width="2.5052%" height="15" fill="rgb(206,13,37)"/><text x="53.2771%" y="527.50">in..</text></g><g><title>tcp_recvmsg (24 samples, 2.51%)</title><rect x="53.0271%" y="501" width="2.5052%" height="15" fill="rgb(250,61,18)"/><text x="53.2771%" y="511.50">tc..</text></g><g><title>skb_copy_datagram_iter (2 samples, 0.21%)</title><rect x="55.3236%" y="485" width="0.2088%" height="15" fill="rgb(235,172,48)"/><text x="55.5736%" y="495.50"></text></g><g><title>__skb_datagram_iter (1 samples, 0.10%)</title><rect x="55.4280%" y="469" width="0.1044%" height="15" fill="rgb(249,201,17)"/><text x="55.6780%" y="479.50"></text></g><g><title>entry_SYSCALL_64 (28 samples, 2.92%)</title><rect x="52.7140%" y="581" width="2.9228%" height="15" fill="rgb(219,208,6)"/><text x="52.9640%" y="591.50">en..</text></g><g><title>prepare_exit_to_usermode (1 samples, 0.10%)</title><rect x="55.5324%" y="565" width="0.1044%" height="15" fill="rgb(248,31,23)"/><text x="55.7824%" y="575.50"></text></g><g><title>start_thread (29 samples, 3.03%)</title><rect x="52.7140%" y="901" width="3.0271%" height="15" fill="rgb(245,15,42)"/><text x="52.9640%" y="911.50">sta..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (29 samples, 3.03%)</title><rect x="52.7140%" y="885" width="3.0271%" height="15" fill="rgb(222,217,39)"/><text x="52.9640%" y="895.50">std..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (29 samples, 3.03%)</title><rect x="52.7140%" y="869" width="3.0271%" height="15" fill="rgb(210,219,27)"/><text x="52.9640%" y="879.50">&lt;al..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (29 samples, 3.03%)</title><rect x="52.7140%" y="853" width="3.0271%" height="15" fill="rgb(252,166,36)"/><text x="52.9640%" y="863.50">&lt;al..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (29 samples, 3.03%)</title><rect x="52.7140%" y="837" width="3.0271%" height="15" fill="rgb(245,132,34)"/><text x="52.9640%" y="847.50">cor..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (29 samples, 3.03%)</title><rect x="52.7140%" y="821" width="3.0271%" height="15" fill="rgb(236,54,3)"/><text x="52.9640%" y="831.50">std..</text></g><g><title>decor::Shim::run_on_tcp (29 samples, 3.03%)</title><rect x="52.7140%" y="805" width="3.0271%" height="15" fill="rgb(241,173,43)"/><text x="52.9640%" y="815.50">dec..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (29 samples, 3.03%)</title><rect x="52.7140%" y="789" width="3.0271%" height="15" fill="rgb(215,190,9)"/><text x="52.9640%" y="799.50">msq..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (29 samples, 3.03%)</title><rect x="52.7140%" y="773" width="3.0271%" height="15" fill="rgb(242,101,16)"/><text x="52.9640%" y="783.50">&lt;de..</text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (29 samples, 3.03%)</title><rect x="52.7140%" y="757" width="3.0271%" height="15" fill="rgb(223,190,21)"/><text x="52.9640%" y="767.50">&lt;my..</text></g><g><title>mysql::conn::Conn::_query (29 samples, 3.03%)</title><rect x="52.7140%" y="741" width="3.0271%" height="15" fill="rgb(215,228,25)"/><text x="52.9640%" y="751.50">mys..</text></g><g><title>mysql::conn::Conn::handle_result_set (29 samples, 3.03%)</title><rect x="52.7140%" y="725" width="3.0271%" height="15" fill="rgb(225,36,22)"/><text x="52.9640%" y="735.50">mys..</text></g><g><title>mysql::conn::Conn::read_packet (29 samples, 3.03%)</title><rect x="52.7140%" y="709" width="3.0271%" height="15" fill="rgb(251,106,46)"/><text x="52.9640%" y="719.50">mys..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 3.03%)</title><rect x="52.7140%" y="693" width="3.0271%" height="15" fill="rgb(208,90,1)"/><text x="52.9640%" y="703.50">&lt;my..</text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (29 samples, 3.03%)</title><rect x="52.7140%" y="677" width="3.0271%" height="15" fill="rgb(243,10,4)"/><text x="52.9640%" y="687.50">&lt;st..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (29 samples, 3.03%)</title><rect x="52.7140%" y="661" width="3.0271%" height="15" fill="rgb(212,137,27)"/><text x="52.9640%" y="671.50">&lt;st..</text></g><g><title>std::sys_common::net::TcpStream::read (29 samples, 3.03%)</title><rect x="52.7140%" y="645" width="3.0271%" height="15" fill="rgb(231,220,49)"/><text x="52.9640%" y="655.50">std..</text></g><g><title>std::sys::unix::net::Socket::read (29 samples, 3.03%)</title><rect x="52.7140%" y="629" width="3.0271%" height="15" fill="rgb(237,96,20)"/><text x="52.9640%" y="639.50">std..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (29 samples, 3.03%)</title><rect x="52.7140%" y="613" width="3.0271%" height="15" fill="rgb(239,229,30)"/><text x="52.9640%" y="623.50">std..</text></g><g><title>__libc_recv (29 samples, 3.03%)</title><rect x="52.7140%" y="597" width="3.0271%" height="15" fill="rgb(219,65,33)"/><text x="52.9640%" y="607.50">__l..</text></g><g><title>syscall_return_via_sysret (1 samples, 0.10%)</title><rect x="55.6367%" y="581" width="0.1044%" height="15" fill="rgb(243,134,7)"/><text x="55.8867%" y="591.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.10%)</title><rect x="55.7411%" y="901" width="0.1044%" height="15" fill="rgb(216,177,54)"/><text x="55.9911%" y="911.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (3 samples, 0.31%)</title><rect x="55.8455%" y="901" width="0.3132%" height="15" fill="rgb(211,160,20)"/><text x="56.0955%" y="911.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3 samples, 0.31%)</title><rect x="55.8455%" y="885" width="0.3132%" height="15" fill="rgb(239,85,39)"/><text x="56.0955%" y="895.50"></text></g><g><title>lobsters::main (3 samples, 0.31%)</title><rect x="55.8455%" y="869" width="0.3132%" height="15" fill="rgb(232,125,22)"/><text x="56.0955%" y="879.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (3 samples, 0.31%)</title><rect x="55.8455%" y="853" width="0.3132%" height="15" fill="rgb(244,57,34)"/><text x="56.0955%" y="863.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.31%)</title><rect x="55.8455%" y="837" width="0.3132%" height="15" fill="rgb(214,203,32)"/><text x="56.0955%" y="847.50"></text></g><g><title>mysql::conn::query_result::QueryResult&lt;T&gt;::handle_next (3 samples, 0.31%)</title><rect x="55.8455%" y="821" width="0.3132%" height="15" fill="rgb(207,58,43)"/><text x="56.0955%" y="831.50"></text></g><g><title>alloc_empty_file (1 samples, 0.10%)</title><rect x="56.1587%" y="581" width="0.1044%" height="15" fill="rgb(215,193,15)"/><text x="56.4087%" y="591.50"></text></g><g><title>__alloc_file (1 samples, 0.10%)</title><rect x="56.1587%" y="565" width="0.1044%" height="15" fill="rgb(232,15,44)"/><text x="56.4087%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.21%)</title><rect x="56.1587%" y="677" width="0.2088%" height="15" fill="rgb(212,3,48)"/><text x="56.4087%" y="687.50"></text></g><g><title>do_syscall_64 (2 samples, 0.21%)</title><rect x="56.1587%" y="661" width="0.2088%" height="15" fill="rgb(218,128,7)"/><text x="56.4087%" y="671.50"></text></g><g><title>__x64_sys_openat (2 samples, 0.21%)</title><rect x="56.1587%" y="645" width="0.2088%" height="15" fill="rgb(226,216,39)"/><text x="56.4087%" y="655.50"></text></g><g><title>do_sys_openat2 (2 samples, 0.21%)</title><rect x="56.1587%" y="629" width="0.2088%" height="15" fill="rgb(243,47,51)"/><text x="56.4087%" y="639.50"></text></g><g><title>do_filp_open (2 samples, 0.21%)</title><rect x="56.1587%" y="613" width="0.2088%" height="15" fill="rgb(241,183,40)"/><text x="56.4087%" y="623.50"></text></g><g><title>path_openat (2 samples, 0.21%)</title><rect x="56.1587%" y="597" width="0.2088%" height="15" fill="rgb(231,217,32)"/><text x="56.4087%" y="607.50"></text></g><g><title>link_path_walk (1 samples, 0.10%)</title><rect x="56.2630%" y="581" width="0.1044%" height="15" fill="rgb(229,61,38)"/><text x="56.5130%" y="591.50"></text></g><g><title>hwloc::Topology::new (3 samples, 0.31%)</title><rect x="56.1587%" y="773" width="0.3132%" height="15" fill="rgb(225,210,5)"/><text x="56.4087%" y="783.50"></text></g><g><title>hwloc_topology_load (3 samples, 0.31%)</title><rect x="56.1587%" y="757" width="0.3132%" height="15" fill="rgb(231,79,45)"/><text x="56.4087%" y="767.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.31%)</title><rect x="56.1587%" y="741" width="0.3132%" height="15" fill="rgb(224,100,7)"/><text x="56.4087%" y="751.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.31%)</title><rect x="56.1587%" y="725" width="0.3132%" height="15" fill="rgb(241,198,18)"/><text x="56.4087%" y="735.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.31%)</title><rect x="56.1587%" y="709" width="0.3132%" height="15" fill="rgb(252,97,53)"/><text x="56.4087%" y="719.50"></text></g><g><title>__GI___openat (3 samples, 0.31%)</title><rect x="56.1587%" y="693" width="0.3132%" height="15" fill="rgb(220,88,7)"/><text x="56.4087%" y="703.50"></text></g><g><title>syscall_return_via_sysret (1 samples, 0.10%)</title><rect x="56.3674%" y="677" width="0.1044%" height="15" fill="rgb(213,176,14)"/><text x="56.6174%" y="687.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (2 samples, 0.21%)</title><rect x="56.4718%" y="741" width="0.2088%" height="15" fill="rgb(246,73,7)"/><text x="56.7218%" y="751.50"></text></g><g><title>std::rt::lang_start_internal (7 samples, 0.73%)</title><rect x="56.1587%" y="901" width="0.7307%" height="15" fill="rgb(245,64,36)"/><text x="56.4087%" y="911.50"></text></g><g><title>std::panic::catch_unwind (7 samples, 0.73%)</title><rect x="56.1587%" y="885" width="0.7307%" height="15" fill="rgb(245,80,10)"/><text x="56.4087%" y="895.50"></text></g><g><title>std::panicking::try (7 samples, 0.73%)</title><rect x="56.1587%" y="869" width="0.7307%" height="15" fill="rgb(232,107,50)"/><text x="56.4087%" y="879.50"></text></g><g><title>std::panicking::try::do_call (7 samples, 0.73%)</title><rect x="56.1587%" y="853" width="0.7307%" height="15" fill="rgb(253,3,0)"/><text x="56.4087%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (7 samples, 0.73%)</title><rect x="56.1587%" y="837" width="0.7307%" height="15" fill="rgb(212,99,53)"/><text x="56.4087%" y="847.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (7 samples, 0.73%)</title><rect x="56.1587%" y="821" width="0.7307%" height="15" fill="rgb(249,111,54)"/><text x="56.4087%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (7 samples, 0.73%)</title><rect x="56.1587%" y="805" width="0.7307%" height="15" fill="rgb(249,55,30)"/><text x="56.4087%" y="815.50"></text></g><g><title>lobsters::main (7 samples, 0.73%)</title><rect x="56.1587%" y="789" width="0.7307%" height="15" fill="rgb(237,47,42)"/><text x="56.4087%" y="799.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (4 samples, 0.42%)</title><rect x="56.4718%" y="773" width="0.4175%" height="15" fill="rgb(211,20,18)"/><text x="56.7218%" y="783.50"></text></g><g><title>mysql::conn::Conn::_query (4 samples, 0.42%)</title><rect x="56.4718%" y="757" width="0.4175%" height="15" fill="rgb(231,203,46)"/><text x="56.7218%" y="767.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (2 samples, 0.21%)</title><rect x="56.6806%" y="741" width="0.2088%" height="15" fill="rgb(237,142,3)"/><text x="56.9306%" y="751.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::encode (2 samples, 0.21%)</title><rect x="56.6806%" y="725" width="0.2088%" height="15" fill="rgb(241,107,1)"/><text x="56.9306%" y="735.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::encode (2 samples, 0.21%)</title><rect x="56.6806%" y="709" width="0.2088%" height="15" fill="rgb(229,83,13)"/><text x="56.9306%" y="719.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (2 samples, 0.21%)</title><rect x="56.6806%" y="693" width="0.2088%" height="15" fill="rgb(241,91,40)"/><text x="56.9306%" y="703.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.21%)</title><rect x="56.6806%" y="677" width="0.2088%" height="15" fill="rgb(225,3,45)"/><text x="56.9306%" y="687.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (1 samples, 0.10%)</title><rect x="56.8894%" y="837" width="0.1044%" height="15" fill="rgb(244,223,14)"/><text x="57.1394%" y="847.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.10%)</title><rect x="56.8894%" y="821" width="0.1044%" height="15" fill="rgb(224,124,37)"/><text x="57.1394%" y="831.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.10%)</title><rect x="56.8894%" y="805" width="0.1044%" height="15" fill="rgb(251,171,30)"/><text x="57.1394%" y="815.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.10%)</title><rect x="56.8894%" y="789" width="0.1044%" height="15" fill="rgb(236,46,54)"/><text x="57.1394%" y="799.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="56.8894%" y="773" width="0.1044%" height="15" fill="rgb(245,213,5)"/><text x="57.1394%" y="783.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (1 samples, 0.10%)</title><rect x="56.8894%" y="757" width="0.1044%" height="15" fill="rgb(230,144,27)"/><text x="57.1394%" y="767.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (1 samples, 0.10%)</title><rect x="56.8894%" y="741" width="0.1044%" height="15" fill="rgb(220,86,6)"/><text x="57.1394%" y="751.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.10%)</title><rect x="56.8894%" y="725" width="0.1044%" height="15" fill="rgb(240,20,13)"/><text x="57.1394%" y="735.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.10%)</title><rect x="56.8894%" y="709" width="0.1044%" height="15" fill="rgb(217,89,34)"/><text x="57.1394%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="56.9937%" y="821" width="0.1044%" height="15" fill="rgb(229,13,5)"/><text x="57.2437%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="56.9937%" y="805" width="0.1044%" height="15" fill="rgb(244,67,35)"/><text x="57.2437%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="56.9937%" y="789" width="0.1044%" height="15" fill="rgb(221,40,2)"/><text x="57.2437%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="56.9937%" y="773" width="0.1044%" height="15" fill="rgb(237,157,21)"/><text x="57.2437%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="56.9937%" y="757" width="0.1044%" height="15" fill="rgb(222,94,11)"/><text x="57.2437%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="56.9937%" y="741" width="0.1044%" height="15" fill="rgb(249,113,6)"/><text x="57.2437%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.10%)</title><rect x="56.9937%" y="725" width="0.1044%" height="15" fill="rgb(238,137,36)"/><text x="57.2437%" y="735.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.10%)</title><rect x="56.9937%" y="709" width="0.1044%" height="15" fill="rgb(210,102,26)"/><text x="57.2437%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.10%)</title><rect x="56.9937%" y="693" width="0.1044%" height="15" fill="rgb(218,30,30)"/><text x="57.2437%" y="703.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.10%)</title><rect x="57.0981%" y="821" width="0.1044%" height="15" fill="rgb(214,67,26)"/><text x="57.3481%" y="831.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.10%)</title><rect x="57.0981%" y="805" width="0.1044%" height="15" fill="rgb(251,9,53)"/><text x="57.3481%" y="815.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="57.2025%" y="821" width="0.1044%" height="15" fill="rgb(228,204,25)"/><text x="57.4525%" y="831.50"></text></g><g><title>malloc_consolidate (1 samples, 0.10%)</title><rect x="57.2025%" y="805" width="0.1044%" height="15" fill="rgb(207,153,8)"/><text x="57.4525%" y="815.50"></text></g><g><title>__GI___libc_free (1 samples, 0.10%)</title><rect x="57.3069%" y="805" width="0.1044%" height="15" fill="rgb(242,9,16)"/><text x="57.5569%" y="815.50"></text></g><g><title>[unknown] (508 samples, 53.03%)</title><rect x="4.4885%" y="917" width="53.0271%" height="15" fill="rgb(217,211,10)"/><text x="4.7385%" y="927.50">[unknown]</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (6 samples, 0.63%)</title><rect x="56.8894%" y="901" width="0.6263%" height="15" fill="rgb(219,228,52)"/><text x="57.1394%" y="911.50"></text></g><g><title>decor::Shim::run_on_tcp (6 samples, 0.63%)</title><rect x="56.8894%" y="885" width="0.6263%" height="15" fill="rgb(231,92,29)"/><text x="57.1394%" y="895.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (6 samples, 0.63%)</title><rect x="56.8894%" y="869" width="0.6263%" height="15" fill="rgb(232,8,23)"/><text x="57.1394%" y="879.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (6 samples, 0.63%)</title><rect x="56.8894%" y="853" width="0.6263%" height="15" fill="rgb(216,211,34)"/><text x="57.1394%" y="863.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (5 samples, 0.52%)</title><rect x="56.9937%" y="837" width="0.5219%" height="15" fill="rgb(236,151,0)"/><text x="57.2437%" y="847.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.21%)</title><rect x="57.3069%" y="821" width="0.2088%" height="15" fill="rgb(209,168,3)"/><text x="57.5569%" y="831.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="57.4113%" y="805" width="0.1044%" height="15" fill="rgb(208,129,28)"/><text x="57.6613%" y="815.50"></text></g><g><title>__GI___libc_free (1 samples, 0.10%)</title><rect x="57.6200%" y="741" width="0.1044%" height="15" fill="rgb(229,78,22)"/><text x="57.8700%" y="751.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (3 samples, 0.31%)</title><rect x="57.7244%" y="725" width="0.3132%" height="15" fill="rgb(228,187,13)"/><text x="57.9744%" y="735.50"></text></g><g><title>mysql::conn::Conn::handle_ok (2 samples, 0.21%)</title><rect x="57.8288%" y="709" width="0.2088%" height="15" fill="rgb(240,119,24)"/><text x="58.0788%" y="719.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::encode (1 samples, 0.10%)</title><rect x="58.1420%" y="709" width="0.1044%" height="15" fill="rgb(209,194,42)"/><text x="58.3920%" y="719.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::encode (1 samples, 0.10%)</title><rect x="58.1420%" y="693" width="0.1044%" height="15" fill="rgb(247,200,46)"/><text x="58.3920%" y="703.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.10%)</title><rect x="58.3507%" y="549" width="0.1044%" height="15" fill="rgb(218,76,16)"/><text x="58.6007%" y="559.50"></text></g><g><title>__sk_dst_check (2 samples, 0.21%)</title><rect x="58.7683%" y="469" width="0.2088%" height="15" fill="rgb(225,21,48)"/><text x="59.0183%" y="479.50"></text></g><g><title>ipv4_dst_check (1 samples, 0.10%)</title><rect x="58.8727%" y="453" width="0.1044%" height="15" fill="rgb(239,223,50)"/><text x="59.1227%" y="463.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.10%)</title><rect x="59.3946%" y="261" width="0.1044%" height="15" fill="rgb(244,45,21)"/><text x="59.6446%" y="271.50"></text></g><g><title>raw_local_deliver (1 samples, 0.10%)</title><rect x="59.4990%" y="261" width="0.1044%" height="15" fill="rgb(232,33,43)"/><text x="59.7490%" y="271.50"></text></g><g><title>__inet_lookup_established (1 samples, 0.10%)</title><rect x="59.7077%" y="245" width="0.1044%" height="15" fill="rgb(209,8,3)"/><text x="59.9577%" y="255.50"></text></g><g><title>enqueue_task (2 samples, 0.21%)</title><rect x="59.8121%" y="133" width="0.2088%" height="15" fill="rgb(214,25,53)"/><text x="60.0621%" y="143.50"></text></g><g><title>psi_task_change (2 samples, 0.21%)</title><rect x="59.8121%" y="117" width="0.2088%" height="15" fill="rgb(254,186,54)"/><text x="60.0621%" y="127.50"></text></g><g><title>psi_group_change (2 samples, 0.21%)</title><rect x="59.8121%" y="101" width="0.2088%" height="15" fill="rgb(208,174,49)"/><text x="60.0621%" y="111.50"></text></g><g><title>enqueue_task_fair (2 samples, 0.21%)</title><rect x="60.0209%" y="133" width="0.2088%" height="15" fill="rgb(233,191,51)"/><text x="60.2709%" y="143.50"></text></g><g><title>enqueue_entity (1 samples, 0.10%)</title><rect x="60.1253%" y="117" width="0.1044%" height="15" fill="rgb(222,134,10)"/><text x="60.3753%" y="127.50"></text></g><g><title>update_load_avg (1 samples, 0.10%)</title><rect x="60.1253%" y="101" width="0.1044%" height="15" fill="rgb(230,226,20)"/><text x="60.3753%" y="111.50"></text></g><g><title>select_task_rq_fair (2 samples, 0.21%)</title><rect x="60.2296%" y="133" width="0.2088%" height="15" fill="rgb(251,111,25)"/><text x="60.4796%" y="143.50"></text></g><g><title>available_idle_cpu (1 samples, 0.10%)</title><rect x="60.3340%" y="117" width="0.1044%" height="15" fill="rgb(224,40,46)"/><text x="60.5840%" y="127.50"></text></g><g><title>ttwu_do_wakeup (1 samples, 0.10%)</title><rect x="60.4384%" y="133" width="0.1044%" height="15" fill="rgb(236,108,47)"/><text x="60.6884%" y="143.50"></text></g><g><title>sock_def_readable (8 samples, 0.84%)</title><rect x="59.8121%" y="213" width="0.8351%" height="15" fill="rgb(234,93,0)"/><text x="60.0621%" y="223.50"></text></g><g><title>__wake_up_common_lock (8 samples, 0.84%)</title><rect x="59.8121%" y="197" width="0.8351%" height="15" fill="rgb(224,213,32)"/><text x="60.0621%" y="207.50"></text></g><g><title>__wake_up_common (8 samples, 0.84%)</title><rect x="59.8121%" y="181" width="0.8351%" height="15" fill="rgb(251,11,48)"/><text x="60.0621%" y="191.50"></text></g><g><title>pollwake (8 samples, 0.84%)</title><rect x="59.8121%" y="165" width="0.8351%" height="15" fill="rgb(236,173,5)"/><text x="60.0621%" y="175.50"></text></g><g><title>try_to_wake_up (8 samples, 0.84%)</title><rect x="59.8121%" y="149" width="0.8351%" height="15" fill="rgb(230,95,12)"/><text x="60.0621%" y="159.50"></text></g><g><title>update_rq_clock (1 samples, 0.10%)</title><rect x="60.5428%" y="133" width="0.1044%" height="15" fill="rgb(232,209,1)"/><text x="60.7928%" y="143.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.10%)</title><rect x="60.5428%" y="117" width="0.1044%" height="15" fill="rgb(232,6,1)"/><text x="60.7928%" y="127.50"></text></g><g><title>sched_clock (1 samples, 0.10%)</title><rect x="60.5428%" y="101" width="0.1044%" height="15" fill="rgb(210,224,50)"/><text x="60.7928%" y="111.50"></text></g><g><title>native_sched_clock (1 samples, 0.10%)</title><rect x="60.5428%" y="85" width="0.1044%" height="15" fill="rgb(228,127,35)"/><text x="60.7928%" y="95.50"></text></g><g><title>tcp_ack_update_rtt (1 samples, 0.10%)</title><rect x="60.6472%" y="197" width="0.1044%" height="15" fill="rgb(245,102,45)"/><text x="60.8972%" y="207.50"></text></g><g><title>tcp_ack (2 samples, 0.21%)</title><rect x="60.6472%" y="213" width="0.2088%" height="15" fill="rgb(214,1,49)"/><text x="60.8972%" y="223.50"></text></g><g><title>tcp_schedule_loss_probe (1 samples, 0.10%)</title><rect x="60.7516%" y="197" width="0.1044%" height="15" fill="rgb(226,163,40)"/><text x="61.0016%" y="207.50"></text></g><g><title>__tcp_transmit_skb (22 samples, 2.30%)</title><rect x="58.6639%" y="501" width="2.2965%" height="15" fill="rgb(239,212,28)"/><text x="58.9139%" y="511.50">_..</text></g><g><title>__ip_queue_xmit (21 samples, 2.19%)</title><rect x="58.7683%" y="485" width="2.1921%" height="15" fill="rgb(220,20,13)"/><text x="59.0183%" y="495.50">_..</text></g><g><title>ip_output (19 samples, 1.98%)</title><rect x="58.9770%" y="469" width="1.9833%" height="15" fill="rgb(210,164,35)"/><text x="59.2270%" y="479.50">i..</text></g><g><title>ip_finish_output2 (18 samples, 1.88%)</title><rect x="59.0814%" y="453" width="1.8789%" height="15" fill="rgb(248,109,41)"/><text x="59.3314%" y="463.50">i..</text></g><g><title>__local_bh_enable_ip (18 samples, 1.88%)</title><rect x="59.0814%" y="437" width="1.8789%" height="15" fill="rgb(238,23,50)"/><text x="59.3314%" y="447.50">_..</text></g><g><title>do_softirq (18 samples, 1.88%)</title><rect x="59.0814%" y="421" width="1.8789%" height="15" fill="rgb(211,48,49)"/><text x="59.3314%" y="431.50">d..</text></g><g><title>do_softirq_own_stack (17 samples, 1.77%)</title><rect x="59.1858%" y="405" width="1.7745%" height="15" fill="rgb(223,36,21)"/><text x="59.4358%" y="415.50">d..</text></g><g><title>__do_softirq (17 samples, 1.77%)</title><rect x="59.1858%" y="389" width="1.7745%" height="15" fill="rgb(207,123,46)"/><text x="59.4358%" y="399.50">_..</text></g><g><title>net_rx_action (17 samples, 1.77%)</title><rect x="59.1858%" y="373" width="1.7745%" height="15" fill="rgb(240,218,32)"/><text x="59.4358%" y="383.50">n..</text></g><g><title>process_backlog (17 samples, 1.77%)</title><rect x="59.1858%" y="357" width="1.7745%" height="15" fill="rgb(252,5,43)"/><text x="59.4358%" y="367.50">p..</text></g><g><title>__netif_receive_skb_one_core (17 samples, 1.77%)</title><rect x="59.1858%" y="341" width="1.7745%" height="15" fill="rgb(252,84,19)"/><text x="59.4358%" y="351.50">_..</text></g><g><title>ip_rcv (17 samples, 1.77%)</title><rect x="59.1858%" y="325" width="1.7745%" height="15" fill="rgb(243,152,39)"/><text x="59.4358%" y="335.50">i..</text></g><g><title>ip_local_deliver (17 samples, 1.77%)</title><rect x="59.1858%" y="309" width="1.7745%" height="15" fill="rgb(234,160,15)"/><text x="59.4358%" y="319.50">i..</text></g><g><title>ip_local_deliver_finish (15 samples, 1.57%)</title><rect x="59.3946%" y="293" width="1.5658%" height="15" fill="rgb(237,34,20)"/><text x="59.6446%" y="303.50"></text></g><g><title>ip_protocol_deliver_rcu (15 samples, 1.57%)</title><rect x="59.3946%" y="277" width="1.5658%" height="15" fill="rgb(229,97,13)"/><text x="59.6446%" y="287.50"></text></g><g><title>tcp_v4_rcv (13 samples, 1.36%)</title><rect x="59.6033%" y="261" width="1.3570%" height="15" fill="rgb(234,71,50)"/><text x="59.8533%" y="271.50"></text></g><g><title>tcp_v4_do_rcv (11 samples, 1.15%)</title><rect x="59.8121%" y="245" width="1.1482%" height="15" fill="rgb(253,155,4)"/><text x="60.0621%" y="255.50"></text></g><g><title>tcp_rcv_established (11 samples, 1.15%)</title><rect x="59.8121%" y="229" width="1.1482%" height="15" fill="rgb(222,185,37)"/><text x="60.0621%" y="239.50"></text></g><g><title>tcp_event_data_recv (1 samples, 0.10%)</title><rect x="60.8559%" y="213" width="0.1044%" height="15" fill="rgb(251,177,13)"/><text x="61.1059%" y="223.50"></text></g><g><title>__tcp_push_pending_frames (24 samples, 2.51%)</title><rect x="58.5595%" y="533" width="2.5052%" height="15" fill="rgb(250,179,40)"/><text x="58.8095%" y="543.50">__..</text></g><g><title>tcp_write_xmit (24 samples, 2.51%)</title><rect x="58.5595%" y="517" width="2.5052%" height="15" fill="rgb(242,44,2)"/><text x="58.8095%" y="527.50">tc..</text></g><g><title>ktime_get (1 samples, 0.10%)</title><rect x="60.9603%" y="501" width="0.1044%" height="15" fill="rgb(216,177,13)"/><text x="61.2103%" y="511.50"></text></g><g><title>sock_sendmsg (27 samples, 2.82%)</title><rect x="58.3507%" y="581" width="2.8184%" height="15" fill="rgb(216,106,43)"/><text x="58.6007%" y="591.50">so..</text></g><g><title>tcp_sendmsg (27 samples, 2.82%)</title><rect x="58.3507%" y="565" width="2.8184%" height="15" fill="rgb(216,183,2)"/><text x="58.6007%" y="575.50">tc..</text></g><g><title>tcp_sendmsg_locked (26 samples, 2.71%)</title><rect x="58.4551%" y="549" width="2.7140%" height="15" fill="rgb(249,75,3)"/><text x="58.7051%" y="559.50">tc..</text></g><g><title>sk_stream_alloc_skb (1 samples, 0.10%)</title><rect x="61.0647%" y="533" width="0.1044%" height="15" fill="rgb(219,67,39)"/><text x="61.3147%" y="543.50"></text></g><g><title>__alloc_skb (1 samples, 0.10%)</title><rect x="61.0647%" y="517" width="0.1044%" height="15" fill="rgb(253,228,2)"/><text x="61.3147%" y="527.50"></text></g><g><title>kmem_cache_alloc_node (1 samples, 0.10%)</title><rect x="61.0647%" y="501" width="0.1044%" height="15" fill="rgb(235,138,27)"/><text x="61.3147%" y="511.50"></text></g><g><title>__x64_sys_sendto (28 samples, 2.92%)</title><rect x="58.3507%" y="613" width="2.9228%" height="15" fill="rgb(236,97,51)"/><text x="58.6007%" y="623.50">__..</text></g><g><title>__sys_sendto (28 samples, 2.92%)</title><rect x="58.3507%" y="597" width="2.9228%" height="15" fill="rgb(240,80,30)"/><text x="58.6007%" y="607.50">__..</text></g><g><title>sockfd_lookup_light (1 samples, 0.10%)</title><rect x="61.1691%" y="581" width="0.1044%" height="15" fill="rgb(230,178,19)"/><text x="61.4191%" y="591.50"></text></g><g><title>__fget_light (1 samples, 0.10%)</title><rect x="61.1691%" y="565" width="0.1044%" height="15" fill="rgb(210,190,27)"/><text x="61.4191%" y="575.50"></text></g><g><title>do_syscall_64 (29 samples, 3.03%)</title><rect x="58.3507%" y="629" width="3.0271%" height="15" fill="rgb(222,107,31)"/><text x="58.6007%" y="639.50">do_..</text></g><g><title>syscall_slow_exit_work (1 samples, 0.10%)</title><rect x="61.2735%" y="613" width="0.1044%" height="15" fill="rgb(216,127,34)"/><text x="61.5235%" y="623.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.10%)</title><rect x="61.2735%" y="597" width="0.1044%" height="15" fill="rgb(234,116,52)"/><text x="61.5235%" y="607.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (39 samples, 4.07%)</title><rect x="57.6200%" y="757" width="4.0710%" height="15" fill="rgb(222,124,15)"/><text x="57.8700%" y="767.50">&lt;mys..</text></g><g><title>mysql::conn::Conn::_query (38 samples, 3.97%)</title><rect x="57.7244%" y="741" width="3.9666%" height="15" fill="rgb(231,179,28)"/><text x="57.9744%" y="751.50">mysq..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (35 samples, 3.65%)</title><rect x="58.0376%" y="725" width="3.6534%" height="15" fill="rgb(226,93,45)"/><text x="58.2876%" y="735.50">mysq..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (33 samples, 3.44%)</title><rect x="58.2463%" y="709" width="3.4447%" height="15" fill="rgb(215,8,51)"/><text x="58.4963%" y="719.50">std..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (33 samples, 3.44%)</title><rect x="58.2463%" y="693" width="3.4447%" height="15" fill="rgb(223,106,5)"/><text x="58.4963%" y="703.50">&lt;st..</text></g><g><title>std::sys_common::net::TcpStream::write (33 samples, 3.44%)</title><rect x="58.2463%" y="677" width="3.4447%" height="15" fill="rgb(250,191,5)"/><text x="58.4963%" y="687.50">std..</text></g><g><title>__libc_send (33 samples, 3.44%)</title><rect x="58.2463%" y="661" width="3.4447%" height="15" fill="rgb(242,132,44)"/><text x="58.4963%" y="671.50">__l..</text></g><g><title>entry_SYSCALL_64 (32 samples, 3.34%)</title><rect x="58.3507%" y="645" width="3.3403%" height="15" fill="rgb(251,152,29)"/><text x="58.6007%" y="655.50">ent..</text></g><g><title>prepare_exit_to_usermode (3 samples, 0.31%)</title><rect x="61.3779%" y="629" width="0.3132%" height="15" fill="rgb(218,179,5)"/><text x="61.6279%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.10%)</title><rect x="61.7954%" y="709" width="0.1044%" height="15" fill="rgb(227,67,19)"/><text x="62.0454%" y="719.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="62.1086%" y="645" width="0.1044%" height="15" fill="rgb(233,119,31)"/><text x="62.3586%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.42%)</title><rect x="61.8998%" y="677" width="0.4175%" height="15" fill="rgb(241,120,22)"/><text x="62.1498%" y="687.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (4 samples, 0.42%)</title><rect x="61.8998%" y="661" width="0.4175%" height="15" fill="rgb(224,102,30)"/><text x="62.1498%" y="671.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="62.2129%" y="645" width="0.1044%" height="15" fill="rgb(210,164,37)"/><text x="62.4629%" y="655.50"></text></g><g><title>__rdl_realloc (1 samples, 0.10%)</title><rect x="62.3173%" y="661" width="0.1044%" height="15" fill="rgb(226,191,16)"/><text x="62.5673%" y="671.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.10%)</title><rect x="62.3173%" y="645" width="0.1044%" height="15" fill="rgb(214,40,45)"/><text x="62.5673%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (6 samples, 0.63%)</title><rect x="61.8998%" y="693" width="0.6263%" height="15" fill="rgb(244,29,26)"/><text x="62.1498%" y="703.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.21%)</title><rect x="62.3173%" y="677" width="0.2088%" height="15" fill="rgb(216,16,5)"/><text x="62.5673%" y="687.50"></text></g><g><title>core::fmt::write (1 samples, 0.10%)</title><rect x="62.4217%" y="661" width="0.1044%" height="15" fill="rgb(249,76,35)"/><text x="62.6717%" y="671.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="62.4217%" y="645" width="0.1044%" height="15" fill="rgb(207,11,44)"/><text x="62.6717%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="62.4217%" y="629" width="0.1044%" height="15" fill="rgb(228,190,49)"/><text x="62.6717%" y="639.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="62.4217%" y="613" width="0.1044%" height="15" fill="rgb(214,173,12)"/><text x="62.6717%" y="623.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.21%)</title><rect x="62.5261%" y="677" width="0.2088%" height="15" fill="rgb(218,26,35)"/><text x="62.7761%" y="687.50"></text></g><g><title>_int_realloc (1 samples, 0.10%)</title><rect x="62.6305%" y="661" width="0.1044%" height="15" fill="rgb(220,200,19)"/><text x="62.8805%" y="671.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="62.7349%" y="677" width="0.1044%" height="15" fill="rgb(239,95,49)"/><text x="62.9849%" y="687.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.10%)</title><rect x="62.8392%" y="661" width="0.1044%" height="15" fill="rgb(235,85,53)"/><text x="63.0892%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (12 samples, 1.25%)</title><rect x="61.7954%" y="725" width="1.2526%" height="15" fill="rgb(233,133,31)"/><text x="62.0454%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Values as sql_parser::ast::display::AstDisplay&gt;::fmt (11 samples, 1.15%)</title><rect x="61.8998%" y="709" width="1.1482%" height="15" fill="rgb(218,25,20)"/><text x="62.1498%" y="719.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (5 samples, 0.52%)</title><rect x="62.5261%" y="693" width="0.5219%" height="15" fill="rgb(252,210,38)"/><text x="62.7761%" y="703.50"></text></g><g><title>core::fmt::write (2 samples, 0.21%)</title><rect x="62.8392%" y="677" width="0.2088%" height="15" fill="rgb(242,134,21)"/><text x="63.0892%" y="687.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="62.9436%" y="661" width="0.1044%" height="15" fill="rgb(213,28,48)"/><text x="63.1936%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="62.9436%" y="645" width="0.1044%" height="15" fill="rgb(250,196,2)"/><text x="63.1936%" y="655.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="62.9436%" y="629" width="0.1044%" height="15" fill="rgb(227,5,17)"/><text x="63.1936%" y="639.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="63.0480%" y="677" width="0.1044%" height="15" fill="rgb(221,226,24)"/><text x="63.2980%" y="687.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.10%)</title><rect x="63.1524%" y="661" width="0.1044%" height="15" fill="rgb(211,5,48)"/><text x="63.4024%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.10%)</title><rect x="63.1524%" y="645" width="0.1044%" height="15" fill="rgb(219,150,6)"/><text x="63.4024%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (1 samples, 0.10%)</title><rect x="63.1524%" y="629" width="0.1044%" height="15" fill="rgb(251,46,16)"/><text x="63.4024%" y="639.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (2 samples, 0.21%)</title><rect x="63.1524%" y="677" width="0.2088%" height="15" fill="rgb(220,204,40)"/><text x="63.4024%" y="687.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (1 samples, 0.10%)</title><rect x="63.2568%" y="661" width="0.1044%" height="15" fill="rgb(211,85,2)"/><text x="63.5068%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.42%)</title><rect x="63.0480%" y="709" width="0.4175%" height="15" fill="rgb(229,17,7)"/><text x="63.2980%" y="719.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (4 samples, 0.42%)</title><rect x="63.0480%" y="693" width="0.4175%" height="15" fill="rgb(239,72,28)"/><text x="63.2980%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (1 samples, 0.10%)</title><rect x="63.3612%" y="677" width="0.1044%" height="15" fill="rgb(230,47,54)"/><text x="63.6112%" y="687.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.10%)</title><rect x="63.4656%" y="693" width="0.1044%" height="15" fill="rgb(214,50,8)"/><text x="63.7156%" y="703.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.21%)</title><rect x="63.5699%" y="677" width="0.2088%" height="15" fill="rgb(216,198,43)"/><text x="63.8199%" y="687.50"></text></g><g><title>_int_realloc (2 samples, 0.21%)</title><rect x="63.5699%" y="661" width="0.2088%" height="15" fill="rgb(234,20,35)"/><text x="63.8199%" y="671.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="63.6743%" y="645" width="0.1044%" height="15" fill="rgb(254,45,19)"/><text x="63.9243%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.31%)</title><rect x="63.5699%" y="693" width="0.3132%" height="15" fill="rgb(219,14,44)"/><text x="63.8199%" y="703.50"></text></g><g><title>__rdl_realloc (1 samples, 0.10%)</title><rect x="63.7787%" y="677" width="0.1044%" height="15" fill="rgb(217,220,26)"/><text x="64.0287%" y="687.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.10%)</title><rect x="63.7787%" y="661" width="0.1044%" height="15" fill="rgb(213,158,28)"/><text x="64.0287%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.10%)</title><rect x="63.9875%" y="661" width="0.1044%" height="15" fill="rgb(252,51,52)"/><text x="64.2375%" y="671.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.31%)</title><rect x="63.9875%" y="677" width="0.3132%" height="15" fill="rgb(246,89,16)"/><text x="64.2375%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.21%)</title><rect x="64.0919%" y="661" width="0.2088%" height="15" fill="rgb(216,158,49)"/><text x="64.3419%" y="671.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.21%)</title><rect x="64.0919%" y="645" width="0.2088%" height="15" fill="rgb(236,107,19)"/><text x="64.3419%" y="655.50"></text></g><g><title>_int_malloc (2 samples, 0.21%)</title><rect x="64.0919%" y="629" width="0.2088%" height="15" fill="rgb(228,185,30)"/><text x="64.3419%" y="639.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (1 samples, 0.10%)</title><rect x="64.3006%" y="677" width="0.1044%" height="15" fill="rgb(246,134,8)"/><text x="64.5506%" y="687.50"></text></g><g><title>core::fmt::write (27 samples, 2.82%)</title><rect x="61.6910%" y="757" width="2.8184%" height="15" fill="rgb(214,143,50)"/><text x="61.9410%" y="767.50">co..</text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (27 samples, 2.82%)</title><rect x="61.6910%" y="741" width="2.8184%" height="15" fill="rgb(228,75,8)"/><text x="61.9410%" y="751.50">&lt;s..</text></g><g><title>&lt;sql_parser::ast::defs::statement::InsertStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (14 samples, 1.46%)</title><rect x="63.0480%" y="725" width="1.4614%" height="15" fill="rgb(207,175,4)"/><text x="63.2980%" y="735.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (10 samples, 1.04%)</title><rect x="63.4656%" y="709" width="1.0438%" height="15" fill="rgb(205,108,24)"/><text x="63.7156%" y="719.50"></text></g><g><title>core::fmt::write (6 samples, 0.63%)</title><rect x="63.8831%" y="693" width="0.6263%" height="15" fill="rgb(244,120,49)"/><text x="64.1331%" y="703.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.10%)</title><rect x="64.4050%" y="677" width="0.1044%" height="15" fill="rgb(223,47,38)"/><text x="64.6550%" y="687.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="64.5094%" y="757" width="0.1044%" height="15" fill="rgb(229,179,11)"/><text x="64.7594%" y="767.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="64.5094%" y="741" width="0.1044%" height="15" fill="rgb(231,122,1)"/><text x="64.7594%" y="751.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (68 samples, 7.10%)</title><rect x="57.6200%" y="773" width="7.0981%" height="15" fill="rgb(245,119,9)"/><text x="57.8700%" y="783.50">&lt;decor::Sh..</text></g><g><title>decor::helpers::answer_rows (1 samples, 0.10%)</title><rect x="64.6138%" y="757" width="0.1044%" height="15" fill="rgb(241,163,25)"/><text x="64.8638%" y="767.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="64.7182%" y="725" width="0.1044%" height="15" fill="rgb(217,214,3)"/><text x="64.9682%" y="735.50"></text></g><g><title>__GI___libc_free (1 samples, 0.10%)</title><rect x="64.8225%" y="709" width="0.1044%" height="15" fill="rgb(240,86,28)"/><text x="65.0725%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.31%)</title><rect x="64.7182%" y="741" width="0.3132%" height="15" fill="rgb(215,47,9)"/><text x="64.9682%" y="751.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.21%)</title><rect x="64.8225%" y="725" width="0.2088%" height="15" fill="rgb(252,25,45)"/><text x="65.0725%" y="735.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="64.9269%" y="709" width="0.1044%" height="15" fill="rgb(251,164,9)"/><text x="65.1769%" y="719.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="64.9269%" y="693" width="0.1044%" height="15" fill="rgb(233,194,0)"/><text x="65.1769%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="64.9269%" y="677" width="0.1044%" height="15" fill="rgb(249,111,24)"/><text x="65.1769%" y="687.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="64.9269%" y="661" width="0.1044%" height="15" fill="rgb(250,223,3)"/><text x="65.1769%" y="671.50"></text></g><g><title>core::ptr::drop_in_place (5 samples, 0.52%)</title><rect x="64.7182%" y="773" width="0.5219%" height="15" fill="rgb(236,178,37)"/><text x="64.9682%" y="783.50"></text></g><g><title>core::ptr::drop_in_place (5 samples, 0.52%)</title><rect x="64.7182%" y="757" width="0.5219%" height="15" fill="rgb(241,158,50)"/><text x="64.9682%" y="767.50"></text></g><g><title>_int_free (2 samples, 0.21%)</title><rect x="65.0313%" y="741" width="0.2088%" height="15" fill="rgb(213,121,41)"/><text x="65.2813%" y="751.50"></text></g><g><title>malloc_consolidate (2 samples, 0.21%)</title><rect x="65.0313%" y="725" width="0.2088%" height="15" fill="rgb(240,92,3)"/><text x="65.2813%" y="735.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.10%)</title><rect x="65.1357%" y="709" width="0.1044%" height="15" fill="rgb(205,123,3)"/><text x="65.3857%" y="719.50"></text></g><g><title>__pthread_enable_asynccancel (1 samples, 0.10%)</title><rect x="65.2401%" y="661" width="0.1044%" height="15" fill="rgb(205,97,47)"/><text x="65.4901%" y="671.50"></text></g><g><title>import_single_range (1 samples, 0.10%)</title><rect x="65.3445%" y="597" width="0.1044%" height="15" fill="rgb(247,152,14)"/><text x="65.5945%" y="607.50"></text></g><g><title>__kfree_skb (1 samples, 0.10%)</title><rect x="65.4489%" y="565" width="0.1044%" height="15" fill="rgb(248,195,53)"/><text x="65.6989%" y="575.50"></text></g><g><title>skb_release_head_state (1 samples, 0.10%)</title><rect x="65.4489%" y="549" width="0.1044%" height="15" fill="rgb(226,201,16)"/><text x="65.6989%" y="559.50"></text></g><g><title>dst_release (1 samples, 0.10%)</title><rect x="65.4489%" y="533" width="0.1044%" height="15" fill="rgb(205,98,0)"/><text x="65.6989%" y="543.50"></text></g><g><title>__dev_queue_xmit (2 samples, 0.21%)</title><rect x="65.5532%" y="501" width="0.2088%" height="15" fill="rgb(214,191,48)"/><text x="65.8032%" y="511.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.21%)</title><rect x="65.5532%" y="485" width="0.2088%" height="15" fill="rgb(237,112,39)"/><text x="65.8032%" y="495.50"></text></g><g><title>loopback_xmit (1 samples, 0.10%)</title><rect x="65.6576%" y="469" width="0.1044%" height="15" fill="rgb(247,203,27)"/><text x="65.9076%" y="479.50"></text></g><g><title>eth_type_trans (1 samples, 0.10%)</title><rect x="65.6576%" y="453" width="0.1044%" height="15" fill="rgb(235,124,28)"/><text x="65.9076%" y="463.50"></text></g><g><title>__kfree_skb (1 samples, 0.10%)</title><rect x="65.9708%" y="277" width="0.1044%" height="15" fill="rgb(208,207,46)"/><text x="66.2208%" y="287.50"></text></g><g><title>skb_release_data (1 samples, 0.10%)</title><rect x="65.9708%" y="261" width="0.1044%" height="15" fill="rgb(234,176,4)"/><text x="66.2208%" y="271.50"></text></g><g><title>__tcp_transmit_skb (6 samples, 0.63%)</title><rect x="65.5532%" y="565" width="0.6263%" height="15" fill="rgb(230,133,28)"/><text x="65.8032%" y="575.50"></text></g><g><title>__ip_queue_xmit (6 samples, 0.63%)</title><rect x="65.5532%" y="549" width="0.6263%" height="15" fill="rgb(211,137,40)"/><text x="65.8032%" y="559.50"></text></g><g><title>ip_output (6 samples, 0.63%)</title><rect x="65.5532%" y="533" width="0.6263%" height="15" fill="rgb(254,35,13)"/><text x="65.8032%" y="543.50"></text></g><g><title>ip_finish_output2 (6 samples, 0.63%)</title><rect x="65.5532%" y="517" width="0.6263%" height="15" fill="rgb(225,49,51)"/><text x="65.8032%" y="527.50"></text></g><g><title>__local_bh_enable_ip (4 samples, 0.42%)</title><rect x="65.7620%" y="501" width="0.4175%" height="15" fill="rgb(251,10,15)"/><text x="66.0120%" y="511.50"></text></g><g><title>do_softirq (4 samples, 0.42%)</title><rect x="65.7620%" y="485" width="0.4175%" height="15" fill="rgb(228,207,15)"/><text x="66.0120%" y="495.50"></text></g><g><title>do_softirq_own_stack (4 samples, 0.42%)</title><rect x="65.7620%" y="469" width="0.4175%" height="15" fill="rgb(241,99,19)"/><text x="66.0120%" y="479.50"></text></g><g><title>__do_softirq (4 samples, 0.42%)</title><rect x="65.7620%" y="453" width="0.4175%" height="15" fill="rgb(207,104,49)"/><text x="66.0120%" y="463.50"></text></g><g><title>net_rx_action (4 samples, 0.42%)</title><rect x="65.7620%" y="437" width="0.4175%" height="15" fill="rgb(234,99,18)"/><text x="66.0120%" y="447.50"></text></g><g><title>process_backlog (4 samples, 0.42%)</title><rect x="65.7620%" y="421" width="0.4175%" height="15" fill="rgb(213,191,49)"/><text x="66.0120%" y="431.50"></text></g><g><title>__netif_receive_skb_one_core (4 samples, 0.42%)</title><rect x="65.7620%" y="405" width="0.4175%" height="15" fill="rgb(210,226,19)"/><text x="66.0120%" y="415.50"></text></g><g><title>ip_rcv (4 samples, 0.42%)</title><rect x="65.7620%" y="389" width="0.4175%" height="15" fill="rgb(229,97,18)"/><text x="66.0120%" y="399.50"></text></g><g><title>ip_local_deliver (4 samples, 0.42%)</title><rect x="65.7620%" y="373" width="0.4175%" height="15" fill="rgb(211,167,15)"/><text x="66.0120%" y="383.50"></text></g><g><title>ip_local_deliver_finish (3 samples, 0.31%)</title><rect x="65.8664%" y="357" width="0.3132%" height="15" fill="rgb(210,169,34)"/><text x="66.1164%" y="367.50"></text></g><g><title>ip_protocol_deliver_rcu (3 samples, 0.31%)</title><rect x="65.8664%" y="341" width="0.3132%" height="15" fill="rgb(241,121,31)"/><text x="66.1164%" y="351.50"></text></g><g><title>tcp_v4_rcv (3 samples, 0.31%)</title><rect x="65.8664%" y="325" width="0.3132%" height="15" fill="rgb(232,40,11)"/><text x="66.1164%" y="335.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.21%)</title><rect x="65.9708%" y="309" width="0.2088%" height="15" fill="rgb(205,86,26)"/><text x="66.2208%" y="319.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.21%)</title><rect x="65.9708%" y="293" width="0.2088%" height="15" fill="rgb(231,126,28)"/><text x="66.2208%" y="303.50"></text></g><g><title>tcp_ack (1 samples, 0.10%)</title><rect x="66.0752%" y="277" width="0.1044%" height="15" fill="rgb(219,221,18)"/><text x="66.3252%" y="287.50"></text></g><g><title>tcp_ack_update_rtt (1 samples, 0.10%)</title><rect x="66.0752%" y="261" width="0.1044%" height="15" fill="rgb(211,40,0)"/><text x="66.3252%" y="271.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.10%)</title><rect x="66.1795%" y="549" width="0.1044%" height="15" fill="rgb(239,85,43)"/><text x="66.4295%" y="559.50"></text></g><g><title>_raw_spin_unlock_irqrestore (1 samples, 0.10%)</title><rect x="66.2839%" y="549" width="0.1044%" height="15" fill="rgb(231,55,21)"/><text x="66.5339%" y="559.50"></text></g><g><title>dequeue_task_fair (3 samples, 0.31%)</title><rect x="66.5971%" y="485" width="0.3132%" height="15" fill="rgb(225,184,43)"/><text x="66.8471%" y="495.50"></text></g><g><title>dequeue_entity (3 samples, 0.31%)</title><rect x="66.5971%" y="469" width="0.3132%" height="15" fill="rgb(251,158,41)"/><text x="66.8471%" y="479.50"></text></g><g><title>update_curr (3 samples, 0.31%)</title><rect x="66.5971%" y="453" width="0.3132%" height="15" fill="rgb(234,159,37)"/><text x="66.8471%" y="463.50"></text></g><g><title>__cgroup_account_cputime (2 samples, 0.21%)</title><rect x="66.7015%" y="437" width="0.2088%" height="15" fill="rgb(216,204,22)"/><text x="66.9515%" y="447.50"></text></g><g><title>preempt_count_sub (1 samples, 0.10%)</title><rect x="66.8058%" y="421" width="0.1044%" height="15" fill="rgb(214,17,3)"/><text x="67.0558%" y="431.50"></text></g><g><title>psi_task_change (1 samples, 0.10%)</title><rect x="66.9102%" y="485" width="0.1044%" height="15" fill="rgb(212,111,17)"/><text x="67.1602%" y="495.50"></text></g><g><title>psi_group_change (1 samples, 0.10%)</title><rect x="66.9102%" y="469" width="0.1044%" height="15" fill="rgb(221,157,24)"/><text x="67.1602%" y="479.50"></text></g><g><title>put_prev_task_fair (1 samples, 0.10%)</title><rect x="67.0146%" y="485" width="0.1044%" height="15" fill="rgb(252,16,13)"/><text x="67.2646%" y="495.50"></text></g><g><title>__schedule (6 samples, 0.63%)</title><rect x="66.5971%" y="501" width="0.6263%" height="15" fill="rgb(221,62,2)"/><text x="66.8471%" y="511.50"></text></g><g><title>update_rq_clock (1 samples, 0.10%)</title><rect x="67.1190%" y="485" width="0.1044%" height="15" fill="rgb(247,87,22)"/><text x="67.3690%" y="495.50"></text></g><g><title>sk_wait_data (11 samples, 1.15%)</title><rect x="66.1795%" y="565" width="1.1482%" height="15" fill="rgb(215,73,9)"/><text x="66.4295%" y="575.50"></text></g><g><title>wait_woken (9 samples, 0.94%)</title><rect x="66.3883%" y="549" width="0.9395%" height="15" fill="rgb(207,175,33)"/><text x="66.6383%" y="559.50"></text></g><g><title>schedule_timeout (8 samples, 0.84%)</title><rect x="66.4927%" y="533" width="0.8351%" height="15" fill="rgb(243,129,54)"/><text x="66.7427%" y="543.50"></text></g><g><title>schedule (8 samples, 0.84%)</title><rect x="66.4927%" y="517" width="0.8351%" height="15" fill="rgb(227,119,45)"/><text x="66.7427%" y="527.50"></text></g><g><title>preempt_count_sub (1 samples, 0.10%)</title><rect x="67.2234%" y="501" width="0.1044%" height="15" fill="rgb(205,109,36)"/><text x="67.4734%" y="511.50"></text></g><g><title>__x64_sys_recvfrom (20 samples, 2.09%)</title><rect x="65.3445%" y="629" width="2.0877%" height="15" fill="rgb(205,6,39)"/><text x="65.5945%" y="639.50">_..</text></g><g><title>__sys_recvfrom (20 samples, 2.09%)</title><rect x="65.3445%" y="613" width="2.0877%" height="15" fill="rgb(221,32,16)"/><text x="65.5945%" y="623.50">_..</text></g><g><title>inet_recvmsg (19 samples, 1.98%)</title><rect x="65.4489%" y="597" width="1.9833%" height="15" fill="rgb(228,144,50)"/><text x="65.6989%" y="607.50">i..</text></g><g><title>tcp_recvmsg (19 samples, 1.98%)</title><rect x="65.4489%" y="581" width="1.9833%" height="15" fill="rgb(229,201,53)"/><text x="65.6989%" y="591.50">t..</text></g><g><title>tcp_recv_timestamp (1 samples, 0.10%)</title><rect x="67.3278%" y="565" width="0.1044%" height="15" fill="rgb(249,153,27)"/><text x="67.5778%" y="575.50"></text></g><g><title>do_syscall_64 (21 samples, 2.19%)</title><rect x="65.3445%" y="645" width="2.1921%" height="15" fill="rgb(227,106,25)"/><text x="65.5945%" y="655.50">d..</text></g><g><title>syscall_slow_exit_work (1 samples, 0.10%)</title><rect x="67.4322%" y="629" width="0.1044%" height="15" fill="rgb(230,65,29)"/><text x="67.6822%" y="639.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.10%)</title><rect x="67.4322%" y="613" width="0.1044%" height="15" fill="rgb(221,57,46)"/><text x="67.6822%" y="623.50"></text></g><g><title>path_put (1 samples, 0.10%)</title><rect x="67.4322%" y="597" width="0.1044%" height="15" fill="rgb(229,161,17)"/><text x="67.6822%" y="607.50"></text></g><g><title>dput (1 samples, 0.10%)</title><rect x="67.4322%" y="581" width="0.1044%" height="15" fill="rgb(222,213,11)"/><text x="67.6822%" y="591.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (23 samples, 2.40%)</title><rect x="65.2401%" y="757" width="2.4008%" height="15" fill="rgb(235,35,13)"/><text x="65.4901%" y="767.50">&lt;s..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (23 samples, 2.40%)</title><rect x="65.2401%" y="741" width="2.4008%" height="15" fill="rgb(233,158,34)"/><text x="65.4901%" y="751.50">&lt;s..</text></g><g><title>std::sys_common::net::TcpStream::read (23 samples, 2.40%)</title><rect x="65.2401%" y="725" width="2.4008%" height="15" fill="rgb(215,151,48)"/><text x="65.4901%" y="735.50">st..</text></g><g><title>std::sys::unix::net::Socket::read (23 samples, 2.40%)</title><rect x="65.2401%" y="709" width="2.4008%" height="15" fill="rgb(229,84,14)"/><text x="65.4901%" y="719.50">st..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (23 samples, 2.40%)</title><rect x="65.2401%" y="693" width="2.4008%" height="15" fill="rgb(229,68,14)"/><text x="65.4901%" y="703.50">st..</text></g><g><title>__libc_recv (23 samples, 2.40%)</title><rect x="65.2401%" y="677" width="2.4008%" height="15" fill="rgb(243,106,26)"/><text x="65.4901%" y="687.50">__..</text></g><g><title>entry_SYSCALL_64 (22 samples, 2.30%)</title><rect x="65.3445%" y="661" width="2.2965%" height="15" fill="rgb(206,45,38)"/><text x="65.5945%" y="671.50">e..</text></g><g><title>prepare_exit_to_usermode (1 samples, 0.10%)</title><rect x="67.5365%" y="645" width="0.1044%" height="15" fill="rgb(226,6,15)"/><text x="67.7865%" y="655.50"></text></g><g><title>msql_srv::packet::PacketReader&lt;R&gt;::next (24 samples, 2.51%)</title><rect x="65.2401%" y="773" width="2.5052%" height="15" fill="rgb(232,22,54)"/><text x="65.4901%" y="783.50">ms..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="67.6409%" y="757" width="0.1044%" height="15" fill="rgb(229,222,32)"/><text x="67.8909%" y="767.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="67.6409%" y="741" width="0.1044%" height="15" fill="rgb(228,62,29)"/><text x="67.8909%" y="751.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="67.6409%" y="725" width="0.1044%" height="15" fill="rgb(251,103,34)"/><text x="67.8909%" y="735.50"></text></g><g><title>sysmalloc (1 samples, 0.10%)</title><rect x="67.6409%" y="709" width="0.1044%" height="15" fill="rgb(233,12,30)"/><text x="67.8909%" y="719.50"></text></g><g><title>page_fault (1 samples, 0.10%)</title><rect x="67.6409%" y="693" width="0.1044%" height="15" fill="rgb(238,52,0)"/><text x="67.8909%" y="703.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.10%)</title><rect x="67.6409%" y="677" width="0.1044%" height="15" fill="rgb(223,98,5)"/><text x="67.8909%" y="687.50"></text></g><g><title>handle_mm_fault (1 samples, 0.10%)</title><rect x="67.6409%" y="661" width="0.1044%" height="15" fill="rgb(228,75,37)"/><text x="67.8909%" y="671.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.10%)</title><rect x="67.6409%" y="645" width="0.1044%" height="15" fill="rgb(205,115,49)"/><text x="67.8909%" y="655.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.10%)</title><rect x="67.6409%" y="629" width="0.1044%" height="15" fill="rgb(250,154,43)"/><text x="67.8909%" y="639.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.10%)</title><rect x="67.6409%" y="613" width="0.1044%" height="15" fill="rgb(226,43,29)"/><text x="67.8909%" y="623.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.10%)</title><rect x="67.6409%" y="597" width="0.1044%" height="15" fill="rgb(249,228,39)"/><text x="67.8909%" y="607.50"></text></g><g><title>prep_new_page (1 samples, 0.10%)</title><rect x="67.6409%" y="581" width="0.1044%" height="15" fill="rgb(216,79,43)"/><text x="67.8909%" y="591.50"></text></g><g><title>kernel_init_free_pages (1 samples, 0.10%)</title><rect x="67.6409%" y="565" width="0.1044%" height="15" fill="rgb(228,95,12)"/><text x="67.8909%" y="575.50"></text></g><g><title>clear_page_erms (1 samples, 0.10%)</title><rect x="67.6409%" y="549" width="0.1044%" height="15" fill="rgb(249,221,15)"/><text x="67.8909%" y="559.50"></text></g><g><title>__local_bh_enable_ip (2 samples, 0.21%)</title><rect x="67.8497%" y="613" width="0.2088%" height="15" fill="rgb(233,34,13)"/><text x="68.0997%" y="623.50"></text></g><g><title>preempt_count_sub (1 samples, 0.10%)</title><rect x="67.9541%" y="597" width="0.1044%" height="15" fill="rgb(214,103,39)"/><text x="68.2041%" y="607.50"></text></g><g><title>netif_rx (2 samples, 0.21%)</title><rect x="68.2672%" y="453" width="0.2088%" height="15" fill="rgb(251,126,39)"/><text x="68.5172%" y="463.50"></text></g><g><title>netif_rx_internal (2 samples, 0.21%)</title><rect x="68.2672%" y="437" width="0.2088%" height="15" fill="rgb(214,216,36)"/><text x="68.5172%" y="447.50"></text></g><g><title>ktime_get_with_offset (1 samples, 0.10%)</title><rect x="68.3716%" y="421" width="0.1044%" height="15" fill="rgb(220,221,8)"/><text x="68.6216%" y="431.50"></text></g><g><title>read_tsc (1 samples, 0.10%)</title><rect x="68.3716%" y="405" width="0.1044%" height="15" fill="rgb(240,216,3)"/><text x="68.6216%" y="415.50"></text></g><g><title>__dev_queue_xmit (3 samples, 0.31%)</title><rect x="68.2672%" y="501" width="0.3132%" height="15" fill="rgb(232,218,17)"/><text x="68.5172%" y="511.50"></text></g><g><title>dev_hard_start_xmit (3 samples, 0.31%)</title><rect x="68.2672%" y="485" width="0.3132%" height="15" fill="rgb(229,163,45)"/><text x="68.5172%" y="495.50"></text></g><g><title>loopback_xmit (3 samples, 0.31%)</title><rect x="68.2672%" y="469" width="0.3132%" height="15" fill="rgb(231,110,42)"/><text x="68.5172%" y="479.50"></text></g><g><title>skb_clone_tx_timestamp (1 samples, 0.10%)</title><rect x="68.4760%" y="453" width="0.1044%" height="15" fill="rgb(208,170,48)"/><text x="68.7260%" y="463.50"></text></g><g><title>__kfree_skb_flush (1 samples, 0.10%)</title><rect x="68.6848%" y="421" width="0.1044%" height="15" fill="rgb(239,116,25)"/><text x="68.9348%" y="431.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.10%)</title><rect x="68.7891%" y="325" width="0.1044%" height="15" fill="rgb(219,200,50)"/><text x="69.0391%" y="335.50"></text></g><g><title>sk_filter_trim_cap (2 samples, 0.21%)</title><rect x="68.8935%" y="309" width="0.2088%" height="15" fill="rgb(245,200,0)"/><text x="69.1435%" y="319.50"></text></g><g><title>sock_put (2 samples, 0.21%)</title><rect x="69.1023%" y="309" width="0.2088%" height="15" fill="rgb(245,119,33)"/><text x="69.3523%" y="319.50"></text></g><g><title>enqueue_task (1 samples, 0.10%)</title><rect x="69.3111%" y="213" width="0.1044%" height="15" fill="rgb(231,125,12)"/><text x="69.5611%" y="223.50"></text></g><g><title>psi_task_change (1 samples, 0.10%)</title><rect x="69.3111%" y="197" width="0.1044%" height="15" fill="rgb(216,96,41)"/><text x="69.5611%" y="207.50"></text></g><g><title>psi_group_change (1 samples, 0.10%)</title><rect x="69.3111%" y="181" width="0.1044%" height="15" fill="rgb(248,43,45)"/><text x="69.5611%" y="191.50"></text></g><g><title>ttwu_do_wakeup (2 samples, 0.21%)</title><rect x="69.4154%" y="213" width="0.2088%" height="15" fill="rgb(217,222,7)"/><text x="69.6654%" y="223.50"></text></g><g><title>check_preempt_curr (2 samples, 0.21%)</title><rect x="69.4154%" y="197" width="0.2088%" height="15" fill="rgb(233,28,6)"/><text x="69.6654%" y="207.50"></text></g><g><title>resched_curr (2 samples, 0.21%)</title><rect x="69.4154%" y="181" width="0.2088%" height="15" fill="rgb(231,218,15)"/><text x="69.6654%" y="191.50"></text></g><g><title>try_to_wake_up (4 samples, 0.42%)</title><rect x="69.3111%" y="229" width="0.4175%" height="15" fill="rgb(226,171,48)"/><text x="69.5611%" y="239.50"></text></g><g><title>update_rq_clock (1 samples, 0.10%)</title><rect x="69.6242%" y="213" width="0.1044%" height="15" fill="rgb(235,201,9)"/><text x="69.8742%" y="223.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.10%)</title><rect x="69.6242%" y="197" width="0.1044%" height="15" fill="rgb(217,80,15)"/><text x="69.8742%" y="207.50"></text></g><g><title>sched_clock (1 samples, 0.10%)</title><rect x="69.6242%" y="181" width="0.1044%" height="15" fill="rgb(219,152,8)"/><text x="69.8742%" y="191.50"></text></g><g><title>native_sched_clock (1 samples, 0.10%)</title><rect x="69.6242%" y="165" width="0.1044%" height="15" fill="rgb(243,107,38)"/><text x="69.8742%" y="175.50"></text></g><g><title>sock_def_readable (5 samples, 0.52%)</title><rect x="69.3111%" y="277" width="0.5219%" height="15" fill="rgb(231,17,5)"/><text x="69.5611%" y="287.50"></text></g><g><title>__wake_up_common_lock (5 samples, 0.52%)</title><rect x="69.3111%" y="261" width="0.5219%" height="15" fill="rgb(209,25,54)"/><text x="69.5611%" y="271.50"></text></g><g><title>__wake_up_common (5 samples, 0.52%)</title><rect x="69.3111%" y="245" width="0.5219%" height="15" fill="rgb(219,0,2)"/><text x="69.5611%" y="255.50"></text></g><g><title>woken_wake_function (1 samples, 0.10%)</title><rect x="69.7286%" y="229" width="0.1044%" height="15" fill="rgb(246,9,5)"/><text x="69.9786%" y="239.50"></text></g><g><title>__netif_receive_skb_one_core (11 samples, 1.15%)</title><rect x="68.7891%" y="405" width="1.1482%" height="15" fill="rgb(226,159,4)"/><text x="69.0391%" y="415.50"></text></g><g><title>ip_rcv (11 samples, 1.15%)</title><rect x="68.7891%" y="389" width="1.1482%" height="15" fill="rgb(219,175,34)"/><text x="69.0391%" y="399.50"></text></g><g><title>ip_local_deliver (11 samples, 1.15%)</title><rect x="68.7891%" y="373" width="1.1482%" height="15" fill="rgb(236,10,46)"/><text x="69.0391%" y="383.50"></text></g><g><title>ip_local_deliver_finish (11 samples, 1.15%)</title><rect x="68.7891%" y="357" width="1.1482%" height="15" fill="rgb(240,211,16)"/><text x="69.0391%" y="367.50"></text></g><g><title>ip_protocol_deliver_rcu (11 samples, 1.15%)</title><rect x="68.7891%" y="341" width="1.1482%" height="15" fill="rgb(205,3,43)"/><text x="69.0391%" y="351.50"></text></g><g><title>tcp_v4_rcv (10 samples, 1.04%)</title><rect x="68.8935%" y="325" width="1.0438%" height="15" fill="rgb(245,7,22)"/><text x="69.1435%" y="335.50"></text></g><g><title>tcp_v4_do_rcv (6 samples, 0.63%)</title><rect x="69.3111%" y="309" width="0.6263%" height="15" fill="rgb(239,132,32)"/><text x="69.5611%" y="319.50"></text></g><g><title>tcp_rcv_established (6 samples, 0.63%)</title><rect x="69.3111%" y="293" width="0.6263%" height="15" fill="rgb(228,202,34)"/><text x="69.5611%" y="303.50"></text></g><g><title>tcp_ack (1 samples, 0.10%)</title><rect x="69.8330%" y="277" width="0.1044%" height="15" fill="rgb(254,200,22)"/><text x="70.0830%" y="287.50"></text></g><g><title>kmem_cache_free (1 samples, 0.10%)</title><rect x="69.8330%" y="261" width="0.1044%" height="15" fill="rgb(219,10,39)"/><text x="70.0830%" y="271.50"></text></g><g><title>cache_from_obj (1 samples, 0.10%)</title><rect x="69.8330%" y="245" width="0.1044%" height="15" fill="rgb(226,210,39)"/><text x="70.0830%" y="255.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.10%)</title><rect x="69.9374%" y="405" width="0.1044%" height="15" fill="rgb(208,219,16)"/><text x="70.1874%" y="415.50"></text></g><g><title>ip_finish_output2 (20 samples, 2.09%)</title><rect x="68.0585%" y="517" width="2.0877%" height="15" fill="rgb(216,158,51)"/><text x="68.3085%" y="527.50">i..</text></g><g><title>__local_bh_enable_ip (15 samples, 1.57%)</title><rect x="68.5804%" y="501" width="1.5658%" height="15" fill="rgb(233,14,44)"/><text x="68.8304%" y="511.50"></text></g><g><title>do_softirq (15 samples, 1.57%)</title><rect x="68.5804%" y="485" width="1.5658%" height="15" fill="rgb(237,97,39)"/><text x="68.8304%" y="495.50"></text></g><g><title>do_softirq_own_stack (15 samples, 1.57%)</title><rect x="68.5804%" y="469" width="1.5658%" height="15" fill="rgb(218,198,43)"/><text x="68.8304%" y="479.50"></text></g><g><title>__do_softirq (14 samples, 1.46%)</title><rect x="68.6848%" y="453" width="1.4614%" height="15" fill="rgb(231,104,20)"/><text x="68.9348%" y="463.50"></text></g><g><title>net_rx_action (14 samples, 1.46%)</title><rect x="68.6848%" y="437" width="1.4614%" height="15" fill="rgb(254,36,13)"/><text x="68.9348%" y="447.50"></text></g><g><title>process_backlog (13 samples, 1.36%)</title><rect x="68.7891%" y="421" width="1.3570%" height="15" fill="rgb(248,14,50)"/><text x="69.0391%" y="431.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.10%)</title><rect x="70.0418%" y="405" width="0.1044%" height="15" fill="rgb(217,107,29)"/><text x="70.2918%" y="415.50"></text></g><g><title>preempt_count_sub (1 samples, 0.10%)</title><rect x="70.0418%" y="389" width="0.1044%" height="15" fill="rgb(251,169,33)"/><text x="70.2918%" y="399.50"></text></g><g><title>__ip_queue_xmit (21 samples, 2.19%)</title><rect x="68.0585%" y="549" width="2.1921%" height="15" fill="rgb(217,108,32)"/><text x="68.3085%" y="559.50">_..</text></g><g><title>ip_output (21 samples, 2.19%)</title><rect x="68.0585%" y="533" width="2.1921%" height="15" fill="rgb(219,66,42)"/><text x="68.3085%" y="543.50">i..</text></g><g><title>ip_finish_output (1 samples, 0.10%)</title><rect x="70.1461%" y="517" width="0.1044%" height="15" fill="rgb(206,180,7)"/><text x="70.3961%" y="527.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (1 samples, 0.10%)</title><rect x="70.1461%" y="501" width="0.1044%" height="15" fill="rgb(208,226,31)"/><text x="70.3961%" y="511.50"></text></g><g><title>__tcp_transmit_skb (22 samples, 2.30%)</title><rect x="68.0585%" y="565" width="2.2965%" height="15" fill="rgb(218,26,49)"/><text x="68.3085%" y="575.50">_..</text></g><g><title>skb_clone (1 samples, 0.10%)</title><rect x="70.2505%" y="549" width="0.1044%" height="15" fill="rgb(233,197,48)"/><text x="70.5005%" y="559.50"></text></g><g><title>__tcp_push_pending_frames (23 samples, 2.40%)</title><rect x="68.0585%" y="597" width="2.4008%" height="15" fill="rgb(252,181,51)"/><text x="68.3085%" y="607.50">__..</text></g><g><title>tcp_write_xmit (23 samples, 2.40%)</title><rect x="68.0585%" y="581" width="2.4008%" height="15" fill="rgb(253,90,19)"/><text x="68.3085%" y="591.50">tc..</text></g><g><title>tcp_schedule_loss_probe.part.0 (1 samples, 0.10%)</title><rect x="70.3549%" y="565" width="0.1044%" height="15" fill="rgb(215,171,30)"/><text x="70.6049%" y="575.50"></text></g><g><title>__usecs_to_jiffies (1 samples, 0.10%)</title><rect x="70.3549%" y="549" width="0.1044%" height="15" fill="rgb(214,222,9)"/><text x="70.6049%" y="559.50"></text></g><g><title>__x64_sys_sendto (27 samples, 2.82%)</title><rect x="67.8497%" y="677" width="2.8184%" height="15" fill="rgb(223,3,22)"/><text x="68.0997%" y="687.50">__..</text></g><g><title>__sys_sendto (27 samples, 2.82%)</title><rect x="67.8497%" y="661" width="2.8184%" height="15" fill="rgb(225,196,46)"/><text x="68.0997%" y="671.50">__..</text></g><g><title>sock_sendmsg (27 samples, 2.82%)</title><rect x="67.8497%" y="645" width="2.8184%" height="15" fill="rgb(209,110,37)"/><text x="68.0997%" y="655.50">so..</text></g><g><title>tcp_sendmsg (27 samples, 2.82%)</title><rect x="67.8497%" y="629" width="2.8184%" height="15" fill="rgb(249,89,12)"/><text x="68.0997%" y="639.50">tc..</text></g><g><title>tcp_sendmsg_locked (25 samples, 2.61%)</title><rect x="68.0585%" y="613" width="2.6096%" height="15" fill="rgb(226,27,33)"/><text x="68.3085%" y="623.50">tc..</text></g><g><title>tcp_send_mss (2 samples, 0.21%)</title><rect x="70.4593%" y="597" width="0.2088%" height="15" fill="rgb(213,82,22)"/><text x="70.7093%" y="607.50"></text></g><g><title>decor::Shim::run_on_tcp (127 samples, 13.26%)</title><rect x="57.5157%" y="805" width="13.2568%" height="15" fill="rgb(248,140,0)"/><text x="57.7657%" y="815.50">decor::Shim::run_on_..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (127 samples, 13.26%)</title><rect x="57.5157%" y="789" width="13.2568%" height="15" fill="rgb(228,106,3)"/><text x="57.7657%" y="799.50">msql_srv::MysqlInter..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (29 samples, 3.03%)</title><rect x="67.7453%" y="773" width="3.0271%" height="15" fill="rgb(209,23,37)"/><text x="67.9953%" y="783.50">std..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (29 samples, 3.03%)</title><rect x="67.7453%" y="757" width="3.0271%" height="15" fill="rgb(241,93,50)"/><text x="67.9953%" y="767.50">&lt;st..</text></g><g><title>std::sys_common::net::TcpStream::write (29 samples, 3.03%)</title><rect x="67.7453%" y="741" width="3.0271%" height="15" fill="rgb(253,46,43)"/><text x="67.9953%" y="751.50">std..</text></g><g><title>__libc_send (29 samples, 3.03%)</title><rect x="67.7453%" y="725" width="3.0271%" height="15" fill="rgb(226,206,43)"/><text x="67.9953%" y="735.50">__l..</text></g><g><title>entry_SYSCALL_64 (28 samples, 2.92%)</title><rect x="67.8497%" y="709" width="2.9228%" height="15" fill="rgb(217,54,7)"/><text x="68.0997%" y="719.50">en..</text></g><g><title>do_syscall_64 (28 samples, 2.92%)</title><rect x="67.8497%" y="693" width="2.9228%" height="15" fill="rgb(223,5,52)"/><text x="68.0997%" y="703.50">do..</text></g><g><title>syscall_trace_enter (1 samples, 0.10%)</title><rect x="70.6681%" y="677" width="0.1044%" height="15" fill="rgb(206,52,46)"/><text x="70.9181%" y="687.50"></text></g><g><title>__audit_syscall_entry (1 samples, 0.10%)</title><rect x="70.6681%" y="661" width="0.1044%" height="15" fill="rgb(253,136,11)"/><text x="70.9181%" y="671.50"></text></g><g><title>__GI___clone (128 samples, 13.36%)</title><rect x="57.5157%" y="917" width="13.3612%" height="15" fill="rgb(208,106,33)"/><text x="57.7657%" y="927.50">__GI___clone</text></g><g><title>start_thread (128 samples, 13.36%)</title><rect x="57.5157%" y="901" width="13.3612%" height="15" fill="rgb(206,54,4)"/><text x="57.7657%" y="911.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (128 samples, 13.36%)</title><rect x="57.5157%" y="885" width="13.3612%" height="15" fill="rgb(213,3,15)"/><text x="57.7657%" y="895.50">std::sys::unix::thre..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (128 samples, 13.36%)</title><rect x="57.5157%" y="869" width="13.3612%" height="15" fill="rgb(252,211,39)"/><text x="57.7657%" y="879.50">&lt;alloc::boxed::Box&lt;F..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (128 samples, 13.36%)</title><rect x="57.5157%" y="853" width="13.3612%" height="15" fill="rgb(223,6,36)"/><text x="57.7657%" y="863.50">&lt;alloc::boxed::Box&lt;F..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (128 samples, 13.36%)</title><rect x="57.5157%" y="837" width="13.3612%" height="15" fill="rgb(252,169,45)"/><text x="57.7657%" y="847.50">core::ops::function:..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (128 samples, 13.36%)</title><rect x="57.5157%" y="821" width="13.3612%" height="15" fill="rgb(212,48,26)"/><text x="57.7657%" y="831.50">std::sys_common::bac..</text></g><g><title>mysql::conn::Conn::new (1 samples, 0.10%)</title><rect x="70.7724%" y="805" width="0.1044%" height="15" fill="rgb(251,102,48)"/><text x="71.0224%" y="815.50"></text></g><g><title>mysql::conn::opts::from_url (1 samples, 0.10%)</title><rect x="70.7724%" y="789" width="0.1044%" height="15" fill="rgb(243,208,16)"/><text x="71.0224%" y="799.50"></text></g><g><title>url::host::Host::parse (1 samples, 0.10%)</title><rect x="70.7724%" y="773" width="0.1044%" height="15" fill="rgb(219,96,24)"/><text x="71.0224%" y="783.50"></text></g><g><title>idna::domain_to_ascii (1 samples, 0.10%)</title><rect x="70.7724%" y="757" width="0.1044%" height="15" fill="rgb(219,33,29)"/><text x="71.0224%" y="767.50"></text></g><g><title>idna::uts46::Config::to_ascii (1 samples, 0.10%)</title><rect x="70.7724%" y="741" width="0.1044%" height="15" fill="rgb(223,176,5)"/><text x="71.0224%" y="751.50"></text></g><g><title>idna::uts46::processing (1 samples, 0.10%)</title><rect x="70.7724%" y="725" width="0.1044%" height="15" fill="rgb(228,140,14)"/><text x="71.0224%" y="735.50"></text></g><g><title>idna::uts46::find_char (1 samples, 0.10%)</title><rect x="70.7724%" y="709" width="0.1044%" height="15" fill="rgb(217,179,31)"/><text x="71.0224%" y="719.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="71.0856%" y="741" width="0.1044%" height="15" fill="rgb(230,9,30)"/><text x="71.3356%" y="751.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.10%)</title><rect x="71.1900%" y="741" width="0.1044%" height="15" fill="rgb(230,136,20)"/><text x="71.4400%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.10%)</title><rect x="71.1900%" y="725" width="0.1044%" height="15" fill="rgb(215,210,22)"/><text x="71.4400%" y="735.50"></text></g><g><title>core::fmt::write (1 samples, 0.10%)</title><rect x="71.1900%" y="709" width="0.1044%" height="15" fill="rgb(218,43,5)"/><text x="71.4400%" y="719.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.10%)</title><rect x="71.1900%" y="693" width="0.1044%" height="15" fill="rgb(216,11,5)"/><text x="71.4400%" y="703.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.10%)</title><rect x="71.1900%" y="677" width="0.1044%" height="15" fill="rgb(209,82,29)"/><text x="71.4400%" y="687.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="71.1900%" y="661" width="0.1044%" height="15" fill="rgb(244,115,12)"/><text x="71.4400%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="71.1900%" y="645" width="0.1044%" height="15" fill="rgb(222,82,18)"/><text x="71.4400%" y="655.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.10%)</title><rect x="71.1900%" y="629" width="0.1044%" height="15" fill="rgb(249,227,8)"/><text x="71.4400%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="71.1900%" y="613" width="0.1044%" height="15" fill="rgb(253,141,45)"/><text x="71.4400%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="71.1900%" y="597" width="0.1044%" height="15" fill="rgb(234,184,4)"/><text x="71.4400%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.10%)</title><rect x="71.1900%" y="581" width="0.1044%" height="15" fill="rgb(218,194,23)"/><text x="71.4400%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.10%)</title><rect x="71.1900%" y="565" width="0.1044%" height="15" fill="rgb(235,66,41)"/><text x="71.4400%" y="575.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.10%)</title><rect x="71.1900%" y="549" width="0.1044%" height="15" fill="rgb(245,217,1)"/><text x="71.4400%" y="559.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.10%)</title><rect x="71.2944%" y="741" width="0.1044%" height="15" fill="rgb(229,91,1)"/><text x="71.5444%" y="751.50"></text></g><g><title>hwloc_topology_destroy (1 samples, 0.10%)</title><rect x="71.2944%" y="725" width="0.1044%" height="15" fill="rgb(207,101,30)"/><text x="71.5444%" y="735.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.10%)</title><rect x="71.2944%" y="709" width="0.1044%" height="15" fill="rgb(223,82,49)"/><text x="71.5444%" y="719.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.10%)</title><rect x="71.2944%" y="693" width="0.1044%" height="15" fill="rgb(218,167,17)"/><text x="71.5444%" y="703.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.10%)</title><rect x="71.2944%" y="677" width="0.1044%" height="15" fill="rgb(208,103,14)"/><text x="71.5444%" y="687.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.10%)</title><rect x="71.2944%" y="661" width="0.1044%" height="15" fill="rgb(238,20,8)"/><text x="71.5444%" y="671.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.10%)</title><rect x="71.2944%" y="645" width="0.1044%" height="15" fill="rgb(218,80,54)"/><text x="71.5444%" y="655.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.10%)</title><rect x="71.2944%" y="629" width="0.1044%" height="15" fill="rgb(240,144,17)"/><text x="71.5444%" y="639.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="71.2944%" y="613" width="0.1044%" height="15" fill="rgb(245,27,50)"/><text x="71.5444%" y="623.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="71.3987%" y="741" width="0.1044%" height="15" fill="rgb(251,51,7)"/><text x="71.6487%" y="751.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="71.3987%" y="725" width="0.1044%" height="15" fill="rgb(245,217,29)"/><text x="71.6487%" y="735.50"></text></g><g><title>__libc_close (1 samples, 0.10%)</title><rect x="71.3987%" y="709" width="0.1044%" height="15" fill="rgb(221,176,29)"/><text x="71.6487%" y="719.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.10%)</title><rect x="71.3987%" y="693" width="0.1044%" height="15" fill="rgb(212,180,24)"/><text x="71.6487%" y="703.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.10%)</title><rect x="71.3987%" y="677" width="0.1044%" height="15" fill="rgb(254,24,2)"/><text x="71.6487%" y="687.50"></text></g><g><title>task_work_run (1 samples, 0.10%)</title><rect x="71.3987%" y="661" width="0.1044%" height="15" fill="rgb(230,100,2)"/><text x="71.6487%" y="671.50"></text></g><g><title>__fput (1 samples, 0.10%)</title><rect x="71.3987%" y="645" width="0.1044%" height="15" fill="rgb(219,142,25)"/><text x="71.6487%" y="655.50"></text></g><g><title>sock_close (1 samples, 0.10%)</title><rect x="71.3987%" y="629" width="0.1044%" height="15" fill="rgb(240,73,43)"/><text x="71.6487%" y="639.50"></text></g><g><title>__sock_release (1 samples, 0.10%)</title><rect x="71.3987%" y="613" width="0.1044%" height="15" fill="rgb(214,114,15)"/><text x="71.6487%" y="623.50"></text></g><g><title>inet_release (1 samples, 0.10%)</title><rect x="71.3987%" y="597" width="0.1044%" height="15" fill="rgb(207,130,4)"/><text x="71.6487%" y="607.50"></text></g><g><title>tcp_close (1 samples, 0.10%)</title><rect x="71.3987%" y="581" width="0.1044%" height="15" fill="rgb(221,25,40)"/><text x="71.6487%" y="591.50"></text></g><g><title>percpu_counter_add_batch (1 samples, 0.10%)</title><rect x="71.3987%" y="565" width="0.1044%" height="15" fill="rgb(241,184,7)"/><text x="71.6487%" y="575.50"></text></g><g><title>[libhwloc.so.15.2.0] (4 samples, 0.42%)</title><rect x="71.6075%" y="645" width="0.4175%" height="15" fill="rgb(235,159,4)"/><text x="71.8575%" y="655.50"></text></g><g><title>[libhwloc.so.15.2.0] (5 samples, 0.52%)</title><rect x="71.6075%" y="661" width="0.5219%" height="15" fill="rgb(214,87,48)"/><text x="71.8575%" y="671.50"></text></g><g><title>hwloc_bitmap_or (1 samples, 0.10%)</title><rect x="72.0251%" y="645" width="0.1044%" height="15" fill="rgb(246,198,24)"/><text x="72.2751%" y="655.50"></text></g><g><title>__GI___libc_free (4 samples, 0.42%)</title><rect x="72.1294%" y="645" width="0.4175%" height="15" fill="rgb(209,66,40)"/><text x="72.3794%" y="655.50"></text></g><g><title>__set_cpus_allowed_ptr (234 samples, 24.43%)</title><rect x="72.9645%" y="565" width="24.4259%" height="15" fill="rgb(233,147,39)"/><text x="73.2145%" y="575.50">__set_cpus_allowed_ptr</text></g><g><title>stop_one_cpu (234 samples, 24.43%)</title><rect x="72.9645%" y="549" width="24.4259%" height="15" fill="rgb(231,145,52)"/><text x="73.2145%" y="559.50">stop_one_cpu</text></g><g><title>cpu_stop_queue_work (234 samples, 24.43%)</title><rect x="72.9645%" y="533" width="24.4259%" height="15" fill="rgb(206,20,26)"/><text x="73.2145%" y="543.50">cpu_stop_queue_work</text></g><g><title>preempt_schedule_thunk (234 samples, 24.43%)</title><rect x="72.9645%" y="517" width="24.4259%" height="15" fill="rgb(238,220,4)"/><text x="73.2145%" y="527.50">preempt_schedule_thunk</text></g><g><title>preempt_schedule_common (234 samples, 24.43%)</title><rect x="72.9645%" y="501" width="24.4259%" height="15" fill="rgb(252,195,42)"/><text x="73.2145%" y="511.50">preempt_schedule_common</text></g><g><title>__schedule (234 samples, 24.43%)</title><rect x="72.9645%" y="485" width="24.4259%" height="15" fill="rgb(209,10,6)"/><text x="73.2145%" y="495.50">__schedule</text></g><g><title>finish_task_switch (234 samples, 24.43%)</title><rect x="72.9645%" y="469" width="24.4259%" height="15" fill="rgb(229,3,52)"/><text x="73.2145%" y="479.50">finish_task_switch</text></g><g><title>__perf_event_task_sched_in (232 samples, 24.22%)</title><rect x="73.1733%" y="453" width="24.2171%" height="15" fill="rgb(253,49,37)"/><text x="73.4233%" y="463.50">__perf_event_task_sched_in</text></g><g><title>__intel_pmu_enable_all.constprop.0 (230 samples, 24.01%)</title><rect x="73.3820%" y="437" width="24.0084%" height="15" fill="rgb(240,103,49)"/><text x="73.6320%" y="447.50">__intel_pmu_enable_all.constprop.0</text></g><g><title>native_write_msr (230 samples, 24.01%)</title><rect x="73.3820%" y="421" width="24.0084%" height="15" fill="rgb(250,182,30)"/><text x="73.6320%" y="431.50">native_write_msr</text></g><g><title>__x64_sys_sched_setaffinity (236 samples, 24.63%)</title><rect x="72.8601%" y="597" width="24.6347%" height="15" fill="rgb(248,8,30)"/><text x="73.1101%" y="607.50">__x64_sys_sched_setaffinity</text></g><g><title>sched_setaffinity (235 samples, 24.53%)</title><rect x="72.9645%" y="581" width="24.5303%" height="15" fill="rgb(237,120,30)"/><text x="73.2145%" y="591.50">sched_setaffinity</text></g><g><title>cpuset_cpus_allowed (1 samples, 0.10%)</title><rect x="97.3904%" y="565" width="0.1044%" height="15" fill="rgb(221,146,34)"/><text x="97.6404%" y="575.50"></text></g><g><title>guarantee_online_cpus (1 samples, 0.10%)</title><rect x="97.3904%" y="549" width="0.1044%" height="15" fill="rgb(242,55,13)"/><text x="97.6404%" y="559.50"></text></g><g><title>__bitmap_intersects (1 samples, 0.10%)</title><rect x="97.3904%" y="533" width="0.1044%" height="15" fill="rgb(242,112,31)"/><text x="97.6404%" y="543.50"></text></g><g><title>entry_SYSCALL_64 (238 samples, 24.84%)</title><rect x="72.8601%" y="629" width="24.8434%" height="15" fill="rgb(249,192,27)"/><text x="73.1101%" y="639.50">entry_SYSCALL_64</text></g><g><title>do_syscall_64 (238 samples, 24.84%)</title><rect x="72.8601%" y="613" width="24.8434%" height="15" fill="rgb(208,204,44)"/><text x="73.1101%" y="623.50">do_syscall_64</text></g><g><title>syscall_slow_exit_work (2 samples, 0.21%)</title><rect x="97.4948%" y="597" width="0.2088%" height="15" fill="rgb(208,93,54)"/><text x="97.7448%" y="607.50"></text></g><g><title>__audit_syscall_exit (2 samples, 0.21%)</title><rect x="97.4948%" y="581" width="0.2088%" height="15" fill="rgb(242,1,31)"/><text x="97.7448%" y="591.50"></text></g><g><title>path_put (1 samples, 0.10%)</title><rect x="97.5992%" y="565" width="0.1044%" height="15" fill="rgb(241,83,25)"/><text x="97.8492%" y="575.50"></text></g><g><title>dput (1 samples, 0.10%)</title><rect x="97.5992%" y="549" width="0.1044%" height="15" fill="rgb(205,169,50)"/><text x="97.8492%" y="559.50"></text></g><g><title>hwloc::Topology::new (252 samples, 26.30%)</title><rect x="71.5031%" y="741" width="26.3048%" height="15" fill="rgb(239,186,37)"/><text x="71.7531%" y="751.50">hwloc::Topology::new</text></g><g><title>hwloc_topology_load (252 samples, 26.30%)</title><rect x="71.5031%" y="725" width="26.3048%" height="15" fill="rgb(205,221,10)"/><text x="71.7531%" y="735.50">hwloc_topology_load</text></g><g><title>[libhwloc.so.15.2.0] (252 samples, 26.30%)</title><rect x="71.5031%" y="709" width="26.3048%" height="15" fill="rgb(218,196,15)"/><text x="71.7531%" y="719.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (252 samples, 26.30%)</title><rect x="71.5031%" y="693" width="26.3048%" height="15" fill="rgb(218,196,35)"/><text x="71.7531%" y="703.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (252 samples, 26.30%)</title><rect x="71.5031%" y="677" width="26.3048%" height="15" fill="rgb(233,63,24)"/><text x="71.7531%" y="687.50">[libhwloc.so.15.2.0]</text></g><g><title>hwloc_linux_set_tid_cpubind (246 samples, 25.68%)</title><rect x="72.1294%" y="661" width="25.6785%" height="15" fill="rgb(225,8,4)"/><text x="72.3794%" y="671.50">hwloc_linux_set_tid_cpubind</text></g><g><title>__GI___sched_setaffinity_new (242 samples, 25.26%)</title><rect x="72.5470%" y="645" width="25.2610%" height="15" fill="rgb(234,105,35)"/><text x="72.7970%" y="655.50">__GI___sched_setaffinity_new</text></g><g><title>syscall_return_via_sysret (1 samples, 0.10%)</title><rect x="97.7035%" y="629" width="0.1044%" height="15" fill="rgb(236,21,32)"/><text x="97.9535%" y="639.50"></text></g><g><title>lobsters::init_database (1 samples, 0.10%)</title><rect x="97.8079%" y="741" width="0.1044%" height="15" fill="rgb(228,109,6)"/><text x="98.0579%" y="751.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.10%)</title><rect x="97.8079%" y="725" width="0.1044%" height="15" fill="rgb(229,215,31)"/><text x="98.0579%" y="735.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.10%)</title><rect x="97.8079%" y="709" width="0.1044%" height="15" fill="rgb(221,52,54)"/><text x="98.0579%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.10%)</title><rect x="97.8079%" y="693" width="0.1044%" height="15" fill="rgb(252,129,43)"/><text x="98.0579%" y="703.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.10%)</title><rect x="97.8079%" y="677" width="0.1044%" height="15" fill="rgb(248,183,27)"/><text x="98.0579%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="97.8079%" y="661" width="0.1044%" height="15" fill="rgb(250,0,22)"/><text x="98.0579%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.10%)</title><rect x="97.8079%" y="645" width="0.1044%" height="15" fill="rgb(213,166,10)"/><text x="98.0579%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="97.8079%" y="629" width="0.1044%" height="15" fill="rgb(207,163,36)"/><text x="98.0579%" y="639.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.10%)</title><rect x="98.1211%" y="709" width="0.1044%" height="15" fill="rgb(208,122,22)"/><text x="98.3711%" y="719.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (4 samples, 0.42%)</title><rect x="97.9123%" y="741" width="0.4175%" height="15" fill="rgb(207,104,49)"/><text x="98.1623%" y="751.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.21%)</title><rect x="98.1211%" y="725" width="0.2088%" height="15" fill="rgb(248,211,50)"/><text x="98.3711%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="98.2255%" y="709" width="0.1044%" height="15" fill="rgb(217,13,45)"/><text x="98.4755%" y="719.50"></text></g><g><title>__libc_start_main (264 samples, 27.56%)</title><rect x="70.8768%" y="901" width="27.5574%" height="15" fill="rgb(211,216,49)"/><text x="71.1268%" y="911.50">__libc_start_main</text></g><g><title>main (264 samples, 27.56%)</title><rect x="70.8768%" y="885" width="27.5574%" height="15" fill="rgb(221,58,53)"/><text x="71.1268%" y="895.50">main</text></g><g><title>std::rt::lang_start_internal (264 samples, 27.56%)</title><rect x="70.8768%" y="869" width="27.5574%" height="15" fill="rgb(220,112,41)"/><text x="71.1268%" y="879.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (264 samples, 27.56%)</title><rect x="70.8768%" y="853" width="27.5574%" height="15" fill="rgb(236,38,28)"/><text x="71.1268%" y="863.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (264 samples, 27.56%)</title><rect x="70.8768%" y="837" width="27.5574%" height="15" fill="rgb(227,195,22)"/><text x="71.1268%" y="847.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (264 samples, 27.56%)</title><rect x="70.8768%" y="821" width="27.5574%" height="15" fill="rgb(214,55,33)"/><text x="71.1268%" y="831.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (264 samples, 27.56%)</title><rect x="70.8768%" y="805" width="27.5574%" height="15" fill="rgb(248,80,13)"/><text x="71.1268%" y="815.50">core::ops::function::impls::&lt;impl core::ops:..</text></g><g><title>std::rt::lang_start::_{{closure}} (264 samples, 27.56%)</title><rect x="70.8768%" y="789" width="27.5574%" height="15" fill="rgb(238,52,6)"/><text x="71.1268%" y="799.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (264 samples, 27.56%)</title><rect x="70.8768%" y="773" width="27.5574%" height="15" fill="rgb(224,198,47)"/><text x="71.1268%" y="783.50">std::sys_common::backtrace::__rust_begin_sho..</text></g><g><title>lobsters::main (264 samples, 27.56%)</title><rect x="70.8768%" y="757" width="27.5574%" height="15" fill="rgb(233,171,20)"/><text x="71.1268%" y="767.50">lobsters::main</text></g><g><title>std::thread::spawn (1 samples, 0.10%)</title><rect x="98.3299%" y="741" width="0.1044%" height="15" fill="rgb(241,30,25)"/><text x="98.5799%" y="751.50"></text></g><g><title>std::sys::unix::thread::Thread::new (1 samples, 0.10%)</title><rect x="98.3299%" y="725" width="0.1044%" height="15" fill="rgb(207,171,38)"/><text x="98.5799%" y="735.50"></text></g><g><title>__pthread_create_2_1 (1 samples, 0.10%)</title><rect x="98.3299%" y="709" width="0.1044%" height="15" fill="rgb(234,70,1)"/><text x="98.5799%" y="719.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.10%)</title><rect x="98.3299%" y="693" width="0.1044%" height="15" fill="rgb(232,178,18)"/><text x="98.5799%" y="703.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.10%)</title><rect x="98.3299%" y="677" width="0.1044%" height="15" fill="rgb(241,78,40)"/><text x="98.5799%" y="687.50"></text></g><g><title>do_syscall_64 (1 samples, 0.10%)</title><rect x="98.3299%" y="661" width="0.1044%" height="15" fill="rgb(222,35,25)"/><text x="98.5799%" y="671.50"></text></g><g><title>ksys_mmap_pgoff (1 samples, 0.10%)</title><rect x="98.3299%" y="645" width="0.1044%" height="15" fill="rgb(207,92,16)"/><text x="98.5799%" y="655.50"></text></g><g><title>vm_mmap_pgoff (1 samples, 0.10%)</title><rect x="98.3299%" y="629" width="0.1044%" height="15" fill="rgb(216,59,51)"/><text x="98.5799%" y="639.50"></text></g><g><title>do_mmap (1 samples, 0.10%)</title><rect x="98.3299%" y="613" width="0.1044%" height="15" fill="rgb(213,80,28)"/><text x="98.5799%" y="623.50"></text></g><g><title>mmap_region (1 samples, 0.10%)</title><rect x="98.3299%" y="597" width="0.1044%" height="15" fill="rgb(220,93,7)"/><text x="98.5799%" y="607.50"></text></g><g><title>_start (265 samples, 27.66%)</title><rect x="70.8768%" y="917" width="27.6618%" height="15" fill="rgb(225,24,44)"/><text x="71.1268%" y="927.50">_start</text></g><g><title>_dl_start (1 samples, 0.10%)</title><rect x="98.4342%" y="901" width="0.1044%" height="15" fill="rgb(243,74,40)"/><text x="98.6842%" y="911.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.10%)</title><rect x="98.4342%" y="885" width="0.1044%" height="15" fill="rgb(228,39,7)"/><text x="98.6842%" y="895.50"></text></g><g><title>dl_main (1 samples, 0.10%)</title><rect x="98.4342%" y="869" width="0.1044%" height="15" fill="rgb(227,79,8)"/><text x="98.6842%" y="879.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.10%)</title><rect x="98.4342%" y="853" width="0.1044%" height="15" fill="rgb(236,58,11)"/><text x="98.6842%" y="863.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.10%)</title><rect x="98.4342%" y="837" width="0.1044%" height="15" fill="rgb(249,63,35)"/><text x="98.6842%" y="847.50"></text></g><g><title>openaux (1 samples, 0.10%)</title><rect x="98.4342%" y="821" width="0.1044%" height="15" fill="rgb(252,114,16)"/><text x="98.6842%" y="831.50"></text></g><g><title>_dl_map_object (1 samples, 0.10%)</title><rect x="98.4342%" y="805" width="0.1044%" height="15" fill="rgb(254,151,24)"/><text x="98.6842%" y="815.50"></text></g><g><title>_dl_map_object_from_fd (1 samples, 0.10%)</title><rect x="98.4342%" y="789" width="0.1044%" height="15" fill="rgb(253,54,39)"/><text x="98.6842%" y="799.50"></text></g><g><title>__GI___fxstat (1 samples, 0.10%)</title><rect x="98.4342%" y="773" width="0.1044%" height="15" fill="rgb(243,25,45)"/><text x="98.6842%" y="783.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.10%)</title><rect x="98.4342%" y="757" width="0.1044%" height="15" fill="rgb(234,134,9)"/><text x="98.6842%" y="767.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.10%)</title><rect x="98.4342%" y="741" width="0.1044%" height="15" fill="rgb(227,166,31)"/><text x="98.6842%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="98.5386%" y="917" width="0.1044%" height="15" fill="rgb(245,143,41)"/><text x="98.7886%" y="927.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="98.6430%" y="917" width="0.1044%" height="15" fill="rgb(238,181,32)"/><text x="98.8930%" y="927.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.10%)</title><rect x="98.8518%" y="805" width="0.1044%" height="15" fill="rgb(224,113,18)"/><text x="99.1018%" y="815.50"></text></g><g><title>release_pages (1 samples, 0.10%)</title><rect x="98.8518%" y="789" width="0.1044%" height="15" fill="rgb(240,229,28)"/><text x="99.1018%" y="799.50"></text></g><g><title>free_unref_page_list (1 samples, 0.10%)</title><rect x="98.8518%" y="773" width="0.1044%" height="15" fill="rgb(250,185,3)"/><text x="99.1018%" y="783.50"></text></g><g><title>free_pcppages_bulk (1 samples, 0.10%)</title><rect x="98.8518%" y="757" width="0.1044%" height="15" fill="rgb(212,59,25)"/><text x="99.1018%" y="767.50"></text></g><g><title>__free_one_page (1 samples, 0.10%)</title><rect x="98.8518%" y="741" width="0.1044%" height="15" fill="rgb(221,87,20)"/><text x="99.1018%" y="751.50"></text></g><g><title>[vmlinux] (3 samples, 0.31%)</title><rect x="98.8518%" y="885" width="0.3132%" height="15" fill="rgb(213,74,28)"/><text x="99.1018%" y="895.50"></text></g><g><title>do_group_exit (3 samples, 0.31%)</title><rect x="98.8518%" y="869" width="0.3132%" height="15" fill="rgb(224,132,34)"/><text x="99.1018%" y="879.50"></text></g><g><title>do_exit (3 samples, 0.31%)</title><rect x="98.8518%" y="853" width="0.3132%" height="15" fill="rgb(222,101,24)"/><text x="99.1018%" y="863.50"></text></g><g><title>mmput (3 samples, 0.31%)</title><rect x="98.8518%" y="837" width="0.3132%" height="15" fill="rgb(254,142,4)"/><text x="99.1018%" y="847.50"></text></g><g><title>exit_mmap (3 samples, 0.31%)</title><rect x="98.8518%" y="821" width="0.3132%" height="15" fill="rgb(230,229,49)"/><text x="99.1018%" y="831.50"></text></g><g><title>unmap_vmas (2 samples, 0.21%)</title><rect x="98.9562%" y="805" width="0.2088%" height="15" fill="rgb(238,70,47)"/><text x="99.2062%" y="815.50"></text></g><g><title>unmap_page_range (2 samples, 0.21%)</title><rect x="98.9562%" y="789" width="0.2088%" height="15" fill="rgb(231,160,17)"/><text x="99.2062%" y="799.50"></text></g><g><title>entry_SYSCALL_64 (5 samples, 0.52%)</title><rect x="98.7474%" y="917" width="0.5219%" height="15" fill="rgb(218,68,53)"/><text x="98.9974%" y="927.50"></text></g><g><title>do_syscall_64 (4 samples, 0.42%)</title><rect x="98.8518%" y="901" width="0.4175%" height="15" fill="rgb(236,111,10)"/><text x="99.1018%" y="911.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.10%)</title><rect x="99.1649%" y="885" width="0.1044%" height="15" fill="rgb(224,34,41)"/><text x="99.4149%" y="895.50"></text></g><g><title>do_execve (1 samples, 0.10%)</title><rect x="99.1649%" y="869" width="0.1044%" height="15" fill="rgb(241,118,19)"/><text x="99.4149%" y="879.50"></text></g><g><title>__do_execve_file (1 samples, 0.10%)</title><rect x="99.1649%" y="853" width="0.1044%" height="15" fill="rgb(238,129,25)"/><text x="99.4149%" y="863.50"></text></g><g><title>search_binary_handler.part.0 (1 samples, 0.10%)</title><rect x="99.1649%" y="837" width="0.1044%" height="15" fill="rgb(238,22,31)"/><text x="99.4149%" y="847.50"></text></g><g><title>load_elf_binary (1 samples, 0.10%)</title><rect x="99.1649%" y="821" width="0.1044%" height="15" fill="rgb(222,174,48)"/><text x="99.4149%" y="831.50"></text></g><g><title>elf_map (1 samples, 0.10%)</title><rect x="99.1649%" y="805" width="0.1044%" height="15" fill="rgb(206,152,40)"/><text x="99.4149%" y="815.50"></text></g><g><title>vm_mmap_pgoff (1 samples, 0.10%)</title><rect x="99.1649%" y="789" width="0.1044%" height="15" fill="rgb(218,99,54)"/><text x="99.4149%" y="799.50"></text></g><g><title>do_mmap (1 samples, 0.10%)</title><rect x="99.1649%" y="773" width="0.1044%" height="15" fill="rgb(220,174,26)"/><text x="99.4149%" y="783.50"></text></g><g><title>mmap_region (1 samples, 0.10%)</title><rect x="99.1649%" y="757" width="0.1044%" height="15" fill="rgb(245,116,9)"/><text x="99.4149%" y="767.50"></text></g><g><title>perf_event_mmap (1 samples, 0.10%)</title><rect x="99.1649%" y="741" width="0.1044%" height="15" fill="rgb(209,72,35)"/><text x="99.4149%" y="751.50"></text></g><g><title>d_path (1 samples, 0.10%)</title><rect x="99.1649%" y="725" width="0.1044%" height="15" fill="rgb(226,126,21)"/><text x="99.4149%" y="735.50"></text></g><g><title>lobsters (952 samples, 99.37%)</title><rect x="0.0000%" y="933" width="99.3737%" height="15" fill="rgb(227,192,1)"/><text x="0.2500%" y="943.50">lobsters</text></g><g><title>page_fault (1 samples, 0.10%)</title><rect x="99.2693%" y="917" width="0.1044%" height="15" fill="rgb(237,180,29)"/><text x="99.5193%" y="927.50"></text></g><g><title>all (958 samples, 100%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(230,197,35)"/><text x="0.2500%" y="959.50"></text></g><g><title>perf (6 samples, 0.63%)</title><rect x="99.3737%" y="933" width="0.6263%" height="15" fill="rgb(246,193,31)"/><text x="99.6237%" y="943.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.63%)</title><rect x="99.3737%" y="917" width="0.6263%" height="15" fill="rgb(241,36,4)"/><text x="99.6237%" y="927.50"></text></g><g><title>do_syscall_64 (6 samples, 0.63%)</title><rect x="99.3737%" y="901" width="0.6263%" height="15" fill="rgb(241,130,17)"/><text x="99.6237%" y="911.50"></text></g><g><title>__x64_sys_execve (6 samples, 0.63%)</title><rect x="99.3737%" y="885" width="0.6263%" height="15" fill="rgb(206,137,32)"/><text x="99.6237%" y="895.50"></text></g><g><title>do_execve (6 samples, 0.63%)</title><rect x="99.3737%" y="869" width="0.6263%" height="15" fill="rgb(237,228,51)"/><text x="99.6237%" y="879.50"></text></g><g><title>__do_execve_file (6 samples, 0.63%)</title><rect x="99.3737%" y="853" width="0.6263%" height="15" fill="rgb(243,6,42)"/><text x="99.6237%" y="863.50"></text></g><g><title>search_binary_handler.part.0 (6 samples, 0.63%)</title><rect x="99.3737%" y="837" width="0.6263%" height="15" fill="rgb(251,74,28)"/><text x="99.6237%" y="847.50"></text></g><g><title>load_elf_binary (6 samples, 0.63%)</title><rect x="99.3737%" y="821" width="0.6263%" height="15" fill="rgb(218,20,49)"/><text x="99.6237%" y="831.50"></text></g><g><title>setup_new_exec (6 samples, 0.63%)</title><rect x="99.3737%" y="805" width="0.6263%" height="15" fill="rgb(238,28,14)"/><text x="99.6237%" y="815.50"></text></g><g><title>perf_event_exec (6 samples, 0.63%)</title><rect x="99.3737%" y="789" width="0.6263%" height="15" fill="rgb(229,40,46)"/><text x="99.6237%" y="799.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.52%)</title><rect x="99.4781%" y="773" width="0.5219%" height="15" fill="rgb(244,195,20)"/><text x="99.7281%" y="783.50"></text></g><g><title>native_write_msr (5 samples, 0.52%)</title><rect x="99.4781%" y="757" width="0.5219%" height="15" fill="rgb(253,56,35)"/><text x="99.7281%" y="767.50"></text></g></svg></svg>