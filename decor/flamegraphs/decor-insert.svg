<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="998" onload="init(evt)" viewBox="0 0 1200 998" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="998" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="981.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="981.00"> </text><svg id="frames" x="10" width="1180"><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.23%)</title><rect x="0.2292%" y="901" width="0.2292%" height="15" fill="rgb(227,0,7)"/><text x="0.4792%" y="911.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (2 samples, 0.15%)</title><rect x="1.2223%" y="901" width="0.1528%" height="15" fill="rgb(217,0,24)"/><text x="1.4723%" y="911.50"></text></g><g><title>std::sys_common::net::TcpStream::read (2 samples, 0.15%)</title><rect x="1.2223%" y="885" width="0.1528%" height="15" fill="rgb(221,193,54)"/><text x="1.4723%" y="895.50"></text></g><g><title>std::sys::unix::net::Socket::read (2 samples, 0.15%)</title><rect x="1.2223%" y="869" width="0.1528%" height="15" fill="rgb(248,212,6)"/><text x="1.4723%" y="879.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (2 samples, 0.15%)</title><rect x="1.2223%" y="853" width="0.1528%" height="15" fill="rgb(208,68,35)"/><text x="1.4723%" y="863.50"></text></g><g><title>__libc_recv (2 samples, 0.15%)</title><rect x="1.2223%" y="837" width="0.1528%" height="15" fill="rgb(232,128,0)"/><text x="1.4723%" y="847.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.15%)</title><rect x="1.2223%" y="821" width="0.1528%" height="15" fill="rgb(207,160,47)"/><text x="1.4723%" y="831.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.38%)</title><rect x="1.5279%" y="901" width="0.3820%" height="15" fill="rgb(228,23,34)"/><text x="1.7779%" y="911.50"></text></g><g><title>__libc_send (2 samples, 0.15%)</title><rect x="1.9862%" y="901" width="0.1528%" height="15" fill="rgb(218,30,26)"/><text x="2.2362%" y="911.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.15%)</title><rect x="1.9862%" y="885" width="0.1528%" height="15" fill="rgb(220,122,19)"/><text x="2.2362%" y="895.50"></text></g><g><title>__rdl_realloc (2 samples, 0.15%)</title><rect x="2.2154%" y="901" width="0.1528%" height="15" fill="rgb(250,228,42)"/><text x="2.4654%" y="911.50"></text></g><g><title>_int_free (2 samples, 0.15%)</title><rect x="2.3682%" y="901" width="0.1528%" height="15" fill="rgb(240,193,28)"/><text x="2.6182%" y="911.50"></text></g><g><title>_int_malloc (2 samples, 0.15%)</title><rect x="2.5210%" y="901" width="0.1528%" height="15" fill="rgb(216,20,37)"/><text x="2.7710%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.23%)</title><rect x="2.6738%" y="901" width="0.2292%" height="15" fill="rgb(206,188,39)"/><text x="2.9238%" y="911.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (2 samples, 0.15%)</title><rect x="2.9030%" y="901" width="0.1528%" height="15" fill="rgb(217,207,13)"/><text x="3.1530%" y="911.50"></text></g><g><title>core::fmt::write (3 samples, 0.23%)</title><rect x="3.2086%" y="901" width="0.2292%" height="15" fill="rgb(231,73,38)"/><text x="3.4586%" y="911.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.15%)</title><rect x="3.4377%" y="901" width="0.1528%" height="15" fill="rgb(225,20,46)"/><text x="3.6877%" y="911.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (2 samples, 0.15%)</title><rect x="4.2017%" y="901" width="0.1528%" height="15" fill="rgb(210,31,41)"/><text x="4.4517%" y="911.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (3 samples, 0.23%)</title><rect x="4.6600%" y="901" width="0.2292%" height="15" fill="rgb(221,200,47)"/><text x="4.9100%" y="911.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (2 samples, 0.15%)</title><rect x="5.1184%" y="901" width="0.1528%" height="15" fill="rgb(226,26,5)"/><text x="5.3684%" y="911.50"></text></g><g><title>[anon] (67 samples, 5.12%)</title><rect x="0.2292%" y="917" width="5.1184%" height="15" fill="rgb(249,33,26)"/><text x="0.4792%" y="927.50">[anon]</text></g><g><title>[lobsters] (4 samples, 0.31%)</title><rect x="5.3476%" y="917" width="0.3056%" height="15" fill="rgb(235,183,28)"/><text x="5.5976%" y="927.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="5.6532%" y="901" width="0.1528%" height="15" fill="rgb(221,5,38)"/><text x="5.9032%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.15%)</title><rect x="6.0351%" y="869" width="0.1528%" height="15" fill="rgb(247,18,42)"/><text x="6.2851%" y="879.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (12 samples, 0.92%)</title><rect x="6.3407%" y="805" width="0.9167%" height="15" fill="rgb(241,131,45)"/><text x="6.5907%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (8 samples, 0.61%)</title><rect x="6.6463%" y="789" width="0.6112%" height="15" fill="rgb(249,31,29)"/><text x="6.8963%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (8 samples, 0.61%)</title><rect x="6.6463%" y="773" width="0.6112%" height="15" fill="rgb(225,111,53)"/><text x="6.8963%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (8 samples, 0.61%)</title><rect x="6.6463%" y="757" width="0.6112%" height="15" fill="rgb(238,160,17)"/><text x="6.8963%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (8 samples, 0.61%)</title><rect x="6.6463%" y="741" width="0.6112%" height="15" fill="rgb(214,148,48)"/><text x="6.8963%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (8 samples, 0.61%)</title><rect x="6.6463%" y="725" width="0.6112%" height="15" fill="rgb(232,36,49)"/><text x="6.8963%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (8 samples, 0.61%)</title><rect x="6.6463%" y="709" width="0.6112%" height="15" fill="rgb(209,103,24)"/><text x="6.8963%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.61%)</title><rect x="6.6463%" y="693" width="0.6112%" height="15" fill="rgb(229,88,8)"/><text x="6.8963%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (8 samples, 0.61%)</title><rect x="6.6463%" y="677" width="0.6112%" height="15" fill="rgb(213,181,19)"/><text x="6.8963%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (8 samples, 0.61%)</title><rect x="6.6463%" y="661" width="0.6112%" height="15" fill="rgb(254,191,54)"/><text x="6.8963%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.61%)</title><rect x="6.6463%" y="645" width="0.6112%" height="15" fill="rgb(241,83,37)"/><text x="6.8963%" y="655.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.61%)</title><rect x="6.6463%" y="629" width="0.6112%" height="15" fill="rgb(233,36,39)"/><text x="6.8963%" y="639.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.53%)</title><rect x="6.7227%" y="613" width="0.5348%" height="15" fill="rgb(226,3,54)"/><text x="6.9727%" y="623.50"></text></g><g><title>_int_malloc (4 samples, 0.31%)</title><rect x="6.9519%" y="597" width="0.3056%" height="15" fill="rgb(245,192,40)"/><text x="7.2019%" y="607.50"></text></g><g><title>__GI___mprotect (3 samples, 0.23%)</title><rect x="7.4102%" y="757" width="0.2292%" height="15" fill="rgb(238,167,29)"/><text x="7.6602%" y="767.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.23%)</title><rect x="7.4102%" y="741" width="0.2292%" height="15" fill="rgb(232,182,51)"/><text x="7.6602%" y="751.50"></text></g><g><title>do_syscall_64 (3 samples, 0.23%)</title><rect x="7.4102%" y="725" width="0.2292%" height="15" fill="rgb(231,60,39)"/><text x="7.6602%" y="735.50"></text></g><g><title>__x64_sys_mprotect (3 samples, 0.23%)</title><rect x="7.4102%" y="709" width="0.2292%" height="15" fill="rgb(208,69,12)"/><text x="7.6602%" y="719.50"></text></g><g><title>do_mprotect_pkey (3 samples, 0.23%)</title><rect x="7.4102%" y="693" width="0.2292%" height="15" fill="rgb(235,93,37)"/><text x="7.6602%" y="703.50"></text></g><g><title>mprotect_fixup (3 samples, 0.23%)</title><rect x="7.4102%" y="677" width="0.2292%" height="15" fill="rgb(213,116,39)"/><text x="7.6602%" y="687.50"></text></g><g><title>perf_event_mmap (3 samples, 0.23%)</title><rect x="7.4102%" y="661" width="0.2292%" height="15" fill="rgb(222,207,29)"/><text x="7.6602%" y="671.50"></text></g><g><title>perf_iterate_sb (3 samples, 0.23%)</title><rect x="7.4102%" y="645" width="0.2292%" height="15" fill="rgb(206,96,30)"/><text x="7.6602%" y="655.50"></text></g><g><title>perf_iterate_ctx (3 samples, 0.23%)</title><rect x="7.4102%" y="629" width="0.2292%" height="15" fill="rgb(218,138,4)"/><text x="7.6602%" y="639.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.46%)</title><rect x="7.2574%" y="805" width="0.4584%" height="15" fill="rgb(250,191,14)"/><text x="7.5074%" y="815.50"></text></g><g><title>_int_malloc (4 samples, 0.31%)</title><rect x="7.4102%" y="789" width="0.3056%" height="15" fill="rgb(239,60,40)"/><text x="7.6602%" y="799.50"></text></g><g><title>sysmalloc (4 samples, 0.31%)</title><rect x="7.4102%" y="773" width="0.3056%" height="15" fill="rgb(206,27,48)"/><text x="7.6602%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (21 samples, 1.60%)</title><rect x="6.1879%" y="853" width="1.6043%" height="15" fill="rgb(225,35,8)"/><text x="6.4379%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (21 samples, 1.60%)</title><rect x="6.1879%" y="837" width="1.6043%" height="15" fill="rgb(250,213,24)"/><text x="6.4379%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (20 samples, 1.53%)</title><rect x="6.2643%" y="821" width="1.5279%" height="15" fill="rgb(247,123,22)"/><text x="6.5143%" y="831.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (23 samples, 1.76%)</title><rect x="6.1879%" y="869" width="1.7571%" height="15" fill="rgb(231,138,38)"/><text x="6.4379%" y="879.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.15%)</title><rect x="7.7922%" y="853" width="0.1528%" height="15" fill="rgb(231,145,46)"/><text x="8.0422%" y="863.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.15%)</title><rect x="7.9450%" y="869" width="0.1528%" height="15" fill="rgb(251,118,11)"/><text x="8.1950%" y="879.50"></text></g><g><title>_int_malloc (2 samples, 0.15%)</title><rect x="7.9450%" y="853" width="0.1528%" height="15" fill="rgb(217,147,25)"/><text x="8.1950%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.31%)</title><rect x="8.1742%" y="869" width="0.3056%" height="15" fill="rgb(247,81,37)"/><text x="8.4242%" y="879.50"></text></g><g><title>__GI___libc_realloc (4 samples, 0.31%)</title><rect x="8.1742%" y="853" width="0.3056%" height="15" fill="rgb(209,12,38)"/><text x="8.4242%" y="863.50"></text></g><g><title>_int_realloc (4 samples, 0.31%)</title><rect x="8.1742%" y="837" width="0.3056%" height="15" fill="rgb(227,1,9)"/><text x="8.4242%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.23%)</title><rect x="8.4798%" y="853" width="0.2292%" height="15" fill="rgb(248,47,43)"/><text x="8.7298%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.23%)</title><rect x="8.4798%" y="837" width="0.2292%" height="15" fill="rgb(221,10,30)"/><text x="8.7298%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.15%)</title><rect x="8.5561%" y="821" width="0.1528%" height="15" fill="rgb(210,229,1)"/><text x="8.8061%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.15%)</title><rect x="8.5561%" y="805" width="0.1528%" height="15" fill="rgb(222,148,37)"/><text x="8.8061%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.15%)</title><rect x="8.5561%" y="789" width="0.1528%" height="15" fill="rgb(234,67,33)"/><text x="8.8061%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.15%)</title><rect x="8.5561%" y="773" width="0.1528%" height="15" fill="rgb(247,98,35)"/><text x="8.8061%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.15%)</title><rect x="8.5561%" y="757" width="0.1528%" height="15" fill="rgb(247,138,52)"/><text x="8.8061%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.15%)</title><rect x="8.5561%" y="741" width="0.1528%" height="15" fill="rgb(213,79,30)"/><text x="8.8061%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.15%)</title><rect x="8.5561%" y="725" width="0.1528%" height="15" fill="rgb(246,177,23)"/><text x="8.8061%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.15%)</title><rect x="8.5561%" y="709" width="0.1528%" height="15" fill="rgb(230,62,27)"/><text x="8.8061%" y="719.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.15%)</title><rect x="8.5561%" y="693" width="0.1528%" height="15" fill="rgb(216,154,8)"/><text x="8.8061%" y="703.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.15%)</title><rect x="8.5561%" y="677" width="0.1528%" height="15" fill="rgb(244,35,45)"/><text x="8.8061%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (9 samples, 0.69%)</title><rect x="8.7089%" y="837" width="0.6875%" height="15" fill="rgb(251,115,12)"/><text x="8.9589%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (7 samples, 0.53%)</title><rect x="8.8617%" y="821" width="0.5348%" height="15" fill="rgb(240,54,50)"/><text x="9.1117%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (7 samples, 0.53%)</title><rect x="8.8617%" y="805" width="0.5348%" height="15" fill="rgb(233,84,52)"/><text x="9.1117%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (7 samples, 0.53%)</title><rect x="8.8617%" y="789" width="0.5348%" height="15" fill="rgb(207,117,47)"/><text x="9.1117%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.46%)</title><rect x="8.9381%" y="773" width="0.4584%" height="15" fill="rgb(249,43,39)"/><text x="9.1881%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (6 samples, 0.46%)</title><rect x="8.9381%" y="757" width="0.4584%" height="15" fill="rgb(209,38,44)"/><text x="9.1881%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (6 samples, 0.46%)</title><rect x="8.9381%" y="741" width="0.4584%" height="15" fill="rgb(236,212,23)"/><text x="9.1881%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.46%)</title><rect x="8.9381%" y="725" width="0.4584%" height="15" fill="rgb(242,79,21)"/><text x="9.1881%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.46%)</title><rect x="8.9381%" y="709" width="0.4584%" height="15" fill="rgb(211,96,35)"/><text x="9.1881%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (6 samples, 0.46%)</title><rect x="8.9381%" y="693" width="0.4584%" height="15" fill="rgb(253,215,40)"/><text x="9.1881%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.46%)</title><rect x="8.9381%" y="677" width="0.4584%" height="15" fill="rgb(211,81,21)"/><text x="9.1881%" y="687.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.46%)</title><rect x="8.9381%" y="661" width="0.4584%" height="15" fill="rgb(208,190,38)"/><text x="9.1881%" y="671.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.46%)</title><rect x="8.9381%" y="645" width="0.4584%" height="15" fill="rgb(235,213,38)"/><text x="9.1881%" y="655.50"></text></g><g><title>_int_malloc (4 samples, 0.31%)</title><rect x="9.0909%" y="629" width="0.3056%" height="15" fill="rgb(237,122,38)"/><text x="9.3409%" y="639.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.15%)</title><rect x="9.3965%" y="837" width="0.1528%" height="15" fill="rgb(244,218,35)"/><text x="9.6465%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (12 samples, 0.92%)</title><rect x="8.7089%" y="853" width="0.9167%" height="15" fill="rgb(240,68,47)"/><text x="8.9589%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (16 samples, 1.22%)</title><rect x="8.4798%" y="869" width="1.2223%" height="15" fill="rgb(210,16,53)"/><text x="8.7298%" y="879.50"></text></g><g><title>alloc::string::String::push (2 samples, 0.15%)</title><rect x="9.8549%" y="789" width="0.1528%" height="15" fill="rgb(235,124,12)"/><text x="10.1049%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (2 samples, 0.15%)</title><rect x="9.8549%" y="773" width="0.1528%" height="15" fill="rgb(224,169,11)"/><text x="10.1049%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (13 samples, 0.99%)</title><rect x="9.7021%" y="837" width="0.9931%" height="15" fill="rgb(250,166,2)"/><text x="9.9521%" y="847.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (13 samples, 0.99%)</title><rect x="9.7021%" y="821" width="0.9931%" height="15" fill="rgb(242,216,29)"/><text x="9.9521%" y="831.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (12 samples, 0.92%)</title><rect x="9.7785%" y="805" width="0.9167%" height="15" fill="rgb(230,116,27)"/><text x="10.0285%" y="815.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (9 samples, 0.69%)</title><rect x="10.0076%" y="789" width="0.6875%" height="15" fill="rgb(228,99,48)"/><text x="10.2576%" y="799.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (9 samples, 0.69%)</title><rect x="10.0076%" y="773" width="0.6875%" height="15" fill="rgb(253,11,6)"/><text x="10.2576%" y="783.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (9 samples, 0.69%)</title><rect x="10.0076%" y="757" width="0.6875%" height="15" fill="rgb(247,143,39)"/><text x="10.2576%" y="767.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (3 samples, 0.23%)</title><rect x="10.4660%" y="741" width="0.2292%" height="15" fill="rgb(236,97,10)"/><text x="10.7160%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (16 samples, 1.22%)</title><rect x="9.7021%" y="853" width="1.2223%" height="15" fill="rgb(233,208,19)"/><text x="9.9521%" y="863.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (3 samples, 0.23%)</title><rect x="10.6952%" y="837" width="0.2292%" height="15" fill="rgb(216,164,2)"/><text x="10.9452%" y="847.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (8 samples, 0.61%)</title><rect x="11.0772%" y="837" width="0.6112%" height="15" fill="rgb(220,129,5)"/><text x="11.3272%" y="847.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (8 samples, 0.61%)</title><rect x="11.0772%" y="821" width="0.6112%" height="15" fill="rgb(242,17,10)"/><text x="11.3272%" y="831.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (7 samples, 0.53%)</title><rect x="11.1536%" y="805" width="0.5348%" height="15" fill="rgb(242,107,0)"/><text x="11.4036%" y="815.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (6 samples, 0.46%)</title><rect x="11.2299%" y="789" width="0.4584%" height="15" fill="rgb(251,28,31)"/><text x="11.4799%" y="799.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (6 samples, 0.46%)</title><rect x="11.2299%" y="773" width="0.4584%" height="15" fill="rgb(233,223,10)"/><text x="11.4799%" y="783.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (6 samples, 0.46%)</title><rect x="11.2299%" y="757" width="0.4584%" height="15" fill="rgb(215,21,27)"/><text x="11.4799%" y="767.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (2 samples, 0.15%)</title><rect x="11.5355%" y="741" width="0.1528%" height="15" fill="rgb(232,23,21)"/><text x="11.7855%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::ObjectName as core::fmt::Display&gt;::fmt (11 samples, 0.84%)</title><rect x="10.9244%" y="853" width="0.8403%" height="15" fill="rgb(244,5,23)"/><text x="11.1744%" y="863.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.15%)</title><rect x="11.9175%" y="757" width="0.1528%" height="15" fill="rgb(226,81,46)"/><text x="12.1675%" y="767.50"></text></g><g><title>__rust_dealloc (2 samples, 0.15%)</title><rect x="12.0703%" y="757" width="0.1528%" height="15" fill="rgb(247,70,30)"/><text x="12.3203%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (6 samples, 0.46%)</title><rect x="11.8411%" y="789" width="0.4584%" height="15" fill="rgb(212,68,19)"/><text x="12.0911%" y="799.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (6 samples, 0.46%)</title><rect x="11.8411%" y="773" width="0.4584%" height="15" fill="rgb(240,187,13)"/><text x="12.0911%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (8 samples, 0.61%)</title><rect x="11.8411%" y="805" width="0.6112%" height="15" fill="rgb(223,113,26)"/><text x="12.0911%" y="815.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.15%)</title><rect x="12.2995%" y="789" width="0.1528%" height="15" fill="rgb(206,192,2)"/><text x="12.5495%" y="799.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.15%)</title><rect x="12.8342%" y="773" width="0.1528%" height="15" fill="rgb(241,108,4)"/><text x="13.0842%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (17 samples, 1.30%)</title><rect x="11.7647%" y="837" width="1.2987%" height="15" fill="rgb(247,173,49)"/><text x="12.0147%" y="847.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Values as sql_parser::ast::display::AstDisplay&gt;::fmt (16 samples, 1.22%)</title><rect x="11.8411%" y="821" width="1.2223%" height="15" fill="rgb(224,114,35)"/><text x="12.0911%" y="831.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (8 samples, 0.61%)</title><rect x="12.4523%" y="805" width="0.6112%" height="15" fill="rgb(245,159,27)"/><text x="12.7023%" y="815.50"></text></g><g><title>core::fmt::write (4 samples, 0.31%)</title><rect x="12.7578%" y="789" width="0.3056%" height="15" fill="rgb(245,172,44)"/><text x="13.0078%" y="799.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.15%)</title><rect x="13.2162%" y="773" width="0.1528%" height="15" fill="rgb(236,23,11)"/><text x="13.4662%" y="783.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (11 samples, 0.84%)</title><rect x="13.2162%" y="789" width="0.8403%" height="15" fill="rgb(205,117,38)"/><text x="13.4662%" y="799.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (8 samples, 0.61%)</title><rect x="13.4454%" y="773" width="0.6112%" height="15" fill="rgb(237,72,25)"/><text x="13.6954%" y="783.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (7 samples, 0.53%)</title><rect x="13.5218%" y="757" width="0.5348%" height="15" fill="rgb(244,70,9)"/><text x="13.7718%" y="767.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (7 samples, 0.53%)</title><rect x="13.5218%" y="741" width="0.5348%" height="15" fill="rgb(217,125,39)"/><text x="13.7718%" y="751.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (2 samples, 0.15%)</title><rect x="13.9037%" y="725" width="0.1528%" height="15" fill="rgb(235,36,10)"/><text x="14.1537%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (16 samples, 1.22%)</title><rect x="13.0634%" y="821" width="1.2223%" height="15" fill="rgb(251,123,47)"/><text x="13.3134%" y="831.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (16 samples, 1.22%)</title><rect x="13.0634%" y="805" width="1.2223%" height="15" fill="rgb(221,13,13)"/><text x="13.3134%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (3 samples, 0.23%)</title><rect x="14.0565%" y="789" width="0.2292%" height="15" fill="rgb(238,131,9)"/><text x="14.3065%" y="799.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.15%)</title><rect x="14.1329%" y="773" width="0.1528%" height="15" fill="rgb(211,50,8)"/><text x="14.3829%" y="783.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.15%)</title><rect x="14.1329%" y="757" width="0.1528%" height="15" fill="rgb(245,182,24)"/><text x="14.3829%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.31%)</title><rect x="14.3621%" y="805" width="0.3056%" height="15" fill="rgb(242,14,37)"/><text x="14.6121%" y="815.50"></text></g><g><title>__GI___libc_realloc (4 samples, 0.31%)</title><rect x="14.3621%" y="789" width="0.3056%" height="15" fill="rgb(246,228,12)"/><text x="14.6121%" y="799.50"></text></g><g><title>_int_realloc (4 samples, 0.31%)</title><rect x="14.3621%" y="773" width="0.3056%" height="15" fill="rgb(213,55,15)"/><text x="14.6121%" y="783.50"></text></g><g><title>_int_free (3 samples, 0.23%)</title><rect x="14.4385%" y="757" width="0.2292%" height="15" fill="rgb(209,9,3)"/><text x="14.6885%" y="767.50"></text></g><g><title>malloc_consolidate (3 samples, 0.23%)</title><rect x="14.4385%" y="741" width="0.2292%" height="15" fill="rgb(230,59,30)"/><text x="14.6885%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::InsertStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (22 samples, 1.68%)</title><rect x="13.0634%" y="837" width="1.6807%" height="15" fill="rgb(209,121,21)"/><text x="13.3134%" y="847.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (6 samples, 0.46%)</title><rect x="14.2857%" y="821" width="0.4584%" height="15" fill="rgb(220,109,13)"/><text x="14.5357%" y="831.50"></text></g><g><title>core::fmt::write (67 samples, 5.12%)</title><rect x="9.7021%" y="869" width="5.1184%" height="15" fill="rgb(232,18,1)"/><text x="9.9521%" y="879.50">core::..</text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (40 samples, 3.06%)</title><rect x="11.7647%" y="853" width="3.0558%" height="15" fill="rgb(215,41,42)"/><text x="12.0147%" y="863.50">&lt;sq..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.23%)</title><rect x="14.8205%" y="853" width="0.2292%" height="15" fill="rgb(224,123,36)"/><text x="15.0705%" y="863.50"></text></g><g><title>_int_free (3 samples, 0.23%)</title><rect x="14.8205%" y="837" width="0.2292%" height="15" fill="rgb(240,125,3)"/><text x="15.0705%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.23%)</title><rect x="15.0497%" y="837" width="0.2292%" height="15" fill="rgb(205,98,50)"/><text x="15.2997%" y="847.50"></text></g><g><title>_int_free (2 samples, 0.15%)</title><rect x="15.1261%" y="821" width="0.1528%" height="15" fill="rgb(205,185,37)"/><text x="15.3761%" y="831.50"></text></g><g><title>core::ptr::drop_in_place (7 samples, 0.53%)</title><rect x="14.8205%" y="869" width="0.5348%" height="15" fill="rgb(238,207,15)"/><text x="15.0705%" y="879.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.31%)</title><rect x="15.0497%" y="853" width="0.3056%" height="15" fill="rgb(213,199,42)"/><text x="15.2997%" y="863.50"></text></g><g><title>decor::helpers::get_user_cols_of_datatable (3 samples, 0.23%)</title><rect x="15.3552%" y="869" width="0.2292%" height="15" fill="rgb(235,201,11)"/><text x="15.6052%" y="879.50"></text></g><g><title>core::fmt::write (2 samples, 0.15%)</title><rect x="15.4316%" y="853" width="0.1528%" height="15" fill="rgb(207,46,11)"/><text x="15.6816%" y="863.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::ObjectName as core::fmt::Display&gt;::fmt (2 samples, 0.15%)</title><rect x="15.4316%" y="837" width="0.1528%" height="15" fill="rgb(241,35,35)"/><text x="15.6816%" y="847.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.15%)</title><rect x="15.4316%" y="821" width="0.1528%" height="15" fill="rgb(243,32,47)"/><text x="15.6816%" y="831.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (2 samples, 0.15%)</title><rect x="15.4316%" y="805" width="0.1528%" height="15" fill="rgb(247,202,23)"/><text x="15.6816%" y="815.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.15%)</title><rect x="15.6608%" y="837" width="0.1528%" height="15" fill="rgb(219,102,11)"/><text x="15.9108%" y="847.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (2 samples, 0.15%)</title><rect x="15.6608%" y="821" width="0.1528%" height="15" fill="rgb(243,110,44)"/><text x="15.9108%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.46%)</title><rect x="15.5844%" y="853" width="0.4584%" height="15" fill="rgb(222,74,54)"/><text x="15.8344%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.15%)</title><rect x="15.8900%" y="837" width="0.1528%" height="15" fill="rgb(216,99,12)"/><text x="16.1400%" y="847.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.15%)</title><rect x="15.8900%" y="821" width="0.1528%" height="15" fill="rgb(226,22,26)"/><text x="16.1400%" y="831.50"></text></g><g><title>decor::helpers::str_ident_match (11 samples, 0.84%)</title><rect x="15.5844%" y="869" width="0.8403%" height="15" fill="rgb(217,163,10)"/><text x="15.8344%" y="879.50"></text></g><g><title>core::str::pattern::StrSearcher::new (4 samples, 0.31%)</title><rect x="16.1192%" y="853" width="0.3056%" height="15" fill="rgb(213,25,53)"/><text x="16.3692%" y="863.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (3 samples, 0.23%)</title><rect x="16.1956%" y="837" width="0.2292%" height="15" fill="rgb(252,105,26)"/><text x="16.4456%" y="847.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.15%)</title><rect x="16.2720%" y="821" width="0.1528%" height="15" fill="rgb(220,39,43)"/><text x="16.5220%" y="831.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.15%)</title><rect x="16.2720%" y="805" width="0.1528%" height="15" fill="rgb(229,68,48)"/><text x="16.5220%" y="815.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.15%)</title><rect x="16.5011%" y="789" width="0.1528%" height="15" fill="rgb(252,8,32)"/><text x="16.7511%" y="799.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.15%)</title><rect x="16.5011%" y="773" width="0.1528%" height="15" fill="rgb(223,20,43)"/><text x="16.7511%" y="783.50"></text></g><g><title>remove_wait_queue (2 samples, 0.15%)</title><rect x="17.2651%" y="565" width="0.1528%" height="15" fill="rgb(229,81,49)"/><text x="17.5151%" y="575.50"></text></g><g><title>_raw_spin_lock_irqsave (2 samples, 0.15%)</title><rect x="17.2651%" y="549" width="0.1528%" height="15" fill="rgb(236,28,36)"/><text x="17.5151%" y="559.50"></text></g><g><title>update_cfs_group (2 samples, 0.15%)</title><rect x="17.6471%" y="469" width="0.1528%" height="15" fill="rgb(249,185,26)"/><text x="17.8971%" y="479.50"></text></g><g><title>dequeue_task_fair (7 samples, 0.53%)</title><rect x="17.4943%" y="501" width="0.5348%" height="15" fill="rgb(249,174,33)"/><text x="17.7443%" y="511.50"></text></g><g><title>dequeue_entity (6 samples, 0.46%)</title><rect x="17.5707%" y="485" width="0.4584%" height="15" fill="rgb(233,201,37)"/><text x="17.8207%" y="495.50"></text></g><g><title>update_curr (3 samples, 0.23%)</title><rect x="17.7998%" y="469" width="0.2292%" height="15" fill="rgb(221,78,26)"/><text x="18.0498%" y="479.50"></text></g><g><title>cpuacct_charge (2 samples, 0.15%)</title><rect x="17.8762%" y="453" width="0.1528%" height="15" fill="rgb(250,127,30)"/><text x="18.1262%" y="463.50"></text></g><g><title>pick_next_task_fair (3 samples, 0.23%)</title><rect x="18.0290%" y="501" width="0.2292%" height="15" fill="rgb(230,49,44)"/><text x="18.2790%" y="511.50"></text></g><g><title>newidle_balance (2 samples, 0.15%)</title><rect x="18.1054%" y="485" width="0.1528%" height="15" fill="rgb(229,67,23)"/><text x="18.3554%" y="495.50"></text></g><g><title>sk_wait_data (20 samples, 1.53%)</title><rect x="17.1123%" y="581" width="1.5279%" height="15" fill="rgb(249,83,47)"/><text x="17.3623%" y="591.50"></text></g><g><title>wait_woken (16 samples, 1.22%)</title><rect x="17.4179%" y="565" width="1.2223%" height="15" fill="rgb(215,43,3)"/><text x="17.6679%" y="575.50"></text></g><g><title>schedule_timeout (16 samples, 1.22%)</title><rect x="17.4179%" y="549" width="1.2223%" height="15" fill="rgb(238,154,13)"/><text x="17.6679%" y="559.50"></text></g><g><title>schedule (16 samples, 1.22%)</title><rect x="17.4179%" y="533" width="1.2223%" height="15" fill="rgb(219,56,2)"/><text x="17.6679%" y="543.50"></text></g><g><title>__schedule (16 samples, 1.22%)</title><rect x="17.4179%" y="517" width="1.2223%" height="15" fill="rgb(233,0,4)"/><text x="17.6679%" y="527.50"></text></g><g><title>update_rq_clock (2 samples, 0.15%)</title><rect x="18.4874%" y="501" width="0.1528%" height="15" fill="rgb(235,30,7)"/><text x="18.7374%" y="511.50"></text></g><g><title>inet_recvmsg (22 samples, 1.68%)</title><rect x="17.0359%" y="613" width="1.6807%" height="15" fill="rgb(250,79,13)"/><text x="17.2859%" y="623.50"></text></g><g><title>tcp_recvmsg (22 samples, 1.68%)</title><rect x="17.0359%" y="597" width="1.6807%" height="15" fill="rgb(211,146,34)"/><text x="17.2859%" y="607.50"></text></g><g><title>do_syscall_64 (26 samples, 1.99%)</title><rect x="16.9595%" y="661" width="1.9862%" height="15" fill="rgb(228,22,38)"/><text x="17.2095%" y="671.50">d..</text></g><g><title>__x64_sys_recvfrom (25 samples, 1.91%)</title><rect x="17.0359%" y="645" width="1.9099%" height="15" fill="rgb(235,168,5)"/><text x="17.2859%" y="655.50">_..</text></g><g><title>__sys_recvfrom (25 samples, 1.91%)</title><rect x="17.0359%" y="629" width="1.9099%" height="15" fill="rgb(221,155,16)"/><text x="17.2859%" y="639.50">_..</text></g><g><title>sockfd_lookup_light (3 samples, 0.23%)</title><rect x="18.7166%" y="613" width="0.2292%" height="15" fill="rgb(215,215,53)"/><text x="18.9666%" y="623.50"></text></g><g><title>__fget_light (3 samples, 0.23%)</title><rect x="18.7166%" y="597" width="0.2292%" height="15" fill="rgb(223,4,10)"/><text x="18.9666%" y="607.50"></text></g><g><title>__fget_files (2 samples, 0.15%)</title><rect x="18.7930%" y="581" width="0.1528%" height="15" fill="rgb(234,103,6)"/><text x="19.0430%" y="591.50"></text></g><g><title>entry_SYSCALL_64 (27 samples, 2.06%)</title><rect x="16.9595%" y="677" width="2.0626%" height="15" fill="rgb(227,97,0)"/><text x="17.2095%" y="687.50">e..</text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (32 samples, 2.44%)</title><rect x="16.7303%" y="773" width="2.4446%" height="15" fill="rgb(234,150,53)"/><text x="16.9803%" y="783.50">&lt;s..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (32 samples, 2.44%)</title><rect x="16.7303%" y="757" width="2.4446%" height="15" fill="rgb(228,201,54)"/><text x="16.9803%" y="767.50">&lt;s..</text></g><g><title>std::sys_common::net::TcpStream::read (32 samples, 2.44%)</title><rect x="16.7303%" y="741" width="2.4446%" height="15" fill="rgb(222,22,37)"/><text x="16.9803%" y="751.50">st..</text></g><g><title>std::sys::unix::net::Socket::read (32 samples, 2.44%)</title><rect x="16.7303%" y="725" width="2.4446%" height="15" fill="rgb(237,53,32)"/><text x="16.9803%" y="735.50">st..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (32 samples, 2.44%)</title><rect x="16.7303%" y="709" width="2.4446%" height="15" fill="rgb(233,25,53)"/><text x="16.9803%" y="719.50">st..</text></g><g><title>__libc_recv (32 samples, 2.44%)</title><rect x="16.7303%" y="693" width="2.4446%" height="15" fill="rgb(210,40,34)"/><text x="16.9803%" y="703.50">__..</text></g><g><title>syscall_return_via_sysret (2 samples, 0.15%)</title><rect x="19.0222%" y="677" width="0.1528%" height="15" fill="rgb(241,220,44)"/><text x="19.2722%" y="687.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 2.75%)</title><rect x="16.6539%" y="789" width="2.7502%" height="15" fill="rgb(235,28,35)"/><text x="16.9039%" y="799.50">&lt;m..</text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (3 samples, 0.23%)</title><rect x="19.1749%" y="773" width="0.2292%" height="15" fill="rgb(210,56,17)"/><text x="19.4249%" y="783.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (3 samples, 0.23%)</title><rect x="19.1749%" y="757" width="0.2292%" height="15" fill="rgb(224,130,29)"/><text x="19.4249%" y="767.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (3 samples, 0.23%)</title><rect x="19.1749%" y="741" width="0.2292%" height="15" fill="rgb(235,212,8)"/><text x="19.4249%" y="751.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (39 samples, 2.98%)</title><rect x="16.5011%" y="821" width="2.9794%" height="15" fill="rgb(223,33,50)"/><text x="16.7511%" y="831.50">mys..</text></g><g><title>mysql::conn::Conn::read_packet (39 samples, 2.98%)</title><rect x="16.5011%" y="805" width="2.9794%" height="15" fill="rgb(219,149,13)"/><text x="16.7511%" y="815.50">mys..</text></g><g><title>dev_hard_start_xmit (3 samples, 0.23%)</title><rect x="20.8556%" y="517" width="0.2292%" height="15" fill="rgb(250,156,29)"/><text x="21.1056%" y="527.50"></text></g><g><title>loopback_xmit (3 samples, 0.23%)</title><rect x="20.8556%" y="501" width="0.2292%" height="15" fill="rgb(216,193,19)"/><text x="21.1056%" y="511.50"></text></g><g><title>netif_rx (3 samples, 0.23%)</title><rect x="20.8556%" y="485" width="0.2292%" height="15" fill="rgb(216,135,14)"/><text x="21.1056%" y="495.50"></text></g><g><title>netif_rx_internal (3 samples, 0.23%)</title><rect x="20.8556%" y="469" width="0.2292%" height="15" fill="rgb(241,47,5)"/><text x="21.1056%" y="479.50"></text></g><g><title>__dev_queue_xmit (6 samples, 0.46%)</title><rect x="20.7028%" y="533" width="0.4584%" height="15" fill="rgb(233,42,35)"/><text x="20.9528%" y="543.50"></text></g><g><title>enqueue_task (4 samples, 0.31%)</title><rect x="21.8487%" y="229" width="0.3056%" height="15" fill="rgb(231,13,6)"/><text x="22.0987%" y="239.50"></text></g><g><title>uclamp_rq_inc_id (3 samples, 0.23%)</title><rect x="21.9251%" y="213" width="0.2292%" height="15" fill="rgb(207,181,40)"/><text x="22.1751%" y="223.50"></text></g><g><title>enqueue_task_fair (4 samples, 0.31%)</title><rect x="22.1543%" y="229" width="0.3056%" height="15" fill="rgb(254,173,49)"/><text x="22.4043%" y="239.50"></text></g><g><title>enqueue_entity (4 samples, 0.31%)</title><rect x="22.1543%" y="213" width="0.3056%" height="15" fill="rgb(221,1,38)"/><text x="22.4043%" y="223.50"></text></g><g><title>sock_def_readable (15 samples, 1.15%)</title><rect x="21.6196%" y="309" width="1.1459%" height="15" fill="rgb(206,124,46)"/><text x="21.8696%" y="319.50"></text></g><g><title>__wake_up_common_lock (14 samples, 1.07%)</title><rect x="21.6960%" y="293" width="1.0695%" height="15" fill="rgb(249,21,11)"/><text x="21.9460%" y="303.50"></text></g><g><title>__wake_up_common (14 samples, 1.07%)</title><rect x="21.6960%" y="277" width="1.0695%" height="15" fill="rgb(222,201,40)"/><text x="21.9460%" y="287.50"></text></g><g><title>pollwake (14 samples, 1.07%)</title><rect x="21.6960%" y="261" width="1.0695%" height="15" fill="rgb(235,61,29)"/><text x="21.9460%" y="271.50"></text></g><g><title>try_to_wake_up (14 samples, 1.07%)</title><rect x="21.6960%" y="245" width="1.0695%" height="15" fill="rgb(219,207,3)"/><text x="21.9460%" y="255.50"></text></g><g><title>select_task_rq_fair (4 samples, 0.31%)</title><rect x="22.4599%" y="229" width="0.3056%" height="15" fill="rgb(222,56,46)"/><text x="22.7099%" y="239.50"></text></g><g><title>available_idle_cpu (2 samples, 0.15%)</title><rect x="22.6127%" y="213" width="0.1528%" height="15" fill="rgb(239,76,54)"/><text x="22.8627%" y="223.50"></text></g><g><title>ip_local_deliver (24 samples, 1.83%)</title><rect x="21.3140%" y="405" width="1.8335%" height="15" fill="rgb(231,124,27)"/><text x="21.5640%" y="415.50">i..</text></g><g><title>ip_local_deliver_finish (23 samples, 1.76%)</title><rect x="21.3904%" y="389" width="1.7571%" height="15" fill="rgb(249,195,6)"/><text x="21.6404%" y="399.50"></text></g><g><title>ip_protocol_deliver_rcu (22 samples, 1.68%)</title><rect x="21.4668%" y="373" width="1.6807%" height="15" fill="rgb(237,174,47)"/><text x="21.7168%" y="383.50"></text></g><g><title>tcp_v4_rcv (22 samples, 1.68%)</title><rect x="21.4668%" y="357" width="1.6807%" height="15" fill="rgb(206,201,31)"/><text x="21.7168%" y="367.50"></text></g><g><title>tcp_v4_do_rcv (21 samples, 1.60%)</title><rect x="21.5432%" y="341" width="1.6043%" height="15" fill="rgb(231,57,52)"/><text x="21.7932%" y="351.50"></text></g><g><title>tcp_rcv_established (21 samples, 1.60%)</title><rect x="21.5432%" y="325" width="1.6043%" height="15" fill="rgb(248,177,22)"/><text x="21.7932%" y="335.50"></text></g><g><title>tcp_ack (5 samples, 0.38%)</title><rect x="22.7655%" y="309" width="0.3820%" height="15" fill="rgb(215,211,37)"/><text x="23.0155%" y="319.50"></text></g><g><title>__netif_receive_skb_one_core (25 samples, 1.91%)</title><rect x="21.3140%" y="437" width="1.9099%" height="15" fill="rgb(241,128,51)"/><text x="21.5640%" y="447.50">_..</text></g><g><title>ip_rcv (25 samples, 1.91%)</title><rect x="21.3140%" y="421" width="1.9099%" height="15" fill="rgb(227,165,31)"/><text x="21.5640%" y="431.50">i..</text></g><g><title>net_rx_action (27 samples, 2.06%)</title><rect x="21.2376%" y="469" width="2.0626%" height="15" fill="rgb(228,167,24)"/><text x="21.4876%" y="479.50">n..</text></g><g><title>process_backlog (26 samples, 1.99%)</title><rect x="21.3140%" y="453" width="1.9862%" height="15" fill="rgb(228,143,12)"/><text x="21.5640%" y="463.50">p..</text></g><g><title>__ip_queue_xmit (41 samples, 3.13%)</title><rect x="20.2445%" y="581" width="3.1322%" height="15" fill="rgb(249,149,8)"/><text x="20.4945%" y="591.50">__i..</text></g><g><title>ip_output (40 samples, 3.06%)</title><rect x="20.3209%" y="565" width="3.0558%" height="15" fill="rgb(243,35,44)"/><text x="20.5709%" y="575.50">ip_..</text></g><g><title>ip_finish_output2 (38 samples, 2.90%)</title><rect x="20.4736%" y="549" width="2.9030%" height="15" fill="rgb(246,89,9)"/><text x="20.7236%" y="559.50">ip..</text></g><g><title>__local_bh_enable_ip (29 samples, 2.22%)</title><rect x="21.1612%" y="533" width="2.2154%" height="15" fill="rgb(233,213,13)"/><text x="21.4112%" y="543.50">_..</text></g><g><title>do_softirq (29 samples, 2.22%)</title><rect x="21.1612%" y="517" width="2.2154%" height="15" fill="rgb(233,141,41)"/><text x="21.4112%" y="527.50">d..</text></g><g><title>do_softirq_own_stack (29 samples, 2.22%)</title><rect x="21.1612%" y="501" width="2.2154%" height="15" fill="rgb(239,167,4)"/><text x="21.4112%" y="511.50">d..</text></g><g><title>__do_softirq (29 samples, 2.22%)</title><rect x="21.1612%" y="485" width="2.2154%" height="15" fill="rgb(209,217,16)"/><text x="21.4112%" y="495.50">_..</text></g><g><title>__tcp_push_pending_frames (45 samples, 3.44%)</title><rect x="20.0917%" y="629" width="3.4377%" height="15" fill="rgb(219,88,35)"/><text x="20.3417%" y="639.50">__t..</text></g><g><title>tcp_write_xmit (45 samples, 3.44%)</title><rect x="20.0917%" y="613" width="3.4377%" height="15" fill="rgb(220,193,23)"/><text x="20.3417%" y="623.50">tcp..</text></g><g><title>__tcp_transmit_skb (44 samples, 3.36%)</title><rect x="20.1681%" y="597" width="3.3613%" height="15" fill="rgb(230,90,52)"/><text x="20.4181%" y="607.50">__t..</text></g><g><title>__kmalloc_node_track_caller (2 samples, 0.15%)</title><rect x="23.6822%" y="597" width="0.1528%" height="15" fill="rgb(252,106,19)"/><text x="23.9322%" y="607.50"></text></g><g><title>sk_stream_alloc_skb (5 samples, 0.38%)</title><rect x="23.5294%" y="629" width="0.3820%" height="15" fill="rgb(206,74,20)"/><text x="23.7794%" y="639.50"></text></g><g><title>__alloc_skb (5 samples, 0.38%)</title><rect x="23.5294%" y="613" width="0.3820%" height="15" fill="rgb(230,138,44)"/><text x="23.7794%" y="623.50"></text></g><g><title>sock_sendmsg (58 samples, 4.43%)</title><rect x="19.6333%" y="677" width="4.4309%" height="15" fill="rgb(235,182,43)"/><text x="19.8833%" y="687.50">sock_..</text></g><g><title>tcp_sendmsg (57 samples, 4.35%)</title><rect x="19.7097%" y="661" width="4.3545%" height="15" fill="rgb(242,16,51)"/><text x="19.9597%" y="671.50">tcp_s..</text></g><g><title>tcp_sendmsg_locked (56 samples, 4.28%)</title><rect x="19.7861%" y="645" width="4.2781%" height="15" fill="rgb(248,9,4)"/><text x="20.0361%" y="655.50">tcp_s..</text></g><g><title>__x64_sys_sendto (59 samples, 4.51%)</title><rect x="19.6333%" y="709" width="4.5073%" height="15" fill="rgb(210,31,22)"/><text x="19.8833%" y="719.50">__x64..</text></g><g><title>__sys_sendto (59 samples, 4.51%)</title><rect x="19.6333%" y="693" width="4.5073%" height="15" fill="rgb(239,54,39)"/><text x="19.8833%" y="703.50">__sys..</text></g><g><title>do_syscall_64 (60 samples, 4.58%)</title><rect x="19.6333%" y="725" width="4.5837%" height="15" fill="rgb(230,99,41)"/><text x="19.8833%" y="735.50">do_sy..</text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (105 samples, 8.02%)</title><rect x="16.5011%" y="853" width="8.0214%" height="15" fill="rgb(253,106,12)"/><text x="16.7511%" y="863.50">&lt;mysql::con..</text></g><g><title>mysql::conn::Conn::_query (105 samples, 8.02%)</title><rect x="16.5011%" y="837" width="8.0214%" height="15" fill="rgb(213,46,41)"/><text x="16.7511%" y="847.50">mysql::conn..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (66 samples, 5.04%)</title><rect x="19.4805%" y="821" width="5.0420%" height="15" fill="rgb(215,133,35)"/><text x="19.7305%" y="831.50">mysql_..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (66 samples, 5.04%)</title><rect x="19.4805%" y="805" width="5.0420%" height="15" fill="rgb(213,28,5)"/><text x="19.7305%" y="815.50">std::i..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (66 samples, 5.04%)</title><rect x="19.4805%" y="789" width="5.0420%" height="15" fill="rgb(215,77,49)"/><text x="19.7305%" y="799.50">&lt;std::..</text></g><g><title>std::sys_common::net::TcpStream::write (66 samples, 5.04%)</title><rect x="19.4805%" y="773" width="5.0420%" height="15" fill="rgb(248,100,22)"/><text x="19.7305%" y="783.50">std::s..</text></g><g><title>__libc_send (66 samples, 5.04%)</title><rect x="19.4805%" y="757" width="5.0420%" height="15" fill="rgb(208,67,9)"/><text x="19.7305%" y="767.50">__libc..</text></g><g><title>entry_SYSCALL_64 (64 samples, 4.89%)</title><rect x="19.6333%" y="741" width="4.8892%" height="15" fill="rgb(219,133,21)"/><text x="19.8833%" y="751.50">entry_..</text></g><g><title>prepare_exit_to_usermode (4 samples, 0.31%)</title><rect x="24.2170%" y="725" width="0.3056%" height="15" fill="rgb(246,46,29)"/><text x="24.4670%" y="735.50"></text></g><g><title>core::fmt::write (2 samples, 0.15%)</title><rect x="24.6753%" y="853" width="0.1528%" height="15" fill="rgb(246,185,52)"/><text x="24.9253%" y="863.50"></text></g><g><title>decor::qtcache::QueryCache::insert_uid2gids_for_values (112 samples, 8.56%)</title><rect x="16.4248%" y="869" width="8.5561%" height="15" fill="rgb(252,136,11)"/><text x="16.6748%" y="879.50">decor::qtcac..</text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.31%)</title><rect x="25.0573%" y="821" width="0.3056%" height="15" fill="rgb(219,138,53)"/><text x="25.3073%" y="831.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (4 samples, 0.31%)</title><rect x="25.0573%" y="805" width="0.3056%" height="15" fill="rgb(211,51,23)"/><text x="25.3073%" y="815.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (4 samples, 0.31%)</title><rect x="25.0573%" y="789" width="0.3056%" height="15" fill="rgb(247,221,28)"/><text x="25.3073%" y="799.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (4 samples, 0.31%)</title><rect x="25.0573%" y="773" width="0.3056%" height="15" fill="rgb(251,222,45)"/><text x="25.3073%" y="783.50"></text></g><g><title>core::fmt::write (6 samples, 0.46%)</title><rect x="24.9809%" y="853" width="0.4584%" height="15" fill="rgb(217,162,53)"/><text x="25.2309%" y="863.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::ObjectName as core::fmt::Display&gt;::fmt (6 samples, 0.46%)</title><rect x="24.9809%" y="837" width="0.4584%" height="15" fill="rgb(229,93,14)"/><text x="25.2309%" y="847.50"></text></g><g><title>alloc::fmt::format (3 samples, 0.23%)</title><rect x="25.5157%" y="837" width="0.2292%" height="15" fill="rgb(209,67,49)"/><text x="25.7657%" y="847.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.23%)</title><rect x="25.5157%" y="821" width="0.2292%" height="15" fill="rgb(213,87,29)"/><text x="25.7657%" y="831.50"></text></g><g><title>core::fmt::write (3 samples, 0.23%)</title><rect x="25.5157%" y="805" width="0.2292%" height="15" fill="rgb(205,151,52)"/><text x="25.7657%" y="815.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (2 samples, 0.15%)</title><rect x="25.5921%" y="789" width="0.1528%" height="15" fill="rgb(253,215,39)"/><text x="25.8421%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.15%)</title><rect x="25.8212%" y="821" width="0.1528%" height="15" fill="rgb(221,220,41)"/><text x="26.0712%" y="831.50"></text></g><g><title>_int_free (2 samples, 0.15%)</title><rect x="25.9740%" y="821" width="0.1528%" height="15" fill="rgb(218,133,21)"/><text x="26.2240%" y="831.50"></text></g><g><title>decor::query_transformer::QueryTransformer::objname_to_mv_string (18 samples, 1.38%)</title><rect x="24.9809%" y="869" width="1.3751%" height="15" fill="rgb(221,193,43)"/><text x="25.2309%" y="879.50"></text></g><g><title>decor::query_transformer::QueryTransformer::idents_to_mv_idents (12 samples, 0.92%)</title><rect x="25.4393%" y="853" width="0.9167%" height="15" fill="rgb(240,128,52)"/><text x="25.6893%" y="863.50"></text></g><g><title>decor::helpers::str_subset_of_idents (7 samples, 0.53%)</title><rect x="25.8212%" y="837" width="0.5348%" height="15" fill="rgb(253,114,12)"/><text x="26.0712%" y="847.50"></text></g><g><title>core::str::pattern::StrSearcher::new (3 samples, 0.23%)</title><rect x="26.1268%" y="821" width="0.2292%" height="15" fill="rgb(215,223,47)"/><text x="26.3768%" y="831.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (3 samples, 0.23%)</title><rect x="26.1268%" y="805" width="0.2292%" height="15" fill="rgb(248,225,23)"/><text x="26.3768%" y="815.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.15%)</title><rect x="26.2032%" y="789" width="0.1528%" height="15" fill="rgb(250,108,0)"/><text x="26.4532%" y="799.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.15%)</title><rect x="26.2032%" y="773" width="0.1528%" height="15" fill="rgb(228,208,7)"/><text x="26.4532%" y="783.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.15%)</title><rect x="26.2032%" y="757" width="0.1528%" height="15" fill="rgb(244,45,10)"/><text x="26.4532%" y="767.50"></text></g><g><title>__kfree_skb (2 samples, 0.15%)</title><rect x="26.5852%" y="581" width="0.1528%" height="15" fill="rgb(207,125,25)"/><text x="26.8352%" y="591.50"></text></g><g><title>skb_release_head_state (2 samples, 0.15%)</title><rect x="26.5852%" y="565" width="0.1528%" height="15" fill="rgb(210,195,18)"/><text x="26.8352%" y="575.50"></text></g><g><title>__perf_event_task_sched_out (2 samples, 0.15%)</title><rect x="27.1199%" y="501" width="0.1528%" height="15" fill="rgb(249,80,12)"/><text x="27.3699%" y="511.50"></text></g><g><title>dequeue_task_fair (3 samples, 0.23%)</title><rect x="27.2727%" y="501" width="0.2292%" height="15" fill="rgb(221,65,9)"/><text x="27.5227%" y="511.50"></text></g><g><title>dequeue_entity (3 samples, 0.23%)</title><rect x="27.2727%" y="485" width="0.2292%" height="15" fill="rgb(235,49,36)"/><text x="27.5227%" y="495.50"></text></g><g><title>psi_task_change (2 samples, 0.15%)</title><rect x="27.5019%" y="501" width="0.1528%" height="15" fill="rgb(225,32,20)"/><text x="27.7519%" y="511.50"></text></g><g><title>psi_group_change (2 samples, 0.15%)</title><rect x="27.5019%" y="485" width="0.1528%" height="15" fill="rgb(215,141,46)"/><text x="27.7519%" y="495.50"></text></g><g><title>sk_wait_data (13 samples, 0.99%)</title><rect x="26.7380%" y="581" width="0.9931%" height="15" fill="rgb(250,160,47)"/><text x="26.9880%" y="591.50"></text></g><g><title>wait_woken (11 samples, 0.84%)</title><rect x="26.8908%" y="565" width="0.8403%" height="15" fill="rgb(216,222,40)"/><text x="27.1408%" y="575.50"></text></g><g><title>schedule_timeout (9 samples, 0.69%)</title><rect x="27.0435%" y="549" width="0.6875%" height="15" fill="rgb(234,217,39)"/><text x="27.2935%" y="559.50"></text></g><g><title>schedule (9 samples, 0.69%)</title><rect x="27.0435%" y="533" width="0.6875%" height="15" fill="rgb(207,178,40)"/><text x="27.2935%" y="543.50"></text></g><g><title>__schedule (8 samples, 0.61%)</title><rect x="27.1199%" y="517" width="0.6112%" height="15" fill="rgb(221,136,13)"/><text x="27.3699%" y="527.50"></text></g><g><title>do_syscall_64 (18 samples, 1.38%)</title><rect x="26.5088%" y="661" width="1.3751%" height="15" fill="rgb(249,199,10)"/><text x="26.7588%" y="671.50"></text></g><g><title>__x64_sys_recvfrom (18 samples, 1.38%)</title><rect x="26.5088%" y="645" width="1.3751%" height="15" fill="rgb(249,222,13)"/><text x="26.7588%" y="655.50"></text></g><g><title>__sys_recvfrom (18 samples, 1.38%)</title><rect x="26.5088%" y="629" width="1.3751%" height="15" fill="rgb(244,185,38)"/><text x="26.7588%" y="639.50"></text></g><g><title>inet_recvmsg (17 samples, 1.30%)</title><rect x="26.5852%" y="613" width="1.2987%" height="15" fill="rgb(236,202,9)"/><text x="26.8352%" y="623.50"></text></g><g><title>tcp_recvmsg (17 samples, 1.30%)</title><rect x="26.5852%" y="597" width="1.2987%" height="15" fill="rgb(250,229,37)"/><text x="26.8352%" y="607.50"></text></g><g><title>skb_copy_datagram_iter (2 samples, 0.15%)</title><rect x="27.7311%" y="581" width="0.1528%" height="15" fill="rgb(206,174,23)"/><text x="27.9811%" y="591.50"></text></g><g><title>__skb_datagram_iter (2 samples, 0.15%)</title><rect x="27.7311%" y="565" width="0.1528%" height="15" fill="rgb(211,33,43)"/><text x="27.9811%" y="575.50"></text></g><g><title>simple_copy_to_iter (2 samples, 0.15%)</title><rect x="27.7311%" y="549" width="0.1528%" height="15" fill="rgb(245,58,50)"/><text x="27.9811%" y="559.50"></text></g><g><title>__check_object_size (2 samples, 0.15%)</title><rect x="27.7311%" y="533" width="0.1528%" height="15" fill="rgb(244,68,36)"/><text x="27.9811%" y="543.50"></text></g><g><title>entry_SYSCALL_64 (20 samples, 1.53%)</title><rect x="26.5088%" y="677" width="1.5279%" height="15" fill="rgb(232,229,15)"/><text x="26.7588%" y="687.50"></text></g><g><title>prepare_exit_to_usermode (2 samples, 0.15%)</title><rect x="27.8839%" y="661" width="0.1528%" height="15" fill="rgb(254,30,23)"/><text x="28.1339%" y="671.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (21 samples, 1.60%)</title><rect x="26.5088%" y="773" width="1.6043%" height="15" fill="rgb(235,160,14)"/><text x="26.7588%" y="783.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (21 samples, 1.60%)</title><rect x="26.5088%" y="757" width="1.6043%" height="15" fill="rgb(212,155,44)"/><text x="26.7588%" y="767.50"></text></g><g><title>std::sys_common::net::TcpStream::read (21 samples, 1.60%)</title><rect x="26.5088%" y="741" width="1.6043%" height="15" fill="rgb(226,2,50)"/><text x="26.7588%" y="751.50"></text></g><g><title>std::sys::unix::net::Socket::read (21 samples, 1.60%)</title><rect x="26.5088%" y="725" width="1.6043%" height="15" fill="rgb(234,177,6)"/><text x="26.7588%" y="735.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (21 samples, 1.60%)</title><rect x="26.5088%" y="709" width="1.6043%" height="15" fill="rgb(217,24,9)"/><text x="26.7588%" y="719.50"></text></g><g><title>__libc_recv (21 samples, 1.60%)</title><rect x="26.5088%" y="693" width="1.6043%" height="15" fill="rgb(220,13,46)"/><text x="26.7588%" y="703.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (28 samples, 2.14%)</title><rect x="26.4324%" y="821" width="2.1390%" height="15" fill="rgb(239,221,27)"/><text x="26.6824%" y="831.50">m..</text></g><g><title>mysql::conn::Conn::read_packet (28 samples, 2.14%)</title><rect x="26.4324%" y="805" width="2.1390%" height="15" fill="rgb(222,198,25)"/><text x="26.6824%" y="815.50">m..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 2.06%)</title><rect x="26.5088%" y="789" width="2.0626%" height="15" fill="rgb(211,99,13)"/><text x="26.7588%" y="799.50">&lt;..</text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (6 samples, 0.46%)</title><rect x="28.1131%" y="773" width="0.4584%" height="15" fill="rgb(232,111,31)"/><text x="28.3631%" y="783.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (6 samples, 0.46%)</title><rect x="28.1131%" y="757" width="0.4584%" height="15" fill="rgb(245,82,37)"/><text x="28.3631%" y="767.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (5 samples, 0.38%)</title><rect x="28.1895%" y="741" width="0.3820%" height="15" fill="rgb(227,149,46)"/><text x="28.4395%" y="751.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.15%)</title><rect x="28.4186%" y="725" width="0.1528%" height="15" fill="rgb(218,36,50)"/><text x="28.6686%" y="735.50"></text></g><g><title>__dev_queue_xmit (2 samples, 0.15%)</title><rect x="29.0298%" y="533" width="0.1528%" height="15" fill="rgb(226,80,48)"/><text x="29.2798%" y="543.50"></text></g><g><title>raw_local_deliver (2 samples, 0.15%)</title><rect x="29.4882%" y="357" width="0.1528%" height="15" fill="rgb(238,224,15)"/><text x="29.7382%" y="367.50"></text></g><g><title>enqueue_task (3 samples, 0.23%)</title><rect x="29.9465%" y="229" width="0.2292%" height="15" fill="rgb(241,136,10)"/><text x="30.1965%" y="239.50"></text></g><g><title>enqueue_task_fair (2 samples, 0.15%)</title><rect x="30.1757%" y="229" width="0.1528%" height="15" fill="rgb(208,32,45)"/><text x="30.4257%" y="239.50"></text></g><g><title>sock_def_readable (11 samples, 0.84%)</title><rect x="29.7173%" y="309" width="0.8403%" height="15" fill="rgb(207,135,9)"/><text x="29.9673%" y="319.50"></text></g><g><title>__wake_up_common_lock (11 samples, 0.84%)</title><rect x="29.7173%" y="293" width="0.8403%" height="15" fill="rgb(206,86,44)"/><text x="29.9673%" y="303.50"></text></g><g><title>__wake_up_common (11 samples, 0.84%)</title><rect x="29.7173%" y="277" width="0.8403%" height="15" fill="rgb(245,177,15)"/><text x="29.9673%" y="287.50"></text></g><g><title>pollwake (11 samples, 0.84%)</title><rect x="29.7173%" y="261" width="0.8403%" height="15" fill="rgb(206,64,50)"/><text x="29.9673%" y="271.50"></text></g><g><title>try_to_wake_up (10 samples, 0.76%)</title><rect x="29.7937%" y="245" width="0.7639%" height="15" fill="rgb(234,36,40)"/><text x="30.0437%" y="255.50"></text></g><g><title>update_rq_clock (3 samples, 0.23%)</title><rect x="30.3285%" y="229" width="0.2292%" height="15" fill="rgb(213,64,8)"/><text x="30.5785%" y="239.50"></text></g><g><title>ip_local_deliver (20 samples, 1.53%)</title><rect x="29.4882%" y="405" width="1.5279%" height="15" fill="rgb(210,75,36)"/><text x="29.7382%" y="415.50"></text></g><g><title>ip_local_deliver_finish (20 samples, 1.53%)</title><rect x="29.4882%" y="389" width="1.5279%" height="15" fill="rgb(229,88,21)"/><text x="29.7382%" y="399.50"></text></g><g><title>ip_protocol_deliver_rcu (20 samples, 1.53%)</title><rect x="29.4882%" y="373" width="1.5279%" height="15" fill="rgb(252,204,47)"/><text x="29.7382%" y="383.50"></text></g><g><title>tcp_v4_rcv (18 samples, 1.38%)</title><rect x="29.6409%" y="357" width="1.3751%" height="15" fill="rgb(208,77,27)"/><text x="29.8909%" y="367.50"></text></g><g><title>tcp_v4_do_rcv (18 samples, 1.38%)</title><rect x="29.6409%" y="341" width="1.3751%" height="15" fill="rgb(221,76,26)"/><text x="29.8909%" y="351.50"></text></g><g><title>tcp_rcv_established (18 samples, 1.38%)</title><rect x="29.6409%" y="325" width="1.3751%" height="15" fill="rgb(225,139,18)"/><text x="29.8909%" y="335.50"></text></g><g><title>tcp_ack (6 samples, 0.46%)</title><rect x="30.5577%" y="309" width="0.4584%" height="15" fill="rgb(230,137,11)"/><text x="30.8077%" y="319.50"></text></g><g><title>__ip_queue_xmit (30 samples, 2.29%)</title><rect x="28.8770%" y="581" width="2.2918%" height="15" fill="rgb(212,28,1)"/><text x="29.1270%" y="591.50">_..</text></g><g><title>ip_output (30 samples, 2.29%)</title><rect x="28.8770%" y="565" width="2.2918%" height="15" fill="rgb(248,164,17)"/><text x="29.1270%" y="575.50">i..</text></g><g><title>ip_finish_output2 (30 samples, 2.29%)</title><rect x="28.8770%" y="549" width="2.2918%" height="15" fill="rgb(222,171,42)"/><text x="29.1270%" y="559.50">i..</text></g><g><title>__local_bh_enable_ip (26 samples, 1.99%)</title><rect x="29.1826%" y="533" width="1.9862%" height="15" fill="rgb(243,84,45)"/><text x="29.4326%" y="543.50">_..</text></g><g><title>do_softirq (26 samples, 1.99%)</title><rect x="29.1826%" y="517" width="1.9862%" height="15" fill="rgb(252,49,23)"/><text x="29.4326%" y="527.50">d..</text></g><g><title>do_softirq_own_stack (26 samples, 1.99%)</title><rect x="29.1826%" y="501" width="1.9862%" height="15" fill="rgb(215,19,7)"/><text x="29.4326%" y="511.50">d..</text></g><g><title>__do_softirq (26 samples, 1.99%)</title><rect x="29.1826%" y="485" width="1.9862%" height="15" fill="rgb(238,81,41)"/><text x="29.4326%" y="495.50">_..</text></g><g><title>net_rx_action (25 samples, 1.91%)</title><rect x="29.2590%" y="469" width="1.9099%" height="15" fill="rgb(210,199,37)"/><text x="29.5090%" y="479.50">n..</text></g><g><title>process_backlog (22 samples, 1.68%)</title><rect x="29.4882%" y="453" width="1.6807%" height="15" fill="rgb(244,192,49)"/><text x="29.7382%" y="463.50"></text></g><g><title>__netif_receive_skb_one_core (22 samples, 1.68%)</title><rect x="29.4882%" y="437" width="1.6807%" height="15" fill="rgb(226,211,11)"/><text x="29.7382%" y="447.50"></text></g><g><title>ip_rcv (22 samples, 1.68%)</title><rect x="29.4882%" y="421" width="1.6807%" height="15" fill="rgb(236,162,54)"/><text x="29.7382%" y="431.50"></text></g><g><title>ip_rcv_finish (2 samples, 0.15%)</title><rect x="31.0160%" y="405" width="0.1528%" height="15" fill="rgb(220,229,9)"/><text x="31.2660%" y="415.50"></text></g><g><title>ip_rcv_finish_core.constprop.0 (2 samples, 0.15%)</title><rect x="31.0160%" y="389" width="0.1528%" height="15" fill="rgb(250,87,22)"/><text x="31.2660%" y="399.50"></text></g><g><title>__tcp_transmit_skb (34 samples, 2.60%)</title><rect x="28.8006%" y="597" width="2.5974%" height="15" fill="rgb(239,43,17)"/><text x="29.0506%" y="607.50">__..</text></g><g><title>skb_clone (2 samples, 0.15%)</title><rect x="31.2452%" y="581" width="0.1528%" height="15" fill="rgb(231,177,25)"/><text x="31.4952%" y="591.50"></text></g><g><title>__tcp_push_pending_frames (38 samples, 2.90%)</title><rect x="28.6478%" y="629" width="2.9030%" height="15" fill="rgb(219,179,1)"/><text x="28.8978%" y="639.50">__..</text></g><g><title>tcp_write_xmit (38 samples, 2.90%)</title><rect x="28.6478%" y="613" width="2.9030%" height="15" fill="rgb(238,219,53)"/><text x="28.8978%" y="623.50">tc..</text></g><g><title>sock_sendmsg (42 samples, 3.21%)</title><rect x="28.6478%" y="677" width="3.2086%" height="15" fill="rgb(232,167,36)"/><text x="28.8978%" y="687.50">soc..</text></g><g><title>tcp_sendmsg (42 samples, 3.21%)</title><rect x="28.6478%" y="661" width="3.2086%" height="15" fill="rgb(244,19,51)"/><text x="28.8978%" y="671.50">tcp..</text></g><g><title>tcp_sendmsg_locked (42 samples, 3.21%)</title><rect x="28.6478%" y="645" width="3.2086%" height="15" fill="rgb(224,6,22)"/><text x="28.8978%" y="655.50">tcp..</text></g><g><title>sk_stream_alloc_skb (4 samples, 0.31%)</title><rect x="31.5508%" y="629" width="0.3056%" height="15" fill="rgb(224,145,5)"/><text x="31.8008%" y="639.50"></text></g><g><title>__alloc_skb (4 samples, 0.31%)</title><rect x="31.5508%" y="613" width="0.3056%" height="15" fill="rgb(234,130,49)"/><text x="31.8008%" y="623.50"></text></g><g><title>__kmalloc_node_track_caller (2 samples, 0.15%)</title><rect x="31.7036%" y="597" width="0.1528%" height="15" fill="rgb(254,6,2)"/><text x="31.9536%" y="607.50"></text></g><g><title>do_syscall_64 (44 samples, 3.36%)</title><rect x="28.5714%" y="725" width="3.3613%" height="15" fill="rgb(208,96,46)"/><text x="28.8214%" y="735.50">do_..</text></g><g><title>__x64_sys_sendto (44 samples, 3.36%)</title><rect x="28.5714%" y="709" width="3.3613%" height="15" fill="rgb(239,3,39)"/><text x="28.8214%" y="719.50">__x..</text></g><g><title>__sys_sendto (44 samples, 3.36%)</title><rect x="28.5714%" y="693" width="3.3613%" height="15" fill="rgb(233,210,1)"/><text x="28.8214%" y="703.50">__s..</text></g><g><title>decor::query_transformer::QueryTransformer::get_mv_stmt (341 samples, 26.05%)</title><rect x="5.9587%" y="885" width="26.0504%" height="15" fill="rgb(244,137,37)"/><text x="6.2087%" y="895.50">decor::query_transformer::QueryTransformer..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (74 samples, 5.65%)</title><rect x="26.3560%" y="869" width="5.6532%" height="15" fill="rgb(240,136,2)"/><text x="26.6060%" y="879.50">mysql::..</text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (74 samples, 5.65%)</title><rect x="26.3560%" y="853" width="5.6532%" height="15" fill="rgb(239,18,37)"/><text x="26.6060%" y="863.50">&lt;mysql:..</text></g><g><title>mysql::conn::Conn::_query (73 samples, 5.58%)</title><rect x="26.4324%" y="837" width="5.5768%" height="15" fill="rgb(218,185,22)"/><text x="26.6824%" y="847.50">mysql::..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (45 samples, 3.44%)</title><rect x="28.5714%" y="821" width="3.4377%" height="15" fill="rgb(225,218,4)"/><text x="28.8214%" y="831.50">mys..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (45 samples, 3.44%)</title><rect x="28.5714%" y="805" width="3.4377%" height="15" fill="rgb(230,182,32)"/><text x="28.8214%" y="815.50">std..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (45 samples, 3.44%)</title><rect x="28.5714%" y="789" width="3.4377%" height="15" fill="rgb(242,56,43)"/><text x="28.8214%" y="799.50">&lt;st..</text></g><g><title>std::sys_common::net::TcpStream::write (45 samples, 3.44%)</title><rect x="28.5714%" y="773" width="3.4377%" height="15" fill="rgb(233,99,24)"/><text x="28.8214%" y="783.50">std..</text></g><g><title>__libc_send (45 samples, 3.44%)</title><rect x="28.5714%" y="757" width="3.4377%" height="15" fill="rgb(234,209,42)"/><text x="28.8214%" y="767.50">__l..</text></g><g><title>entry_SYSCALL_64 (45 samples, 3.44%)</title><rect x="28.5714%" y="741" width="3.4377%" height="15" fill="rgb(227,7,12)"/><text x="28.8214%" y="751.50">ent..</text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="32.0092%" y="869" width="0.1528%" height="15" fill="rgb(245,203,43)"/><text x="32.2592%" y="879.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="32.0092%" y="853" width="0.1528%" height="15" fill="rgb(238,205,33)"/><text x="32.2592%" y="863.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="32.0092%" y="837" width="0.1528%" height="15" fill="rgb(231,56,7)"/><text x="32.2592%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.15%)</title><rect x="32.0092%" y="821" width="0.1528%" height="15" fill="rgb(244,186,29)"/><text x="32.2592%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="32.0092%" y="805" width="0.1528%" height="15" fill="rgb(234,111,31)"/><text x="32.2592%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (13 samples, 0.99%)</title><rect x="32.1620%" y="837" width="0.9931%" height="15" fill="rgb(241,149,10)"/><text x="32.4120%" y="847.50"></text></g><g><title>__GI___libc_realloc (13 samples, 0.99%)</title><rect x="32.1620%" y="821" width="0.9931%" height="15" fill="rgb(249,206,44)"/><text x="32.4120%" y="831.50"></text></g><g><title>_int_realloc (13 samples, 0.99%)</title><rect x="32.1620%" y="805" width="0.9931%" height="15" fill="rgb(251,153,30)"/><text x="32.4120%" y="815.50"></text></g><g><title>_int_malloc (13 samples, 0.99%)</title><rect x="32.1620%" y="789" width="0.9931%" height="15" fill="rgb(239,152,38)"/><text x="32.4120%" y="799.50"></text></g><g><title>malloc_consolidate (13 samples, 0.99%)</title><rect x="32.1620%" y="773" width="0.9931%" height="15" fill="rgb(249,139,47)"/><text x="32.4120%" y="783.50"></text></g><g><title>__memcmp_avx2_movbe (10 samples, 0.76%)</title><rect x="34.6066%" y="805" width="0.7639%" height="15" fill="rgb(244,64,35)"/><text x="34.8566%" y="815.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (42 samples, 3.21%)</title><rect x="33.1551%" y="821" width="3.2086%" height="15" fill="rgb(216,46,15)"/><text x="33.4051%" y="831.50">sql..</text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (12 samples, 0.92%)</title><rect x="35.4469%" y="805" width="0.9167%" height="15" fill="rgb(250,74,19)"/><text x="35.6969%" y="815.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (10 samples, 0.76%)</title><rect x="35.5997%" y="789" width="0.7639%" height="15" fill="rgb(249,42,33)"/><text x="35.8497%" y="799.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (7 samples, 0.53%)</title><rect x="35.8289%" y="773" width="0.5348%" height="15" fill="rgb(242,149,17)"/><text x="36.0789%" y="783.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (7 samples, 0.53%)</title><rect x="35.8289%" y="757" width="0.5348%" height="15" fill="rgb(244,29,21)"/><text x="36.0789%" y="767.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (3 samples, 0.23%)</title><rect x="36.1345%" y="741" width="0.2292%" height="15" fill="rgb(220,130,37)"/><text x="36.3845%" y="751.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_string (3 samples, 0.23%)</title><rect x="36.3636%" y="821" width="0.2292%" height="15" fill="rgb(211,67,2)"/><text x="36.6136%" y="831.50"></text></g><g><title>sql_parser::tokenizer::PeekableChars::next (2 samples, 0.15%)</title><rect x="36.4400%" y="805" width="0.1528%" height="15" fill="rgb(235,68,52)"/><text x="36.6900%" y="815.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (403 samples, 30.79%)</title><rect x="5.9587%" y="901" width="30.7869%" height="15" fill="rgb(246,142,3)"/><text x="6.2087%" y="911.50">&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query</text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (62 samples, 4.74%)</title><rect x="32.0092%" y="885" width="4.7364%" height="15" fill="rgb(241,25,7)"/><text x="32.2592%" y="895.50">decor:..</text></g><g><title>sql_parser::parser::parse_statements (60 samples, 4.58%)</title><rect x="32.1620%" y="869" width="4.5837%" height="15" fill="rgb(242,119,39)"/><text x="32.4120%" y="879.50">sql_p..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (60 samples, 4.58%)</title><rect x="32.1620%" y="853" width="4.5837%" height="15" fill="rgb(241,98,45)"/><text x="32.4120%" y="863.50">sql_p..</text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (47 samples, 3.59%)</title><rect x="33.1551%" y="837" width="3.5905%" height="15" fill="rgb(254,28,30)"/><text x="33.4051%" y="847.50">sql_..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_word (2 samples, 0.15%)</title><rect x="36.5928%" y="821" width="0.1528%" height="15" fill="rgb(241,142,54)"/><text x="36.8428%" y="831.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.15%)</title><rect x="36.7456%" y="901" width="0.1528%" height="15" fill="rgb(222,85,15)"/><text x="36.9956%" y="911.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.23%)</title><rect x="37.2040%" y="901" width="0.2292%" height="15" fill="rgb(210,85,47)"/><text x="37.4540%" y="911.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.15%)</title><rect x="37.4332%" y="901" width="0.1528%" height="15" fill="rgb(224,206,25)"/><text x="37.6832%" y="911.50"></text></g><g><title>__libc_recv (3 samples, 0.23%)</title><rect x="37.5859%" y="901" width="0.2292%" height="15" fill="rgb(243,201,19)"/><text x="37.8359%" y="911.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.23%)</title><rect x="37.5859%" y="885" width="0.2292%" height="15" fill="rgb(236,59,4)"/><text x="37.8359%" y="895.50"></text></g><g><title>__local_bh_enable_ip (2 samples, 0.15%)</title><rect x="37.9679%" y="533" width="0.1528%" height="15" fill="rgb(254,179,45)"/><text x="38.2179%" y="543.50"></text></g><g><title>preempt_count_sub (2 samples, 0.15%)</title><rect x="37.9679%" y="517" width="0.1528%" height="15" fill="rgb(226,14,10)"/><text x="38.2179%" y="527.50"></text></g><g><title>_raw_spin_lock_irqsave (2 samples, 0.15%)</title><rect x="39.0374%" y="133" width="0.1528%" height="15" fill="rgb(244,27,41)"/><text x="39.2874%" y="143.50"></text></g><g><title>enqueue_task (3 samples, 0.23%)</title><rect x="39.1902%" y="133" width="0.2292%" height="15" fill="rgb(235,35,32)"/><text x="39.4402%" y="143.50"></text></g><g><title>psi_task_change (3 samples, 0.23%)</title><rect x="39.1902%" y="117" width="0.2292%" height="15" fill="rgb(218,68,31)"/><text x="39.4402%" y="127.50"></text></g><g><title>psi_group_change (3 samples, 0.23%)</title><rect x="39.1902%" y="101" width="0.2292%" height="15" fill="rgb(207,120,37)"/><text x="39.4402%" y="111.50"></text></g><g><title>record_times (2 samples, 0.15%)</title><rect x="39.2666%" y="85" width="0.1528%" height="15" fill="rgb(227,98,0)"/><text x="39.5166%" y="95.50"></text></g><g><title>sched_clock_cpu (2 samples, 0.15%)</title><rect x="39.2666%" y="69" width="0.1528%" height="15" fill="rgb(207,7,3)"/><text x="39.5166%" y="79.50"></text></g><g><title>sched_clock (2 samples, 0.15%)</title><rect x="39.2666%" y="53" width="0.1528%" height="15" fill="rgb(206,98,19)"/><text x="39.5166%" y="63.50"></text></g><g><title>native_sched_clock (2 samples, 0.15%)</title><rect x="39.2666%" y="37" width="0.1528%" height="15" fill="rgb(217,5,26)"/><text x="39.5166%" y="47.50"></text></g><g><title>__wake_up_common (6 samples, 0.46%)</title><rect x="39.0374%" y="165" width="0.4584%" height="15" fill="rgb(235,190,38)"/><text x="39.2874%" y="175.50"></text></g><g><title>try_to_wake_up (6 samples, 0.46%)</title><rect x="39.0374%" y="149" width="0.4584%" height="15" fill="rgb(247,86,24)"/><text x="39.2874%" y="159.50"></text></g><g><title>sock_def_readable (8 samples, 0.61%)</title><rect x="38.9610%" y="197" width="0.6112%" height="15" fill="rgb(205,101,16)"/><text x="39.2110%" y="207.50"></text></g><g><title>__wake_up_common_lock (7 samples, 0.53%)</title><rect x="39.0374%" y="181" width="0.5348%" height="15" fill="rgb(246,168,33)"/><text x="39.2874%" y="191.50"></text></g><g><title>tcp_ack (4 samples, 0.31%)</title><rect x="39.5722%" y="197" width="0.3056%" height="15" fill="rgb(231,114,1)"/><text x="39.8222%" y="207.50"></text></g><g><title>__tcp_push_pending_frames (23 samples, 1.76%)</title><rect x="38.1971%" y="517" width="1.7571%" height="15" fill="rgb(207,184,53)"/><text x="38.4471%" y="527.50"></text></g><g><title>tcp_write_xmit (23 samples, 1.76%)</title><rect x="38.1971%" y="501" width="1.7571%" height="15" fill="rgb(224,95,51)"/><text x="38.4471%" y="511.50"></text></g><g><title>__tcp_transmit_skb (22 samples, 1.68%)</title><rect x="38.2735%" y="485" width="1.6807%" height="15" fill="rgb(212,188,45)"/><text x="38.5235%" y="495.50"></text></g><g><title>__ip_queue_xmit (21 samples, 1.60%)</title><rect x="38.3499%" y="469" width="1.6043%" height="15" fill="rgb(223,154,38)"/><text x="38.5999%" y="479.50"></text></g><g><title>ip_output (20 samples, 1.53%)</title><rect x="38.4263%" y="453" width="1.5279%" height="15" fill="rgb(251,22,52)"/><text x="38.6763%" y="463.50"></text></g><g><title>ip_finish_output2 (20 samples, 1.53%)</title><rect x="38.4263%" y="437" width="1.5279%" height="15" fill="rgb(229,209,22)"/><text x="38.6763%" y="447.50"></text></g><g><title>__local_bh_enable_ip (20 samples, 1.53%)</title><rect x="38.4263%" y="421" width="1.5279%" height="15" fill="rgb(234,138,34)"/><text x="38.6763%" y="431.50"></text></g><g><title>do_softirq (19 samples, 1.45%)</title><rect x="38.5027%" y="405" width="1.4515%" height="15" fill="rgb(212,95,11)"/><text x="38.7527%" y="415.50"></text></g><g><title>do_softirq_own_stack (19 samples, 1.45%)</title><rect x="38.5027%" y="389" width="1.4515%" height="15" fill="rgb(240,179,47)"/><text x="38.7527%" y="399.50"></text></g><g><title>__do_softirq (19 samples, 1.45%)</title><rect x="38.5027%" y="373" width="1.4515%" height="15" fill="rgb(240,163,11)"/><text x="38.7527%" y="383.50"></text></g><g><title>net_rx_action (19 samples, 1.45%)</title><rect x="38.5027%" y="357" width="1.4515%" height="15" fill="rgb(236,37,12)"/><text x="38.7527%" y="367.50"></text></g><g><title>process_backlog (19 samples, 1.45%)</title><rect x="38.5027%" y="341" width="1.4515%" height="15" fill="rgb(232,164,16)"/><text x="38.7527%" y="351.50"></text></g><g><title>__netif_receive_skb_one_core (19 samples, 1.45%)</title><rect x="38.5027%" y="325" width="1.4515%" height="15" fill="rgb(244,205,15)"/><text x="38.7527%" y="335.50"></text></g><g><title>ip_rcv (18 samples, 1.38%)</title><rect x="38.5791%" y="309" width="1.3751%" height="15" fill="rgb(223,117,47)"/><text x="38.8291%" y="319.50"></text></g><g><title>ip_local_deliver (18 samples, 1.38%)</title><rect x="38.5791%" y="293" width="1.3751%" height="15" fill="rgb(244,107,35)"/><text x="38.8291%" y="303.50"></text></g><g><title>ip_local_deliver_finish (18 samples, 1.38%)</title><rect x="38.5791%" y="277" width="1.3751%" height="15" fill="rgb(205,140,8)"/><text x="38.8291%" y="287.50"></text></g><g><title>ip_protocol_deliver_rcu (18 samples, 1.38%)</title><rect x="38.5791%" y="261" width="1.3751%" height="15" fill="rgb(228,84,46)"/><text x="38.8291%" y="271.50"></text></g><g><title>tcp_v4_rcv (17 samples, 1.30%)</title><rect x="38.6555%" y="245" width="1.2987%" height="15" fill="rgb(254,188,9)"/><text x="38.9055%" y="255.50"></text></g><g><title>tcp_v4_do_rcv (14 samples, 1.07%)</title><rect x="38.8846%" y="229" width="1.0695%" height="15" fill="rgb(206,112,54)"/><text x="39.1346%" y="239.50"></text></g><g><title>tcp_rcv_established (14 samples, 1.07%)</title><rect x="38.8846%" y="213" width="1.0695%" height="15" fill="rgb(216,84,49)"/><text x="39.1346%" y="223.50"></text></g><g><title>__libc_start_main (31 samples, 2.37%)</title><rect x="37.8151%" y="901" width="2.3682%" height="15" fill="rgb(214,194,35)"/><text x="38.0651%" y="911.50">__..</text></g><g><title>main (31 samples, 2.37%)</title><rect x="37.8151%" y="885" width="2.3682%" height="15" fill="rgb(249,28,3)"/><text x="38.0651%" y="895.50">ma..</text></g><g><title>std::rt::lang_start_internal (31 samples, 2.37%)</title><rect x="37.8151%" y="869" width="2.3682%" height="15" fill="rgb(222,56,52)"/><text x="38.0651%" y="879.50">st..</text></g><g><title>std::panic::catch_unwind (31 samples, 2.37%)</title><rect x="37.8151%" y="853" width="2.3682%" height="15" fill="rgb(245,217,50)"/><text x="38.0651%" y="863.50">st..</text></g><g><title>std::panicking::try (31 samples, 2.37%)</title><rect x="37.8151%" y="837" width="2.3682%" height="15" fill="rgb(213,201,24)"/><text x="38.0651%" y="847.50">st..</text></g><g><title>std::panicking::try::do_call (31 samples, 2.37%)</title><rect x="37.8151%" y="821" width="2.3682%" height="15" fill="rgb(248,116,28)"/><text x="38.0651%" y="831.50">st..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (31 samples, 2.37%)</title><rect x="37.8151%" y="805" width="2.3682%" height="15" fill="rgb(219,72,43)"/><text x="38.0651%" y="815.50">co..</text></g><g><title>std::rt::lang_start::_{{closure}} (31 samples, 2.37%)</title><rect x="37.8151%" y="789" width="2.3682%" height="15" fill="rgb(209,138,14)"/><text x="38.0651%" y="799.50">st..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (31 samples, 2.37%)</title><rect x="37.8151%" y="773" width="2.3682%" height="15" fill="rgb(222,18,33)"/><text x="38.0651%" y="783.50">st..</text></g><g><title>lobsters::main (31 samples, 2.37%)</title><rect x="37.8151%" y="757" width="2.3682%" height="15" fill="rgb(213,199,7)"/><text x="38.0651%" y="767.50">lo..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (31 samples, 2.37%)</title><rect x="37.8151%" y="741" width="2.3682%" height="15" fill="rgb(250,110,10)"/><text x="38.0651%" y="751.50">my..</text></g><g><title>mysql::conn::Conn::_query (30 samples, 2.29%)</title><rect x="37.8915%" y="725" width="2.2918%" height="15" fill="rgb(248,123,6)"/><text x="38.1415%" y="735.50">m..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (30 samples, 2.29%)</title><rect x="37.8915%" y="709" width="2.2918%" height="15" fill="rgb(206,91,31)"/><text x="38.1415%" y="719.50">m..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (30 samples, 2.29%)</title><rect x="37.8915%" y="693" width="2.2918%" height="15" fill="rgb(211,154,13)"/><text x="38.1415%" y="703.50">s..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (30 samples, 2.29%)</title><rect x="37.8915%" y="677" width="2.2918%" height="15" fill="rgb(225,148,7)"/><text x="38.1415%" y="687.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::write (30 samples, 2.29%)</title><rect x="37.8915%" y="661" width="2.2918%" height="15" fill="rgb(220,160,43)"/><text x="38.1415%" y="671.50">s..</text></g><g><title>__libc_send (30 samples, 2.29%)</title><rect x="37.8915%" y="645" width="2.2918%" height="15" fill="rgb(213,52,39)"/><text x="38.1415%" y="655.50">_..</text></g><g><title>entry_SYSCALL_64 (30 samples, 2.29%)</title><rect x="37.8915%" y="629" width="2.2918%" height="15" fill="rgb(243,137,7)"/><text x="38.1415%" y="639.50">e..</text></g><g><title>do_syscall_64 (30 samples, 2.29%)</title><rect x="37.8915%" y="613" width="2.2918%" height="15" fill="rgb(230,79,13)"/><text x="38.1415%" y="623.50">d..</text></g><g><title>__x64_sys_sendto (30 samples, 2.29%)</title><rect x="37.8915%" y="597" width="2.2918%" height="15" fill="rgb(247,105,23)"/><text x="38.1415%" y="607.50">_..</text></g><g><title>__sys_sendto (30 samples, 2.29%)</title><rect x="37.8915%" y="581" width="2.2918%" height="15" fill="rgb(223,179,41)"/><text x="38.1415%" y="591.50">_..</text></g><g><title>sock_sendmsg (29 samples, 2.22%)</title><rect x="37.9679%" y="565" width="2.2154%" height="15" fill="rgb(218,9,34)"/><text x="38.2179%" y="575.50">s..</text></g><g><title>tcp_sendmsg (29 samples, 2.22%)</title><rect x="37.9679%" y="549" width="2.2154%" height="15" fill="rgb(222,106,8)"/><text x="38.2179%" y="559.50">t..</text></g><g><title>tcp_sendmsg_locked (27 samples, 2.06%)</title><rect x="38.1207%" y="533" width="2.0626%" height="15" fill="rgb(211,220,0)"/><text x="38.3707%" y="543.50">t..</text></g><g><title>_int_free (3 samples, 0.23%)</title><rect x="40.3361%" y="901" width="0.2292%" height="15" fill="rgb(229,52,16)"/><text x="40.5861%" y="911.50"></text></g><g><title>alloc::string::String::push (2 samples, 0.15%)</title><rect x="40.7945%" y="901" width="0.1528%" height="15" fill="rgb(212,155,18)"/><text x="41.0445%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.15%)</title><rect x="40.9473%" y="901" width="0.1528%" height="15" fill="rgb(242,21,14)"/><text x="41.1973%" y="911.50"></text></g><g><title>core::fmt::write (2 samples, 0.15%)</title><rect x="41.1001%" y="901" width="0.1528%" height="15" fill="rgb(222,19,48)"/><text x="41.3501%" y="911.50"></text></g><g><title>__kfree_skb (5 samples, 0.38%)</title><rect x="41.4057%" y="549" width="0.3820%" height="15" fill="rgb(232,45,27)"/><text x="41.6557%" y="559.50"></text></g><g><title>skb_release_head_state (4 samples, 0.31%)</title><rect x="41.4820%" y="533" width="0.3056%" height="15" fill="rgb(249,103,42)"/><text x="41.7320%" y="543.50"></text></g><g><title>dst_release (4 samples, 0.31%)</title><rect x="41.4820%" y="517" width="0.3056%" height="15" fill="rgb(246,81,33)"/><text x="41.7320%" y="527.50"></text></g><g><title>psi_task_change (4 samples, 0.31%)</title><rect x="42.0932%" y="469" width="0.3056%" height="15" fill="rgb(252,33,42)"/><text x="42.3432%" y="479.50"></text></g><g><title>psi_group_change (4 samples, 0.31%)</title><rect x="42.0932%" y="453" width="0.3056%" height="15" fill="rgb(209,212,41)"/><text x="42.3432%" y="463.50"></text></g><g><title>sk_wait_data (11 samples, 0.84%)</title><rect x="41.7876%" y="549" width="0.8403%" height="15" fill="rgb(207,154,6)"/><text x="42.0376%" y="559.50"></text></g><g><title>wait_woken (11 samples, 0.84%)</title><rect x="41.7876%" y="533" width="0.8403%" height="15" fill="rgb(223,64,47)"/><text x="42.0376%" y="543.50"></text></g><g><title>schedule_timeout (11 samples, 0.84%)</title><rect x="41.7876%" y="517" width="0.8403%" height="15" fill="rgb(211,161,38)"/><text x="42.0376%" y="527.50"></text></g><g><title>schedule (11 samples, 0.84%)</title><rect x="41.7876%" y="501" width="0.8403%" height="15" fill="rgb(219,138,40)"/><text x="42.0376%" y="511.50"></text></g><g><title>__schedule (11 samples, 0.84%)</title><rect x="41.7876%" y="485" width="0.8403%" height="15" fill="rgb(241,228,46)"/><text x="42.0376%" y="495.50"></text></g><g><title>update_rq_clock (2 samples, 0.15%)</title><rect x="42.4752%" y="469" width="0.1528%" height="15" fill="rgb(223,209,38)"/><text x="42.7252%" y="479.50"></text></g><g><title>do_syscall_64 (19 samples, 1.45%)</title><rect x="41.2529%" y="629" width="1.4515%" height="15" fill="rgb(236,164,45)"/><text x="41.5029%" y="639.50"></text></g><g><title>__x64_sys_recvfrom (19 samples, 1.45%)</title><rect x="41.2529%" y="613" width="1.4515%" height="15" fill="rgb(231,15,5)"/><text x="41.5029%" y="623.50"></text></g><g><title>__sys_recvfrom (19 samples, 1.45%)</title><rect x="41.2529%" y="597" width="1.4515%" height="15" fill="rgb(252,35,15)"/><text x="41.5029%" y="607.50"></text></g><g><title>inet_recvmsg (18 samples, 1.38%)</title><rect x="41.3293%" y="581" width="1.3751%" height="15" fill="rgb(248,181,18)"/><text x="41.5793%" y="591.50"></text></g><g><title>tcp_recvmsg (18 samples, 1.38%)</title><rect x="41.3293%" y="565" width="1.3751%" height="15" fill="rgb(233,39,42)"/><text x="41.5793%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (20 samples, 1.53%)</title><rect x="41.2529%" y="645" width="1.5279%" height="15" fill="rgb(238,110,33)"/><text x="41.5029%" y="655.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (21 samples, 1.60%)</title><rect x="41.2529%" y="821" width="1.6043%" height="15" fill="rgb(233,195,10)"/><text x="41.5029%" y="831.50"></text></g><g><title>mysql::conn::Conn::_query (21 samples, 1.60%)</title><rect x="41.2529%" y="805" width="1.6043%" height="15" fill="rgb(254,105,3)"/><text x="41.5029%" y="815.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (21 samples, 1.60%)</title><rect x="41.2529%" y="789" width="1.6043%" height="15" fill="rgb(221,225,9)"/><text x="41.5029%" y="799.50"></text></g><g><title>mysql::conn::Conn::read_packet (21 samples, 1.60%)</title><rect x="41.2529%" y="773" width="1.6043%" height="15" fill="rgb(224,227,45)"/><text x="41.5029%" y="783.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 1.60%)</title><rect x="41.2529%" y="757" width="1.6043%" height="15" fill="rgb(229,198,43)"/><text x="41.5029%" y="767.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (21 samples, 1.60%)</title><rect x="41.2529%" y="741" width="1.6043%" height="15" fill="rgb(206,209,35)"/><text x="41.5029%" y="751.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (21 samples, 1.60%)</title><rect x="41.2529%" y="725" width="1.6043%" height="15" fill="rgb(245,195,53)"/><text x="41.5029%" y="735.50"></text></g><g><title>std::sys_common::net::TcpStream::read (21 samples, 1.60%)</title><rect x="41.2529%" y="709" width="1.6043%" height="15" fill="rgb(240,92,26)"/><text x="41.5029%" y="719.50"></text></g><g><title>std::sys::unix::net::Socket::read (21 samples, 1.60%)</title><rect x="41.2529%" y="693" width="1.6043%" height="15" fill="rgb(207,40,23)"/><text x="41.5029%" y="703.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (21 samples, 1.60%)</title><rect x="41.2529%" y="677" width="1.6043%" height="15" fill="rgb(223,111,35)"/><text x="41.5029%" y="687.50"></text></g><g><title>__libc_recv (21 samples, 1.60%)</title><rect x="41.2529%" y="661" width="1.6043%" height="15" fill="rgb(229,147,28)"/><text x="41.5029%" y="671.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (22 samples, 1.68%)</title><rect x="41.2529%" y="901" width="1.6807%" height="15" fill="rgb(211,29,28)"/><text x="41.5029%" y="911.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (22 samples, 1.68%)</title><rect x="41.2529%" y="885" width="1.6807%" height="15" fill="rgb(228,72,33)"/><text x="41.5029%" y="895.50"></text></g><g><title>decor::Shim::run_on_tcp (22 samples, 1.68%)</title><rect x="41.2529%" y="869" width="1.6807%" height="15" fill="rgb(205,214,31)"/><text x="41.5029%" y="879.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (22 samples, 1.68%)</title><rect x="41.2529%" y="853" width="1.6807%" height="15" fill="rgb(224,111,15)"/><text x="41.5029%" y="863.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (22 samples, 1.68%)</title><rect x="41.2529%" y="837" width="1.6807%" height="15" fill="rgb(253,21,26)"/><text x="41.5029%" y="847.50"></text></g><g><title>core::ptr::drop_in_place (5 samples, 0.38%)</title><rect x="42.9335%" y="901" width="0.3820%" height="15" fill="rgb(245,139,43)"/><text x="43.1835%" y="911.50"></text></g><g><title>decor::Shim::create_schema (2 samples, 0.15%)</title><rect x="43.3155%" y="901" width="0.1528%" height="15" fill="rgb(252,170,7)"/><text x="43.5655%" y="911.50"></text></g><g><title>decor::query_transformer::QueryTransformer::get_mv_stmt (2 samples, 0.15%)</title><rect x="43.3155%" y="885" width="0.1528%" height="15" fill="rgb(231,118,14)"/><text x="43.5655%" y="895.50"></text></g><g><title>__kfree_skb (2 samples, 0.15%)</title><rect x="43.7739%" y="549" width="0.1528%" height="15" fill="rgb(238,83,0)"/><text x="44.0239%" y="559.50"></text></g><g><title>__local_bh_enable_ip (2 samples, 0.15%)</title><rect x="43.9267%" y="549" width="0.1528%" height="15" fill="rgb(221,39,39)"/><text x="44.1767%" y="559.50"></text></g><g><title>sk_wait_data (5 samples, 0.38%)</title><rect x="44.0794%" y="549" width="0.3820%" height="15" fill="rgb(222,119,46)"/><text x="44.3294%" y="559.50"></text></g><g><title>wait_woken (3 samples, 0.23%)</title><rect x="44.2322%" y="533" width="0.2292%" height="15" fill="rgb(222,165,49)"/><text x="44.4822%" y="543.50"></text></g><g><title>schedule_timeout (2 samples, 0.15%)</title><rect x="44.3086%" y="517" width="0.1528%" height="15" fill="rgb(219,113,52)"/><text x="44.5586%" y="527.50"></text></g><g><title>schedule (2 samples, 0.15%)</title><rect x="44.3086%" y="501" width="0.1528%" height="15" fill="rgb(214,7,15)"/><text x="44.5586%" y="511.50"></text></g><g><title>__schedule (2 samples, 0.15%)</title><rect x="44.3086%" y="485" width="0.1528%" height="15" fill="rgb(235,32,4)"/><text x="44.5586%" y="495.50"></text></g><g><title>inet_recvmsg (12 samples, 0.92%)</title><rect x="43.6211%" y="581" width="0.9167%" height="15" fill="rgb(238,90,54)"/><text x="43.8711%" y="591.50"></text></g><g><title>tcp_recvmsg (12 samples, 0.92%)</title><rect x="43.6211%" y="565" width="0.9167%" height="15" fill="rgb(213,208,19)"/><text x="43.8711%" y="575.50"></text></g><g><title>decor::Shim::run_on_tcp (15 samples, 1.15%)</title><rect x="43.4683%" y="901" width="1.1459%" height="15" fill="rgb(233,156,4)"/><text x="43.7183%" y="911.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (15 samples, 1.15%)</title><rect x="43.4683%" y="885" width="1.1459%" height="15" fill="rgb(207,194,5)"/><text x="43.7183%" y="895.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (15 samples, 1.15%)</title><rect x="43.4683%" y="869" width="1.1459%" height="15" fill="rgb(206,111,30)"/><text x="43.7183%" y="879.50"></text></g><g><title>mysql::conn::Conn::start_transaction (15 samples, 1.15%)</title><rect x="43.4683%" y="853" width="1.1459%" height="15" fill="rgb(243,70,54)"/><text x="43.7183%" y="863.50"></text></g><g><title>mysql::conn::Conn::_start_transaction (15 samples, 1.15%)</title><rect x="43.4683%" y="837" width="1.1459%" height="15" fill="rgb(242,28,8)"/><text x="43.7183%" y="847.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (15 samples, 1.15%)</title><rect x="43.4683%" y="821" width="1.1459%" height="15" fill="rgb(219,106,18)"/><text x="43.7183%" y="831.50"></text></g><g><title>mysql::conn::Conn::_query (15 samples, 1.15%)</title><rect x="43.4683%" y="805" width="1.1459%" height="15" fill="rgb(244,222,10)"/><text x="43.7183%" y="815.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (15 samples, 1.15%)</title><rect x="43.4683%" y="789" width="1.1459%" height="15" fill="rgb(236,179,52)"/><text x="43.7183%" y="799.50"></text></g><g><title>mysql::conn::Conn::read_packet (15 samples, 1.15%)</title><rect x="43.4683%" y="773" width="1.1459%" height="15" fill="rgb(213,23,39)"/><text x="43.7183%" y="783.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 1.15%)</title><rect x="43.4683%" y="757" width="1.1459%" height="15" fill="rgb(238,48,10)"/><text x="43.7183%" y="767.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (15 samples, 1.15%)</title><rect x="43.4683%" y="741" width="1.1459%" height="15" fill="rgb(251,196,23)"/><text x="43.7183%" y="751.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (15 samples, 1.15%)</title><rect x="43.4683%" y="725" width="1.1459%" height="15" fill="rgb(250,152,24)"/><text x="43.7183%" y="735.50"></text></g><g><title>std::sys_common::net::TcpStream::read (15 samples, 1.15%)</title><rect x="43.4683%" y="709" width="1.1459%" height="15" fill="rgb(209,150,17)"/><text x="43.7183%" y="719.50"></text></g><g><title>std::sys::unix::net::Socket::read (15 samples, 1.15%)</title><rect x="43.4683%" y="693" width="1.1459%" height="15" fill="rgb(234,202,34)"/><text x="43.7183%" y="703.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (15 samples, 1.15%)</title><rect x="43.4683%" y="677" width="1.1459%" height="15" fill="rgb(253,148,53)"/><text x="43.7183%" y="687.50"></text></g><g><title>__libc_recv (15 samples, 1.15%)</title><rect x="43.4683%" y="661" width="1.1459%" height="15" fill="rgb(218,129,16)"/><text x="43.7183%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (14 samples, 1.07%)</title><rect x="43.5447%" y="645" width="1.0695%" height="15" fill="rgb(216,85,19)"/><text x="43.7947%" y="655.50"></text></g><g><title>do_syscall_64 (14 samples, 1.07%)</title><rect x="43.5447%" y="629" width="1.0695%" height="15" fill="rgb(235,228,7)"/><text x="43.7947%" y="639.50"></text></g><g><title>__x64_sys_recvfrom (13 samples, 0.99%)</title><rect x="43.6211%" y="613" width="0.9931%" height="15" fill="rgb(245,175,0)"/><text x="43.8711%" y="623.50"></text></g><g><title>__sys_recvfrom (13 samples, 0.99%)</title><rect x="43.6211%" y="597" width="0.9931%" height="15" fill="rgb(208,168,36)"/><text x="43.8711%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.15%)</title><rect x="44.6142%" y="741" width="0.1528%" height="15" fill="rgb(246,171,24)"/><text x="44.8642%" y="751.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.15%)</title><rect x="44.6142%" y="725" width="0.1528%" height="15" fill="rgb(215,142,24)"/><text x="44.8642%" y="735.50"></text></g><g><title>decor::qtcache::QueryCache::insert_uid2gids_for_values (3 samples, 0.23%)</title><rect x="44.6142%" y="885" width="0.2292%" height="15" fill="rgb(250,187,7)"/><text x="44.8642%" y="895.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (3 samples, 0.23%)</title><rect x="44.6142%" y="869" width="0.2292%" height="15" fill="rgb(228,66,33)"/><text x="44.8642%" y="879.50"></text></g><g><title>mysql::conn::Conn::_query (3 samples, 0.23%)</title><rect x="44.6142%" y="853" width="0.2292%" height="15" fill="rgb(234,215,21)"/><text x="44.8642%" y="863.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (3 samples, 0.23%)</title><rect x="44.6142%" y="837" width="0.2292%" height="15" fill="rgb(222,191,20)"/><text x="44.8642%" y="847.50"></text></g><g><title>mysql::conn::Conn::read_packet (3 samples, 0.23%)</title><rect x="44.6142%" y="821" width="0.2292%" height="15" fill="rgb(245,79,54)"/><text x="44.8642%" y="831.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.23%)</title><rect x="44.6142%" y="805" width="0.2292%" height="15" fill="rgb(240,10,37)"/><text x="44.8642%" y="815.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (3 samples, 0.23%)</title><rect x="44.6142%" y="789" width="0.2292%" height="15" fill="rgb(214,192,32)"/><text x="44.8642%" y="799.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (3 samples, 0.23%)</title><rect x="44.6142%" y="773" width="0.2292%" height="15" fill="rgb(209,36,54)"/><text x="44.8642%" y="783.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (3 samples, 0.23%)</title><rect x="44.6142%" y="757" width="0.2292%" height="15" fill="rgb(220,10,11)"/><text x="44.8642%" y="767.50"></text></g><g><title>decor::query_transformer::QueryTransformer::get_mv_stmt (7 samples, 0.53%)</title><rect x="44.6142%" y="901" width="0.5348%" height="15" fill="rgb(221,106,17)"/><text x="44.8642%" y="911.50"></text></g><g><title>decor::query_transformer::QueryTransformer::expr_to_value_expr (4 samples, 0.31%)</title><rect x="44.8434%" y="885" width="0.3056%" height="15" fill="rgb(251,142,44)"/><text x="45.0934%" y="895.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (4 samples, 0.31%)</title><rect x="44.8434%" y="869" width="0.3056%" height="15" fill="rgb(238,13,15)"/><text x="45.0934%" y="879.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.31%)</title><rect x="44.8434%" y="853" width="0.3056%" height="15" fill="rgb(208,107,27)"/><text x="45.0934%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.31%)</title><rect x="44.8434%" y="837" width="0.3056%" height="15" fill="rgb(205,136,37)"/><text x="45.0934%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (4 samples, 0.31%)</title><rect x="44.8434%" y="821" width="0.3056%" height="15" fill="rgb(250,205,27)"/><text x="45.0934%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.31%)</title><rect x="44.8434%" y="805" width="0.3056%" height="15" fill="rgb(210,80,43)"/><text x="45.0934%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.23%)</title><rect x="44.9198%" y="789" width="0.2292%" height="15" fill="rgb(247,160,36)"/><text x="45.1698%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.23%)</title><rect x="44.9198%" y="773" width="0.2292%" height="15" fill="rgb(234,13,49)"/><text x="45.1698%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.23%)</title><rect x="44.9198%" y="757" width="0.2292%" height="15" fill="rgb(234,122,0)"/><text x="45.1698%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.23%)</title><rect x="44.9198%" y="741" width="0.2292%" height="15" fill="rgb(207,146,38)"/><text x="45.1698%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (3 samples, 0.23%)</title><rect x="44.9198%" y="725" width="0.2292%" height="15" fill="rgb(207,177,25)"/><text x="45.1698%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.23%)</title><rect x="44.9198%" y="709" width="0.2292%" height="15" fill="rgb(211,178,42)"/><text x="45.1698%" y="719.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.23%)</title><rect x="44.9198%" y="693" width="0.2292%" height="15" fill="rgb(230,69,54)"/><text x="45.1698%" y="703.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.23%)</title><rect x="44.9198%" y="677" width="0.2292%" height="15" fill="rgb(214,135,41)"/><text x="45.1698%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.15%)</title><rect x="45.1490%" y="853" width="0.1528%" height="15" fill="rgb(237,67,25)"/><text x="45.3990%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (4 samples, 0.31%)</title><rect x="45.3018%" y="853" width="0.3056%" height="15" fill="rgb(222,189,50)"/><text x="45.5518%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::parse_object_name (4 samples, 0.31%)</title><rect x="45.6073%" y="853" width="0.3056%" height="15" fill="rgb(245,148,34)"/><text x="45.8573%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::parse_identifier (3 samples, 0.23%)</title><rect x="45.6837%" y="837" width="0.2292%" height="15" fill="rgb(222,29,6)"/><text x="45.9337%" y="847.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (2 samples, 0.15%)</title><rect x="45.7601%" y="821" width="0.1528%" height="15" fill="rgb(221,189,43)"/><text x="46.0101%" y="831.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_lower (2 samples, 0.15%)</title><rect x="45.7601%" y="805" width="0.1528%" height="15" fill="rgb(207,36,27)"/><text x="46.0101%" y="815.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.15%)</title><rect x="45.7601%" y="789" width="0.1528%" height="15" fill="rgb(217,90,24)"/><text x="46.0101%" y="799.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.15%)</title><rect x="45.7601%" y="773" width="0.1528%" height="15" fill="rgb(224,66,35)"/><text x="46.0101%" y="783.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (2 samples, 0.15%)</title><rect x="45.7601%" y="757" width="0.1528%" height="15" fill="rgb(221,13,50)"/><text x="46.0101%" y="767.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (3 samples, 0.23%)</title><rect x="46.2949%" y="821" width="0.2292%" height="15" fill="rgb(236,68,49)"/><text x="46.5449%" y="831.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="46.3713%" y="805" width="0.1528%" height="15" fill="rgb(229,146,28)"/><text x="46.6213%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="46.3713%" y="789" width="0.1528%" height="15" fill="rgb(225,31,38)"/><text x="46.6213%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.15%)</title><rect x="46.3713%" y="773" width="0.1528%" height="15" fill="rgb(250,208,3)"/><text x="46.6213%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.15%)</title><rect x="46.3713%" y="757" width="0.1528%" height="15" fill="rgb(246,54,23)"/><text x="46.6213%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.15%)</title><rect x="46.3713%" y="741" width="0.1528%" height="15" fill="rgb(243,76,11)"/><text x="46.6213%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.15%)</title><rect x="46.3713%" y="725" width="0.1528%" height="15" fill="rgb(245,21,50)"/><text x="46.6213%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.15%)</title><rect x="46.3713%" y="709" width="0.1528%" height="15" fill="rgb(228,9,43)"/><text x="46.6213%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.15%)</title><rect x="46.3713%" y="693" width="0.1528%" height="15" fill="rgb(208,100,47)"/><text x="46.6213%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.15%)</title><rect x="46.3713%" y="677" width="0.1528%" height="15" fill="rgb(232,26,8)"/><text x="46.6213%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.15%)</title><rect x="46.3713%" y="661" width="0.1528%" height="15" fill="rgb(216,166,38)"/><text x="46.6213%" y="671.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.15%)</title><rect x="46.3713%" y="645" width="0.1528%" height="15" fill="rgb(251,202,51)"/><text x="46.6213%" y="655.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.15%)</title><rect x="46.3713%" y="629" width="0.1528%" height="15" fill="rgb(254,216,34)"/><text x="46.6213%" y="639.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.15%)</title><rect x="46.7532%" y="805" width="0.1528%" height="15" fill="rgb(251,32,27)"/><text x="47.0032%" y="815.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.15%)</title><rect x="46.7532%" y="789" width="0.1528%" height="15" fill="rgb(208,127,28)"/><text x="47.0032%" y="799.50"></text></g><g><title>core::str::validations::next_code_point (2 samples, 0.15%)</title><rect x="46.7532%" y="773" width="0.1528%" height="15" fill="rgb(224,137,22)"/><text x="47.0032%" y="783.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (29 samples, 2.22%)</title><rect x="45.1490%" y="901" width="2.2154%" height="15" fill="rgb(254,70,32)"/><text x="45.3990%" y="911.50">d..</text></g><g><title>sql_parser::parser::parse_statements (29 samples, 2.22%)</title><rect x="45.1490%" y="885" width="2.2154%" height="15" fill="rgb(229,75,37)"/><text x="45.3990%" y="895.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_statement (29 samples, 2.22%)</title><rect x="45.1490%" y="869" width="2.2154%" height="15" fill="rgb(252,64,23)"/><text x="45.3990%" y="879.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_parenthesized_column_list (19 samples, 1.45%)</title><rect x="45.9129%" y="853" width="1.4515%" height="15" fill="rgb(232,162,48)"/><text x="46.1629%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::parse_identifier (15 samples, 1.15%)</title><rect x="46.2185%" y="837" width="1.1459%" height="15" fill="rgb(246,160,12)"/><text x="46.4685%" y="847.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (10 samples, 0.76%)</title><rect x="46.6005%" y="821" width="0.7639%" height="15" fill="rgb(247,166,0)"/><text x="46.8505%" y="831.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_lower (4 samples, 0.31%)</title><rect x="47.0588%" y="805" width="0.3056%" height="15" fill="rgb(249,219,21)"/><text x="47.3088%" y="815.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (3 samples, 0.23%)</title><rect x="47.1352%" y="789" width="0.2292%" height="15" fill="rgb(205,209,3)"/><text x="47.3852%" y="799.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (3 samples, 0.23%)</title><rect x="47.1352%" y="773" width="0.2292%" height="15" fill="rgb(243,44,1)"/><text x="47.3852%" y="783.50"></text></g><g><title>hwloc::Topology::new (2 samples, 0.15%)</title><rect x="47.4408%" y="885" width="0.1528%" height="15" fill="rgb(206,159,16)"/><text x="47.6908%" y="895.50"></text></g><g><title>sk_wait_data (8 samples, 0.61%)</title><rect x="47.7464%" y="613" width="0.6112%" height="15" fill="rgb(244,77,30)"/><text x="47.9964%" y="623.50"></text></g><g><title>wait_woken (7 samples, 0.53%)</title><rect x="47.8228%" y="597" width="0.5348%" height="15" fill="rgb(218,69,12)"/><text x="48.0728%" y="607.50"></text></g><g><title>schedule_timeout (7 samples, 0.53%)</title><rect x="47.8228%" y="581" width="0.5348%" height="15" fill="rgb(212,87,7)"/><text x="48.0728%" y="591.50"></text></g><g><title>schedule (7 samples, 0.53%)</title><rect x="47.8228%" y="565" width="0.5348%" height="15" fill="rgb(245,114,25)"/><text x="48.0728%" y="575.50"></text></g><g><title>__schedule (7 samples, 0.53%)</title><rect x="47.8228%" y="549" width="0.5348%" height="15" fill="rgb(210,61,42)"/><text x="48.0728%" y="559.50"></text></g><g><title>entry_SYSCALL_64 (12 samples, 0.92%)</title><rect x="47.5936%" y="709" width="0.9167%" height="15" fill="rgb(211,52,33)"/><text x="47.8436%" y="719.50"></text></g><g><title>do_syscall_64 (12 samples, 0.92%)</title><rect x="47.5936%" y="693" width="0.9167%" height="15" fill="rgb(234,58,33)"/><text x="47.8436%" y="703.50"></text></g><g><title>__x64_sys_recvfrom (12 samples, 0.92%)</title><rect x="47.5936%" y="677" width="0.9167%" height="15" fill="rgb(220,115,36)"/><text x="47.8436%" y="687.50"></text></g><g><title>__sys_recvfrom (12 samples, 0.92%)</title><rect x="47.5936%" y="661" width="0.9167%" height="15" fill="rgb(243,153,54)"/><text x="47.8436%" y="671.50"></text></g><g><title>inet_recvmsg (12 samples, 0.92%)</title><rect x="47.5936%" y="645" width="0.9167%" height="15" fill="rgb(251,47,18)"/><text x="47.8436%" y="655.50"></text></g><g><title>tcp_recvmsg (12 samples, 0.92%)</title><rect x="47.5936%" y="629" width="0.9167%" height="15" fill="rgb(242,102,42)"/><text x="47.8436%" y="639.50"></text></g><g><title>skb_copy_datagram_iter (2 samples, 0.15%)</title><rect x="48.3575%" y="613" width="0.1528%" height="15" fill="rgb(234,31,38)"/><text x="48.6075%" y="623.50"></text></g><g><title>__skb_datagram_iter (2 samples, 0.15%)</title><rect x="48.3575%" y="597" width="0.1528%" height="15" fill="rgb(221,117,51)"/><text x="48.6075%" y="607.50"></text></g><g><title>lobsters::main (15 samples, 1.15%)</title><rect x="47.4408%" y="901" width="1.1459%" height="15" fill="rgb(212,20,18)"/><text x="47.6908%" y="911.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (13 samples, 0.99%)</title><rect x="47.5936%" y="885" width="0.9931%" height="15" fill="rgb(245,133,36)"/><text x="47.8436%" y="895.50"></text></g><g><title>mysql::conn::Conn::_query (13 samples, 0.99%)</title><rect x="47.5936%" y="869" width="0.9931%" height="15" fill="rgb(212,6,19)"/><text x="47.8436%" y="879.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (13 samples, 0.99%)</title><rect x="47.5936%" y="853" width="0.9931%" height="15" fill="rgb(218,1,36)"/><text x="47.8436%" y="863.50"></text></g><g><title>mysql::conn::Conn::read_packet (13 samples, 0.99%)</title><rect x="47.5936%" y="837" width="0.9931%" height="15" fill="rgb(246,84,54)"/><text x="47.8436%" y="847.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.99%)</title><rect x="47.5936%" y="821" width="0.9931%" height="15" fill="rgb(242,110,6)"/><text x="47.8436%" y="831.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (13 samples, 0.99%)</title><rect x="47.5936%" y="805" width="0.9931%" height="15" fill="rgb(214,47,5)"/><text x="47.8436%" y="815.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (13 samples, 0.99%)</title><rect x="47.5936%" y="789" width="0.9931%" height="15" fill="rgb(218,159,25)"/><text x="47.8436%" y="799.50"></text></g><g><title>std::sys_common::net::TcpStream::read (13 samples, 0.99%)</title><rect x="47.5936%" y="773" width="0.9931%" height="15" fill="rgb(215,211,28)"/><text x="47.8436%" y="783.50"></text></g><g><title>std::sys::unix::net::Socket::read (13 samples, 0.99%)</title><rect x="47.5936%" y="757" width="0.9931%" height="15" fill="rgb(238,59,32)"/><text x="47.8436%" y="767.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (13 samples, 0.99%)</title><rect x="47.5936%" y="741" width="0.9931%" height="15" fill="rgb(226,82,3)"/><text x="47.8436%" y="751.50"></text></g><g><title>__libc_recv (13 samples, 0.99%)</title><rect x="47.5936%" y="725" width="0.9931%" height="15" fill="rgb(240,164,32)"/><text x="47.8436%" y="735.50"></text></g><g><title>__GI___libc_free (2 samples, 0.15%)</title><rect x="48.8923%" y="853" width="0.1528%" height="15" fill="rgb(232,46,7)"/><text x="49.1423%" y="863.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.15%)</title><rect x="49.0451%" y="853" width="0.1528%" height="15" fill="rgb(229,129,53)"/><text x="49.2951%" y="863.50"></text></g><g><title>decor::query_transformer::QueryTransformer::get_mv_stmt (12 samples, 0.92%)</title><rect x="48.6631%" y="869" width="0.9167%" height="15" fill="rgb(234,188,29)"/><text x="48.9131%" y="879.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="49.7326%" y="821" width="0.1528%" height="15" fill="rgb(246,141,4)"/><text x="49.9826%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="49.7326%" y="805" width="0.1528%" height="15" fill="rgb(229,23,39)"/><text x="49.9826%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.15%)</title><rect x="49.7326%" y="789" width="0.1528%" height="15" fill="rgb(206,12,3)"/><text x="49.9826%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.15%)</title><rect x="49.7326%" y="773" width="0.1528%" height="15" fill="rgb(252,226,20)"/><text x="49.9826%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.15%)</title><rect x="49.7326%" y="757" width="0.1528%" height="15" fill="rgb(216,123,35)"/><text x="49.9826%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.15%)</title><rect x="49.7326%" y="741" width="0.1528%" height="15" fill="rgb(212,68,40)"/><text x="49.9826%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.15%)</title><rect x="49.7326%" y="725" width="0.1528%" height="15" fill="rgb(254,125,32)"/><text x="49.9826%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.15%)</title><rect x="49.7326%" y="709" width="0.1528%" height="15" fill="rgb(253,97,22)"/><text x="49.9826%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.15%)</title><rect x="49.7326%" y="693" width="0.1528%" height="15" fill="rgb(241,101,14)"/><text x="49.9826%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.15%)</title><rect x="49.7326%" y="677" width="0.1528%" height="15" fill="rgb(238,103,29)"/><text x="49.9826%" y="687.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.15%)</title><rect x="49.7326%" y="661" width="0.1528%" height="15" fill="rgb(233,195,47)"/><text x="49.9826%" y="671.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.15%)</title><rect x="49.7326%" y="645" width="0.1528%" height="15" fill="rgb(246,218,30)"/><text x="49.9826%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (5 samples, 0.38%)</title><rect x="49.5798%" y="853" width="0.3820%" height="15" fill="rgb(219,145,47)"/><text x="49.8298%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (3 samples, 0.23%)</title><rect x="49.7326%" y="837" width="0.2292%" height="15" fill="rgb(243,12,26)"/><text x="49.9826%" y="847.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.15%)</title><rect x="49.9618%" y="837" width="0.1528%" height="15" fill="rgb(214,87,16)"/><text x="50.2118%" y="847.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (4 samples, 0.31%)</title><rect x="49.9618%" y="853" width="0.3056%" height="15" fill="rgb(208,99,42)"/><text x="50.2118%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (2 samples, 0.15%)</title><rect x="50.1146%" y="837" width="0.1528%" height="15" fill="rgb(253,99,2)"/><text x="50.3646%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (2 samples, 0.15%)</title><rect x="50.1146%" y="821" width="0.1528%" height="15" fill="rgb(220,168,23)"/><text x="50.3646%" y="831.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.15%)</title><rect x="50.1146%" y="805" width="0.1528%" height="15" fill="rgb(242,38,24)"/><text x="50.3646%" y="815.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.15%)</title><rect x="50.1146%" y="789" width="0.1528%" height="15" fill="rgb(225,182,9)"/><text x="50.3646%" y="799.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (4 samples, 0.31%)</title><rect x="50.4202%" y="837" width="0.3056%" height="15" fill="rgb(243,178,37)"/><text x="50.6702%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.31%)</title><rect x="50.4202%" y="821" width="0.3056%" height="15" fill="rgb(232,139,19)"/><text x="50.6702%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.31%)</title><rect x="50.4202%" y="805" width="0.3056%" height="15" fill="rgb(225,201,24)"/><text x="50.6702%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (4 samples, 0.31%)</title><rect x="50.4202%" y="789" width="0.3056%" height="15" fill="rgb(221,47,46)"/><text x="50.6702%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.31%)</title><rect x="50.4202%" y="773" width="0.3056%" height="15" fill="rgb(249,23,13)"/><text x="50.6702%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.31%)</title><rect x="50.4202%" y="757" width="0.3056%" height="15" fill="rgb(219,9,5)"/><text x="50.6702%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (4 samples, 0.31%)</title><rect x="50.4202%" y="741" width="0.3056%" height="15" fill="rgb(254,171,16)"/><text x="50.6702%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.31%)</title><rect x="50.4202%" y="725" width="0.3056%" height="15" fill="rgb(230,171,20)"/><text x="50.6702%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.31%)</title><rect x="50.4202%" y="709" width="0.3056%" height="15" fill="rgb(210,71,41)"/><text x="50.6702%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (4 samples, 0.31%)</title><rect x="50.4202%" y="693" width="0.3056%" height="15" fill="rgb(206,173,20)"/><text x="50.6702%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.31%)</title><rect x="50.4202%" y="677" width="0.3056%" height="15" fill="rgb(233,88,34)"/><text x="50.6702%" y="687.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.31%)</title><rect x="50.4202%" y="661" width="0.3056%" height="15" fill="rgb(223,209,46)"/><text x="50.6702%" y="671.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.31%)</title><rect x="50.4202%" y="645" width="0.3056%" height="15" fill="rgb(250,43,18)"/><text x="50.6702%" y="655.50"></text></g><g><title>_int_malloc (3 samples, 0.23%)</title><rect x="50.4966%" y="629" width="0.2292%" height="15" fill="rgb(208,13,10)"/><text x="50.7466%" y="639.50"></text></g><g><title>_int_free (2 samples, 0.15%)</title><rect x="51.2605%" y="773" width="0.1528%" height="15" fill="rgb(212,200,36)"/><text x="51.5105%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (7 samples, 0.53%)</title><rect x="51.2605%" y="821" width="0.5348%" height="15" fill="rgb(225,90,30)"/><text x="51.5105%" y="831.50"></text></g><g><title>__GI___libc_realloc (7 samples, 0.53%)</title><rect x="51.2605%" y="805" width="0.5348%" height="15" fill="rgb(236,182,39)"/><text x="51.5105%" y="815.50"></text></g><g><title>_int_realloc (7 samples, 0.53%)</title><rect x="51.2605%" y="789" width="0.5348%" height="15" fill="rgb(212,144,35)"/><text x="51.5105%" y="799.50"></text></g><g><title>_int_malloc (5 samples, 0.38%)</title><rect x="51.4133%" y="773" width="0.3820%" height="15" fill="rgb(228,63,44)"/><text x="51.6633%" y="783.50"></text></g><g><title>unlink_chunk.constprop.0 (2 samples, 0.15%)</title><rect x="51.6425%" y="757" width="0.1528%" height="15" fill="rgb(228,109,6)"/><text x="51.8925%" y="767.50"></text></g><g><title>sql_parser::tokenizer::PeekableChars::next (2 samples, 0.15%)</title><rect x="52.1008%" y="805" width="0.1528%" height="15" fill="rgb(238,117,24)"/><text x="52.3508%" y="815.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (9 samples, 0.69%)</title><rect x="51.7953%" y="821" width="0.6875%" height="15" fill="rgb(242,26,26)"/><text x="52.0453%" y="831.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_word (2 samples, 0.15%)</title><rect x="52.3300%" y="805" width="0.1528%" height="15" fill="rgb(221,92,48)"/><text x="52.5800%" y="815.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.15%)</title><rect x="52.6356%" y="789" width="0.1528%" height="15" fill="rgb(209,209,32)"/><text x="52.8856%" y="799.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (55 samples, 4.20%)</title><rect x="48.6631%" y="901" width="4.2017%" height="15" fill="rgb(221,70,22)"/><text x="48.9131%" y="911.50">msql_..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (55 samples, 4.20%)</title><rect x="48.6631%" y="885" width="4.2017%" height="15" fill="rgb(248,145,5)"/><text x="48.9131%" y="895.50">&lt;deco..</text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (43 samples, 3.28%)</title><rect x="49.5798%" y="869" width="3.2850%" height="15" fill="rgb(226,116,26)"/><text x="49.8298%" y="879.50">dec..</text></g><g><title>sql_parser::parser::parse_statements (34 samples, 2.60%)</title><rect x="50.2674%" y="853" width="2.5974%" height="15" fill="rgb(244,5,17)"/><text x="50.5174%" y="863.50">sq..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (23 samples, 1.76%)</title><rect x="51.1077%" y="837" width="1.7571%" height="15" fill="rgb(252,159,33)"/><text x="51.3577%" y="847.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_number (5 samples, 0.38%)</title><rect x="52.4828%" y="821" width="0.3820%" height="15" fill="rgb(206,71,0)"/><text x="52.7328%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.23%)</title><rect x="52.6356%" y="805" width="0.2292%" height="15" fill="rgb(233,118,54)"/><text x="52.8856%" y="815.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (2 samples, 0.15%)</title><rect x="52.8648%" y="901" width="0.1528%" height="15" fill="rgb(234,83,48)"/><text x="53.1148%" y="911.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (3 samples, 0.23%)</title><rect x="53.0940%" y="901" width="0.2292%" height="15" fill="rgb(228,3,54)"/><text x="53.3440%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (14 samples, 1.07%)</title><rect x="54.1635%" y="725" width="1.0695%" height="15" fill="rgb(226,155,13)"/><text x="54.4135%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (14 samples, 1.07%)</title><rect x="54.1635%" y="709" width="1.0695%" height="15" fill="rgb(241,28,37)"/><text x="54.4135%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (14 samples, 1.07%)</title><rect x="54.1635%" y="693" width="1.0695%" height="15" fill="rgb(233,93,10)"/><text x="54.4135%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (14 samples, 1.07%)</title><rect x="54.1635%" y="677" width="1.0695%" height="15" fill="rgb(225,113,19)"/><text x="54.4135%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (14 samples, 1.07%)</title><rect x="54.1635%" y="661" width="1.0695%" height="15" fill="rgb(241,2,18)"/><text x="54.4135%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (15 samples, 1.15%)</title><rect x="54.1635%" y="789" width="1.1459%" height="15" fill="rgb(228,207,21)"/><text x="54.4135%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (15 samples, 1.15%)</title><rect x="54.1635%" y="773" width="1.1459%" height="15" fill="rgb(213,211,35)"/><text x="54.4135%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (15 samples, 1.15%)</title><rect x="54.1635%" y="757" width="1.1459%" height="15" fill="rgb(209,83,10)"/><text x="54.4135%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (15 samples, 1.15%)</title><rect x="54.1635%" y="741" width="1.1459%" height="15" fill="rgb(209,164,1)"/><text x="54.4135%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (20 samples, 1.53%)</title><rect x="54.0107%" y="821" width="1.5279%" height="15" fill="rgb(213,184,43)"/><text x="54.2607%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::expected (19 samples, 1.45%)</title><rect x="54.0871%" y="805" width="1.4515%" height="15" fill="rgb(231,61,34)"/><text x="54.3371%" y="815.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.15%)</title><rect x="55.5386%" y="805" width="0.1528%" height="15" fill="rgb(235,75,3)"/><text x="55.7886%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (3 samples, 0.23%)</title><rect x="55.5386%" y="821" width="0.2292%" height="15" fill="rgb(220,106,47)"/><text x="55.7886%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (32 samples, 2.44%)</title><rect x="53.4759%" y="901" width="2.4446%" height="15" fill="rgb(210,196,33)"/><text x="53.7259%" y="911.50">sq..</text></g><g><title>sql_parser::parser::Parser::parse_query_body (32 samples, 2.44%)</title><rect x="53.4759%" y="885" width="2.4446%" height="15" fill="rgb(229,154,42)"/><text x="53.7259%" y="895.50">sq..</text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (32 samples, 2.44%)</title><rect x="53.4759%" y="869" width="2.4446%" height="15" fill="rgb(228,114,26)"/><text x="53.7259%" y="879.50">sq..</text></g><g><title>sql_parser::parser::Parser::check_descent (32 samples, 2.44%)</title><rect x="53.4759%" y="853" width="2.4446%" height="15" fill="rgb(208,144,1)"/><text x="53.7259%" y="863.50">sq..</text></g><g><title>sql_parser::parser::Parser::parse_prefix (32 samples, 2.44%)</title><rect x="53.4759%" y="837" width="2.4446%" height="15" fill="rgb(239,112,37)"/><text x="53.7259%" y="847.50">sq..</text></g><g><title>sql_parser::parser::Parser::parse_value (2 samples, 0.15%)</title><rect x="55.7678%" y="821" width="0.1528%" height="15" fill="rgb(210,96,50)"/><text x="56.0178%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (2 samples, 0.15%)</title><rect x="55.9969%" y="901" width="0.1528%" height="15" fill="rgb(222,178,2)"/><text x="56.2469%" y="911.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (5 samples, 0.38%)</title><rect x="56.1497%" y="901" width="0.3820%" height="15" fill="rgb(226,74,18)"/><text x="56.3997%" y="911.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (4 samples, 0.31%)</title><rect x="56.2261%" y="885" width="0.3056%" height="15" fill="rgb(225,67,54)"/><text x="56.4761%" y="895.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (4 samples, 0.31%)</title><rect x="56.2261%" y="869" width="0.3056%" height="15" fill="rgb(251,92,32)"/><text x="56.4761%" y="879.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (4 samples, 0.31%)</title><rect x="56.2261%" y="853" width="0.3056%" height="15" fill="rgb(228,149,22)"/><text x="56.4761%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (4 samples, 0.31%)</title><rect x="56.2261%" y="837" width="0.3056%" height="15" fill="rgb(243,54,13)"/><text x="56.4761%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::expected (4 samples, 0.31%)</title><rect x="56.2261%" y="821" width="0.3056%" height="15" fill="rgb(243,180,28)"/><text x="56.4761%" y="831.50"></text></g><g><title>alloc::fmt::format (3 samples, 0.23%)</title><rect x="56.3025%" y="805" width="0.2292%" height="15" fill="rgb(208,167,24)"/><text x="56.5525%" y="815.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.23%)</title><rect x="56.3025%" y="789" width="0.2292%" height="15" fill="rgb(245,73,45)"/><text x="56.5525%" y="799.50"></text></g><g><title>core::fmt::write (3 samples, 0.23%)</title><rect x="56.3025%" y="773" width="0.2292%" height="15" fill="rgb(237,203,48)"/><text x="56.5525%" y="783.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.15%)</title><rect x="56.3789%" y="757" width="0.1528%" height="15" fill="rgb(211,197,16)"/><text x="56.6289%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.15%)</title><rect x="56.3789%" y="741" width="0.1528%" height="15" fill="rgb(243,99,51)"/><text x="56.6289%" y="751.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.15%)</title><rect x="56.3789%" y="725" width="0.1528%" height="15" fill="rgb(215,123,29)"/><text x="56.6289%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.15%)</title><rect x="56.3789%" y="709" width="0.1528%" height="15" fill="rgb(239,186,37)"/><text x="56.6289%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.15%)</title><rect x="56.3789%" y="693" width="0.1528%" height="15" fill="rgb(252,136,39)"/><text x="56.6289%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (2 samples, 0.15%)</title><rect x="56.3789%" y="677" width="0.1528%" height="15" fill="rgb(223,213,32)"/><text x="56.6289%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.46%)</title><rect x="56.9137%" y="837" width="0.4584%" height="15" fill="rgb(233,115,5)"/><text x="57.1637%" y="847.50"></text></g><g><title>__GI___libc_realloc (5 samples, 0.38%)</title><rect x="56.9901%" y="821" width="0.3820%" height="15" fill="rgb(207,226,44)"/><text x="57.2401%" y="831.50"></text></g><g><title>_int_realloc (5 samples, 0.38%)</title><rect x="56.9901%" y="805" width="0.3820%" height="15" fill="rgb(208,126,0)"/><text x="57.2401%" y="815.50"></text></g><g><title>_int_malloc (5 samples, 0.38%)</title><rect x="56.9901%" y="789" width="0.3820%" height="15" fill="rgb(244,66,21)"/><text x="57.2401%" y="799.50"></text></g><g><title>malloc_consolidate (3 samples, 0.23%)</title><rect x="57.1429%" y="773" width="0.2292%" height="15" fill="rgb(222,97,12)"/><text x="57.3929%" y="783.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (11 samples, 0.84%)</title><rect x="56.6081%" y="853" width="0.8403%" height="15" fill="rgb(219,213,19)"/><text x="56.8581%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (18 samples, 1.38%)</title><rect x="56.5317%" y="901" width="1.3751%" height="15" fill="rgb(252,169,30)"/><text x="56.7817%" y="911.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (18 samples, 1.38%)</title><rect x="56.5317%" y="885" width="1.3751%" height="15" fill="rgb(206,32,51)"/><text x="56.7817%" y="895.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (18 samples, 1.38%)</title><rect x="56.5317%" y="869" width="1.3751%" height="15" fill="rgb(250,172,42)"/><text x="56.7817%" y="879.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (6 samples, 0.46%)</title><rect x="57.4484%" y="853" width="0.4584%" height="15" fill="rgb(209,34,43)"/><text x="57.6984%" y="863.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.15%)</title><rect x="57.7540%" y="837" width="0.1528%" height="15" fill="rgb(223,11,35)"/><text x="58.0040%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (10 samples, 0.76%)</title><rect x="57.9832%" y="853" width="0.7639%" height="15" fill="rgb(251,219,26)"/><text x="58.2332%" y="863.50"></text></g><g><title>__memcmp_avx2_movbe (4 samples, 0.31%)</title><rect x="58.4416%" y="837" width="0.3056%" height="15" fill="rgb(231,119,3)"/><text x="58.6916%" y="847.50"></text></g><g><title>sql_parser::parser::parse_statements (12 samples, 0.92%)</title><rect x="57.9068%" y="901" width="0.9167%" height="15" fill="rgb(216,97,11)"/><text x="58.1568%" y="911.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (12 samples, 0.92%)</title><rect x="57.9068%" y="885" width="0.9167%" height="15" fill="rgb(223,59,9)"/><text x="58.1568%" y="895.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (12 samples, 0.92%)</title><rect x="57.9068%" y="869" width="0.9167%" height="15" fill="rgb(233,93,31)"/><text x="58.1568%" y="879.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (2 samples, 0.15%)</title><rect x="59.0527%" y="757" width="0.1528%" height="15" fill="rgb(239,81,33)"/><text x="59.3027%" y="767.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.15%)</title><rect x="59.0527%" y="741" width="0.1528%" height="15" fill="rgb(213,120,34)"/><text x="59.3027%" y="751.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (2 samples, 0.15%)</title><rect x="59.0527%" y="725" width="0.1528%" height="15" fill="rgb(243,49,53)"/><text x="59.3027%" y="735.50"></text></g><g><title>mysql::conn::Conn::read_packet (2 samples, 0.15%)</title><rect x="59.0527%" y="709" width="0.1528%" height="15" fill="rgb(247,216,33)"/><text x="59.3027%" y="719.50"></text></g><g><title>enqueue_task (2 samples, 0.15%)</title><rect x="60.5042%" y="101" width="0.1528%" height="15" fill="rgb(226,26,14)"/><text x="60.7542%" y="111.50"></text></g><g><title>enqueue_task_fair (2 samples, 0.15%)</title><rect x="60.6570%" y="101" width="0.1528%" height="15" fill="rgb(215,49,53)"/><text x="60.9070%" y="111.50"></text></g><g><title>select_task_rq_fair (2 samples, 0.15%)</title><rect x="60.8098%" y="101" width="0.1528%" height="15" fill="rgb(245,162,40)"/><text x="61.0598%" y="111.50"></text></g><g><title>__wake_up_common (11 samples, 0.84%)</title><rect x="60.1986%" y="149" width="0.8403%" height="15" fill="rgb(229,68,17)"/><text x="60.4486%" y="159.50"></text></g><g><title>pollwake (10 samples, 0.76%)</title><rect x="60.2750%" y="133" width="0.7639%" height="15" fill="rgb(213,182,10)"/><text x="60.5250%" y="143.50"></text></g><g><title>try_to_wake_up (9 samples, 0.69%)</title><rect x="60.3514%" y="117" width="0.6875%" height="15" fill="rgb(245,125,30)"/><text x="60.6014%" y="127.50"></text></g><g><title>sock_def_readable (13 samples, 0.99%)</title><rect x="60.1222%" y="181" width="0.9931%" height="15" fill="rgb(232,202,2)"/><text x="60.3722%" y="191.50"></text></g><g><title>__wake_up_common_lock (12 samples, 0.92%)</title><rect x="60.1986%" y="165" width="0.9167%" height="15" fill="rgb(237,140,51)"/><text x="60.4486%" y="175.50"></text></g><g><title>__kfree_skb (2 samples, 0.15%)</title><rect x="61.1154%" y="165" width="0.1528%" height="15" fill="rgb(236,157,25)"/><text x="61.3654%" y="175.50"></text></g><g><title>kfree (2 samples, 0.15%)</title><rect x="61.1154%" y="149" width="0.1528%" height="15" fill="rgb(219,209,0)"/><text x="61.3654%" y="159.50"></text></g><g><title>tcp_ack (4 samples, 0.31%)</title><rect x="61.1154%" y="181" width="0.3056%" height="15" fill="rgb(240,116,54)"/><text x="61.3654%" y="191.50"></text></g><g><title>__ip_queue_xmit (27 samples, 2.06%)</title><rect x="59.5111%" y="453" width="2.0626%" height="15" fill="rgb(216,10,36)"/><text x="59.7611%" y="463.50">_..</text></g><g><title>ip_output (27 samples, 2.06%)</title><rect x="59.5111%" y="437" width="2.0626%" height="15" fill="rgb(222,72,44)"/><text x="59.7611%" y="447.50">i..</text></g><g><title>ip_finish_output2 (26 samples, 1.99%)</title><rect x="59.5875%" y="421" width="1.9862%" height="15" fill="rgb(232,159,9)"/><text x="59.8375%" y="431.50">i..</text></g><g><title>__local_bh_enable_ip (26 samples, 1.99%)</title><rect x="59.5875%" y="405" width="1.9862%" height="15" fill="rgb(210,39,32)"/><text x="59.8375%" y="415.50">_..</text></g><g><title>do_softirq (26 samples, 1.99%)</title><rect x="59.5875%" y="389" width="1.9862%" height="15" fill="rgb(216,194,45)"/><text x="59.8375%" y="399.50">d..</text></g><g><title>do_softirq_own_stack (26 samples, 1.99%)</title><rect x="59.5875%" y="373" width="1.9862%" height="15" fill="rgb(218,18,35)"/><text x="59.8375%" y="383.50">d..</text></g><g><title>__do_softirq (26 samples, 1.99%)</title><rect x="59.5875%" y="357" width="1.9862%" height="15" fill="rgb(207,83,51)"/><text x="59.8375%" y="367.50">_..</text></g><g><title>net_rx_action (26 samples, 1.99%)</title><rect x="59.5875%" y="341" width="1.9862%" height="15" fill="rgb(225,63,43)"/><text x="59.8375%" y="351.50">n..</text></g><g><title>process_backlog (25 samples, 1.91%)</title><rect x="59.6639%" y="325" width="1.9099%" height="15" fill="rgb(207,57,36)"/><text x="59.9139%" y="335.50">p..</text></g><g><title>__netif_receive_skb_one_core (25 samples, 1.91%)</title><rect x="59.6639%" y="309" width="1.9099%" height="15" fill="rgb(216,99,33)"/><text x="59.9139%" y="319.50">_..</text></g><g><title>ip_rcv (25 samples, 1.91%)</title><rect x="59.6639%" y="293" width="1.9099%" height="15" fill="rgb(225,42,16)"/><text x="59.9139%" y="303.50">i..</text></g><g><title>ip_local_deliver (25 samples, 1.91%)</title><rect x="59.6639%" y="277" width="1.9099%" height="15" fill="rgb(220,201,45)"/><text x="59.9139%" y="287.50">i..</text></g><g><title>ip_local_deliver_finish (25 samples, 1.91%)</title><rect x="59.6639%" y="261" width="1.9099%" height="15" fill="rgb(225,33,4)"/><text x="59.9139%" y="271.50">i..</text></g><g><title>ip_protocol_deliver_rcu (24 samples, 1.83%)</title><rect x="59.7403%" y="245" width="1.8335%" height="15" fill="rgb(224,33,50)"/><text x="59.9903%" y="255.50">i..</text></g><g><title>tcp_v4_rcv (23 samples, 1.76%)</title><rect x="59.8167%" y="229" width="1.7571%" height="15" fill="rgb(246,198,51)"/><text x="60.0667%" y="239.50"></text></g><g><title>tcp_v4_do_rcv (21 samples, 1.60%)</title><rect x="59.9694%" y="213" width="1.6043%" height="15" fill="rgb(205,22,4)"/><text x="60.2194%" y="223.50"></text></g><g><title>tcp_rcv_established (21 samples, 1.60%)</title><rect x="59.9694%" y="197" width="1.6043%" height="15" fill="rgb(206,3,8)"/><text x="60.2194%" y="207.50"></text></g><g><title>__tcp_transmit_skb (29 samples, 2.22%)</title><rect x="59.4347%" y="469" width="2.2154%" height="15" fill="rgb(251,23,15)"/><text x="59.6847%" y="479.50">_..</text></g><g><title>__tcp_push_pending_frames (31 samples, 2.37%)</title><rect x="59.4347%" y="501" width="2.3682%" height="15" fill="rgb(252,88,28)"/><text x="59.6847%" y="511.50">__..</text></g><g><title>tcp_write_xmit (31 samples, 2.37%)</title><rect x="59.4347%" y="485" width="2.3682%" height="15" fill="rgb(212,127,14)"/><text x="59.6847%" y="495.50">tc..</text></g><g><title>skb_do_copy_data_nocache (2 samples, 0.15%)</title><rect x="61.8793%" y="501" width="0.1528%" height="15" fill="rgb(247,145,37)"/><text x="62.1293%" y="511.50"></text></g><g><title>do_syscall_64 (38 samples, 2.90%)</title><rect x="59.3583%" y="597" width="2.9030%" height="15" fill="rgb(209,117,53)"/><text x="59.6083%" y="607.50">do..</text></g><g><title>__x64_sys_sendto (38 samples, 2.90%)</title><rect x="59.3583%" y="581" width="2.9030%" height="15" fill="rgb(212,90,42)"/><text x="59.6083%" y="591.50">__..</text></g><g><title>__sys_sendto (38 samples, 2.90%)</title><rect x="59.3583%" y="565" width="2.9030%" height="15" fill="rgb(218,164,37)"/><text x="59.6083%" y="575.50">__..</text></g><g><title>sock_sendmsg (38 samples, 2.90%)</title><rect x="59.3583%" y="549" width="2.9030%" height="15" fill="rgb(246,65,34)"/><text x="59.6083%" y="559.50">so..</text></g><g><title>tcp_sendmsg (38 samples, 2.90%)</title><rect x="59.3583%" y="533" width="2.9030%" height="15" fill="rgb(231,100,33)"/><text x="59.6083%" y="543.50">tc..</text></g><g><title>tcp_sendmsg_locked (38 samples, 2.90%)</title><rect x="59.3583%" y="517" width="2.9030%" height="15" fill="rgb(228,126,14)"/><text x="59.6083%" y="527.50">tc..</text></g><g><title>tcp_send_mss (2 samples, 0.15%)</title><rect x="62.1085%" y="501" width="0.1528%" height="15" fill="rgb(215,173,21)"/><text x="62.3585%" y="511.50"></text></g><g><title>tcp_current_mss (2 samples, 0.15%)</title><rect x="62.1085%" y="485" width="0.1528%" height="15" fill="rgb(210,6,40)"/><text x="62.3585%" y="495.50"></text></g><g><title>mysql::conn::Conn::start_transaction (40 samples, 3.06%)</title><rect x="59.2819%" y="757" width="3.0558%" height="15" fill="rgb(212,48,18)"/><text x="59.5319%" y="767.50">mys..</text></g><g><title>mysql::conn::Conn::_start_transaction (40 samples, 3.06%)</title><rect x="59.2819%" y="741" width="3.0558%" height="15" fill="rgb(230,214,11)"/><text x="59.5319%" y="751.50">mys..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (40 samples, 3.06%)</title><rect x="59.2819%" y="725" width="3.0558%" height="15" fill="rgb(254,105,39)"/><text x="59.5319%" y="735.50">mys..</text></g><g><title>mysql::conn::Conn::_query (40 samples, 3.06%)</title><rect x="59.2819%" y="709" width="3.0558%" height="15" fill="rgb(245,158,5)"/><text x="59.5319%" y="719.50">mys..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (40 samples, 3.06%)</title><rect x="59.2819%" y="693" width="3.0558%" height="15" fill="rgb(249,208,11)"/><text x="59.5319%" y="703.50">mys..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (39 samples, 2.98%)</title><rect x="59.3583%" y="677" width="2.9794%" height="15" fill="rgb(210,39,28)"/><text x="59.6083%" y="687.50">std..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (39 samples, 2.98%)</title><rect x="59.3583%" y="661" width="2.9794%" height="15" fill="rgb(211,56,53)"/><text x="59.6083%" y="671.50">&lt;st..</text></g><g><title>std::sys_common::net::TcpStream::write (39 samples, 2.98%)</title><rect x="59.3583%" y="645" width="2.9794%" height="15" fill="rgb(226,201,30)"/><text x="59.6083%" y="655.50">std..</text></g><g><title>__libc_send (39 samples, 2.98%)</title><rect x="59.3583%" y="629" width="2.9794%" height="15" fill="rgb(239,101,34)"/><text x="59.6083%" y="639.50">__l..</text></g><g><title>entry_SYSCALL_64 (39 samples, 2.98%)</title><rect x="59.3583%" y="613" width="2.9794%" height="15" fill="rgb(226,209,5)"/><text x="59.6083%" y="623.50">ent..</text></g><g><title>start_thread (44 samples, 3.36%)</title><rect x="59.0527%" y="901" width="3.3613%" height="15" fill="rgb(250,105,47)"/><text x="59.3027%" y="911.50">sta..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (44 samples, 3.36%)</title><rect x="59.0527%" y="885" width="3.3613%" height="15" fill="rgb(230,72,3)"/><text x="59.3027%" y="895.50">std..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (44 samples, 3.36%)</title><rect x="59.0527%" y="869" width="3.3613%" height="15" fill="rgb(232,218,39)"/><text x="59.3027%" y="879.50">&lt;al..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (44 samples, 3.36%)</title><rect x="59.0527%" y="853" width="3.3613%" height="15" fill="rgb(248,166,6)"/><text x="59.3027%" y="863.50">&lt;al..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (44 samples, 3.36%)</title><rect x="59.0527%" y="837" width="3.3613%" height="15" fill="rgb(247,89,20)"/><text x="59.3027%" y="847.50">cor..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (44 samples, 3.36%)</title><rect x="59.0527%" y="821" width="3.3613%" height="15" fill="rgb(248,130,54)"/><text x="59.3027%" y="831.50">std..</text></g><g><title>decor::Shim::run_on_tcp (44 samples, 3.36%)</title><rect x="59.0527%" y="805" width="3.3613%" height="15" fill="rgb(234,196,4)"/><text x="59.3027%" y="815.50">dec..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (44 samples, 3.36%)</title><rect x="59.0527%" y="789" width="3.3613%" height="15" fill="rgb(250,143,31)"/><text x="59.3027%" y="799.50">msq..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (44 samples, 3.36%)</title><rect x="59.0527%" y="773" width="3.3613%" height="15" fill="rgb(211,110,34)"/><text x="59.3027%" y="783.50">&lt;de..</text></g><g><title>std::rt::lang_start_internal (3 samples, 0.23%)</title><rect x="62.4905%" y="901" width="0.2292%" height="15" fill="rgb(215,124,48)"/><text x="62.7405%" y="911.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.23%)</title><rect x="62.4905%" y="885" width="0.2292%" height="15" fill="rgb(216,46,13)"/><text x="62.7405%" y="895.50"></text></g><g><title>std::panicking::try (3 samples, 0.23%)</title><rect x="62.4905%" y="869" width="0.2292%" height="15" fill="rgb(205,184,25)"/><text x="62.7405%" y="879.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.23%)</title><rect x="62.4905%" y="853" width="0.2292%" height="15" fill="rgb(228,1,10)"/><text x="62.7405%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (3 samples, 0.23%)</title><rect x="62.4905%" y="837" width="0.2292%" height="15" fill="rgb(213,116,27)"/><text x="62.7405%" y="847.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (3 samples, 0.23%)</title><rect x="62.4905%" y="821" width="0.2292%" height="15" fill="rgb(241,95,50)"/><text x="62.7405%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3 samples, 0.23%)</title><rect x="62.4905%" y="805" width="0.2292%" height="15" fill="rgb(238,48,32)"/><text x="62.7405%" y="815.50"></text></g><g><title>lobsters::main (3 samples, 0.23%)</title><rect x="62.4905%" y="789" width="0.2292%" height="15" fill="rgb(235,113,49)"/><text x="62.7405%" y="799.50"></text></g><g><title>hwloc::Topology::new (3 samples, 0.23%)</title><rect x="62.4905%" y="773" width="0.2292%" height="15" fill="rgb(205,127,43)"/><text x="62.7405%" y="783.50"></text></g><g><title>hwloc_topology_load (3 samples, 0.23%)</title><rect x="62.4905%" y="757" width="0.2292%" height="15" fill="rgb(250,162,2)"/><text x="62.7405%" y="767.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.23%)</title><rect x="62.4905%" y="741" width="0.2292%" height="15" fill="rgb(220,13,41)"/><text x="62.7405%" y="751.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.23%)</title><rect x="62.4905%" y="725" width="0.2292%" height="15" fill="rgb(249,221,25)"/><text x="62.7405%" y="735.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.23%)</title><rect x="62.4905%" y="709" width="0.2292%" height="15" fill="rgb(215,208,19)"/><text x="62.7405%" y="719.50"></text></g><g><title>__GI___openat (3 samples, 0.23%)</title><rect x="62.4905%" y="693" width="0.2292%" height="15" fill="rgb(236,175,2)"/><text x="62.7405%" y="703.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.23%)</title><rect x="62.4905%" y="677" width="0.2292%" height="15" fill="rgb(241,52,2)"/><text x="62.7405%" y="687.50"></text></g><g><title>do_syscall_64 (3 samples, 0.23%)</title><rect x="62.4905%" y="661" width="0.2292%" height="15" fill="rgb(248,140,14)"/><text x="62.7405%" y="671.50"></text></g><g><title>__x64_sys_openat (3 samples, 0.23%)</title><rect x="62.4905%" y="645" width="0.2292%" height="15" fill="rgb(253,22,42)"/><text x="62.7405%" y="655.50"></text></g><g><title>do_sys_openat2 (3 samples, 0.23%)</title><rect x="62.4905%" y="629" width="0.2292%" height="15" fill="rgb(234,61,47)"/><text x="62.7405%" y="639.50"></text></g><g><title>do_filp_open (3 samples, 0.23%)</title><rect x="62.4905%" y="613" width="0.2292%" height="15" fill="rgb(208,226,15)"/><text x="62.7405%" y="623.50"></text></g><g><title>path_openat (3 samples, 0.23%)</title><rect x="62.4905%" y="597" width="0.2292%" height="15" fill="rgb(217,221,4)"/><text x="62.7405%" y="607.50"></text></g><g><title>link_path_walk (2 samples, 0.15%)</title><rect x="62.5668%" y="581" width="0.1528%" height="15" fill="rgb(212,174,34)"/><text x="62.8168%" y="591.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (2 samples, 0.15%)</title><rect x="62.7960%" y="853" width="0.1528%" height="15" fill="rgb(253,83,4)"/><text x="63.0460%" y="863.50"></text></g><g><title>decor::Shim::create_schema (2 samples, 0.15%)</title><rect x="62.7960%" y="837" width="0.1528%" height="15" fill="rgb(250,195,49)"/><text x="63.0460%" y="847.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (2 samples, 0.15%)</title><rect x="62.7960%" y="821" width="0.1528%" height="15" fill="rgb(241,192,25)"/><text x="63.0460%" y="831.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (2 samples, 0.15%)</title><rect x="62.7960%" y="805" width="0.1528%" height="15" fill="rgb(208,124,10)"/><text x="63.0460%" y="815.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.15%)</title><rect x="62.7960%" y="789" width="0.1528%" height="15" fill="rgb(222,33,0)"/><text x="63.0460%" y="799.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (2 samples, 0.15%)</title><rect x="62.7960%" y="773" width="0.1528%" height="15" fill="rgb(234,209,28)"/><text x="63.0460%" y="783.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (2 samples, 0.15%)</title><rect x="62.7960%" y="757" width="0.1528%" height="15" fill="rgb(224,11,23)"/><text x="63.0460%" y="767.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (2 samples, 0.15%)</title><rect x="62.7960%" y="741" width="0.1528%" height="15" fill="rgb(232,99,1)"/><text x="63.0460%" y="751.50"></text></g><g><title>std::sys_common::net::TcpStream::write (2 samples, 0.15%)</title><rect x="62.7960%" y="725" width="0.1528%" height="15" fill="rgb(237,95,45)"/><text x="63.0460%" y="735.50"></text></g><g><title>__libc_send (2 samples, 0.15%)</title><rect x="62.7960%" y="709" width="0.1528%" height="15" fill="rgb(208,109,11)"/><text x="63.0460%" y="719.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.15%)</title><rect x="62.7960%" y="693" width="0.1528%" height="15" fill="rgb(216,190,48)"/><text x="63.0460%" y="703.50"></text></g><g><title>do_syscall_64 (2 samples, 0.15%)</title><rect x="62.7960%" y="677" width="0.1528%" height="15" fill="rgb(251,171,36)"/><text x="63.0460%" y="687.50"></text></g><g><title>__x64_sys_sendto (2 samples, 0.15%)</title><rect x="62.7960%" y="661" width="0.1528%" height="15" fill="rgb(230,62,22)"/><text x="63.0460%" y="671.50"></text></g><g><title>__sys_sendto (2 samples, 0.15%)</title><rect x="62.7960%" y="645" width="0.1528%" height="15" fill="rgb(225,114,35)"/><text x="63.0460%" y="655.50"></text></g><g><title>sock_sendmsg (2 samples, 0.15%)</title><rect x="62.7960%" y="629" width="0.1528%" height="15" fill="rgb(215,118,42)"/><text x="63.0460%" y="639.50"></text></g><g><title>tcp_sendmsg (2 samples, 0.15%)</title><rect x="62.7960%" y="613" width="0.1528%" height="15" fill="rgb(243,119,21)"/><text x="63.0460%" y="623.50"></text></g><g><title>tcp_sendmsg_locked (2 samples, 0.15%)</title><rect x="62.7960%" y="597" width="0.1528%" height="15" fill="rgb(252,177,53)"/><text x="63.0460%" y="607.50"></text></g><g><title>_int_free (2 samples, 0.15%)</title><rect x="63.1016%" y="821" width="0.1528%" height="15" fill="rgb(237,209,29)"/><text x="63.3516%" y="831.50"></text></g><g><title>malloc_consolidate (2 samples, 0.15%)</title><rect x="63.1016%" y="805" width="0.1528%" height="15" fill="rgb(212,65,23)"/><text x="63.3516%" y="815.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (5 samples, 0.38%)</title><rect x="63.0252%" y="837" width="0.3820%" height="15" fill="rgb(230,222,46)"/><text x="63.2752%" y="847.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.15%)</title><rect x="63.2544%" y="821" width="0.1528%" height="15" fill="rgb(215,135,32)"/><text x="63.5044%" y="831.50"></text></g><g><title>mysql::conn::Conn::start_transaction (4 samples, 0.31%)</title><rect x="63.4072%" y="837" width="0.3056%" height="15" fill="rgb(246,101,22)"/><text x="63.6572%" y="847.50"></text></g><g><title>mysql::conn::Conn::_start_transaction (4 samples, 0.31%)</title><rect x="63.4072%" y="821" width="0.3056%" height="15" fill="rgb(206,107,13)"/><text x="63.6572%" y="831.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (4 samples, 0.31%)</title><rect x="63.4072%" y="805" width="0.3056%" height="15" fill="rgb(250,100,44)"/><text x="63.6572%" y="815.50"></text></g><g><title>mysql::conn::Conn::_query (4 samples, 0.31%)</title><rect x="63.4072%" y="789" width="0.3056%" height="15" fill="rgb(231,147,38)"/><text x="63.6572%" y="799.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (4 samples, 0.31%)</title><rect x="63.4072%" y="773" width="0.3056%" height="15" fill="rgb(229,8,40)"/><text x="63.6572%" y="783.50"></text></g><g><title>__perf_event_task_sched_out (2 samples, 0.15%)</title><rect x="64.1711%" y="469" width="0.1528%" height="15" fill="rgb(221,135,30)"/><text x="64.4211%" y="479.50"></text></g><g><title>pick_next_task_fair (2 samples, 0.15%)</title><rect x="64.4767%" y="469" width="0.1528%" height="15" fill="rgb(249,193,18)"/><text x="64.7267%" y="479.50"></text></g><g><title>newidle_balance (2 samples, 0.15%)</title><rect x="64.4767%" y="453" width="0.1528%" height="15" fill="rgb(209,133,39)"/><text x="64.7267%" y="463.50"></text></g><g><title>sk_wait_data (9 samples, 0.69%)</title><rect x="64.0183%" y="549" width="0.6875%" height="15" fill="rgb(232,100,14)"/><text x="64.2683%" y="559.50"></text></g><g><title>wait_woken (8 samples, 0.61%)</title><rect x="64.0947%" y="533" width="0.6112%" height="15" fill="rgb(224,185,1)"/><text x="64.3447%" y="543.50"></text></g><g><title>schedule_timeout (8 samples, 0.61%)</title><rect x="64.0947%" y="517" width="0.6112%" height="15" fill="rgb(223,139,8)"/><text x="64.3447%" y="527.50"></text></g><g><title>schedule (8 samples, 0.61%)</title><rect x="64.0947%" y="501" width="0.6112%" height="15" fill="rgb(232,213,38)"/><text x="64.3447%" y="511.50"></text></g><g><title>__schedule (8 samples, 0.61%)</title><rect x="64.0947%" y="485" width="0.6112%" height="15" fill="rgb(207,94,22)"/><text x="64.3447%" y="495.50"></text></g><g><title>__x64_sys_recvfrom (13 samples, 0.99%)</title><rect x="63.7892%" y="613" width="0.9931%" height="15" fill="rgb(219,183,54)"/><text x="64.0392%" y="623.50"></text></g><g><title>__sys_recvfrom (13 samples, 0.99%)</title><rect x="63.7892%" y="597" width="0.9931%" height="15" fill="rgb(216,185,54)"/><text x="64.0392%" y="607.50"></text></g><g><title>inet_recvmsg (12 samples, 0.92%)</title><rect x="63.8655%" y="581" width="0.9167%" height="15" fill="rgb(254,217,39)"/><text x="64.1155%" y="591.50"></text></g><g><title>tcp_recvmsg (12 samples, 0.92%)</title><rect x="63.8655%" y="565" width="0.9167%" height="15" fill="rgb(240,178,23)"/><text x="64.1155%" y="575.50"></text></g><g><title>do_syscall_64 (14 samples, 1.07%)</title><rect x="63.7892%" y="629" width="1.0695%" height="15" fill="rgb(218,11,47)"/><text x="64.0392%" y="639.50"></text></g><g><title>[unknown] (778 samples, 59.43%)</title><rect x="5.6532%" y="917" width="59.4347%" height="15" fill="rgb(218,51,51)"/><text x="5.9032%" y="927.50">[unknown]</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (30 samples, 2.29%)</title><rect x="62.7960%" y="901" width="2.2918%" height="15" fill="rgb(238,126,27)"/><text x="63.0460%" y="911.50">s..</text></g><g><title>decor::Shim::run_on_tcp (30 samples, 2.29%)</title><rect x="62.7960%" y="885" width="2.2918%" height="15" fill="rgb(249,202,22)"/><text x="63.0460%" y="895.50">d..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (30 samples, 2.29%)</title><rect x="62.7960%" y="869" width="2.2918%" height="15" fill="rgb(254,195,49)"/><text x="63.0460%" y="879.50">m..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (28 samples, 2.14%)</title><rect x="62.9488%" y="853" width="2.1390%" height="15" fill="rgb(208,123,14)"/><text x="63.1988%" y="863.50">&lt;..</text></g><g><title>mysql::conn::transaction::Transaction::commit (18 samples, 1.38%)</title><rect x="63.7128%" y="837" width="1.3751%" height="15" fill="rgb(224,200,8)"/><text x="63.9628%" y="847.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (18 samples, 1.38%)</title><rect x="63.7128%" y="821" width="1.3751%" height="15" fill="rgb(217,61,36)"/><text x="63.9628%" y="831.50"></text></g><g><title>mysql::conn::Conn::_query (18 samples, 1.38%)</title><rect x="63.7128%" y="805" width="1.3751%" height="15" fill="rgb(206,35,45)"/><text x="63.9628%" y="815.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (18 samples, 1.38%)</title><rect x="63.7128%" y="789" width="1.3751%" height="15" fill="rgb(217,65,33)"/><text x="63.9628%" y="799.50"></text></g><g><title>mysql::conn::Conn::read_packet (18 samples, 1.38%)</title><rect x="63.7128%" y="773" width="1.3751%" height="15" fill="rgb(222,158,48)"/><text x="63.9628%" y="783.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 1.38%)</title><rect x="63.7128%" y="757" width="1.3751%" height="15" fill="rgb(254,2,54)"/><text x="63.9628%" y="767.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (18 samples, 1.38%)</title><rect x="63.7128%" y="741" width="1.3751%" height="15" fill="rgb(250,143,38)"/><text x="63.9628%" y="751.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (17 samples, 1.30%)</title><rect x="63.7892%" y="725" width="1.2987%" height="15" fill="rgb(248,25,0)"/><text x="64.0392%" y="735.50"></text></g><g><title>std::sys_common::net::TcpStream::read (17 samples, 1.30%)</title><rect x="63.7892%" y="709" width="1.2987%" height="15" fill="rgb(206,152,27)"/><text x="64.0392%" y="719.50"></text></g><g><title>std::sys::unix::net::Socket::read (17 samples, 1.30%)</title><rect x="63.7892%" y="693" width="1.2987%" height="15" fill="rgb(240,77,30)"/><text x="64.0392%" y="703.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (17 samples, 1.30%)</title><rect x="63.7892%" y="677" width="1.2987%" height="15" fill="rgb(231,5,3)"/><text x="64.0392%" y="687.50"></text></g><g><title>__libc_recv (17 samples, 1.30%)</title><rect x="63.7892%" y="661" width="1.2987%" height="15" fill="rgb(207,226,32)"/><text x="64.0392%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (17 samples, 1.30%)</title><rect x="63.7892%" y="645" width="1.2987%" height="15" fill="rgb(222,207,47)"/><text x="64.0392%" y="655.50"></text></g><g><title>prepare_exit_to_usermode (3 samples, 0.23%)</title><rect x="64.8587%" y="629" width="0.2292%" height="15" fill="rgb(229,115,45)"/><text x="65.1087%" y="639.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (3 samples, 0.23%)</title><rect x="65.2406%" y="725" width="0.2292%" height="15" fill="rgb(224,191,6)"/><text x="65.4906%" y="735.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.15%)</title><rect x="66.3102%" y="421" width="0.1528%" height="15" fill="rgb(230,227,24)"/><text x="66.5602%" y="431.50"></text></g><g><title>loopback_xmit (2 samples, 0.15%)</title><rect x="66.3102%" y="405" width="0.1528%" height="15" fill="rgb(228,80,19)"/><text x="66.5602%" y="415.50"></text></g><g><title>netif_rx (2 samples, 0.15%)</title><rect x="66.3102%" y="389" width="0.1528%" height="15" fill="rgb(247,229,0)"/><text x="66.5602%" y="399.50"></text></g><g><title>netif_rx_internal (2 samples, 0.15%)</title><rect x="66.3102%" y="373" width="0.1528%" height="15" fill="rgb(237,194,15)"/><text x="66.5602%" y="383.50"></text></g><g><title>__dev_queue_xmit (5 samples, 0.38%)</title><rect x="66.2338%" y="437" width="0.3820%" height="15" fill="rgb(219,203,20)"/><text x="66.4838%" y="447.50"></text></g><g><title>enqueue_task (3 samples, 0.23%)</title><rect x="66.9977%" y="133" width="0.2292%" height="15" fill="rgb(234,128,8)"/><text x="67.2477%" y="143.50"></text></g><g><title>uclamp_rq_inc_id (2 samples, 0.15%)</title><rect x="67.0741%" y="117" width="0.1528%" height="15" fill="rgb(248,202,8)"/><text x="67.3241%" y="127.50"></text></g><g><title>enqueue_task_fair (3 samples, 0.23%)</title><rect x="67.2269%" y="133" width="0.2292%" height="15" fill="rgb(206,104,37)"/><text x="67.4769%" y="143.50"></text></g><g><title>enqueue_entity (3 samples, 0.23%)</title><rect x="67.2269%" y="117" width="0.2292%" height="15" fill="rgb(223,8,27)"/><text x="67.4769%" y="127.50"></text></g><g><title>select_task_rq_fair (2 samples, 0.15%)</title><rect x="67.4561%" y="133" width="0.1528%" height="15" fill="rgb(216,217,28)"/><text x="67.7061%" y="143.50"></text></g><g><title>sock_def_readable (10 samples, 0.76%)</title><rect x="66.9213%" y="213" width="0.7639%" height="15" fill="rgb(249,199,1)"/><text x="67.1713%" y="223.50"></text></g><g><title>__wake_up_common_lock (10 samples, 0.76%)</title><rect x="66.9213%" y="197" width="0.7639%" height="15" fill="rgb(240,85,17)"/><text x="67.1713%" y="207.50"></text></g><g><title>__wake_up_common (10 samples, 0.76%)</title><rect x="66.9213%" y="181" width="0.7639%" height="15" fill="rgb(206,108,45)"/><text x="67.1713%" y="191.50"></text></g><g><title>pollwake (10 samples, 0.76%)</title><rect x="66.9213%" y="165" width="0.7639%" height="15" fill="rgb(245,210,41)"/><text x="67.1713%" y="175.50"></text></g><g><title>try_to_wake_up (9 samples, 0.69%)</title><rect x="66.9977%" y="149" width="0.6875%" height="15" fill="rgb(206,13,37)"/><text x="67.2477%" y="159.50"></text></g><g><title>__local_bh_enable_ip (16 samples, 1.22%)</title><rect x="66.6157%" y="437" width="1.2223%" height="15" fill="rgb(250,61,18)"/><text x="66.8657%" y="447.50"></text></g><g><title>do_softirq (16 samples, 1.22%)</title><rect x="66.6157%" y="421" width="1.2223%" height="15" fill="rgb(235,172,48)"/><text x="66.8657%" y="431.50"></text></g><g><title>do_softirq_own_stack (15 samples, 1.15%)</title><rect x="66.6921%" y="405" width="1.1459%" height="15" fill="rgb(249,201,17)"/><text x="66.9421%" y="415.50"></text></g><g><title>__do_softirq (15 samples, 1.15%)</title><rect x="66.6921%" y="389" width="1.1459%" height="15" fill="rgb(219,208,6)"/><text x="66.9421%" y="399.50"></text></g><g><title>net_rx_action (15 samples, 1.15%)</title><rect x="66.6921%" y="373" width="1.1459%" height="15" fill="rgb(248,31,23)"/><text x="66.9421%" y="383.50"></text></g><g><title>process_backlog (15 samples, 1.15%)</title><rect x="66.6921%" y="357" width="1.1459%" height="15" fill="rgb(245,15,42)"/><text x="66.9421%" y="367.50"></text></g><g><title>__netif_receive_skb_one_core (15 samples, 1.15%)</title><rect x="66.6921%" y="341" width="1.1459%" height="15" fill="rgb(222,217,39)"/><text x="66.9421%" y="351.50"></text></g><g><title>ip_rcv (13 samples, 0.99%)</title><rect x="66.8449%" y="325" width="0.9931%" height="15" fill="rgb(210,219,27)"/><text x="67.0949%" y="335.50"></text></g><g><title>ip_local_deliver (13 samples, 0.99%)</title><rect x="66.8449%" y="309" width="0.9931%" height="15" fill="rgb(252,166,36)"/><text x="67.0949%" y="319.50"></text></g><g><title>ip_local_deliver_finish (13 samples, 0.99%)</title><rect x="66.8449%" y="293" width="0.9931%" height="15" fill="rgb(245,132,34)"/><text x="67.0949%" y="303.50"></text></g><g><title>ip_protocol_deliver_rcu (13 samples, 0.99%)</title><rect x="66.8449%" y="277" width="0.9931%" height="15" fill="rgb(236,54,3)"/><text x="67.0949%" y="287.50"></text></g><g><title>tcp_v4_rcv (12 samples, 0.92%)</title><rect x="66.9213%" y="261" width="0.9167%" height="15" fill="rgb(241,173,43)"/><text x="67.1713%" y="271.50"></text></g><g><title>tcp_v4_do_rcv (12 samples, 0.92%)</title><rect x="66.9213%" y="245" width="0.9167%" height="15" fill="rgb(215,190,9)"/><text x="67.1713%" y="255.50"></text></g><g><title>tcp_rcv_established (12 samples, 0.92%)</title><rect x="66.9213%" y="229" width="0.9167%" height="15" fill="rgb(242,101,16)"/><text x="67.1713%" y="239.50"></text></g><g><title>tcp_ack (2 samples, 0.15%)</title><rect x="67.6853%" y="213" width="0.1528%" height="15" fill="rgb(223,190,21)"/><text x="67.9353%" y="223.50"></text></g><g><title>__ip_queue_xmit (23 samples, 1.76%)</title><rect x="66.1574%" y="485" width="1.7571%" height="15" fill="rgb(215,228,25)"/><text x="66.4074%" y="495.50"></text></g><g><title>ip_output (23 samples, 1.76%)</title><rect x="66.1574%" y="469" width="1.7571%" height="15" fill="rgb(225,36,22)"/><text x="66.4074%" y="479.50"></text></g><g><title>ip_finish_output2 (22 samples, 1.68%)</title><rect x="66.2338%" y="453" width="1.6807%" height="15" fill="rgb(251,106,46)"/><text x="66.4838%" y="463.50"></text></g><g><title>__tcp_transmit_skb (26 samples, 1.99%)</title><rect x="66.0810%" y="501" width="1.9862%" height="15" fill="rgb(208,90,1)"/><text x="66.3310%" y="511.50">_..</text></g><g><title>__tcp_push_pending_frames (29 samples, 2.22%)</title><rect x="66.0046%" y="533" width="2.2154%" height="15" fill="rgb(243,10,4)"/><text x="66.2546%" y="543.50">_..</text></g><g><title>tcp_write_xmit (29 samples, 2.22%)</title><rect x="66.0046%" y="517" width="2.2154%" height="15" fill="rgb(212,137,27)"/><text x="66.2546%" y="527.50">t..</text></g><g><title>sk_stream_alloc_skb (2 samples, 0.15%)</title><rect x="68.2200%" y="533" width="0.1528%" height="15" fill="rgb(231,220,49)"/><text x="68.4700%" y="543.50"></text></g><g><title>__alloc_skb (2 samples, 0.15%)</title><rect x="68.2200%" y="517" width="0.1528%" height="15" fill="rgb(237,96,20)"/><text x="68.4700%" y="527.50"></text></g><g><title>__x64_sys_sendto (38 samples, 2.90%)</title><rect x="65.5462%" y="613" width="2.9030%" height="15" fill="rgb(239,229,30)"/><text x="65.7962%" y="623.50">__..</text></g><g><title>__sys_sendto (38 samples, 2.90%)</title><rect x="65.5462%" y="597" width="2.9030%" height="15" fill="rgb(219,65,33)"/><text x="65.7962%" y="607.50">__..</text></g><g><title>sock_sendmsg (35 samples, 2.67%)</title><rect x="65.7754%" y="581" width="2.6738%" height="15" fill="rgb(243,134,7)"/><text x="66.0254%" y="591.50">so..</text></g><g><title>tcp_sendmsg (35 samples, 2.67%)</title><rect x="65.7754%" y="565" width="2.6738%" height="15" fill="rgb(216,177,54)"/><text x="66.0254%" y="575.50">tc..</text></g><g><title>tcp_sendmsg_locked (35 samples, 2.67%)</title><rect x="65.7754%" y="549" width="2.6738%" height="15" fill="rgb(211,160,20)"/><text x="66.0254%" y="559.50">tc..</text></g><g><title>entry_SYSCALL_64 (41 samples, 3.13%)</title><rect x="65.4698%" y="645" width="3.1322%" height="15" fill="rgb(239,85,39)"/><text x="65.7198%" y="655.50">ent..</text></g><g><title>do_syscall_64 (41 samples, 3.13%)</title><rect x="65.4698%" y="629" width="3.1322%" height="15" fill="rgb(232,125,22)"/><text x="65.7198%" y="639.50">do_..</text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (46 samples, 3.51%)</title><rect x="65.2406%" y="757" width="3.5141%" height="15" fill="rgb(244,57,34)"/><text x="65.4906%" y="767.50">&lt;my..</text></g><g><title>mysql::conn::Conn::_query (46 samples, 3.51%)</title><rect x="65.2406%" y="741" width="3.5141%" height="15" fill="rgb(214,203,32)"/><text x="65.4906%" y="751.50">mys..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (43 samples, 3.28%)</title><rect x="65.4698%" y="725" width="3.2850%" height="15" fill="rgb(207,58,43)"/><text x="65.7198%" y="735.50">mys..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (43 samples, 3.28%)</title><rect x="65.4698%" y="709" width="3.2850%" height="15" fill="rgb(215,193,15)"/><text x="65.7198%" y="719.50">std..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (43 samples, 3.28%)</title><rect x="65.4698%" y="693" width="3.2850%" height="15" fill="rgb(232,15,44)"/><text x="65.7198%" y="703.50">&lt;st..</text></g><g><title>std::sys_common::net::TcpStream::write (43 samples, 3.28%)</title><rect x="65.4698%" y="677" width="3.2850%" height="15" fill="rgb(212,3,48)"/><text x="65.7198%" y="687.50">std..</text></g><g><title>__libc_send (43 samples, 3.28%)</title><rect x="65.4698%" y="661" width="3.2850%" height="15" fill="rgb(218,128,7)"/><text x="65.7198%" y="671.50">__l..</text></g><g><title>syscall_return_via_sysret (2 samples, 0.15%)</title><rect x="68.6020%" y="645" width="0.1528%" height="15" fill="rgb(226,216,39)"/><text x="68.8520%" y="655.50"></text></g><g><title>_int_free (4 samples, 0.31%)</title><rect x="69.0604%" y="645" width="0.3056%" height="15" fill="rgb(243,47,51)"/><text x="69.3104%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (8 samples, 0.61%)</title><rect x="68.8312%" y="693" width="0.6112%" height="15" fill="rgb(241,183,40)"/><text x="69.0812%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (8 samples, 0.61%)</title><rect x="68.8312%" y="677" width="0.6112%" height="15" fill="rgb(231,217,32)"/><text x="69.0812%" y="687.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (7 samples, 0.53%)</title><rect x="68.9076%" y="661" width="0.5348%" height="15" fill="rgb(229,61,38)"/><text x="69.1576%" y="671.50"></text></g><g><title>__GI___libc_free (2 samples, 0.15%)</title><rect x="69.5187%" y="677" width="0.1528%" height="15" fill="rgb(225,210,5)"/><text x="69.7687%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (14 samples, 1.07%)</title><rect x="68.8312%" y="725" width="1.0695%" height="15" fill="rgb(231,79,45)"/><text x="69.0812%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Values as sql_parser::ast::display::AstDisplay&gt;::fmt (14 samples, 1.07%)</title><rect x="68.8312%" y="709" width="1.0695%" height="15" fill="rgb(224,100,7)"/><text x="69.0812%" y="719.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (6 samples, 0.46%)</title><rect x="69.4423%" y="693" width="0.4584%" height="15" fill="rgb(241,198,18)"/><text x="69.6923%" y="703.50"></text></g><g><title>alloc::string::String::push (2 samples, 0.15%)</title><rect x="70.1299%" y="661" width="0.1528%" height="15" fill="rgb(252,97,53)"/><text x="70.3799%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (2 samples, 0.15%)</title><rect x="70.1299%" y="645" width="0.1528%" height="15" fill="rgb(220,88,7)"/><text x="70.3799%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (12 samples, 0.92%)</title><rect x="69.9007%" y="709" width="0.9167%" height="15" fill="rgb(213,176,14)"/><text x="70.1507%" y="719.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (12 samples, 0.92%)</title><rect x="69.9007%" y="693" width="0.9167%" height="15" fill="rgb(246,73,7)"/><text x="70.1507%" y="703.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (10 samples, 0.76%)</title><rect x="70.0535%" y="677" width="0.7639%" height="15" fill="rgb(245,64,36)"/><text x="70.3035%" y="687.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (7 samples, 0.53%)</title><rect x="70.2827%" y="661" width="0.5348%" height="15" fill="rgb(245,80,10)"/><text x="70.5327%" y="671.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (5 samples, 0.38%)</title><rect x="70.4354%" y="645" width="0.3820%" height="15" fill="rgb(232,107,50)"/><text x="70.6854%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (5 samples, 0.38%)</title><rect x="70.4354%" y="629" width="0.3820%" height="15" fill="rgb(253,3,0)"/><text x="70.6854%" y="639.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (3 samples, 0.23%)</title><rect x="70.5882%" y="613" width="0.2292%" height="15" fill="rgb(212,99,53)"/><text x="70.8382%" y="623.50"></text></g><g><title>_int_free (2 samples, 0.15%)</title><rect x="70.9702%" y="693" width="0.1528%" height="15" fill="rgb(249,111,54)"/><text x="71.2202%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.15%)</title><rect x="71.1230%" y="693" width="0.1528%" height="15" fill="rgb(249,55,30)"/><text x="71.3730%" y="703.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.15%)</title><rect x="71.1230%" y="677" width="0.1528%" height="15" fill="rgb(237,47,42)"/><text x="71.3730%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::InsertStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (20 samples, 1.53%)</title><rect x="69.9007%" y="725" width="1.5279%" height="15" fill="rgb(211,20,18)"/><text x="70.1507%" y="735.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (8 samples, 0.61%)</title><rect x="70.8174%" y="709" width="0.6112%" height="15" fill="rgb(231,203,46)"/><text x="71.0674%" y="719.50"></text></g><g><title>core::fmt::write (2 samples, 0.15%)</title><rect x="71.2758%" y="693" width="0.1528%" height="15" fill="rgb(237,142,3)"/><text x="71.5258%" y="703.50"></text></g><g><title>core::fmt::write (35 samples, 2.67%)</title><rect x="68.8312%" y="757" width="2.6738%" height="15" fill="rgb(241,107,1)"/><text x="69.0812%" y="767.50">co..</text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (35 samples, 2.67%)</title><rect x="68.8312%" y="741" width="2.6738%" height="15" fill="rgb(229,83,13)"/><text x="69.0812%" y="751.50">&lt;s..</text></g><g><title>_int_free (3 samples, 0.23%)</title><rect x="71.5814%" y="741" width="0.2292%" height="15" fill="rgb(241,91,40)"/><text x="71.8314%" y="751.50"></text></g><g><title>core::ptr::drop_in_place (7 samples, 0.53%)</title><rect x="71.5050%" y="757" width="0.5348%" height="15" fill="rgb(225,3,45)"/><text x="71.7550%" y="767.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.23%)</title><rect x="71.8105%" y="741" width="0.2292%" height="15" fill="rgb(244,223,14)"/><text x="72.0605%" y="751.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.23%)</title><rect x="71.8105%" y="725" width="0.2292%" height="15" fill="rgb(224,124,37)"/><text x="72.0605%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.23%)</title><rect x="71.8105%" y="709" width="0.2292%" height="15" fill="rgb(251,171,30)"/><text x="72.0605%" y="719.50"></text></g><g><title>_int_free (2 samples, 0.15%)</title><rect x="71.8869%" y="693" width="0.1528%" height="15" fill="rgb(236,46,54)"/><text x="72.1369%" y="703.50"></text></g><g><title>decor::answer_rows (3 samples, 0.23%)</title><rect x="72.0397%" y="757" width="0.2292%" height="15" fill="rgb(245,213,5)"/><text x="72.2897%" y="767.50"></text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::finish (3 samples, 0.23%)</title><rect x="72.0397%" y="741" width="0.2292%" height="15" fill="rgb(230,144,27)"/><text x="72.2897%" y="751.50"></text></g><g><title>msql_srv::writers::write_ok_packet (2 samples, 0.15%)</title><rect x="72.1161%" y="725" width="0.1528%" height="15" fill="rgb(220,86,6)"/><text x="72.3661%" y="735.50"></text></g><g><title>mysql::conn::Conn::start_transaction (5 samples, 0.38%)</title><rect x="72.2689%" y="757" width="0.3820%" height="15" fill="rgb(240,20,13)"/><text x="72.5189%" y="767.50"></text></g><g><title>mysql::conn::Conn::_start_transaction (3 samples, 0.23%)</title><rect x="72.4217%" y="741" width="0.2292%" height="15" fill="rgb(217,89,34)"/><text x="72.6717%" y="751.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (3 samples, 0.23%)</title><rect x="72.4217%" y="725" width="0.2292%" height="15" fill="rgb(229,13,5)"/><text x="72.6717%" y="735.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.15%)</title><rect x="72.4981%" y="709" width="0.1528%" height="15" fill="rgb(244,67,35)"/><text x="72.7481%" y="719.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (2 samples, 0.15%)</title><rect x="72.4981%" y="693" width="0.1528%" height="15" fill="rgb(221,40,2)"/><text x="72.7481%" y="703.50"></text></g><g><title>enqueue_task (2 samples, 0.15%)</title><rect x="73.7968%" y="117" width="0.1528%" height="15" fill="rgb(237,157,21)"/><text x="74.0468%" y="127.50"></text></g><g><title>sock_def_readable (3 samples, 0.23%)</title><rect x="73.7968%" y="197" width="0.2292%" height="15" fill="rgb(222,94,11)"/><text x="74.0468%" y="207.50"></text></g><g><title>__wake_up_common_lock (3 samples, 0.23%)</title><rect x="73.7968%" y="181" width="0.2292%" height="15" fill="rgb(249,113,6)"/><text x="74.0468%" y="191.50"></text></g><g><title>__wake_up_common (3 samples, 0.23%)</title><rect x="73.7968%" y="165" width="0.2292%" height="15" fill="rgb(238,137,36)"/><text x="74.0468%" y="175.50"></text></g><g><title>pollwake (3 samples, 0.23%)</title><rect x="73.7968%" y="149" width="0.2292%" height="15" fill="rgb(210,102,26)"/><text x="74.0468%" y="159.50"></text></g><g><title>try_to_wake_up (3 samples, 0.23%)</title><rect x="73.7968%" y="133" width="0.2292%" height="15" fill="rgb(218,30,30)"/><text x="74.0468%" y="143.50"></text></g><g><title>tcp_ack (5 samples, 0.38%)</title><rect x="74.0260%" y="197" width="0.3820%" height="15" fill="rgb(214,67,26)"/><text x="74.2760%" y="207.50"></text></g><g><title>ip_local_deliver (14 samples, 1.07%)</title><rect x="73.4912%" y="293" width="1.0695%" height="15" fill="rgb(251,9,53)"/><text x="73.7412%" y="303.50"></text></g><g><title>ip_local_deliver_finish (14 samples, 1.07%)</title><rect x="73.4912%" y="277" width="1.0695%" height="15" fill="rgb(228,204,25)"/><text x="73.7412%" y="287.50"></text></g><g><title>ip_protocol_deliver_rcu (14 samples, 1.07%)</title><rect x="73.4912%" y="261" width="1.0695%" height="15" fill="rgb(207,153,8)"/><text x="73.7412%" y="271.50"></text></g><g><title>tcp_v4_rcv (13 samples, 0.99%)</title><rect x="73.5676%" y="245" width="0.9931%" height="15" fill="rgb(242,9,16)"/><text x="73.8176%" y="255.50"></text></g><g><title>tcp_v4_do_rcv (11 samples, 0.84%)</title><rect x="73.7204%" y="229" width="0.8403%" height="15" fill="rgb(217,211,10)"/><text x="73.9704%" y="239.50"></text></g><g><title>tcp_rcv_established (11 samples, 0.84%)</title><rect x="73.7204%" y="213" width="0.8403%" height="15" fill="rgb(219,228,52)"/><text x="73.9704%" y="223.50"></text></g><g><title>__tcp_transmit_skb (20 samples, 1.53%)</title><rect x="73.1856%" y="485" width="1.5279%" height="15" fill="rgb(231,92,29)"/><text x="73.4356%" y="495.50"></text></g><g><title>__ip_queue_xmit (19 samples, 1.45%)</title><rect x="73.2620%" y="469" width="1.4515%" height="15" fill="rgb(232,8,23)"/><text x="73.5120%" y="479.50"></text></g><g><title>ip_output (19 samples, 1.45%)</title><rect x="73.2620%" y="453" width="1.4515%" height="15" fill="rgb(216,211,34)"/><text x="73.5120%" y="463.50"></text></g><g><title>ip_finish_output2 (19 samples, 1.45%)</title><rect x="73.2620%" y="437" width="1.4515%" height="15" fill="rgb(236,151,0)"/><text x="73.5120%" y="447.50"></text></g><g><title>__local_bh_enable_ip (17 samples, 1.30%)</title><rect x="73.4148%" y="421" width="1.2987%" height="15" fill="rgb(209,168,3)"/><text x="73.6648%" y="431.50"></text></g><g><title>do_softirq (17 samples, 1.30%)</title><rect x="73.4148%" y="405" width="1.2987%" height="15" fill="rgb(208,129,28)"/><text x="73.6648%" y="415.50"></text></g><g><title>do_softirq_own_stack (17 samples, 1.30%)</title><rect x="73.4148%" y="389" width="1.2987%" height="15" fill="rgb(229,78,22)"/><text x="73.6648%" y="399.50"></text></g><g><title>__do_softirq (17 samples, 1.30%)</title><rect x="73.4148%" y="373" width="1.2987%" height="15" fill="rgb(228,187,13)"/><text x="73.6648%" y="383.50"></text></g><g><title>net_rx_action (17 samples, 1.30%)</title><rect x="73.4148%" y="357" width="1.2987%" height="15" fill="rgb(240,119,24)"/><text x="73.6648%" y="367.50"></text></g><g><title>process_backlog (17 samples, 1.30%)</title><rect x="73.4148%" y="341" width="1.2987%" height="15" fill="rgb(209,194,42)"/><text x="73.6648%" y="351.50"></text></g><g><title>__netif_receive_skb_one_core (17 samples, 1.30%)</title><rect x="73.4148%" y="325" width="1.2987%" height="15" fill="rgb(247,200,46)"/><text x="73.6648%" y="335.50"></text></g><g><title>ip_rcv (16 samples, 1.22%)</title><rect x="73.4912%" y="309" width="1.2223%" height="15" fill="rgb(218,76,16)"/><text x="73.7412%" y="319.50"></text></g><g><title>ip_rcv_finish (2 samples, 0.15%)</title><rect x="74.5607%" y="293" width="0.1528%" height="15" fill="rgb(225,21,48)"/><text x="74.8107%" y="303.50"></text></g><g><title>__tcp_push_pending_frames (22 samples, 1.68%)</title><rect x="73.1092%" y="517" width="1.6807%" height="15" fill="rgb(239,223,50)"/><text x="73.3592%" y="527.50"></text></g><g><title>tcp_write_xmit (22 samples, 1.68%)</title><rect x="73.1092%" y="501" width="1.6807%" height="15" fill="rgb(244,45,21)"/><text x="73.3592%" y="511.50"></text></g><g><title>__kmalloc_node_track_caller (2 samples, 0.15%)</title><rect x="74.7899%" y="485" width="0.1528%" height="15" fill="rgb(232,33,43)"/><text x="75.0399%" y="495.50"></text></g><g><title>entry_SYSCALL_64 (27 samples, 2.06%)</title><rect x="72.9565%" y="629" width="2.0626%" height="15" fill="rgb(209,8,3)"/><text x="73.2065%" y="639.50">e..</text></g><g><title>do_syscall_64 (27 samples, 2.06%)</title><rect x="72.9565%" y="613" width="2.0626%" height="15" fill="rgb(214,25,53)"/><text x="73.2065%" y="623.50">d..</text></g><g><title>__x64_sys_sendto (27 samples, 2.06%)</title><rect x="72.9565%" y="597" width="2.0626%" height="15" fill="rgb(254,186,54)"/><text x="73.2065%" y="607.50">_..</text></g><g><title>__sys_sendto (27 samples, 2.06%)</title><rect x="72.9565%" y="581" width="2.0626%" height="15" fill="rgb(208,174,49)"/><text x="73.2065%" y="591.50">_..</text></g><g><title>sock_sendmsg (27 samples, 2.06%)</title><rect x="72.9565%" y="565" width="2.0626%" height="15" fill="rgb(233,191,51)"/><text x="73.2065%" y="575.50">s..</text></g><g><title>tcp_sendmsg (27 samples, 2.06%)</title><rect x="72.9565%" y="549" width="2.0626%" height="15" fill="rgb(222,134,10)"/><text x="73.2065%" y="559.50">t..</text></g><g><title>tcp_sendmsg_locked (25 samples, 1.91%)</title><rect x="73.1092%" y="533" width="1.9099%" height="15" fill="rgb(230,226,20)"/><text x="73.3592%" y="543.50">t..</text></g><g><title>sk_stream_alloc_skb (3 samples, 0.23%)</title><rect x="74.7899%" y="517" width="0.2292%" height="15" fill="rgb(251,111,25)"/><text x="75.0399%" y="527.50"></text></g><g><title>__alloc_skb (3 samples, 0.23%)</title><rect x="74.7899%" y="501" width="0.2292%" height="15" fill="rgb(224,40,46)"/><text x="75.0399%" y="511.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (130 samples, 9.93%)</title><rect x="65.1642%" y="773" width="9.9312%" height="15" fill="rgb(236,108,47)"/><text x="65.4142%" y="783.50">&lt;decor::Shim a..</text></g><g><title>mysql::conn::transaction::Transaction::commit (32 samples, 2.44%)</title><rect x="72.6509%" y="757" width="2.4446%" height="15" fill="rgb(234,93,0)"/><text x="72.9009%" y="767.50">my..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (31 samples, 2.37%)</title><rect x="72.7273%" y="741" width="2.3682%" height="15" fill="rgb(224,213,32)"/><text x="72.9773%" y="751.50">my..</text></g><g><title>mysql::conn::Conn::_query (31 samples, 2.37%)</title><rect x="72.7273%" y="725" width="2.3682%" height="15" fill="rgb(251,11,48)"/><text x="72.9773%" y="735.50">my..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (30 samples, 2.29%)</title><rect x="72.8037%" y="709" width="2.2918%" height="15" fill="rgb(236,173,5)"/><text x="73.0537%" y="719.50">m..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (30 samples, 2.29%)</title><rect x="72.8037%" y="693" width="2.2918%" height="15" fill="rgb(230,95,12)"/><text x="73.0537%" y="703.50">s..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (29 samples, 2.22%)</title><rect x="72.8801%" y="677" width="2.2154%" height="15" fill="rgb(232,209,1)"/><text x="73.1301%" y="687.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::write (29 samples, 2.22%)</title><rect x="72.8801%" y="661" width="2.2154%" height="15" fill="rgb(232,6,1)"/><text x="73.1301%" y="671.50">s..</text></g><g><title>__libc_send (29 samples, 2.22%)</title><rect x="72.8801%" y="645" width="2.2154%" height="15" fill="rgb(210,224,50)"/><text x="73.1301%" y="655.50">_..</text></g><g><title>_int_free (2 samples, 0.15%)</title><rect x="75.0955%" y="725" width="0.1528%" height="15" fill="rgb(228,127,35)"/><text x="75.3455%" y="735.50"></text></g><g><title>_int_free (2 samples, 0.15%)</title><rect x="75.2483%" y="661" width="0.1528%" height="15" fill="rgb(245,102,45)"/><text x="75.4983%" y="671.50"></text></g><g><title>malloc_consolidate (2 samples, 0.15%)</title><rect x="75.2483%" y="645" width="0.1528%" height="15" fill="rgb(214,1,49)"/><text x="75.4983%" y="655.50"></text></g><g><title>core::ptr::drop_in_place (5 samples, 0.38%)</title><rect x="75.0955%" y="773" width="0.3820%" height="15" fill="rgb(226,163,40)"/><text x="75.3455%" y="783.50"></text></g><g><title>core::ptr::drop_in_place (5 samples, 0.38%)</title><rect x="75.0955%" y="757" width="0.3820%" height="15" fill="rgb(239,212,28)"/><text x="75.3455%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.38%)</title><rect x="75.0955%" y="741" width="0.3820%" height="15" fill="rgb(220,20,13)"/><text x="75.3455%" y="751.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.23%)</title><rect x="75.2483%" y="725" width="0.2292%" height="15" fill="rgb(210,164,35)"/><text x="75.4983%" y="735.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.23%)</title><rect x="75.2483%" y="709" width="0.2292%" height="15" fill="rgb(248,109,41)"/><text x="75.4983%" y="719.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.23%)</title><rect x="75.2483%" y="693" width="0.2292%" height="15" fill="rgb(238,23,50)"/><text x="75.4983%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.23%)</title><rect x="75.2483%" y="677" width="0.2292%" height="15" fill="rgb(211,48,49)"/><text x="75.4983%" y="687.50"></text></g><g><title>skb_release_data (2 samples, 0.15%)</title><rect x="75.9358%" y="549" width="0.1528%" height="15" fill="rgb(223,36,21)"/><text x="76.1858%" y="559.50"></text></g><g><title>__kfree_skb (4 samples, 0.31%)</title><rect x="75.9358%" y="565" width="0.3056%" height="15" fill="rgb(207,123,46)"/><text x="76.1858%" y="575.50"></text></g><g><title>skb_release_head_state (2 samples, 0.15%)</title><rect x="76.0886%" y="549" width="0.1528%" height="15" fill="rgb(240,218,32)"/><text x="76.3386%" y="559.50"></text></g><g><title>dst_release (2 samples, 0.15%)</title><rect x="76.0886%" y="533" width="0.1528%" height="15" fill="rgb(252,5,43)"/><text x="76.3386%" y="543.50"></text></g><g><title>__tcp_transmit_skb (3 samples, 0.23%)</title><rect x="76.2414%" y="565" width="0.2292%" height="15" fill="rgb(252,84,19)"/><text x="76.4914%" y="575.50"></text></g><g><title>__ip_queue_xmit (3 samples, 0.23%)</title><rect x="76.2414%" y="549" width="0.2292%" height="15" fill="rgb(243,152,39)"/><text x="76.4914%" y="559.50"></text></g><g><title>ip_output (2 samples, 0.15%)</title><rect x="76.3178%" y="533" width="0.1528%" height="15" fill="rgb(234,160,15)"/><text x="76.5678%" y="543.50"></text></g><g><title>ip_finish_output2 (2 samples, 0.15%)</title><rect x="76.3178%" y="517" width="0.1528%" height="15" fill="rgb(237,34,20)"/><text x="76.5678%" y="527.50"></text></g><g><title>dequeue_task_fair (2 samples, 0.15%)</title><rect x="76.6998%" y="485" width="0.1528%" height="15" fill="rgb(229,97,13)"/><text x="76.9498%" y="495.50"></text></g><g><title>dequeue_entity (2 samples, 0.15%)</title><rect x="76.6998%" y="469" width="0.1528%" height="15" fill="rgb(234,71,50)"/><text x="76.9498%" y="479.50"></text></g><g><title>finish_task_switch (2 samples, 0.15%)</title><rect x="76.8526%" y="485" width="0.1528%" height="15" fill="rgb(253,155,4)"/><text x="77.1026%" y="495.50"></text></g><g><title>__perf_event_task_sched_in (2 samples, 0.15%)</title><rect x="76.8526%" y="469" width="0.1528%" height="15" fill="rgb(222,185,37)"/><text x="77.1026%" y="479.50"></text></g><g><title>sk_wait_data (8 samples, 0.61%)</title><rect x="76.6234%" y="565" width="0.6112%" height="15" fill="rgb(251,177,13)"/><text x="76.8734%" y="575.50"></text></g><g><title>wait_woken (7 samples, 0.53%)</title><rect x="76.6998%" y="549" width="0.5348%" height="15" fill="rgb(250,179,40)"/><text x="76.9498%" y="559.50"></text></g><g><title>schedule_timeout (7 samples, 0.53%)</title><rect x="76.6998%" y="533" width="0.5348%" height="15" fill="rgb(242,44,2)"/><text x="76.9498%" y="543.50"></text></g><g><title>schedule (7 samples, 0.53%)</title><rect x="76.6998%" y="517" width="0.5348%" height="15" fill="rgb(216,177,13)"/><text x="76.9498%" y="527.50"></text></g><g><title>__schedule (7 samples, 0.53%)</title><rect x="76.6998%" y="501" width="0.5348%" height="15" fill="rgb(216,106,43)"/><text x="76.9498%" y="511.50"></text></g><g><title>psi_task_change (3 samples, 0.23%)</title><rect x="77.0053%" y="485" width="0.2292%" height="15" fill="rgb(216,183,2)"/><text x="77.2553%" y="495.50"></text></g><g><title>psi_group_change (2 samples, 0.15%)</title><rect x="77.0817%" y="469" width="0.1528%" height="15" fill="rgb(249,75,3)"/><text x="77.3317%" y="479.50"></text></g><g><title>record_times (2 samples, 0.15%)</title><rect x="77.0817%" y="453" width="0.1528%" height="15" fill="rgb(219,67,39)"/><text x="77.3317%" y="463.50"></text></g><g><title>do_syscall_64 (22 samples, 1.68%)</title><rect x="75.7066%" y="645" width="1.6807%" height="15" fill="rgb(253,228,2)"/><text x="75.9566%" y="655.50"></text></g><g><title>__x64_sys_recvfrom (21 samples, 1.60%)</title><rect x="75.7830%" y="629" width="1.6043%" height="15" fill="rgb(235,138,27)"/><text x="76.0330%" y="639.50"></text></g><g><title>__sys_recvfrom (21 samples, 1.60%)</title><rect x="75.7830%" y="613" width="1.6043%" height="15" fill="rgb(236,97,51)"/><text x="76.0330%" y="623.50"></text></g><g><title>inet_recvmsg (21 samples, 1.60%)</title><rect x="75.7830%" y="597" width="1.6043%" height="15" fill="rgb(240,80,30)"/><text x="76.0330%" y="607.50"></text></g><g><title>tcp_recvmsg (21 samples, 1.60%)</title><rect x="75.7830%" y="581" width="1.6043%" height="15" fill="rgb(230,178,19)"/><text x="76.0330%" y="591.50"></text></g><g><title>entry_SYSCALL_64 (24 samples, 1.83%)</title><rect x="75.7066%" y="661" width="1.8335%" height="15" fill="rgb(210,190,27)"/><text x="75.9566%" y="671.50">e..</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.15%)</title><rect x="77.3873%" y="645" width="0.1528%" height="15" fill="rgb(222,107,31)"/><text x="77.6373%" y="655.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (27 samples, 2.06%)</title><rect x="75.5539%" y="757" width="2.0626%" height="15" fill="rgb(216,127,34)"/><text x="75.8039%" y="767.50">&lt;..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (27 samples, 2.06%)</title><rect x="75.5539%" y="741" width="2.0626%" height="15" fill="rgb(234,116,52)"/><text x="75.8039%" y="751.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::read (27 samples, 2.06%)</title><rect x="75.5539%" y="725" width="2.0626%" height="15" fill="rgb(222,124,15)"/><text x="75.8039%" y="735.50">s..</text></g><g><title>std::sys::unix::net::Socket::read (27 samples, 2.06%)</title><rect x="75.5539%" y="709" width="2.0626%" height="15" fill="rgb(231,179,28)"/><text x="75.8039%" y="719.50">s..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (27 samples, 2.06%)</title><rect x="75.5539%" y="693" width="2.0626%" height="15" fill="rgb(226,93,45)"/><text x="75.8039%" y="703.50">s..</text></g><g><title>__libc_recv (27 samples, 2.06%)</title><rect x="75.5539%" y="677" width="2.0626%" height="15" fill="rgb(215,8,51)"/><text x="75.8039%" y="687.50">_..</text></g><g><title>msql_srv::packet::PacketReader&lt;R&gt;::next (30 samples, 2.29%)</title><rect x="75.4775%" y="773" width="2.2918%" height="15" fill="rgb(223,106,5)"/><text x="75.7275%" y="783.50">m..</text></g><g><title>release_sock (2 samples, 0.15%)</title><rect x="77.9221%" y="613" width="0.1528%" height="15" fill="rgb(250,191,5)"/><text x="78.1721%" y="623.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.15%)</title><rect x="78.5332%" y="485" width="0.1528%" height="15" fill="rgb(242,132,44)"/><text x="78.7832%" y="495.50"></text></g><g><title>loopback_xmit (2 samples, 0.15%)</title><rect x="78.5332%" y="469" width="0.1528%" height="15" fill="rgb(251,152,29)"/><text x="78.7832%" y="479.50"></text></g><g><title>__dev_queue_xmit (3 samples, 0.23%)</title><rect x="78.5332%" y="501" width="0.2292%" height="15" fill="rgb(218,179,5)"/><text x="78.7832%" y="511.50"></text></g><g><title>enqueue_task (5 samples, 0.38%)</title><rect x="79.0680%" y="213" width="0.3820%" height="15" fill="rgb(227,67,19)"/><text x="79.3180%" y="223.50"></text></g><g><title>psi_task_change (5 samples, 0.38%)</title><rect x="79.0680%" y="197" width="0.3820%" height="15" fill="rgb(233,119,31)"/><text x="79.3180%" y="207.50"></text></g><g><title>psi_group_change (5 samples, 0.38%)</title><rect x="79.0680%" y="181" width="0.3820%" height="15" fill="rgb(241,120,22)"/><text x="79.3180%" y="191.50"></text></g><g><title>record_times (4 samples, 0.31%)</title><rect x="79.1444%" y="165" width="0.3056%" height="15" fill="rgb(224,102,30)"/><text x="79.3944%" y="175.50"></text></g><g><title>sched_clock_cpu (3 samples, 0.23%)</title><rect x="79.2208%" y="149" width="0.2292%" height="15" fill="rgb(210,164,37)"/><text x="79.4708%" y="159.50"></text></g><g><title>sched_clock (2 samples, 0.15%)</title><rect x="79.2972%" y="133" width="0.1528%" height="15" fill="rgb(226,191,16)"/><text x="79.5472%" y="143.50"></text></g><g><title>native_sched_clock (2 samples, 0.15%)</title><rect x="79.2972%" y="117" width="0.1528%" height="15" fill="rgb(214,40,45)"/><text x="79.5472%" y="127.50"></text></g><g><title>enqueue_task_fair (2 samples, 0.15%)</title><rect x="79.4500%" y="213" width="0.1528%" height="15" fill="rgb(244,29,26)"/><text x="79.7000%" y="223.50"></text></g><g><title>enqueue_entity (2 samples, 0.15%)</title><rect x="79.4500%" y="197" width="0.1528%" height="15" fill="rgb(216,16,5)"/><text x="79.7000%" y="207.50"></text></g><g><title>ip_local_deliver (12 samples, 0.92%)</title><rect x="78.8388%" y="373" width="0.9167%" height="15" fill="rgb(249,76,35)"/><text x="79.0888%" y="383.50"></text></g><g><title>ip_local_deliver_finish (11 samples, 0.84%)</title><rect x="78.9152%" y="357" width="0.8403%" height="15" fill="rgb(207,11,44)"/><text x="79.1652%" y="367.50"></text></g><g><title>ip_protocol_deliver_rcu (11 samples, 0.84%)</title><rect x="78.9152%" y="341" width="0.8403%" height="15" fill="rgb(228,190,49)"/><text x="79.1652%" y="351.50"></text></g><g><title>tcp_v4_rcv (11 samples, 0.84%)</title><rect x="78.9152%" y="325" width="0.8403%" height="15" fill="rgb(214,173,12)"/><text x="79.1652%" y="335.50"></text></g><g><title>tcp_v4_do_rcv (11 samples, 0.84%)</title><rect x="78.9152%" y="309" width="0.8403%" height="15" fill="rgb(218,26,35)"/><text x="79.1652%" y="319.50"></text></g><g><title>tcp_rcv_established (11 samples, 0.84%)</title><rect x="78.9152%" y="293" width="0.8403%" height="15" fill="rgb(220,200,19)"/><text x="79.1652%" y="303.50"></text></g><g><title>sock_def_readable (10 samples, 0.76%)</title><rect x="78.9916%" y="277" width="0.7639%" height="15" fill="rgb(239,95,49)"/><text x="79.2416%" y="287.50"></text></g><g><title>__wake_up_common_lock (10 samples, 0.76%)</title><rect x="78.9916%" y="261" width="0.7639%" height="15" fill="rgb(235,85,53)"/><text x="79.2416%" y="271.50"></text></g><g><title>__wake_up_common (10 samples, 0.76%)</title><rect x="78.9916%" y="245" width="0.7639%" height="15" fill="rgb(233,133,31)"/><text x="79.2416%" y="255.50"></text></g><g><title>try_to_wake_up (10 samples, 0.76%)</title><rect x="78.9916%" y="229" width="0.7639%" height="15" fill="rgb(218,25,20)"/><text x="79.2416%" y="239.50"></text></g><g><title>update_rq_clock (2 samples, 0.15%)</title><rect x="79.6028%" y="213" width="0.1528%" height="15" fill="rgb(252,210,38)"/><text x="79.8528%" y="223.50"></text></g><g><title>__tcp_transmit_skb (19 samples, 1.45%)</title><rect x="78.3804%" y="565" width="1.4515%" height="15" fill="rgb(242,134,21)"/><text x="78.6304%" y="575.50"></text></g><g><title>__ip_queue_xmit (19 samples, 1.45%)</title><rect x="78.3804%" y="549" width="1.4515%" height="15" fill="rgb(213,28,48)"/><text x="78.6304%" y="559.50"></text></g><g><title>ip_output (18 samples, 1.38%)</title><rect x="78.4568%" y="533" width="1.3751%" height="15" fill="rgb(250,196,2)"/><text x="78.7068%" y="543.50"></text></g><g><title>ip_finish_output2 (18 samples, 1.38%)</title><rect x="78.4568%" y="517" width="1.3751%" height="15" fill="rgb(227,5,17)"/><text x="78.7068%" y="527.50"></text></g><g><title>__local_bh_enable_ip (14 samples, 1.07%)</title><rect x="78.7624%" y="501" width="1.0695%" height="15" fill="rgb(221,226,24)"/><text x="79.0124%" y="511.50"></text></g><g><title>do_softirq (14 samples, 1.07%)</title><rect x="78.7624%" y="485" width="1.0695%" height="15" fill="rgb(211,5,48)"/><text x="79.0124%" y="495.50"></text></g><g><title>do_softirq_own_stack (14 samples, 1.07%)</title><rect x="78.7624%" y="469" width="1.0695%" height="15" fill="rgb(219,150,6)"/><text x="79.0124%" y="479.50"></text></g><g><title>__do_softirq (14 samples, 1.07%)</title><rect x="78.7624%" y="453" width="1.0695%" height="15" fill="rgb(251,46,16)"/><text x="79.0124%" y="463.50"></text></g><g><title>net_rx_action (14 samples, 1.07%)</title><rect x="78.7624%" y="437" width="1.0695%" height="15" fill="rgb(220,204,40)"/><text x="79.0124%" y="447.50"></text></g><g><title>process_backlog (14 samples, 1.07%)</title><rect x="78.7624%" y="421" width="1.0695%" height="15" fill="rgb(211,85,2)"/><text x="79.0124%" y="431.50"></text></g><g><title>__netif_receive_skb_one_core (14 samples, 1.07%)</title><rect x="78.7624%" y="405" width="1.0695%" height="15" fill="rgb(229,17,7)"/><text x="79.0124%" y="415.50"></text></g><g><title>ip_rcv (13 samples, 0.99%)</title><rect x="78.8388%" y="389" width="0.9931%" height="15" fill="rgb(239,72,28)"/><text x="79.0888%" y="399.50"></text></g><g><title>__tcp_push_pending_frames (25 samples, 1.91%)</title><rect x="78.0749%" y="597" width="1.9099%" height="15" fill="rgb(230,47,54)"/><text x="78.3249%" y="607.50">_..</text></g><g><title>tcp_write_xmit (25 samples, 1.91%)</title><rect x="78.0749%" y="581" width="1.9099%" height="15" fill="rgb(214,50,8)"/><text x="78.3249%" y="591.50">t..</text></g><g><title>do_syscall_64 (30 samples, 2.29%)</title><rect x="77.8457%" y="693" width="2.2918%" height="15" fill="rgb(216,198,43)"/><text x="78.0957%" y="703.50">d..</text></g><g><title>__x64_sys_sendto (30 samples, 2.29%)</title><rect x="77.8457%" y="677" width="2.2918%" height="15" fill="rgb(234,20,35)"/><text x="78.0957%" y="687.50">_..</text></g><g><title>__sys_sendto (30 samples, 2.29%)</title><rect x="77.8457%" y="661" width="2.2918%" height="15" fill="rgb(254,45,19)"/><text x="78.0957%" y="671.50">_..</text></g><g><title>sock_sendmsg (29 samples, 2.22%)</title><rect x="77.9221%" y="645" width="2.2154%" height="15" fill="rgb(219,14,44)"/><text x="78.1721%" y="655.50">s..</text></g><g><title>tcp_sendmsg (29 samples, 2.22%)</title><rect x="77.9221%" y="629" width="2.2154%" height="15" fill="rgb(217,220,26)"/><text x="78.1721%" y="639.50">t..</text></g><g><title>tcp_sendmsg_locked (27 samples, 2.06%)</title><rect x="78.0749%" y="613" width="2.0626%" height="15" fill="rgb(213,158,28)"/><text x="78.3249%" y="623.50">t..</text></g><g><title>sk_stream_alloc_skb (2 samples, 0.15%)</title><rect x="79.9847%" y="597" width="0.1528%" height="15" fill="rgb(252,51,52)"/><text x="80.2347%" y="607.50"></text></g><g><title>__alloc_skb (2 samples, 0.15%)</title><rect x="79.9847%" y="581" width="0.1528%" height="15" fill="rgb(246,89,16)"/><text x="80.2347%" y="591.50"></text></g><g><title>__kmalloc_node_track_caller (2 samples, 0.15%)</title><rect x="79.9847%" y="565" width="0.1528%" height="15" fill="rgb(216,158,49)"/><text x="80.2347%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (31 samples, 2.37%)</title><rect x="77.8457%" y="709" width="2.3682%" height="15" fill="rgb(236,107,19)"/><text x="78.0957%" y="719.50">en..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (33 samples, 2.52%)</title><rect x="77.7693%" y="757" width="2.5210%" height="15" fill="rgb(228,185,30)"/><text x="78.0193%" y="767.50">&lt;s..</text></g><g><title>std::sys_common::net::TcpStream::write (33 samples, 2.52%)</title><rect x="77.7693%" y="741" width="2.5210%" height="15" fill="rgb(246,134,8)"/><text x="78.0193%" y="751.50">st..</text></g><g><title>__libc_send (33 samples, 2.52%)</title><rect x="77.7693%" y="725" width="2.5210%" height="15" fill="rgb(214,143,50)"/><text x="78.0193%" y="735.50">__..</text></g><g><title>decor::Shim::run_on_tcp (200 samples, 15.28%)</title><rect x="65.0879%" y="805" width="15.2788%" height="15" fill="rgb(228,75,8)"/><text x="65.3379%" y="815.50">decor::Shim::run_on_tcp</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (200 samples, 15.28%)</title><rect x="65.0879%" y="789" width="15.2788%" height="15" fill="rgb(207,175,4)"/><text x="65.3379%" y="799.50">msql_srv::MysqlIntermed..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (34 samples, 2.60%)</title><rect x="77.7693%" y="773" width="2.5974%" height="15" fill="rgb(205,108,24)"/><text x="78.0193%" y="783.50">st..</text></g><g><title>__GI___clone (201 samples, 15.36%)</title><rect x="65.0879%" y="917" width="15.3552%" height="15" fill="rgb(244,120,49)"/><text x="65.3379%" y="927.50">__GI___clone</text></g><g><title>start_thread (201 samples, 15.36%)</title><rect x="65.0879%" y="901" width="15.3552%" height="15" fill="rgb(223,47,38)"/><text x="65.3379%" y="911.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (201 samples, 15.36%)</title><rect x="65.0879%" y="885" width="15.3552%" height="15" fill="rgb(229,179,11)"/><text x="65.3379%" y="895.50">std::sys::unix::thread::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (201 samples, 15.36%)</title><rect x="65.0879%" y="869" width="15.3552%" height="15" fill="rgb(231,122,1)"/><text x="65.3379%" y="879.50">&lt;alloc::boxed::Box&lt;F&gt; as..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (201 samples, 15.36%)</title><rect x="65.0879%" y="853" width="15.3552%" height="15" fill="rgb(245,119,9)"/><text x="65.3379%" y="863.50">&lt;alloc::boxed::Box&lt;F&gt; as..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (201 samples, 15.36%)</title><rect x="65.0879%" y="837" width="15.3552%" height="15" fill="rgb(241,163,25)"/><text x="65.3379%" y="847.50">core::ops::function::FnO..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (201 samples, 15.36%)</title><rect x="65.0879%" y="821" width="15.3552%" height="15" fill="rgb(217,214,3)"/><text x="65.3379%" y="831.50">std::sys_common::backtra..</text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.23%)</title><rect x="80.5959%" y="661" width="0.2292%" height="15" fill="rgb(240,86,28)"/><text x="80.8459%" y="671.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.15%)</title><rect x="80.6723%" y="645" width="0.1528%" height="15" fill="rgb(215,47,9)"/><text x="80.9223%" y="655.50"></text></g><g><title>hwloc::Topology::new (237 samples, 18.11%)</title><rect x="80.5959%" y="741" width="18.1054%" height="15" fill="rgb(252,25,45)"/><text x="80.8459%" y="751.50">hwloc::Topology::new</text></g><g><title>hwloc_topology_load (237 samples, 18.11%)</title><rect x="80.5959%" y="725" width="18.1054%" height="15" fill="rgb(251,164,9)"/><text x="80.8459%" y="735.50">hwloc_topology_load</text></g><g><title>[libhwloc.so.15.2.0] (237 samples, 18.11%)</title><rect x="80.5959%" y="709" width="18.1054%" height="15" fill="rgb(233,194,0)"/><text x="80.8459%" y="719.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (237 samples, 18.11%)</title><rect x="80.5959%" y="693" width="18.1054%" height="15" fill="rgb(249,111,24)"/><text x="80.8459%" y="703.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (237 samples, 18.11%)</title><rect x="80.5959%" y="677" width="18.1054%" height="15" fill="rgb(250,223,3)"/><text x="80.8459%" y="687.50">[libhwloc.so.15.2.0]</text></g><g><title>hwloc_linux_set_tid_cpubind (234 samples, 17.88%)</title><rect x="80.8251%" y="661" width="17.8762%" height="15" fill="rgb(236,178,37)"/><text x="81.0751%" y="671.50">hwloc_linux_set_tid_cpubind</text></g><g><title>__GI___sched_setaffinity_new (234 samples, 17.88%)</title><rect x="80.8251%" y="645" width="17.8762%" height="15" fill="rgb(241,158,50)"/><text x="81.0751%" y="655.50">__GI___sched_setaffinity_new</text></g><g><title>entry_SYSCALL_64 (234 samples, 17.88%)</title><rect x="80.8251%" y="629" width="17.8762%" height="15" fill="rgb(213,121,41)"/><text x="81.0751%" y="639.50">entry_SYSCALL_64</text></g><g><title>do_syscall_64 (234 samples, 17.88%)</title><rect x="80.8251%" y="613" width="17.8762%" height="15" fill="rgb(240,92,3)"/><text x="81.0751%" y="623.50">do_syscall_64</text></g><g><title>__x64_sys_sched_setaffinity (234 samples, 17.88%)</title><rect x="80.8251%" y="597" width="17.8762%" height="15" fill="rgb(205,123,3)"/><text x="81.0751%" y="607.50">__x64_sys_sched_setaffinity</text></g><g><title>sched_setaffinity (234 samples, 17.88%)</title><rect x="80.8251%" y="581" width="17.8762%" height="15" fill="rgb(205,97,47)"/><text x="81.0751%" y="591.50">sched_setaffinity</text></g><g><title>__set_cpus_allowed_ptr (234 samples, 17.88%)</title><rect x="80.8251%" y="565" width="17.8762%" height="15" fill="rgb(247,152,14)"/><text x="81.0751%" y="575.50">__set_cpus_allowed_ptr</text></g><g><title>stop_one_cpu (234 samples, 17.88%)</title><rect x="80.8251%" y="549" width="17.8762%" height="15" fill="rgb(248,195,53)"/><text x="81.0751%" y="559.50">stop_one_cpu</text></g><g><title>cpu_stop_queue_work (234 samples, 17.88%)</title><rect x="80.8251%" y="533" width="17.8762%" height="15" fill="rgb(226,201,16)"/><text x="81.0751%" y="543.50">cpu_stop_queue_work</text></g><g><title>preempt_schedule_thunk (234 samples, 17.88%)</title><rect x="80.8251%" y="517" width="17.8762%" height="15" fill="rgb(205,98,0)"/><text x="81.0751%" y="527.50">preempt_schedule_thunk</text></g><g><title>preempt_schedule_common (234 samples, 17.88%)</title><rect x="80.8251%" y="501" width="17.8762%" height="15" fill="rgb(214,191,48)"/><text x="81.0751%" y="511.50">preempt_schedule_common</text></g><g><title>__schedule (234 samples, 17.88%)</title><rect x="80.8251%" y="485" width="17.8762%" height="15" fill="rgb(237,112,39)"/><text x="81.0751%" y="495.50">__schedule</text></g><g><title>finish_task_switch (234 samples, 17.88%)</title><rect x="80.8251%" y="469" width="17.8762%" height="15" fill="rgb(247,203,27)"/><text x="81.0751%" y="479.50">finish_task_switch</text></g><g><title>__perf_event_task_sched_in (232 samples, 17.72%)</title><rect x="80.9778%" y="453" width="17.7235%" height="15" fill="rgb(235,124,28)"/><text x="81.2278%" y="463.50">__perf_event_task_sched_in</text></g><g><title>__intel_pmu_enable_all.constprop.0 (230 samples, 17.57%)</title><rect x="81.1306%" y="437" width="17.5707%" height="15" fill="rgb(208,207,46)"/><text x="81.3806%" y="447.50">__intel_pmu_enable_all.cons..</text></g><g><title>native_write_msr (230 samples, 17.57%)</title><rect x="81.1306%" y="421" width="17.5707%" height="15" fill="rgb(234,176,4)"/><text x="81.3806%" y="431.50">native_write_msr</text></g><g><title>__libc_start_main (240 samples, 18.33%)</title><rect x="80.5959%" y="901" width="18.3346%" height="15" fill="rgb(230,133,28)"/><text x="80.8459%" y="911.50">__libc_start_main</text></g><g><title>main (240 samples, 18.33%)</title><rect x="80.5959%" y="885" width="18.3346%" height="15" fill="rgb(211,137,40)"/><text x="80.8459%" y="895.50">main</text></g><g><title>std::rt::lang_start_internal (240 samples, 18.33%)</title><rect x="80.5959%" y="869" width="18.3346%" height="15" fill="rgb(254,35,13)"/><text x="80.8459%" y="879.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (240 samples, 18.33%)</title><rect x="80.5959%" y="853" width="18.3346%" height="15" fill="rgb(225,49,51)"/><text x="80.8459%" y="863.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (240 samples, 18.33%)</title><rect x="80.5959%" y="837" width="18.3346%" height="15" fill="rgb(251,10,15)"/><text x="80.8459%" y="847.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (240 samples, 18.33%)</title><rect x="80.5959%" y="821" width="18.3346%" height="15" fill="rgb(228,207,15)"/><text x="80.8459%" y="831.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (240 samples, 18.33%)</title><rect x="80.5959%" y="805" width="18.3346%" height="15" fill="rgb(241,99,19)"/><text x="80.8459%" y="815.50">core::ops::function::impls::&lt;..</text></g><g><title>std::rt::lang_start::_{{closure}} (240 samples, 18.33%)</title><rect x="80.5959%" y="789" width="18.3346%" height="15" fill="rgb(207,104,49)"/><text x="80.8459%" y="799.50">std::rt::lang_start::_{{closu..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (240 samples, 18.33%)</title><rect x="80.5959%" y="773" width="18.3346%" height="15" fill="rgb(234,99,18)"/><text x="80.8459%" y="783.50">std::sys_common::backtrace::_..</text></g><g><title>lobsters::main (240 samples, 18.33%)</title><rect x="80.5959%" y="757" width="18.3346%" height="15" fill="rgb(213,191,49)"/><text x="80.8459%" y="767.50">lobsters::main</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (2 samples, 0.15%)</title><rect x="98.7777%" y="741" width="0.1528%" height="15" fill="rgb(210,226,19)"/><text x="99.0277%" y="751.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.15%)</title><rect x="98.7777%" y="725" width="0.1528%" height="15" fill="rgb(229,97,18)"/><text x="99.0277%" y="735.50"></text></g><g><title>_start (241 samples, 18.41%)</title><rect x="80.5959%" y="917" width="18.4110%" height="15" fill="rgb(211,167,15)"/><text x="80.8459%" y="927.50">_start</text></g><g><title>anon.5d78f01d0c76bb6b8aa47fe516d3530c.58.llvm.16501999531583085355 (2 samples, 0.15%)</title><rect x="99.0833%" y="917" width="0.1528%" height="15" fill="rgb(210,169,34)"/><text x="99.3333%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.15%)</title><rect x="99.0833%" y="901" width="0.1528%" height="15" fill="rgb(241,121,31)"/><text x="99.3333%" y="911.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.23%)</title><rect x="99.2361%" y="917" width="0.2292%" height="15" fill="rgb(232,40,11)"/><text x="99.4861%" y="927.50"></text></g><g><title>do_syscall_64 (2 samples, 0.15%)</title><rect x="99.3125%" y="901" width="0.1528%" height="15" fill="rgb(205,86,26)"/><text x="99.5625%" y="911.50"></text></g><g><title>lobsters (1,303 samples, 99.54%)</title><rect x="0.0000%" y="933" width="99.5416%" height="15" fill="rgb(231,126,28)"/><text x="0.2500%" y="943.50">lobsters</text></g><g><title>all (1,309 samples, 100%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(219,221,18)"/><text x="0.2500%" y="959.50"></text></g><g><title>perf (6 samples, 0.46%)</title><rect x="99.5416%" y="933" width="0.4584%" height="15" fill="rgb(211,40,0)"/><text x="99.7916%" y="943.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.46%)</title><rect x="99.5416%" y="917" width="0.4584%" height="15" fill="rgb(239,85,43)"/><text x="99.7916%" y="927.50"></text></g><g><title>do_syscall_64 (6 samples, 0.46%)</title><rect x="99.5416%" y="901" width="0.4584%" height="15" fill="rgb(231,55,21)"/><text x="99.7916%" y="911.50"></text></g><g><title>__x64_sys_execve (6 samples, 0.46%)</title><rect x="99.5416%" y="885" width="0.4584%" height="15" fill="rgb(225,184,43)"/><text x="99.7916%" y="895.50"></text></g><g><title>do_execve (6 samples, 0.46%)</title><rect x="99.5416%" y="869" width="0.4584%" height="15" fill="rgb(251,158,41)"/><text x="99.7916%" y="879.50"></text></g><g><title>__do_execve_file (6 samples, 0.46%)</title><rect x="99.5416%" y="853" width="0.4584%" height="15" fill="rgb(234,159,37)"/><text x="99.7916%" y="863.50"></text></g><g><title>search_binary_handler.part.0 (6 samples, 0.46%)</title><rect x="99.5416%" y="837" width="0.4584%" height="15" fill="rgb(216,204,22)"/><text x="99.7916%" y="847.50"></text></g><g><title>load_elf_binary (6 samples, 0.46%)</title><rect x="99.5416%" y="821" width="0.4584%" height="15" fill="rgb(214,17,3)"/><text x="99.7916%" y="831.50"></text></g><g><title>setup_new_exec (6 samples, 0.46%)</title><rect x="99.5416%" y="805" width="0.4584%" height="15" fill="rgb(212,111,17)"/><text x="99.7916%" y="815.50"></text></g><g><title>perf_event_exec (6 samples, 0.46%)</title><rect x="99.5416%" y="789" width="0.4584%" height="15" fill="rgb(221,157,24)"/><text x="99.7916%" y="799.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.38%)</title><rect x="99.6180%" y="773" width="0.3820%" height="15" fill="rgb(252,16,13)"/><text x="99.8680%" y="783.50"></text></g><g><title>native_write_msr (5 samples, 0.38%)</title><rect x="99.6180%" y="757" width="0.3820%" height="15" fill="rgb(221,62,2)"/><text x="99.8680%" y="767.50"></text></g></svg></svg>