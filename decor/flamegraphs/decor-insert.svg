<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="966" onload="init(evt)" viewBox="0 0 1200 966" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="966" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="949.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="949.00"> </text><svg id="frames" x="10" width="1180"><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="0.0000%" y="869" width="0.1608%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="879.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.16%)</title><rect x="0.1608%" y="869" width="0.1608%" height="15" fill="rgb(217,0,24)"/><text x="0.4108%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="0.4823%" y="869" width="0.1608%" height="15" fill="rgb(221,193,54)"/><text x="0.7323%" y="879.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="0.8039%" y="869" width="0.1608%" height="15" fill="rgb(248,212,6)"/><text x="1.0539%" y="879.50"></text></g><g><title>&lt;mysql::conn::ConnMut as core::ops::deref::Deref&gt;::deref (2 samples, 0.16%)</title><rect x="0.8039%" y="853" width="0.1608%" height="15" fill="rgb(208,68,35)"/><text x="1.0539%" y="863.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (2 samples, 0.16%)</title><rect x="1.3666%" y="869" width="0.1608%" height="15" fill="rgb(232,128,0)"/><text x="1.6166%" y="879.50"></text></g><g><title>__libc_send (5 samples, 0.40%)</title><rect x="1.7685%" y="869" width="0.4019%" height="15" fill="rgb(207,160,47)"/><text x="2.0185%" y="879.50"></text></g><g><title>entry_SYSCALL_64 (5 samples, 0.40%)</title><rect x="1.7685%" y="853" width="0.4019%" height="15" fill="rgb(228,23,34)"/><text x="2.0185%" y="863.50"></text></g><g><title>_int_free (8 samples, 0.64%)</title><rect x="2.3312%" y="869" width="0.6431%" height="15" fill="rgb(218,30,26)"/><text x="2.5812%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.32%)</title><rect x="2.9743%" y="869" width="0.3215%" height="15" fill="rgb(220,122,19)"/><text x="3.2243%" y="879.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="3.5370%" y="869" width="0.2412%" height="15" fill="rgb(250,228,42)"/><text x="3.7870%" y="879.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.32%)</title><rect x="3.7781%" y="869" width="0.3215%" height="15" fill="rgb(240,193,28)"/><text x="4.0281%" y="879.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (3 samples, 0.24%)</title><rect x="4.4212%" y="869" width="0.2412%" height="15" fill="rgb(216,20,37)"/><text x="4.6712%" y="879.50"></text></g><g><title>[anon] (61 samples, 4.90%)</title><rect x="0.0000%" y="885" width="4.9035%" height="15" fill="rgb(206,188,39)"/><text x="0.2500%" y="895.50">[anon]</text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="5.0643%" y="869" width="0.1608%" height="15" fill="rgb(217,207,13)"/><text x="5.3143%" y="879.50"></text></g><g><title>_int_free (2 samples, 0.16%)</title><rect x="5.2251%" y="869" width="0.1608%" height="15" fill="rgb(231,73,38)"/><text x="5.4751%" y="879.50"></text></g><g><title>alloc::string::String::push (2 samples, 0.16%)</title><rect x="5.5466%" y="869" width="0.1608%" height="15" fill="rgb(225,20,46)"/><text x="5.7966%" y="879.50"></text></g><g><title>[lobsters] (10 samples, 0.80%)</title><rect x="4.9839%" y="885" width="0.8039%" height="15" fill="rgb(210,31,41)"/><text x="5.2339%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.40%)</title><rect x="5.9486%" y="821" width="0.4019%" height="15" fill="rgb(221,200,47)"/><text x="6.1986%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="6.1897%" y="805" width="0.1608%" height="15" fill="rgb(226,26,5)"/><text x="6.4397%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.16%)</title><rect x="6.9132%" y="725" width="0.1608%" height="15" fill="rgb(249,33,26)"/><text x="7.1632%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_ptr (2 samples, 0.16%)</title><rect x="6.9132%" y="709" width="0.1608%" height="15" fill="rgb(235,183,28)"/><text x="7.1632%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (10 samples, 0.80%)</title><rect x="6.5916%" y="773" width="0.8039%" height="15" fill="rgb(221,5,38)"/><text x="6.8416%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (6 samples, 0.48%)</title><rect x="6.9132%" y="757" width="0.4823%" height="15" fill="rgb(247,18,42)"/><text x="7.1632%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (6 samples, 0.48%)</title><rect x="6.9132%" y="741" width="0.4823%" height="15" fill="rgb(241,131,45)"/><text x="7.1632%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (4 samples, 0.32%)</title><rect x="7.0740%" y="725" width="0.3215%" height="15" fill="rgb(249,31,29)"/><text x="7.3240%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.32%)</title><rect x="7.0740%" y="709" width="0.3215%" height="15" fill="rgb(225,111,53)"/><text x="7.3240%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.32%)</title><rect x="7.0740%" y="693" width="0.3215%" height="15" fill="rgb(238,160,17)"/><text x="7.3240%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (4 samples, 0.32%)</title><rect x="7.0740%" y="677" width="0.3215%" height="15" fill="rgb(214,148,48)"/><text x="7.3240%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.32%)</title><rect x="7.0740%" y="661" width="0.3215%" height="15" fill="rgb(232,36,49)"/><text x="7.3240%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.32%)</title><rect x="7.0740%" y="645" width="0.3215%" height="15" fill="rgb(209,103,24)"/><text x="7.3240%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (4 samples, 0.32%)</title><rect x="7.0740%" y="629" width="0.3215%" height="15" fill="rgb(229,88,8)"/><text x="7.3240%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.32%)</title><rect x="7.0740%" y="613" width="0.3215%" height="15" fill="rgb(213,181,19)"/><text x="7.3240%" y="623.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.32%)</title><rect x="7.0740%" y="597" width="0.3215%" height="15" fill="rgb(254,191,54)"/><text x="7.3240%" y="607.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.32%)</title><rect x="7.0740%" y="581" width="0.3215%" height="15" fill="rgb(241,83,37)"/><text x="7.3240%" y="591.50"></text></g><g><title>_int_malloc (2 samples, 0.16%)</title><rect x="7.2347%" y="565" width="0.1608%" height="15" fill="rgb(233,36,39)"/><text x="7.4847%" y="575.50"></text></g><g><title>page_fault (2 samples, 0.16%)</title><rect x="7.5563%" y="725" width="0.1608%" height="15" fill="rgb(226,3,54)"/><text x="7.8063%" y="735.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.16%)</title><rect x="7.5563%" y="709" width="0.1608%" height="15" fill="rgb(245,192,40)"/><text x="7.8063%" y="719.50"></text></g><g><title>handle_mm_fault (2 samples, 0.16%)</title><rect x="7.5563%" y="693" width="0.1608%" height="15" fill="rgb(238,167,29)"/><text x="7.8063%" y="703.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.16%)</title><rect x="7.5563%" y="677" width="0.1608%" height="15" fill="rgb(232,182,51)"/><text x="7.8063%" y="687.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.40%)</title><rect x="7.3955%" y="773" width="0.4019%" height="15" fill="rgb(231,60,39)"/><text x="7.6455%" y="783.50"></text></g><g><title>_int_malloc (4 samples, 0.32%)</title><rect x="7.4759%" y="757" width="0.3215%" height="15" fill="rgb(208,69,12)"/><text x="7.7259%" y="767.50"></text></g><g><title>sysmalloc (4 samples, 0.32%)</title><rect x="7.4759%" y="741" width="0.3215%" height="15" fill="rgb(235,93,37)"/><text x="7.7259%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (20 samples, 1.61%)</title><rect x="6.3505%" y="821" width="1.6077%" height="15" fill="rgb(213,116,39)"/><text x="6.6005%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (18 samples, 1.45%)</title><rect x="6.5113%" y="805" width="1.4469%" height="15" fill="rgb(222,207,29)"/><text x="6.7613%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (18 samples, 1.45%)</title><rect x="6.5113%" y="789" width="1.4469%" height="15" fill="rgb(206,96,30)"/><text x="6.7613%" y="799.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.16%)</title><rect x="7.7974%" y="773" width="0.1608%" height="15" fill="rgb(218,138,4)"/><text x="8.0474%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (26 samples, 2.09%)</title><rect x="5.9486%" y="837" width="2.0900%" height="15" fill="rgb(250,191,14)"/><text x="6.1986%" y="847.50">&lt;..</text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.32%)</title><rect x="8.1994%" y="773" width="0.3215%" height="15" fill="rgb(239,60,40)"/><text x="8.4494%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.32%)</title><rect x="8.1994%" y="757" width="0.3215%" height="15" fill="rgb(206,27,48)"/><text x="8.4494%" y="767.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (4 samples, 0.32%)</title><rect x="8.1994%" y="741" width="0.3215%" height="15" fill="rgb(225,35,8)"/><text x="8.4494%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="8.3601%" y="725" width="0.1608%" height="15" fill="rgb(250,213,24)"/><text x="8.6101%" y="735.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.16%)</title><rect x="8.3601%" y="709" width="0.1608%" height="15" fill="rgb(247,123,22)"/><text x="8.6101%" y="719.50"></text></g><g><title>_int_realloc (2 samples, 0.16%)</title><rect x="8.3601%" y="693" width="0.1608%" height="15" fill="rgb(231,138,38)"/><text x="8.6101%" y="703.50"></text></g><g><title>_int_malloc (2 samples, 0.16%)</title><rect x="8.3601%" y="677" width="0.1608%" height="15" fill="rgb(231,145,46)"/><text x="8.6101%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (6 samples, 0.48%)</title><rect x="8.1994%" y="805" width="0.4823%" height="15" fill="rgb(251,118,11)"/><text x="8.4494%" y="815.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Values as sql_parser::ast::display::AstDisplay&gt;::fmt (6 samples, 0.48%)</title><rect x="8.1994%" y="789" width="0.4823%" height="15" fill="rgb(217,147,25)"/><text x="8.4494%" y="799.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.16%)</title><rect x="8.5209%" y="773" width="0.1608%" height="15" fill="rgb(247,81,37)"/><text x="8.7709%" y="783.50"></text></g><g><title>core::fmt::write (10 samples, 0.80%)</title><rect x="8.0386%" y="837" width="0.8039%" height="15" fill="rgb(209,12,38)"/><text x="8.2886%" y="847.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (8 samples, 0.64%)</title><rect x="8.1994%" y="821" width="0.6431%" height="15" fill="rgb(227,1,9)"/><text x="8.4494%" y="831.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::InsertStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.16%)</title><rect x="8.6817%" y="805" width="0.1608%" height="15" fill="rgb(248,47,43)"/><text x="8.9317%" y="815.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.16%)</title><rect x="8.6817%" y="789" width="0.1608%" height="15" fill="rgb(221,10,30)"/><text x="8.9317%" y="799.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="9.0032%" y="805" width="0.1608%" height="15" fill="rgb(210,229,1)"/><text x="9.2532%" y="815.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (2 samples, 0.16%)</title><rect x="9.0032%" y="789" width="0.1608%" height="15" fill="rgb(222,148,37)"/><text x="9.2532%" y="799.50"></text></g><g><title>decor::helpers::str_ident_match (4 samples, 0.32%)</title><rect x="9.0032%" y="837" width="0.3215%" height="15" fill="rgb(234,67,33)"/><text x="9.2532%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="9.0032%" y="821" width="0.3215%" height="15" fill="rgb(247,98,35)"/><text x="9.2532%" y="831.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.24%)</title><rect x="9.4051%" y="789" width="0.2412%" height="15" fill="rgb(247,138,52)"/><text x="9.6551%" y="799.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (3 samples, 0.24%)</title><rect x="9.4051%" y="773" width="0.2412%" height="15" fill="rgb(213,79,30)"/><text x="9.6551%" y="783.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (2 samples, 0.16%)</title><rect x="9.4855%" y="757" width="0.1608%" height="15" fill="rgb(246,177,23)"/><text x="9.7355%" y="767.50"></text></g><g><title>core::fmt::write (4 samples, 0.32%)</title><rect x="9.4051%" y="821" width="0.3215%" height="15" fill="rgb(230,62,27)"/><text x="9.6551%" y="831.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::ObjectName as core::fmt::Display&gt;::fmt (4 samples, 0.32%)</title><rect x="9.4051%" y="805" width="0.3215%" height="15" fill="rgb(216,154,8)"/><text x="9.6551%" y="815.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.24%)</title><rect x="9.7267%" y="741" width="0.2412%" height="15" fill="rgb(244,35,45)"/><text x="9.9767%" y="751.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (3 samples, 0.24%)</title><rect x="9.7267%" y="725" width="0.2412%" height="15" fill="rgb(251,115,12)"/><text x="9.9767%" y="735.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (3 samples, 0.24%)</title><rect x="9.7267%" y="709" width="0.2412%" height="15" fill="rgb(240,54,50)"/><text x="9.9767%" y="719.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (3 samples, 0.24%)</title><rect x="9.7267%" y="693" width="0.2412%" height="15" fill="rgb(233,84,52)"/><text x="9.9767%" y="703.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (3 samples, 0.24%)</title><rect x="9.7267%" y="677" width="0.2412%" height="15" fill="rgb(207,117,47)"/><text x="9.9767%" y="687.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (3 samples, 0.24%)</title><rect x="9.7267%" y="661" width="0.2412%" height="15" fill="rgb(249,43,39)"/><text x="9.9767%" y="671.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="9.8071%" y="645" width="0.1608%" height="15" fill="rgb(209,38,44)"/><text x="10.0571%" y="655.50"></text></g><g><title>alloc::fmt::format (5 samples, 0.40%)</title><rect x="9.7267%" y="805" width="0.4019%" height="15" fill="rgb(236,212,23)"/><text x="9.9767%" y="815.50"></text></g><g><title>core::fmt::Write::write_fmt (5 samples, 0.40%)</title><rect x="9.7267%" y="789" width="0.4019%" height="15" fill="rgb(242,79,21)"/><text x="9.9767%" y="799.50"></text></g><g><title>core::fmt::write (5 samples, 0.40%)</title><rect x="9.7267%" y="773" width="0.4019%" height="15" fill="rgb(211,96,35)"/><text x="9.9767%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (5 samples, 0.40%)</title><rect x="9.7267%" y="757" width="0.4019%" height="15" fill="rgb(253,215,40)"/><text x="9.9767%" y="767.50"></text></g><g><title>decor::query_transformer::QueryTransformer::objname_to_mv_string (10 samples, 0.80%)</title><rect x="9.4051%" y="837" width="0.8039%" height="15" fill="rgb(211,81,21)"/><text x="9.6551%" y="847.50"></text></g><g><title>decor::query_transformer::QueryTransformer::idents_to_mv_idents (6 samples, 0.48%)</title><rect x="9.7267%" y="821" width="0.4823%" height="15" fill="rgb(208,190,38)"/><text x="9.9767%" y="831.50"></text></g><g><title>dequeue_entity (3 samples, 0.24%)</title><rect x="11.0129%" y="485" width="0.2412%" height="15" fill="rgb(235,213,38)"/><text x="11.2629%" y="495.50"></text></g><g><title>update_load_avg (2 samples, 0.16%)</title><rect x="11.0932%" y="469" width="0.1608%" height="15" fill="rgb(237,122,38)"/><text x="11.3432%" y="479.50"></text></g><g><title>dequeue_task_fair (4 samples, 0.32%)</title><rect x="11.0129%" y="501" width="0.3215%" height="15" fill="rgb(244,218,35)"/><text x="11.2629%" y="511.50"></text></g><g><title>psi_task_change (2 samples, 0.16%)</title><rect x="11.4148%" y="501" width="0.1608%" height="15" fill="rgb(240,68,47)"/><text x="11.6648%" y="511.50"></text></g><g><title>psi_group_change (2 samples, 0.16%)</title><rect x="11.4148%" y="485" width="0.1608%" height="15" fill="rgb(210,16,53)"/><text x="11.6648%" y="495.50"></text></g><g><title>uclamp_rq_dec_id (3 samples, 0.24%)</title><rect x="11.6559%" y="501" width="0.2412%" height="15" fill="rgb(235,124,12)"/><text x="11.9059%" y="511.50"></text></g><g><title>sk_wait_data (16 samples, 1.29%)</title><rect x="10.7717%" y="581" width="1.2862%" height="15" fill="rgb(224,169,11)"/><text x="11.0217%" y="591.50"></text></g><g><title>wait_woken (16 samples, 1.29%)</title><rect x="10.7717%" y="565" width="1.2862%" height="15" fill="rgb(250,166,2)"/><text x="11.0217%" y="575.50"></text></g><g><title>schedule_timeout (15 samples, 1.21%)</title><rect x="10.8521%" y="549" width="1.2058%" height="15" fill="rgb(242,216,29)"/><text x="11.1021%" y="559.50"></text></g><g><title>schedule (15 samples, 1.21%)</title><rect x="10.8521%" y="533" width="1.2058%" height="15" fill="rgb(230,116,27)"/><text x="11.1021%" y="543.50"></text></g><g><title>__schedule (15 samples, 1.21%)</title><rect x="10.8521%" y="517" width="1.2058%" height="15" fill="rgb(228,99,48)"/><text x="11.1021%" y="527.50"></text></g><g><title>update_rq_clock (2 samples, 0.16%)</title><rect x="11.8971%" y="501" width="0.1608%" height="15" fill="rgb(253,11,6)"/><text x="12.1471%" y="511.50"></text></g><g><title>update_irq_load_avg (2 samples, 0.16%)</title><rect x="11.8971%" y="485" width="0.1608%" height="15" fill="rgb(247,143,39)"/><text x="12.1471%" y="495.50"></text></g><g><title>inet_recvmsg (20 samples, 1.61%)</title><rect x="10.6913%" y="613" width="1.6077%" height="15" fill="rgb(236,97,10)"/><text x="10.9413%" y="623.50"></text></g><g><title>tcp_recvmsg (20 samples, 1.61%)</title><rect x="10.6913%" y="597" width="1.6077%" height="15" fill="rgb(233,208,19)"/><text x="10.9413%" y="607.50"></text></g><g><title>skb_copy_datagram_iter (3 samples, 0.24%)</title><rect x="12.0579%" y="581" width="0.2412%" height="15" fill="rgb(216,164,2)"/><text x="12.3079%" y="591.50"></text></g><g><title>__skb_datagram_iter (3 samples, 0.24%)</title><rect x="12.0579%" y="565" width="0.2412%" height="15" fill="rgb(220,129,5)"/><text x="12.3079%" y="575.50"></text></g><g><title>__x64_sys_recvfrom (21 samples, 1.69%)</title><rect x="10.6913%" y="645" width="1.6881%" height="15" fill="rgb(242,17,10)"/><text x="10.9413%" y="655.50"></text></g><g><title>__sys_recvfrom (21 samples, 1.69%)</title><rect x="10.6913%" y="629" width="1.6881%" height="15" fill="rgb(242,107,0)"/><text x="10.9413%" y="639.50"></text></g><g><title>do_syscall_64 (22 samples, 1.77%)</title><rect x="10.6913%" y="661" width="1.7685%" height="15" fill="rgb(251,28,31)"/><text x="10.9413%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (25 samples, 2.01%)</title><rect x="10.6913%" y="677" width="2.0096%" height="15" fill="rgb(233,223,10)"/><text x="10.9413%" y="687.50">e..</text></g><g><title>prepare_exit_to_usermode (3 samples, 0.24%)</title><rect x="12.4598%" y="661" width="0.2412%" height="15" fill="rgb(215,21,27)"/><text x="12.7098%" y="671.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (29 samples, 2.33%)</title><rect x="10.4502%" y="773" width="2.3312%" height="15" fill="rgb(232,23,21)"/><text x="10.7002%" y="783.50">&lt;..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (28 samples, 2.25%)</title><rect x="10.5305%" y="757" width="2.2508%" height="15" fill="rgb(244,5,23)"/><text x="10.7805%" y="767.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::read (28 samples, 2.25%)</title><rect x="10.5305%" y="741" width="2.2508%" height="15" fill="rgb(226,81,46)"/><text x="10.7805%" y="751.50">s..</text></g><g><title>std::sys::unix::net::Socket::read (28 samples, 2.25%)</title><rect x="10.5305%" y="725" width="2.2508%" height="15" fill="rgb(247,70,30)"/><text x="10.7805%" y="735.50">s..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (28 samples, 2.25%)</title><rect x="10.5305%" y="709" width="2.2508%" height="15" fill="rgb(212,68,19)"/><text x="10.7805%" y="719.50">s..</text></g><g><title>__libc_recv (28 samples, 2.25%)</title><rect x="10.5305%" y="693" width="2.2508%" height="15" fill="rgb(240,187,13)"/><text x="10.7805%" y="703.50">_..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 2.41%)</title><rect x="10.4502%" y="789" width="2.4116%" height="15" fill="rgb(223,113,26)"/><text x="10.7002%" y="799.50">&lt;m..</text></g><g><title>mysql::conn::Conn::handle_result_set (36 samples, 2.89%)</title><rect x="10.2090%" y="821" width="2.8939%" height="15" fill="rgb(206,192,2)"/><text x="10.4590%" y="831.50">my..</text></g><g><title>mysql::conn::Conn::read_packet (34 samples, 2.73%)</title><rect x="10.3698%" y="805" width="2.7331%" height="15" fill="rgb(241,108,4)"/><text x="10.6198%" y="815.50">my..</text></g><g><title>std::io::error::Error::_new (2 samples, 0.16%)</title><rect x="12.9421%" y="789" width="0.1608%" height="15" fill="rgb(247,173,49)"/><text x="13.1921%" y="799.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2 samples, 0.16%)</title><rect x="12.9421%" y="773" width="0.1608%" height="15" fill="rgb(224,114,35)"/><text x="13.1921%" y="783.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.16%)</title><rect x="12.9421%" y="757" width="0.1608%" height="15" fill="rgb(245,159,27)"/><text x="13.1921%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.16%)</title><rect x="12.9421%" y="741" width="0.1608%" height="15" fill="rgb(245,172,44)"/><text x="13.1921%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="12.9421%" y="725" width="0.1608%" height="15" fill="rgb(236,23,11)"/><text x="13.1921%" y="735.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="12.9421%" y="709" width="0.1608%" height="15" fill="rgb(205,117,38)"/><text x="13.1921%" y="719.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.16%)</title><rect x="12.9421%" y="693" width="0.1608%" height="15" fill="rgb(237,72,25)"/><text x="13.1921%" y="703.50"></text></g><g><title>_int_malloc (2 samples, 0.16%)</title><rect x="12.9421%" y="677" width="0.1608%" height="15" fill="rgb(244,70,9)"/><text x="13.1921%" y="687.50"></text></g><g><title>mysql::conn::Conn::_query (37 samples, 2.97%)</title><rect x="10.2090%" y="837" width="2.9743%" height="15" fill="rgb(217,125,39)"/><text x="10.4590%" y="847.50">mys..</text></g><g><title>psi_task_change (2 samples, 0.16%)</title><rect x="13.9871%" y="469" width="0.1608%" height="15" fill="rgb(235,36,10)"/><text x="14.2371%" y="479.50"></text></g><g><title>__x64_sys_recvfrom (10 samples, 0.80%)</title><rect x="13.4244%" y="613" width="0.8039%" height="15" fill="rgb(251,123,47)"/><text x="13.6744%" y="623.50"></text></g><g><title>__sys_recvfrom (10 samples, 0.80%)</title><rect x="13.4244%" y="597" width="0.8039%" height="15" fill="rgb(221,13,13)"/><text x="13.6744%" y="607.50"></text></g><g><title>inet_recvmsg (9 samples, 0.72%)</title><rect x="13.5048%" y="581" width="0.7235%" height="15" fill="rgb(238,131,9)"/><text x="13.7548%" y="591.50"></text></g><g><title>tcp_recvmsg (9 samples, 0.72%)</title><rect x="13.5048%" y="565" width="0.7235%" height="15" fill="rgb(211,50,8)"/><text x="13.7548%" y="575.50"></text></g><g><title>sk_wait_data (8 samples, 0.64%)</title><rect x="13.5852%" y="549" width="0.6431%" height="15" fill="rgb(245,182,24)"/><text x="13.8352%" y="559.50"></text></g><g><title>wait_woken (5 samples, 0.40%)</title><rect x="13.8264%" y="533" width="0.4019%" height="15" fill="rgb(242,14,37)"/><text x="14.0764%" y="543.50"></text></g><g><title>schedule_timeout (5 samples, 0.40%)</title><rect x="13.8264%" y="517" width="0.4019%" height="15" fill="rgb(246,228,12)"/><text x="14.0764%" y="527.50"></text></g><g><title>schedule (5 samples, 0.40%)</title><rect x="13.8264%" y="501" width="0.4019%" height="15" fill="rgb(213,55,15)"/><text x="14.0764%" y="511.50"></text></g><g><title>__schedule (5 samples, 0.40%)</title><rect x="13.8264%" y="485" width="0.4019%" height="15" fill="rgb(209,9,3)"/><text x="14.0764%" y="495.50"></text></g><g><title>do_syscall_64 (11 samples, 0.88%)</title><rect x="13.4244%" y="629" width="0.8842%" height="15" fill="rgb(230,59,30)"/><text x="13.6744%" y="639.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (14 samples, 1.13%)</title><rect x="13.3441%" y="741" width="1.1254%" height="15" fill="rgb(209,121,21)"/><text x="13.5941%" y="751.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (13 samples, 1.05%)</title><rect x="13.4244%" y="725" width="1.0450%" height="15" fill="rgb(220,109,13)"/><text x="13.6744%" y="735.50"></text></g><g><title>std::sys_common::net::TcpStream::read (13 samples, 1.05%)</title><rect x="13.4244%" y="709" width="1.0450%" height="15" fill="rgb(232,18,1)"/><text x="13.6744%" y="719.50"></text></g><g><title>std::sys::unix::net::Socket::read (13 samples, 1.05%)</title><rect x="13.4244%" y="693" width="1.0450%" height="15" fill="rgb(215,41,42)"/><text x="13.6744%" y="703.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (13 samples, 1.05%)</title><rect x="13.4244%" y="677" width="1.0450%" height="15" fill="rgb(224,123,36)"/><text x="13.6744%" y="687.50"></text></g><g><title>__libc_recv (13 samples, 1.05%)</title><rect x="13.4244%" y="661" width="1.0450%" height="15" fill="rgb(240,125,3)"/><text x="13.6744%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (13 samples, 1.05%)</title><rect x="13.4244%" y="645" width="1.0450%" height="15" fill="rgb(205,98,50)"/><text x="13.6744%" y="655.50"></text></g><g><title>prepare_exit_to_usermode (2 samples, 0.16%)</title><rect x="14.3087%" y="629" width="0.1608%" height="15" fill="rgb(205,185,37)"/><text x="14.5587%" y="639.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (17 samples, 1.37%)</title><rect x="13.2637%" y="789" width="1.3666%" height="15" fill="rgb(238,207,15)"/><text x="13.5137%" y="799.50"></text></g><g><title>mysql::conn::Conn::read_packet (17 samples, 1.37%)</title><rect x="13.2637%" y="773" width="1.3666%" height="15" fill="rgb(213,199,42)"/><text x="13.5137%" y="783.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 1.29%)</title><rect x="13.3441%" y="757" width="1.2862%" height="15" fill="rgb(235,201,11)"/><text x="13.5941%" y="767.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (2 samples, 0.16%)</title><rect x="14.4695%" y="741" width="0.1608%" height="15" fill="rgb(207,46,11)"/><text x="14.7195%" y="751.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (2 samples, 0.16%)</title><rect x="14.4695%" y="725" width="0.1608%" height="15" fill="rgb(241,35,35)"/><text x="14.7195%" y="735.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.16%)</title><rect x="14.4695%" y="709" width="0.1608%" height="15" fill="rgb(243,32,47)"/><text x="14.7195%" y="719.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::encode (2 samples, 0.16%)</title><rect x="14.6302%" y="773" width="0.1608%" height="15" fill="rgb(247,202,23)"/><text x="14.8802%" y="783.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::encode (2 samples, 0.16%)</title><rect x="14.6302%" y="757" width="0.1608%" height="15" fill="rgb(219,102,11)"/><text x="14.8802%" y="767.50"></text></g><g><title>eth_type_trans (4 samples, 0.32%)</title><rect x="15.5145%" y="453" width="0.3215%" height="15" fill="rgb(243,110,44)"/><text x="15.7645%" y="463.50"></text></g><g><title>__dev_queue_xmit (6 samples, 0.48%)</title><rect x="15.4341%" y="501" width="0.4823%" height="15" fill="rgb(222,74,54)"/><text x="15.6841%" y="511.50"></text></g><g><title>dev_hard_start_xmit (6 samples, 0.48%)</title><rect x="15.4341%" y="485" width="0.4823%" height="15" fill="rgb(216,99,12)"/><text x="15.6841%" y="495.50"></text></g><g><title>loopback_xmit (5 samples, 0.40%)</title><rect x="15.5145%" y="469" width="0.4019%" height="15" fill="rgb(226,22,26)"/><text x="15.7645%" y="479.50"></text></g><g><title>enqueue_task (2 samples, 0.16%)</title><rect x="16.5595%" y="197" width="0.1608%" height="15" fill="rgb(217,163,10)"/><text x="16.8095%" y="207.50"></text></g><g><title>account_entity_enqueue (2 samples, 0.16%)</title><rect x="16.7203%" y="165" width="0.1608%" height="15" fill="rgb(213,25,53)"/><text x="16.9703%" y="175.50"></text></g><g><title>enqueue_task_fair (3 samples, 0.24%)</title><rect x="16.7203%" y="197" width="0.2412%" height="15" fill="rgb(252,105,26)"/><text x="16.9703%" y="207.50"></text></g><g><title>enqueue_entity (3 samples, 0.24%)</title><rect x="16.7203%" y="181" width="0.2412%" height="15" fill="rgb(220,39,43)"/><text x="16.9703%" y="191.50"></text></g><g><title>sock_def_readable (9 samples, 0.72%)</title><rect x="16.3987%" y="277" width="0.7235%" height="15" fill="rgb(229,68,48)"/><text x="16.6487%" y="287.50"></text></g><g><title>__wake_up_common_lock (9 samples, 0.72%)</title><rect x="16.3987%" y="261" width="0.7235%" height="15" fill="rgb(252,8,32)"/><text x="16.6487%" y="271.50"></text></g><g><title>__wake_up_common (9 samples, 0.72%)</title><rect x="16.3987%" y="245" width="0.7235%" height="15" fill="rgb(223,20,43)"/><text x="16.6487%" y="255.50"></text></g><g><title>pollwake (9 samples, 0.72%)</title><rect x="16.3987%" y="229" width="0.7235%" height="15" fill="rgb(229,81,49)"/><text x="16.6487%" y="239.50"></text></g><g><title>try_to_wake_up (7 samples, 0.56%)</title><rect x="16.5595%" y="213" width="0.5627%" height="15" fill="rgb(236,28,36)"/><text x="16.8095%" y="223.50"></text></g><g><title>ip_local_deliver (17 samples, 1.37%)</title><rect x="16.0772%" y="373" width="1.3666%" height="15" fill="rgb(249,185,26)"/><text x="16.3272%" y="383.50"></text></g><g><title>ip_local_deliver_finish (17 samples, 1.37%)</title><rect x="16.0772%" y="357" width="1.3666%" height="15" fill="rgb(249,174,33)"/><text x="16.3272%" y="367.50"></text></g><g><title>ip_protocol_deliver_rcu (17 samples, 1.37%)</title><rect x="16.0772%" y="341" width="1.3666%" height="15" fill="rgb(233,201,37)"/><text x="16.3272%" y="351.50"></text></g><g><title>tcp_v4_rcv (17 samples, 1.37%)</title><rect x="16.0772%" y="325" width="1.3666%" height="15" fill="rgb(221,78,26)"/><text x="16.3272%" y="335.50"></text></g><g><title>tcp_v4_do_rcv (14 samples, 1.13%)</title><rect x="16.3183%" y="309" width="1.1254%" height="15" fill="rgb(250,127,30)"/><text x="16.5683%" y="319.50"></text></g><g><title>tcp_rcv_established (14 samples, 1.13%)</title><rect x="16.3183%" y="293" width="1.1254%" height="15" fill="rgb(230,49,44)"/><text x="16.5683%" y="303.50"></text></g><g><title>tcp_ack (4 samples, 0.32%)</title><rect x="17.1222%" y="277" width="0.3215%" height="15" fill="rgb(229,67,23)"/><text x="17.3722%" y="287.50"></text></g><g><title>do_softirq (20 samples, 1.61%)</title><rect x="15.9164%" y="485" width="1.6077%" height="15" fill="rgb(249,83,47)"/><text x="16.1664%" y="495.50"></text></g><g><title>do_softirq_own_stack (20 samples, 1.61%)</title><rect x="15.9164%" y="469" width="1.6077%" height="15" fill="rgb(215,43,3)"/><text x="16.1664%" y="479.50"></text></g><g><title>__do_softirq (20 samples, 1.61%)</title><rect x="15.9164%" y="453" width="1.6077%" height="15" fill="rgb(238,154,13)"/><text x="16.1664%" y="463.50"></text></g><g><title>net_rx_action (20 samples, 1.61%)</title><rect x="15.9164%" y="437" width="1.6077%" height="15" fill="rgb(219,56,2)"/><text x="16.1664%" y="447.50"></text></g><g><title>process_backlog (19 samples, 1.53%)</title><rect x="15.9968%" y="421" width="1.5273%" height="15" fill="rgb(233,0,4)"/><text x="16.2468%" y="431.50"></text></g><g><title>__netif_receive_skb_one_core (19 samples, 1.53%)</title><rect x="15.9968%" y="405" width="1.5273%" height="15" fill="rgb(235,30,7)"/><text x="16.2468%" y="415.50"></text></g><g><title>ip_rcv (18 samples, 1.45%)</title><rect x="16.0772%" y="389" width="1.4469%" height="15" fill="rgb(250,79,13)"/><text x="16.3272%" y="399.50"></text></g><g><title>__ip_queue_xmit (30 samples, 2.41%)</title><rect x="15.1929%" y="549" width="2.4116%" height="15" fill="rgb(211,146,34)"/><text x="15.4429%" y="559.50">__..</text></g><g><title>ip_output (29 samples, 2.33%)</title><rect x="15.2733%" y="533" width="2.3312%" height="15" fill="rgb(228,22,38)"/><text x="15.5233%" y="543.50">i..</text></g><g><title>ip_finish_output2 (28 samples, 2.25%)</title><rect x="15.3537%" y="517" width="2.2508%" height="15" fill="rgb(235,168,5)"/><text x="15.6037%" y="527.50">i..</text></g><g><title>__local_bh_enable_ip (21 samples, 1.69%)</title><rect x="15.9164%" y="501" width="1.6881%" height="15" fill="rgb(221,155,16)"/><text x="16.1664%" y="511.50"></text></g><g><title>__tcp_transmit_skb (32 samples, 2.57%)</title><rect x="15.1125%" y="565" width="2.5723%" height="15" fill="rgb(215,215,53)"/><text x="15.3625%" y="575.50">__..</text></g><g><title>__tcp_push_pending_frames (33 samples, 2.65%)</title><rect x="15.1125%" y="597" width="2.6527%" height="15" fill="rgb(223,4,10)"/><text x="15.3625%" y="607.50">__..</text></g><g><title>tcp_write_xmit (33 samples, 2.65%)</title><rect x="15.1125%" y="581" width="2.6527%" height="15" fill="rgb(234,103,6)"/><text x="15.3625%" y="591.50">tc..</text></g><g><title>sk_stream_alloc_skb (2 samples, 0.16%)</title><rect x="17.7653%" y="597" width="0.1608%" height="15" fill="rgb(227,97,0)"/><text x="18.0153%" y="607.50"></text></g><g><title>__x64_sys_sendto (39 samples, 3.14%)</title><rect x="14.8714%" y="677" width="3.1350%" height="15" fill="rgb(234,150,53)"/><text x="15.1214%" y="687.50">__x..</text></g><g><title>__sys_sendto (39 samples, 3.14%)</title><rect x="14.8714%" y="661" width="3.1350%" height="15" fill="rgb(228,201,54)"/><text x="15.1214%" y="671.50">__s..</text></g><g><title>sock_sendmsg (37 samples, 2.97%)</title><rect x="15.0322%" y="645" width="2.9743%" height="15" fill="rgb(222,22,37)"/><text x="15.2822%" y="655.50">soc..</text></g><g><title>tcp_sendmsg (37 samples, 2.97%)</title><rect x="15.0322%" y="629" width="2.9743%" height="15" fill="rgb(237,53,32)"/><text x="15.2822%" y="639.50">tcp..</text></g><g><title>tcp_sendmsg_locked (36 samples, 2.89%)</title><rect x="15.1125%" y="613" width="2.8939%" height="15" fill="rgb(233,25,53)"/><text x="15.3625%" y="623.50">tc..</text></g><g><title>do_syscall_64 (40 samples, 3.22%)</title><rect x="14.8714%" y="693" width="3.2154%" height="15" fill="rgb(210,40,34)"/><text x="15.1214%" y="703.50">do_..</text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (62 samples, 4.98%)</title><rect x="13.1833%" y="821" width="4.9839%" height="15" fill="rgb(241,220,44)"/><text x="13.4333%" y="831.50">&lt;mysql..</text></g><g><title>mysql::conn::Conn::_query (61 samples, 4.90%)</title><rect x="13.2637%" y="805" width="4.9035%" height="15" fill="rgb(235,28,35)"/><text x="13.5137%" y="815.50">mysql:..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (44 samples, 3.54%)</title><rect x="14.6302%" y="789" width="3.5370%" height="15" fill="rgb(210,56,17)"/><text x="14.8802%" y="799.50">mys..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (41 samples, 3.30%)</title><rect x="14.8714%" y="773" width="3.2958%" height="15" fill="rgb(224,130,29)"/><text x="15.1214%" y="783.50">std..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (41 samples, 3.30%)</title><rect x="14.8714%" y="757" width="3.2958%" height="15" fill="rgb(235,212,8)"/><text x="15.1214%" y="767.50">&lt;st..</text></g><g><title>std::sys_common::net::TcpStream::write (41 samples, 3.30%)</title><rect x="14.8714%" y="741" width="3.2958%" height="15" fill="rgb(223,33,50)"/><text x="15.1214%" y="751.50">std..</text></g><g><title>__libc_send (41 samples, 3.30%)</title><rect x="14.8714%" y="725" width="3.2958%" height="15" fill="rgb(219,149,13)"/><text x="15.1214%" y="735.50">__l..</text></g><g><title>entry_SYSCALL_64 (41 samples, 3.30%)</title><rect x="14.8714%" y="709" width="3.2958%" height="15" fill="rgb(250,156,29)"/><text x="15.1214%" y="719.50">ent..</text></g><g><title>decor::query_transformer::QueryTransformer::get_mv_stmt (154 samples, 12.38%)</title><rect x="5.9486%" y="853" width="12.3794%" height="15" fill="rgb(216,193,19)"/><text x="6.1986%" y="863.50">decor::query_trans..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (64 samples, 5.14%)</title><rect x="13.1833%" y="837" width="5.1447%" height="15" fill="rgb(216,135,14)"/><text x="13.4333%" y="847.50">mysql:..</text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="18.1672%" y="821" width="0.1608%" height="15" fill="rgb(241,47,5)"/><text x="18.4172%" y="831.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="18.1672%" y="805" width="0.1608%" height="15" fill="rgb(233,42,35)"/><text x="18.4172%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::parse_object_name (2 samples, 0.16%)</title><rect x="18.5691%" y="821" width="0.1608%" height="15" fill="rgb(231,13,6)"/><text x="18.8191%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_identifier (2 samples, 0.16%)</title><rect x="18.5691%" y="805" width="0.1608%" height="15" fill="rgb(207,181,40)"/><text x="18.8191%" y="815.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (2 samples, 0.16%)</title><rect x="18.5691%" y="789" width="0.1608%" height="15" fill="rgb(254,173,49)"/><text x="18.8191%" y="799.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_lower (2 samples, 0.16%)</title><rect x="18.5691%" y="773" width="0.1608%" height="15" fill="rgb(221,1,38)"/><text x="18.8191%" y="783.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.16%)</title><rect x="18.5691%" y="757" width="0.1608%" height="15" fill="rgb(206,124,46)"/><text x="18.8191%" y="767.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.16%)</title><rect x="18.5691%" y="741" width="0.1608%" height="15" fill="rgb(249,21,11)"/><text x="18.8191%" y="751.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="18.8103%" y="789" width="0.1608%" height="15" fill="rgb(222,201,40)"/><text x="19.0603%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="18.8103%" y="773" width="0.1608%" height="15" fill="rgb(235,61,29)"/><text x="19.0603%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="18.8103%" y="757" width="0.1608%" height="15" fill="rgb(219,207,3)"/><text x="19.0603%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.16%)</title><rect x="18.8103%" y="741" width="0.1608%" height="15" fill="rgb(222,56,46)"/><text x="19.0603%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="18.8103%" y="725" width="0.1608%" height="15" fill="rgb(239,76,54)"/><text x="19.0603%" y="735.50"></text></g><g><title>alloc::string::String::push (3 samples, 0.24%)</title><rect x="19.1318%" y="773" width="0.2412%" height="15" fill="rgb(231,124,27)"/><text x="19.3818%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (3 samples, 0.24%)</title><rect x="19.1318%" y="757" width="0.2412%" height="15" fill="rgb(249,195,6)"/><text x="19.3818%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (3 samples, 0.24%)</title><rect x="19.1318%" y="741" width="0.2412%" height="15" fill="rgb(237,174,47)"/><text x="19.3818%" y="751.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (170 samples, 13.67%)</title><rect x="5.9486%" y="869" width="13.6656%" height="15" fill="rgb(206,201,31)"/><text x="6.1986%" y="879.50">&lt;decor::Shim as msql_..</text></g><g><title>sql_parser::parser::parse_statements (16 samples, 1.29%)</title><rect x="18.3280%" y="853" width="1.2862%" height="15" fill="rgb(231,57,52)"/><text x="18.5780%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (16 samples, 1.29%)</title><rect x="18.3280%" y="837" width="1.2862%" height="15" fill="rgb(248,177,22)"/><text x="18.5780%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::parse_parenthesized_column_list (11 samples, 0.88%)</title><rect x="18.7299%" y="821" width="0.8842%" height="15" fill="rgb(215,211,37)"/><text x="18.9799%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_identifier (10 samples, 0.80%)</title><rect x="18.8103%" y="805" width="0.8039%" height="15" fill="rgb(241,128,51)"/><text x="19.0603%" y="815.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (8 samples, 0.64%)</title><rect x="18.9711%" y="789" width="0.6431%" height="15" fill="rgb(227,165,31)"/><text x="19.2211%" y="799.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_lower (3 samples, 0.24%)</title><rect x="19.3730%" y="773" width="0.2412%" height="15" fill="rgb(228,167,24)"/><text x="19.6230%" y="783.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (3 samples, 0.24%)</title><rect x="19.3730%" y="757" width="0.2412%" height="15" fill="rgb(228,143,12)"/><text x="19.6230%" y="767.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (3 samples, 0.24%)</title><rect x="19.3730%" y="741" width="0.2412%" height="15" fill="rgb(249,149,8)"/><text x="19.6230%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="19.7749%" y="869" width="0.1608%" height="15" fill="rgb(243,35,44)"/><text x="20.0249%" y="879.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="19.7749%" y="853" width="0.1608%" height="15" fill="rgb(246,89,9)"/><text x="20.0249%" y="863.50"></text></g><g><title>hwloc::Topology::new (2 samples, 0.16%)</title><rect x="20.4180%" y="709" width="0.1608%" height="15" fill="rgb(233,213,13)"/><text x="20.6680%" y="719.50"></text></g><g><title>hwloc_topology_load (2 samples, 0.16%)</title><rect x="20.4180%" y="693" width="0.1608%" height="15" fill="rgb(233,141,41)"/><text x="20.6680%" y="703.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.16%)</title><rect x="20.4180%" y="677" width="0.1608%" height="15" fill="rgb(239,167,4)"/><text x="20.6680%" y="687.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.16%)</title><rect x="20.4180%" y="661" width="0.1608%" height="15" fill="rgb(209,217,16)"/><text x="20.6680%" y="671.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.16%)</title><rect x="20.4180%" y="645" width="0.1608%" height="15" fill="rgb(219,88,35)"/><text x="20.6680%" y="655.50"></text></g><g><title>__inet_lookup_established (3 samples, 0.24%)</title><rect x="21.9453%" y="197" width="0.2412%" height="15" fill="rgb(220,193,23)"/><text x="22.1953%" y="207.50"></text></g><g><title>enqueue_task (2 samples, 0.16%)</title><rect x="22.5884%" y="101" width="0.1608%" height="15" fill="rgb(230,90,52)"/><text x="22.8384%" y="111.50"></text></g><g><title>enqueue_task_fair (2 samples, 0.16%)</title><rect x="22.7492%" y="101" width="0.1608%" height="15" fill="rgb(252,106,19)"/><text x="22.9992%" y="111.50"></text></g><g><title>enqueue_entity (2 samples, 0.16%)</title><rect x="22.7492%" y="85" width="0.1608%" height="15" fill="rgb(206,74,20)"/><text x="22.9992%" y="95.50"></text></g><g><title>__wake_up_common (8 samples, 0.64%)</title><rect x="22.4277%" y="133" width="0.6431%" height="15" fill="rgb(230,138,44)"/><text x="22.6777%" y="143.50"></text></g><g><title>try_to_wake_up (8 samples, 0.64%)</title><rect x="22.4277%" y="117" width="0.6431%" height="15" fill="rgb(235,182,43)"/><text x="22.6777%" y="127.50"></text></g><g><title>sock_def_readable (9 samples, 0.72%)</title><rect x="22.4277%" y="165" width="0.7235%" height="15" fill="rgb(242,16,51)"/><text x="22.6777%" y="175.50"></text></g><g><title>__wake_up_common_lock (9 samples, 0.72%)</title><rect x="22.4277%" y="149" width="0.7235%" height="15" fill="rgb(248,9,4)"/><text x="22.6777%" y="159.50"></text></g><g><title>__netif_receive_skb_one_core (23 samples, 1.85%)</title><rect x="21.7042%" y="293" width="1.8489%" height="15" fill="rgb(210,31,22)"/><text x="21.9542%" y="303.50">_..</text></g><g><title>ip_rcv (22 samples, 1.77%)</title><rect x="21.7846%" y="277" width="1.7685%" height="15" fill="rgb(239,54,39)"/><text x="22.0346%" y="287.50"></text></g><g><title>ip_local_deliver (22 samples, 1.77%)</title><rect x="21.7846%" y="261" width="1.7685%" height="15" fill="rgb(230,99,41)"/><text x="22.0346%" y="271.50"></text></g><g><title>ip_local_deliver_finish (21 samples, 1.69%)</title><rect x="21.8650%" y="245" width="1.6881%" height="15" fill="rgb(253,106,12)"/><text x="22.1150%" y="255.50"></text></g><g><title>ip_protocol_deliver_rcu (21 samples, 1.69%)</title><rect x="21.8650%" y="229" width="1.6881%" height="15" fill="rgb(213,46,41)"/><text x="22.1150%" y="239.50"></text></g><g><title>tcp_v4_rcv (21 samples, 1.69%)</title><rect x="21.8650%" y="213" width="1.6881%" height="15" fill="rgb(215,133,35)"/><text x="22.1150%" y="223.50"></text></g><g><title>tcp_v4_do_rcv (17 samples, 1.37%)</title><rect x="22.1865%" y="197" width="1.3666%" height="15" fill="rgb(213,28,5)"/><text x="22.4365%" y="207.50"></text></g><g><title>tcp_rcv_established (17 samples, 1.37%)</title><rect x="22.1865%" y="181" width="1.3666%" height="15" fill="rgb(215,77,49)"/><text x="22.4365%" y="191.50"></text></g><g><title>tcp_ack (5 samples, 0.40%)</title><rect x="23.1511%" y="165" width="0.4019%" height="15" fill="rgb(248,100,22)"/><text x="23.4011%" y="175.50"></text></g><g><title>__ip_queue_xmit (31 samples, 2.49%)</title><rect x="21.1415%" y="437" width="2.4920%" height="15" fill="rgb(208,67,9)"/><text x="21.3915%" y="447.50">__..</text></g><g><title>ip_output (31 samples, 2.49%)</title><rect x="21.1415%" y="421" width="2.4920%" height="15" fill="rgb(219,133,21)"/><text x="21.3915%" y="431.50">ip..</text></g><g><title>ip_finish_output2 (30 samples, 2.41%)</title><rect x="21.2219%" y="405" width="2.4116%" height="15" fill="rgb(246,46,29)"/><text x="21.4719%" y="415.50">ip..</text></g><g><title>__local_bh_enable_ip (29 samples, 2.33%)</title><rect x="21.3023%" y="389" width="2.3312%" height="15" fill="rgb(246,185,52)"/><text x="21.5523%" y="399.50">_..</text></g><g><title>do_softirq (29 samples, 2.33%)</title><rect x="21.3023%" y="373" width="2.3312%" height="15" fill="rgb(252,136,11)"/><text x="21.5523%" y="383.50">d..</text></g><g><title>do_softirq_own_stack (29 samples, 2.33%)</title><rect x="21.3023%" y="357" width="2.3312%" height="15" fill="rgb(219,138,53)"/><text x="21.5523%" y="367.50">d..</text></g><g><title>__do_softirq (28 samples, 2.25%)</title><rect x="21.3826%" y="341" width="2.2508%" height="15" fill="rgb(211,51,23)"/><text x="21.6326%" y="351.50">_..</text></g><g><title>net_rx_action (27 samples, 2.17%)</title><rect x="21.4630%" y="325" width="2.1704%" height="15" fill="rgb(247,221,28)"/><text x="21.7130%" y="335.50">n..</text></g><g><title>process_backlog (25 samples, 2.01%)</title><rect x="21.6238%" y="309" width="2.0096%" height="15" fill="rgb(251,222,45)"/><text x="21.8738%" y="319.50">p..</text></g><g><title>__tcp_push_pending_frames (32 samples, 2.57%)</title><rect x="21.1415%" y="485" width="2.5723%" height="15" fill="rgb(217,162,53)"/><text x="21.3915%" y="495.50">__..</text></g><g><title>tcp_write_xmit (32 samples, 2.57%)</title><rect x="21.1415%" y="469" width="2.5723%" height="15" fill="rgb(229,93,14)"/><text x="21.3915%" y="479.50">tc..</text></g><g><title>__tcp_transmit_skb (32 samples, 2.57%)</title><rect x="21.1415%" y="453" width="2.5723%" height="15" fill="rgb(209,67,49)"/><text x="21.3915%" y="463.50">__..</text></g><g><title>sk_stream_alloc_skb (2 samples, 0.16%)</title><rect x="23.7138%" y="485" width="0.1608%" height="15" fill="rgb(213,87,29)"/><text x="23.9638%" y="495.50"></text></g><g><title>__alloc_skb (2 samples, 0.16%)</title><rect x="23.7138%" y="469" width="0.1608%" height="15" fill="rgb(205,151,52)"/><text x="23.9638%" y="479.50"></text></g><g><title>do_syscall_64 (41 samples, 3.30%)</title><rect x="20.6592%" y="581" width="3.2958%" height="15" fill="rgb(253,215,39)"/><text x="20.9092%" y="591.50">do_..</text></g><g><title>__x64_sys_sendto (41 samples, 3.30%)</title><rect x="20.6592%" y="565" width="3.2958%" height="15" fill="rgb(221,220,41)"/><text x="20.9092%" y="575.50">__x..</text></g><g><title>__sys_sendto (41 samples, 3.30%)</title><rect x="20.6592%" y="549" width="3.2958%" height="15" fill="rgb(218,133,21)"/><text x="20.9092%" y="559.50">__s..</text></g><g><title>sock_sendmsg (40 samples, 3.22%)</title><rect x="20.7395%" y="533" width="3.2154%" height="15" fill="rgb(221,193,43)"/><text x="20.9895%" y="543.50">soc..</text></g><g><title>tcp_sendmsg (40 samples, 3.22%)</title><rect x="20.7395%" y="517" width="3.2154%" height="15" fill="rgb(240,128,52)"/><text x="20.9895%" y="527.50">tcp..</text></g><g><title>tcp_sendmsg_locked (40 samples, 3.22%)</title><rect x="20.7395%" y="501" width="3.2154%" height="15" fill="rgb(253,114,12)"/><text x="20.9895%" y="511.50">tcp..</text></g><g><title>__libc_start_main (45 samples, 3.62%)</title><rect x="20.4180%" y="869" width="3.6174%" height="15" fill="rgb(215,223,47)"/><text x="20.6680%" y="879.50">__li..</text></g><g><title>main (45 samples, 3.62%)</title><rect x="20.4180%" y="853" width="3.6174%" height="15" fill="rgb(248,225,23)"/><text x="20.6680%" y="863.50">main</text></g><g><title>std::rt::lang_start_internal (45 samples, 3.62%)</title><rect x="20.4180%" y="837" width="3.6174%" height="15" fill="rgb(250,108,0)"/><text x="20.6680%" y="847.50">std:..</text></g><g><title>std::panic::catch_unwind (45 samples, 3.62%)</title><rect x="20.4180%" y="821" width="3.6174%" height="15" fill="rgb(228,208,7)"/><text x="20.6680%" y="831.50">std:..</text></g><g><title>std::panicking::try (45 samples, 3.62%)</title><rect x="20.4180%" y="805" width="3.6174%" height="15" fill="rgb(244,45,10)"/><text x="20.6680%" y="815.50">std:..</text></g><g><title>std::panicking::try::do_call (45 samples, 3.62%)</title><rect x="20.4180%" y="789" width="3.6174%" height="15" fill="rgb(207,125,25)"/><text x="20.6680%" y="799.50">std:..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (45 samples, 3.62%)</title><rect x="20.4180%" y="773" width="3.6174%" height="15" fill="rgb(210,195,18)"/><text x="20.6680%" y="783.50">core..</text></g><g><title>std::rt::lang_start::_{{closure}} (45 samples, 3.62%)</title><rect x="20.4180%" y="757" width="3.6174%" height="15" fill="rgb(249,80,12)"/><text x="20.6680%" y="767.50">std:..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (45 samples, 3.62%)</title><rect x="20.4180%" y="741" width="3.6174%" height="15" fill="rgb(221,65,9)"/><text x="20.6680%" y="751.50">std:..</text></g><g><title>lobsters::main (45 samples, 3.62%)</title><rect x="20.4180%" y="725" width="3.6174%" height="15" fill="rgb(235,49,36)"/><text x="20.6680%" y="735.50">lobs..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (43 samples, 3.46%)</title><rect x="20.5788%" y="709" width="3.4566%" height="15" fill="rgb(225,32,20)"/><text x="20.8288%" y="719.50">mys..</text></g><g><title>mysql::conn::Conn::_query (43 samples, 3.46%)</title><rect x="20.5788%" y="693" width="3.4566%" height="15" fill="rgb(215,141,46)"/><text x="20.8288%" y="703.50">mys..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (43 samples, 3.46%)</title><rect x="20.5788%" y="677" width="3.4566%" height="15" fill="rgb(250,160,47)"/><text x="20.8288%" y="687.50">mys..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (43 samples, 3.46%)</title><rect x="20.5788%" y="661" width="3.4566%" height="15" fill="rgb(216,222,40)"/><text x="20.8288%" y="671.50">std..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (43 samples, 3.46%)</title><rect x="20.5788%" y="645" width="3.4566%" height="15" fill="rgb(234,217,39)"/><text x="20.8288%" y="655.50">&lt;st..</text></g><g><title>std::sys_common::net::TcpStream::write (43 samples, 3.46%)</title><rect x="20.5788%" y="629" width="3.4566%" height="15" fill="rgb(207,178,40)"/><text x="20.8288%" y="639.50">std..</text></g><g><title>__libc_send (43 samples, 3.46%)</title><rect x="20.5788%" y="613" width="3.4566%" height="15" fill="rgb(221,136,13)"/><text x="20.8288%" y="623.50">__l..</text></g><g><title>entry_SYSCALL_64 (42 samples, 3.38%)</title><rect x="20.6592%" y="597" width="3.3762%" height="15" fill="rgb(249,199,10)"/><text x="20.9092%" y="607.50">ent..</text></g><g><title>alloc::string::String::push (3 samples, 0.24%)</title><rect x="24.2765%" y="869" width="0.2412%" height="15" fill="rgb(249,222,13)"/><text x="24.5265%" y="879.50"></text></g><g><title>core::fmt::Formatter::pad (4 samples, 0.32%)</title><rect x="24.5177%" y="869" width="0.3215%" height="15" fill="rgb(244,185,38)"/><text x="24.7677%" y="879.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (2 samples, 0.16%)</title><rect x="24.8392%" y="869" width="0.1608%" height="15" fill="rgb(236,202,9)"/><text x="25.0892%" y="879.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2 samples, 0.16%)</title><rect x="24.8392%" y="853" width="0.1608%" height="15" fill="rgb(250,229,37)"/><text x="25.0892%" y="863.50"></text></g><g><title>decor::Shim::run_on_tcp (2 samples, 0.16%)</title><rect x="24.8392%" y="837" width="0.1608%" height="15" fill="rgb(206,174,23)"/><text x="25.0892%" y="847.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (2 samples, 0.16%)</title><rect x="24.8392%" y="821" width="0.1608%" height="15" fill="rgb(211,33,43)"/><text x="25.0892%" y="831.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (2 samples, 0.16%)</title><rect x="24.8392%" y="805" width="0.1608%" height="15" fill="rgb(245,58,50)"/><text x="25.0892%" y="815.50"></text></g><g><title>sql_parser::parser::parse_statements (2 samples, 0.16%)</title><rect x="24.8392%" y="789" width="0.1608%" height="15" fill="rgb(244,68,36)"/><text x="25.0892%" y="799.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (2 samples, 0.16%)</title><rect x="24.8392%" y="773" width="0.1608%" height="15" fill="rgb(232,229,15)"/><text x="25.0892%" y="783.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (2 samples, 0.16%)</title><rect x="24.8392%" y="757" width="0.1608%" height="15" fill="rgb(254,30,23)"/><text x="25.0892%" y="767.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.16%)</title><rect x="25.0000%" y="869" width="0.1608%" height="15" fill="rgb(235,160,14)"/><text x="25.2500%" y="879.50"></text></g><g><title>decor::Shim::create_schema (2 samples, 0.16%)</title><rect x="25.2412%" y="869" width="0.1608%" height="15" fill="rgb(212,155,44)"/><text x="25.4912%" y="879.50"></text></g><g><title>decor::query_transformer::QueryTransformer::get_mv_stmt (2 samples, 0.16%)</title><rect x="25.2412%" y="853" width="0.1608%" height="15" fill="rgb(226,2,50)"/><text x="25.4912%" y="863.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (2 samples, 0.16%)</title><rect x="25.2412%" y="837" width="0.1608%" height="15" fill="rgb(234,177,6)"/><text x="25.4912%" y="847.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (2 samples, 0.16%)</title><rect x="25.2412%" y="821" width="0.1608%" height="15" fill="rgb(217,24,9)"/><text x="25.4912%" y="831.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.16%)</title><rect x="25.2412%" y="805" width="0.1608%" height="15" fill="rgb(220,13,46)"/><text x="25.4912%" y="815.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (2 samples, 0.16%)</title><rect x="25.2412%" y="789" width="0.1608%" height="15" fill="rgb(239,221,27)"/><text x="25.4912%" y="799.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (2 samples, 0.16%)</title><rect x="25.2412%" y="773" width="0.1608%" height="15" fill="rgb(222,198,25)"/><text x="25.4912%" y="783.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="25.2412%" y="757" width="0.1608%" height="15" fill="rgb(211,99,13)"/><text x="25.4912%" y="767.50"></text></g><g><title>std::sys_common::net::TcpStream::write (2 samples, 0.16%)</title><rect x="25.2412%" y="741" width="0.1608%" height="15" fill="rgb(232,111,31)"/><text x="25.4912%" y="751.50"></text></g><g><title>__libc_send (2 samples, 0.16%)</title><rect x="25.2412%" y="725" width="0.1608%" height="15" fill="rgb(245,82,37)"/><text x="25.4912%" y="735.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.16%)</title><rect x="25.2412%" y="709" width="0.1608%" height="15" fill="rgb(227,149,46)"/><text x="25.4912%" y="719.50"></text></g><g><title>do_syscall_64 (2 samples, 0.16%)</title><rect x="25.2412%" y="693" width="0.1608%" height="15" fill="rgb(218,36,50)"/><text x="25.4912%" y="703.50"></text></g><g><title>__x64_sys_sendto (2 samples, 0.16%)</title><rect x="25.2412%" y="677" width="0.1608%" height="15" fill="rgb(226,80,48)"/><text x="25.4912%" y="687.50"></text></g><g><title>__sys_sendto (2 samples, 0.16%)</title><rect x="25.2412%" y="661" width="0.1608%" height="15" fill="rgb(238,224,15)"/><text x="25.4912%" y="671.50"></text></g><g><title>sock_sendmsg (2 samples, 0.16%)</title><rect x="25.2412%" y="645" width="0.1608%" height="15" fill="rgb(241,136,10)"/><text x="25.4912%" y="655.50"></text></g><g><title>tcp_sendmsg (2 samples, 0.16%)</title><rect x="25.2412%" y="629" width="0.1608%" height="15" fill="rgb(208,32,45)"/><text x="25.4912%" y="639.50"></text></g><g><title>tcp_sendmsg_locked (2 samples, 0.16%)</title><rect x="25.2412%" y="613" width="0.1608%" height="15" fill="rgb(207,135,9)"/><text x="25.4912%" y="623.50"></text></g><g><title>__tcp_push_pending_frames (2 samples, 0.16%)</title><rect x="25.2412%" y="597" width="0.1608%" height="15" fill="rgb(206,86,44)"/><text x="25.4912%" y="607.50"></text></g><g><title>tcp_write_xmit (2 samples, 0.16%)</title><rect x="25.2412%" y="581" width="0.1608%" height="15" fill="rgb(245,177,15)"/><text x="25.4912%" y="591.50"></text></g><g><title>__tcp_transmit_skb (2 samples, 0.16%)</title><rect x="25.2412%" y="565" width="0.1608%" height="15" fill="rgb(206,64,50)"/><text x="25.4912%" y="575.50"></text></g><g><title>__ip_queue_xmit (2 samples, 0.16%)</title><rect x="25.2412%" y="549" width="0.1608%" height="15" fill="rgb(234,36,40)"/><text x="25.4912%" y="559.50"></text></g><g><title>ip_output (2 samples, 0.16%)</title><rect x="25.2412%" y="533" width="0.1608%" height="15" fill="rgb(213,64,8)"/><text x="25.4912%" y="543.50"></text></g><g><title>ip_finish_output2 (2 samples, 0.16%)</title><rect x="25.2412%" y="517" width="0.1608%" height="15" fill="rgb(210,75,36)"/><text x="25.4912%" y="527.50"></text></g><g><title>decor::query_transformer::QueryTransformer::get_mv_stmt (3 samples, 0.24%)</title><rect x="25.4019%" y="869" width="0.2412%" height="15" fill="rgb(229,88,21)"/><text x="25.6519%" y="879.50"></text></g><g><title>decor::query_transformer::QueryTransformer::expr_to_value_expr (3 samples, 0.24%)</title><rect x="25.4019%" y="853" width="0.2412%" height="15" fill="rgb(252,204,47)"/><text x="25.6519%" y="863.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="25.4019%" y="837" width="0.2412%" height="15" fill="rgb(208,77,27)"/><text x="25.6519%" y="847.50"></text></g><g><title>hwloc::Topology::new (3 samples, 0.24%)</title><rect x="25.6431%" y="853" width="0.2412%" height="15" fill="rgb(221,76,26)"/><text x="25.8931%" y="863.50"></text></g><g><title>hwloc_topology_load (2 samples, 0.16%)</title><rect x="25.7235%" y="837" width="0.1608%" height="15" fill="rgb(225,139,18)"/><text x="25.9735%" y="847.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.16%)</title><rect x="25.7235%" y="821" width="0.1608%" height="15" fill="rgb(230,137,11)"/><text x="25.9735%" y="831.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.16%)</title><rect x="25.7235%" y="805" width="0.1608%" height="15" fill="rgb(212,28,1)"/><text x="25.9735%" y="815.50"></text></g><g><title>dequeue_task_fair (2 samples, 0.16%)</title><rect x="26.3666%" y="501" width="0.1608%" height="15" fill="rgb(248,164,17)"/><text x="26.6166%" y="511.50"></text></g><g><title>dequeue_entity (2 samples, 0.16%)</title><rect x="26.3666%" y="485" width="0.1608%" height="15" fill="rgb(222,171,42)"/><text x="26.6166%" y="495.50"></text></g><g><title>update_curr (2 samples, 0.16%)</title><rect x="26.3666%" y="469" width="0.1608%" height="15" fill="rgb(243,84,45)"/><text x="26.6166%" y="479.50"></text></g><g><title>do_syscall_64 (8 samples, 0.64%)</title><rect x="25.9646%" y="661" width="0.6431%" height="15" fill="rgb(252,49,23)"/><text x="26.2146%" y="671.50"></text></g><g><title>__x64_sys_recvfrom (8 samples, 0.64%)</title><rect x="25.9646%" y="645" width="0.6431%" height="15" fill="rgb(215,19,7)"/><text x="26.2146%" y="655.50"></text></g><g><title>__sys_recvfrom (8 samples, 0.64%)</title><rect x="25.9646%" y="629" width="0.6431%" height="15" fill="rgb(238,81,41)"/><text x="26.2146%" y="639.50"></text></g><g><title>inet_recvmsg (8 samples, 0.64%)</title><rect x="25.9646%" y="613" width="0.6431%" height="15" fill="rgb(210,199,37)"/><text x="26.2146%" y="623.50"></text></g><g><title>tcp_recvmsg (8 samples, 0.64%)</title><rect x="25.9646%" y="597" width="0.6431%" height="15" fill="rgb(244,192,49)"/><text x="26.2146%" y="607.50"></text></g><g><title>sk_wait_data (6 samples, 0.48%)</title><rect x="26.1254%" y="581" width="0.4823%" height="15" fill="rgb(226,211,11)"/><text x="26.3754%" y="591.50"></text></g><g><title>wait_woken (5 samples, 0.40%)</title><rect x="26.2058%" y="565" width="0.4019%" height="15" fill="rgb(236,162,54)"/><text x="26.4558%" y="575.50"></text></g><g><title>schedule_timeout (5 samples, 0.40%)</title><rect x="26.2058%" y="549" width="0.4019%" height="15" fill="rgb(220,229,9)"/><text x="26.4558%" y="559.50"></text></g><g><title>schedule (5 samples, 0.40%)</title><rect x="26.2058%" y="533" width="0.4019%" height="15" fill="rgb(250,87,22)"/><text x="26.4558%" y="543.50"></text></g><g><title>__schedule (5 samples, 0.40%)</title><rect x="26.2058%" y="517" width="0.4019%" height="15" fill="rgb(239,43,17)"/><text x="26.4558%" y="527.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.80%)</title><rect x="25.8842%" y="789" width="0.8039%" height="15" fill="rgb(231,177,25)"/><text x="26.1342%" y="799.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (10 samples, 0.80%)</title><rect x="25.8842%" y="773" width="0.8039%" height="15" fill="rgb(219,179,1)"/><text x="26.1342%" y="783.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (10 samples, 0.80%)</title><rect x="25.8842%" y="757" width="0.8039%" height="15" fill="rgb(238,219,53)"/><text x="26.1342%" y="767.50"></text></g><g><title>std::sys_common::net::TcpStream::read (10 samples, 0.80%)</title><rect x="25.8842%" y="741" width="0.8039%" height="15" fill="rgb(232,167,36)"/><text x="26.1342%" y="751.50"></text></g><g><title>std::sys::unix::net::Socket::read (10 samples, 0.80%)</title><rect x="25.8842%" y="725" width="0.8039%" height="15" fill="rgb(244,19,51)"/><text x="26.1342%" y="735.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (10 samples, 0.80%)</title><rect x="25.8842%" y="709" width="0.8039%" height="15" fill="rgb(224,6,22)"/><text x="26.1342%" y="719.50"></text></g><g><title>__libc_recv (10 samples, 0.80%)</title><rect x="25.8842%" y="693" width="0.8039%" height="15" fill="rgb(224,145,5)"/><text x="26.1342%" y="703.50"></text></g><g><title>entry_SYSCALL_64 (10 samples, 0.80%)</title><rect x="25.8842%" y="677" width="0.8039%" height="15" fill="rgb(234,130,49)"/><text x="26.1342%" y="687.50"></text></g><g><title>lobsters::main (14 samples, 1.13%)</title><rect x="25.6431%" y="869" width="1.1254%" height="15" fill="rgb(254,6,2)"/><text x="25.8931%" y="879.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (11 samples, 0.88%)</title><rect x="25.8842%" y="853" width="0.8842%" height="15" fill="rgb(208,96,46)"/><text x="26.1342%" y="863.50"></text></g><g><title>mysql::conn::Conn::_query (11 samples, 0.88%)</title><rect x="25.8842%" y="837" width="0.8842%" height="15" fill="rgb(239,3,39)"/><text x="26.1342%" y="847.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (11 samples, 0.88%)</title><rect x="25.8842%" y="821" width="0.8842%" height="15" fill="rgb(233,210,1)"/><text x="26.1342%" y="831.50"></text></g><g><title>mysql::conn::Conn::read_packet (11 samples, 0.88%)</title><rect x="25.8842%" y="805" width="0.8842%" height="15" fill="rgb(244,137,37)"/><text x="26.1342%" y="815.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (2 samples, 0.16%)</title><rect x="26.7685%" y="853" width="0.1608%" height="15" fill="rgb(240,136,2)"/><text x="27.0185%" y="863.50"></text></g><g><title>decor::Shim::create_schema (2 samples, 0.16%)</title><rect x="26.7685%" y="837" width="0.1608%" height="15" fill="rgb(239,18,37)"/><text x="27.0185%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.40%)</title><rect x="27.2508%" y="821" width="0.4019%" height="15" fill="rgb(218,185,22)"/><text x="27.5008%" y="831.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.16%)</title><rect x="27.4920%" y="805" width="0.1608%" height="15" fill="rgb(225,218,4)"/><text x="27.7420%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (7 samples, 0.56%)</title><rect x="27.6527%" y="821" width="0.5627%" height="15" fill="rgb(230,182,32)"/><text x="27.9027%" y="831.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (6 samples, 0.48%)</title><rect x="27.7331%" y="805" width="0.4823%" height="15" fill="rgb(242,56,43)"/><text x="27.9831%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.40%)</title><rect x="27.8135%" y="789" width="0.4019%" height="15" fill="rgb(233,99,24)"/><text x="28.0635%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (4 samples, 0.32%)</title><rect x="27.8939%" y="773" width="0.3215%" height="15" fill="rgb(234,209,42)"/><text x="28.1439%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.32%)</title><rect x="27.8939%" y="757" width="0.3215%" height="15" fill="rgb(227,7,12)"/><text x="28.1439%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.32%)</title><rect x="27.8939%" y="741" width="0.3215%" height="15" fill="rgb(245,203,43)"/><text x="28.1439%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (4 samples, 0.32%)</title><rect x="27.8939%" y="725" width="0.3215%" height="15" fill="rgb(238,205,33)"/><text x="28.1439%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.32%)</title><rect x="27.8939%" y="709" width="0.3215%" height="15" fill="rgb(231,56,7)"/><text x="28.1439%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.32%)</title><rect x="27.8939%" y="693" width="0.3215%" height="15" fill="rgb(244,186,29)"/><text x="28.1439%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (4 samples, 0.32%)</title><rect x="27.8939%" y="677" width="0.3215%" height="15" fill="rgb(234,111,31)"/><text x="28.1439%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.32%)</title><rect x="27.8939%" y="661" width="0.3215%" height="15" fill="rgb(241,149,10)"/><text x="28.1439%" y="671.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.32%)</title><rect x="27.8939%" y="645" width="0.3215%" height="15" fill="rgb(249,206,44)"/><text x="28.1439%" y="655.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.24%)</title><rect x="27.9743%" y="629" width="0.2412%" height="15" fill="rgb(251,153,30)"/><text x="28.2243%" y="639.50"></text></g><g><title>_int_malloc (2 samples, 0.16%)</title><rect x="28.0547%" y="613" width="0.1608%" height="15" fill="rgb(239,152,38)"/><text x="28.3047%" y="623.50"></text></g><g><title>__GI___libc_free (3 samples, 0.24%)</title><rect x="28.3762%" y="821" width="0.2412%" height="15" fill="rgb(249,139,47)"/><text x="28.6262%" y="831.50"></text></g><g><title>_int_free (4 samples, 0.32%)</title><rect x="28.7781%" y="821" width="0.3215%" height="15" fill="rgb(244,64,35)"/><text x="29.0281%" y="831.50"></text></g><g><title>alloc::fmt::format (2 samples, 0.16%)</title><rect x="29.0997%" y="821" width="0.1608%" height="15" fill="rgb(216,46,15)"/><text x="29.3497%" y="831.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="29.0997%" y="805" width="0.1608%" height="15" fill="rgb(250,74,19)"/><text x="29.3497%" y="815.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="29.0997%" y="789" width="0.1608%" height="15" fill="rgb(249,42,33)"/><text x="29.3497%" y="799.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.16%)</title><rect x="29.2605%" y="805" width="0.1608%" height="15" fill="rgb(242,149,17)"/><text x="29.5105%" y="815.50"></text></g><g><title>malloc_consolidate (2 samples, 0.16%)</title><rect x="29.5016%" y="757" width="0.1608%" height="15" fill="rgb(244,29,21)"/><text x="29.7516%" y="767.50"></text></g><g><title>perf_event_mmap (3 samples, 0.24%)</title><rect x="29.7428%" y="645" width="0.2412%" height="15" fill="rgb(220,130,37)"/><text x="29.9928%" y="655.50"></text></g><g><title>perf_iterate_sb (2 samples, 0.16%)</title><rect x="29.8232%" y="629" width="0.1608%" height="15" fill="rgb(211,67,2)"/><text x="30.0732%" y="639.50"></text></g><g><title>perf_iterate_ctx (2 samples, 0.16%)</title><rect x="29.8232%" y="613" width="0.1608%" height="15" fill="rgb(235,68,52)"/><text x="30.0732%" y="623.50"></text></g><g><title>perf_event_mmap_output (2 samples, 0.16%)</title><rect x="29.8232%" y="597" width="0.1608%" height="15" fill="rgb(246,142,3)"/><text x="30.0732%" y="607.50"></text></g><g><title>__GI___mprotect (5 samples, 0.40%)</title><rect x="29.6624%" y="741" width="0.4019%" height="15" fill="rgb(241,25,7)"/><text x="29.9124%" y="751.50"></text></g><g><title>entry_SYSCALL_64 (5 samples, 0.40%)</title><rect x="29.6624%" y="725" width="0.4019%" height="15" fill="rgb(242,119,39)"/><text x="29.9124%" y="735.50"></text></g><g><title>do_syscall_64 (5 samples, 0.40%)</title><rect x="29.6624%" y="709" width="0.4019%" height="15" fill="rgb(241,98,45)"/><text x="29.9124%" y="719.50"></text></g><g><title>__x64_sys_mprotect (5 samples, 0.40%)</title><rect x="29.6624%" y="693" width="0.4019%" height="15" fill="rgb(254,28,30)"/><text x="29.9124%" y="703.50"></text></g><g><title>do_mprotect_pkey (5 samples, 0.40%)</title><rect x="29.6624%" y="677" width="0.4019%" height="15" fill="rgb(241,142,54)"/><text x="29.9124%" y="687.50"></text></g><g><title>mprotect_fixup (5 samples, 0.40%)</title><rect x="29.6624%" y="661" width="0.4019%" height="15" fill="rgb(222,85,15)"/><text x="29.9124%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (11 samples, 0.88%)</title><rect x="29.2605%" y="821" width="0.8842%" height="15" fill="rgb(210,85,47)"/><text x="29.5105%" y="831.50"></text></g><g><title>__GI___libc_realloc (9 samples, 0.72%)</title><rect x="29.4212%" y="805" width="0.7235%" height="15" fill="rgb(224,206,25)"/><text x="29.6712%" y="815.50"></text></g><g><title>_int_realloc (9 samples, 0.72%)</title><rect x="29.4212%" y="789" width="0.7235%" height="15" fill="rgb(243,201,19)"/><text x="29.6712%" y="799.50"></text></g><g><title>_int_malloc (9 samples, 0.72%)</title><rect x="29.4212%" y="773" width="0.7235%" height="15" fill="rgb(236,59,4)"/><text x="29.6712%" y="783.50"></text></g><g><title>sysmalloc (6 samples, 0.48%)</title><rect x="29.6624%" y="757" width="0.4823%" height="15" fill="rgb(254,179,45)"/><text x="29.9124%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.32%)</title><rect x="30.2251%" y="789" width="0.3215%" height="15" fill="rgb(226,14,10)"/><text x="30.4751%" y="799.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (4 samples, 0.32%)</title><rect x="30.2251%" y="773" width="0.3215%" height="15" fill="rgb(244,27,41)"/><text x="30.4751%" y="783.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (4 samples, 0.32%)</title><rect x="30.2251%" y="757" width="0.3215%" height="15" fill="rgb(235,35,32)"/><text x="30.4751%" y="767.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (3 samples, 0.24%)</title><rect x="30.3055%" y="741" width="0.2412%" height="15" fill="rgb(218,68,31)"/><text x="30.5555%" y="751.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (3 samples, 0.24%)</title><rect x="30.3055%" y="725" width="0.2412%" height="15" fill="rgb(207,120,37)"/><text x="30.5555%" y="735.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (3 samples, 0.24%)</title><rect x="30.3055%" y="709" width="0.2412%" height="15" fill="rgb(227,98,0)"/><text x="30.5555%" y="719.50"></text></g><g><title>__GI___libc_free (2 samples, 0.16%)</title><rect x="30.5466%" y="773" width="0.1608%" height="15" fill="rgb(207,7,3)"/><text x="30.7966%" y="783.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.24%)</title><rect x="30.7074%" y="773" width="0.2412%" height="15" fill="rgb(206,98,19)"/><text x="30.9574%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (10 samples, 0.80%)</title><rect x="30.2251%" y="805" width="0.8039%" height="15" fill="rgb(217,5,26)"/><text x="30.4751%" y="815.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (6 samples, 0.48%)</title><rect x="30.5466%" y="789" width="0.4823%" height="15" fill="rgb(235,190,38)"/><text x="30.7966%" y="799.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.24%)</title><rect x="31.0289%" y="789" width="0.2412%" height="15" fill="rgb(247,86,24)"/><text x="31.2789%" y="799.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (3 samples, 0.24%)</title><rect x="31.0289%" y="773" width="0.2412%" height="15" fill="rgb(205,101,16)"/><text x="31.2789%" y="783.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (3 samples, 0.24%)</title><rect x="31.0289%" y="757" width="0.2412%" height="15" fill="rgb(246,168,33)"/><text x="31.2789%" y="767.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (3 samples, 0.24%)</title><rect x="31.0289%" y="741" width="0.2412%" height="15" fill="rgb(231,114,1)"/><text x="31.2789%" y="751.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (3 samples, 0.24%)</title><rect x="31.0289%" y="725" width="0.2412%" height="15" fill="rgb(207,184,53)"/><text x="31.2789%" y="735.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (3 samples, 0.24%)</title><rect x="31.0289%" y="709" width="0.2412%" height="15" fill="rgb(224,95,51)"/><text x="31.2789%" y="719.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="31.1093%" y="693" width="0.1608%" height="15" fill="rgb(212,188,45)"/><text x="31.3593%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::ObjectName as core::fmt::Display&gt;::fmt (4 samples, 0.32%)</title><rect x="31.0289%" y="805" width="0.3215%" height="15" fill="rgb(223,154,38)"/><text x="31.2789%" y="815.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.16%)</title><rect x="31.3505%" y="757" width="0.1608%" height="15" fill="rgb(251,22,52)"/><text x="31.6005%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.16%)</title><rect x="31.3505%" y="741" width="0.1608%" height="15" fill="rgb(229,209,22)"/><text x="31.6005%" y="751.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.16%)</title><rect x="31.3505%" y="725" width="0.1608%" height="15" fill="rgb(234,138,34)"/><text x="31.6005%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.24%)</title><rect x="31.3505%" y="789" width="0.2412%" height="15" fill="rgb(212,95,11)"/><text x="31.6005%" y="799.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Values as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.24%)</title><rect x="31.3505%" y="773" width="0.2412%" height="15" fill="rgb(240,179,47)"/><text x="31.6005%" y="783.50"></text></g><g><title>alloc::string::String::with_capacity (2 samples, 0.16%)</title><rect x="31.8328%" y="725" width="0.1608%" height="15" fill="rgb(240,163,11)"/><text x="32.0828%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (10 samples, 0.80%)</title><rect x="31.5916%" y="773" width="0.8039%" height="15" fill="rgb(236,37,12)"/><text x="31.8416%" y="783.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (10 samples, 0.80%)</title><rect x="31.5916%" y="757" width="0.8039%" height="15" fill="rgb(232,164,16)"/><text x="31.8416%" y="767.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (8 samples, 0.64%)</title><rect x="31.7524%" y="741" width="0.6431%" height="15" fill="rgb(244,205,15)"/><text x="32.0024%" y="751.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (5 samples, 0.40%)</title><rect x="31.9936%" y="725" width="0.4019%" height="15" fill="rgb(223,117,47)"/><text x="32.2436%" y="735.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (4 samples, 0.32%)</title><rect x="32.0740%" y="709" width="0.3215%" height="15" fill="rgb(244,107,35)"/><text x="32.3240%" y="719.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (4 samples, 0.32%)</title><rect x="32.0740%" y="693" width="0.3215%" height="15" fill="rgb(205,140,8)"/><text x="32.3240%" y="703.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="32.1543%" y="677" width="0.2412%" height="15" fill="rgb(228,84,46)"/><text x="32.4043%" y="687.50"></text></g><g><title>core::fmt::write (29 samples, 2.33%)</title><rect x="30.1447%" y="821" width="2.3312%" height="15" fill="rgb(254,188,9)"/><text x="30.3947%" y="831.50">c..</text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (14 samples, 1.13%)</title><rect x="31.3505%" y="805" width="1.1254%" height="15" fill="rgb(206,112,54)"/><text x="31.6005%" y="815.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::InsertStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (11 samples, 0.88%)</title><rect x="31.5916%" y="789" width="0.8842%" height="15" fill="rgb(216,84,49)"/><text x="31.8416%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="32.6367%" y="805" width="0.1608%" height="15" fill="rgb(214,194,35)"/><text x="32.8867%" y="815.50"></text></g><g><title>core::ptr::drop_in_place (7 samples, 0.56%)</title><rect x="32.4759%" y="821" width="0.5627%" height="15" fill="rgb(249,28,3)"/><text x="32.7259%" y="831.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.16%)</title><rect x="32.8778%" y="805" width="0.1608%" height="15" fill="rgb(222,56,52)"/><text x="33.1278%" y="815.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.16%)</title><rect x="32.8778%" y="789" width="0.1608%" height="15" fill="rgb(245,217,50)"/><text x="33.1278%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="32.8778%" y="773" width="0.1608%" height="15" fill="rgb(213,201,24)"/><text x="33.1278%" y="783.50"></text></g><g><title>decor::helpers::get_user_cols_of_datatable (2 samples, 0.16%)</title><rect x="33.0386%" y="821" width="0.1608%" height="15" fill="rgb(248,116,28)"/><text x="33.2886%" y="831.50"></text></g><g><title>decor::query_transformer::QueryTransformer::objname_to_mv_string (7 samples, 0.56%)</title><rect x="33.2797%" y="821" width="0.5627%" height="15" fill="rgb(219,72,43)"/><text x="33.5297%" y="831.50"></text></g><g><title>decor::query_transformer::QueryTransformer::idents_to_mv_idents (6 samples, 0.48%)</title><rect x="33.3601%" y="805" width="0.4823%" height="15" fill="rgb(209,138,14)"/><text x="33.6101%" y="815.50"></text></g><g><title>alloc::fmt::format (4 samples, 0.32%)</title><rect x="33.5209%" y="789" width="0.3215%" height="15" fill="rgb(222,18,33)"/><text x="33.7709%" y="799.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="33.6013%" y="773" width="0.2412%" height="15" fill="rgb(213,199,7)"/><text x="33.8513%" y="783.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="33.6013%" y="757" width="0.2412%" height="15" fill="rgb(250,110,10)"/><text x="33.8513%" y="767.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="33.6817%" y="741" width="0.1608%" height="15" fill="rgb(248,123,6)"/><text x="33.9317%" y="751.50"></text></g><g><title>eth_type_trans (2 samples, 0.16%)</title><rect x="34.8071%" y="469" width="0.1608%" height="15" fill="rgb(206,91,31)"/><text x="35.0571%" y="479.50"></text></g><g><title>dev_hard_start_xmit (4 samples, 0.32%)</title><rect x="34.8071%" y="501" width="0.3215%" height="15" fill="rgb(211,154,13)"/><text x="35.0571%" y="511.50"></text></g><g><title>loopback_xmit (4 samples, 0.32%)</title><rect x="34.8071%" y="485" width="0.3215%" height="15" fill="rgb(225,148,7)"/><text x="35.0571%" y="495.50"></text></g><g><title>__dev_queue_xmit (8 samples, 0.64%)</title><rect x="34.5659%" y="517" width="0.6431%" height="15" fill="rgb(220,160,43)"/><text x="34.8159%" y="527.50"></text></g><g><title>__inet_lookup_established (2 samples, 0.16%)</title><rect x="35.8521%" y="325" width="0.1608%" height="15" fill="rgb(213,52,39)"/><text x="36.1021%" y="335.50"></text></g><g><title>enqueue_task_fair (4 samples, 0.32%)</title><rect x="36.5756%" y="213" width="0.3215%" height="15" fill="rgb(243,137,7)"/><text x="36.8256%" y="223.50"></text></g><g><title>enqueue_entity (3 samples, 0.24%)</title><rect x="36.6559%" y="197" width="0.2412%" height="15" fill="rgb(230,79,13)"/><text x="36.9059%" y="207.50"></text></g><g><title>select_task_rq_fair (5 samples, 0.40%)</title><rect x="36.8971%" y="213" width="0.4019%" height="15" fill="rgb(247,105,23)"/><text x="37.1471%" y="223.50"></text></g><g><title>available_idle_cpu (3 samples, 0.24%)</title><rect x="37.0579%" y="197" width="0.2412%" height="15" fill="rgb(223,179,41)"/><text x="37.3079%" y="207.50"></text></g><g><title>ttwu_do_wakeup (3 samples, 0.24%)</title><rect x="37.2990%" y="213" width="0.2412%" height="15" fill="rgb(218,9,34)"/><text x="37.5490%" y="223.50"></text></g><g><title>check_preempt_curr (3 samples, 0.24%)</title><rect x="37.2990%" y="197" width="0.2412%" height="15" fill="rgb(222,106,8)"/><text x="37.5490%" y="207.50"></text></g><g><title>resched_curr (3 samples, 0.24%)</title><rect x="37.2990%" y="181" width="0.2412%" height="15" fill="rgb(211,220,0)"/><text x="37.5490%" y="191.50"></text></g><g><title>__wake_up_common (17 samples, 1.37%)</title><rect x="36.3344%" y="261" width="1.3666%" height="15" fill="rgb(229,52,16)"/><text x="36.5844%" y="271.50"></text></g><g><title>pollwake (17 samples, 1.37%)</title><rect x="36.3344%" y="245" width="1.3666%" height="15" fill="rgb(212,155,18)"/><text x="36.5844%" y="255.50"></text></g><g><title>try_to_wake_up (17 samples, 1.37%)</title><rect x="36.3344%" y="229" width="1.3666%" height="15" fill="rgb(242,21,14)"/><text x="36.5844%" y="239.50"></text></g><g><title>update_rq_clock (2 samples, 0.16%)</title><rect x="37.5402%" y="213" width="0.1608%" height="15" fill="rgb(222,19,48)"/><text x="37.7902%" y="223.50"></text></g><g><title>sock_def_readable (18 samples, 1.45%)</title><rect x="36.3344%" y="293" width="1.4469%" height="15" fill="rgb(232,45,27)"/><text x="36.5844%" y="303.50"></text></g><g><title>__wake_up_common_lock (18 samples, 1.45%)</title><rect x="36.3344%" y="277" width="1.4469%" height="15" fill="rgb(249,103,42)"/><text x="36.5844%" y="287.50"></text></g><g><title>__kfree_skb (5 samples, 0.40%)</title><rect x="37.7814%" y="277" width="0.4019%" height="15" fill="rgb(246,81,33)"/><text x="38.0314%" y="287.50"></text></g><g><title>skb_release_data (4 samples, 0.32%)</title><rect x="37.8617%" y="261" width="0.3215%" height="15" fill="rgb(252,33,42)"/><text x="38.1117%" y="271.50"></text></g><g><title>tcp_v4_do_rcv (30 samples, 2.41%)</title><rect x="36.1736%" y="325" width="2.4116%" height="15" fill="rgb(209,212,41)"/><text x="36.4236%" y="335.50">tc..</text></g><g><title>tcp_rcv_established (30 samples, 2.41%)</title><rect x="36.1736%" y="309" width="2.4116%" height="15" fill="rgb(207,154,6)"/><text x="36.4236%" y="319.50">tc..</text></g><g><title>tcp_ack (10 samples, 0.80%)</title><rect x="37.7814%" y="293" width="0.8039%" height="15" fill="rgb(223,64,47)"/><text x="38.0314%" y="303.50"></text></g><g><title>tcp_ack_update_rtt (3 samples, 0.24%)</title><rect x="38.3441%" y="277" width="0.2412%" height="15" fill="rgb(211,161,38)"/><text x="38.5941%" y="287.50"></text></g><g><title>ip_local_deliver (37 samples, 2.97%)</title><rect x="35.6913%" y="389" width="2.9743%" height="15" fill="rgb(219,138,40)"/><text x="35.9413%" y="399.50">ip_..</text></g><g><title>ip_local_deliver_finish (37 samples, 2.97%)</title><rect x="35.6913%" y="373" width="2.9743%" height="15" fill="rgb(241,228,46)"/><text x="35.9413%" y="383.50">ip_..</text></g><g><title>ip_protocol_deliver_rcu (37 samples, 2.97%)</title><rect x="35.6913%" y="357" width="2.9743%" height="15" fill="rgb(223,209,38)"/><text x="35.9413%" y="367.50">ip_..</text></g><g><title>tcp_v4_rcv (35 samples, 2.81%)</title><rect x="35.8521%" y="341" width="2.8135%" height="15" fill="rgb(236,164,45)"/><text x="36.1021%" y="351.50">tc..</text></g><g><title>ip_finish_output2 (53 samples, 4.26%)</title><rect x="34.4855%" y="533" width="4.2605%" height="15" fill="rgb(231,15,5)"/><text x="34.7355%" y="543.50">ip_fi..</text></g><g><title>__local_bh_enable_ip (44 samples, 3.54%)</title><rect x="35.2090%" y="517" width="3.5370%" height="15" fill="rgb(252,35,15)"/><text x="35.4590%" y="527.50">__l..</text></g><g><title>do_softirq (44 samples, 3.54%)</title><rect x="35.2090%" y="501" width="3.5370%" height="15" fill="rgb(248,181,18)"/><text x="35.4590%" y="511.50">do_..</text></g><g><title>do_softirq_own_stack (42 samples, 3.38%)</title><rect x="35.3698%" y="485" width="3.3762%" height="15" fill="rgb(233,39,42)"/><text x="35.6198%" y="495.50">do_..</text></g><g><title>__do_softirq (42 samples, 3.38%)</title><rect x="35.3698%" y="469" width="3.3762%" height="15" fill="rgb(238,110,33)"/><text x="35.6198%" y="479.50">__d..</text></g><g><title>net_rx_action (40 samples, 3.22%)</title><rect x="35.5305%" y="453" width="3.2154%" height="15" fill="rgb(233,195,10)"/><text x="35.7805%" y="463.50">net..</text></g><g><title>process_backlog (40 samples, 3.22%)</title><rect x="35.5305%" y="437" width="3.2154%" height="15" fill="rgb(254,105,3)"/><text x="35.7805%" y="447.50">pro..</text></g><g><title>__netif_receive_skb_one_core (39 samples, 3.14%)</title><rect x="35.6109%" y="421" width="3.1350%" height="15" fill="rgb(221,225,9)"/><text x="35.8609%" y="431.50">__n..</text></g><g><title>ip_rcv (39 samples, 3.14%)</title><rect x="35.6109%" y="405" width="3.1350%" height="15" fill="rgb(224,227,45)"/><text x="35.8609%" y="415.50">ip_..</text></g><g><title>__tcp_transmit_skb (55 samples, 4.42%)</title><rect x="34.4051%" y="581" width="4.4212%" height="15" fill="rgb(229,198,43)"/><text x="34.6551%" y="591.50">__tcp..</text></g><g><title>__ip_queue_xmit (55 samples, 4.42%)</title><rect x="34.4051%" y="565" width="4.4212%" height="15" fill="rgb(206,209,35)"/><text x="34.6551%" y="575.50">__ip_..</text></g><g><title>ip_output (54 samples, 4.34%)</title><rect x="34.4855%" y="549" width="4.3408%" height="15" fill="rgb(245,195,53)"/><text x="34.7355%" y="559.50">ip_ou..</text></g><g><title>__tcp_push_pending_frames (59 samples, 4.74%)</title><rect x="34.2444%" y="613" width="4.7428%" height="15" fill="rgb(240,92,26)"/><text x="34.4944%" y="623.50">__tcp_..</text></g><g><title>tcp_write_xmit (59 samples, 4.74%)</title><rect x="34.2444%" y="597" width="4.7428%" height="15" fill="rgb(207,40,23)"/><text x="34.4944%" y="607.50">tcp_wr..</text></g><g><title>tcp_event_new_data_sent (2 samples, 0.16%)</title><rect x="38.8264%" y="581" width="0.1608%" height="15" fill="rgb(223,111,35)"/><text x="39.0764%" y="591.50"></text></g><g><title>sock_sendmsg (64 samples, 5.14%)</title><rect x="34.1640%" y="661" width="5.1447%" height="15" fill="rgb(229,147,28)"/><text x="34.4140%" y="671.50">sock_s..</text></g><g><title>tcp_sendmsg (64 samples, 5.14%)</title><rect x="34.1640%" y="645" width="5.1447%" height="15" fill="rgb(211,29,28)"/><text x="34.4140%" y="655.50">tcp_se..</text></g><g><title>tcp_sendmsg_locked (63 samples, 5.06%)</title><rect x="34.2444%" y="629" width="5.0643%" height="15" fill="rgb(228,72,33)"/><text x="34.4944%" y="639.50">tcp_se..</text></g><g><title>__x64_sys_sendto (66 samples, 5.31%)</title><rect x="34.0836%" y="693" width="5.3055%" height="15" fill="rgb(205,214,31)"/><text x="34.3336%" y="703.50">__x64_..</text></g><g><title>__sys_sendto (65 samples, 5.23%)</title><rect x="34.1640%" y="677" width="5.2251%" height="15" fill="rgb(224,111,15)"/><text x="34.4140%" y="687.50">__sys_..</text></g><g><title>do_syscall_64 (67 samples, 5.39%)</title><rect x="34.0836%" y="709" width="5.3859%" height="15" fill="rgb(253,21,26)"/><text x="34.3336%" y="719.50">do_sysc..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (159 samples, 12.78%)</title><rect x="26.7685%" y="869" width="12.7814%" height="15" fill="rgb(245,139,43)"/><text x="27.0185%" y="879.50">msql_srv::MysqlInte..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (157 samples, 12.62%)</title><rect x="26.9293%" y="853" width="12.6206%" height="15" fill="rgb(252,170,7)"/><text x="27.1793%" y="863.50">&lt;decor::Shim as msq..</text></g><g><title>decor::query_transformer::QueryTransformer::get_mv_stmt (157 samples, 12.62%)</title><rect x="26.9293%" y="837" width="12.6206%" height="15" fill="rgb(231,118,14)"/><text x="27.1793%" y="847.50">decor::query_transf..</text></g><g><title>mysql::conn::Conn::_query (71 samples, 5.71%)</title><rect x="33.8424%" y="821" width="5.7074%" height="15" fill="rgb(238,83,0)"/><text x="34.0924%" y="831.50">mysql::..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (71 samples, 5.71%)</title><rect x="33.8424%" y="805" width="5.7074%" height="15" fill="rgb(221,39,39)"/><text x="34.0924%" y="815.50">mysql_c..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (68 samples, 5.47%)</title><rect x="34.0836%" y="789" width="5.4662%" height="15" fill="rgb(222,119,46)"/><text x="34.3336%" y="799.50">std::io..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (68 samples, 5.47%)</title><rect x="34.0836%" y="773" width="5.4662%" height="15" fill="rgb(222,165,49)"/><text x="34.3336%" y="783.50">&lt;std::n..</text></g><g><title>std::sys_common::net::TcpStream::write (68 samples, 5.47%)</title><rect x="34.0836%" y="757" width="5.4662%" height="15" fill="rgb(219,113,52)"/><text x="34.3336%" y="767.50">std::sy..</text></g><g><title>__libc_send (68 samples, 5.47%)</title><rect x="34.0836%" y="741" width="5.4662%" height="15" fill="rgb(214,7,15)"/><text x="34.3336%" y="751.50">__libc_..</text></g><g><title>entry_SYSCALL_64 (68 samples, 5.47%)</title><rect x="34.0836%" y="725" width="5.4662%" height="15" fill="rgb(235,32,4)"/><text x="34.3336%" y="735.50">entry_S..</text></g><g><title>mysql_common::packets::parse_ok_packet (3 samples, 0.24%)</title><rect x="39.5498%" y="869" width="0.2412%" height="15" fill="rgb(238,90,54)"/><text x="39.7998%" y="879.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (12 samples, 0.96%)</title><rect x="40.6752%" y="757" width="0.9646%" height="15" fill="rgb(213,208,19)"/><text x="40.9252%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (12 samples, 0.96%)</title><rect x="40.6752%" y="741" width="0.9646%" height="15" fill="rgb(233,156,4)"/><text x="40.9252%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (12 samples, 0.96%)</title><rect x="40.6752%" y="725" width="0.9646%" height="15" fill="rgb(207,194,5)"/><text x="40.9252%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (12 samples, 0.96%)</title><rect x="40.6752%" y="709" width="0.9646%" height="15" fill="rgb(206,111,30)"/><text x="40.9252%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (12 samples, 0.96%)</title><rect x="40.6752%" y="693" width="0.9646%" height="15" fill="rgb(243,70,54)"/><text x="40.9252%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (12 samples, 0.96%)</title><rect x="40.6752%" y="677" width="0.9646%" height="15" fill="rgb(242,28,8)"/><text x="40.9252%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (12 samples, 0.96%)</title><rect x="40.6752%" y="661" width="0.9646%" height="15" fill="rgb(219,106,18)"/><text x="40.9252%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (12 samples, 0.96%)</title><rect x="40.6752%" y="645" width="0.9646%" height="15" fill="rgb(244,222,10)"/><text x="40.9252%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (12 samples, 0.96%)</title><rect x="40.6752%" y="629" width="0.9646%" height="15" fill="rgb(236,179,52)"/><text x="40.9252%" y="639.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (2 samples, 0.16%)</title><rect x="41.8006%" y="741" width="0.1608%" height="15" fill="rgb(213,23,39)"/><text x="42.0506%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (20 samples, 1.61%)</title><rect x="40.4341%" y="789" width="1.6077%" height="15" fill="rgb(238,48,10)"/><text x="40.6841%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::expected (18 samples, 1.45%)</title><rect x="40.5949%" y="773" width="1.4469%" height="15" fill="rgb(251,196,23)"/><text x="40.8449%" y="783.50"></text></g><g><title>alloc::fmt::format (4 samples, 0.32%)</title><rect x="41.7203%" y="757" width="0.3215%" height="15" fill="rgb(250,152,24)"/><text x="41.9703%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (3 samples, 0.24%)</title><rect x="42.0418%" y="789" width="0.2412%" height="15" fill="rgb(209,150,17)"/><text x="42.2918%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="42.5241%" y="773" width="0.1608%" height="15" fill="rgb(234,202,34)"/><text x="42.7741%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="42.5241%" y="757" width="0.1608%" height="15" fill="rgb(253,148,53)"/><text x="42.7741%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (33 samples, 2.65%)</title><rect x="40.1125%" y="869" width="2.6527%" height="15" fill="rgb(218,129,16)"/><text x="40.3625%" y="879.50">sq..</text></g><g><title>sql_parser::parser::Parser::parse_query_body (33 samples, 2.65%)</title><rect x="40.1125%" y="853" width="2.6527%" height="15" fill="rgb(216,85,19)"/><text x="40.3625%" y="863.50">sq..</text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (33 samples, 2.65%)</title><rect x="40.1125%" y="837" width="2.6527%" height="15" fill="rgb(235,228,7)"/><text x="40.3625%" y="847.50">sq..</text></g><g><title>sql_parser::parser::Parser::check_descent (33 samples, 2.65%)</title><rect x="40.1125%" y="821" width="2.6527%" height="15" fill="rgb(245,175,0)"/><text x="40.3625%" y="831.50">sq..</text></g><g><title>sql_parser::parser::Parser::parse_prefix (33 samples, 2.65%)</title><rect x="40.1125%" y="805" width="2.6527%" height="15" fill="rgb(208,168,36)"/><text x="40.3625%" y="815.50">sq..</text></g><g><title>sql_parser::parser::Parser::parse_value (6 samples, 0.48%)</title><rect x="42.2830%" y="789" width="0.4823%" height="15" fill="rgb(246,171,24)"/><text x="42.5330%" y="799.50"></text></g><g><title>__GI___mprotect (2 samples, 0.16%)</title><rect x="43.0868%" y="549" width="0.1608%" height="15" fill="rgb(215,142,24)"/><text x="43.3368%" y="559.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.16%)</title><rect x="43.0868%" y="533" width="0.1608%" height="15" fill="rgb(250,187,7)"/><text x="43.3368%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5 samples, 0.40%)</title><rect x="42.9260%" y="773" width="0.4019%" height="15" fill="rgb(228,66,33)"/><text x="43.1760%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.40%)</title><rect x="42.9260%" y="757" width="0.4019%" height="15" fill="rgb(234,215,21)"/><text x="43.1760%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (5 samples, 0.40%)</title><rect x="42.9260%" y="741" width="0.4019%" height="15" fill="rgb(222,191,20)"/><text x="43.1760%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.40%)</title><rect x="42.9260%" y="725" width="0.4019%" height="15" fill="rgb(245,79,54)"/><text x="43.1760%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (5 samples, 0.40%)</title><rect x="42.9260%" y="709" width="0.4019%" height="15" fill="rgb(240,10,37)"/><text x="43.1760%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (5 samples, 0.40%)</title><rect x="42.9260%" y="693" width="0.4019%" height="15" fill="rgb(214,192,32)"/><text x="43.1760%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.40%)</title><rect x="42.9260%" y="677" width="0.4019%" height="15" fill="rgb(209,36,54)"/><text x="43.1760%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.40%)</title><rect x="42.9260%" y="661" width="0.4019%" height="15" fill="rgb(220,10,11)"/><text x="43.1760%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (5 samples, 0.40%)</title><rect x="42.9260%" y="645" width="0.4019%" height="15" fill="rgb(221,106,17)"/><text x="43.1760%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.40%)</title><rect x="42.9260%" y="629" width="0.4019%" height="15" fill="rgb(251,142,44)"/><text x="43.1760%" y="639.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.40%)</title><rect x="42.9260%" y="613" width="0.4019%" height="15" fill="rgb(238,13,15)"/><text x="43.1760%" y="623.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.40%)</title><rect x="42.9260%" y="597" width="0.4019%" height="15" fill="rgb(208,107,27)"/><text x="43.1760%" y="607.50"></text></g><g><title>_int_malloc (5 samples, 0.40%)</title><rect x="42.9260%" y="581" width="0.4019%" height="15" fill="rgb(205,136,37)"/><text x="43.1760%" y="591.50"></text></g><g><title>sysmalloc (3 samples, 0.24%)</title><rect x="43.0868%" y="565" width="0.2412%" height="15" fill="rgb(250,205,27)"/><text x="43.3368%" y="575.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="43.4084%" y="725" width="0.1608%" height="15" fill="rgb(210,80,43)"/><text x="43.6584%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="43.4084%" y="709" width="0.1608%" height="15" fill="rgb(247,160,36)"/><text x="43.6584%" y="719.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="43.4084%" y="693" width="0.1608%" height="15" fill="rgb(234,13,49)"/><text x="43.6584%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="43.4084%" y="677" width="0.1608%" height="15" fill="rgb(234,122,0)"/><text x="43.6584%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="43.4084%" y="661" width="0.1608%" height="15" fill="rgb(207,146,38)"/><text x="43.6584%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (2 samples, 0.16%)</title><rect x="43.4084%" y="645" width="0.1608%" height="15" fill="rgb(207,177,25)"/><text x="43.6584%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (2 samples, 0.16%)</title><rect x="43.4084%" y="629" width="0.1608%" height="15" fill="rgb(211,178,42)"/><text x="43.6584%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="43.4084%" y="613" width="0.1608%" height="15" fill="rgb(230,69,54)"/><text x="43.6584%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (2 samples, 0.16%)</title><rect x="43.4084%" y="597" width="0.1608%" height="15" fill="rgb(214,135,41)"/><text x="43.6584%" y="607.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (10 samples, 0.80%)</title><rect x="42.9260%" y="869" width="0.8039%" height="15" fill="rgb(237,67,25)"/><text x="43.1760%" y="879.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (10 samples, 0.80%)</title><rect x="42.9260%" y="853" width="0.8039%" height="15" fill="rgb(222,189,50)"/><text x="43.1760%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (10 samples, 0.80%)</title><rect x="42.9260%" y="837" width="0.8039%" height="15" fill="rgb(245,148,34)"/><text x="43.1760%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (10 samples, 0.80%)</title><rect x="42.9260%" y="821" width="0.8039%" height="15" fill="rgb(222,29,6)"/><text x="43.1760%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (10 samples, 0.80%)</title><rect x="42.9260%" y="805" width="0.8039%" height="15" fill="rgb(221,189,43)"/><text x="43.1760%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::expected (10 samples, 0.80%)</title><rect x="42.9260%" y="789" width="0.8039%" height="15" fill="rgb(207,36,27)"/><text x="43.1760%" y="799.50"></text></g><g><title>alloc::fmt::format (5 samples, 0.40%)</title><rect x="43.3280%" y="773" width="0.4019%" height="15" fill="rgb(217,90,24)"/><text x="43.5780%" y="783.50"></text></g><g><title>core::fmt::Write::write_fmt (5 samples, 0.40%)</title><rect x="43.3280%" y="757" width="0.4019%" height="15" fill="rgb(224,66,35)"/><text x="43.5780%" y="767.50"></text></g><g><title>core::fmt::write (5 samples, 0.40%)</title><rect x="43.3280%" y="741" width="0.4019%" height="15" fill="rgb(221,13,50)"/><text x="43.5780%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (5 samples, 0.40%)</title><rect x="43.8103%" y="821" width="0.4019%" height="15" fill="rgb(236,68,49)"/><text x="44.0603%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (2 samples, 0.16%)</title><rect x="44.0514%" y="805" width="0.1608%" height="15" fill="rgb(229,146,28)"/><text x="44.3014%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (11 samples, 0.88%)</title><rect x="43.7299%" y="869" width="0.8842%" height="15" fill="rgb(225,31,38)"/><text x="43.9799%" y="879.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (11 samples, 0.88%)</title><rect x="43.7299%" y="853" width="0.8842%" height="15" fill="rgb(250,208,3)"/><text x="43.9799%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (11 samples, 0.88%)</title><rect x="43.7299%" y="837" width="0.8842%" height="15" fill="rgb(246,54,23)"/><text x="43.9799%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (5 samples, 0.40%)</title><rect x="44.2122%" y="821" width="0.4019%" height="15" fill="rgb(243,76,11)"/><text x="44.4622%" y="831.50"></text></g><g><title>sql_parser::parser::parse_statements (10 samples, 0.80%)</title><rect x="44.6945%" y="869" width="0.8039%" height="15" fill="rgb(245,21,50)"/><text x="44.9445%" y="879.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (10 samples, 0.80%)</title><rect x="44.6945%" y="853" width="0.8039%" height="15" fill="rgb(228,9,43)"/><text x="44.9445%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (10 samples, 0.80%)</title><rect x="44.6945%" y="837" width="0.8039%" height="15" fill="rgb(208,100,47)"/><text x="44.9445%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (10 samples, 0.80%)</title><rect x="44.6945%" y="821" width="0.8039%" height="15" fill="rgb(232,26,8)"/><text x="44.9445%" y="831.50"></text></g><g><title>__memcmp_avx2_movbe (5 samples, 0.40%)</title><rect x="45.0965%" y="805" width="0.4019%" height="15" fill="rgb(216,166,38)"/><text x="45.3465%" y="815.50"></text></g><g><title>dequeue_task_fair (5 samples, 0.40%)</title><rect x="45.7395%" y="341" width="0.4019%" height="15" fill="rgb(251,202,51)"/><text x="45.9895%" y="351.50"></text></g><g><title>dequeue_entity (4 samples, 0.32%)</title><rect x="45.8199%" y="325" width="0.3215%" height="15" fill="rgb(254,216,34)"/><text x="46.0699%" y="335.50"></text></g><g><title>update_curr (2 samples, 0.16%)</title><rect x="45.9807%" y="309" width="0.1608%" height="15" fill="rgb(251,32,27)"/><text x="46.2307%" y="319.50"></text></g><g><title>sk_wait_data (7 samples, 0.56%)</title><rect x="45.6592%" y="421" width="0.5627%" height="15" fill="rgb(208,127,28)"/><text x="45.9092%" y="431.50"></text></g><g><title>wait_woken (7 samples, 0.56%)</title><rect x="45.6592%" y="405" width="0.5627%" height="15" fill="rgb(224,137,22)"/><text x="45.9092%" y="415.50"></text></g><g><title>schedule_timeout (7 samples, 0.56%)</title><rect x="45.6592%" y="389" width="0.5627%" height="15" fill="rgb(254,70,32)"/><text x="45.9092%" y="399.50"></text></g><g><title>schedule (7 samples, 0.56%)</title><rect x="45.6592%" y="373" width="0.5627%" height="15" fill="rgb(229,75,37)"/><text x="45.9092%" y="383.50"></text></g><g><title>__schedule (7 samples, 0.56%)</title><rect x="45.6592%" y="357" width="0.5627%" height="15" fill="rgb(252,64,23)"/><text x="45.9092%" y="367.50"></text></g><g><title>skb_copy_datagram_iter (4 samples, 0.32%)</title><rect x="46.2219%" y="421" width="0.3215%" height="15" fill="rgb(232,162,48)"/><text x="46.4719%" y="431.50"></text></g><g><title>__skb_datagram_iter (4 samples, 0.32%)</title><rect x="46.2219%" y="405" width="0.3215%" height="15" fill="rgb(246,160,12)"/><text x="46.4719%" y="415.50"></text></g><g><title>simple_copy_to_iter (2 samples, 0.16%)</title><rect x="46.3826%" y="389" width="0.1608%" height="15" fill="rgb(247,166,0)"/><text x="46.6326%" y="399.50"></text></g><g><title>__check_object_size (2 samples, 0.16%)</title><rect x="46.3826%" y="373" width="0.1608%" height="15" fill="rgb(249,219,21)"/><text x="46.6326%" y="383.50"></text></g><g><title>__x64_sys_recvfrom (14 samples, 1.13%)</title><rect x="45.4984%" y="485" width="1.1254%" height="15" fill="rgb(205,209,3)"/><text x="45.7484%" y="495.50"></text></g><g><title>__sys_recvfrom (14 samples, 1.13%)</title><rect x="45.4984%" y="469" width="1.1254%" height="15" fill="rgb(243,44,1)"/><text x="45.7484%" y="479.50"></text></g><g><title>inet_recvmsg (14 samples, 1.13%)</title><rect x="45.4984%" y="453" width="1.1254%" height="15" fill="rgb(206,159,16)"/><text x="45.7484%" y="463.50"></text></g><g><title>tcp_recvmsg (14 samples, 1.13%)</title><rect x="45.4984%" y="437" width="1.1254%" height="15" fill="rgb(244,77,30)"/><text x="45.7484%" y="447.50"></text></g><g><title>do_syscall_64 (15 samples, 1.21%)</title><rect x="45.4984%" y="501" width="1.2058%" height="15" fill="rgb(218,69,12)"/><text x="45.7484%" y="511.50"></text></g><g><title>mysql::conn::Conn::start_transaction (18 samples, 1.45%)</title><rect x="45.4984%" y="725" width="1.4469%" height="15" fill="rgb(212,87,7)"/><text x="45.7484%" y="735.50"></text></g><g><title>mysql::conn::Conn::_start_transaction (18 samples, 1.45%)</title><rect x="45.4984%" y="709" width="1.4469%" height="15" fill="rgb(245,114,25)"/><text x="45.7484%" y="719.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (18 samples, 1.45%)</title><rect x="45.4984%" y="693" width="1.4469%" height="15" fill="rgb(210,61,42)"/><text x="45.7484%" y="703.50"></text></g><g><title>mysql::conn::Conn::_query (18 samples, 1.45%)</title><rect x="45.4984%" y="677" width="1.4469%" height="15" fill="rgb(211,52,33)"/><text x="45.7484%" y="687.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (18 samples, 1.45%)</title><rect x="45.4984%" y="661" width="1.4469%" height="15" fill="rgb(234,58,33)"/><text x="45.7484%" y="671.50"></text></g><g><title>mysql::conn::Conn::read_packet (18 samples, 1.45%)</title><rect x="45.4984%" y="645" width="1.4469%" height="15" fill="rgb(220,115,36)"/><text x="45.7484%" y="655.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 1.45%)</title><rect x="45.4984%" y="629" width="1.4469%" height="15" fill="rgb(243,153,54)"/><text x="45.7484%" y="639.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (18 samples, 1.45%)</title><rect x="45.4984%" y="613" width="1.4469%" height="15" fill="rgb(251,47,18)"/><text x="45.7484%" y="623.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (18 samples, 1.45%)</title><rect x="45.4984%" y="597" width="1.4469%" height="15" fill="rgb(242,102,42)"/><text x="45.7484%" y="607.50"></text></g><g><title>std::sys_common::net::TcpStream::read (18 samples, 1.45%)</title><rect x="45.4984%" y="581" width="1.4469%" height="15" fill="rgb(234,31,38)"/><text x="45.7484%" y="591.50"></text></g><g><title>std::sys::unix::net::Socket::read (18 samples, 1.45%)</title><rect x="45.4984%" y="565" width="1.4469%" height="15" fill="rgb(221,117,51)"/><text x="45.7484%" y="575.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (18 samples, 1.45%)</title><rect x="45.4984%" y="549" width="1.4469%" height="15" fill="rgb(212,20,18)"/><text x="45.7484%" y="559.50"></text></g><g><title>__libc_recv (18 samples, 1.45%)</title><rect x="45.4984%" y="533" width="1.4469%" height="15" fill="rgb(245,133,36)"/><text x="45.7484%" y="543.50"></text></g><g><title>entry_SYSCALL_64 (18 samples, 1.45%)</title><rect x="45.4984%" y="517" width="1.4469%" height="15" fill="rgb(212,6,19)"/><text x="45.7484%" y="527.50"></text></g><g><title>prepare_exit_to_usermode (3 samples, 0.24%)</title><rect x="46.7042%" y="501" width="0.2412%" height="15" fill="rgb(218,1,36)"/><text x="46.9542%" y="511.50"></text></g><g><title>start_thread (22 samples, 1.77%)</title><rect x="45.4984%" y="869" width="1.7685%" height="15" fill="rgb(246,84,54)"/><text x="45.7484%" y="879.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (22 samples, 1.77%)</title><rect x="45.4984%" y="853" width="1.7685%" height="15" fill="rgb(242,110,6)"/><text x="45.7484%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (22 samples, 1.77%)</title><rect x="45.4984%" y="837" width="1.7685%" height="15" fill="rgb(214,47,5)"/><text x="45.7484%" y="847.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (22 samples, 1.77%)</title><rect x="45.4984%" y="821" width="1.7685%" height="15" fill="rgb(218,159,25)"/><text x="45.7484%" y="831.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (22 samples, 1.77%)</title><rect x="45.4984%" y="805" width="1.7685%" height="15" fill="rgb(215,211,28)"/><text x="45.7484%" y="815.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (22 samples, 1.77%)</title><rect x="45.4984%" y="789" width="1.7685%" height="15" fill="rgb(238,59,32)"/><text x="45.7484%" y="799.50"></text></g><g><title>decor::Shim::run_on_tcp (22 samples, 1.77%)</title><rect x="45.4984%" y="773" width="1.7685%" height="15" fill="rgb(226,82,3)"/><text x="45.7484%" y="783.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (22 samples, 1.77%)</title><rect x="45.4984%" y="757" width="1.7685%" height="15" fill="rgb(240,164,32)"/><text x="45.7484%" y="767.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (22 samples, 1.77%)</title><rect x="45.4984%" y="741" width="1.7685%" height="15" fill="rgb(232,46,7)"/><text x="45.7484%" y="751.50"></text></g><g><title>sql_parser::parser::parse_statements (4 samples, 0.32%)</title><rect x="46.9453%" y="725" width="0.3215%" height="15" fill="rgb(229,129,53)"/><text x="47.1953%" y="735.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (4 samples, 0.32%)</title><rect x="46.9453%" y="709" width="0.3215%" height="15" fill="rgb(234,188,29)"/><text x="47.1953%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="47.1061%" y="693" width="0.1608%" height="15" fill="rgb(246,141,4)"/><text x="47.3561%" y="703.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (2 samples, 0.16%)</title><rect x="47.2669%" y="869" width="0.1608%" height="15" fill="rgb(229,23,39)"/><text x="47.5169%" y="879.50"></text></g><g><title>std::net::tcp::TcpStream::set_write_timeout (3 samples, 0.24%)</title><rect x="47.4277%" y="869" width="0.2412%" height="15" fill="rgb(206,12,3)"/><text x="47.6777%" y="879.50"></text></g><g><title>std::sys_common::net::TcpStream::set_write_timeout (3 samples, 0.24%)</title><rect x="47.4277%" y="853" width="0.2412%" height="15" fill="rgb(252,226,20)"/><text x="47.6777%" y="863.50"></text></g><g><title>std::sys::unix::net::Socket::set_timeout (3 samples, 0.24%)</title><rect x="47.4277%" y="837" width="0.2412%" height="15" fill="rgb(216,123,35)"/><text x="47.6777%" y="847.50"></text></g><g><title>std::io::error::Error::new (3 samples, 0.24%)</title><rect x="47.4277%" y="821" width="0.2412%" height="15" fill="rgb(212,68,40)"/><text x="47.6777%" y="831.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3 samples, 0.24%)</title><rect x="47.4277%" y="805" width="0.2412%" height="15" fill="rgb(254,125,32)"/><text x="47.6777%" y="815.50"></text></g><g><title>std::error::&lt;impl core::convert::From&lt;&amp;str&gt; for alloc::boxed::Box&lt;dyn std::error::Error+core::marker::Sync+core::marker::Send&gt;&gt;::from (3 samples, 0.24%)</title><rect x="47.4277%" y="789" width="0.2412%" height="15" fill="rgb(253,97,22)"/><text x="47.6777%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (3 samples, 0.24%)</title><rect x="47.4277%" y="773" width="0.2412%" height="15" fill="rgb(241,101,14)"/><text x="47.6777%" y="783.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (3 samples, 0.24%)</title><rect x="47.4277%" y="757" width="0.2412%" height="15" fill="rgb(238,103,29)"/><text x="47.6777%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (3 samples, 0.24%)</title><rect x="47.4277%" y="741" width="0.2412%" height="15" fill="rgb(233,195,47)"/><text x="47.6777%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.24%)</title><rect x="47.4277%" y="725" width="0.2412%" height="15" fill="rgb(246,218,30)"/><text x="47.6777%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="47.4277%" y="709" width="0.2412%" height="15" fill="rgb(219,145,47)"/><text x="47.6777%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.24%)</title><rect x="47.4277%" y="693" width="0.2412%" height="15" fill="rgb(243,12,26)"/><text x="47.6777%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.24%)</title><rect x="47.4277%" y="677" width="0.2412%" height="15" fill="rgb(214,87,16)"/><text x="47.6777%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="47.4277%" y="661" width="0.2412%" height="15" fill="rgb(208,99,42)"/><text x="47.6777%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.24%)</title><rect x="47.4277%" y="645" width="0.2412%" height="15" fill="rgb(253,99,2)"/><text x="47.6777%" y="655.50"></text></g><g><title>__libc_recv (3 samples, 0.24%)</title><rect x="47.4277%" y="629" width="0.2412%" height="15" fill="rgb(220,168,23)"/><text x="47.6777%" y="639.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.24%)</title><rect x="47.4277%" y="613" width="0.2412%" height="15" fill="rgb(242,38,24)"/><text x="47.6777%" y="623.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (2 samples, 0.16%)</title><rect x="47.7492%" y="869" width="0.1608%" height="15" fill="rgb(225,182,9)"/><text x="47.9992%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (2 samples, 0.16%)</title><rect x="47.7492%" y="853" width="0.1608%" height="15" fill="rgb(243,178,37)"/><text x="47.9992%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (2 samples, 0.16%)</title><rect x="47.7492%" y="837" width="0.1608%" height="15" fill="rgb(232,139,19)"/><text x="47.9992%" y="847.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (2 samples, 0.16%)</title><rect x="47.7492%" y="821" width="0.1608%" height="15" fill="rgb(225,201,24)"/><text x="47.9992%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2 samples, 0.16%)</title><rect x="47.7492%" y="805" width="0.1608%" height="15" fill="rgb(221,47,46)"/><text x="47.9992%" y="815.50"></text></g><g><title>decor::Shim::run_on_tcp (2 samples, 0.16%)</title><rect x="47.7492%" y="789" width="0.1608%" height="15" fill="rgb(249,23,13)"/><text x="47.9992%" y="799.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (2 samples, 0.16%)</title><rect x="47.7492%" y="773" width="0.1608%" height="15" fill="rgb(219,9,5)"/><text x="47.9992%" y="783.50"></text></g><g><title>mysql::conn::Conn::start_transaction (2 samples, 0.16%)</title><rect x="47.9100%" y="805" width="0.1608%" height="15" fill="rgb(254,171,16)"/><text x="48.1600%" y="815.50"></text></g><g><title>mysql::conn::Conn::_start_transaction (2 samples, 0.16%)</title><rect x="47.9100%" y="789" width="0.1608%" height="15" fill="rgb(230,171,20)"/><text x="48.1600%" y="799.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (2 samples, 0.16%)</title><rect x="47.9100%" y="773" width="0.1608%" height="15" fill="rgb(210,71,41)"/><text x="48.1600%" y="783.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.16%)</title><rect x="47.9100%" y="757" width="0.1608%" height="15" fill="rgb(206,173,20)"/><text x="48.1600%" y="767.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (2 samples, 0.16%)</title><rect x="47.9100%" y="741" width="0.1608%" height="15" fill="rgb(233,88,34)"/><text x="48.1600%" y="751.50"></text></g><g><title>mysql::conn::Conn::read_packet (2 samples, 0.16%)</title><rect x="47.9100%" y="725" width="0.1608%" height="15" fill="rgb(223,209,46)"/><text x="48.1600%" y="735.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="47.9100%" y="709" width="0.1608%" height="15" fill="rgb(250,43,18)"/><text x="48.1600%" y="719.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (2 samples, 0.16%)</title><rect x="47.9100%" y="693" width="0.1608%" height="15" fill="rgb(208,13,10)"/><text x="48.1600%" y="703.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (2 samples, 0.16%)</title><rect x="47.9100%" y="677" width="0.1608%" height="15" fill="rgb(212,200,36)"/><text x="48.1600%" y="687.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.16%)</title><rect x="47.9100%" y="661" width="0.1608%" height="15" fill="rgb(225,90,30)"/><text x="48.1600%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.72%)</title><rect x="48.0707%" y="773" width="0.7235%" height="15" fill="rgb(236,182,39)"/><text x="48.3207%" y="783.50"></text></g><g><title>__GI___libc_realloc (9 samples, 0.72%)</title><rect x="48.0707%" y="757" width="0.7235%" height="15" fill="rgb(212,144,35)"/><text x="48.3207%" y="767.50"></text></g><g><title>_int_realloc (9 samples, 0.72%)</title><rect x="48.0707%" y="741" width="0.7235%" height="15" fill="rgb(228,63,44)"/><text x="48.3207%" y="751.50"></text></g><g><title>_int_malloc (9 samples, 0.72%)</title><rect x="48.0707%" y="725" width="0.7235%" height="15" fill="rgb(228,109,6)"/><text x="48.3207%" y="735.50"></text></g><g><title>malloc_consolidate (4 samples, 0.32%)</title><rect x="48.4727%" y="709" width="0.3215%" height="15" fill="rgb(238,117,24)"/><text x="48.7227%" y="719.50"></text></g><g><title>__memcmp_avx2_movbe (8 samples, 0.64%)</title><rect x="50.3215%" y="741" width="0.6431%" height="15" fill="rgb(242,26,26)"/><text x="50.5715%" y="751.50"></text></g><g><title>__rdl_alloc (2 samples, 0.16%)</title><rect x="50.9646%" y="741" width="0.1608%" height="15" fill="rgb(221,92,48)"/><text x="51.2146%" y="751.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.16%)</title><rect x="50.9646%" y="725" width="0.1608%" height="15" fill="rgb(209,209,32)"/><text x="51.2146%" y="735.50"></text></g><g><title>alloc::string::String::push (2 samples, 0.16%)</title><rect x="51.2058%" y="725" width="0.1608%" height="15" fill="rgb(221,70,22)"/><text x="51.4558%" y="735.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (39 samples, 3.14%)</title><rect x="48.7942%" y="757" width="3.1350%" height="15" fill="rgb(248,145,5)"/><text x="49.0442%" y="767.50">sql..</text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (10 samples, 0.80%)</title><rect x="51.1254%" y="741" width="0.8039%" height="15" fill="rgb(226,116,26)"/><text x="51.3754%" y="751.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (6 samples, 0.48%)</title><rect x="51.4469%" y="725" width="0.4823%" height="15" fill="rgb(244,5,17)"/><text x="51.6969%" y="735.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (5 samples, 0.40%)</title><rect x="51.5273%" y="709" width="0.4019%" height="15" fill="rgb(252,159,33)"/><text x="51.7773%" y="719.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (5 samples, 0.40%)</title><rect x="51.5273%" y="693" width="0.4019%" height="15" fill="rgb(206,71,0)"/><text x="51.7773%" y="703.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_string (2 samples, 0.16%)</title><rect x="51.9293%" y="757" width="0.1608%" height="15" fill="rgb(233,118,54)"/><text x="52.1793%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="51.9293%" y="741" width="0.1608%" height="15" fill="rgb(234,83,48)"/><text x="52.1793%" y="751.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.16%)</title><rect x="51.9293%" y="725" width="0.1608%" height="15" fill="rgb(228,3,54)"/><text x="52.1793%" y="735.50"></text></g><g><title>__GI___libc_free (2 samples, 0.16%)</title><rect x="52.2508%" y="741" width="0.1608%" height="15" fill="rgb(226,155,13)"/><text x="52.5008%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="52.4920%" y="741" width="0.1608%" height="15" fill="rgb(241,28,37)"/><text x="52.7420%" y="751.50"></text></g><g><title>[unknown] (585 samples, 47.03%)</title><rect x="5.7878%" y="885" width="47.0257%" height="15" fill="rgb(233,93,10)"/><text x="6.0378%" y="895.50">[unknown]</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (61 samples, 4.90%)</title><rect x="47.9100%" y="869" width="4.9035%" height="15" fill="rgb(225,113,19)"/><text x="48.1600%" y="879.50">std::s..</text></g><g><title>decor::Shim::run_on_tcp (61 samples, 4.90%)</title><rect x="47.9100%" y="853" width="4.9035%" height="15" fill="rgb(241,2,18)"/><text x="48.1600%" y="863.50">decor:..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (61 samples, 4.90%)</title><rect x="47.9100%" y="837" width="4.9035%" height="15" fill="rgb(228,207,21)"/><text x="48.1600%" y="847.50">msql_s..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (61 samples, 4.90%)</title><rect x="47.9100%" y="821" width="4.9035%" height="15" fill="rgb(213,211,35)"/><text x="48.1600%" y="831.50">&lt;decor..</text></g><g><title>sql_parser::parser::parse_statements (59 samples, 4.74%)</title><rect x="48.0707%" y="805" width="4.7428%" height="15" fill="rgb(209,83,10)"/><text x="48.3207%" y="815.50">sql_pa..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (59 samples, 4.74%)</title><rect x="48.0707%" y="789" width="4.7428%" height="15" fill="rgb(209,164,1)"/><text x="48.3207%" y="799.50">sql_pa..</text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (50 samples, 4.02%)</title><rect x="48.7942%" y="773" width="4.0193%" height="15" fill="rgb(213,184,43)"/><text x="49.0442%" y="783.50">sql_..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_word (9 samples, 0.72%)</title><rect x="52.0900%" y="757" width="0.7235%" height="15" fill="rgb(231,61,34)"/><text x="52.3400%" y="767.50"></text></g><g><title>sql_parser::tokenizer::PeekableChars::next (2 samples, 0.16%)</title><rect x="52.6527%" y="741" width="0.1608%" height="15" fill="rgb(235,75,3)"/><text x="52.9027%" y="751.50"></text></g><g><title>dequeue_task_fair (2 samples, 0.16%)</title><rect x="53.8585%" y="373" width="0.1608%" height="15" fill="rgb(220,106,47)"/><text x="54.1085%" y="383.50"></text></g><g><title>dequeue_entity (2 samples, 0.16%)</title><rect x="53.8585%" y="357" width="0.1608%" height="15" fill="rgb(210,196,33)"/><text x="54.1085%" y="367.50"></text></g><g><title>psi_task_change (3 samples, 0.24%)</title><rect x="54.0997%" y="373" width="0.2412%" height="15" fill="rgb(229,154,42)"/><text x="54.3497%" y="383.50"></text></g><g><title>psi_group_change (2 samples, 0.16%)</title><rect x="54.1801%" y="357" width="0.1608%" height="15" fill="rgb(228,114,26)"/><text x="54.4301%" y="367.50"></text></g><g><title>sk_wait_data (13 samples, 1.05%)</title><rect x="53.3762%" y="453" width="1.0450%" height="15" fill="rgb(208,144,1)"/><text x="53.6262%" y="463.50"></text></g><g><title>wait_woken (13 samples, 1.05%)</title><rect x="53.3762%" y="437" width="1.0450%" height="15" fill="rgb(239,112,37)"/><text x="53.6262%" y="447.50"></text></g><g><title>schedule_timeout (12 samples, 0.96%)</title><rect x="53.4566%" y="421" width="0.9646%" height="15" fill="rgb(210,96,50)"/><text x="53.7066%" y="431.50"></text></g><g><title>schedule (10 samples, 0.80%)</title><rect x="53.6174%" y="405" width="0.8039%" height="15" fill="rgb(222,178,2)"/><text x="53.8674%" y="415.50"></text></g><g><title>__schedule (10 samples, 0.80%)</title><rect x="53.6174%" y="389" width="0.8039%" height="15" fill="rgb(226,74,18)"/><text x="53.8674%" y="399.50"></text></g><g><title>do_syscall_64 (17 samples, 1.37%)</title><rect x="53.1350%" y="533" width="1.3666%" height="15" fill="rgb(225,67,54)"/><text x="53.3850%" y="543.50"></text></g><g><title>__x64_sys_recvfrom (17 samples, 1.37%)</title><rect x="53.1350%" y="517" width="1.3666%" height="15" fill="rgb(251,92,32)"/><text x="53.3850%" y="527.50"></text></g><g><title>__sys_recvfrom (17 samples, 1.37%)</title><rect x="53.1350%" y="501" width="1.3666%" height="15" fill="rgb(228,149,22)"/><text x="53.3850%" y="511.50"></text></g><g><title>inet_recvmsg (16 samples, 1.29%)</title><rect x="53.2154%" y="485" width="1.2862%" height="15" fill="rgb(243,54,13)"/><text x="53.4654%" y="495.50"></text></g><g><title>tcp_recvmsg (16 samples, 1.29%)</title><rect x="53.2154%" y="469" width="1.2862%" height="15" fill="rgb(243,180,28)"/><text x="53.4654%" y="479.50"></text></g><g><title>entry_SYSCALL_64 (21 samples, 1.69%)</title><rect x="53.1350%" y="549" width="1.6881%" height="15" fill="rgb(208,167,24)"/><text x="53.3850%" y="559.50"></text></g><g><title>prepare_exit_to_usermode (4 samples, 0.32%)</title><rect x="54.5016%" y="533" width="0.3215%" height="15" fill="rgb(245,73,45)"/><text x="54.7516%" y="543.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (22 samples, 1.77%)</title><rect x="53.1350%" y="645" width="1.7685%" height="15" fill="rgb(237,203,48)"/><text x="53.3850%" y="655.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (22 samples, 1.77%)</title><rect x="53.1350%" y="629" width="1.7685%" height="15" fill="rgb(211,197,16)"/><text x="53.3850%" y="639.50"></text></g><g><title>std::sys_common::net::TcpStream::read (22 samples, 1.77%)</title><rect x="53.1350%" y="613" width="1.7685%" height="15" fill="rgb(243,99,51)"/><text x="53.3850%" y="623.50"></text></g><g><title>std::sys::unix::net::Socket::read (22 samples, 1.77%)</title><rect x="53.1350%" y="597" width="1.7685%" height="15" fill="rgb(215,123,29)"/><text x="53.3850%" y="607.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (22 samples, 1.77%)</title><rect x="53.1350%" y="581" width="1.7685%" height="15" fill="rgb(239,186,37)"/><text x="53.3850%" y="591.50"></text></g><g><title>__libc_recv (22 samples, 1.77%)</title><rect x="53.1350%" y="565" width="1.7685%" height="15" fill="rgb(252,136,39)"/><text x="53.3850%" y="575.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (24 samples, 1.93%)</title><rect x="53.1350%" y="693" width="1.9293%" height="15" fill="rgb(223,213,32)"/><text x="53.3850%" y="703.50">m..</text></g><g><title>mysql::conn::Conn::read_packet (24 samples, 1.93%)</title><rect x="53.1350%" y="677" width="1.9293%" height="15" fill="rgb(233,115,5)"/><text x="53.3850%" y="687.50">m..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 1.93%)</title><rect x="53.1350%" y="661" width="1.9293%" height="15" fill="rgb(207,226,44)"/><text x="53.3850%" y="671.50">&lt;..</text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (2 samples, 0.16%)</title><rect x="54.9035%" y="645" width="0.1608%" height="15" fill="rgb(208,126,0)"/><text x="55.1535%" y="655.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (2 samples, 0.16%)</title><rect x="54.9035%" y="629" width="0.1608%" height="15" fill="rgb(244,66,21)"/><text x="55.1535%" y="639.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.16%)</title><rect x="56.1093%" y="389" width="0.1608%" height="15" fill="rgb(222,97,12)"/><text x="56.3593%" y="399.50"></text></g><g><title>loopback_xmit (2 samples, 0.16%)</title><rect x="56.1093%" y="373" width="0.1608%" height="15" fill="rgb(219,213,19)"/><text x="56.3593%" y="383.50"></text></g><g><title>__dev_queue_xmit (5 samples, 0.40%)</title><rect x="56.0289%" y="405" width="0.4019%" height="15" fill="rgb(252,169,30)"/><text x="56.2789%" y="415.50"></text></g><g><title>_raw_spin_lock (2 samples, 0.16%)</title><rect x="56.9936%" y="101" width="0.1608%" height="15" fill="rgb(206,32,51)"/><text x="57.2436%" y="111.50"></text></g><g><title>preempt_count_add (2 samples, 0.16%)</title><rect x="56.9936%" y="85" width="0.1608%" height="15" fill="rgb(250,172,42)"/><text x="57.2436%" y="95.50"></text></g><g><title>sock_def_readable (8 samples, 0.64%)</title><rect x="56.8328%" y="181" width="0.6431%" height="15" fill="rgb(209,34,43)"/><text x="57.0828%" y="191.50"></text></g><g><title>__wake_up_common_lock (6 samples, 0.48%)</title><rect x="56.9936%" y="165" width="0.4823%" height="15" fill="rgb(223,11,35)"/><text x="57.2436%" y="175.50"></text></g><g><title>__wake_up_common (6 samples, 0.48%)</title><rect x="56.9936%" y="149" width="0.4823%" height="15" fill="rgb(251,219,26)"/><text x="57.2436%" y="159.50"></text></g><g><title>pollwake (6 samples, 0.48%)</title><rect x="56.9936%" y="133" width="0.4823%" height="15" fill="rgb(231,119,3)"/><text x="57.2436%" y="143.50"></text></g><g><title>try_to_wake_up (6 samples, 0.48%)</title><rect x="56.9936%" y="117" width="0.4823%" height="15" fill="rgb(216,97,11)"/><text x="57.2436%" y="127.50"></text></g><g><title>enqueue_task_fair (2 samples, 0.16%)</title><rect x="57.3151%" y="101" width="0.1608%" height="15" fill="rgb(223,59,9)"/><text x="57.5651%" y="111.50"></text></g><g><title>tcp_ack (3 samples, 0.24%)</title><rect x="57.4759%" y="181" width="0.2412%" height="15" fill="rgb(233,93,31)"/><text x="57.7259%" y="191.50"></text></g><g><title>net_rx_action (16 samples, 1.29%)</title><rect x="56.5113%" y="341" width="1.2862%" height="15" fill="rgb(239,81,33)"/><text x="56.7613%" y="351.50"></text></g><g><title>process_backlog (15 samples, 1.21%)</title><rect x="56.5916%" y="325" width="1.2058%" height="15" fill="rgb(213,120,34)"/><text x="56.8416%" y="335.50"></text></g><g><title>__netif_receive_skb_one_core (15 samples, 1.21%)</title><rect x="56.5916%" y="309" width="1.2058%" height="15" fill="rgb(243,49,53)"/><text x="56.8416%" y="319.50"></text></g><g><title>ip_rcv (14 samples, 1.13%)</title><rect x="56.6720%" y="293" width="1.1254%" height="15" fill="rgb(247,216,33)"/><text x="56.9220%" y="303.50"></text></g><g><title>ip_local_deliver (14 samples, 1.13%)</title><rect x="56.6720%" y="277" width="1.1254%" height="15" fill="rgb(226,26,14)"/><text x="56.9220%" y="287.50"></text></g><g><title>ip_local_deliver_finish (13 samples, 1.05%)</title><rect x="56.7524%" y="261" width="1.0450%" height="15" fill="rgb(215,49,53)"/><text x="57.0024%" y="271.50"></text></g><g><title>ip_protocol_deliver_rcu (13 samples, 1.05%)</title><rect x="56.7524%" y="245" width="1.0450%" height="15" fill="rgb(245,162,40)"/><text x="57.0024%" y="255.50"></text></g><g><title>tcp_v4_rcv (13 samples, 1.05%)</title><rect x="56.7524%" y="229" width="1.0450%" height="15" fill="rgb(229,68,17)"/><text x="57.0024%" y="239.50"></text></g><g><title>tcp_v4_do_rcv (12 samples, 0.96%)</title><rect x="56.8328%" y="213" width="0.9646%" height="15" fill="rgb(213,182,10)"/><text x="57.0828%" y="223.50"></text></g><g><title>tcp_rcv_established (12 samples, 0.96%)</title><rect x="56.8328%" y="197" width="0.9646%" height="15" fill="rgb(245,125,30)"/><text x="57.0828%" y="207.50"></text></g><g><title>__tcp_push_pending_frames (30 samples, 2.41%)</title><rect x="55.4662%" y="501" width="2.4116%" height="15" fill="rgb(232,202,2)"/><text x="55.7162%" y="511.50">__..</text></g><g><title>tcp_write_xmit (30 samples, 2.41%)</title><rect x="55.4662%" y="485" width="2.4116%" height="15" fill="rgb(237,140,51)"/><text x="55.7162%" y="495.50">tc..</text></g><g><title>__tcp_transmit_skb (30 samples, 2.41%)</title><rect x="55.4662%" y="469" width="2.4116%" height="15" fill="rgb(236,157,25)"/><text x="55.7162%" y="479.50">__..</text></g><g><title>__ip_queue_xmit (27 samples, 2.17%)</title><rect x="55.7074%" y="453" width="2.1704%" height="15" fill="rgb(219,209,0)"/><text x="55.9574%" y="463.50">_..</text></g><g><title>ip_output (26 samples, 2.09%)</title><rect x="55.7878%" y="437" width="2.0900%" height="15" fill="rgb(240,116,54)"/><text x="56.0378%" y="447.50">i..</text></g><g><title>ip_finish_output2 (25 samples, 2.01%)</title><rect x="55.8682%" y="421" width="2.0096%" height="15" fill="rgb(216,10,36)"/><text x="56.1182%" y="431.50">i..</text></g><g><title>__local_bh_enable_ip (18 samples, 1.45%)</title><rect x="56.4309%" y="405" width="1.4469%" height="15" fill="rgb(222,72,44)"/><text x="56.6809%" y="415.50"></text></g><g><title>do_softirq (18 samples, 1.45%)</title><rect x="56.4309%" y="389" width="1.4469%" height="15" fill="rgb(232,159,9)"/><text x="56.6809%" y="399.50"></text></g><g><title>do_softirq_own_stack (18 samples, 1.45%)</title><rect x="56.4309%" y="373" width="1.4469%" height="15" fill="rgb(210,39,32)"/><text x="56.6809%" y="383.50"></text></g><g><title>__do_softirq (18 samples, 1.45%)</title><rect x="56.4309%" y="357" width="1.4469%" height="15" fill="rgb(216,194,45)"/><text x="56.6809%" y="367.50"></text></g><g><title>sk_page_frag_refill (2 samples, 0.16%)</title><rect x="57.8778%" y="501" width="0.1608%" height="15" fill="rgb(218,18,35)"/><text x="58.1278%" y="511.50"></text></g><g><title>sk_stream_alloc_skb (3 samples, 0.24%)</title><rect x="58.0386%" y="501" width="0.2412%" height="15" fill="rgb(207,83,51)"/><text x="58.2886%" y="511.50"></text></g><g><title>__alloc_skb (3 samples, 0.24%)</title><rect x="58.0386%" y="485" width="0.2412%" height="15" fill="rgb(225,63,43)"/><text x="58.2886%" y="495.50"></text></g><g><title>kmem_cache_alloc_node (2 samples, 0.16%)</title><rect x="58.1190%" y="469" width="0.1608%" height="15" fill="rgb(207,57,36)"/><text x="58.3690%" y="479.50"></text></g><g><title>entry_SYSCALL_64 (42 samples, 3.38%)</title><rect x="55.1447%" y="613" width="3.3762%" height="15" fill="rgb(216,99,33)"/><text x="55.3947%" y="623.50">ent..</text></g><g><title>do_syscall_64 (42 samples, 3.38%)</title><rect x="55.1447%" y="597" width="3.3762%" height="15" fill="rgb(225,42,16)"/><text x="55.3947%" y="607.50">do_..</text></g><g><title>__x64_sys_sendto (42 samples, 3.38%)</title><rect x="55.1447%" y="581" width="3.3762%" height="15" fill="rgb(220,201,45)"/><text x="55.3947%" y="591.50">__x..</text></g><g><title>__sys_sendto (42 samples, 3.38%)</title><rect x="55.1447%" y="565" width="3.3762%" height="15" fill="rgb(225,33,4)"/><text x="55.3947%" y="575.50">__s..</text></g><g><title>sock_sendmsg (42 samples, 3.38%)</title><rect x="55.1447%" y="549" width="3.3762%" height="15" fill="rgb(224,33,50)"/><text x="55.3947%" y="559.50">soc..</text></g><g><title>tcp_sendmsg (42 samples, 3.38%)</title><rect x="55.1447%" y="533" width="3.3762%" height="15" fill="rgb(246,198,51)"/><text x="55.3947%" y="543.50">tcp..</text></g><g><title>tcp_sendmsg_locked (41 samples, 3.30%)</title><rect x="55.2251%" y="517" width="3.2958%" height="15" fill="rgb(205,22,4)"/><text x="55.4751%" y="527.50">tcp..</text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (69 samples, 5.55%)</title><rect x="53.0547%" y="725" width="5.5466%" height="15" fill="rgb(206,3,8)"/><text x="53.3047%" y="735.50">&lt;mysql:..</text></g><g><title>mysql::conn::Conn::_query (69 samples, 5.55%)</title><rect x="53.0547%" y="709" width="5.5466%" height="15" fill="rgb(251,23,15)"/><text x="53.3047%" y="719.50">mysql::..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (44 samples, 3.54%)</title><rect x="55.0643%" y="693" width="3.5370%" height="15" fill="rgb(252,88,28)"/><text x="55.3143%" y="703.50">mys..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (43 samples, 3.46%)</title><rect x="55.1447%" y="677" width="3.4566%" height="15" fill="rgb(212,127,14)"/><text x="55.3947%" y="687.50">std..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (43 samples, 3.46%)</title><rect x="55.1447%" y="661" width="3.4566%" height="15" fill="rgb(247,145,37)"/><text x="55.3947%" y="671.50">&lt;st..</text></g><g><title>std::sys_common::net::TcpStream::write (43 samples, 3.46%)</title><rect x="55.1447%" y="645" width="3.4566%" height="15" fill="rgb(209,117,53)"/><text x="55.3947%" y="655.50">std..</text></g><g><title>__libc_send (43 samples, 3.46%)</title><rect x="55.1447%" y="629" width="3.4566%" height="15" fill="rgb(212,90,42)"/><text x="55.3947%" y="639.50">__l..</text></g><g><title>_int_free (2 samples, 0.16%)</title><rect x="58.9228%" y="613" width="0.1608%" height="15" fill="rgb(218,164,37)"/><text x="59.1728%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (5 samples, 0.40%)</title><rect x="58.8424%" y="645" width="0.4019%" height="15" fill="rgb(246,65,34)"/><text x="59.0924%" y="655.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (4 samples, 0.32%)</title><rect x="58.9228%" y="629" width="0.3215%" height="15" fill="rgb(231,100,33)"/><text x="59.1728%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="59.0836%" y="613" width="0.1608%" height="15" fill="rgb(228,126,14)"/><text x="59.3336%" y="623.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.16%)</title><rect x="59.0836%" y="597" width="0.1608%" height="15" fill="rgb(215,173,21)"/><text x="59.3336%" y="607.50"></text></g><g><title>_int_realloc (2 samples, 0.16%)</title><rect x="59.0836%" y="581" width="0.1608%" height="15" fill="rgb(210,6,40)"/><text x="59.3336%" y="591.50"></text></g><g><title>_int_malloc (2 samples, 0.16%)</title><rect x="59.0836%" y="565" width="0.1608%" height="15" fill="rgb(212,48,18)"/><text x="59.3336%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (8 samples, 0.64%)</title><rect x="58.8424%" y="661" width="0.6431%" height="15" fill="rgb(230,214,11)"/><text x="59.0924%" y="671.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (3 samples, 0.24%)</title><rect x="59.2444%" y="645" width="0.2412%" height="15" fill="rgb(254,105,39)"/><text x="59.4944%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (12 samples, 0.96%)</title><rect x="58.8424%" y="693" width="0.9646%" height="15" fill="rgb(245,158,5)"/><text x="59.0924%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Values as sql_parser::ast::display::AstDisplay&gt;::fmt (12 samples, 0.96%)</title><rect x="58.8424%" y="677" width="0.9646%" height="15" fill="rgb(249,208,11)"/><text x="59.0924%" y="687.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (4 samples, 0.32%)</title><rect x="59.4855%" y="661" width="0.3215%" height="15" fill="rgb(210,39,28)"/><text x="59.7355%" y="671.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="59.5659%" y="645" width="0.2412%" height="15" fill="rgb(211,56,53)"/><text x="59.8159%" y="655.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="59.9678%" y="629" width="0.1608%" height="15" fill="rgb(226,201,30)"/><text x="60.2178%" y="639.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (2 samples, 0.16%)</title><rect x="59.9678%" y="613" width="0.1608%" height="15" fill="rgb(239,101,34)"/><text x="60.2178%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (2 samples, 0.16%)</title><rect x="60.2090%" y="613" width="0.1608%" height="15" fill="rgb(226,209,5)"/><text x="60.4590%" y="623.50"></text></g><g><title>alloc::string::String::push (4 samples, 0.32%)</title><rect x="60.1286%" y="629" width="0.3215%" height="15" fill="rgb(250,105,47)"/><text x="60.3786%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (15 samples, 1.21%)</title><rect x="59.8071%" y="677" width="1.2058%" height="15" fill="rgb(230,72,3)"/><text x="60.0571%" y="687.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (15 samples, 1.21%)</title><rect x="59.8071%" y="661" width="1.2058%" height="15" fill="rgb(232,218,39)"/><text x="60.0571%" y="671.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (14 samples, 1.13%)</title><rect x="59.8875%" y="645" width="1.1254%" height="15" fill="rgb(248,166,6)"/><text x="60.1375%" y="655.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (6 samples, 0.48%)</title><rect x="60.5305%" y="629" width="0.4823%" height="15" fill="rgb(247,89,20)"/><text x="60.7805%" y="639.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (3 samples, 0.24%)</title><rect x="60.7717%" y="613" width="0.2412%" height="15" fill="rgb(248,130,54)"/><text x="61.0217%" y="623.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (3 samples, 0.24%)</title><rect x="60.7717%" y="597" width="0.2412%" height="15" fill="rgb(234,196,4)"/><text x="61.0217%" y="607.50"></text></g><g><title>core::fmt::write (30 samples, 2.41%)</title><rect x="58.8424%" y="725" width="2.4116%" height="15" fill="rgb(250,143,31)"/><text x="59.0924%" y="735.50">co..</text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (30 samples, 2.41%)</title><rect x="58.8424%" y="709" width="2.4116%" height="15" fill="rgb(211,110,34)"/><text x="59.0924%" y="719.50">&lt;s..</text></g><g><title>&lt;sql_parser::ast::defs::statement::InsertStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (18 samples, 1.45%)</title><rect x="59.8071%" y="693" width="1.4469%" height="15" fill="rgb(215,124,48)"/><text x="60.0571%" y="703.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (3 samples, 0.24%)</title><rect x="61.0129%" y="677" width="0.2412%" height="15" fill="rgb(216,46,13)"/><text x="61.2629%" y="687.50"></text></g><g><title>_int_free (4 samples, 0.32%)</title><rect x="61.3344%" y="709" width="0.3215%" height="15" fill="rgb(205,184,25)"/><text x="61.5844%" y="719.50"></text></g><g><title>core::ptr::drop_in_place (11 samples, 0.88%)</title><rect x="61.2540%" y="725" width="0.8842%" height="15" fill="rgb(228,1,10)"/><text x="61.5040%" y="735.50"></text></g><g><title>core::ptr::drop_in_place (6 samples, 0.48%)</title><rect x="61.6559%" y="709" width="0.4823%" height="15" fill="rgb(213,116,27)"/><text x="61.9059%" y="719.50"></text></g><g><title>core::ptr::drop_in_place (6 samples, 0.48%)</title><rect x="61.6559%" y="693" width="0.4823%" height="15" fill="rgb(241,95,50)"/><text x="61.9059%" y="703.50"></text></g><g><title>_int_free (2 samples, 0.16%)</title><rect x="61.9775%" y="677" width="0.1608%" height="15" fill="rgb(238,48,32)"/><text x="62.2275%" y="687.50"></text></g><g><title>decor::answer_rows (4 samples, 0.32%)</title><rect x="62.1383%" y="725" width="0.3215%" height="15" fill="rgb(235,113,49)"/><text x="62.3883%" y="735.50"></text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::finish (2 samples, 0.16%)</title><rect x="62.2990%" y="709" width="0.1608%" height="15" fill="rgb(205,127,43)"/><text x="62.5490%" y="719.50"></text></g><g><title>__GI___libc_free (2 samples, 0.16%)</title><rect x="62.5402%" y="645" width="0.1608%" height="15" fill="rgb(250,162,2)"/><text x="62.7902%" y="655.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (4 samples, 0.32%)</title><rect x="62.5402%" y="661" width="0.3215%" height="15" fill="rgb(220,13,41)"/><text x="62.7902%" y="671.50"></text></g><g><title>mysql::conn::Conn::read_packet (2 samples, 0.16%)</title><rect x="62.7010%" y="645" width="0.1608%" height="15" fill="rgb(249,221,25)"/><text x="62.9510%" y="655.50"></text></g><g><title>enqueue_task (2 samples, 0.16%)</title><rect x="64.5498%" y="69" width="0.1608%" height="15" fill="rgb(215,208,19)"/><text x="64.7998%" y="79.50"></text></g><g><title>psi_task_change (2 samples, 0.16%)</title><rect x="64.5498%" y="53" width="0.1608%" height="15" fill="rgb(236,175,2)"/><text x="64.7998%" y="63.50"></text></g><g><title>psi_group_change (2 samples, 0.16%)</title><rect x="64.5498%" y="37" width="0.1608%" height="15" fill="rgb(241,52,2)"/><text x="64.7998%" y="47.50"></text></g><g><title>select_task_rq_fair (7 samples, 0.56%)</title><rect x="64.7910%" y="69" width="0.5627%" height="15" fill="rgb(248,140,14)"/><text x="65.0410%" y="79.50"></text></g><g><title>available_idle_cpu (3 samples, 0.24%)</title><rect x="65.1125%" y="53" width="0.2412%" height="15" fill="rgb(253,22,42)"/><text x="65.3625%" y="63.50"></text></g><g><title>sock_def_readable (11 samples, 0.88%)</title><rect x="64.5498%" y="149" width="0.8842%" height="15" fill="rgb(234,61,47)"/><text x="64.7998%" y="159.50"></text></g><g><title>__wake_up_common_lock (11 samples, 0.88%)</title><rect x="64.5498%" y="133" width="0.8842%" height="15" fill="rgb(208,226,15)"/><text x="64.7998%" y="143.50"></text></g><g><title>__wake_up_common (11 samples, 0.88%)</title><rect x="64.5498%" y="117" width="0.8842%" height="15" fill="rgb(217,221,4)"/><text x="64.7998%" y="127.50"></text></g><g><title>pollwake (11 samples, 0.88%)</title><rect x="64.5498%" y="101" width="0.8842%" height="15" fill="rgb(212,174,34)"/><text x="64.7998%" y="111.50"></text></g><g><title>try_to_wake_up (11 samples, 0.88%)</title><rect x="64.5498%" y="85" width="0.8842%" height="15" fill="rgb(253,83,4)"/><text x="64.7998%" y="95.50"></text></g><g><title>tcp_ack (3 samples, 0.24%)</title><rect x="65.4341%" y="149" width="0.2412%" height="15" fill="rgb(250,195,49)"/><text x="65.6841%" y="159.50"></text></g><g><title>tcp_v4_do_rcv (18 samples, 1.45%)</title><rect x="64.3087%" y="181" width="1.4469%" height="15" fill="rgb(241,192,25)"/><text x="64.5587%" y="191.50"></text></g><g><title>tcp_rcv_established (18 samples, 1.45%)</title><rect x="64.3087%" y="165" width="1.4469%" height="15" fill="rgb(208,124,10)"/><text x="64.5587%" y="175.50"></text></g><g><title>ip_local_deliver (22 samples, 1.77%)</title><rect x="64.0675%" y="245" width="1.7685%" height="15" fill="rgb(222,33,0)"/><text x="64.3175%" y="255.50"></text></g><g><title>ip_local_deliver_finish (22 samples, 1.77%)</title><rect x="64.0675%" y="229" width="1.7685%" height="15" fill="rgb(234,209,28)"/><text x="64.3175%" y="239.50"></text></g><g><title>ip_protocol_deliver_rcu (22 samples, 1.77%)</title><rect x="64.0675%" y="213" width="1.7685%" height="15" fill="rgb(224,11,23)"/><text x="64.3175%" y="223.50"></text></g><g><title>tcp_v4_rcv (21 samples, 1.69%)</title><rect x="64.1479%" y="197" width="1.6881%" height="15" fill="rgb(232,99,1)"/><text x="64.3979%" y="207.50"></text></g><g><title>__local_bh_enable_ip (28 samples, 2.25%)</title><rect x="63.6656%" y="373" width="2.2508%" height="15" fill="rgb(237,95,45)"/><text x="63.9156%" y="383.50">_..</text></g><g><title>do_softirq (28 samples, 2.25%)</title><rect x="63.6656%" y="357" width="2.2508%" height="15" fill="rgb(208,109,11)"/><text x="63.9156%" y="367.50">d..</text></g><g><title>do_softirq_own_stack (28 samples, 2.25%)</title><rect x="63.6656%" y="341" width="2.2508%" height="15" fill="rgb(216,190,48)"/><text x="63.9156%" y="351.50">d..</text></g><g><title>__do_softirq (27 samples, 2.17%)</title><rect x="63.7460%" y="325" width="2.1704%" height="15" fill="rgb(251,171,36)"/><text x="63.9960%" y="335.50">_..</text></g><g><title>net_rx_action (26 samples, 2.09%)</title><rect x="63.8264%" y="309" width="2.0900%" height="15" fill="rgb(230,62,22)"/><text x="64.0764%" y="319.50">n..</text></g><g><title>process_backlog (24 samples, 1.93%)</title><rect x="63.9871%" y="293" width="1.9293%" height="15" fill="rgb(225,114,35)"/><text x="64.2371%" y="303.50">p..</text></g><g><title>__netif_receive_skb_one_core (23 samples, 1.85%)</title><rect x="64.0675%" y="277" width="1.8489%" height="15" fill="rgb(215,118,42)"/><text x="64.3175%" y="287.50">_..</text></g><g><title>ip_rcv (23 samples, 1.85%)</title><rect x="64.0675%" y="261" width="1.8489%" height="15" fill="rgb(243,119,21)"/><text x="64.3175%" y="271.50">i..</text></g><g><title>ip_finish_output2 (30 samples, 2.41%)</title><rect x="63.5852%" y="389" width="2.4116%" height="15" fill="rgb(252,177,53)"/><text x="63.8352%" y="399.50">ip..</text></g><g><title>__ip_queue_xmit (32 samples, 2.57%)</title><rect x="63.5048%" y="421" width="2.5723%" height="15" fill="rgb(237,209,29)"/><text x="63.7548%" y="431.50">__..</text></g><g><title>ip_output (31 samples, 2.49%)</title><rect x="63.5852%" y="405" width="2.4920%" height="15" fill="rgb(212,65,23)"/><text x="63.8352%" y="415.50">ip..</text></g><g><title>skb_clone (2 samples, 0.16%)</title><rect x="66.0772%" y="421" width="0.1608%" height="15" fill="rgb(230,222,46)"/><text x="66.3272%" y="431.50"></text></g><g><title>__tcp_transmit_skb (36 samples, 2.89%)</title><rect x="63.5048%" y="437" width="2.8939%" height="15" fill="rgb(215,135,32)"/><text x="63.7548%" y="447.50">__..</text></g><g><title>__tcp_push_pending_frames (38 samples, 3.05%)</title><rect x="63.4244%" y="469" width="3.0547%" height="15" fill="rgb(246,101,22)"/><text x="63.6744%" y="479.50">__t..</text></g><g><title>tcp_write_xmit (37 samples, 2.97%)</title><rect x="63.5048%" y="453" width="2.9743%" height="15" fill="rgb(206,107,13)"/><text x="63.7548%" y="463.50">tcp..</text></g><g><title>sk_stream_alloc_skb (3 samples, 0.24%)</title><rect x="66.4791%" y="469" width="0.2412%" height="15" fill="rgb(250,100,44)"/><text x="66.7291%" y="479.50"></text></g><g><title>__alloc_skb (3 samples, 0.24%)</title><rect x="66.4791%" y="453" width="0.2412%" height="15" fill="rgb(231,147,38)"/><text x="66.7291%" y="463.50"></text></g><g><title>sock_sendmsg (43 samples, 3.46%)</title><rect x="63.4244%" y="517" width="3.4566%" height="15" fill="rgb(229,8,40)"/><text x="63.6744%" y="527.50">soc..</text></g><g><title>tcp_sendmsg (43 samples, 3.46%)</title><rect x="63.4244%" y="501" width="3.4566%" height="15" fill="rgb(221,135,30)"/><text x="63.6744%" y="511.50">tcp..</text></g><g><title>tcp_sendmsg_locked (43 samples, 3.46%)</title><rect x="63.4244%" y="485" width="3.4566%" height="15" fill="rgb(249,193,18)"/><text x="63.6744%" y="495.50">tcp..</text></g><g><title>__x64_sys_sendto (47 samples, 3.78%)</title><rect x="63.2637%" y="549" width="3.7781%" height="15" fill="rgb(209,133,39)"/><text x="63.5137%" y="559.50">__x6..</text></g><g><title>__sys_sendto (46 samples, 3.70%)</title><rect x="63.3441%" y="533" width="3.6977%" height="15" fill="rgb(232,100,14)"/><text x="63.5941%" y="543.50">__sy..</text></g><g><title>sockfd_lookup_light (2 samples, 0.16%)</title><rect x="66.8810%" y="517" width="0.1608%" height="15" fill="rgb(224,185,1)"/><text x="67.1310%" y="527.50"></text></g><g><title>__fget_light (2 samples, 0.16%)</title><rect x="66.8810%" y="501" width="0.1608%" height="15" fill="rgb(223,139,8)"/><text x="67.1310%" y="511.50"></text></g><g><title>__fget_files (2 samples, 0.16%)</title><rect x="66.8810%" y="485" width="0.1608%" height="15" fill="rgb(232,213,38)"/><text x="67.1310%" y="495.50"></text></g><g><title>syscall_slow_exit_work (2 samples, 0.16%)</title><rect x="67.0418%" y="549" width="0.1608%" height="15" fill="rgb(207,94,22)"/><text x="67.2918%" y="559.50"></text></g><g><title>do_syscall_64 (50 samples, 4.02%)</title><rect x="63.2637%" y="565" width="4.0193%" height="15" fill="rgb(219,183,54)"/><text x="63.5137%" y="575.50">do_s..</text></g><g><title>__libc_send (52 samples, 4.18%)</title><rect x="63.1833%" y="597" width="4.1801%" height="15" fill="rgb(216,185,54)"/><text x="63.4333%" y="607.50">__lib..</text></g><g><title>entry_SYSCALL_64 (51 samples, 4.10%)</title><rect x="63.2637%" y="581" width="4.0997%" height="15" fill="rgb(254,217,39)"/><text x="63.5137%" y="591.50">entr..</text></g><g><title>mysql::conn::Conn::start_transaction (62 samples, 4.98%)</title><rect x="62.4598%" y="725" width="4.9839%" height="15" fill="rgb(240,178,23)"/><text x="62.7098%" y="735.50">mysql:..</text></g><g><title>mysql::conn::Conn::_start_transaction (62 samples, 4.98%)</title><rect x="62.4598%" y="709" width="4.9839%" height="15" fill="rgb(218,11,47)"/><text x="62.7098%" y="719.50">mysql:..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (62 samples, 4.98%)</title><rect x="62.4598%" y="693" width="4.9839%" height="15" fill="rgb(218,51,51)"/><text x="62.7098%" y="703.50">mysql:..</text></g><g><title>mysql::conn::Conn::_query (62 samples, 4.98%)</title><rect x="62.4598%" y="677" width="4.9839%" height="15" fill="rgb(238,126,27)"/><text x="62.7098%" y="687.50">mysql:..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (56 samples, 4.50%)</title><rect x="62.9421%" y="661" width="4.5016%" height="15" fill="rgb(249,202,22)"/><text x="63.1921%" y="671.50">mysql..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (54 samples, 4.34%)</title><rect x="63.1029%" y="645" width="4.3408%" height="15" fill="rgb(254,195,49)"/><text x="63.3529%" y="655.50">std::..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (53 samples, 4.26%)</title><rect x="63.1833%" y="629" width="4.2605%" height="15" fill="rgb(208,123,14)"/><text x="63.4333%" y="639.50">&lt;std:..</text></g><g><title>std::sys_common::net::TcpStream::write (53 samples, 4.26%)</title><rect x="63.1833%" y="613" width="4.2605%" height="15" fill="rgb(224,200,8)"/><text x="63.4333%" y="623.50">std::..</text></g><g><title>__perf_event_task_sched_out (2 samples, 0.16%)</title><rect x="67.8457%" y="357" width="0.1608%" height="15" fill="rgb(217,61,36)"/><text x="68.0957%" y="367.50"></text></g><g><title>dequeue_entity (3 samples, 0.24%)</title><rect x="68.0064%" y="341" width="0.2412%" height="15" fill="rgb(206,35,45)"/><text x="68.2564%" y="351.50"></text></g><g><title>dequeue_task_fair (4 samples, 0.32%)</title><rect x="68.0064%" y="357" width="0.3215%" height="15" fill="rgb(217,65,33)"/><text x="68.2564%" y="367.50"></text></g><g><title>finish_task_switch (2 samples, 0.16%)</title><rect x="68.3280%" y="357" width="0.1608%" height="15" fill="rgb(222,158,48)"/><text x="68.5780%" y="367.50"></text></g><g><title>__perf_event_task_sched_in (2 samples, 0.16%)</title><rect x="68.3280%" y="341" width="0.1608%" height="15" fill="rgb(254,2,54)"/><text x="68.5780%" y="351.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (2 samples, 0.16%)</title><rect x="68.3280%" y="325" width="0.1608%" height="15" fill="rgb(250,143,38)"/><text x="68.5780%" y="335.50"></text></g><g><title>native_write_msr (2 samples, 0.16%)</title><rect x="68.3280%" y="309" width="0.1608%" height="15" fill="rgb(248,25,0)"/><text x="68.5780%" y="319.50"></text></g><g><title>psi_task_change (2 samples, 0.16%)</title><rect x="68.5691%" y="357" width="0.1608%" height="15" fill="rgb(206,152,27)"/><text x="68.8191%" y="367.50"></text></g><g><title>psi_group_change (2 samples, 0.16%)</title><rect x="68.5691%" y="341" width="0.1608%" height="15" fill="rgb(240,77,30)"/><text x="68.8191%" y="351.50"></text></g><g><title>sk_wait_data (12 samples, 0.96%)</title><rect x="67.8457%" y="437" width="0.9646%" height="15" fill="rgb(231,5,3)"/><text x="68.0957%" y="447.50"></text></g><g><title>wait_woken (12 samples, 0.96%)</title><rect x="67.8457%" y="421" width="0.9646%" height="15" fill="rgb(207,226,32)"/><text x="68.0957%" y="431.50"></text></g><g><title>schedule_timeout (12 samples, 0.96%)</title><rect x="67.8457%" y="405" width="0.9646%" height="15" fill="rgb(222,207,47)"/><text x="68.0957%" y="415.50"></text></g><g><title>schedule (12 samples, 0.96%)</title><rect x="67.8457%" y="389" width="0.9646%" height="15" fill="rgb(229,115,45)"/><text x="68.0957%" y="399.50"></text></g><g><title>__schedule (12 samples, 0.96%)</title><rect x="67.8457%" y="373" width="0.9646%" height="15" fill="rgb(224,191,6)"/><text x="68.0957%" y="383.50"></text></g><g><title>inet_recvmsg (17 samples, 1.37%)</title><rect x="67.6045%" y="469" width="1.3666%" height="15" fill="rgb(230,227,24)"/><text x="67.8545%" y="479.50"></text></g><g><title>tcp_recvmsg (17 samples, 1.37%)</title><rect x="67.6045%" y="453" width="1.3666%" height="15" fill="rgb(228,80,19)"/><text x="67.8545%" y="463.50"></text></g><g><title>skb_copy_datagram_iter (2 samples, 0.16%)</title><rect x="68.8103%" y="437" width="0.1608%" height="15" fill="rgb(247,229,0)"/><text x="69.0603%" y="447.50"></text></g><g><title>__skb_datagram_iter (2 samples, 0.16%)</title><rect x="68.8103%" y="421" width="0.1608%" height="15" fill="rgb(237,194,15)"/><text x="69.0603%" y="431.50"></text></g><g><title>do_syscall_64 (18 samples, 1.45%)</title><rect x="67.6045%" y="517" width="1.4469%" height="15" fill="rgb(219,203,20)"/><text x="67.8545%" y="527.50"></text></g><g><title>__x64_sys_recvfrom (18 samples, 1.45%)</title><rect x="67.6045%" y="501" width="1.4469%" height="15" fill="rgb(234,128,8)"/><text x="67.8545%" y="511.50"></text></g><g><title>__sys_recvfrom (18 samples, 1.45%)</title><rect x="67.6045%" y="485" width="1.4469%" height="15" fill="rgb(248,202,8)"/><text x="67.8545%" y="495.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (20 samples, 1.61%)</title><rect x="67.5241%" y="629" width="1.6077%" height="15" fill="rgb(206,104,37)"/><text x="67.7741%" y="639.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (20 samples, 1.61%)</title><rect x="67.5241%" y="613" width="1.6077%" height="15" fill="rgb(223,8,27)"/><text x="67.7741%" y="623.50"></text></g><g><title>std::sys_common::net::TcpStream::read (20 samples, 1.61%)</title><rect x="67.5241%" y="597" width="1.6077%" height="15" fill="rgb(216,217,28)"/><text x="67.7741%" y="607.50"></text></g><g><title>std::sys::unix::net::Socket::read (20 samples, 1.61%)</title><rect x="67.5241%" y="581" width="1.6077%" height="15" fill="rgb(249,199,1)"/><text x="67.7741%" y="591.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (20 samples, 1.61%)</title><rect x="67.5241%" y="565" width="1.6077%" height="15" fill="rgb(240,85,17)"/><text x="67.7741%" y="575.50"></text></g><g><title>__libc_recv (20 samples, 1.61%)</title><rect x="67.5241%" y="549" width="1.6077%" height="15" fill="rgb(206,108,45)"/><text x="67.7741%" y="559.50"></text></g><g><title>entry_SYSCALL_64 (20 samples, 1.61%)</title><rect x="67.5241%" y="533" width="1.6077%" height="15" fill="rgb(245,210,41)"/><text x="67.7741%" y="543.50"></text></g><g><title>mysql::conn::Conn::read_packet (21 samples, 1.69%)</title><rect x="67.5241%" y="661" width="1.6881%" height="15" fill="rgb(206,13,37)"/><text x="67.7741%" y="671.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 1.69%)</title><rect x="67.5241%" y="645" width="1.6881%" height="15" fill="rgb(250,61,18)"/><text x="67.7741%" y="655.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (22 samples, 1.77%)</title><rect x="67.5241%" y="677" width="1.7685%" height="15" fill="rgb(235,172,48)"/><text x="67.7741%" y="687.50"></text></g><g><title>__ip_local_out (2 samples, 0.16%)</title><rect x="69.6945%" y="421" width="0.1608%" height="15" fill="rgb(249,201,17)"/><text x="69.9445%" y="431.50"></text></g><g><title>ip_send_check (2 samples, 0.16%)</title><rect x="69.6945%" y="405" width="0.1608%" height="15" fill="rgb(219,208,6)"/><text x="69.9445%" y="415.50"></text></g><g><title>__dev_queue_xmit (3 samples, 0.24%)</title><rect x="69.9357%" y="389" width="0.2412%" height="15" fill="rgb(248,31,23)"/><text x="70.1857%" y="399.50"></text></g><g><title>__inet_lookup_established (2 samples, 0.16%)</title><rect x="70.5788%" y="197" width="0.1608%" height="15" fill="rgb(245,15,42)"/><text x="70.8288%" y="207.50"></text></g><g><title>__tcp_ack_snd_check (2 samples, 0.16%)</title><rect x="70.9003%" y="165" width="0.1608%" height="15" fill="rgb(222,217,39)"/><text x="71.1503%" y="175.50"></text></g><g><title>psi_task_change (3 samples, 0.24%)</title><rect x="71.2219%" y="69" width="0.2412%" height="15" fill="rgb(210,219,27)"/><text x="71.4719%" y="79.50"></text></g><g><title>enqueue_task (4 samples, 0.32%)</title><rect x="71.2219%" y="85" width="0.3215%" height="15" fill="rgb(252,166,36)"/><text x="71.4719%" y="95.50"></text></g><g><title>enqueue_task_fair (3 samples, 0.24%)</title><rect x="71.5434%" y="85" width="0.2412%" height="15" fill="rgb(245,132,34)"/><text x="71.7934%" y="95.50"></text></g><g><title>enqueue_entity (3 samples, 0.24%)</title><rect x="71.5434%" y="69" width="0.2412%" height="15" fill="rgb(236,54,3)"/><text x="71.7934%" y="79.50"></text></g><g><title>__wake_up_common (10 samples, 0.80%)</title><rect x="71.1415%" y="133" width="0.8039%" height="15" fill="rgb(241,173,43)"/><text x="71.3915%" y="143.50"></text></g><g><title>pollwake (10 samples, 0.80%)</title><rect x="71.1415%" y="117" width="0.8039%" height="15" fill="rgb(215,190,9)"/><text x="71.3915%" y="127.50"></text></g><g><title>try_to_wake_up (10 samples, 0.80%)</title><rect x="71.1415%" y="101" width="0.8039%" height="15" fill="rgb(242,101,16)"/><text x="71.3915%" y="111.50"></text></g><g><title>select_task_rq_fair (2 samples, 0.16%)</title><rect x="71.7846%" y="85" width="0.1608%" height="15" fill="rgb(223,190,21)"/><text x="72.0346%" y="95.50"></text></g><g><title>sock_def_readable (11 samples, 0.88%)</title><rect x="71.1415%" y="165" width="0.8842%" height="15" fill="rgb(215,228,25)"/><text x="71.3915%" y="175.50"></text></g><g><title>__wake_up_common_lock (11 samples, 0.88%)</title><rect x="71.1415%" y="149" width="0.8842%" height="15" fill="rgb(225,36,22)"/><text x="71.3915%" y="159.50"></text></g><g><title>__tcp_transmit_skb (34 samples, 2.73%)</title><rect x="69.6141%" y="453" width="2.7331%" height="15" fill="rgb(251,106,46)"/><text x="69.8641%" y="463.50">__..</text></g><g><title>__ip_queue_xmit (33 samples, 2.65%)</title><rect x="69.6945%" y="437" width="2.6527%" height="15" fill="rgb(208,90,1)"/><text x="69.9445%" y="447.50">__..</text></g><g><title>ip_output (30 samples, 2.41%)</title><rect x="69.9357%" y="421" width="2.4116%" height="15" fill="rgb(243,10,4)"/><text x="70.1857%" y="431.50">ip..</text></g><g><title>ip_finish_output2 (30 samples, 2.41%)</title><rect x="69.9357%" y="405" width="2.4116%" height="15" fill="rgb(212,137,27)"/><text x="70.1857%" y="415.50">ip..</text></g><g><title>__local_bh_enable_ip (27 samples, 2.17%)</title><rect x="70.1768%" y="389" width="2.1704%" height="15" fill="rgb(231,220,49)"/><text x="70.4268%" y="399.50">_..</text></g><g><title>do_softirq (27 samples, 2.17%)</title><rect x="70.1768%" y="373" width="2.1704%" height="15" fill="rgb(237,96,20)"/><text x="70.4268%" y="383.50">d..</text></g><g><title>do_softirq_own_stack (27 samples, 2.17%)</title><rect x="70.1768%" y="357" width="2.1704%" height="15" fill="rgb(239,229,30)"/><text x="70.4268%" y="367.50">d..</text></g><g><title>__do_softirq (26 samples, 2.09%)</title><rect x="70.2572%" y="341" width="2.0900%" height="15" fill="rgb(219,65,33)"/><text x="70.5072%" y="351.50">_..</text></g><g><title>net_rx_action (25 samples, 2.01%)</title><rect x="70.3376%" y="325" width="2.0096%" height="15" fill="rgb(243,134,7)"/><text x="70.5876%" y="335.50">n..</text></g><g><title>process_backlog (24 samples, 1.93%)</title><rect x="70.4180%" y="309" width="1.9293%" height="15" fill="rgb(216,177,54)"/><text x="70.6680%" y="319.50">p..</text></g><g><title>__netif_receive_skb_one_core (24 samples, 1.93%)</title><rect x="70.4180%" y="293" width="1.9293%" height="15" fill="rgb(211,160,20)"/><text x="70.6680%" y="303.50">_..</text></g><g><title>ip_rcv (24 samples, 1.93%)</title><rect x="70.4180%" y="277" width="1.9293%" height="15" fill="rgb(239,85,39)"/><text x="70.6680%" y="287.50">i..</text></g><g><title>ip_local_deliver (24 samples, 1.93%)</title><rect x="70.4180%" y="261" width="1.9293%" height="15" fill="rgb(232,125,22)"/><text x="70.6680%" y="271.50">i..</text></g><g><title>ip_local_deliver_finish (23 samples, 1.85%)</title><rect x="70.4984%" y="245" width="1.8489%" height="15" fill="rgb(244,57,34)"/><text x="70.7484%" y="255.50">i..</text></g><g><title>ip_protocol_deliver_rcu (22 samples, 1.77%)</title><rect x="70.5788%" y="229" width="1.7685%" height="15" fill="rgb(214,203,32)"/><text x="70.8288%" y="239.50"></text></g><g><title>tcp_v4_rcv (22 samples, 1.77%)</title><rect x="70.5788%" y="213" width="1.7685%" height="15" fill="rgb(207,58,43)"/><text x="70.8288%" y="223.50"></text></g><g><title>tcp_v4_do_rcv (20 samples, 1.61%)</title><rect x="70.7395%" y="197" width="1.6077%" height="15" fill="rgb(215,193,15)"/><text x="70.9895%" y="207.50"></text></g><g><title>tcp_rcv_established (20 samples, 1.61%)</title><rect x="70.7395%" y="181" width="1.6077%" height="15" fill="rgb(232,15,44)"/><text x="70.9895%" y="191.50"></text></g><g><title>tcp_ack (4 samples, 0.32%)</title><rect x="72.0257%" y="165" width="0.3215%" height="15" fill="rgb(212,3,48)"/><text x="72.2757%" y="175.50"></text></g><g><title>__kfree_skb (4 samples, 0.32%)</title><rect x="72.0257%" y="149" width="0.3215%" height="15" fill="rgb(218,128,7)"/><text x="72.2757%" y="159.50"></text></g><g><title>skb_release_data (2 samples, 0.16%)</title><rect x="72.1865%" y="133" width="0.1608%" height="15" fill="rgb(226,216,39)"/><text x="72.4365%" y="143.50"></text></g><g><title>sock_sendmsg (37 samples, 2.97%)</title><rect x="69.4534%" y="533" width="2.9743%" height="15" fill="rgb(243,47,51)"/><text x="69.7034%" y="543.50">soc..</text></g><g><title>tcp_sendmsg (37 samples, 2.97%)</title><rect x="69.4534%" y="517" width="2.9743%" height="15" fill="rgb(241,183,40)"/><text x="69.7034%" y="527.50">tcp..</text></g><g><title>tcp_sendmsg_locked (37 samples, 2.97%)</title><rect x="69.4534%" y="501" width="2.9743%" height="15" fill="rgb(231,217,32)"/><text x="69.7034%" y="511.50">tcp..</text></g><g><title>__tcp_push_pending_frames (35 samples, 2.81%)</title><rect x="69.6141%" y="485" width="2.8135%" height="15" fill="rgb(229,61,38)"/><text x="69.8641%" y="495.50">__..</text></g><g><title>tcp_write_xmit (35 samples, 2.81%)</title><rect x="69.6141%" y="469" width="2.8135%" height="15" fill="rgb(225,210,5)"/><text x="69.8641%" y="479.50">tc..</text></g><g><title>__x64_sys_sendto (39 samples, 3.14%)</title><rect x="69.3730%" y="565" width="3.1350%" height="15" fill="rgb(231,79,45)"/><text x="69.6230%" y="575.50">__x..</text></g><g><title>__sys_sendto (39 samples, 3.14%)</title><rect x="69.3730%" y="549" width="3.1350%" height="15" fill="rgb(224,100,7)"/><text x="69.6230%" y="559.50">__s..</text></g><g><title>do_syscall_64 (40 samples, 3.22%)</title><rect x="69.3730%" y="581" width="3.2154%" height="15" fill="rgb(241,198,18)"/><text x="69.6230%" y="591.50">do_..</text></g><g><title>mysql::conn::transaction::Transaction::commit (65 samples, 5.23%)</title><rect x="67.4437%" y="725" width="5.2251%" height="15" fill="rgb(252,97,53)"/><text x="67.6937%" y="735.50">mysql:..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (65 samples, 5.23%)</title><rect x="67.4437%" y="709" width="5.2251%" height="15" fill="rgb(220,88,7)"/><text x="67.6937%" y="719.50">mysql:..</text></g><g><title>mysql::conn::Conn::_query (64 samples, 5.14%)</title><rect x="67.5241%" y="693" width="5.1447%" height="15" fill="rgb(213,176,14)"/><text x="67.7741%" y="703.50">mysql:..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (42 samples, 3.38%)</title><rect x="69.2926%" y="677" width="3.3762%" height="15" fill="rgb(246,73,7)"/><text x="69.5426%" y="687.50">mys..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (41 samples, 3.30%)</title><rect x="69.3730%" y="661" width="3.2958%" height="15" fill="rgb(245,64,36)"/><text x="69.6230%" y="671.50">std..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (41 samples, 3.30%)</title><rect x="69.3730%" y="645" width="3.2958%" height="15" fill="rgb(245,80,10)"/><text x="69.6230%" y="655.50">&lt;st..</text></g><g><title>std::sys_common::net::TcpStream::write (41 samples, 3.30%)</title><rect x="69.3730%" y="629" width="3.2958%" height="15" fill="rgb(232,107,50)"/><text x="69.6230%" y="639.50">std..</text></g><g><title>__libc_send (41 samples, 3.30%)</title><rect x="69.3730%" y="613" width="3.2958%" height="15" fill="rgb(253,3,0)"/><text x="69.6230%" y="623.50">__l..</text></g><g><title>entry_SYSCALL_64 (41 samples, 3.30%)</title><rect x="69.3730%" y="597" width="3.2958%" height="15" fill="rgb(212,99,53)"/><text x="69.6230%" y="607.50">ent..</text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="72.8296%" y="709" width="0.1608%" height="15" fill="rgb(249,111,54)"/><text x="73.0796%" y="719.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (253 samples, 20.34%)</title><rect x="52.9743%" y="741" width="20.3376%" height="15" fill="rgb(249,55,30)"/><text x="53.2243%" y="751.50">&lt;decor::Shim as msql_srv::MysqlS..</text></g><g><title>sql_parser::parser::parse_statements (8 samples, 0.64%)</title><rect x="72.6688%" y="725" width="0.6431%" height="15" fill="rgb(237,47,42)"/><text x="72.9188%" y="735.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.24%)</title><rect x="73.0707%" y="709" width="0.2412%" height="15" fill="rgb(211,20,18)"/><text x="73.3207%" y="719.50"></text></g><g><title>__kfree_skb (2 samples, 0.16%)</title><rect x="73.5531%" y="533" width="0.1608%" height="15" fill="rgb(231,203,46)"/><text x="73.8031%" y="543.50"></text></g><g><title>skb_release_head_state (2 samples, 0.16%)</title><rect x="73.5531%" y="517" width="0.1608%" height="15" fill="rgb(237,142,3)"/><text x="73.8031%" y="527.50"></text></g><g><title>__tcp_transmit_skb (2 samples, 0.16%)</title><rect x="73.7942%" y="533" width="0.1608%" height="15" fill="rgb(241,107,1)"/><text x="74.0442%" y="543.50"></text></g><g><title>__ip_queue_xmit (2 samples, 0.16%)</title><rect x="73.7942%" y="517" width="0.1608%" height="15" fill="rgb(229,83,13)"/><text x="74.0442%" y="527.50"></text></g><g><title>ip_output (2 samples, 0.16%)</title><rect x="73.7942%" y="501" width="0.1608%" height="15" fill="rgb(241,91,40)"/><text x="74.0442%" y="511.50"></text></g><g><title>ip_finish_output2 (2 samples, 0.16%)</title><rect x="73.7942%" y="485" width="0.1608%" height="15" fill="rgb(225,3,45)"/><text x="74.0442%" y="495.50"></text></g><g><title>update_curr (2 samples, 0.16%)</title><rect x="74.5177%" y="421" width="0.1608%" height="15" fill="rgb(244,223,14)"/><text x="74.7677%" y="431.50"></text></g><g><title>dequeue_task_fair (3 samples, 0.24%)</title><rect x="74.5177%" y="453" width="0.2412%" height="15" fill="rgb(224,124,37)"/><text x="74.7677%" y="463.50"></text></g><g><title>dequeue_entity (3 samples, 0.24%)</title><rect x="74.5177%" y="437" width="0.2412%" height="15" fill="rgb(251,171,30)"/><text x="74.7677%" y="447.50"></text></g><g><title>__schedule (7 samples, 0.56%)</title><rect x="74.3569%" y="469" width="0.5627%" height="15" fill="rgb(236,46,54)"/><text x="74.6069%" y="479.50"></text></g><g><title>sk_wait_data (12 samples, 0.96%)</title><rect x="74.0354%" y="533" width="0.9646%" height="15" fill="rgb(245,213,5)"/><text x="74.2854%" y="543.50"></text></g><g><title>wait_woken (9 samples, 0.72%)</title><rect x="74.2765%" y="517" width="0.7235%" height="15" fill="rgb(230,144,27)"/><text x="74.5265%" y="527.50"></text></g><g><title>schedule_timeout (8 samples, 0.64%)</title><rect x="74.3569%" y="501" width="0.6431%" height="15" fill="rgb(220,86,6)"/><text x="74.6069%" y="511.50"></text></g><g><title>schedule (8 samples, 0.64%)</title><rect x="74.3569%" y="485" width="0.6431%" height="15" fill="rgb(240,20,13)"/><text x="74.6069%" y="495.50"></text></g><g><title>skb_copy_datagram_iter (3 samples, 0.24%)</title><rect x="75.0000%" y="533" width="0.2412%" height="15" fill="rgb(217,89,34)"/><text x="75.2500%" y="543.50"></text></g><g><title>__skb_datagram_iter (3 samples, 0.24%)</title><rect x="75.0000%" y="517" width="0.2412%" height="15" fill="rgb(229,13,5)"/><text x="75.2500%" y="527.50"></text></g><g><title>_copy_to_iter (2 samples, 0.16%)</title><rect x="75.0804%" y="501" width="0.1608%" height="15" fill="rgb(244,67,35)"/><text x="75.3304%" y="511.50"></text></g><g><title>copy_user_enhanced_fast_string (2 samples, 0.16%)</title><rect x="75.0804%" y="485" width="0.1608%" height="15" fill="rgb(221,40,2)"/><text x="75.3304%" y="495.50"></text></g><g><title>inet_recvmsg (23 samples, 1.85%)</title><rect x="73.5531%" y="565" width="1.8489%" height="15" fill="rgb(237,157,21)"/><text x="73.8031%" y="575.50">i..</text></g><g><title>tcp_recvmsg (23 samples, 1.85%)</title><rect x="73.5531%" y="549" width="1.8489%" height="15" fill="rgb(222,94,11)"/><text x="73.8031%" y="559.50">t..</text></g><g><title>__x64_sys_recvfrom (24 samples, 1.93%)</title><rect x="73.5531%" y="597" width="1.9293%" height="15" fill="rgb(249,113,6)"/><text x="73.8031%" y="607.50">_..</text></g><g><title>__sys_recvfrom (24 samples, 1.93%)</title><rect x="73.5531%" y="581" width="1.9293%" height="15" fill="rgb(238,137,36)"/><text x="73.8031%" y="591.50">_..</text></g><g><title>do_syscall_64 (25 samples, 2.01%)</title><rect x="73.5531%" y="613" width="2.0096%" height="15" fill="rgb(210,102,26)"/><text x="73.8031%" y="623.50">d..</text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (28 samples, 2.25%)</title><rect x="73.3923%" y="725" width="2.2508%" height="15" fill="rgb(218,30,30)"/><text x="73.6423%" y="735.50">&lt;..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (27 samples, 2.17%)</title><rect x="73.4727%" y="709" width="2.1704%" height="15" fill="rgb(214,67,26)"/><text x="73.7227%" y="719.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::read (27 samples, 2.17%)</title><rect x="73.4727%" y="693" width="2.1704%" height="15" fill="rgb(251,9,53)"/><text x="73.7227%" y="703.50">s..</text></g><g><title>std::sys::unix::net::Socket::read (27 samples, 2.17%)</title><rect x="73.4727%" y="677" width="2.1704%" height="15" fill="rgb(228,204,25)"/><text x="73.7227%" y="687.50">s..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (27 samples, 2.17%)</title><rect x="73.4727%" y="661" width="2.1704%" height="15" fill="rgb(207,153,8)"/><text x="73.7227%" y="671.50">s..</text></g><g><title>__libc_recv (27 samples, 2.17%)</title><rect x="73.4727%" y="645" width="2.1704%" height="15" fill="rgb(242,9,16)"/><text x="73.7227%" y="655.50">_..</text></g><g><title>entry_SYSCALL_64 (27 samples, 2.17%)</title><rect x="73.4727%" y="629" width="2.1704%" height="15" fill="rgb(217,211,10)"/><text x="73.7227%" y="639.50">e..</text></g><g><title>__memset_avx2_erms (2 samples, 0.16%)</title><rect x="75.6431%" y="725" width="0.1608%" height="15" fill="rgb(219,228,52)"/><text x="75.8931%" y="735.50"></text></g><g><title>msql_srv::packet::PacketReader&lt;R&gt;::next (33 samples, 2.65%)</title><rect x="73.3119%" y="741" width="2.6527%" height="15" fill="rgb(231,92,29)"/><text x="73.5619%" y="751.50">ms..</text></g><g><title>msql_srv::packet::packet (2 samples, 0.16%)</title><rect x="75.8039%" y="725" width="0.1608%" height="15" fill="rgb(232,8,23)"/><text x="76.0539%" y="735.50"></text></g><g><title>validate_xmit_skb (3 samples, 0.24%)</title><rect x="76.8489%" y="453" width="0.2412%" height="15" fill="rgb(216,211,34)"/><text x="77.0989%" y="463.50"></text></g><g><title>netif_skb_features (2 samples, 0.16%)</title><rect x="76.9293%" y="437" width="0.1608%" height="15" fill="rgb(236,151,0)"/><text x="77.1793%" y="447.50"></text></g><g><title>__dev_queue_xmit (5 samples, 0.40%)</title><rect x="76.7685%" y="469" width="0.4019%" height="15" fill="rgb(209,168,3)"/><text x="77.0185%" y="479.50"></text></g><g><title>psi_task_change (3 samples, 0.24%)</title><rect x="77.4116%" y="165" width="0.2412%" height="15" fill="rgb(208,129,28)"/><text x="77.6616%" y="175.50"></text></g><g><title>psi_group_change (3 samples, 0.24%)</title><rect x="77.4116%" y="149" width="0.2412%" height="15" fill="rgb(229,78,22)"/><text x="77.6616%" y="159.50"></text></g><g><title>enqueue_task (4 samples, 0.32%)</title><rect x="77.4116%" y="181" width="0.3215%" height="15" fill="rgb(228,187,13)"/><text x="77.6616%" y="191.50"></text></g><g><title>enqueue_task_fair (4 samples, 0.32%)</title><rect x="77.7331%" y="181" width="0.3215%" height="15" fill="rgb(240,119,24)"/><text x="77.9831%" y="191.50"></text></g><g><title>enqueue_entity (4 samples, 0.32%)</title><rect x="77.7331%" y="165" width="0.3215%" height="15" fill="rgb(209,194,42)"/><text x="77.9831%" y="175.50"></text></g><g><title>update_load_avg (3 samples, 0.24%)</title><rect x="77.8135%" y="149" width="0.2412%" height="15" fill="rgb(247,200,46)"/><text x="78.0635%" y="159.50"></text></g><g><title>sock_def_readable (11 samples, 0.88%)</title><rect x="77.3312%" y="245" width="0.8842%" height="15" fill="rgb(218,76,16)"/><text x="77.5812%" y="255.50"></text></g><g><title>__wake_up_common_lock (11 samples, 0.88%)</title><rect x="77.3312%" y="229" width="0.8842%" height="15" fill="rgb(225,21,48)"/><text x="77.5812%" y="239.50"></text></g><g><title>__wake_up_common (11 samples, 0.88%)</title><rect x="77.3312%" y="213" width="0.8842%" height="15" fill="rgb(239,223,50)"/><text x="77.5812%" y="223.50"></text></g><g><title>try_to_wake_up (11 samples, 0.88%)</title><rect x="77.3312%" y="197" width="0.8842%" height="15" fill="rgb(244,45,21)"/><text x="77.5812%" y="207.50"></text></g><g><title>find_first_bit (2 samples, 0.16%)</title><rect x="78.0547%" y="181" width="0.1608%" height="15" fill="rgb(232,33,43)"/><text x="78.3047%" y="191.50"></text></g><g><title>kmem_cache_free (2 samples, 0.16%)</title><rect x="78.4566%" y="229" width="0.1608%" height="15" fill="rgb(209,8,3)"/><text x="78.7066%" y="239.50"></text></g><g><title>tcp_ack (6 samples, 0.48%)</title><rect x="78.2154%" y="245" width="0.4823%" height="15" fill="rgb(214,25,53)"/><text x="78.4654%" y="255.50"></text></g><g><title>ip_local_deliver (19 samples, 1.53%)</title><rect x="77.3312%" y="341" width="1.5273%" height="15" fill="rgb(254,186,54)"/><text x="77.5812%" y="351.50"></text></g><g><title>ip_local_deliver_finish (19 samples, 1.53%)</title><rect x="77.3312%" y="325" width="1.5273%" height="15" fill="rgb(208,174,49)"/><text x="77.5812%" y="335.50"></text></g><g><title>ip_protocol_deliver_rcu (19 samples, 1.53%)</title><rect x="77.3312%" y="309" width="1.5273%" height="15" fill="rgb(233,191,51)"/><text x="77.5812%" y="319.50"></text></g><g><title>tcp_v4_rcv (19 samples, 1.53%)</title><rect x="77.3312%" y="293" width="1.5273%" height="15" fill="rgb(222,134,10)"/><text x="77.5812%" y="303.50"></text></g><g><title>tcp_v4_do_rcv (19 samples, 1.53%)</title><rect x="77.3312%" y="277" width="1.5273%" height="15" fill="rgb(230,226,20)"/><text x="77.5812%" y="287.50"></text></g><g><title>tcp_rcv_established (19 samples, 1.53%)</title><rect x="77.3312%" y="261" width="1.5273%" height="15" fill="rgb(251,111,25)"/><text x="77.5812%" y="271.50"></text></g><g><title>ip_finish_output2 (28 samples, 2.25%)</title><rect x="76.6881%" y="485" width="2.2508%" height="15" fill="rgb(224,40,46)"/><text x="76.9381%" y="495.50">i..</text></g><g><title>__local_bh_enable_ip (22 samples, 1.77%)</title><rect x="77.1704%" y="469" width="1.7685%" height="15" fill="rgb(236,108,47)"/><text x="77.4204%" y="479.50"></text></g><g><title>do_softirq (22 samples, 1.77%)</title><rect x="77.1704%" y="453" width="1.7685%" height="15" fill="rgb(234,93,0)"/><text x="77.4204%" y="463.50"></text></g><g><title>do_softirq_own_stack (21 samples, 1.69%)</title><rect x="77.2508%" y="437" width="1.6881%" height="15" fill="rgb(224,213,32)"/><text x="77.5008%" y="447.50"></text></g><g><title>__do_softirq (21 samples, 1.69%)</title><rect x="77.2508%" y="421" width="1.6881%" height="15" fill="rgb(251,11,48)"/><text x="77.5008%" y="431.50"></text></g><g><title>net_rx_action (21 samples, 1.69%)</title><rect x="77.2508%" y="405" width="1.6881%" height="15" fill="rgb(236,173,5)"/><text x="77.5008%" y="415.50"></text></g><g><title>process_backlog (21 samples, 1.69%)</title><rect x="77.2508%" y="389" width="1.6881%" height="15" fill="rgb(230,95,12)"/><text x="77.5008%" y="399.50"></text></g><g><title>__netif_receive_skb_one_core (20 samples, 1.61%)</title><rect x="77.3312%" y="373" width="1.6077%" height="15" fill="rgb(232,209,1)"/><text x="77.5812%" y="383.50"></text></g><g><title>ip_rcv (20 samples, 1.61%)</title><rect x="77.3312%" y="357" width="1.6077%" height="15" fill="rgb(232,6,1)"/><text x="77.5812%" y="367.50"></text></g><g><title>__ip_queue_xmit (29 samples, 2.33%)</title><rect x="76.6881%" y="517" width="2.3312%" height="15" fill="rgb(210,224,50)"/><text x="76.9381%" y="527.50">_..</text></g><g><title>ip_output (29 samples, 2.33%)</title><rect x="76.6881%" y="501" width="2.3312%" height="15" fill="rgb(228,127,35)"/><text x="76.9381%" y="511.50">i..</text></g><g><title>__tcp_push_pending_frames (33 samples, 2.65%)</title><rect x="76.4469%" y="565" width="2.6527%" height="15" fill="rgb(245,102,45)"/><text x="76.6969%" y="575.50">__..</text></g><g><title>tcp_write_xmit (33 samples, 2.65%)</title><rect x="76.4469%" y="549" width="2.6527%" height="15" fill="rgb(214,1,49)"/><text x="76.6969%" y="559.50">tc..</text></g><g><title>__tcp_transmit_skb (32 samples, 2.57%)</title><rect x="76.5273%" y="533" width="2.5723%" height="15" fill="rgb(226,163,40)"/><text x="76.7773%" y="543.50">__..</text></g><g><title>__x64_sys_sendto (37 samples, 2.97%)</title><rect x="76.2862%" y="645" width="2.9743%" height="15" fill="rgb(239,212,28)"/><text x="76.5362%" y="655.50">__x..</text></g><g><title>__sys_sendto (37 samples, 2.97%)</title><rect x="76.2862%" y="629" width="2.9743%" height="15" fill="rgb(220,20,13)"/><text x="76.5362%" y="639.50">__s..</text></g><g><title>sock_sendmsg (37 samples, 2.97%)</title><rect x="76.2862%" y="613" width="2.9743%" height="15" fill="rgb(210,164,35)"/><text x="76.5362%" y="623.50">soc..</text></g><g><title>tcp_sendmsg (37 samples, 2.97%)</title><rect x="76.2862%" y="597" width="2.9743%" height="15" fill="rgb(248,109,41)"/><text x="76.5362%" y="607.50">tcp..</text></g><g><title>tcp_sendmsg_locked (37 samples, 2.97%)</title><rect x="76.2862%" y="581" width="2.9743%" height="15" fill="rgb(238,23,50)"/><text x="76.5362%" y="591.50">tcp..</text></g><g><title>entry_SYSCALL_64 (40 samples, 3.22%)</title><rect x="76.1254%" y="677" width="3.2154%" height="15" fill="rgb(211,48,49)"/><text x="76.3754%" y="687.50">ent..</text></g><g><title>do_syscall_64 (38 samples, 3.05%)</title><rect x="76.2862%" y="661" width="3.0547%" height="15" fill="rgb(223,36,21)"/><text x="76.5362%" y="671.50">do_..</text></g><g><title>decor::Shim::run_on_tcp (330 samples, 26.53%)</title><rect x="52.8939%" y="773" width="26.5273%" height="15" fill="rgb(207,123,46)"/><text x="53.1439%" y="783.50">decor::Shim::run_on_tcp</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (330 samples, 26.53%)</title><rect x="52.8939%" y="757" width="26.5273%" height="15" fill="rgb(240,218,32)"/><text x="53.1439%" y="767.50">msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (43 samples, 3.46%)</title><rect x="75.9646%" y="741" width="3.4566%" height="15" fill="rgb(252,5,43)"/><text x="76.2146%" y="751.50">std..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (42 samples, 3.38%)</title><rect x="76.0450%" y="725" width="3.3762%" height="15" fill="rgb(252,84,19)"/><text x="76.2950%" y="735.50">&lt;st..</text></g><g><title>std::sys_common::net::TcpStream::write (42 samples, 3.38%)</title><rect x="76.0450%" y="709" width="3.3762%" height="15" fill="rgb(243,152,39)"/><text x="76.2950%" y="719.50">std..</text></g><g><title>__libc_send (42 samples, 3.38%)</title><rect x="76.0450%" y="693" width="3.3762%" height="15" fill="rgb(234,160,15)"/><text x="76.2950%" y="703.50">__l..</text></g><g><title>__GI___clone (332 samples, 26.69%)</title><rect x="52.8135%" y="885" width="26.6881%" height="15" fill="rgb(237,34,20)"/><text x="53.0635%" y="895.50">__GI___clone</text></g><g><title>start_thread (332 samples, 26.69%)</title><rect x="52.8135%" y="869" width="26.6881%" height="15" fill="rgb(229,97,13)"/><text x="53.0635%" y="879.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (331 samples, 26.61%)</title><rect x="52.8939%" y="853" width="26.6077%" height="15" fill="rgb(234,71,50)"/><text x="53.1439%" y="863.50">std::sys::unix::thread::Thread::new::thread..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (331 samples, 26.61%)</title><rect x="52.8939%" y="837" width="26.6077%" height="15" fill="rgb(253,155,4)"/><text x="53.1439%" y="847.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::functio..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (331 samples, 26.61%)</title><rect x="52.8939%" y="821" width="26.6077%" height="15" fill="rgb(222,185,37)"/><text x="53.1439%" y="831.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::functio..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (331 samples, 26.61%)</title><rect x="52.8939%" y="805" width="26.6077%" height="15" fill="rgb(251,177,13)"/><text x="53.1439%" y="815.50">core::ops::function::FnOnce::call_once{{vta..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (331 samples, 26.61%)</title><rect x="52.8939%" y="789" width="26.6077%" height="15" fill="rgb(250,179,40)"/><text x="53.1439%" y="799.50">std::sys_common::backtrace::__rust_begin_sh..</text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.16%)</title><rect x="79.5016%" y="629" width="0.1608%" height="15" fill="rgb(242,44,2)"/><text x="79.7516%" y="639.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.16%)</title><rect x="79.5016%" y="613" width="0.1608%" height="15" fill="rgb(216,177,13)"/><text x="79.7516%" y="623.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (230 samples, 18.49%)</title><rect x="79.9035%" y="405" width="18.4887%" height="15" fill="rgb(216,106,43)"/><text x="80.1535%" y="415.50">__intel_pmu_enable_all.constp..</text></g><g><title>native_write_msr (228 samples, 18.33%)</title><rect x="80.0643%" y="389" width="18.3280%" height="15" fill="rgb(216,183,2)"/><text x="80.3143%" y="399.50">native_write_msr</text></g><g><title>preempt_schedule_thunk (233 samples, 18.73%)</title><rect x="79.7428%" y="485" width="18.7299%" height="15" fill="rgb(249,75,3)"/><text x="79.9928%" y="495.50">preempt_schedule_thunk</text></g><g><title>preempt_schedule_common (233 samples, 18.73%)</title><rect x="79.7428%" y="469" width="18.7299%" height="15" fill="rgb(219,67,39)"/><text x="79.9928%" y="479.50">preempt_schedule_common</text></g><g><title>__schedule (233 samples, 18.73%)</title><rect x="79.7428%" y="453" width="18.7299%" height="15" fill="rgb(253,228,2)"/><text x="79.9928%" y="463.50">__schedule</text></g><g><title>finish_task_switch (233 samples, 18.73%)</title><rect x="79.7428%" y="437" width="18.7299%" height="15" fill="rgb(235,138,27)"/><text x="79.9928%" y="447.50">finish_task_switch</text></g><g><title>__perf_event_task_sched_in (233 samples, 18.73%)</title><rect x="79.7428%" y="421" width="18.7299%" height="15" fill="rgb(236,97,51)"/><text x="79.9928%" y="431.50">__perf_event_task_sched_in</text></g><g><title>cpu_stop_queue_work (234 samples, 18.81%)</title><rect x="79.7428%" y="501" width="18.8103%" height="15" fill="rgb(240,80,30)"/><text x="79.9928%" y="511.50">cpu_stop_queue_work</text></g><g><title>__set_cpus_allowed_ptr (235 samples, 18.89%)</title><rect x="79.7428%" y="533" width="18.8907%" height="15" fill="rgb(230,178,19)"/><text x="79.9928%" y="543.50">__set_cpus_allowed_ptr</text></g><g><title>stop_one_cpu (235 samples, 18.89%)</title><rect x="79.7428%" y="517" width="18.8907%" height="15" fill="rgb(210,190,27)"/><text x="79.9928%" y="527.50">stop_one_cpu</text></g><g><title>do_syscall_64 (236 samples, 18.97%)</title><rect x="79.7428%" y="581" width="18.9711%" height="15" fill="rgb(222,107,31)"/><text x="79.9928%" y="591.50">do_syscall_64</text></g><g><title>__x64_sys_sched_setaffinity (236 samples, 18.97%)</title><rect x="79.7428%" y="565" width="18.9711%" height="15" fill="rgb(216,127,34)"/><text x="79.9928%" y="575.50">__x64_sys_sched_setaffinity</text></g><g><title>sched_setaffinity (236 samples, 18.97%)</title><rect x="79.7428%" y="549" width="18.9711%" height="15" fill="rgb(234,116,52)"/><text x="79.9928%" y="559.50">sched_setaffinity</text></g><g><title>hwloc::Topology::new (240 samples, 19.29%)</title><rect x="79.5016%" y="709" width="19.2926%" height="15" fill="rgb(222,124,15)"/><text x="79.7516%" y="719.50">hwloc::Topology::new</text></g><g><title>hwloc_topology_load (240 samples, 19.29%)</title><rect x="79.5016%" y="693" width="19.2926%" height="15" fill="rgb(231,179,28)"/><text x="79.7516%" y="703.50">hwloc_topology_load</text></g><g><title>[libhwloc.so.15.2.0] (240 samples, 19.29%)</title><rect x="79.5016%" y="677" width="19.2926%" height="15" fill="rgb(226,93,45)"/><text x="79.7516%" y="687.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (240 samples, 19.29%)</title><rect x="79.5016%" y="661" width="19.2926%" height="15" fill="rgb(215,8,51)"/><text x="79.7516%" y="671.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (240 samples, 19.29%)</title><rect x="79.5016%" y="645" width="19.2926%" height="15" fill="rgb(223,106,5)"/><text x="79.7516%" y="655.50">[libhwloc.so.15.2.0]</text></g><g><title>hwloc_linux_set_tid_cpubind (238 samples, 19.13%)</title><rect x="79.6624%" y="629" width="19.1318%" height="15" fill="rgb(250,191,5)"/><text x="79.9124%" y="639.50">hwloc_linux_set_tid_cpubind</text></g><g><title>__GI___sched_setaffinity_new (237 samples, 19.05%)</title><rect x="79.7428%" y="613" width="19.0514%" height="15" fill="rgb(242,132,44)"/><text x="79.9928%" y="623.50">__GI___sched_setaffinity_new</text></g><g><title>entry_SYSCALL_64 (237 samples, 19.05%)</title><rect x="79.7428%" y="597" width="19.0514%" height="15" fill="rgb(251,152,29)"/><text x="79.9928%" y="607.50">entry_SYSCALL_64</text></g><g><title>__libc_start_main (243 samples, 19.53%)</title><rect x="79.5016%" y="869" width="19.5338%" height="15" fill="rgb(218,179,5)"/><text x="79.7516%" y="879.50">__libc_start_main</text></g><g><title>main (243 samples, 19.53%)</title><rect x="79.5016%" y="853" width="19.5338%" height="15" fill="rgb(227,67,19)"/><text x="79.7516%" y="863.50">main</text></g><g><title>std::rt::lang_start_internal (243 samples, 19.53%)</title><rect x="79.5016%" y="837" width="19.5338%" height="15" fill="rgb(233,119,31)"/><text x="79.7516%" y="847.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (243 samples, 19.53%)</title><rect x="79.5016%" y="821" width="19.5338%" height="15" fill="rgb(241,120,22)"/><text x="79.7516%" y="831.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (243 samples, 19.53%)</title><rect x="79.5016%" y="805" width="19.5338%" height="15" fill="rgb(224,102,30)"/><text x="79.7516%" y="815.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (243 samples, 19.53%)</title><rect x="79.5016%" y="789" width="19.5338%" height="15" fill="rgb(210,164,37)"/><text x="79.7516%" y="799.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (243 samples, 19.53%)</title><rect x="79.5016%" y="773" width="19.5338%" height="15" fill="rgb(226,191,16)"/><text x="79.7516%" y="783.50">core::ops::function::impls::&lt;im..</text></g><g><title>std::rt::lang_start::_{{closure}} (243 samples, 19.53%)</title><rect x="79.5016%" y="757" width="19.5338%" height="15" fill="rgb(214,40,45)"/><text x="79.7516%" y="767.50">std::rt::lang_start::_{{closure..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (243 samples, 19.53%)</title><rect x="79.5016%" y="741" width="19.5338%" height="15" fill="rgb(244,29,26)"/><text x="79.7516%" y="751.50">std::sys_common::backtrace::__r..</text></g><g><title>lobsters::main (243 samples, 19.53%)</title><rect x="79.5016%" y="725" width="19.5338%" height="15" fill="rgb(216,16,5)"/><text x="79.7516%" y="735.50">lobsters::main</text></g><g><title>_start (244 samples, 19.61%)</title><rect x="79.5016%" y="885" width="19.6141%" height="15" fill="rgb(249,76,35)"/><text x="79.7516%" y="895.50">_start</text></g><g><title>entry_SYSCALL_64 (2 samples, 0.16%)</title><rect x="99.1961%" y="885" width="0.1608%" height="15" fill="rgb(207,11,44)"/><text x="99.4461%" y="895.50"></text></g><g><title>do_syscall_64 (2 samples, 0.16%)</title><rect x="99.1961%" y="869" width="0.1608%" height="15" fill="rgb(228,190,49)"/><text x="99.4461%" y="879.50"></text></g><g><title>lobsters (1,238 samples, 99.52%)</title><rect x="0.0000%" y="901" width="99.5177%" height="15" fill="rgb(214,173,12)"/><text x="0.2500%" y="911.50">lobsters</text></g><g><title>all (1,244 samples, 100%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(218,26,35)"/><text x="0.2500%" y="927.50"></text></g><g><title>perf (6 samples, 0.48%)</title><rect x="99.5177%" y="901" width="0.4823%" height="15" fill="rgb(220,200,19)"/><text x="99.7677%" y="911.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.48%)</title><rect x="99.5177%" y="885" width="0.4823%" height="15" fill="rgb(239,95,49)"/><text x="99.7677%" y="895.50"></text></g><g><title>do_syscall_64 (6 samples, 0.48%)</title><rect x="99.5177%" y="869" width="0.4823%" height="15" fill="rgb(235,85,53)"/><text x="99.7677%" y="879.50"></text></g><g><title>__x64_sys_execve (6 samples, 0.48%)</title><rect x="99.5177%" y="853" width="0.4823%" height="15" fill="rgb(233,133,31)"/><text x="99.7677%" y="863.50"></text></g><g><title>do_execve (6 samples, 0.48%)</title><rect x="99.5177%" y="837" width="0.4823%" height="15" fill="rgb(218,25,20)"/><text x="99.7677%" y="847.50"></text></g><g><title>__do_execve_file (6 samples, 0.48%)</title><rect x="99.5177%" y="821" width="0.4823%" height="15" fill="rgb(252,210,38)"/><text x="99.7677%" y="831.50"></text></g><g><title>search_binary_handler.part.0 (6 samples, 0.48%)</title><rect x="99.5177%" y="805" width="0.4823%" height="15" fill="rgb(242,134,21)"/><text x="99.7677%" y="815.50"></text></g><g><title>load_elf_binary (6 samples, 0.48%)</title><rect x="99.5177%" y="789" width="0.4823%" height="15" fill="rgb(213,28,48)"/><text x="99.7677%" y="799.50"></text></g><g><title>setup_new_exec (6 samples, 0.48%)</title><rect x="99.5177%" y="773" width="0.4823%" height="15" fill="rgb(250,196,2)"/><text x="99.7677%" y="783.50"></text></g><g><title>perf_event_exec (6 samples, 0.48%)</title><rect x="99.5177%" y="757" width="0.4823%" height="15" fill="rgb(227,5,17)"/><text x="99.7677%" y="767.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.40%)</title><rect x="99.5981%" y="741" width="0.4019%" height="15" fill="rgb(221,226,24)"/><text x="99.8481%" y="751.50"></text></g><g><title>native_write_msr (5 samples, 0.40%)</title><rect x="99.5981%" y="725" width="0.4019%" height="15" fill="rgb(211,5,48)"/><text x="99.8481%" y="735.50"></text></g></svg></svg>