<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="934" onload="init(evt)" viewBox="0 0 1200 934" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="934" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="917.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="917.00"> </text><svg id="frames" x="10" width="1180"><g><title>[[heap]] (2 samples, 0.15%)</title><rect x="0.0767%" y="853" width="0.1535%" height="15" fill="rgb(227,0,7)"/><text x="0.3267%" y="863.50"></text></g><g><title>__libc_send (2 samples, 0.15%)</title><rect x="0.2302%" y="837" width="0.1535%" height="15" fill="rgb(217,0,24)"/><text x="0.4802%" y="847.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.15%)</title><rect x="0.2302%" y="821" width="0.1535%" height="15" fill="rgb(221,193,54)"/><text x="0.4802%" y="831.50"></text></g><g><title>[[stack]] (3 samples, 0.23%)</title><rect x="0.2302%" y="853" width="0.2302%" height="15" fill="rgb(248,212,6)"/><text x="0.4802%" y="863.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (4 samples, 0.31%)</title><rect x="0.4605%" y="837" width="0.3070%" height="15" fill="rgb(208,68,35)"/><text x="0.7105%" y="847.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (3 samples, 0.23%)</title><rect x="1.2279%" y="837" width="0.2302%" height="15" fill="rgb(232,128,0)"/><text x="1.4779%" y="847.50"></text></g><g><title>std::sys_common::net::TcpStream::read (3 samples, 0.23%)</title><rect x="1.2279%" y="821" width="0.2302%" height="15" fill="rgb(207,160,47)"/><text x="1.4779%" y="831.50"></text></g><g><title>std::sys::unix::net::Socket::read (3 samples, 0.23%)</title><rect x="1.2279%" y="805" width="0.2302%" height="15" fill="rgb(228,23,34)"/><text x="1.4779%" y="815.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (3 samples, 0.23%)</title><rect x="1.2279%" y="789" width="0.2302%" height="15" fill="rgb(218,30,26)"/><text x="1.4779%" y="799.50"></text></g><g><title>__libc_recv (3 samples, 0.23%)</title><rect x="1.2279%" y="773" width="0.2302%" height="15" fill="rgb(220,122,19)"/><text x="1.4779%" y="783.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.23%)</title><rect x="1.2279%" y="757" width="0.2302%" height="15" fill="rgb(250,228,42)"/><text x="1.4779%" y="767.50"></text></g><g><title>__libc_send (3 samples, 0.23%)</title><rect x="1.6884%" y="837" width="0.2302%" height="15" fill="rgb(240,193,28)"/><text x="1.9384%" y="847.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.23%)</title><rect x="1.6884%" y="821" width="0.2302%" height="15" fill="rgb(216,20,37)"/><text x="1.9384%" y="831.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.15%)</title><rect x="1.9186%" y="837" width="0.1535%" height="15" fill="rgb(206,188,39)"/><text x="2.1686%" y="847.50"></text></g><g><title>_int_free (3 samples, 0.23%)</title><rect x="2.1489%" y="837" width="0.2302%" height="15" fill="rgb(217,207,13)"/><text x="2.3989%" y="847.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.15%)</title><rect x="2.6094%" y="805" width="0.1535%" height="15" fill="rgb(231,73,38)"/><text x="2.8594%" y="815.50"></text></g><g><title>_int_malloc (6 samples, 0.46%)</title><rect x="2.3791%" y="837" width="0.4605%" height="15" fill="rgb(225,20,46)"/><text x="2.6291%" y="847.50"></text></g><g><title>__libc_recv (3 samples, 0.23%)</title><rect x="2.6094%" y="821" width="0.2302%" height="15" fill="rgb(210,31,41)"/><text x="2.8594%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.31%)</title><rect x="2.8396%" y="837" width="0.3070%" height="15" fill="rgb(221,200,47)"/><text x="3.0896%" y="847.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (4 samples, 0.31%)</title><rect x="3.2233%" y="837" width="0.3070%" height="15" fill="rgb(226,26,5)"/><text x="3.4733%" y="847.50"></text></g><g><title>alloc::string::String::push (3 samples, 0.23%)</title><rect x="3.5303%" y="837" width="0.2302%" height="15" fill="rgb(249,33,26)"/><text x="3.7803%" y="847.50"></text></g><g><title>core::fmt::write (5 samples, 0.38%)</title><rect x="3.9140%" y="837" width="0.3837%" height="15" fill="rgb(235,183,28)"/><text x="4.1640%" y="847.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.15%)</title><rect x="4.2978%" y="837" width="0.1535%" height="15" fill="rgb(221,5,38)"/><text x="4.5478%" y="847.50"></text></g><g><title>mysql::conn::query_result::QueryResult&lt;T&gt;::handle_next (2 samples, 0.15%)</title><rect x="4.7583%" y="837" width="0.1535%" height="15" fill="rgb(247,18,42)"/><text x="5.0083%" y="847.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (4 samples, 0.31%)</title><rect x="5.0652%" y="837" width="0.3070%" height="15" fill="rgb(241,131,45)"/><text x="5.3152%" y="847.50"></text></g><g><title>[anon] (68 samples, 5.22%)</title><rect x="0.4605%" y="853" width="5.2187%" height="15" fill="rgb(249,31,29)"/><text x="0.7105%" y="863.50">[anon]</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="5.7559%" y="837" width="0.1535%" height="15" fill="rgb(225,111,53)"/><text x="6.0059%" y="847.50"></text></g><g><title>[lobsters] (4 samples, 0.31%)</title><rect x="5.7559%" y="853" width="0.3070%" height="15" fill="rgb(238,160,17)"/><text x="6.0059%" y="863.50"></text></g><g><title>_int_free (2 samples, 0.15%)</title><rect x="5.9094%" y="837" width="0.1535%" height="15" fill="rgb(214,148,48)"/><text x="6.1594%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.23%)</title><rect x="6.7536%" y="789" width="0.2302%" height="15" fill="rgb(232,36,49)"/><text x="7.0036%" y="799.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.15%)</title><rect x="6.8304%" y="773" width="0.1535%" height="15" fill="rgb(209,103,24)"/><text x="7.0804%" y="783.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.15%)</title><rect x="7.0606%" y="789" width="0.1535%" height="15" fill="rgb(229,88,8)"/><text x="7.3106%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.15%)</title><rect x="7.2141%" y="789" width="0.1535%" height="15" fill="rgb(213,181,19)"/><text x="7.4641%" y="799.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.15%)</title><rect x="7.2141%" y="773" width="0.1535%" height="15" fill="rgb(254,191,54)"/><text x="7.4641%" y="783.50"></text></g><g><title>_int_realloc (2 samples, 0.15%)</title><rect x="7.2141%" y="757" width="0.1535%" height="15" fill="rgb(241,83,37)"/><text x="7.4641%" y="767.50"></text></g><g><title>_int_malloc (2 samples, 0.15%)</title><rect x="7.2141%" y="741" width="0.1535%" height="15" fill="rgb(233,36,39)"/><text x="7.4641%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.23%)</title><rect x="7.4444%" y="773" width="0.2302%" height="15" fill="rgb(226,3,54)"/><text x="7.6944%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.23%)</title><rect x="7.4444%" y="757" width="0.2302%" height="15" fill="rgb(245,192,40)"/><text x="7.6944%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.23%)</title><rect x="7.4444%" y="741" width="0.2302%" height="15" fill="rgb(238,167,29)"/><text x="7.6944%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.23%)</title><rect x="7.4444%" y="725" width="0.2302%" height="15" fill="rgb(232,182,51)"/><text x="7.6944%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.23%)</title><rect x="7.4444%" y="709" width="0.2302%" height="15" fill="rgb(231,60,39)"/><text x="7.6944%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.23%)</title><rect x="7.4444%" y="693" width="0.2302%" height="15" fill="rgb(208,69,12)"/><text x="7.6944%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.23%)</title><rect x="7.4444%" y="677" width="0.2302%" height="15" fill="rgb(235,93,37)"/><text x="7.6944%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.23%)</title><rect x="7.4444%" y="661" width="0.2302%" height="15" fill="rgb(213,116,39)"/><text x="7.6944%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (3 samples, 0.23%)</title><rect x="7.4444%" y="645" width="0.2302%" height="15" fill="rgb(222,207,29)"/><text x="7.6944%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.23%)</title><rect x="7.4444%" y="629" width="0.2302%" height="15" fill="rgb(206,96,30)"/><text x="7.6944%" y="639.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.23%)</title><rect x="7.4444%" y="613" width="0.2302%" height="15" fill="rgb(218,138,4)"/><text x="7.6944%" y="623.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.23%)</title><rect x="7.4444%" y="597" width="0.2302%" height="15" fill="rgb(250,191,14)"/><text x="7.6944%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="7.6746%" y="757" width="0.1535%" height="15" fill="rgb(239,60,40)"/><text x="7.9246%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (10 samples, 0.77%)</title><rect x="7.3676%" y="789" width="0.7675%" height="15" fill="rgb(206,27,48)"/><text x="7.6176%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (6 samples, 0.46%)</title><rect x="7.6746%" y="773" width="0.4605%" height="15" fill="rgb(225,35,8)"/><text x="7.9246%" y="783.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.31%)</title><rect x="7.8281%" y="757" width="0.3070%" height="15" fill="rgb(250,213,24)"/><text x="8.0781%" y="767.50"></text></g><g><title>_int_malloc (3 samples, 0.23%)</title><rect x="7.9048%" y="741" width="0.2302%" height="15" fill="rgb(247,123,22)"/><text x="8.1548%" y="751.50"></text></g><g><title>sysmalloc (3 samples, 0.23%)</title><rect x="7.9048%" y="725" width="0.2302%" height="15" fill="rgb(231,138,38)"/><text x="8.1548%" y="735.50"></text></g><g><title>page_fault (2 samples, 0.15%)</title><rect x="7.9816%" y="709" width="0.1535%" height="15" fill="rgb(231,145,46)"/><text x="8.2316%" y="719.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.15%)</title><rect x="7.9816%" y="693" width="0.1535%" height="15" fill="rgb(251,118,11)"/><text x="8.2316%" y="703.50"></text></g><g><title>handle_mm_fault (2 samples, 0.15%)</title><rect x="7.9816%" y="677" width="0.1535%" height="15" fill="rgb(217,147,25)"/><text x="8.2316%" y="687.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.15%)</title><rect x="7.9816%" y="661" width="0.1535%" height="15" fill="rgb(247,81,37)"/><text x="8.2316%" y="671.50"></text></g><g><title>alloc_pages_vma (2 samples, 0.15%)</title><rect x="7.9816%" y="645" width="0.1535%" height="15" fill="rgb(209,12,38)"/><text x="8.2316%" y="655.50"></text></g><g><title>__alloc_pages_nodemask (2 samples, 0.15%)</title><rect x="7.9816%" y="629" width="0.1535%" height="15" fill="rgb(227,1,9)"/><text x="8.2316%" y="639.50"></text></g><g><title>get_page_from_freelist (2 samples, 0.15%)</title><rect x="7.9816%" y="613" width="0.1535%" height="15" fill="rgb(248,47,43)"/><text x="8.2316%" y="623.50"></text></g><g><title>prep_new_page (2 samples, 0.15%)</title><rect x="7.9816%" y="597" width="0.1535%" height="15" fill="rgb(221,10,30)"/><text x="8.2316%" y="607.50"></text></g><g><title>kernel_init_free_pages (2 samples, 0.15%)</title><rect x="7.9816%" y="581" width="0.1535%" height="15" fill="rgb(210,229,1)"/><text x="8.2316%" y="591.50"></text></g><g><title>clear_page_erms (2 samples, 0.15%)</title><rect x="7.9816%" y="565" width="0.1535%" height="15" fill="rgb(222,148,37)"/><text x="8.2316%" y="575.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.15%)</title><rect x="8.2886%" y="757" width="0.1535%" height="15" fill="rgb(234,67,33)"/><text x="8.5386%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.15%)</title><rect x="8.2886%" y="741" width="0.1535%" height="15" fill="rgb(247,98,35)"/><text x="8.5386%" y="751.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.15%)</title><rect x="8.2886%" y="725" width="0.1535%" height="15" fill="rgb(247,138,52)"/><text x="8.5386%" y="735.50"></text></g><g><title>alloc::string::String::push (2 samples, 0.15%)</title><rect x="8.5955%" y="709" width="0.1535%" height="15" fill="rgb(213,79,30)"/><text x="8.8455%" y="719.50"></text></g><g><title>alloc::string::String::with_capacity (2 samples, 0.15%)</title><rect x="8.7490%" y="709" width="0.1535%" height="15" fill="rgb(246,177,23)"/><text x="8.9990%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.15%)</title><rect x="8.7490%" y="693" width="0.1535%" height="15" fill="rgb(230,62,27)"/><text x="8.9990%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.15%)</title><rect x="8.7490%" y="677" width="0.1535%" height="15" fill="rgb(216,154,8)"/><text x="8.9990%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.15%)</title><rect x="8.7490%" y="661" width="0.1535%" height="15" fill="rgb(244,35,45)"/><text x="8.9990%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.15%)</title><rect x="8.7490%" y="645" width="0.1535%" height="15" fill="rgb(251,115,12)"/><text x="8.9990%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.15%)</title><rect x="8.7490%" y="629" width="0.1535%" height="15" fill="rgb(240,54,50)"/><text x="8.9990%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.15%)</title><rect x="8.7490%" y="613" width="0.1535%" height="15" fill="rgb(233,84,52)"/><text x="8.9990%" y="623.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.15%)</title><rect x="8.7490%" y="597" width="0.1535%" height="15" fill="rgb(207,117,47)"/><text x="8.9990%" y="607.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.15%)</title><rect x="8.7490%" y="581" width="0.1535%" height="15" fill="rgb(249,43,39)"/><text x="8.9990%" y="591.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (3 samples, 0.23%)</title><rect x="8.9025%" y="661" width="0.2302%" height="15" fill="rgb(209,38,44)"/><text x="9.1525%" y="671.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (8 samples, 0.61%)</title><rect x="8.5955%" y="725" width="0.6140%" height="15" fill="rgb(236,212,23)"/><text x="8.8455%" y="735.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (4 samples, 0.31%)</title><rect x="8.9025%" y="709" width="0.3070%" height="15" fill="rgb(242,79,21)"/><text x="9.1525%" y="719.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (4 samples, 0.31%)</title><rect x="8.9025%" y="693" width="0.3070%" height="15" fill="rgb(211,96,35)"/><text x="9.1525%" y="703.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (4 samples, 0.31%)</title><rect x="8.9025%" y="677" width="0.3070%" height="15" fill="rgb(253,215,40)"/><text x="9.1525%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (12 samples, 0.92%)</title><rect x="8.4421%" y="757" width="0.9210%" height="15" fill="rgb(211,81,21)"/><text x="8.6921%" y="767.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (12 samples, 0.92%)</title><rect x="8.4421%" y="741" width="0.9210%" height="15" fill="rgb(208,190,38)"/><text x="8.6921%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (2 samples, 0.15%)</title><rect x="9.2095%" y="725" width="0.1535%" height="15" fill="rgb(235,213,38)"/><text x="9.4595%" y="735.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.15%)</title><rect x="9.2095%" y="709" width="0.1535%" height="15" fill="rgb(237,122,38)"/><text x="9.4595%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.15%)</title><rect x="9.2095%" y="693" width="0.1535%" height="15" fill="rgb(244,218,35)"/><text x="9.4595%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (17 samples, 1.30%)</title><rect x="8.2886%" y="773" width="1.3047%" height="15" fill="rgb(240,68,47)"/><text x="8.5386%" y="783.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.15%)</title><rect x="9.4398%" y="757" width="0.1535%" height="15" fill="rgb(210,16,53)"/><text x="9.6898%" y="767.50"></text></g><g><title>core::fmt::write (2 samples, 0.15%)</title><rect x="9.4398%" y="741" width="0.1535%" height="15" fill="rgb(235,124,12)"/><text x="9.6898%" y="751.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (3 samples, 0.23%)</title><rect x="9.5932%" y="725" width="0.2302%" height="15" fill="rgb(224,169,11)"/><text x="9.8432%" y="735.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (3 samples, 0.23%)</title><rect x="9.5932%" y="709" width="0.2302%" height="15" fill="rgb(250,166,2)"/><text x="9.8432%" y="719.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (3 samples, 0.23%)</title><rect x="9.5932%" y="693" width="0.2302%" height="15" fill="rgb(242,216,29)"/><text x="9.8432%" y="703.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (3 samples, 0.23%)</title><rect x="9.5932%" y="677" width="0.2302%" height="15" fill="rgb(230,116,27)"/><text x="9.8432%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.31%)</title><rect x="9.5932%" y="757" width="0.3070%" height="15" fill="rgb(228,99,48)"/><text x="9.8432%" y="767.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (4 samples, 0.31%)</title><rect x="9.5932%" y="741" width="0.3070%" height="15" fill="rgb(253,11,6)"/><text x="9.8432%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::ObjectName as core::fmt::Display&gt;::fmt (6 samples, 0.46%)</title><rect x="9.5932%" y="773" width="0.4605%" height="15" fill="rgb(247,143,39)"/><text x="9.8432%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (6 samples, 0.46%)</title><rect x="10.2072%" y="709" width="0.4605%" height="15" fill="rgb(236,97,10)"/><text x="10.4572%" y="719.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (6 samples, 0.46%)</title><rect x="10.2072%" y="693" width="0.4605%" height="15" fill="rgb(233,208,19)"/><text x="10.4572%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.31%)</title><rect x="10.3607%" y="677" width="0.3070%" height="15" fill="rgb(216,164,2)"/><text x="10.6107%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (7 samples, 0.54%)</title><rect x="10.2072%" y="725" width="0.5372%" height="15" fill="rgb(220,129,5)"/><text x="10.4572%" y="735.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.23%)</title><rect x="11.0514%" y="709" width="0.2302%" height="15" fill="rgb(242,17,10)"/><text x="11.3014%" y="719.50"></text></g><g><title>_int_free (2 samples, 0.15%)</title><rect x="11.3584%" y="709" width="0.1535%" height="15" fill="rgb(242,107,0)"/><text x="11.6084%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (19 samples, 1.46%)</title><rect x="10.1305%" y="757" width="1.4582%" height="15" fill="rgb(251,28,31)"/><text x="10.3805%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Values as sql_parser::ast::display::AstDisplay&gt;::fmt (19 samples, 1.46%)</title><rect x="10.1305%" y="741" width="1.4582%" height="15" fill="rgb(233,223,10)"/><text x="10.3805%" y="751.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (11 samples, 0.84%)</title><rect x="10.7444%" y="725" width="0.8442%" height="15" fill="rgb(215,21,27)"/><text x="10.9944%" y="735.50"></text></g><g><title>__GI___libc_free (2 samples, 0.15%)</title><rect x="11.5886%" y="709" width="0.1535%" height="15" fill="rgb(232,23,21)"/><text x="11.8386%" y="719.50"></text></g><g><title>alloc::string::String::push (3 samples, 0.23%)</title><rect x="11.8189%" y="693" width="0.2302%" height="15" fill="rgb(244,5,23)"/><text x="12.0689%" y="703.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::len_utf8 (2 samples, 0.15%)</title><rect x="11.8956%" y="677" width="0.1535%" height="15" fill="rgb(226,81,46)"/><text x="12.1456%" y="687.50"></text></g><g><title>core::char::methods::len_utf8 (2 samples, 0.15%)</title><rect x="11.8956%" y="661" width="0.1535%" height="15" fill="rgb(247,70,30)"/><text x="12.1456%" y="671.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (17 samples, 1.30%)</title><rect x="11.8189%" y="709" width="1.3047%" height="15" fill="rgb(212,68,19)"/><text x="12.0689%" y="719.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (13 samples, 1.00%)</title><rect x="12.1259%" y="693" width="0.9977%" height="15" fill="rgb(240,187,13)"/><text x="12.3759%" y="703.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (11 samples, 0.84%)</title><rect x="12.2794%" y="677" width="0.8442%" height="15" fill="rgb(223,113,26)"/><text x="12.5294%" y="687.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (11 samples, 0.84%)</title><rect x="12.2794%" y="661" width="0.8442%" height="15" fill="rgb(206,192,2)"/><text x="12.5294%" y="671.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (5 samples, 0.38%)</title><rect x="12.7398%" y="645" width="0.3837%" height="15" fill="rgb(241,108,4)"/><text x="12.9898%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (22 samples, 1.69%)</title><rect x="11.5886%" y="741" width="1.6884%" height="15" fill="rgb(247,173,49)"/><text x="11.8386%" y="751.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (22 samples, 1.69%)</title><rect x="11.5886%" y="725" width="1.6884%" height="15" fill="rgb(224,114,35)"/><text x="11.8386%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (2 samples, 0.15%)</title><rect x="13.1236%" y="709" width="0.1535%" height="15" fill="rgb(245,159,27)"/><text x="13.3736%" y="719.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.15%)</title><rect x="13.1236%" y="693" width="0.1535%" height="15" fill="rgb(245,172,44)"/><text x="13.3736%" y="703.50"></text></g><g><title>_int_free (4 samples, 0.31%)</title><rect x="13.5073%" y="725" width="0.3070%" height="15" fill="rgb(236,23,11)"/><text x="13.7573%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.23%)</title><rect x="13.8143%" y="725" width="0.2302%" height="15" fill="rgb(205,117,38)"/><text x="14.0643%" y="735.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.23%)</title><rect x="13.8143%" y="709" width="0.2302%" height="15" fill="rgb(237,72,25)"/><text x="14.0643%" y="719.50"></text></g><g><title>_int_realloc (3 samples, 0.23%)</title><rect x="13.8143%" y="693" width="0.2302%" height="15" fill="rgb(244,70,9)"/><text x="14.0643%" y="703.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.15%)</title><rect x="14.1213%" y="693" width="0.1535%" height="15" fill="rgb(217,125,39)"/><text x="14.3713%" y="703.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.23%)</title><rect x="14.1213%" y="709" width="0.2302%" height="15" fill="rgb(235,36,10)"/><text x="14.3713%" y="719.50"></text></g><g><title>core::fmt::write (82 samples, 6.29%)</title><rect x="8.1351%" y="789" width="6.2932%" height="15" fill="rgb(251,123,47)"/><text x="8.3851%" y="799.50">core::fm..</text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (57 samples, 4.37%)</title><rect x="10.0537%" y="773" width="4.3745%" height="15" fill="rgb(221,13,13)"/><text x="10.3037%" y="783.50">&lt;sql_..</text></g><g><title>&lt;sql_parser::ast::defs::statement::InsertStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (37 samples, 2.84%)</title><rect x="11.5886%" y="757" width="2.8396%" height="15" fill="rgb(238,131,9)"/><text x="11.8386%" y="767.50">&lt;s..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (15 samples, 1.15%)</title><rect x="13.2771%" y="741" width="1.1512%" height="15" fill="rgb(211,50,8)"/><text x="13.5271%" y="751.50"></text></g><g><title>core::fmt::write (5 samples, 0.38%)</title><rect x="14.0445%" y="725" width="0.3837%" height="15" fill="rgb(245,182,24)"/><text x="14.2945%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.15%)</title><rect x="14.4282%" y="773" width="0.1535%" height="15" fill="rgb(242,14,37)"/><text x="14.6782%" y="783.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.31%)</title><rect x="14.4282%" y="789" width="0.3070%" height="15" fill="rgb(246,228,12)"/><text x="14.6782%" y="799.50"></text></g><g><title>decor::helpers::get_user_cols_of_datatable (5 samples, 0.38%)</title><rect x="14.7352%" y="789" width="0.3837%" height="15" fill="rgb(213,55,15)"/><text x="14.9852%" y="799.50"></text></g><g><title>core::fmt::write (5 samples, 0.38%)</title><rect x="14.7352%" y="773" width="0.3837%" height="15" fill="rgb(209,9,3)"/><text x="14.9852%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::ObjectName as core::fmt::Display&gt;::fmt (5 samples, 0.38%)</title><rect x="14.7352%" y="757" width="0.3837%" height="15" fill="rgb(230,59,30)"/><text x="14.9852%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (5 samples, 0.38%)</title><rect x="14.7352%" y="741" width="0.3837%" height="15" fill="rgb(209,121,21)"/><text x="14.9852%" y="751.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (5 samples, 0.38%)</title><rect x="14.7352%" y="725" width="0.3837%" height="15" fill="rgb(220,109,13)"/><text x="14.9852%" y="735.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (4 samples, 0.31%)</title><rect x="14.8120%" y="709" width="0.3070%" height="15" fill="rgb(232,18,1)"/><text x="15.0620%" y="719.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (2 samples, 0.15%)</title><rect x="14.9655%" y="693" width="0.1535%" height="15" fill="rgb(215,41,42)"/><text x="15.2155%" y="703.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.15%)</title><rect x="14.9655%" y="677" width="0.1535%" height="15" fill="rgb(224,123,36)"/><text x="15.2155%" y="687.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.15%)</title><rect x="14.9655%" y="661" width="0.1535%" height="15" fill="rgb(240,125,3)"/><text x="15.2155%" y="671.50"></text></g><g><title>decor::helpers::str_ident_match (3 samples, 0.23%)</title><rect x="15.1190%" y="789" width="0.2302%" height="15" fill="rgb(205,98,50)"/><text x="15.3690%" y="799.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.15%)</title><rect x="15.4259%" y="741" width="0.1535%" height="15" fill="rgb(205,185,37)"/><text x="15.6759%" y="751.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (2 samples, 0.15%)</title><rect x="15.4259%" y="725" width="0.1535%" height="15" fill="rgb(238,207,15)"/><text x="15.6759%" y="735.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (2 samples, 0.15%)</title><rect x="15.4259%" y="709" width="0.1535%" height="15" fill="rgb(213,199,42)"/><text x="15.6759%" y="719.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (2 samples, 0.15%)</title><rect x="15.4259%" y="693" width="0.1535%" height="15" fill="rgb(235,201,11)"/><text x="15.6759%" y="703.50"></text></g><g><title>core::fmt::write (4 samples, 0.31%)</title><rect x="15.4259%" y="773" width="0.3070%" height="15" fill="rgb(207,46,11)"/><text x="15.6759%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::ObjectName as core::fmt::Display&gt;::fmt (4 samples, 0.31%)</title><rect x="15.4259%" y="757" width="0.3070%" height="15" fill="rgb(241,35,35)"/><text x="15.6759%" y="767.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.15%)</title><rect x="15.5794%" y="741" width="0.1535%" height="15" fill="rgb(243,32,47)"/><text x="15.8294%" y="751.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.15%)</title><rect x="15.9632%" y="709" width="0.1535%" height="15" fill="rgb(247,202,23)"/><text x="16.2132%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.15%)</title><rect x="15.9632%" y="693" width="0.1535%" height="15" fill="rgb(219,102,11)"/><text x="16.2132%" y="703.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.15%)</title><rect x="15.9632%" y="677" width="0.1535%" height="15" fill="rgb(243,110,44)"/><text x="16.2132%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.15%)</title><rect x="15.9632%" y="661" width="0.1535%" height="15" fill="rgb(222,74,54)"/><text x="16.2132%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.15%)</title><rect x="15.9632%" y="645" width="0.1535%" height="15" fill="rgb(216,99,12)"/><text x="16.2132%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (2 samples, 0.15%)</title><rect x="15.9632%" y="629" width="0.1535%" height="15" fill="rgb(226,22,26)"/><text x="16.2132%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (2 samples, 0.15%)</title><rect x="15.9632%" y="613" width="0.1535%" height="15" fill="rgb(217,163,10)"/><text x="16.2132%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.15%)</title><rect x="15.9632%" y="597" width="0.1535%" height="15" fill="rgb(213,25,53)"/><text x="16.2132%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (2 samples, 0.15%)</title><rect x="15.9632%" y="581" width="0.1535%" height="15" fill="rgb(252,105,26)"/><text x="16.2132%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.15%)</title><rect x="15.9632%" y="565" width="0.1535%" height="15" fill="rgb(220,39,43)"/><text x="16.2132%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.15%)</title><rect x="15.9632%" y="549" width="0.1535%" height="15" fill="rgb(229,68,48)"/><text x="16.2132%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (2 samples, 0.15%)</title><rect x="15.9632%" y="533" width="0.1535%" height="15" fill="rgb(252,8,32)"/><text x="16.2132%" y="543.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.15%)</title><rect x="15.9632%" y="517" width="0.1535%" height="15" fill="rgb(223,20,43)"/><text x="16.2132%" y="527.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.15%)</title><rect x="15.9632%" y="501" width="0.1535%" height="15" fill="rgb(229,81,49)"/><text x="16.2132%" y="511.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.15%)</title><rect x="15.9632%" y="485" width="0.1535%" height="15" fill="rgb(236,28,36)"/><text x="16.2132%" y="495.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query (127 samples, 9.75%)</title><rect x="6.4467%" y="821" width="9.7467%" height="15" fill="rgb(249,185,26)"/><text x="6.6967%" y="831.50">decor::query_t..</text></g><g><title>decor::query_transformer::QueryTransformer::issue_to_dt_and_get_mv_stmt (127 samples, 9.75%)</title><rect x="6.4467%" y="805" width="9.7467%" height="15" fill="rgb(249,174,33)"/><text x="6.6967%" y="815.50">decor::query_t..</text></g><g><title>decor::mv_transformer::MVTransformer::objname_to_mv_string (11 samples, 0.84%)</title><rect x="15.3492%" y="789" width="0.8442%" height="15" fill="rgb(233,201,37)"/><text x="15.5992%" y="799.50"></text></g><g><title>decor::mv_transformer::MVTransformer::idents_to_mv_idents (6 samples, 0.46%)</title><rect x="15.7329%" y="773" width="0.4605%" height="15" fill="rgb(221,78,26)"/><text x="15.9829%" y="783.50"></text></g><g><title>alloc::fmt::format (4 samples, 0.31%)</title><rect x="15.8864%" y="757" width="0.3070%" height="15" fill="rgb(250,127,30)"/><text x="16.1364%" y="767.50"></text></g><g><title>core::fmt::Write::write_fmt (4 samples, 0.31%)</title><rect x="15.8864%" y="741" width="0.3070%" height="15" fill="rgb(230,49,44)"/><text x="16.1364%" y="751.50"></text></g><g><title>core::fmt::write (4 samples, 0.31%)</title><rect x="15.8864%" y="725" width="0.3070%" height="15" fill="rgb(229,67,23)"/><text x="16.1364%" y="735.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.15%)</title><rect x="16.1934%" y="757" width="0.1535%" height="15" fill="rgb(249,83,47)"/><text x="16.4434%" y="767.50"></text></g><g><title>_int_malloc (2 samples, 0.15%)</title><rect x="16.1934%" y="741" width="0.1535%" height="15" fill="rgb(215,43,3)"/><text x="16.4434%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (3 samples, 0.23%)</title><rect x="16.3469%" y="725" width="0.2302%" height="15" fill="rgb(238,154,13)"/><text x="16.5969%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="16.4236%" y="709" width="0.1535%" height="15" fill="rgb(219,56,2)"/><text x="16.6736%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="16.4236%" y="693" width="0.1535%" height="15" fill="rgb(233,0,4)"/><text x="16.6736%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.15%)</title><rect x="16.4236%" y="677" width="0.1535%" height="15" fill="rgb(235,30,7)"/><text x="16.6736%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.15%)</title><rect x="16.4236%" y="661" width="0.1535%" height="15" fill="rgb(250,79,13)"/><text x="16.6736%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.15%)</title><rect x="16.4236%" y="645" width="0.1535%" height="15" fill="rgb(211,146,34)"/><text x="16.6736%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.15%)</title><rect x="16.4236%" y="629" width="0.1535%" height="15" fill="rgb(228,22,38)"/><text x="16.6736%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.15%)</title><rect x="16.4236%" y="613" width="0.1535%" height="15" fill="rgb(235,168,5)"/><text x="16.6736%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.15%)</title><rect x="16.4236%" y="597" width="0.1535%" height="15" fill="rgb(221,155,16)"/><text x="16.6736%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.15%)</title><rect x="16.4236%" y="581" width="0.1535%" height="15" fill="rgb(215,215,53)"/><text x="16.6736%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.15%)</title><rect x="16.4236%" y="565" width="0.1535%" height="15" fill="rgb(223,4,10)"/><text x="16.6736%" y="575.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.15%)</title><rect x="16.4236%" y="549" width="0.1535%" height="15" fill="rgb(234,103,6)"/><text x="16.6736%" y="559.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (6 samples, 0.46%)</title><rect x="16.1934%" y="805" width="0.4605%" height="15" fill="rgb(227,97,0)"/><text x="16.4434%" y="815.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (6 samples, 0.46%)</title><rect x="16.1934%" y="789" width="0.4605%" height="15" fill="rgb(234,150,53)"/><text x="16.4434%" y="799.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (6 samples, 0.46%)</title><rect x="16.1934%" y="773" width="0.4605%" height="15" fill="rgb(228,201,54)"/><text x="16.4434%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (4 samples, 0.31%)</title><rect x="16.3469%" y="757" width="0.3070%" height="15" fill="rgb(222,22,37)"/><text x="16.5969%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.31%)</title><rect x="16.3469%" y="741" width="0.3070%" height="15" fill="rgb(237,53,32)"/><text x="16.5969%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.61%)</title><rect x="16.6539%" y="773" width="0.6140%" height="15" fill="rgb(233,25,53)"/><text x="16.9039%" y="783.50"></text></g><g><title>__GI___libc_realloc (8 samples, 0.61%)</title><rect x="16.6539%" y="757" width="0.6140%" height="15" fill="rgb(210,40,34)"/><text x="16.9039%" y="767.50"></text></g><g><title>_int_realloc (8 samples, 0.61%)</title><rect x="16.6539%" y="741" width="0.6140%" height="15" fill="rgb(241,220,44)"/><text x="16.9039%" y="751.50"></text></g><g><title>_int_malloc (8 samples, 0.61%)</title><rect x="16.6539%" y="725" width="0.6140%" height="15" fill="rgb(235,28,35)"/><text x="16.9039%" y="735.50"></text></g><g><title>malloc_consolidate (8 samples, 0.61%)</title><rect x="16.6539%" y="709" width="0.6140%" height="15" fill="rgb(210,56,17)"/><text x="16.9039%" y="719.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.15%)</title><rect x="18.3423%" y="741" width="0.1535%" height="15" fill="rgb(224,130,29)"/><text x="18.5923%" y="751.50"></text></g><g><title>_int_malloc (2 samples, 0.15%)</title><rect x="18.3423%" y="725" width="0.1535%" height="15" fill="rgb(235,212,8)"/><text x="18.5923%" y="735.50"></text></g><g><title>__memcmp_avx2_movbe (7 samples, 0.54%)</title><rect x="18.4958%" y="741" width="0.5372%" height="15" fill="rgb(223,33,50)"/><text x="18.7458%" y="751.50"></text></g><g><title>alloc::string::String::push (3 samples, 0.23%)</title><rect x="19.1097%" y="725" width="0.2302%" height="15" fill="rgb(219,149,13)"/><text x="19.3597%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (3 samples, 0.23%)</title><rect x="19.1097%" y="709" width="0.2302%" height="15" fill="rgb(250,156,29)"/><text x="19.3597%" y="719.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (176 samples, 13.51%)</title><rect x="6.4467%" y="837" width="13.5073%" height="15" fill="rgb(216,193,19)"/><text x="6.6967%" y="847.50">&lt;decor::Shim as msql..</text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (49 samples, 3.76%)</title><rect x="16.1934%" y="821" width="3.7606%" height="15" fill="rgb(216,135,14)"/><text x="16.4434%" y="831.50">deco..</text></g><g><title>sql_parser::parser::parse_statements (43 samples, 3.30%)</title><rect x="16.6539%" y="805" width="3.3001%" height="15" fill="rgb(241,47,5)"/><text x="16.9039%" y="815.50">sql..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (43 samples, 3.30%)</title><rect x="16.6539%" y="789" width="3.3001%" height="15" fill="rgb(233,42,35)"/><text x="16.9039%" y="799.50">sql..</text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (35 samples, 2.69%)</title><rect x="17.2678%" y="773" width="2.6861%" height="15" fill="rgb(231,13,6)"/><text x="17.5178%" y="783.50">sq..</text></g><g><title>sql_parser::tokenizer::Token::make_word (35 samples, 2.69%)</title><rect x="17.2678%" y="757" width="2.6861%" height="15" fill="rgb(207,181,40)"/><text x="17.5178%" y="767.50">sq..</text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (12 samples, 0.92%)</title><rect x="19.0330%" y="741" width="0.9210%" height="15" fill="rgb(254,173,49)"/><text x="19.2830%" y="751.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (8 samples, 0.61%)</title><rect x="19.3400%" y="725" width="0.6140%" height="15" fill="rgb(221,1,38)"/><text x="19.5900%" y="735.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (5 samples, 0.38%)</title><rect x="19.5702%" y="709" width="0.3837%" height="15" fill="rgb(206,124,46)"/><text x="19.8202%" y="719.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (5 samples, 0.38%)</title><rect x="19.5702%" y="693" width="0.3837%" height="15" fill="rgb(249,21,11)"/><text x="19.8202%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="19.9540%" y="837" width="0.1535%" height="15" fill="rgb(222,201,40)"/><text x="20.2040%" y="847.50"></text></g><g><title>hwloc::Topology::new (2 samples, 0.15%)</title><rect x="20.3377%" y="677" width="0.1535%" height="15" fill="rgb(235,61,29)"/><text x="20.5877%" y="687.50"></text></g><g><title>hwloc_topology_load (2 samples, 0.15%)</title><rect x="20.3377%" y="661" width="0.1535%" height="15" fill="rgb(219,207,3)"/><text x="20.5877%" y="671.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.15%)</title><rect x="20.3377%" y="645" width="0.1535%" height="15" fill="rgb(222,56,46)"/><text x="20.5877%" y="655.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.15%)</title><rect x="20.3377%" y="629" width="0.1535%" height="15" fill="rgb(239,76,54)"/><text x="20.5877%" y="639.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.15%)</title><rect x="20.3377%" y="613" width="0.1535%" height="15" fill="rgb(231,124,27)"/><text x="20.5877%" y="623.50"></text></g><g><title>__sk_dst_check (3 samples, 0.23%)</title><rect x="20.7982%" y="389" width="0.2302%" height="15" fill="rgb(249,195,6)"/><text x="21.0482%" y="399.50"></text></g><g><title>ipv4_dst_check (2 samples, 0.15%)</title><rect x="20.8749%" y="373" width="0.1535%" height="15" fill="rgb(237,174,47)"/><text x="21.1249%" y="383.50"></text></g><g><title>irqtime_account_irq (3 samples, 0.23%)</title><rect x="21.2586%" y="293" width="0.2302%" height="15" fill="rgb(206,201,31)"/><text x="21.5086%" y="303.50"></text></g><g><title>update_curr (2 samples, 0.15%)</title><rect x="21.7959%" y="37" width="0.1535%" height="15" fill="rgb(231,57,52)"/><text x="22.0459%" y="47.50"></text></g><g><title>sock_def_readable (5 samples, 0.38%)</title><rect x="21.6424%" y="133" width="0.3837%" height="15" fill="rgb(248,177,22)"/><text x="21.8924%" y="143.50"></text></g><g><title>__wake_up_common_lock (5 samples, 0.38%)</title><rect x="21.6424%" y="117" width="0.3837%" height="15" fill="rgb(215,211,37)"/><text x="21.8924%" y="127.50"></text></g><g><title>__wake_up_common (5 samples, 0.38%)</title><rect x="21.6424%" y="101" width="0.3837%" height="15" fill="rgb(241,128,51)"/><text x="21.8924%" y="111.50"></text></g><g><title>try_to_wake_up (5 samples, 0.38%)</title><rect x="21.6424%" y="85" width="0.3837%" height="15" fill="rgb(227,165,31)"/><text x="21.8924%" y="95.50"></text></g><g><title>enqueue_task_fair (3 samples, 0.23%)</title><rect x="21.7959%" y="69" width="0.2302%" height="15" fill="rgb(228,167,24)"/><text x="22.0459%" y="79.50"></text></g><g><title>enqueue_entity (3 samples, 0.23%)</title><rect x="21.7959%" y="53" width="0.2302%" height="15" fill="rgb(228,143,12)"/><text x="22.0459%" y="63.50"></text></g><g><title>tcp_ack (2 samples, 0.15%)</title><rect x="22.0261%" y="133" width="0.1535%" height="15" fill="rgb(249,149,8)"/><text x="22.2761%" y="143.50"></text></g><g><title>__tcp_transmit_skb (20 samples, 1.53%)</title><rect x="20.7982%" y="421" width="1.5349%" height="15" fill="rgb(243,35,44)"/><text x="21.0482%" y="431.50"></text></g><g><title>__ip_queue_xmit (20 samples, 1.53%)</title><rect x="20.7982%" y="405" width="1.5349%" height="15" fill="rgb(246,89,9)"/><text x="21.0482%" y="415.50"></text></g><g><title>ip_output (17 samples, 1.30%)</title><rect x="21.0284%" y="389" width="1.3047%" height="15" fill="rgb(233,213,13)"/><text x="21.2784%" y="399.50"></text></g><g><title>ip_finish_output2 (17 samples, 1.30%)</title><rect x="21.0284%" y="373" width="1.3047%" height="15" fill="rgb(233,141,41)"/><text x="21.2784%" y="383.50"></text></g><g><title>__local_bh_enable_ip (15 samples, 1.15%)</title><rect x="21.1819%" y="357" width="1.1512%" height="15" fill="rgb(239,167,4)"/><text x="21.4319%" y="367.50"></text></g><g><title>do_softirq (15 samples, 1.15%)</title><rect x="21.1819%" y="341" width="1.1512%" height="15" fill="rgb(209,217,16)"/><text x="21.4319%" y="351.50"></text></g><g><title>do_softirq_own_stack (14 samples, 1.07%)</title><rect x="21.2586%" y="325" width="1.0744%" height="15" fill="rgb(219,88,35)"/><text x="21.5086%" y="335.50"></text></g><g><title>__do_softirq (14 samples, 1.07%)</title><rect x="21.2586%" y="309" width="1.0744%" height="15" fill="rgb(220,193,23)"/><text x="21.5086%" y="319.50"></text></g><g><title>net_rx_action (11 samples, 0.84%)</title><rect x="21.4889%" y="293" width="0.8442%" height="15" fill="rgb(230,90,52)"/><text x="21.7389%" y="303.50"></text></g><g><title>process_backlog (10 samples, 0.77%)</title><rect x="21.5656%" y="277" width="0.7675%" height="15" fill="rgb(252,106,19)"/><text x="21.8156%" y="287.50"></text></g><g><title>__netif_receive_skb_one_core (10 samples, 0.77%)</title><rect x="21.5656%" y="261" width="0.7675%" height="15" fill="rgb(206,74,20)"/><text x="21.8156%" y="271.50"></text></g><g><title>ip_rcv (10 samples, 0.77%)</title><rect x="21.5656%" y="245" width="0.7675%" height="15" fill="rgb(230,138,44)"/><text x="21.8156%" y="255.50"></text></g><g><title>ip_local_deliver (10 samples, 0.77%)</title><rect x="21.5656%" y="229" width="0.7675%" height="15" fill="rgb(235,182,43)"/><text x="21.8156%" y="239.50"></text></g><g><title>ip_local_deliver_finish (10 samples, 0.77%)</title><rect x="21.5656%" y="213" width="0.7675%" height="15" fill="rgb(242,16,51)"/><text x="21.8156%" y="223.50"></text></g><g><title>ip_protocol_deliver_rcu (10 samples, 0.77%)</title><rect x="21.5656%" y="197" width="0.7675%" height="15" fill="rgb(248,9,4)"/><text x="21.8156%" y="207.50"></text></g><g><title>tcp_v4_rcv (9 samples, 0.69%)</title><rect x="21.6424%" y="181" width="0.6907%" height="15" fill="rgb(210,31,22)"/><text x="21.8924%" y="191.50"></text></g><g><title>tcp_v4_do_rcv (9 samples, 0.69%)</title><rect x="21.6424%" y="165" width="0.6907%" height="15" fill="rgb(239,54,39)"/><text x="21.8924%" y="175.50"></text></g><g><title>tcp_rcv_established (9 samples, 0.69%)</title><rect x="21.6424%" y="149" width="0.6907%" height="15" fill="rgb(230,99,41)"/><text x="21.8924%" y="159.50"></text></g><g><title>tcp_mstamp_refresh (2 samples, 0.15%)</title><rect x="22.1796%" y="133" width="0.1535%" height="15" fill="rgb(253,106,12)"/><text x="22.4296%" y="143.50"></text></g><g><title>__tcp_push_pending_frames (21 samples, 1.61%)</title><rect x="20.7982%" y="453" width="1.6117%" height="15" fill="rgb(213,46,41)"/><text x="21.0482%" y="463.50"></text></g><g><title>tcp_write_xmit (21 samples, 1.61%)</title><rect x="20.7982%" y="437" width="1.6117%" height="15" fill="rgb(215,133,35)"/><text x="21.0482%" y="447.50"></text></g><g><title>sock_sendmsg (24 samples, 1.84%)</title><rect x="20.6447%" y="501" width="1.8419%" height="15" fill="rgb(213,28,5)"/><text x="20.8947%" y="511.50">s..</text></g><g><title>tcp_sendmsg (23 samples, 1.77%)</title><rect x="20.7214%" y="485" width="1.7652%" height="15" fill="rgb(215,77,49)"/><text x="20.9714%" y="495.50"></text></g><g><title>tcp_sendmsg_locked (23 samples, 1.77%)</title><rect x="20.7214%" y="469" width="1.7652%" height="15" fill="rgb(248,100,22)"/><text x="20.9714%" y="479.50"></text></g><g><title>do_syscall_64 (26 samples, 2.00%)</title><rect x="20.5679%" y="549" width="1.9954%" height="15" fill="rgb(208,67,9)"/><text x="20.8179%" y="559.50">d..</text></g><g><title>__x64_sys_sendto (26 samples, 2.00%)</title><rect x="20.5679%" y="533" width="1.9954%" height="15" fill="rgb(219,133,21)"/><text x="20.8179%" y="543.50">_..</text></g><g><title>__sys_sendto (26 samples, 2.00%)</title><rect x="20.5679%" y="517" width="1.9954%" height="15" fill="rgb(246,46,29)"/><text x="20.8179%" y="527.50">_..</text></g><g><title>__libc_start_main (30 samples, 2.30%)</title><rect x="20.3377%" y="837" width="2.3024%" height="15" fill="rgb(246,185,52)"/><text x="20.5877%" y="847.50">_..</text></g><g><title>main (30 samples, 2.30%)</title><rect x="20.3377%" y="821" width="2.3024%" height="15" fill="rgb(252,136,11)"/><text x="20.5877%" y="831.50">m..</text></g><g><title>std::rt::lang_start_internal (30 samples, 2.30%)</title><rect x="20.3377%" y="805" width="2.3024%" height="15" fill="rgb(219,138,53)"/><text x="20.5877%" y="815.50">s..</text></g><g><title>std::panic::catch_unwind (30 samples, 2.30%)</title><rect x="20.3377%" y="789" width="2.3024%" height="15" fill="rgb(211,51,23)"/><text x="20.5877%" y="799.50">s..</text></g><g><title>std::panicking::try (30 samples, 2.30%)</title><rect x="20.3377%" y="773" width="2.3024%" height="15" fill="rgb(247,221,28)"/><text x="20.5877%" y="783.50">s..</text></g><g><title>std::panicking::try::do_call (30 samples, 2.30%)</title><rect x="20.3377%" y="757" width="2.3024%" height="15" fill="rgb(251,222,45)"/><text x="20.5877%" y="767.50">s..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (30 samples, 2.30%)</title><rect x="20.3377%" y="741" width="2.3024%" height="15" fill="rgb(217,162,53)"/><text x="20.5877%" y="751.50">c..</text></g><g><title>std::rt::lang_start::_{{closure}} (30 samples, 2.30%)</title><rect x="20.3377%" y="725" width="2.3024%" height="15" fill="rgb(229,93,14)"/><text x="20.5877%" y="735.50">s..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (30 samples, 2.30%)</title><rect x="20.3377%" y="709" width="2.3024%" height="15" fill="rgb(209,67,49)"/><text x="20.5877%" y="719.50">s..</text></g><g><title>lobsters::main (30 samples, 2.30%)</title><rect x="20.3377%" y="693" width="2.3024%" height="15" fill="rgb(213,87,29)"/><text x="20.5877%" y="703.50">l..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (28 samples, 2.15%)</title><rect x="20.4912%" y="677" width="2.1489%" height="15" fill="rgb(205,151,52)"/><text x="20.7412%" y="687.50">m..</text></g><g><title>mysql::conn::Conn::_query (28 samples, 2.15%)</title><rect x="20.4912%" y="661" width="2.1489%" height="15" fill="rgb(253,215,39)"/><text x="20.7412%" y="671.50">m..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (28 samples, 2.15%)</title><rect x="20.4912%" y="645" width="2.1489%" height="15" fill="rgb(221,220,41)"/><text x="20.7412%" y="655.50">m..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (28 samples, 2.15%)</title><rect x="20.4912%" y="629" width="2.1489%" height="15" fill="rgb(218,133,21)"/><text x="20.7412%" y="639.50">s..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (28 samples, 2.15%)</title><rect x="20.4912%" y="613" width="2.1489%" height="15" fill="rgb(221,193,43)"/><text x="20.7412%" y="623.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::write (28 samples, 2.15%)</title><rect x="20.4912%" y="597" width="2.1489%" height="15" fill="rgb(240,128,52)"/><text x="20.7412%" y="607.50">s..</text></g><g><title>__libc_send (28 samples, 2.15%)</title><rect x="20.4912%" y="581" width="2.1489%" height="15" fill="rgb(253,114,12)"/><text x="20.7412%" y="591.50">_..</text></g><g><title>entry_SYSCALL_64 (28 samples, 2.15%)</title><rect x="20.4912%" y="565" width="2.1489%" height="15" fill="rgb(215,223,47)"/><text x="20.7412%" y="575.50">e..</text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.15%)</title><rect x="22.6401%" y="837" width="0.1535%" height="15" fill="rgb(248,225,23)"/><text x="22.8901%" y="847.50"></text></g><g><title>_int_free (3 samples, 0.23%)</title><rect x="22.8703%" y="837" width="0.2302%" height="15" fill="rgb(250,108,0)"/><text x="23.1203%" y="847.50"></text></g><g><title>_int_malloc (3 samples, 0.23%)</title><rect x="23.1005%" y="837" width="0.2302%" height="15" fill="rgb(228,208,7)"/><text x="23.3505%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.15%)</title><rect x="23.4075%" y="837" width="0.1535%" height="15" fill="rgb(244,45,10)"/><text x="23.6575%" y="847.50"></text></g><g><title>alloc::string::String::push (4 samples, 0.31%)</title><rect x="23.5610%" y="837" width="0.3070%" height="15" fill="rgb(207,125,25)"/><text x="23.8110%" y="847.50"></text></g><g><title>core::fmt::write (2 samples, 0.15%)</title><rect x="23.8680%" y="837" width="0.1535%" height="15" fill="rgb(210,195,18)"/><text x="24.1180%" y="847.50"></text></g><g><title>__dev_queue_xmit (2 samples, 0.15%)</title><rect x="24.8657%" y="453" width="0.1535%" height="15" fill="rgb(249,80,12)"/><text x="25.1157%" y="463.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.15%)</title><rect x="24.8657%" y="437" width="0.1535%" height="15" fill="rgb(221,65,9)"/><text x="25.1157%" y="447.50"></text></g><g><title>loopback_xmit (2 samples, 0.15%)</title><rect x="24.8657%" y="421" width="0.1535%" height="15" fill="rgb(235,49,36)"/><text x="25.1157%" y="431.50"></text></g><g><title>sock_def_readable (8 samples, 0.61%)</title><rect x="25.3262%" y="229" width="0.6140%" height="15" fill="rgb(225,32,20)"/><text x="25.5762%" y="239.50"></text></g><g><title>__wake_up_common_lock (8 samples, 0.61%)</title><rect x="25.3262%" y="213" width="0.6140%" height="15" fill="rgb(215,141,46)"/><text x="25.5762%" y="223.50"></text></g><g><title>__wake_up_common (7 samples, 0.54%)</title><rect x="25.4029%" y="197" width="0.5372%" height="15" fill="rgb(250,160,47)"/><text x="25.6529%" y="207.50"></text></g><g><title>pollwake (7 samples, 0.54%)</title><rect x="25.4029%" y="181" width="0.5372%" height="15" fill="rgb(216,222,40)"/><text x="25.6529%" y="191.50"></text></g><g><title>try_to_wake_up (7 samples, 0.54%)</title><rect x="25.4029%" y="165" width="0.5372%" height="15" fill="rgb(234,217,39)"/><text x="25.6529%" y="175.50"></text></g><g><title>select_task_rq_fair (3 samples, 0.23%)</title><rect x="25.7099%" y="149" width="0.2302%" height="15" fill="rgb(207,178,40)"/><text x="25.9599%" y="159.50"></text></g><g><title>tcp_ack (3 samples, 0.23%)</title><rect x="25.9401%" y="229" width="0.2302%" height="15" fill="rgb(221,136,13)"/><text x="26.1901%" y="239.50"></text></g><g><title>tcp_update_pacing_rate (2 samples, 0.15%)</title><rect x="26.0169%" y="213" width="0.1535%" height="15" fill="rgb(249,199,10)"/><text x="26.2669%" y="223.50"></text></g><g><title>ip_finish_output2 (19 samples, 1.46%)</title><rect x="24.7889%" y="469" width="1.4582%" height="15" fill="rgb(249,222,13)"/><text x="25.0389%" y="479.50"></text></g><g><title>__local_bh_enable_ip (16 samples, 1.23%)</title><rect x="25.0192%" y="453" width="1.2279%" height="15" fill="rgb(244,185,38)"/><text x="25.2692%" y="463.50"></text></g><g><title>do_softirq (16 samples, 1.23%)</title><rect x="25.0192%" y="437" width="1.2279%" height="15" fill="rgb(236,202,9)"/><text x="25.2692%" y="447.50"></text></g><g><title>do_softirq_own_stack (16 samples, 1.23%)</title><rect x="25.0192%" y="421" width="1.2279%" height="15" fill="rgb(250,229,37)"/><text x="25.2692%" y="431.50"></text></g><g><title>__do_softirq (16 samples, 1.23%)</title><rect x="25.0192%" y="405" width="1.2279%" height="15" fill="rgb(206,174,23)"/><text x="25.2692%" y="415.50"></text></g><g><title>net_rx_action (16 samples, 1.23%)</title><rect x="25.0192%" y="389" width="1.2279%" height="15" fill="rgb(211,33,43)"/><text x="25.2692%" y="399.50"></text></g><g><title>process_backlog (16 samples, 1.23%)</title><rect x="25.0192%" y="373" width="1.2279%" height="15" fill="rgb(245,58,50)"/><text x="25.2692%" y="383.50"></text></g><g><title>__netif_receive_skb_one_core (15 samples, 1.15%)</title><rect x="25.0959%" y="357" width="1.1512%" height="15" fill="rgb(244,68,36)"/><text x="25.3459%" y="367.50"></text></g><g><title>ip_rcv (15 samples, 1.15%)</title><rect x="25.0959%" y="341" width="1.1512%" height="15" fill="rgb(232,229,15)"/><text x="25.3459%" y="351.50"></text></g><g><title>ip_local_deliver (15 samples, 1.15%)</title><rect x="25.0959%" y="325" width="1.1512%" height="15" fill="rgb(254,30,23)"/><text x="25.3459%" y="335.50"></text></g><g><title>ip_local_deliver_finish (15 samples, 1.15%)</title><rect x="25.0959%" y="309" width="1.1512%" height="15" fill="rgb(235,160,14)"/><text x="25.3459%" y="319.50"></text></g><g><title>ip_protocol_deliver_rcu (14 samples, 1.07%)</title><rect x="25.1727%" y="293" width="1.0744%" height="15" fill="rgb(212,155,44)"/><text x="25.4227%" y="303.50"></text></g><g><title>tcp_v4_rcv (14 samples, 1.07%)</title><rect x="25.1727%" y="277" width="1.0744%" height="15" fill="rgb(226,2,50)"/><text x="25.4227%" y="287.50"></text></g><g><title>tcp_v4_do_rcv (13 samples, 1.00%)</title><rect x="25.2494%" y="261" width="0.9977%" height="15" fill="rgb(234,177,6)"/><text x="25.4994%" y="271.50"></text></g><g><title>tcp_rcv_established (13 samples, 1.00%)</title><rect x="25.2494%" y="245" width="0.9977%" height="15" fill="rgb(217,24,9)"/><text x="25.4994%" y="255.50"></text></g><g><title>__ip_queue_xmit (21 samples, 1.61%)</title><rect x="24.7889%" y="501" width="1.6117%" height="15" fill="rgb(220,13,46)"/><text x="25.0389%" y="511.50"></text></g><g><title>ip_output (21 samples, 1.61%)</title><rect x="24.7889%" y="485" width="1.6117%" height="15" fill="rgb(239,221,27)"/><text x="25.0389%" y="495.50"></text></g><g><title>ip_finish_output (2 samples, 0.15%)</title><rect x="26.2471%" y="469" width="0.1535%" height="15" fill="rgb(222,198,25)"/><text x="26.4971%" y="479.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (2 samples, 0.15%)</title><rect x="26.2471%" y="453" width="0.1535%" height="15" fill="rgb(211,99,13)"/><text x="26.4971%" y="463.50"></text></g><g><title>__tcp_push_pending_frames (24 samples, 1.84%)</title><rect x="24.6355%" y="549" width="1.8419%" height="15" fill="rgb(232,111,31)"/><text x="24.8855%" y="559.50">_..</text></g><g><title>tcp_write_xmit (24 samples, 1.84%)</title><rect x="24.6355%" y="533" width="1.8419%" height="15" fill="rgb(245,82,37)"/><text x="24.8855%" y="543.50">t..</text></g><g><title>__tcp_transmit_skb (24 samples, 1.84%)</title><rect x="24.6355%" y="517" width="1.8419%" height="15" fill="rgb(227,149,46)"/><text x="24.8855%" y="527.50">_..</text></g><g><title>sk_stream_alloc_skb (3 samples, 0.23%)</title><rect x="26.4774%" y="549" width="0.2302%" height="15" fill="rgb(218,36,50)"/><text x="26.7274%" y="559.50"></text></g><g><title>__alloc_skb (3 samples, 0.23%)</title><rect x="26.4774%" y="533" width="0.2302%" height="15" fill="rgb(226,80,48)"/><text x="26.7274%" y="543.50"></text></g><g><title>do_syscall_64 (29 samples, 2.23%)</title><rect x="24.6355%" y="645" width="2.2256%" height="15" fill="rgb(238,224,15)"/><text x="24.8855%" y="655.50">d..</text></g><g><title>__x64_sys_sendto (29 samples, 2.23%)</title><rect x="24.6355%" y="629" width="2.2256%" height="15" fill="rgb(241,136,10)"/><text x="24.8855%" y="639.50">_..</text></g><g><title>__sys_sendto (29 samples, 2.23%)</title><rect x="24.6355%" y="613" width="2.2256%" height="15" fill="rgb(208,32,45)"/><text x="24.8855%" y="623.50">_..</text></g><g><title>sock_sendmsg (29 samples, 2.23%)</title><rect x="24.6355%" y="597" width="2.2256%" height="15" fill="rgb(207,135,9)"/><text x="24.8855%" y="607.50">s..</text></g><g><title>tcp_sendmsg (29 samples, 2.23%)</title><rect x="24.6355%" y="581" width="2.2256%" height="15" fill="rgb(206,86,44)"/><text x="24.8855%" y="591.50">t..</text></g><g><title>tcp_sendmsg_locked (29 samples, 2.23%)</title><rect x="24.6355%" y="565" width="2.2256%" height="15" fill="rgb(245,177,15)"/><text x="24.8855%" y="575.50">t..</text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (36 samples, 2.76%)</title><rect x="24.3285%" y="773" width="2.7629%" height="15" fill="rgb(206,64,50)"/><text x="24.5785%" y="783.50">&lt;m..</text></g><g><title>mysql::conn::Conn::_query (36 samples, 2.76%)</title><rect x="24.3285%" y="757" width="2.7629%" height="15" fill="rgb(234,36,40)"/><text x="24.5785%" y="767.50">my..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (36 samples, 2.76%)</title><rect x="24.3285%" y="741" width="2.7629%" height="15" fill="rgb(213,64,8)"/><text x="24.5785%" y="751.50">my..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (36 samples, 2.76%)</title><rect x="24.3285%" y="725" width="2.7629%" height="15" fill="rgb(210,75,36)"/><text x="24.5785%" y="735.50">st..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (34 samples, 2.61%)</title><rect x="24.4820%" y="709" width="2.6094%" height="15" fill="rgb(229,88,21)"/><text x="24.7320%" y="719.50">&lt;s..</text></g><g><title>std::sys_common::net::TcpStream::write (34 samples, 2.61%)</title><rect x="24.4820%" y="693" width="2.6094%" height="15" fill="rgb(252,204,47)"/><text x="24.7320%" y="703.50">st..</text></g><g><title>__libc_send (34 samples, 2.61%)</title><rect x="24.4820%" y="677" width="2.6094%" height="15" fill="rgb(208,77,27)"/><text x="24.7320%" y="687.50">__..</text></g><g><title>entry_SYSCALL_64 (33 samples, 2.53%)</title><rect x="24.5587%" y="661" width="2.5326%" height="15" fill="rgb(221,76,26)"/><text x="24.8087%" y="671.50">en..</text></g><g><title>prepare_exit_to_usermode (3 samples, 0.23%)</title><rect x="26.8611%" y="645" width="0.2302%" height="15" fill="rgb(225,139,18)"/><text x="27.1111%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (5 samples, 0.38%)</title><rect x="27.1681%" y="693" width="0.3837%" height="15" fill="rgb(230,137,11)"/><text x="27.4181%" y="703.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (5 samples, 0.38%)</title><rect x="27.1681%" y="677" width="0.3837%" height="15" fill="rgb(212,28,1)"/><text x="27.4181%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (9 samples, 0.69%)</title><rect x="27.0913%" y="709" width="0.6907%" height="15" fill="rgb(248,164,17)"/><text x="27.3413%" y="719.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (3 samples, 0.23%)</title><rect x="27.5518%" y="693" width="0.2302%" height="15" fill="rgb(222,171,42)"/><text x="27.8018%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (13 samples, 1.00%)</title><rect x="27.0913%" y="741" width="0.9977%" height="15" fill="rgb(243,84,45)"/><text x="27.3413%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Values as sql_parser::ast::display::AstDisplay&gt;::fmt (13 samples, 1.00%)</title><rect x="27.0913%" y="725" width="0.9977%" height="15" fill="rgb(252,49,23)"/><text x="27.3413%" y="735.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (4 samples, 0.31%)</title><rect x="27.7820%" y="709" width="0.3070%" height="15" fill="rgb(215,19,7)"/><text x="28.0320%" y="719.50"></text></g><g><title>core::fmt::write (2 samples, 0.15%)</title><rect x="27.9355%" y="693" width="0.1535%" height="15" fill="rgb(238,81,41)"/><text x="28.1855%" y="703.50"></text></g><g><title>alloc::string::String::push (4 samples, 0.31%)</title><rect x="28.2425%" y="677" width="0.3070%" height="15" fill="rgb(210,199,37)"/><text x="28.4925%" y="687.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::len_utf8 (3 samples, 0.23%)</title><rect x="28.3193%" y="661" width="0.2302%" height="15" fill="rgb(244,192,49)"/><text x="28.5693%" y="671.50"></text></g><g><title>core::char::methods::len_utf8 (3 samples, 0.23%)</title><rect x="28.3193%" y="645" width="0.2302%" height="15" fill="rgb(226,211,11)"/><text x="28.5693%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (16 samples, 1.23%)</title><rect x="28.0890%" y="725" width="1.2279%" height="15" fill="rgb(236,162,54)"/><text x="28.3390%" y="735.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (16 samples, 1.23%)</title><rect x="28.0890%" y="709" width="1.2279%" height="15" fill="rgb(220,229,9)"/><text x="28.3390%" y="719.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (15 samples, 1.15%)</title><rect x="28.1658%" y="693" width="1.1512%" height="15" fill="rgb(250,87,22)"/><text x="28.4158%" y="703.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (9 samples, 0.69%)</title><rect x="28.6262%" y="677" width="0.6907%" height="15" fill="rgb(239,43,17)"/><text x="28.8762%" y="687.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (7 samples, 0.54%)</title><rect x="28.7797%" y="661" width="0.5372%" height="15" fill="rgb(231,177,25)"/><text x="29.0297%" y="671.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (7 samples, 0.54%)</title><rect x="28.7797%" y="645" width="0.5372%" height="15" fill="rgb(219,179,1)"/><text x="29.0297%" y="655.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (4 samples, 0.31%)</title><rect x="29.0100%" y="629" width="0.3070%" height="15" fill="rgb(238,219,53)"/><text x="29.2600%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.15%)</title><rect x="29.4705%" y="709" width="0.1535%" height="15" fill="rgb(232,167,36)"/><text x="29.7205%" y="719.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.15%)</title><rect x="29.4705%" y="693" width="0.1535%" height="15" fill="rgb(244,19,51)"/><text x="29.7205%" y="703.50"></text></g><g><title>_int_realloc (2 samples, 0.15%)</title><rect x="29.4705%" y="677" width="0.1535%" height="15" fill="rgb(224,6,22)"/><text x="29.7205%" y="687.50"></text></g><g><title>_int_malloc (2 samples, 0.15%)</title><rect x="29.4705%" y="661" width="0.1535%" height="15" fill="rgb(224,145,5)"/><text x="29.7205%" y="671.50"></text></g><g><title>core::fmt::write (35 samples, 2.69%)</title><rect x="27.0913%" y="773" width="2.6861%" height="15" fill="rgb(234,130,49)"/><text x="27.3413%" y="783.50">co..</text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (35 samples, 2.69%)</title><rect x="27.0913%" y="757" width="2.6861%" height="15" fill="rgb(254,6,2)"/><text x="27.3413%" y="767.50">&lt;s..</text></g><g><title>&lt;sql_parser::ast::defs::statement::InsertStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (22 samples, 1.69%)</title><rect x="28.0890%" y="741" width="1.6884%" height="15" fill="rgb(208,96,46)"/><text x="28.3390%" y="751.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (6 samples, 0.46%)</title><rect x="29.3170%" y="725" width="0.4605%" height="15" fill="rgb(239,3,39)"/><text x="29.5670%" y="735.50"></text></g><g><title>core::fmt::write (2 samples, 0.15%)</title><rect x="29.6239%" y="709" width="0.1535%" height="15" fill="rgb(233,210,1)"/><text x="29.8739%" y="719.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query (74 samples, 5.68%)</title><rect x="24.3285%" y="789" width="5.6792%" height="15" fill="rgb(244,137,37)"/><text x="24.5785%" y="799.50">decor::..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="30.0844%" y="773" width="0.1535%" height="15" fill="rgb(240,136,2)"/><text x="30.3344%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="30.0844%" y="757" width="0.1535%" height="15" fill="rgb(239,18,37)"/><text x="30.3344%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.15%)</title><rect x="30.0844%" y="741" width="0.1535%" height="15" fill="rgb(218,185,22)"/><text x="30.3344%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.15%)</title><rect x="30.0844%" y="725" width="0.1535%" height="15" fill="rgb(225,218,4)"/><text x="30.3344%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.15%)</title><rect x="30.0844%" y="709" width="0.1535%" height="15" fill="rgb(230,182,32)"/><text x="30.3344%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.15%)</title><rect x="30.0844%" y="693" width="0.1535%" height="15" fill="rgb(242,56,43)"/><text x="30.3344%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.15%)</title><rect x="30.0844%" y="677" width="0.1535%" height="15" fill="rgb(233,99,24)"/><text x="30.3344%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.15%)</title><rect x="30.0844%" y="661" width="0.1535%" height="15" fill="rgb(234,209,42)"/><text x="30.3344%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.15%)</title><rect x="30.0844%" y="645" width="0.1535%" height="15" fill="rgb(227,7,12)"/><text x="30.3344%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.15%)</title><rect x="30.0844%" y="629" width="0.1535%" height="15" fill="rgb(245,203,43)"/><text x="30.3344%" y="639.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.15%)</title><rect x="30.0844%" y="613" width="0.1535%" height="15" fill="rgb(238,205,33)"/><text x="30.3344%" y="623.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.15%)</title><rect x="30.0844%" y="597" width="0.1535%" height="15" fill="rgb(231,56,7)"/><text x="30.3344%" y="607.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.23%)</title><rect x="30.2379%" y="773" width="0.2302%" height="15" fill="rgb(244,186,29)"/><text x="30.4879%" y="783.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.15%)</title><rect x="30.3147%" y="757" width="0.1535%" height="15" fill="rgb(234,111,31)"/><text x="30.5647%" y="767.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.15%)</title><rect x="30.3147%" y="741" width="0.1535%" height="15" fill="rgb(241,149,10)"/><text x="30.5647%" y="751.50"></text></g><g><title>decor::Shim::run_on_tcp (83 samples, 6.37%)</title><rect x="24.2517%" y="837" width="6.3699%" height="15" fill="rgb(249,206,44)"/><text x="24.5017%" y="847.50">decor::S..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (83 samples, 6.37%)</title><rect x="24.2517%" y="821" width="6.3699%" height="15" fill="rgb(251,153,30)"/><text x="24.5017%" y="831.50">msql_srv..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (82 samples, 6.29%)</title><rect x="24.3285%" y="805" width="6.2932%" height="15" fill="rgb(239,152,38)"/><text x="24.5785%" y="815.50">&lt;decor::..</text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (8 samples, 0.61%)</title><rect x="30.0077%" y="789" width="0.6140%" height="15" fill="rgb(249,139,47)"/><text x="30.2577%" y="799.50"></text></g><g><title>decor::qtcache::QueryCache::insert_uid2gids_for_values (2 samples, 0.15%)</title><rect x="30.6216%" y="821" width="0.1535%" height="15" fill="rgb(244,64,35)"/><text x="30.8716%" y="831.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (2 samples, 0.15%)</title><rect x="30.6216%" y="805" width="0.1535%" height="15" fill="rgb(216,46,15)"/><text x="30.8716%" y="815.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.15%)</title><rect x="30.6216%" y="789" width="0.1535%" height="15" fill="rgb(250,74,19)"/><text x="30.8716%" y="799.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (2 samples, 0.15%)</title><rect x="30.6216%" y="773" width="0.1535%" height="15" fill="rgb(249,42,33)"/><text x="30.8716%" y="783.50"></text></g><g><title>mysql::conn::Conn::read_packet (2 samples, 0.15%)</title><rect x="30.6216%" y="757" width="0.1535%" height="15" fill="rgb(242,149,17)"/><text x="30.8716%" y="767.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.15%)</title><rect x="30.6216%" y="741" width="0.1535%" height="15" fill="rgb(244,29,21)"/><text x="30.8716%" y="751.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (2 samples, 0.15%)</title><rect x="30.6216%" y="725" width="0.1535%" height="15" fill="rgb(220,130,37)"/><text x="30.8716%" y="735.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (2 samples, 0.15%)</title><rect x="30.6216%" y="709" width="0.1535%" height="15" fill="rgb(211,67,2)"/><text x="30.8716%" y="719.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.15%)</title><rect x="30.6216%" y="693" width="0.1535%" height="15" fill="rgb(235,68,52)"/><text x="30.8716%" y="703.50"></text></g><g><title>decor::query_transformer::QueryTransformer::issue_to_dt_and_get_mv_stmt (7 samples, 0.54%)</title><rect x="30.6216%" y="837" width="0.5372%" height="15" fill="rgb(246,142,3)"/><text x="30.8716%" y="847.50"></text></g><g><title>decor::query_transformer::QueryTransformer::expr_to_value_expr (5 samples, 0.38%)</title><rect x="30.7751%" y="821" width="0.3837%" height="15" fill="rgb(241,25,7)"/><text x="31.0251%" y="831.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (5 samples, 0.38%)</title><rect x="30.7751%" y="805" width="0.3837%" height="15" fill="rgb(242,119,39)"/><text x="31.0251%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5 samples, 0.38%)</title><rect x="30.7751%" y="789" width="0.3837%" height="15" fill="rgb(241,98,45)"/><text x="31.0251%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.38%)</title><rect x="30.7751%" y="773" width="0.3837%" height="15" fill="rgb(254,28,30)"/><text x="31.0251%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (5 samples, 0.38%)</title><rect x="30.7751%" y="757" width="0.3837%" height="15" fill="rgb(241,142,54)"/><text x="31.0251%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.38%)</title><rect x="30.7751%" y="741" width="0.3837%" height="15" fill="rgb(222,85,15)"/><text x="31.0251%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (5 samples, 0.38%)</title><rect x="30.7751%" y="725" width="0.3837%" height="15" fill="rgb(210,85,47)"/><text x="31.0251%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (5 samples, 0.38%)</title><rect x="30.7751%" y="709" width="0.3837%" height="15" fill="rgb(224,206,25)"/><text x="31.0251%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.38%)</title><rect x="30.7751%" y="693" width="0.3837%" height="15" fill="rgb(243,201,19)"/><text x="31.0251%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.38%)</title><rect x="30.7751%" y="677" width="0.3837%" height="15" fill="rgb(236,59,4)"/><text x="31.0251%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (5 samples, 0.38%)</title><rect x="30.7751%" y="661" width="0.3837%" height="15" fill="rgb(254,179,45)"/><text x="31.0251%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.38%)</title><rect x="30.7751%" y="645" width="0.3837%" height="15" fill="rgb(226,14,10)"/><text x="31.0251%" y="655.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.38%)</title><rect x="30.7751%" y="629" width="0.3837%" height="15" fill="rgb(244,27,41)"/><text x="31.0251%" y="639.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.38%)</title><rect x="30.7751%" y="613" width="0.3837%" height="15" fill="rgb(235,35,32)"/><text x="31.0251%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (8 samples, 0.61%)</title><rect x="31.3891%" y="741" width="0.6140%" height="15" fill="rgb(218,68,31)"/><text x="31.6391%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (7 samples, 0.54%)</title><rect x="31.4658%" y="725" width="0.5372%" height="15" fill="rgb(207,120,37)"/><text x="31.7158%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (7 samples, 0.54%)</title><rect x="31.4658%" y="709" width="0.5372%" height="15" fill="rgb(227,98,0)"/><text x="31.7158%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (6 samples, 0.46%)</title><rect x="31.5426%" y="693" width="0.4605%" height="15" fill="rgb(207,7,3)"/><text x="31.7926%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.46%)</title><rect x="31.5426%" y="677" width="0.4605%" height="15" fill="rgb(206,98,19)"/><text x="31.7926%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (6 samples, 0.46%)</title><rect x="31.5426%" y="661" width="0.4605%" height="15" fill="rgb(217,5,26)"/><text x="31.7926%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (6 samples, 0.46%)</title><rect x="31.5426%" y="645" width="0.4605%" height="15" fill="rgb(235,190,38)"/><text x="31.7926%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.46%)</title><rect x="31.5426%" y="629" width="0.4605%" height="15" fill="rgb(247,86,24)"/><text x="31.7926%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.46%)</title><rect x="31.5426%" y="613" width="0.4605%" height="15" fill="rgb(205,101,16)"/><text x="31.7926%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (6 samples, 0.46%)</title><rect x="31.5426%" y="597" width="0.4605%" height="15" fill="rgb(246,168,33)"/><text x="31.7926%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.46%)</title><rect x="31.5426%" y="581" width="0.4605%" height="15" fill="rgb(231,114,1)"/><text x="31.7926%" y="591.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.46%)</title><rect x="31.5426%" y="565" width="0.4605%" height="15" fill="rgb(207,184,53)"/><text x="31.7926%" y="575.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.46%)</title><rect x="31.5426%" y="549" width="0.4605%" height="15" fill="rgb(224,95,51)"/><text x="31.7926%" y="559.50"></text></g><g><title>_int_malloc (6 samples, 0.46%)</title><rect x="31.5426%" y="533" width="0.4605%" height="15" fill="rgb(212,188,45)"/><text x="31.7926%" y="543.50"></text></g><g><title>__GI___mprotect (2 samples, 0.15%)</title><rect x="32.1566%" y="693" width="0.1535%" height="15" fill="rgb(223,154,38)"/><text x="32.4066%" y="703.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.46%)</title><rect x="32.0031%" y="741" width="0.4605%" height="15" fill="rgb(251,22,52)"/><text x="32.2531%" y="751.50"></text></g><g><title>_int_malloc (6 samples, 0.46%)</title><rect x="32.0031%" y="725" width="0.4605%" height="15" fill="rgb(229,209,22)"/><text x="32.2531%" y="735.50"></text></g><g><title>sysmalloc (5 samples, 0.38%)</title><rect x="32.0798%" y="709" width="0.3837%" height="15" fill="rgb(234,138,34)"/><text x="32.3298%" y="719.50"></text></g><g><title>page_fault (2 samples, 0.15%)</title><rect x="32.3101%" y="693" width="0.1535%" height="15" fill="rgb(212,95,11)"/><text x="32.5601%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (25 samples, 1.92%)</title><rect x="31.2356%" y="789" width="1.9186%" height="15" fill="rgb(240,179,47)"/><text x="31.4856%" y="799.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (24 samples, 1.84%)</title><rect x="31.3124%" y="773" width="1.8419%" height="15" fill="rgb(240,163,11)"/><text x="31.5624%" y="783.50">a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (24 samples, 1.84%)</title><rect x="31.3124%" y="757" width="1.8419%" height="15" fill="rgb(236,37,12)"/><text x="31.5624%" y="767.50">&lt;..</text></g><g><title>__memmove_avx_unaligned_erms (9 samples, 0.69%)</title><rect x="32.4635%" y="741" width="0.6907%" height="15" fill="rgb(232,164,16)"/><text x="32.7135%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (27 samples, 2.07%)</title><rect x="31.1589%" y="805" width="2.0721%" height="15" fill="rgb(244,205,15)"/><text x="31.4089%" y="815.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.15%)</title><rect x="33.2310%" y="805" width="0.1535%" height="15" fill="rgb(223,117,47)"/><text x="33.4810%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="33.2310%" y="789" width="0.1535%" height="15" fill="rgb(244,107,35)"/><text x="33.4810%" y="799.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="33.2310%" y="773" width="0.1535%" height="15" fill="rgb(205,140,8)"/><text x="33.4810%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="33.2310%" y="757" width="0.1535%" height="15" fill="rgb(228,84,46)"/><text x="33.4810%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="33.2310%" y="741" width="0.1535%" height="15" fill="rgb(254,188,9)"/><text x="33.4810%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.15%)</title><rect x="33.2310%" y="725" width="0.1535%" height="15" fill="rgb(206,112,54)"/><text x="33.4810%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.15%)</title><rect x="33.2310%" y="709" width="0.1535%" height="15" fill="rgb(216,84,49)"/><text x="33.4810%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.15%)</title><rect x="33.2310%" y="693" width="0.1535%" height="15" fill="rgb(214,194,35)"/><text x="33.4810%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.15%)</title><rect x="33.2310%" y="677" width="0.1535%" height="15" fill="rgb(249,28,3)"/><text x="33.4810%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.15%)</title><rect x="33.2310%" y="661" width="0.1535%" height="15" fill="rgb(222,56,52)"/><text x="33.4810%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.15%)</title><rect x="33.2310%" y="645" width="0.1535%" height="15" fill="rgb(245,217,50)"/><text x="33.4810%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.15%)</title><rect x="33.2310%" y="629" width="0.1535%" height="15" fill="rgb(213,201,24)"/><text x="33.4810%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.15%)</title><rect x="33.2310%" y="613" width="0.1535%" height="15" fill="rgb(248,116,28)"/><text x="33.4810%" y="623.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.15%)</title><rect x="33.2310%" y="597" width="0.1535%" height="15" fill="rgb(219,72,43)"/><text x="33.4810%" y="607.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.15%)</title><rect x="33.2310%" y="581" width="0.1535%" height="15" fill="rgb(209,138,14)"/><text x="33.4810%" y="591.50"></text></g><g><title>_int_malloc (2 samples, 0.15%)</title><rect x="33.2310%" y="565" width="0.1535%" height="15" fill="rgb(222,18,33)"/><text x="33.4810%" y="575.50"></text></g><g><title>core::fmt::write (3 samples, 0.23%)</title><rect x="33.3845%" y="805" width="0.2302%" height="15" fill="rgb(213,199,7)"/><text x="33.6345%" y="815.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (2 samples, 0.15%)</title><rect x="33.4612%" y="789" width="0.1535%" height="15" fill="rgb(250,110,10)"/><text x="33.7112%" y="799.50"></text></g><g><title>decor::helpers::str_ident_match (3 samples, 0.23%)</title><rect x="33.6915%" y="805" width="0.2302%" height="15" fill="rgb(248,123,6)"/><text x="33.9415%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.23%)</title><rect x="33.6915%" y="789" width="0.2302%" height="15" fill="rgb(206,91,31)"/><text x="33.9415%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.15%)</title><rect x="33.7682%" y="773" width="0.1535%" height="15" fill="rgb(211,154,13)"/><text x="34.0182%" y="783.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.15%)</title><rect x="33.7682%" y="757" width="0.1535%" height="15" fill="rgb(225,148,7)"/><text x="34.0182%" y="767.50"></text></g><g><title>_int_realloc (2 samples, 0.15%)</title><rect x="33.7682%" y="741" width="0.1535%" height="15" fill="rgb(220,160,43)"/><text x="34.0182%" y="751.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (2 samples, 0.15%)</title><rect x="34.0752%" y="677" width="0.1535%" height="15" fill="rgb(213,52,39)"/><text x="34.3252%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (5 samples, 0.38%)</title><rect x="33.9985%" y="709" width="0.3837%" height="15" fill="rgb(243,137,7)"/><text x="34.2485%" y="719.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (5 samples, 0.38%)</title><rect x="33.9985%" y="693" width="0.3837%" height="15" fill="rgb(230,79,13)"/><text x="34.2485%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (2 samples, 0.15%)</title><rect x="34.2287%" y="677" width="0.1535%" height="15" fill="rgb(247,105,23)"/><text x="34.4787%" y="687.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.15%)</title><rect x="34.2287%" y="661" width="0.1535%" height="15" fill="rgb(223,179,41)"/><text x="34.4787%" y="671.50"></text></g><g><title>alloc::fmt::format (6 samples, 0.46%)</title><rect x="33.9985%" y="773" width="0.4605%" height="15" fill="rgb(218,9,34)"/><text x="34.2485%" y="783.50"></text></g><g><title>core::fmt::Write::write_fmt (6 samples, 0.46%)</title><rect x="33.9985%" y="757" width="0.4605%" height="15" fill="rgb(222,106,8)"/><text x="34.2485%" y="767.50"></text></g><g><title>core::fmt::write (6 samples, 0.46%)</title><rect x="33.9985%" y="741" width="0.4605%" height="15" fill="rgb(211,220,0)"/><text x="34.2485%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (6 samples, 0.46%)</title><rect x="33.9985%" y="725" width="0.4605%" height="15" fill="rgb(229,52,16)"/><text x="34.2485%" y="735.50"></text></g><g><title>decor::mv_transformer::MVTransformer::objname_to_mv_string (8 samples, 0.61%)</title><rect x="33.9217%" y="805" width="0.6140%" height="15" fill="rgb(212,155,18)"/><text x="34.1717%" y="815.50"></text></g><g><title>decor::mv_transformer::MVTransformer::idents_to_mv_idents (7 samples, 0.54%)</title><rect x="33.9985%" y="789" width="0.5372%" height="15" fill="rgb(242,21,14)"/><text x="34.2485%" y="799.50"></text></g><g><title>__perf_event_task_sched_out (2 samples, 0.15%)</title><rect x="36.1474%" y="437" width="0.1535%" height="15" fill="rgb(222,19,48)"/><text x="36.3974%" y="447.50"></text></g><g><title>dequeue_task_fair (3 samples, 0.23%)</title><rect x="36.3008%" y="437" width="0.2302%" height="15" fill="rgb(232,45,27)"/><text x="36.5508%" y="447.50"></text></g><g><title>dequeue_entity (3 samples, 0.23%)</title><rect x="36.3008%" y="421" width="0.2302%" height="15" fill="rgb(249,103,42)"/><text x="36.5508%" y="431.50"></text></g><g><title>update_curr (2 samples, 0.15%)</title><rect x="36.3776%" y="405" width="0.1535%" height="15" fill="rgb(246,81,33)"/><text x="36.6276%" y="415.50"></text></g><g><title>psi_task_change (3 samples, 0.23%)</title><rect x="36.7613%" y="437" width="0.2302%" height="15" fill="rgb(252,33,42)"/><text x="37.0113%" y="447.50"></text></g><g><title>psi_group_change (3 samples, 0.23%)</title><rect x="36.7613%" y="421" width="0.2302%" height="15" fill="rgb(209,212,41)"/><text x="37.0113%" y="431.50"></text></g><g><title>record_times (2 samples, 0.15%)</title><rect x="36.8381%" y="405" width="0.1535%" height="15" fill="rgb(207,154,6)"/><text x="37.0881%" y="415.50"></text></g><g><title>sched_clock_cpu (2 samples, 0.15%)</title><rect x="36.8381%" y="389" width="0.1535%" height="15" fill="rgb(223,64,47)"/><text x="37.0881%" y="399.50"></text></g><g><title>sched_clock (2 samples, 0.15%)</title><rect x="36.8381%" y="373" width="0.1535%" height="15" fill="rgb(211,161,38)"/><text x="37.0881%" y="383.50"></text></g><g><title>native_sched_clock (2 samples, 0.15%)</title><rect x="36.8381%" y="357" width="0.1535%" height="15" fill="rgb(219,138,40)"/><text x="37.0881%" y="367.50"></text></g><g><title>sk_wait_data (18 samples, 1.38%)</title><rect x="35.9171%" y="517" width="1.3814%" height="15" fill="rgb(241,228,46)"/><text x="36.1671%" y="527.50"></text></g><g><title>wait_woken (16 samples, 1.23%)</title><rect x="36.0706%" y="501" width="1.2279%" height="15" fill="rgb(223,209,38)"/><text x="36.3206%" y="511.50"></text></g><g><title>schedule_timeout (15 samples, 1.15%)</title><rect x="36.1474%" y="485" width="1.1512%" height="15" fill="rgb(236,164,45)"/><text x="36.3974%" y="495.50"></text></g><g><title>schedule (15 samples, 1.15%)</title><rect x="36.1474%" y="469" width="1.1512%" height="15" fill="rgb(231,15,5)"/><text x="36.3974%" y="479.50"></text></g><g><title>__schedule (15 samples, 1.15%)</title><rect x="36.1474%" y="453" width="1.1512%" height="15" fill="rgb(252,35,15)"/><text x="36.3974%" y="463.50"></text></g><g><title>inet_recvmsg (26 samples, 2.00%)</title><rect x="35.5334%" y="549" width="1.9954%" height="15" fill="rgb(248,181,18)"/><text x="35.7834%" y="559.50">i..</text></g><g><title>tcp_recvmsg (26 samples, 2.00%)</title><rect x="35.5334%" y="533" width="1.9954%" height="15" fill="rgb(233,39,42)"/><text x="35.7834%" y="543.50">t..</text></g><g><title>skb_copy_datagram_iter (3 samples, 0.23%)</title><rect x="37.2985%" y="517" width="0.2302%" height="15" fill="rgb(238,110,33)"/><text x="37.5485%" y="527.50"></text></g><g><title>__skb_datagram_iter (3 samples, 0.23%)</title><rect x="37.2985%" y="501" width="0.2302%" height="15" fill="rgb(233,195,10)"/><text x="37.5485%" y="511.50"></text></g><g><title>simple_copy_to_iter (3 samples, 0.23%)</title><rect x="37.2985%" y="485" width="0.2302%" height="15" fill="rgb(254,105,3)"/><text x="37.5485%" y="495.50"></text></g><g><title>__check_object_size (3 samples, 0.23%)</title><rect x="37.2985%" y="469" width="0.2302%" height="15" fill="rgb(221,225,9)"/><text x="37.5485%" y="479.50"></text></g><g><title>__x64_sys_recvfrom (28 samples, 2.15%)</title><rect x="35.4566%" y="581" width="2.1489%" height="15" fill="rgb(224,227,45)"/><text x="35.7066%" y="591.50">_..</text></g><g><title>__sys_recvfrom (28 samples, 2.15%)</title><rect x="35.4566%" y="565" width="2.1489%" height="15" fill="rgb(229,198,43)"/><text x="35.7066%" y="575.50">_..</text></g><g><title>mysql::conn::Conn::read_packet (36 samples, 2.76%)</title><rect x="34.9194%" y="741" width="2.7629%" height="15" fill="rgb(206,209,35)"/><text x="35.1694%" y="751.50">my..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 2.53%)</title><rect x="35.1497%" y="725" width="2.5326%" height="15" fill="rgb(245,195,53)"/><text x="35.3997%" y="735.50">&lt;m..</text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (32 samples, 2.46%)</title><rect x="35.2264%" y="709" width="2.4559%" height="15" fill="rgb(240,92,26)"/><text x="35.4764%" y="719.50">&lt;s..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (31 samples, 2.38%)</title><rect x="35.3031%" y="693" width="2.3791%" height="15" fill="rgb(207,40,23)"/><text x="35.5531%" y="703.50">&lt;s..</text></g><g><title>std::sys_common::net::TcpStream::read (31 samples, 2.38%)</title><rect x="35.3031%" y="677" width="2.3791%" height="15" fill="rgb(223,111,35)"/><text x="35.5531%" y="687.50">st..</text></g><g><title>std::sys::unix::net::Socket::read (31 samples, 2.38%)</title><rect x="35.3031%" y="661" width="2.3791%" height="15" fill="rgb(229,147,28)"/><text x="35.5531%" y="671.50">st..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (31 samples, 2.38%)</title><rect x="35.3031%" y="645" width="2.3791%" height="15" fill="rgb(211,29,28)"/><text x="35.5531%" y="655.50">st..</text></g><g><title>__libc_recv (30 samples, 2.30%)</title><rect x="35.3799%" y="629" width="2.3024%" height="15" fill="rgb(228,72,33)"/><text x="35.6299%" y="639.50">_..</text></g><g><title>entry_SYSCALL_64 (29 samples, 2.23%)</title><rect x="35.4566%" y="613" width="2.2256%" height="15" fill="rgb(205,214,31)"/><text x="35.7066%" y="623.50">e..</text></g><g><title>do_syscall_64 (29 samples, 2.23%)</title><rect x="35.4566%" y="597" width="2.2256%" height="15" fill="rgb(224,111,15)"/><text x="35.7066%" y="607.50">d..</text></g><g><title>mysql::conn::Conn::handle_result_set (40 samples, 3.07%)</title><rect x="34.6892%" y="757" width="3.0698%" height="15" fill="rgb(253,21,26)"/><text x="34.9392%" y="767.50">mys..</text></g><g><title>__dev_queue_xmit (4 samples, 0.31%)</title><rect x="38.5265%" y="469" width="0.3070%" height="15" fill="rgb(245,139,43)"/><text x="38.7765%" y="479.50"></text></g><g><title>validate_xmit_skb (2 samples, 0.15%)</title><rect x="38.6800%" y="453" width="0.1535%" height="15" fill="rgb(252,170,7)"/><text x="38.9300%" y="463.50"></text></g><g><title>psi_task_change (2 samples, 0.15%)</title><rect x="39.6777%" y="149" width="0.1535%" height="15" fill="rgb(231,118,14)"/><text x="39.9277%" y="159.50"></text></g><g><title>enqueue_task (4 samples, 0.31%)</title><rect x="39.6777%" y="165" width="0.3070%" height="15" fill="rgb(238,83,0)"/><text x="39.9277%" y="175.50"></text></g><g><title>uclamp_rq_inc_id (2 samples, 0.15%)</title><rect x="39.8312%" y="149" width="0.1535%" height="15" fill="rgb(221,39,39)"/><text x="40.0812%" y="159.50"></text></g><g><title>enqueue_task_fair (4 samples, 0.31%)</title><rect x="39.9847%" y="165" width="0.3070%" height="15" fill="rgb(222,119,46)"/><text x="40.2347%" y="175.50"></text></g><g><title>enqueue_entity (4 samples, 0.31%)</title><rect x="39.9847%" y="149" width="0.3070%" height="15" fill="rgb(222,165,49)"/><text x="40.2347%" y="159.50"></text></g><g><title>update_load_avg (3 samples, 0.23%)</title><rect x="40.0614%" y="133" width="0.2302%" height="15" fill="rgb(219,113,52)"/><text x="40.3114%" y="143.50"></text></g><g><title>__update_load_avg_se (2 samples, 0.15%)</title><rect x="40.1381%" y="117" width="0.1535%" height="15" fill="rgb(214,7,15)"/><text x="40.3881%" y="127.50"></text></g><g><title>sock_def_readable (14 samples, 1.07%)</title><rect x="39.5242%" y="245" width="1.0744%" height="15" fill="rgb(235,32,4)"/><text x="39.7742%" y="255.50"></text></g><g><title>__wake_up_common_lock (14 samples, 1.07%)</title><rect x="39.5242%" y="229" width="1.0744%" height="15" fill="rgb(238,90,54)"/><text x="39.7742%" y="239.50"></text></g><g><title>__wake_up_common (13 samples, 1.00%)</title><rect x="39.6009%" y="213" width="0.9977%" height="15" fill="rgb(213,208,19)"/><text x="39.8509%" y="223.50"></text></g><g><title>pollwake (13 samples, 1.00%)</title><rect x="39.6009%" y="197" width="0.9977%" height="15" fill="rgb(233,156,4)"/><text x="39.8509%" y="207.50"></text></g><g><title>try_to_wake_up (12 samples, 0.92%)</title><rect x="39.6777%" y="181" width="0.9210%" height="15" fill="rgb(207,194,5)"/><text x="39.9277%" y="191.50"></text></g><g><title>select_task_rq_fair (3 samples, 0.23%)</title><rect x="40.3684%" y="165" width="0.2302%" height="15" fill="rgb(206,111,30)"/><text x="40.6184%" y="175.50"></text></g><g><title>tcp_ack (5 samples, 0.38%)</title><rect x="40.5986%" y="245" width="0.3837%" height="15" fill="rgb(243,70,54)"/><text x="40.8486%" y="255.50"></text></g><g><title>ip_local_deliver (24 samples, 1.84%)</title><rect x="39.2172%" y="341" width="1.8419%" height="15" fill="rgb(242,28,8)"/><text x="39.4672%" y="351.50">i..</text></g><g><title>ip_local_deliver_finish (23 samples, 1.77%)</title><rect x="39.2939%" y="325" width="1.7652%" height="15" fill="rgb(219,106,18)"/><text x="39.5439%" y="335.50"></text></g><g><title>ip_protocol_deliver_rcu (23 samples, 1.77%)</title><rect x="39.2939%" y="309" width="1.7652%" height="15" fill="rgb(244,222,10)"/><text x="39.5439%" y="319.50"></text></g><g><title>tcp_v4_rcv (22 samples, 1.69%)</title><rect x="39.3707%" y="293" width="1.6884%" height="15" fill="rgb(236,179,52)"/><text x="39.6207%" y="303.50"></text></g><g><title>tcp_v4_do_rcv (21 samples, 1.61%)</title><rect x="39.4474%" y="277" width="1.6117%" height="15" fill="rgb(213,23,39)"/><text x="39.6974%" y="287.50"></text></g><g><title>tcp_rcv_established (21 samples, 1.61%)</title><rect x="39.4474%" y="261" width="1.6117%" height="15" fill="rgb(238,48,10)"/><text x="39.6974%" y="271.50"></text></g><g><title>__netif_receive_skb_one_core (28 samples, 2.15%)</title><rect x="38.9870%" y="373" width="2.1489%" height="15" fill="rgb(251,196,23)"/><text x="39.2370%" y="383.50">_..</text></g><g><title>ip_rcv (25 samples, 1.92%)</title><rect x="39.2172%" y="357" width="1.9186%" height="15" fill="rgb(250,152,24)"/><text x="39.4672%" y="367.50">i..</text></g><g><title>__ip_queue_xmit (38 samples, 2.92%)</title><rect x="38.2962%" y="517" width="2.9163%" height="15" fill="rgb(209,150,17)"/><text x="38.5462%" y="527.50">__..</text></g><g><title>ip_output (37 samples, 2.84%)</title><rect x="38.3730%" y="501" width="2.8396%" height="15" fill="rgb(234,202,34)"/><text x="38.6230%" y="511.50">ip..</text></g><g><title>ip_finish_output2 (37 samples, 2.84%)</title><rect x="38.3730%" y="485" width="2.8396%" height="15" fill="rgb(253,148,53)"/><text x="38.6230%" y="495.50">ip..</text></g><g><title>__local_bh_enable_ip (31 samples, 2.38%)</title><rect x="38.8335%" y="469" width="2.3791%" height="15" fill="rgb(218,129,16)"/><text x="39.0835%" y="479.50">__..</text></g><g><title>do_softirq (31 samples, 2.38%)</title><rect x="38.8335%" y="453" width="2.3791%" height="15" fill="rgb(216,85,19)"/><text x="39.0835%" y="463.50">do..</text></g><g><title>do_softirq_own_stack (31 samples, 2.38%)</title><rect x="38.8335%" y="437" width="2.3791%" height="15" fill="rgb(235,228,7)"/><text x="39.0835%" y="447.50">do..</text></g><g><title>__do_softirq (31 samples, 2.38%)</title><rect x="38.8335%" y="421" width="2.3791%" height="15" fill="rgb(245,175,0)"/><text x="39.0835%" y="431.50">__..</text></g><g><title>net_rx_action (30 samples, 2.30%)</title><rect x="38.9102%" y="405" width="2.3024%" height="15" fill="rgb(208,168,36)"/><text x="39.1602%" y="415.50">n..</text></g><g><title>process_backlog (30 samples, 2.30%)</title><rect x="38.9102%" y="389" width="2.3024%" height="15" fill="rgb(246,171,24)"/><text x="39.1602%" y="399.50">p..</text></g><g><title>__tcp_transmit_skb (40 samples, 3.07%)</title><rect x="38.2195%" y="533" width="3.0698%" height="15" fill="rgb(215,142,24)"/><text x="38.4695%" y="543.50">__t..</text></g><g><title>__tcp_push_pending_frames (42 samples, 3.22%)</title><rect x="38.1427%" y="565" width="3.2233%" height="15" fill="rgb(250,187,7)"/><text x="38.3927%" y="575.50">__t..</text></g><g><title>tcp_write_xmit (42 samples, 3.22%)</title><rect x="38.1427%" y="549" width="3.2233%" height="15" fill="rgb(228,66,33)"/><text x="38.3927%" y="559.50">tcp..</text></g><g><title>sk_stream_alloc_skb (4 samples, 0.31%)</title><rect x="41.3661%" y="565" width="0.3070%" height="15" fill="rgb(234,215,21)"/><text x="41.6161%" y="575.50"></text></g><g><title>__alloc_skb (4 samples, 0.31%)</title><rect x="41.3661%" y="549" width="0.3070%" height="15" fill="rgb(222,191,20)"/><text x="41.6161%" y="559.50"></text></g><g><title>__kmalloc_node_track_caller (3 samples, 0.23%)</title><rect x="41.4428%" y="533" width="0.2302%" height="15" fill="rgb(245,79,54)"/><text x="41.6928%" y="543.50"></text></g><g><title>kmalloc_slab (2 samples, 0.15%)</title><rect x="41.5196%" y="517" width="0.1535%" height="15" fill="rgb(240,10,37)"/><text x="41.7696%" y="527.50"></text></g><g><title>__x64_sys_sendto (50 samples, 3.84%)</title><rect x="37.9125%" y="645" width="3.8373%" height="15" fill="rgb(214,192,32)"/><text x="38.1625%" y="655.50">__x6..</text></g><g><title>__sys_sendto (50 samples, 3.84%)</title><rect x="37.9125%" y="629" width="3.8373%" height="15" fill="rgb(209,36,54)"/><text x="38.1625%" y="639.50">__sy..</text></g><g><title>sock_sendmsg (50 samples, 3.84%)</title><rect x="37.9125%" y="613" width="3.8373%" height="15" fill="rgb(220,10,11)"/><text x="38.1625%" y="623.50">sock..</text></g><g><title>tcp_sendmsg (49 samples, 3.76%)</title><rect x="37.9893%" y="597" width="3.7606%" height="15" fill="rgb(221,106,17)"/><text x="38.2393%" y="607.50">tcp_..</text></g><g><title>tcp_sendmsg_locked (48 samples, 3.68%)</title><rect x="38.0660%" y="581" width="3.6838%" height="15" fill="rgb(251,142,44)"/><text x="38.3160%" y="591.50">tcp_..</text></g><g><title>do_syscall_64 (52 samples, 3.99%)</title><rect x="37.9125%" y="661" width="3.9908%" height="15" fill="rgb(238,13,15)"/><text x="38.1625%" y="671.50">do_s..</text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (97 samples, 7.44%)</title><rect x="34.6124%" y="789" width="7.4444%" height="15" fill="rgb(208,107,27)"/><text x="34.8624%" y="799.50">&lt;mysql::co..</text></g><g><title>mysql::conn::Conn::_query (96 samples, 7.37%)</title><rect x="34.6892%" y="773" width="7.3676%" height="15" fill="rgb(205,136,37)"/><text x="34.9392%" y="783.50">mysql::con..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (56 samples, 4.30%)</title><rect x="37.7590%" y="757" width="4.2978%" height="15" fill="rgb(250,205,27)"/><text x="38.0090%" y="767.50">mysql..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (55 samples, 4.22%)</title><rect x="37.8358%" y="741" width="4.2210%" height="15" fill="rgb(210,80,43)"/><text x="38.0858%" y="751.50">std::..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (55 samples, 4.22%)</title><rect x="37.8358%" y="725" width="4.2210%" height="15" fill="rgb(247,160,36)"/><text x="38.0858%" y="735.50">&lt;std:..</text></g><g><title>std::sys_common::net::TcpStream::write (55 samples, 4.22%)</title><rect x="37.8358%" y="709" width="4.2210%" height="15" fill="rgb(234,13,49)"/><text x="38.0858%" y="719.50">std::..</text></g><g><title>__libc_send (55 samples, 4.22%)</title><rect x="37.8358%" y="693" width="4.2210%" height="15" fill="rgb(234,122,0)"/><text x="38.0858%" y="703.50">__lib..</text></g><g><title>entry_SYSCALL_64 (54 samples, 4.14%)</title><rect x="37.9125%" y="677" width="4.1443%" height="15" fill="rgb(207,146,38)"/><text x="38.1625%" y="687.50">entry..</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.15%)</title><rect x="41.9033%" y="661" width="0.1535%" height="15" fill="rgb(207,177,25)"/><text x="42.1533%" y="671.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.15%)</title><rect x="42.1335%" y="789" width="0.1535%" height="15" fill="rgb(211,178,42)"/><text x="42.3835%" y="799.50"></text></g><g><title>decor::qtcache::QueryCache::insert_uid2gids_for_values (104 samples, 7.98%)</title><rect x="34.5357%" y="805" width="7.9816%" height="15" fill="rgb(230,69,54)"/><text x="34.7857%" y="815.50">decor::qtca..</text></g><g><title>decor::qtcache::QueryCache::insert_gid_into_caches (2 samples, 0.15%)</title><rect x="42.3638%" y="789" width="0.1535%" height="15" fill="rgb(214,135,41)"/><text x="42.6138%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_mut (2 samples, 0.15%)</title><rect x="42.3638%" y="773" width="0.1535%" height="15" fill="rgb(237,67,25)"/><text x="42.6138%" y="783.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3 samples, 0.23%)</title><rect x="42.6708%" y="725" width="0.2302%" height="15" fill="rgb(222,189,50)"/><text x="42.9208%" y="735.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.15%)</title><rect x="42.7475%" y="709" width="0.1535%" height="15" fill="rgb(245,148,34)"/><text x="42.9975%" y="719.50"></text></g><g><title>_int_malloc (2 samples, 0.15%)</title><rect x="42.7475%" y="693" width="0.1535%" height="15" fill="rgb(222,29,6)"/><text x="42.9975%" y="703.50"></text></g><g><title>sk_wait_data (8 samples, 0.61%)</title><rect x="43.3615%" y="517" width="0.6140%" height="15" fill="rgb(221,189,43)"/><text x="43.6115%" y="527.50"></text></g><g><title>wait_woken (7 samples, 0.54%)</title><rect x="43.4382%" y="501" width="0.5372%" height="15" fill="rgb(207,36,27)"/><text x="43.6882%" y="511.50"></text></g><g><title>schedule_timeout (7 samples, 0.54%)</title><rect x="43.4382%" y="485" width="0.5372%" height="15" fill="rgb(217,90,24)"/><text x="43.6882%" y="495.50"></text></g><g><title>schedule (6 samples, 0.46%)</title><rect x="43.5150%" y="469" width="0.4605%" height="15" fill="rgb(224,66,35)"/><text x="43.7650%" y="479.50"></text></g><g><title>__schedule (6 samples, 0.46%)</title><rect x="43.5150%" y="453" width="0.4605%" height="15" fill="rgb(221,13,50)"/><text x="43.7650%" y="463.50"></text></g><g><title>uclamp_rq_dec_id (2 samples, 0.15%)</title><rect x="43.8219%" y="437" width="0.1535%" height="15" fill="rgb(236,68,49)"/><text x="44.0719%" y="447.50"></text></g><g><title>entry_SYSCALL_64 (13 samples, 1.00%)</title><rect x="43.0545%" y="613" width="0.9977%" height="15" fill="rgb(229,146,28)"/><text x="43.3045%" y="623.50"></text></g><g><title>do_syscall_64 (11 samples, 0.84%)</title><rect x="43.2080%" y="597" width="0.8442%" height="15" fill="rgb(225,31,38)"/><text x="43.4580%" y="607.50"></text></g><g><title>__x64_sys_recvfrom (10 samples, 0.77%)</title><rect x="43.2847%" y="581" width="0.7675%" height="15" fill="rgb(250,208,3)"/><text x="43.5347%" y="591.50"></text></g><g><title>__sys_recvfrom (10 samples, 0.77%)</title><rect x="43.2847%" y="565" width="0.7675%" height="15" fill="rgb(246,54,23)"/><text x="43.5347%" y="575.50"></text></g><g><title>inet_recvmsg (10 samples, 0.77%)</title><rect x="43.2847%" y="549" width="0.7675%" height="15" fill="rgb(243,76,11)"/><text x="43.5347%" y="559.50"></text></g><g><title>tcp_recvmsg (9 samples, 0.69%)</title><rect x="43.3615%" y="533" width="0.6907%" height="15" fill="rgb(245,21,50)"/><text x="43.6115%" y="543.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (17 samples, 1.30%)</title><rect x="42.9010%" y="709" width="1.3047%" height="15" fill="rgb(228,9,43)"/><text x="43.1510%" y="719.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (17 samples, 1.30%)</title><rect x="42.9010%" y="693" width="1.3047%" height="15" fill="rgb(208,100,47)"/><text x="43.1510%" y="703.50"></text></g><g><title>std::sys_common::net::TcpStream::read (17 samples, 1.30%)</title><rect x="42.9010%" y="677" width="1.3047%" height="15" fill="rgb(232,26,8)"/><text x="43.1510%" y="687.50"></text></g><g><title>std::sys::unix::net::Socket::read (17 samples, 1.30%)</title><rect x="42.9010%" y="661" width="1.3047%" height="15" fill="rgb(216,166,38)"/><text x="43.1510%" y="671.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (17 samples, 1.30%)</title><rect x="42.9010%" y="645" width="1.3047%" height="15" fill="rgb(251,202,51)"/><text x="43.1510%" y="655.50"></text></g><g><title>__libc_recv (17 samples, 1.30%)</title><rect x="42.9010%" y="629" width="1.3047%" height="15" fill="rgb(254,216,34)"/><text x="43.1510%" y="639.50"></text></g><g><title>syscall_return_via_sysret (2 samples, 0.15%)</title><rect x="44.0522%" y="613" width="0.1535%" height="15" fill="rgb(251,32,27)"/><text x="44.3022%" y="623.50"></text></g><g><title>mysql::conn::Conn::read_packet (21 samples, 1.61%)</title><rect x="42.6708%" y="741" width="1.6117%" height="15" fill="rgb(208,127,28)"/><text x="42.9208%" y="751.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 1.38%)</title><rect x="42.9010%" y="725" width="1.3814%" height="15" fill="rgb(224,137,22)"/><text x="43.1510%" y="735.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (22 samples, 1.69%)</title><rect x="42.6708%" y="757" width="1.6884%" height="15" fill="rgb(254,70,32)"/><text x="42.9208%" y="767.50"></text></g><g><title>netif_rx (2 samples, 0.15%)</title><rect x="45.4336%" y="421" width="0.1535%" height="15" fill="rgb(229,75,37)"/><text x="45.6836%" y="431.50"></text></g><g><title>netif_rx_internal (2 samples, 0.15%)</title><rect x="45.4336%" y="405" width="0.1535%" height="15" fill="rgb(252,64,23)"/><text x="45.6836%" y="415.50"></text></g><g><title>dev_hard_start_xmit (3 samples, 0.23%)</title><rect x="45.4336%" y="453" width="0.2302%" height="15" fill="rgb(232,162,48)"/><text x="45.6836%" y="463.50"></text></g><g><title>loopback_xmit (3 samples, 0.23%)</title><rect x="45.4336%" y="437" width="0.2302%" height="15" fill="rgb(246,160,12)"/><text x="45.6836%" y="447.50"></text></g><g><title>__dev_queue_xmit (6 samples, 0.46%)</title><rect x="45.2801%" y="469" width="0.4605%" height="15" fill="rgb(247,166,0)"/><text x="45.5301%" y="479.50"></text></g><g><title>psi_task_change (3 samples, 0.23%)</title><rect x="46.2778%" y="149" width="0.2302%" height="15" fill="rgb(249,219,21)"/><text x="46.5278%" y="159.50"></text></g><g><title>enqueue_task (5 samples, 0.38%)</title><rect x="46.2778%" y="165" width="0.3837%" height="15" fill="rgb(205,209,3)"/><text x="46.5278%" y="175.50"></text></g><g><title>uclamp_rq_inc_id (2 samples, 0.15%)</title><rect x="46.5081%" y="149" width="0.1535%" height="15" fill="rgb(243,44,1)"/><text x="46.7581%" y="159.50"></text></g><g><title>enqueue_task_fair (3 samples, 0.23%)</title><rect x="46.6616%" y="165" width="0.2302%" height="15" fill="rgb(206,159,16)"/><text x="46.9116%" y="175.50"></text></g><g><title>enqueue_entity (3 samples, 0.23%)</title><rect x="46.6616%" y="149" width="0.2302%" height="15" fill="rgb(244,77,30)"/><text x="46.9116%" y="159.50"></text></g><g><title>update_load_avg (2 samples, 0.15%)</title><rect x="46.7383%" y="133" width="0.1535%" height="15" fill="rgb(218,69,12)"/><text x="46.9883%" y="143.50"></text></g><g><title>__wake_up_common (11 samples, 0.84%)</title><rect x="46.2011%" y="213" width="0.8442%" height="15" fill="rgb(212,87,7)"/><text x="46.4511%" y="223.50"></text></g><g><title>pollwake (11 samples, 0.84%)</title><rect x="46.2011%" y="197" width="0.8442%" height="15" fill="rgb(245,114,25)"/><text x="46.4511%" y="207.50"></text></g><g><title>try_to_wake_up (11 samples, 0.84%)</title><rect x="46.2011%" y="181" width="0.8442%" height="15" fill="rgb(210,61,42)"/><text x="46.4511%" y="191.50"></text></g><g><title>sock_def_readable (13 samples, 1.00%)</title><rect x="46.2011%" y="245" width="0.9977%" height="15" fill="rgb(211,52,33)"/><text x="46.4511%" y="255.50"></text></g><g><title>__wake_up_common_lock (13 samples, 1.00%)</title><rect x="46.2011%" y="229" width="0.9977%" height="15" fill="rgb(234,58,33)"/><text x="46.4511%" y="239.50"></text></g><g><title>_raw_spin_lock_irqsave (2 samples, 0.15%)</title><rect x="47.0453%" y="213" width="0.1535%" height="15" fill="rgb(220,115,36)"/><text x="47.2953%" y="223.50"></text></g><g><title>tcp_ack (3 samples, 0.23%)</title><rect x="47.1988%" y="245" width="0.2302%" height="15" fill="rgb(243,153,54)"/><text x="47.4488%" y="255.50"></text></g><g><title>ip_local_deliver (21 samples, 1.61%)</title><rect x="45.9708%" y="341" width="1.6117%" height="15" fill="rgb(251,47,18)"/><text x="46.2208%" y="351.50"></text></g><g><title>ip_local_deliver_finish (20 samples, 1.53%)</title><rect x="46.0476%" y="325" width="1.5349%" height="15" fill="rgb(242,102,42)"/><text x="46.2976%" y="335.50"></text></g><g><title>ip_protocol_deliver_rcu (20 samples, 1.53%)</title><rect x="46.0476%" y="309" width="1.5349%" height="15" fill="rgb(234,31,38)"/><text x="46.2976%" y="319.50"></text></g><g><title>tcp_v4_rcv (20 samples, 1.53%)</title><rect x="46.0476%" y="293" width="1.5349%" height="15" fill="rgb(221,117,51)"/><text x="46.2976%" y="303.50"></text></g><g><title>tcp_v4_do_rcv (19 samples, 1.46%)</title><rect x="46.1243%" y="277" width="1.4582%" height="15" fill="rgb(212,20,18)"/><text x="46.3743%" y="287.50"></text></g><g><title>tcp_rcv_established (19 samples, 1.46%)</title><rect x="46.1243%" y="261" width="1.4582%" height="15" fill="rgb(245,133,36)"/><text x="46.3743%" y="271.50"></text></g><g><title>__netif_receive_skb_one_core (24 samples, 1.84%)</title><rect x="45.8173%" y="373" width="1.8419%" height="15" fill="rgb(212,6,19)"/><text x="46.0673%" y="383.50">_..</text></g><g><title>ip_rcv (22 samples, 1.69%)</title><rect x="45.9708%" y="357" width="1.6884%" height="15" fill="rgb(218,1,36)"/><text x="46.2208%" y="367.50"></text></g><g><title>ip_finish_output2 (33 samples, 2.53%)</title><rect x="45.2034%" y="485" width="2.5326%" height="15" fill="rgb(246,84,54)"/><text x="45.4534%" y="495.50">ip..</text></g><g><title>__local_bh_enable_ip (26 samples, 2.00%)</title><rect x="45.7406%" y="469" width="1.9954%" height="15" fill="rgb(242,110,6)"/><text x="45.9906%" y="479.50">_..</text></g><g><title>do_softirq (26 samples, 2.00%)</title><rect x="45.7406%" y="453" width="1.9954%" height="15" fill="rgb(214,47,5)"/><text x="45.9906%" y="463.50">d..</text></g><g><title>do_softirq_own_stack (25 samples, 1.92%)</title><rect x="45.8173%" y="437" width="1.9186%" height="15" fill="rgb(218,159,25)"/><text x="46.0673%" y="447.50">d..</text></g><g><title>__do_softirq (25 samples, 1.92%)</title><rect x="45.8173%" y="421" width="1.9186%" height="15" fill="rgb(215,211,28)"/><text x="46.0673%" y="431.50">_..</text></g><g><title>net_rx_action (25 samples, 1.92%)</title><rect x="45.8173%" y="405" width="1.9186%" height="15" fill="rgb(238,59,32)"/><text x="46.0673%" y="415.50">n..</text></g><g><title>process_backlog (25 samples, 1.92%)</title><rect x="45.8173%" y="389" width="1.9186%" height="15" fill="rgb(226,82,3)"/><text x="46.0673%" y="399.50">p..</text></g><g><title>__ip_queue_xmit (37 samples, 2.84%)</title><rect x="44.9731%" y="517" width="2.8396%" height="15" fill="rgb(240,164,32)"/><text x="45.2231%" y="527.50">__..</text></g><g><title>ip_output (35 samples, 2.69%)</title><rect x="45.1266%" y="501" width="2.6861%" height="15" fill="rgb(232,46,7)"/><text x="45.3766%" y="511.50">ip..</text></g><g><title>__tcp_transmit_skb (40 samples, 3.07%)</title><rect x="44.8196%" y="533" width="3.0698%" height="15" fill="rgb(229,129,53)"/><text x="45.0696%" y="543.50">__t..</text></g><g><title>__tcp_push_pending_frames (42 samples, 3.22%)</title><rect x="44.8196%" y="565" width="3.2233%" height="15" fill="rgb(234,188,29)"/><text x="45.0696%" y="575.50">__t..</text></g><g><title>tcp_write_xmit (42 samples, 3.22%)</title><rect x="44.8196%" y="549" width="3.2233%" height="15" fill="rgb(246,141,4)"/><text x="45.0696%" y="559.50">tcp..</text></g><g><title>__kmalloc_node_track_caller (3 samples, 0.23%)</title><rect x="48.1197%" y="533" width="0.2302%" height="15" fill="rgb(229,23,39)"/><text x="48.3697%" y="543.50"></text></g><g><title>sk_stream_alloc_skb (5 samples, 0.38%)</title><rect x="48.1197%" y="565" width="0.3837%" height="15" fill="rgb(206,12,3)"/><text x="48.3697%" y="575.50"></text></g><g><title>__alloc_skb (5 samples, 0.38%)</title><rect x="48.1197%" y="549" width="0.3837%" height="15" fill="rgb(252,226,20)"/><text x="48.3697%" y="559.50"></text></g><g><title>kmem_cache_alloc_node (2 samples, 0.15%)</title><rect x="48.3500%" y="533" width="0.1535%" height="15" fill="rgb(216,123,35)"/><text x="48.6000%" y="543.50"></text></g><g><title>sock_sendmsg (53 samples, 4.07%)</title><rect x="44.5127%" y="613" width="4.0675%" height="15" fill="rgb(212,68,40)"/><text x="44.7627%" y="623.50">sock..</text></g><g><title>tcp_sendmsg (53 samples, 4.07%)</title><rect x="44.5127%" y="597" width="4.0675%" height="15" fill="rgb(254,125,32)"/><text x="44.7627%" y="607.50">tcp_..</text></g><g><title>tcp_sendmsg_locked (51 samples, 3.91%)</title><rect x="44.6662%" y="581" width="3.9140%" height="15" fill="rgb(253,97,22)"/><text x="44.9162%" y="591.50">tcp_..</text></g><g><title>__x64_sys_sendto (54 samples, 4.14%)</title><rect x="44.5127%" y="645" width="4.1443%" height="15" fill="rgb(241,101,14)"/><text x="44.7627%" y="655.50">__x64..</text></g><g><title>__sys_sendto (54 samples, 4.14%)</title><rect x="44.5127%" y="629" width="4.1443%" height="15" fill="rgb(238,103,29)"/><text x="44.7627%" y="639.50">__sys..</text></g><g><title>entry_SYSCALL_64 (58 samples, 4.45%)</title><rect x="44.4359%" y="677" width="4.4513%" height="15" fill="rgb(233,195,47)"/><text x="44.6859%" y="687.50">entry..</text></g><g><title>do_syscall_64 (57 samples, 4.37%)</title><rect x="44.5127%" y="661" width="4.3745%" height="15" fill="rgb(246,218,30)"/><text x="44.7627%" y="671.50">do_sy..</text></g><g><title>syscall_trace_enter (2 samples, 0.15%)</title><rect x="48.7337%" y="645" width="0.1535%" height="15" fill="rgb(219,145,47)"/><text x="48.9837%" y="655.50"></text></g><g><title>__audit_syscall_entry (2 samples, 0.15%)</title><rect x="48.7337%" y="629" width="0.1535%" height="15" fill="rgb(243,12,26)"/><text x="48.9837%" y="639.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query (232 samples, 17.81%)</title><rect x="31.1589%" y="837" width="17.8051%" height="15" fill="rgb(214,87,16)"/><text x="31.4089%" y="847.50">decor::query_transformer::Qu..</text></g><g><title>decor::query_transformer::QueryTransformer::issue_to_dt_and_get_mv_stmt (232 samples, 17.81%)</title><rect x="31.1589%" y="821" width="17.8051%" height="15" fill="rgb(208,99,42)"/><text x="31.4089%" y="831.50">decor::query_transformer::Qu..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (83 samples, 6.37%)</title><rect x="42.5940%" y="805" width="6.3699%" height="15" fill="rgb(253,99,2)"/><text x="42.8440%" y="815.50">mysql::c..</text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (83 samples, 6.37%)</title><rect x="42.5940%" y="789" width="6.3699%" height="15" fill="rgb(220,168,23)"/><text x="42.8440%" y="799.50">&lt;mysql::..</text></g><g><title>mysql::conn::Conn::_query (83 samples, 6.37%)</title><rect x="42.5940%" y="773" width="6.3699%" height="15" fill="rgb(242,38,24)"/><text x="42.8440%" y="783.50">mysql::c..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (60 samples, 4.60%)</title><rect x="44.3592%" y="757" width="4.6048%" height="15" fill="rgb(225,182,9)"/><text x="44.6092%" y="767.50">mysql..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (60 samples, 4.60%)</title><rect x="44.3592%" y="741" width="4.6048%" height="15" fill="rgb(243,178,37)"/><text x="44.6092%" y="751.50">std::..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (60 samples, 4.60%)</title><rect x="44.3592%" y="725" width="4.6048%" height="15" fill="rgb(232,139,19)"/><text x="44.6092%" y="735.50">&lt;std:..</text></g><g><title>std::sys_common::net::TcpStream::write (60 samples, 4.60%)</title><rect x="44.3592%" y="709" width="4.6048%" height="15" fill="rgb(225,201,24)"/><text x="44.6092%" y="719.50">std::..</text></g><g><title>__libc_send (60 samples, 4.60%)</title><rect x="44.3592%" y="693" width="4.6048%" height="15" fill="rgb(221,47,46)"/><text x="44.6092%" y="703.50">__lib..</text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="49.0407%" y="789" width="0.1535%" height="15" fill="rgb(249,23,13)"/><text x="49.2907%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="49.0407%" y="773" width="0.1535%" height="15" fill="rgb(219,9,5)"/><text x="49.2907%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="49.0407%" y="757" width="0.1535%" height="15" fill="rgb(254,171,16)"/><text x="49.2907%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.15%)</title><rect x="49.0407%" y="741" width="0.1535%" height="15" fill="rgb(230,171,20)"/><text x="49.2907%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.15%)</title><rect x="49.0407%" y="725" width="0.1535%" height="15" fill="rgb(210,71,41)"/><text x="49.2907%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.15%)</title><rect x="49.0407%" y="709" width="0.1535%" height="15" fill="rgb(206,173,20)"/><text x="49.2907%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.15%)</title><rect x="49.0407%" y="693" width="0.1535%" height="15" fill="rgb(233,88,34)"/><text x="49.2907%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.15%)</title><rect x="49.0407%" y="677" width="0.1535%" height="15" fill="rgb(223,209,46)"/><text x="49.2907%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.15%)</title><rect x="49.0407%" y="661" width="0.1535%" height="15" fill="rgb(250,43,18)"/><text x="49.2907%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.15%)</title><rect x="49.0407%" y="645" width="0.1535%" height="15" fill="rgb(208,13,10)"/><text x="49.2907%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.15%)</title><rect x="49.0407%" y="629" width="0.1535%" height="15" fill="rgb(212,200,36)"/><text x="49.2907%" y="639.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.15%)</title><rect x="49.0407%" y="613" width="0.1535%" height="15" fill="rgb(225,90,30)"/><text x="49.2907%" y="623.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.15%)</title><rect x="49.5779%" y="773" width="0.1535%" height="15" fill="rgb(236,182,39)"/><text x="49.8279%" y="783.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (8 samples, 0.61%)</title><rect x="49.1942%" y="789" width="0.6140%" height="15" fill="rgb(212,144,35)"/><text x="49.4442%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::parse_object_name (5 samples, 0.38%)</title><rect x="49.8081%" y="789" width="0.3837%" height="15" fill="rgb(228,63,44)"/><text x="50.0581%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::parse_identifier (3 samples, 0.23%)</title><rect x="49.9616%" y="773" width="0.2302%" height="15" fill="rgb(228,109,6)"/><text x="50.2116%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="50.3454%" y="757" width="0.1535%" height="15" fill="rgb(238,117,24)"/><text x="50.5954%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="50.3454%" y="741" width="0.1535%" height="15" fill="rgb(242,26,26)"/><text x="50.5954%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.15%)</title><rect x="50.3454%" y="725" width="0.1535%" height="15" fill="rgb(221,92,48)"/><text x="50.5954%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.15%)</title><rect x="50.3454%" y="709" width="0.1535%" height="15" fill="rgb(209,209,32)"/><text x="50.5954%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.15%)</title><rect x="50.3454%" y="693" width="0.1535%" height="15" fill="rgb(221,70,22)"/><text x="50.5954%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.15%)</title><rect x="50.3454%" y="677" width="0.1535%" height="15" fill="rgb(248,145,5)"/><text x="50.5954%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.15%)</title><rect x="50.3454%" y="661" width="0.1535%" height="15" fill="rgb(226,116,26)"/><text x="50.5954%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.15%)</title><rect x="50.3454%" y="645" width="0.1535%" height="15" fill="rgb(244,5,17)"/><text x="50.5954%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.15%)</title><rect x="50.3454%" y="629" width="0.1535%" height="15" fill="rgb(252,159,33)"/><text x="50.5954%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.15%)</title><rect x="50.3454%" y="613" width="0.1535%" height="15" fill="rgb(206,71,0)"/><text x="50.5954%" y="623.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.15%)</title><rect x="50.3454%" y="597" width="0.1535%" height="15" fill="rgb(233,118,54)"/><text x="50.5954%" y="607.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.15%)</title><rect x="50.3454%" y="581" width="0.1535%" height="15" fill="rgb(234,83,48)"/><text x="50.5954%" y="591.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (3 samples, 0.23%)</title><rect x="50.4988%" y="757" width="0.2302%" height="15" fill="rgb(228,3,54)"/><text x="50.7488%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.23%)</title><rect x="50.4988%" y="741" width="0.2302%" height="15" fill="rgb(226,155,13)"/><text x="50.7488%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.23%)</title><rect x="50.4988%" y="725" width="0.2302%" height="15" fill="rgb(241,28,37)"/><text x="50.7488%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.23%)</title><rect x="50.4988%" y="709" width="0.2302%" height="15" fill="rgb(233,93,10)"/><text x="50.7488%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.23%)</title><rect x="50.4988%" y="693" width="0.2302%" height="15" fill="rgb(225,113,19)"/><text x="50.7488%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.23%)</title><rect x="50.4988%" y="677" width="0.2302%" height="15" fill="rgb(241,2,18)"/><text x="50.7488%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.23%)</title><rect x="50.4988%" y="661" width="0.2302%" height="15" fill="rgb(228,207,21)"/><text x="50.7488%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.23%)</title><rect x="50.4988%" y="645" width="0.2302%" height="15" fill="rgb(213,211,35)"/><text x="50.7488%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.23%)</title><rect x="50.4988%" y="629" width="0.2302%" height="15" fill="rgb(209,83,10)"/><text x="50.7488%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (3 samples, 0.23%)</title><rect x="50.4988%" y="613" width="0.2302%" height="15" fill="rgb(209,164,1)"/><text x="50.7488%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.23%)</title><rect x="50.4988%" y="597" width="0.2302%" height="15" fill="rgb(213,184,43)"/><text x="50.7488%" y="607.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.15%)</title><rect x="50.5756%" y="581" width="0.1535%" height="15" fill="rgb(231,61,34)"/><text x="50.8256%" y="591.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.15%)</title><rect x="50.5756%" y="565" width="0.1535%" height="15" fill="rgb(235,75,3)"/><text x="50.8256%" y="575.50"></text></g><g><title>alloc::string::String::with_capacity (2 samples, 0.15%)</title><rect x="50.7291%" y="741" width="0.1535%" height="15" fill="rgb(220,106,47)"/><text x="50.9791%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.15%)</title><rect x="50.7291%" y="725" width="0.1535%" height="15" fill="rgb(210,196,33)"/><text x="50.9791%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.15%)</title><rect x="50.7291%" y="709" width="0.1535%" height="15" fill="rgb(229,154,42)"/><text x="50.9791%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.15%)</title><rect x="50.7291%" y="693" width="0.1535%" height="15" fill="rgb(228,114,26)"/><text x="50.9791%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.15%)</title><rect x="50.7291%" y="677" width="0.1535%" height="15" fill="rgb(208,144,1)"/><text x="50.9791%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.15%)</title><rect x="50.7291%" y="661" width="0.1535%" height="15" fill="rgb(239,112,37)"/><text x="50.9791%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.15%)</title><rect x="50.7291%" y="645" width="0.1535%" height="15" fill="rgb(210,96,50)"/><text x="50.9791%" y="655.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.15%)</title><rect x="50.7291%" y="629" width="0.1535%" height="15" fill="rgb(222,178,2)"/><text x="50.9791%" y="639.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.15%)</title><rect x="50.7291%" y="613" width="0.1535%" height="15" fill="rgb(226,74,18)"/><text x="50.9791%" y="623.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (27 samples, 2.07%)</title><rect x="49.0407%" y="837" width="2.0721%" height="15" fill="rgb(225,67,54)"/><text x="49.2907%" y="847.50">d..</text></g><g><title>sql_parser::parser::parse_statements (27 samples, 2.07%)</title><rect x="49.0407%" y="821" width="2.0721%" height="15" fill="rgb(251,92,32)"/><text x="49.2907%" y="831.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_statement (27 samples, 2.07%)</title><rect x="49.0407%" y="805" width="2.0721%" height="15" fill="rgb(228,149,22)"/><text x="49.2907%" y="815.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_parenthesized_column_list (12 samples, 0.92%)</title><rect x="50.1919%" y="789" width="0.9210%" height="15" fill="rgb(243,54,13)"/><text x="50.4419%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::parse_identifier (10 samples, 0.77%)</title><rect x="50.3454%" y="773" width="0.7675%" height="15" fill="rgb(243,180,28)"/><text x="50.5954%" y="783.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (5 samples, 0.38%)</title><rect x="50.7291%" y="757" width="0.3837%" height="15" fill="rgb(208,167,24)"/><text x="50.9791%" y="767.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_lower (3 samples, 0.23%)</title><rect x="50.8826%" y="741" width="0.2302%" height="15" fill="rgb(245,73,45)"/><text x="51.1326%" y="751.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (3 samples, 0.23%)</title><rect x="50.8826%" y="725" width="0.2302%" height="15" fill="rgb(237,203,48)"/><text x="51.1326%" y="735.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (3 samples, 0.23%)</title><rect x="50.8826%" y="709" width="0.2302%" height="15" fill="rgb(211,197,16)"/><text x="51.1326%" y="719.50"></text></g><g><title>pick_next_task_fair (2 samples, 0.15%)</title><rect x="51.6500%" y="469" width="0.1535%" height="15" fill="rgb(243,99,51)"/><text x="51.9000%" y="479.50"></text></g><g><title>psi_task_change (2 samples, 0.15%)</title><rect x="51.8035%" y="469" width="0.1535%" height="15" fill="rgb(215,123,29)"/><text x="52.0535%" y="479.50"></text></g><g><title>psi_group_change (2 samples, 0.15%)</title><rect x="51.8035%" y="453" width="0.1535%" height="15" fill="rgb(239,186,37)"/><text x="52.0535%" y="463.50"></text></g><g><title>sk_wait_data (9 samples, 0.69%)</title><rect x="51.3431%" y="549" width="0.6907%" height="15" fill="rgb(252,136,39)"/><text x="51.5931%" y="559.50"></text></g><g><title>wait_woken (6 samples, 0.46%)</title><rect x="51.5733%" y="533" width="0.4605%" height="15" fill="rgb(223,213,32)"/><text x="51.8233%" y="543.50"></text></g><g><title>schedule_timeout (6 samples, 0.46%)</title><rect x="51.5733%" y="517" width="0.4605%" height="15" fill="rgb(233,115,5)"/><text x="51.8233%" y="527.50"></text></g><g><title>schedule (6 samples, 0.46%)</title><rect x="51.5733%" y="501" width="0.4605%" height="15" fill="rgb(207,226,44)"/><text x="51.8233%" y="511.50"></text></g><g><title>__schedule (6 samples, 0.46%)</title><rect x="51.5733%" y="485" width="0.4605%" height="15" fill="rgb(208,126,0)"/><text x="51.8233%" y="495.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (15 samples, 1.15%)</title><rect x="51.2663%" y="741" width="1.1512%" height="15" fill="rgb(244,66,21)"/><text x="51.5163%" y="751.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (15 samples, 1.15%)</title><rect x="51.2663%" y="725" width="1.1512%" height="15" fill="rgb(222,97,12)"/><text x="51.5163%" y="735.50"></text></g><g><title>std::sys_common::net::TcpStream::read (15 samples, 1.15%)</title><rect x="51.2663%" y="709" width="1.1512%" height="15" fill="rgb(219,213,19)"/><text x="51.5163%" y="719.50"></text></g><g><title>std::sys::unix::net::Socket::read (15 samples, 1.15%)</title><rect x="51.2663%" y="693" width="1.1512%" height="15" fill="rgb(252,169,30)"/><text x="51.5163%" y="703.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (15 samples, 1.15%)</title><rect x="51.2663%" y="677" width="1.1512%" height="15" fill="rgb(206,32,51)"/><text x="51.5163%" y="687.50"></text></g><g><title>__libc_recv (15 samples, 1.15%)</title><rect x="51.2663%" y="661" width="1.1512%" height="15" fill="rgb(250,172,42)"/><text x="51.5163%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (15 samples, 1.15%)</title><rect x="51.2663%" y="645" width="1.1512%" height="15" fill="rgb(209,34,43)"/><text x="51.5163%" y="655.50"></text></g><g><title>do_syscall_64 (15 samples, 1.15%)</title><rect x="51.2663%" y="629" width="1.1512%" height="15" fill="rgb(223,11,35)"/><text x="51.5163%" y="639.50"></text></g><g><title>__x64_sys_recvfrom (15 samples, 1.15%)</title><rect x="51.2663%" y="613" width="1.1512%" height="15" fill="rgb(251,219,26)"/><text x="51.5163%" y="623.50"></text></g><g><title>__sys_recvfrom (15 samples, 1.15%)</title><rect x="51.2663%" y="597" width="1.1512%" height="15" fill="rgb(231,119,3)"/><text x="51.5163%" y="607.50"></text></g><g><title>inet_recvmsg (15 samples, 1.15%)</title><rect x="51.2663%" y="581" width="1.1512%" height="15" fill="rgb(216,97,11)"/><text x="51.5163%" y="591.50"></text></g><g><title>tcp_recvmsg (15 samples, 1.15%)</title><rect x="51.2663%" y="565" width="1.1512%" height="15" fill="rgb(223,59,9)"/><text x="51.5163%" y="575.50"></text></g><g><title>skb_copy_datagram_iter (5 samples, 0.38%)</title><rect x="52.0338%" y="549" width="0.3837%" height="15" fill="rgb(233,93,31)"/><text x="52.2838%" y="559.50"></text></g><g><title>__skb_datagram_iter (5 samples, 0.38%)</title><rect x="52.0338%" y="533" width="0.3837%" height="15" fill="rgb(239,81,33)"/><text x="52.2838%" y="543.50"></text></g><g><title>simple_copy_to_iter (3 samples, 0.23%)</title><rect x="52.1873%" y="517" width="0.2302%" height="15" fill="rgb(213,120,34)"/><text x="52.4373%" y="527.50"></text></g><g><title>__check_object_size (3 samples, 0.23%)</title><rect x="52.1873%" y="501" width="0.2302%" height="15" fill="rgb(243,49,53)"/><text x="52.4373%" y="511.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 1.23%)</title><rect x="51.2663%" y="757" width="1.2279%" height="15" fill="rgb(247,216,33)"/><text x="51.5163%" y="767.50"></text></g><g><title>lobsters::main (20 samples, 1.53%)</title><rect x="51.1128%" y="837" width="1.5349%" height="15" fill="rgb(226,26,14)"/><text x="51.3628%" y="847.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (19 samples, 1.46%)</title><rect x="51.1896%" y="821" width="1.4582%" height="15" fill="rgb(215,49,53)"/><text x="51.4396%" y="831.50"></text></g><g><title>mysql::conn::Conn::_query (19 samples, 1.46%)</title><rect x="51.1896%" y="805" width="1.4582%" height="15" fill="rgb(245,162,40)"/><text x="51.4396%" y="815.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (19 samples, 1.46%)</title><rect x="51.1896%" y="789" width="1.4582%" height="15" fill="rgb(229,68,17)"/><text x="51.4396%" y="799.50"></text></g><g><title>mysql::conn::Conn::read_packet (18 samples, 1.38%)</title><rect x="51.2663%" y="773" width="1.3814%" height="15" fill="rgb(213,182,10)"/><text x="51.5163%" y="783.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (3 samples, 0.23%)</title><rect x="52.6477%" y="821" width="0.2302%" height="15" fill="rgb(245,125,30)"/><text x="52.8977%" y="831.50"></text></g><g><title>decor::Shim::create_schema (3 samples, 0.23%)</title><rect x="52.6477%" y="805" width="0.2302%" height="15" fill="rgb(232,202,2)"/><text x="52.8977%" y="815.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query_drop (3 samples, 0.23%)</title><rect x="52.6477%" y="789" width="0.2302%" height="15" fill="rgb(237,140,51)"/><text x="52.8977%" y="799.50"></text></g><g><title>__kfree_skb (2 samples, 0.15%)</title><rect x="53.0315%" y="517" width="0.1535%" height="15" fill="rgb(236,157,25)"/><text x="53.2815%" y="527.50"></text></g><g><title>dequeue_entity (2 samples, 0.15%)</title><rect x="53.4152%" y="421" width="0.1535%" height="15" fill="rgb(219,209,0)"/><text x="53.6652%" y="431.50"></text></g><g><title>update_curr (2 samples, 0.15%)</title><rect x="53.4152%" y="405" width="0.1535%" height="15" fill="rgb(240,116,54)"/><text x="53.6652%" y="415.50"></text></g><g><title>dequeue_task_fair (3 samples, 0.23%)</title><rect x="53.4152%" y="437" width="0.2302%" height="15" fill="rgb(216,10,36)"/><text x="53.6652%" y="447.50"></text></g><g><title>sk_wait_data (7 samples, 0.54%)</title><rect x="53.2617%" y="517" width="0.5372%" height="15" fill="rgb(222,72,44)"/><text x="53.5117%" y="527.50"></text></g><g><title>wait_woken (6 samples, 0.46%)</title><rect x="53.3384%" y="501" width="0.4605%" height="15" fill="rgb(232,159,9)"/><text x="53.5884%" y="511.50"></text></g><g><title>schedule_timeout (6 samples, 0.46%)</title><rect x="53.3384%" y="485" width="0.4605%" height="15" fill="rgb(210,39,32)"/><text x="53.5884%" y="495.50"></text></g><g><title>schedule (6 samples, 0.46%)</title><rect x="53.3384%" y="469" width="0.4605%" height="15" fill="rgb(216,194,45)"/><text x="53.5884%" y="479.50"></text></g><g><title>__schedule (6 samples, 0.46%)</title><rect x="53.3384%" y="453" width="0.4605%" height="15" fill="rgb(218,18,35)"/><text x="53.5884%" y="463.50"></text></g><g><title>finish_task_switch (2 samples, 0.15%)</title><rect x="53.6454%" y="437" width="0.1535%" height="15" fill="rgb(207,83,51)"/><text x="53.8954%" y="447.50"></text></g><g><title>do_syscall_64 (12 samples, 0.92%)</title><rect x="52.9547%" y="597" width="0.9210%" height="15" fill="rgb(225,63,43)"/><text x="53.2047%" y="607.50"></text></g><g><title>__x64_sys_recvfrom (12 samples, 0.92%)</title><rect x="52.9547%" y="581" width="0.9210%" height="15" fill="rgb(207,57,36)"/><text x="53.2047%" y="591.50"></text></g><g><title>__sys_recvfrom (12 samples, 0.92%)</title><rect x="52.9547%" y="565" width="0.9210%" height="15" fill="rgb(216,99,33)"/><text x="53.2047%" y="575.50"></text></g><g><title>inet_recvmsg (12 samples, 0.92%)</title><rect x="52.9547%" y="549" width="0.9210%" height="15" fill="rgb(225,42,16)"/><text x="53.2047%" y="559.50"></text></g><g><title>tcp_recvmsg (12 samples, 0.92%)</title><rect x="52.9547%" y="533" width="0.9210%" height="15" fill="rgb(220,201,45)"/><text x="53.2047%" y="543.50"></text></g><g><title>entry_SYSCALL_64 (13 samples, 1.00%)</title><rect x="52.9547%" y="613" width="0.9977%" height="15" fill="rgb(225,33,4)"/><text x="53.2047%" y="623.50"></text></g><g><title>mysql::conn::Conn::read_packet (15 samples, 1.15%)</title><rect x="52.8780%" y="741" width="1.1512%" height="15" fill="rgb(224,33,50)"/><text x="53.1280%" y="751.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 1.15%)</title><rect x="52.8780%" y="725" width="1.1512%" height="15" fill="rgb(246,198,51)"/><text x="53.1280%" y="735.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (15 samples, 1.15%)</title><rect x="52.8780%" y="709" width="1.1512%" height="15" fill="rgb(205,22,4)"/><text x="53.1280%" y="719.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (15 samples, 1.15%)</title><rect x="52.8780%" y="693" width="1.1512%" height="15" fill="rgb(206,3,8)"/><text x="53.1280%" y="703.50"></text></g><g><title>std::sys_common::net::TcpStream::read (15 samples, 1.15%)</title><rect x="52.8780%" y="677" width="1.1512%" height="15" fill="rgb(251,23,15)"/><text x="53.1280%" y="687.50"></text></g><g><title>std::sys::unix::net::Socket::read (15 samples, 1.15%)</title><rect x="52.8780%" y="661" width="1.1512%" height="15" fill="rgb(252,88,28)"/><text x="53.1280%" y="671.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (15 samples, 1.15%)</title><rect x="52.8780%" y="645" width="1.1512%" height="15" fill="rgb(212,127,14)"/><text x="53.1280%" y="655.50"></text></g><g><title>__libc_recv (15 samples, 1.15%)</title><rect x="52.8780%" y="629" width="1.1512%" height="15" fill="rgb(247,145,37)"/><text x="53.1280%" y="639.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (16 samples, 1.23%)</title><rect x="52.8780%" y="789" width="1.2279%" height="15" fill="rgb(209,117,53)"/><text x="53.1280%" y="799.50"></text></g><g><title>mysql::conn::Conn::_query (16 samples, 1.23%)</title><rect x="52.8780%" y="773" width="1.2279%" height="15" fill="rgb(212,90,42)"/><text x="53.1280%" y="783.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (16 samples, 1.23%)</title><rect x="52.8780%" y="757" width="1.2279%" height="15" fill="rgb(218,164,37)"/><text x="53.1280%" y="767.50"></text></g><g><title>decor::helpers::answer_rows (3 samples, 0.23%)</title><rect x="54.1059%" y="789" width="0.2302%" height="15" fill="rgb(246,65,34)"/><text x="54.3559%" y="799.50"></text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::finish (2 samples, 0.15%)</title><rect x="54.1827%" y="773" width="0.1535%" height="15" fill="rgb(231,100,33)"/><text x="54.4327%" y="783.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.15%)</title><rect x="54.4129%" y="725" width="0.1535%" height="15" fill="rgb(228,126,14)"/><text x="54.6629%" y="735.50"></text></g><g><title>_int_malloc (2 samples, 0.15%)</title><rect x="54.4129%" y="709" width="0.1535%" height="15" fill="rgb(215,173,21)"/><text x="54.6629%" y="719.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.15%)</title><rect x="54.5664%" y="693" width="0.1535%" height="15" fill="rgb(210,6,40)"/><text x="54.8164%" y="703.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.15%)</title><rect x="54.5664%" y="677" width="0.1535%" height="15" fill="rgb(212,48,18)"/><text x="54.8164%" y="687.50"></text></g><g><title>__perf_event_task_sched_out (2 samples, 0.15%)</title><rect x="55.4873%" y="405" width="0.1535%" height="15" fill="rgb(230,214,11)"/><text x="55.7373%" y="415.50"></text></g><g><title>pick_next_task_fair (2 samples, 0.15%)</title><rect x="55.7176%" y="405" width="0.1535%" height="15" fill="rgb(254,105,39)"/><text x="55.9676%" y="415.50"></text></g><g><title>newidle_balance (2 samples, 0.15%)</title><rect x="55.7176%" y="389" width="0.1535%" height="15" fill="rgb(245,158,5)"/><text x="55.9676%" y="399.50"></text></g><g><title>sk_wait_data (9 samples, 0.69%)</title><rect x="55.2571%" y="485" width="0.6907%" height="15" fill="rgb(249,208,11)"/><text x="55.5071%" y="495.50"></text></g><g><title>wait_woken (6 samples, 0.46%)</title><rect x="55.4873%" y="469" width="0.4605%" height="15" fill="rgb(210,39,28)"/><text x="55.7373%" y="479.50"></text></g><g><title>schedule_timeout (6 samples, 0.46%)</title><rect x="55.4873%" y="453" width="0.4605%" height="15" fill="rgb(211,56,53)"/><text x="55.7373%" y="463.50"></text></g><g><title>schedule (6 samples, 0.46%)</title><rect x="55.4873%" y="437" width="0.4605%" height="15" fill="rgb(226,201,30)"/><text x="55.7373%" y="447.50"></text></g><g><title>__schedule (6 samples, 0.46%)</title><rect x="55.4873%" y="421" width="0.4605%" height="15" fill="rgb(239,101,34)"/><text x="55.7373%" y="431.50"></text></g><g><title>do_syscall_64 (17 samples, 1.30%)</title><rect x="54.7966%" y="565" width="1.3047%" height="15" fill="rgb(226,209,5)"/><text x="55.0466%" y="575.50"></text></g><g><title>__x64_sys_recvfrom (17 samples, 1.30%)</title><rect x="54.7966%" y="549" width="1.3047%" height="15" fill="rgb(250,105,47)"/><text x="55.0466%" y="559.50"></text></g><g><title>__sys_recvfrom (17 samples, 1.30%)</title><rect x="54.7966%" y="533" width="1.3047%" height="15" fill="rgb(230,72,3)"/><text x="55.0466%" y="543.50"></text></g><g><title>inet_recvmsg (16 samples, 1.23%)</title><rect x="54.8734%" y="517" width="1.2279%" height="15" fill="rgb(232,218,39)"/><text x="55.1234%" y="527.50"></text></g><g><title>tcp_recvmsg (14 samples, 1.07%)</title><rect x="55.0269%" y="501" width="1.0744%" height="15" fill="rgb(248,166,6)"/><text x="55.2769%" y="511.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (18 samples, 1.38%)</title><rect x="54.7966%" y="677" width="1.3814%" height="15" fill="rgb(247,89,20)"/><text x="55.0466%" y="687.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (18 samples, 1.38%)</title><rect x="54.7966%" y="661" width="1.3814%" height="15" fill="rgb(248,130,54)"/><text x="55.0466%" y="671.50"></text></g><g><title>std::sys_common::net::TcpStream::read (18 samples, 1.38%)</title><rect x="54.7966%" y="645" width="1.3814%" height="15" fill="rgb(234,196,4)"/><text x="55.0466%" y="655.50"></text></g><g><title>std::sys::unix::net::Socket::read (18 samples, 1.38%)</title><rect x="54.7966%" y="629" width="1.3814%" height="15" fill="rgb(250,143,31)"/><text x="55.0466%" y="639.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (18 samples, 1.38%)</title><rect x="54.7966%" y="613" width="1.3814%" height="15" fill="rgb(211,110,34)"/><text x="55.0466%" y="623.50"></text></g><g><title>__libc_recv (18 samples, 1.38%)</title><rect x="54.7966%" y="597" width="1.3814%" height="15" fill="rgb(215,124,48)"/><text x="55.0466%" y="607.50"></text></g><g><title>entry_SYSCALL_64 (18 samples, 1.38%)</title><rect x="54.7966%" y="581" width="1.3814%" height="15" fill="rgb(216,46,13)"/><text x="55.0466%" y="591.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (22 samples, 1.69%)</title><rect x="54.5664%" y="725" width="1.6884%" height="15" fill="rgb(205,184,25)"/><text x="54.8164%" y="735.50"></text></g><g><title>mysql::conn::Conn::read_packet (22 samples, 1.69%)</title><rect x="54.5664%" y="709" width="1.6884%" height="15" fill="rgb(228,1,10)"/><text x="54.8164%" y="719.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 1.53%)</title><rect x="54.7199%" y="693" width="1.5349%" height="15" fill="rgb(213,116,27)"/><text x="54.9699%" y="703.50"></text></g><g><title>import_single_range (2 samples, 0.15%)</title><rect x="56.3315%" y="581" width="0.1535%" height="15" fill="rgb(241,95,50)"/><text x="56.5815%" y="591.50"></text></g><g><title>netif_rx (4 samples, 0.31%)</title><rect x="56.7153%" y="389" width="0.3070%" height="15" fill="rgb(238,48,32)"/><text x="56.9653%" y="399.50"></text></g><g><title>netif_rx_internal (4 samples, 0.31%)</title><rect x="56.7153%" y="373" width="0.3070%" height="15" fill="rgb(235,113,49)"/><text x="56.9653%" y="383.50"></text></g><g><title>ktime_get_with_offset (2 samples, 0.15%)</title><rect x="56.8688%" y="357" width="0.1535%" height="15" fill="rgb(205,127,43)"/><text x="57.1188%" y="367.50"></text></g><g><title>__dev_queue_xmit (6 samples, 0.46%)</title><rect x="56.7153%" y="437" width="0.4605%" height="15" fill="rgb(250,162,2)"/><text x="56.9653%" y="447.50"></text></g><g><title>dev_hard_start_xmit (6 samples, 0.46%)</title><rect x="56.7153%" y="421" width="0.4605%" height="15" fill="rgb(220,13,41)"/><text x="56.9653%" y="431.50"></text></g><g><title>loopback_xmit (6 samples, 0.46%)</title><rect x="56.7153%" y="405" width="0.4605%" height="15" fill="rgb(249,221,25)"/><text x="56.9653%" y="415.50"></text></g><g><title>enqueue_task (2 samples, 0.15%)</title><rect x="57.9432%" y="133" width="0.1535%" height="15" fill="rgb(215,208,19)"/><text x="58.1932%" y="143.50"></text></g><g><title>enqueue_task_fair (2 samples, 0.15%)</title><rect x="58.0967%" y="133" width="0.1535%" height="15" fill="rgb(236,175,2)"/><text x="58.3467%" y="143.50"></text></g><g><title>enqueue_entity (2 samples, 0.15%)</title><rect x="58.0967%" y="117" width="0.1535%" height="15" fill="rgb(241,52,2)"/><text x="58.3467%" y="127.50"></text></g><g><title>sock_def_readable (7 samples, 0.54%)</title><rect x="57.8665%" y="213" width="0.5372%" height="15" fill="rgb(248,140,14)"/><text x="58.1165%" y="223.50"></text></g><g><title>__wake_up_common_lock (6 samples, 0.46%)</title><rect x="57.9432%" y="197" width="0.4605%" height="15" fill="rgb(253,22,42)"/><text x="58.1932%" y="207.50"></text></g><g><title>__wake_up_common (6 samples, 0.46%)</title><rect x="57.9432%" y="181" width="0.4605%" height="15" fill="rgb(234,61,47)"/><text x="58.1932%" y="191.50"></text></g><g><title>pollwake (6 samples, 0.46%)</title><rect x="57.9432%" y="165" width="0.4605%" height="15" fill="rgb(208,226,15)"/><text x="58.1932%" y="175.50"></text></g><g><title>try_to_wake_up (6 samples, 0.46%)</title><rect x="57.9432%" y="149" width="0.4605%" height="15" fill="rgb(217,221,4)"/><text x="58.1932%" y="159.50"></text></g><g><title>update_rq_clock (2 samples, 0.15%)</title><rect x="58.2502%" y="133" width="0.1535%" height="15" fill="rgb(212,174,34)"/><text x="58.5002%" y="143.50"></text></g><g><title>tcp_ack (3 samples, 0.23%)</title><rect x="58.4037%" y="213" width="0.2302%" height="15" fill="rgb(253,83,4)"/><text x="58.6537%" y="223.50"></text></g><g><title>tcp_v4_do_rcv (15 samples, 1.15%)</title><rect x="57.5595%" y="245" width="1.1512%" height="15" fill="rgb(250,195,49)"/><text x="57.8095%" y="255.50"></text></g><g><title>tcp_rcv_established (15 samples, 1.15%)</title><rect x="57.5595%" y="229" width="1.1512%" height="15" fill="rgb(241,192,25)"/><text x="57.8095%" y="239.50"></text></g><g><title>ip_local_deliver (18 samples, 1.38%)</title><rect x="57.4060%" y="309" width="1.3814%" height="15" fill="rgb(208,124,10)"/><text x="57.6560%" y="319.50"></text></g><g><title>ip_local_deliver_finish (18 samples, 1.38%)</title><rect x="57.4060%" y="293" width="1.3814%" height="15" fill="rgb(222,33,0)"/><text x="57.6560%" y="303.50"></text></g><g><title>ip_protocol_deliver_rcu (18 samples, 1.38%)</title><rect x="57.4060%" y="277" width="1.3814%" height="15" fill="rgb(234,209,28)"/><text x="57.6560%" y="287.50"></text></g><g><title>tcp_v4_rcv (18 samples, 1.38%)</title><rect x="57.4060%" y="261" width="1.3814%" height="15" fill="rgb(224,11,23)"/><text x="57.6560%" y="271.50"></text></g><g><title>ip_finish_output2 (30 samples, 2.30%)</title><rect x="56.5618%" y="453" width="2.3024%" height="15" fill="rgb(232,99,1)"/><text x="56.8118%" y="463.50">i..</text></g><g><title>__local_bh_enable_ip (22 samples, 1.69%)</title><rect x="57.1757%" y="437" width="1.6884%" height="15" fill="rgb(237,95,45)"/><text x="57.4257%" y="447.50"></text></g><g><title>do_softirq (22 samples, 1.69%)</title><rect x="57.1757%" y="421" width="1.6884%" height="15" fill="rgb(208,109,11)"/><text x="57.4257%" y="431.50"></text></g><g><title>do_softirq_own_stack (20 samples, 1.53%)</title><rect x="57.3292%" y="405" width="1.5349%" height="15" fill="rgb(216,190,48)"/><text x="57.5792%" y="415.50"></text></g><g><title>__do_softirq (20 samples, 1.53%)</title><rect x="57.3292%" y="389" width="1.5349%" height="15" fill="rgb(251,171,36)"/><text x="57.5792%" y="399.50"></text></g><g><title>net_rx_action (20 samples, 1.53%)</title><rect x="57.3292%" y="373" width="1.5349%" height="15" fill="rgb(230,62,22)"/><text x="57.5792%" y="383.50"></text></g><g><title>process_backlog (20 samples, 1.53%)</title><rect x="57.3292%" y="357" width="1.5349%" height="15" fill="rgb(225,114,35)"/><text x="57.5792%" y="367.50"></text></g><g><title>__netif_receive_skb_one_core (20 samples, 1.53%)</title><rect x="57.3292%" y="341" width="1.5349%" height="15" fill="rgb(215,118,42)"/><text x="57.5792%" y="351.50"></text></g><g><title>ip_rcv (19 samples, 1.46%)</title><rect x="57.4060%" y="325" width="1.4582%" height="15" fill="rgb(243,119,21)"/><text x="57.6560%" y="335.50"></text></g><g><title>__ip_queue_xmit (31 samples, 2.38%)</title><rect x="56.5618%" y="485" width="2.3791%" height="15" fill="rgb(252,177,53)"/><text x="56.8118%" y="495.50">__..</text></g><g><title>ip_output (31 samples, 2.38%)</title><rect x="56.5618%" y="469" width="2.3791%" height="15" fill="rgb(237,209,29)"/><text x="56.8118%" y="479.50">ip..</text></g><g><title>__tcp_transmit_skb (32 samples, 2.46%)</title><rect x="56.5618%" y="501" width="2.4559%" height="15" fill="rgb(212,65,23)"/><text x="56.8118%" y="511.50">__..</text></g><g><title>ktime_get (2 samples, 0.15%)</title><rect x="59.0177%" y="501" width="0.1535%" height="15" fill="rgb(230,222,46)"/><text x="59.2677%" y="511.50"></text></g><g><title>read_tsc (2 samples, 0.15%)</title><rect x="59.0177%" y="485" width="0.1535%" height="15" fill="rgb(215,135,32)"/><text x="59.2677%" y="495.50"></text></g><g><title>__tcp_push_pending_frames (35 samples, 2.69%)</title><rect x="56.5618%" y="533" width="2.6861%" height="15" fill="rgb(246,101,22)"/><text x="56.8118%" y="543.50">__..</text></g><g><title>tcp_write_xmit (35 samples, 2.69%)</title><rect x="56.5618%" y="517" width="2.6861%" height="15" fill="rgb(206,107,13)"/><text x="56.8118%" y="527.50">tc..</text></g><g><title>sock_sendmsg (41 samples, 3.15%)</title><rect x="56.4850%" y="581" width="3.1466%" height="15" fill="rgb(250,100,44)"/><text x="56.7350%" y="591.50">soc..</text></g><g><title>tcp_sendmsg (41 samples, 3.15%)</title><rect x="56.4850%" y="565" width="3.1466%" height="15" fill="rgb(231,147,38)"/><text x="56.7350%" y="575.50">tcp..</text></g><g><title>tcp_sendmsg_locked (41 samples, 3.15%)</title><rect x="56.4850%" y="549" width="3.1466%" height="15" fill="rgb(229,8,40)"/><text x="56.7350%" y="559.50">tcp..</text></g><g><title>tcp_send_mss (2 samples, 0.15%)</title><rect x="59.4781%" y="533" width="0.1535%" height="15" fill="rgb(221,135,30)"/><text x="59.7281%" y="543.50"></text></g><g><title>tcp_current_mss (2 samples, 0.15%)</title><rect x="59.4781%" y="517" width="0.1535%" height="15" fill="rgb(249,193,18)"/><text x="59.7281%" y="527.50"></text></g><g><title>do_syscall_64 (46 samples, 3.53%)</title><rect x="56.2548%" y="629" width="3.5303%" height="15" fill="rgb(209,133,39)"/><text x="56.5048%" y="639.50">do_..</text></g><g><title>__x64_sys_sendto (46 samples, 3.53%)</title><rect x="56.2548%" y="613" width="3.5303%" height="15" fill="rgb(232,100,14)"/><text x="56.5048%" y="623.50">__x..</text></g><g><title>__sys_sendto (46 samples, 3.53%)</title><rect x="56.2548%" y="597" width="3.5303%" height="15" fill="rgb(224,185,1)"/><text x="56.5048%" y="607.50">__s..</text></g><g><title>sockfd_lookup_light (2 samples, 0.15%)</title><rect x="59.6316%" y="581" width="0.1535%" height="15" fill="rgb(223,139,8)"/><text x="59.8816%" y="591.50"></text></g><g><title>__fget_light (2 samples, 0.15%)</title><rect x="59.6316%" y="565" width="0.1535%" height="15" fill="rgb(232,213,38)"/><text x="59.8816%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (49 samples, 3.76%)</title><rect x="56.2548%" y="645" width="3.7606%" height="15" fill="rgb(207,94,22)"/><text x="56.5048%" y="655.50">entr..</text></g><g><title>prepare_exit_to_usermode (3 samples, 0.23%)</title><rect x="59.7851%" y="629" width="0.2302%" height="15" fill="rgb(219,183,54)"/><text x="60.0351%" y="639.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (50 samples, 3.84%)</title><rect x="56.2548%" y="693" width="3.8373%" height="15" fill="rgb(216,185,54)"/><text x="56.5048%" y="703.50">&lt;std..</text></g><g><title>std::sys_common::net::TcpStream::write (50 samples, 3.84%)</title><rect x="56.2548%" y="677" width="3.8373%" height="15" fill="rgb(254,217,39)"/><text x="56.5048%" y="687.50">std:..</text></g><g><title>__libc_send (50 samples, 3.84%)</title><rect x="56.2548%" y="661" width="3.8373%" height="15" fill="rgb(240,178,23)"/><text x="56.5048%" y="671.50">__li..</text></g><g><title>mysql::conn::Conn::start_transaction (76 samples, 5.83%)</title><rect x="54.3361%" y="789" width="5.8327%" height="15" fill="rgb(218,11,47)"/><text x="54.5861%" y="799.50">mysql::..</text></g><g><title>mysql::conn::Conn::_start_transaction (76 samples, 5.83%)</title><rect x="54.3361%" y="773" width="5.8327%" height="15" fill="rgb(218,51,51)"/><text x="54.5861%" y="783.50">mysql::..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (76 samples, 5.83%)</title><rect x="54.3361%" y="757" width="5.8327%" height="15" fill="rgb(238,126,27)"/><text x="54.5861%" y="767.50">mysql::..</text></g><g><title>mysql::conn::Conn::_query (75 samples, 5.76%)</title><rect x="54.4129%" y="741" width="5.7559%" height="15" fill="rgb(249,202,22)"/><text x="54.6629%" y="751.50">mysql::..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (51 samples, 3.91%)</title><rect x="56.2548%" y="725" width="3.9140%" height="15" fill="rgb(254,195,49)"/><text x="56.5048%" y="735.50">mysq..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (51 samples, 3.91%)</title><rect x="56.2548%" y="709" width="3.9140%" height="15" fill="rgb(208,123,14)"/><text x="56.5048%" y="719.50">std:..</text></g><g><title>uclamp_rq_dec_id (3 samples, 0.23%)</title><rect x="60.7061%" y="421" width="0.2302%" height="15" fill="rgb(224,200,8)"/><text x="60.9561%" y="431.50"></text></g><g><title>sk_wait_data (9 samples, 0.69%)</title><rect x="60.3223%" y="501" width="0.6907%" height="15" fill="rgb(217,61,36)"/><text x="60.5723%" y="511.50"></text></g><g><title>wait_woken (6 samples, 0.46%)</title><rect x="60.5526%" y="485" width="0.4605%" height="15" fill="rgb(206,35,45)"/><text x="60.8026%" y="495.50"></text></g><g><title>schedule_timeout (6 samples, 0.46%)</title><rect x="60.5526%" y="469" width="0.4605%" height="15" fill="rgb(217,65,33)"/><text x="60.8026%" y="479.50"></text></g><g><title>schedule (6 samples, 0.46%)</title><rect x="60.5526%" y="453" width="0.4605%" height="15" fill="rgb(222,158,48)"/><text x="60.8026%" y="463.50"></text></g><g><title>__schedule (6 samples, 0.46%)</title><rect x="60.5526%" y="437" width="0.4605%" height="15" fill="rgb(254,2,54)"/><text x="60.8026%" y="447.50"></text></g><g><title>inet_recvmsg (10 samples, 0.77%)</title><rect x="60.3223%" y="533" width="0.7675%" height="15" fill="rgb(250,143,38)"/><text x="60.5723%" y="543.50"></text></g><g><title>tcp_recvmsg (10 samples, 0.77%)</title><rect x="60.3223%" y="517" width="0.7675%" height="15" fill="rgb(248,25,0)"/><text x="60.5723%" y="527.50"></text></g><g><title>__x64_sys_recvfrom (12 samples, 0.92%)</title><rect x="60.3223%" y="565" width="0.9210%" height="15" fill="rgb(206,152,27)"/><text x="60.5723%" y="575.50"></text></g><g><title>__sys_recvfrom (12 samples, 0.92%)</title><rect x="60.3223%" y="549" width="0.9210%" height="15" fill="rgb(240,77,30)"/><text x="60.5723%" y="559.50"></text></g><g><title>do_syscall_64 (13 samples, 1.00%)</title><rect x="60.3223%" y="581" width="0.9977%" height="15" fill="rgb(231,5,3)"/><text x="60.5723%" y="591.50"></text></g><g><title>mysql::conn::Conn::read_packet (15 samples, 1.15%)</title><rect x="60.3223%" y="725" width="1.1512%" height="15" fill="rgb(207,226,32)"/><text x="60.5723%" y="735.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 1.15%)</title><rect x="60.3223%" y="709" width="1.1512%" height="15" fill="rgb(222,207,47)"/><text x="60.5723%" y="719.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (15 samples, 1.15%)</title><rect x="60.3223%" y="693" width="1.1512%" height="15" fill="rgb(229,115,45)"/><text x="60.5723%" y="703.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (15 samples, 1.15%)</title><rect x="60.3223%" y="677" width="1.1512%" height="15" fill="rgb(224,191,6)"/><text x="60.5723%" y="687.50"></text></g><g><title>std::sys_common::net::TcpStream::read (15 samples, 1.15%)</title><rect x="60.3223%" y="661" width="1.1512%" height="15" fill="rgb(230,227,24)"/><text x="60.5723%" y="671.50"></text></g><g><title>std::sys::unix::net::Socket::read (15 samples, 1.15%)</title><rect x="60.3223%" y="645" width="1.1512%" height="15" fill="rgb(228,80,19)"/><text x="60.5723%" y="655.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (15 samples, 1.15%)</title><rect x="60.3223%" y="629" width="1.1512%" height="15" fill="rgb(247,229,0)"/><text x="60.5723%" y="639.50"></text></g><g><title>__libc_recv (15 samples, 1.15%)</title><rect x="60.3223%" y="613" width="1.1512%" height="15" fill="rgb(237,194,15)"/><text x="60.5723%" y="623.50"></text></g><g><title>entry_SYSCALL_64 (15 samples, 1.15%)</title><rect x="60.3223%" y="597" width="1.1512%" height="15" fill="rgb(219,203,20)"/><text x="60.5723%" y="607.50"></text></g><g><title>prepare_exit_to_usermode (2 samples, 0.15%)</title><rect x="61.3200%" y="581" width="0.1535%" height="15" fill="rgb(234,128,8)"/><text x="61.5700%" y="591.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (18 samples, 1.38%)</title><rect x="60.1688%" y="741" width="1.3814%" height="15" fill="rgb(248,202,8)"/><text x="60.4188%" y="751.50"></text></g><g><title>__dev_queue_xmit (2 samples, 0.15%)</title><rect x="62.0107%" y="453" width="0.1535%" height="15" fill="rgb(206,104,37)"/><text x="62.2607%" y="463.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.15%)</title><rect x="62.0107%" y="437" width="0.1535%" height="15" fill="rgb(223,8,27)"/><text x="62.2607%" y="447.50"></text></g><g><title>loopback_xmit (2 samples, 0.15%)</title><rect x="62.0107%" y="421" width="0.1535%" height="15" fill="rgb(216,217,28)"/><text x="62.2607%" y="431.50"></text></g><g><title>enqueue_task (2 samples, 0.15%)</title><rect x="62.5480%" y="149" width="0.1535%" height="15" fill="rgb(249,199,1)"/><text x="62.7980%" y="159.50"></text></g><g><title>enqueue_task_fair (2 samples, 0.15%)</title><rect x="62.7015%" y="149" width="0.1535%" height="15" fill="rgb(240,85,17)"/><text x="62.9515%" y="159.50"></text></g><g><title>enqueue_entity (2 samples, 0.15%)</title><rect x="62.7015%" y="133" width="0.1535%" height="15" fill="rgb(206,108,45)"/><text x="62.9515%" y="143.50"></text></g><g><title>sock_def_readable (8 samples, 0.61%)</title><rect x="62.4712%" y="229" width="0.6140%" height="15" fill="rgb(245,210,41)"/><text x="62.7212%" y="239.50"></text></g><g><title>__wake_up_common_lock (8 samples, 0.61%)</title><rect x="62.4712%" y="213" width="0.6140%" height="15" fill="rgb(206,13,37)"/><text x="62.7212%" y="223.50"></text></g><g><title>__wake_up_common (8 samples, 0.61%)</title><rect x="62.4712%" y="197" width="0.6140%" height="15" fill="rgb(250,61,18)"/><text x="62.7212%" y="207.50"></text></g><g><title>pollwake (8 samples, 0.61%)</title><rect x="62.4712%" y="181" width="0.6140%" height="15" fill="rgb(235,172,48)"/><text x="62.7212%" y="191.50"></text></g><g><title>try_to_wake_up (8 samples, 0.61%)</title><rect x="62.4712%" y="165" width="0.6140%" height="15" fill="rgb(249,201,17)"/><text x="62.7212%" y="175.50"></text></g><g><title>tcp_ack (3 samples, 0.23%)</title><rect x="63.0852%" y="229" width="0.2302%" height="15" fill="rgb(219,208,6)"/><text x="63.3352%" y="239.50"></text></g><g><title>__tcp_transmit_skb (22 samples, 1.69%)</title><rect x="61.7805%" y="517" width="1.6884%" height="15" fill="rgb(248,31,23)"/><text x="62.0305%" y="527.50"></text></g><g><title>__ip_queue_xmit (21 samples, 1.61%)</title><rect x="61.8573%" y="501" width="1.6117%" height="15" fill="rgb(245,15,42)"/><text x="62.1073%" y="511.50"></text></g><g><title>ip_output (21 samples, 1.61%)</title><rect x="61.8573%" y="485" width="1.6117%" height="15" fill="rgb(222,217,39)"/><text x="62.1073%" y="495.50"></text></g><g><title>ip_finish_output2 (21 samples, 1.61%)</title><rect x="61.8573%" y="469" width="1.6117%" height="15" fill="rgb(210,219,27)"/><text x="62.1073%" y="479.50"></text></g><g><title>__local_bh_enable_ip (17 samples, 1.30%)</title><rect x="62.1642%" y="453" width="1.3047%" height="15" fill="rgb(252,166,36)"/><text x="62.4142%" y="463.50"></text></g><g><title>do_softirq (17 samples, 1.30%)</title><rect x="62.1642%" y="437" width="1.3047%" height="15" fill="rgb(245,132,34)"/><text x="62.4142%" y="447.50"></text></g><g><title>do_softirq_own_stack (16 samples, 1.23%)</title><rect x="62.2410%" y="421" width="1.2279%" height="15" fill="rgb(236,54,3)"/><text x="62.4910%" y="431.50"></text></g><g><title>__do_softirq (16 samples, 1.23%)</title><rect x="62.2410%" y="405" width="1.2279%" height="15" fill="rgb(241,173,43)"/><text x="62.4910%" y="415.50"></text></g><g><title>net_rx_action (15 samples, 1.15%)</title><rect x="62.3177%" y="389" width="1.1512%" height="15" fill="rgb(215,190,9)"/><text x="62.5677%" y="399.50"></text></g><g><title>process_backlog (15 samples, 1.15%)</title><rect x="62.3177%" y="373" width="1.1512%" height="15" fill="rgb(242,101,16)"/><text x="62.5677%" y="383.50"></text></g><g><title>__netif_receive_skb_one_core (15 samples, 1.15%)</title><rect x="62.3177%" y="357" width="1.1512%" height="15" fill="rgb(223,190,21)"/><text x="62.5677%" y="367.50"></text></g><g><title>ip_rcv (15 samples, 1.15%)</title><rect x="62.3177%" y="341" width="1.1512%" height="15" fill="rgb(215,228,25)"/><text x="62.5677%" y="351.50"></text></g><g><title>ip_local_deliver (15 samples, 1.15%)</title><rect x="62.3177%" y="325" width="1.1512%" height="15" fill="rgb(225,36,22)"/><text x="62.5677%" y="335.50"></text></g><g><title>ip_local_deliver_finish (15 samples, 1.15%)</title><rect x="62.3177%" y="309" width="1.1512%" height="15" fill="rgb(251,106,46)"/><text x="62.5677%" y="319.50"></text></g><g><title>ip_protocol_deliver_rcu (15 samples, 1.15%)</title><rect x="62.3177%" y="293" width="1.1512%" height="15" fill="rgb(208,90,1)"/><text x="62.5677%" y="303.50"></text></g><g><title>tcp_v4_rcv (15 samples, 1.15%)</title><rect x="62.3177%" y="277" width="1.1512%" height="15" fill="rgb(243,10,4)"/><text x="62.5677%" y="287.50"></text></g><g><title>tcp_v4_do_rcv (15 samples, 1.15%)</title><rect x="62.3177%" y="261" width="1.1512%" height="15" fill="rgb(212,137,27)"/><text x="62.5677%" y="271.50"></text></g><g><title>tcp_rcv_established (14 samples, 1.07%)</title><rect x="62.3945%" y="245" width="1.0744%" height="15" fill="rgb(231,220,49)"/><text x="62.6445%" y="255.50"></text></g><g><title>tcp_mstamp_refresh (2 samples, 0.15%)</title><rect x="63.3154%" y="229" width="0.1535%" height="15" fill="rgb(237,96,20)"/><text x="63.5654%" y="239.50"></text></g><g><title>__tcp_push_pending_frames (23 samples, 1.77%)</title><rect x="61.7805%" y="549" width="1.7652%" height="15" fill="rgb(239,229,30)"/><text x="62.0305%" y="559.50"></text></g><g><title>tcp_write_xmit (23 samples, 1.77%)</title><rect x="61.7805%" y="533" width="1.7652%" height="15" fill="rgb(219,65,33)"/><text x="62.0305%" y="543.50"></text></g><g><title>do_syscall_64 (28 samples, 2.15%)</title><rect x="61.5503%" y="645" width="2.1489%" height="15" fill="rgb(243,134,7)"/><text x="61.8003%" y="655.50">d..</text></g><g><title>__x64_sys_sendto (28 samples, 2.15%)</title><rect x="61.5503%" y="629" width="2.1489%" height="15" fill="rgb(216,177,54)"/><text x="61.8003%" y="639.50">_..</text></g><g><title>__sys_sendto (28 samples, 2.15%)</title><rect x="61.5503%" y="613" width="2.1489%" height="15" fill="rgb(211,160,20)"/><text x="61.8003%" y="623.50">_..</text></g><g><title>sock_sendmsg (27 samples, 2.07%)</title><rect x="61.6270%" y="597" width="2.0721%" height="15" fill="rgb(239,85,39)"/><text x="61.8770%" y="607.50">s..</text></g><g><title>tcp_sendmsg (27 samples, 2.07%)</title><rect x="61.6270%" y="581" width="2.0721%" height="15" fill="rgb(232,125,22)"/><text x="61.8770%" y="591.50">t..</text></g><g><title>tcp_sendmsg_locked (26 samples, 2.00%)</title><rect x="61.7038%" y="565" width="1.9954%" height="15" fill="rgb(244,57,34)"/><text x="61.9538%" y="575.50">t..</text></g><g><title>entry_SYSCALL_64 (29 samples, 2.23%)</title><rect x="61.5503%" y="661" width="2.2256%" height="15" fill="rgb(214,203,32)"/><text x="61.8003%" y="671.50">e..</text></g><g><title>decor::query_transformer::QueryTransformer::query (143 samples, 10.97%)</title><rect x="52.8780%" y="805" width="10.9747%" height="15" fill="rgb(207,58,43)"/><text x="53.1280%" y="815.50">decor::query_tra..</text></g><g><title>mysql::conn::transaction::Transaction::commit (48 samples, 3.68%)</title><rect x="60.1688%" y="789" width="3.6838%" height="15" fill="rgb(215,193,15)"/><text x="60.4188%" y="799.50">mysq..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (48 samples, 3.68%)</title><rect x="60.1688%" y="773" width="3.6838%" height="15" fill="rgb(232,15,44)"/><text x="60.4188%" y="783.50">mysq..</text></g><g><title>mysql::conn::Conn::_query (48 samples, 3.68%)</title><rect x="60.1688%" y="757" width="3.6838%" height="15" fill="rgb(212,3,48)"/><text x="60.4188%" y="767.50">mysq..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (30 samples, 2.30%)</title><rect x="61.5503%" y="741" width="2.3024%" height="15" fill="rgb(218,128,7)"/><text x="61.8003%" y="751.50">m..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (30 samples, 2.30%)</title><rect x="61.5503%" y="725" width="2.3024%" height="15" fill="rgb(226,216,39)"/><text x="61.8003%" y="735.50">s..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (30 samples, 2.30%)</title><rect x="61.5503%" y="709" width="2.3024%" height="15" fill="rgb(243,47,51)"/><text x="61.8003%" y="719.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::write (30 samples, 2.30%)</title><rect x="61.5503%" y="693" width="2.3024%" height="15" fill="rgb(241,183,40)"/><text x="61.8003%" y="703.50">s..</text></g><g><title>__libc_send (30 samples, 2.30%)</title><rect x="61.5503%" y="677" width="2.3024%" height="15" fill="rgb(231,217,32)"/><text x="61.8003%" y="687.50">_..</text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (3 samples, 0.23%)</title><rect x="63.8526%" y="789" width="0.2302%" height="15" fill="rgb(229,61,38)"/><text x="64.1026%" y="799.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (3 samples, 0.23%)</title><rect x="63.8526%" y="773" width="0.2302%" height="15" fill="rgb(225,210,5)"/><text x="64.1026%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="63.9294%" y="757" width="0.1535%" height="15" fill="rgb(231,79,45)"/><text x="64.1794%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.23%)</title><rect x="64.2364%" y="773" width="0.2302%" height="15" fill="rgb(224,100,7)"/><text x="64.4864%" y="783.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.23%)</title><rect x="64.6969%" y="773" width="0.2302%" height="15" fill="rgb(241,198,18)"/><text x="64.9469%" y="783.50"></text></g><g><title>__GI___libc_free (2 samples, 0.15%)</title><rect x="64.7736%" y="757" width="0.1535%" height="15" fill="rgb(252,97,53)"/><text x="65.0236%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.61%)</title><rect x="65.0806%" y="757" width="0.6140%" height="15" fill="rgb(220,88,7)"/><text x="65.3306%" y="767.50"></text></g><g><title>__GI___libc_realloc (8 samples, 0.61%)</title><rect x="65.0806%" y="741" width="0.6140%" height="15" fill="rgb(213,176,14)"/><text x="65.3306%" y="751.50"></text></g><g><title>_int_realloc (8 samples, 0.61%)</title><rect x="65.0806%" y="725" width="0.6140%" height="15" fill="rgb(246,73,7)"/><text x="65.3306%" y="735.50"></text></g><g><title>_int_malloc (6 samples, 0.46%)</title><rect x="65.2341%" y="709" width="0.4605%" height="15" fill="rgb(245,64,36)"/><text x="65.4841%" y="719.50"></text></g><g><title>sql_parser::tokenizer::PeekableChars::next (2 samples, 0.15%)</title><rect x="66.0015%" y="741" width="0.1535%" height="15" fill="rgb(245,80,10)"/><text x="66.2515%" y="751.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (8 samples, 0.61%)</title><rect x="65.7713%" y="757" width="0.6140%" height="15" fill="rgb(232,107,50)"/><text x="66.0213%" y="767.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_word (2 samples, 0.15%)</title><rect x="66.2318%" y="741" width="0.1535%" height="15" fill="rgb(253,3,0)"/><text x="66.4818%" y="751.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (182 samples, 13.97%)</title><rect x="52.6477%" y="837" width="13.9678%" height="15" fill="rgb(212,99,53)"/><text x="52.8977%" y="847.50">msql_srv::MysqlInterm..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (179 samples, 13.74%)</title><rect x="52.8780%" y="821" width="13.7375%" height="15" fill="rgb(249,111,54)"/><text x="53.1280%" y="831.50">&lt;decor::Shim as msql_..</text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (36 samples, 2.76%)</title><rect x="63.8526%" y="805" width="2.7629%" height="15" fill="rgb(249,55,30)"/><text x="64.1026%" y="815.50">de..</text></g><g><title>sql_parser::parser::parse_statements (33 samples, 2.53%)</title><rect x="64.0829%" y="789" width="2.5326%" height="15" fill="rgb(237,47,42)"/><text x="64.3329%" y="799.50">sq..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (22 samples, 1.69%)</title><rect x="64.9271%" y="773" width="1.6884%" height="15" fill="rgb(211,20,18)"/><text x="65.1771%" y="783.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_number (3 samples, 0.23%)</title><rect x="66.3853%" y="757" width="0.2302%" height="15" fill="rgb(231,203,46)"/><text x="66.6353%" y="767.50"></text></g><g><title>mysql_common::packets::parse_ok_packet (2 samples, 0.15%)</title><rect x="66.6155%" y="837" width="0.1535%" height="15" fill="rgb(237,142,3)"/><text x="66.8655%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (14 samples, 1.07%)</title><rect x="67.2295%" y="725" width="1.0744%" height="15" fill="rgb(241,107,1)"/><text x="67.4795%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (14 samples, 1.07%)</title><rect x="67.2295%" y="709" width="1.0744%" height="15" fill="rgb(229,83,13)"/><text x="67.4795%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (14 samples, 1.07%)</title><rect x="67.2295%" y="693" width="1.0744%" height="15" fill="rgb(241,91,40)"/><text x="67.4795%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (14 samples, 1.07%)</title><rect x="67.2295%" y="677" width="1.0744%" height="15" fill="rgb(225,3,45)"/><text x="67.4795%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (14 samples, 1.07%)</title><rect x="67.2295%" y="661" width="1.0744%" height="15" fill="rgb(244,223,14)"/><text x="67.4795%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (14 samples, 1.07%)</title><rect x="67.2295%" y="645" width="1.0744%" height="15" fill="rgb(224,124,37)"/><text x="67.4795%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (14 samples, 1.07%)</title><rect x="67.2295%" y="629" width="1.0744%" height="15" fill="rgb(251,171,30)"/><text x="67.4795%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (14 samples, 1.07%)</title><rect x="67.2295%" y="613" width="1.0744%" height="15" fill="rgb(236,46,54)"/><text x="67.4795%" y="623.50"></text></g><g><title>__memmove_avx_unaligned_erms (14 samples, 1.07%)</title><rect x="67.2295%" y="597" width="1.0744%" height="15" fill="rgb(245,213,5)"/><text x="67.4795%" y="607.50"></text></g><g><title>_int_free (2 samples, 0.15%)</title><rect x="68.3039%" y="725" width="0.1535%" height="15" fill="rgb(230,144,27)"/><text x="68.5539%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (20 samples, 1.53%)</title><rect x="66.9992%" y="757" width="1.5349%" height="15" fill="rgb(220,86,6)"/><text x="67.2492%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::expected (20 samples, 1.53%)</title><rect x="66.9992%" y="741" width="1.5349%" height="15" fill="rgb(240,20,13)"/><text x="67.2492%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (25 samples, 1.92%)</title><rect x="66.8457%" y="837" width="1.9186%" height="15" fill="rgb(217,89,34)"/><text x="67.0957%" y="847.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_query_body (25 samples, 1.92%)</title><rect x="66.8457%" y="821" width="1.9186%" height="15" fill="rgb(229,13,5)"/><text x="67.0957%" y="831.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (25 samples, 1.92%)</title><rect x="66.8457%" y="805" width="1.9186%" height="15" fill="rgb(244,67,35)"/><text x="67.0957%" y="815.50">s..</text></g><g><title>sql_parser::parser::Parser::check_descent (25 samples, 1.92%)</title><rect x="66.8457%" y="789" width="1.9186%" height="15" fill="rgb(221,40,2)"/><text x="67.0957%" y="799.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_prefix (25 samples, 1.92%)</title><rect x="66.8457%" y="773" width="1.9186%" height="15" fill="rgb(237,157,21)"/><text x="67.0957%" y="783.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_value (3 samples, 0.23%)</title><rect x="68.5342%" y="757" width="0.2302%" height="15" fill="rgb(222,94,11)"/><text x="68.7842%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (2 samples, 0.15%)</title><rect x="68.8411%" y="837" width="0.1535%" height="15" fill="rgb(249,113,6)"/><text x="69.0911%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.23%)</title><rect x="68.9946%" y="741" width="0.2302%" height="15" fill="rgb(238,137,36)"/><text x="69.2446%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.23%)</title><rect x="68.9946%" y="725" width="0.2302%" height="15" fill="rgb(210,102,26)"/><text x="69.2446%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.23%)</title><rect x="68.9946%" y="709" width="0.2302%" height="15" fill="rgb(218,30,30)"/><text x="69.2446%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.23%)</title><rect x="68.9946%" y="693" width="0.2302%" height="15" fill="rgb(214,67,26)"/><text x="69.2446%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.23%)</title><rect x="68.9946%" y="677" width="0.2302%" height="15" fill="rgb(251,9,53)"/><text x="69.2446%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.23%)</title><rect x="68.9946%" y="661" width="0.2302%" height="15" fill="rgb(228,204,25)"/><text x="69.2446%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.23%)</title><rect x="68.9946%" y="645" width="0.2302%" height="15" fill="rgb(207,153,8)"/><text x="69.2446%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.23%)</title><rect x="68.9946%" y="629" width="0.2302%" height="15" fill="rgb(242,9,16)"/><text x="69.2446%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (3 samples, 0.23%)</title><rect x="68.9946%" y="613" width="0.2302%" height="15" fill="rgb(217,211,10)"/><text x="69.2446%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.23%)</title><rect x="68.9946%" y="597" width="0.2302%" height="15" fill="rgb(219,228,52)"/><text x="69.2446%" y="607.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.23%)</title><rect x="68.9946%" y="581" width="0.2302%" height="15" fill="rgb(231,92,29)"/><text x="69.2446%" y="591.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.23%)</title><rect x="68.9946%" y="565" width="0.2302%" height="15" fill="rgb(232,8,23)"/><text x="69.2446%" y="575.50"></text></g><g><title>_int_malloc (3 samples, 0.23%)</title><rect x="68.9946%" y="549" width="0.2302%" height="15" fill="rgb(216,211,34)"/><text x="69.2446%" y="559.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.15%)</title><rect x="69.2249%" y="693" width="0.1535%" height="15" fill="rgb(236,151,0)"/><text x="69.4749%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.15%)</title><rect x="69.2249%" y="677" width="0.1535%" height="15" fill="rgb(209,168,3)"/><text x="69.4749%" y="687.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.15%)</title><rect x="69.2249%" y="661" width="0.1535%" height="15" fill="rgb(208,129,28)"/><text x="69.4749%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.15%)</title><rect x="69.2249%" y="645" width="0.1535%" height="15" fill="rgb(229,78,22)"/><text x="69.4749%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.15%)</title><rect x="69.2249%" y="629" width="0.1535%" height="15" fill="rgb(228,187,13)"/><text x="69.4749%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (2 samples, 0.15%)</title><rect x="69.2249%" y="613" width="0.1535%" height="15" fill="rgb(240,119,24)"/><text x="69.4749%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (2 samples, 0.15%)</title><rect x="69.4551%" y="549" width="0.1535%" height="15" fill="rgb(209,194,42)"/><text x="69.7051%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.15%)</title><rect x="69.4551%" y="533" width="0.1535%" height="15" fill="rgb(247,200,46)"/><text x="69.7051%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (2 samples, 0.15%)</title><rect x="69.4551%" y="517" width="0.1535%" height="15" fill="rgb(218,76,16)"/><text x="69.7051%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.15%)</title><rect x="69.4551%" y="501" width="0.1535%" height="15" fill="rgb(225,21,48)"/><text x="69.7051%" y="511.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::fmt::Display&gt;::fmt (4 samples, 0.31%)</title><rect x="69.3784%" y="693" width="0.3070%" height="15" fill="rgb(239,223,50)"/><text x="69.6284%" y="703.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.23%)</title><rect x="69.4551%" y="677" width="0.2302%" height="15" fill="rgb(244,45,21)"/><text x="69.7051%" y="687.50"></text></g><g><title>core::fmt::write (3 samples, 0.23%)</title><rect x="69.4551%" y="661" width="0.2302%" height="15" fill="rgb(232,33,43)"/><text x="69.7051%" y="671.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.23%)</title><rect x="69.4551%" y="645" width="0.2302%" height="15" fill="rgb(209,8,3)"/><text x="69.7051%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.23%)</title><rect x="69.4551%" y="629" width="0.2302%" height="15" fill="rgb(214,25,53)"/><text x="69.7051%" y="639.50"></text></g><g><title>alloc::string::String::push_str (3 samples, 0.23%)</title><rect x="69.4551%" y="613" width="0.2302%" height="15" fill="rgb(254,186,54)"/><text x="69.7051%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (3 samples, 0.23%)</title><rect x="69.4551%" y="597" width="0.2302%" height="15" fill="rgb(208,174,49)"/><text x="69.7051%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.23%)</title><rect x="69.4551%" y="581" width="0.2302%" height="15" fill="rgb(233,191,51)"/><text x="69.7051%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (3 samples, 0.23%)</title><rect x="69.4551%" y="565" width="0.2302%" height="15" fill="rgb(222,134,10)"/><text x="69.7051%" y="575.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (11 samples, 0.84%)</title><rect x="68.9946%" y="837" width="0.8442%" height="15" fill="rgb(230,226,20)"/><text x="69.2446%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (11 samples, 0.84%)</title><rect x="68.9946%" y="821" width="0.8442%" height="15" fill="rgb(251,111,25)"/><text x="69.2446%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (11 samples, 0.84%)</title><rect x="68.9946%" y="805" width="0.8442%" height="15" fill="rgb(224,40,46)"/><text x="69.2446%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (11 samples, 0.84%)</title><rect x="68.9946%" y="789" width="0.8442%" height="15" fill="rgb(236,108,47)"/><text x="69.2446%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (11 samples, 0.84%)</title><rect x="68.9946%" y="773" width="0.8442%" height="15" fill="rgb(234,93,0)"/><text x="69.2446%" y="783.50"></text></g><g><title>sql_parser::parser::Parser::expected (11 samples, 0.84%)</title><rect x="68.9946%" y="757" width="0.8442%" height="15" fill="rgb(224,213,32)"/><text x="69.2446%" y="767.50"></text></g><g><title>alloc::fmt::format (8 samples, 0.61%)</title><rect x="69.2249%" y="741" width="0.6140%" height="15" fill="rgb(251,11,48)"/><text x="69.4749%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (8 samples, 0.61%)</title><rect x="69.2249%" y="725" width="0.6140%" height="15" fill="rgb(236,173,5)"/><text x="69.4749%" y="735.50"></text></g><g><title>core::fmt::write (8 samples, 0.61%)</title><rect x="69.2249%" y="709" width="0.6140%" height="15" fill="rgb(230,95,12)"/><text x="69.4749%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.31%)</title><rect x="69.9923%" y="773" width="0.3070%" height="15" fill="rgb(232,209,1)"/><text x="70.2423%" y="783.50"></text></g><g><title>__GI___libc_realloc (4 samples, 0.31%)</title><rect x="69.9923%" y="757" width="0.3070%" height="15" fill="rgb(232,6,1)"/><text x="70.2423%" y="767.50"></text></g><g><title>_int_realloc (4 samples, 0.31%)</title><rect x="69.9923%" y="741" width="0.3070%" height="15" fill="rgb(210,224,50)"/><text x="70.2423%" y="751.50"></text></g><g><title>_int_malloc (4 samples, 0.31%)</title><rect x="69.9923%" y="725" width="0.3070%" height="15" fill="rgb(228,127,35)"/><text x="70.2423%" y="735.50"></text></g><g><title>malloc_consolidate (2 samples, 0.15%)</title><rect x="70.1458%" y="709" width="0.1535%" height="15" fill="rgb(245,102,45)"/><text x="70.3958%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (6 samples, 0.46%)</title><rect x="69.9156%" y="789" width="0.4605%" height="15" fill="rgb(214,1,49)"/><text x="70.1656%" y="799.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="70.6063%" y="773" width="0.1535%" height="15" fill="rgb(226,163,40)"/><text x="70.8563%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="70.6063%" y="757" width="0.1535%" height="15" fill="rgb(239,212,28)"/><text x="70.8563%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="70.6063%" y="741" width="0.1535%" height="15" fill="rgb(220,20,13)"/><text x="70.8563%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.15%)</title><rect x="70.6063%" y="725" width="0.1535%" height="15" fill="rgb(210,164,35)"/><text x="70.8563%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.15%)</title><rect x="70.6063%" y="709" width="0.1535%" height="15" fill="rgb(248,109,41)"/><text x="70.8563%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.15%)</title><rect x="70.6063%" y="693" width="0.1535%" height="15" fill="rgb(238,23,50)"/><text x="70.8563%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.15%)</title><rect x="70.6063%" y="677" width="0.1535%" height="15" fill="rgb(211,48,49)"/><text x="70.8563%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.15%)</title><rect x="70.6063%" y="661" width="0.1535%" height="15" fill="rgb(223,36,21)"/><text x="70.8563%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.15%)</title><rect x="70.6063%" y="645" width="0.1535%" height="15" fill="rgb(207,123,46)"/><text x="70.8563%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.15%)</title><rect x="70.6063%" y="629" width="0.1535%" height="15" fill="rgb(240,218,32)"/><text x="70.8563%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.15%)</title><rect x="70.6063%" y="613" width="0.1535%" height="15" fill="rgb(252,5,43)"/><text x="70.8563%" y="623.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.15%)</title><rect x="70.6063%" y="597" width="0.1535%" height="15" fill="rgb(252,84,19)"/><text x="70.8563%" y="607.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.15%)</title><rect x="70.6063%" y="581" width="0.1535%" height="15" fill="rgb(243,152,39)"/><text x="70.8563%" y="591.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (14 samples, 1.07%)</title><rect x="69.8388%" y="837" width="1.0744%" height="15" fill="rgb(234,160,15)"/><text x="70.0888%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (14 samples, 1.07%)</title><rect x="69.8388%" y="821" width="1.0744%" height="15" fill="rgb(237,34,20)"/><text x="70.0888%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (14 samples, 1.07%)</title><rect x="69.8388%" y="805" width="1.0744%" height="15" fill="rgb(229,97,13)"/><text x="70.0888%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (7 samples, 0.54%)</title><rect x="70.3761%" y="789" width="0.5372%" height="15" fill="rgb(234,71,50)"/><text x="70.6261%" y="799.50"></text></g><g><title>sql_parser::parser::parse_statements (14 samples, 1.07%)</title><rect x="70.9133%" y="837" width="1.0744%" height="15" fill="rgb(253,155,4)"/><text x="71.1633%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (14 samples, 1.07%)</title><rect x="70.9133%" y="821" width="1.0744%" height="15" fill="rgb(222,185,37)"/><text x="71.1633%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (14 samples, 1.07%)</title><rect x="70.9133%" y="805" width="1.0744%" height="15" fill="rgb(251,177,13)"/><text x="71.1633%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (13 samples, 1.00%)</title><rect x="70.9900%" y="789" width="0.9977%" height="15" fill="rgb(250,179,40)"/><text x="71.2400%" y="799.50"></text></g><g><title>__memcmp_avx2_movbe (5 samples, 0.38%)</title><rect x="71.6040%" y="773" width="0.3837%" height="15" fill="rgb(242,44,2)"/><text x="71.8540%" y="783.50"></text></g><g><title>sql_parser::tokenizer::PeekableChars::next (2 samples, 0.15%)</title><rect x="71.9877%" y="837" width="0.1535%" height="15" fill="rgb(216,177,13)"/><text x="72.2377%" y="847.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (2 samples, 0.15%)</title><rect x="72.2180%" y="837" width="0.1535%" height="15" fill="rgb(216,106,43)"/><text x="72.4680%" y="847.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.23%)</title><rect x="72.8319%" y="757" width="0.2302%" height="15" fill="rgb(216,183,2)"/><text x="73.0819%" y="767.50"></text></g><g><title>_int_free (2 samples, 0.15%)</title><rect x="72.9087%" y="741" width="0.1535%" height="15" fill="rgb(249,75,3)"/><text x="73.1587%" y="751.50"></text></g><g><title>decor::Shim::run_on_tcp (8 samples, 0.61%)</title><rect x="72.5249%" y="821" width="0.6140%" height="15" fill="rgb(219,67,39)"/><text x="72.7749%" y="831.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (8 samples, 0.61%)</title><rect x="72.5249%" y="805" width="0.6140%" height="15" fill="rgb(253,228,2)"/><text x="72.7749%" y="815.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (8 samples, 0.61%)</title><rect x="72.5249%" y="789" width="0.6140%" height="15" fill="rgb(235,138,27)"/><text x="72.7749%" y="799.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query (8 samples, 0.61%)</title><rect x="72.5249%" y="773" width="0.6140%" height="15" fill="rgb(236,97,51)"/><text x="72.7749%" y="783.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (9 samples, 0.69%)</title><rect x="72.5249%" y="837" width="0.6907%" height="15" fill="rgb(240,80,30)"/><text x="72.7749%" y="847.50"></text></g><g><title>[unknown] (877 samples, 67.31%)</title><rect x="6.0629%" y="853" width="67.3062%" height="15" fill="rgb(230,178,19)"/><text x="6.3129%" y="863.50">[unknown]</text></g><g><title>unlink_chunk.constprop.0 (2 samples, 0.15%)</title><rect x="73.2157%" y="837" width="0.1535%" height="15" fill="rgb(210,190,27)"/><text x="73.4657%" y="847.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (3 samples, 0.23%)</title><rect x="73.5226%" y="709" width="0.2302%" height="15" fill="rgb(222,107,31)"/><text x="73.7726%" y="719.50"></text></g><g><title>decor::Shim::create_schema (2 samples, 0.15%)</title><rect x="73.5994%" y="693" width="0.1535%" height="15" fill="rgb(216,127,34)"/><text x="73.8494%" y="703.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (3 samples, 0.23%)</title><rect x="73.7529%" y="709" width="0.2302%" height="15" fill="rgb(234,116,52)"/><text x="74.0029%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.38%)</title><rect x="73.9831%" y="677" width="0.3837%" height="15" fill="rgb(222,124,15)"/><text x="74.2331%" y="687.50"></text></g><g><title>core::ptr::drop_in_place (5 samples, 0.38%)</title><rect x="73.9831%" y="661" width="0.3837%" height="15" fill="rgb(231,179,28)"/><text x="74.2331%" y="671.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.23%)</title><rect x="74.1366%" y="645" width="0.2302%" height="15" fill="rgb(226,93,45)"/><text x="74.3866%" y="655.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.23%)</title><rect x="74.1366%" y="629" width="0.2302%" height="15" fill="rgb(215,8,51)"/><text x="74.3866%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.23%)</title><rect x="74.1366%" y="613" width="0.2302%" height="15" fill="rgb(223,106,5)"/><text x="74.3866%" y="623.50"></text></g><g><title>core::ptr::drop_in_place (6 samples, 0.46%)</title><rect x="73.9831%" y="709" width="0.4605%" height="15" fill="rgb(250,191,5)"/><text x="74.2331%" y="719.50"></text></g><g><title>core::ptr::drop_in_place (6 samples, 0.46%)</title><rect x="73.9831%" y="693" width="0.4605%" height="15" fill="rgb(242,132,44)"/><text x="74.2331%" y="703.50"></text></g><g><title>import_single_range (2 samples, 0.15%)</title><rect x="74.6738%" y="533" width="0.1535%" height="15" fill="rgb(251,152,29)"/><text x="74.9238%" y="543.50"></text></g><g><title>__netif_receive_skb_one_core (2 samples, 0.15%)</title><rect x="75.0576%" y="341" width="0.1535%" height="15" fill="rgb(218,179,5)"/><text x="75.3076%" y="351.50"></text></g><g><title>ip_rcv (2 samples, 0.15%)</title><rect x="75.0576%" y="325" width="0.1535%" height="15" fill="rgb(227,67,19)"/><text x="75.3076%" y="335.50"></text></g><g><title>ip_local_deliver (2 samples, 0.15%)</title><rect x="75.0576%" y="309" width="0.1535%" height="15" fill="rgb(233,119,31)"/><text x="75.3076%" y="319.50"></text></g><g><title>__tcp_transmit_skb (4 samples, 0.31%)</title><rect x="74.9808%" y="501" width="0.3070%" height="15" fill="rgb(241,120,22)"/><text x="75.2308%" y="511.50"></text></g><g><title>__ip_queue_xmit (4 samples, 0.31%)</title><rect x="74.9808%" y="485" width="0.3070%" height="15" fill="rgb(224,102,30)"/><text x="75.2308%" y="495.50"></text></g><g><title>ip_output (3 samples, 0.23%)</title><rect x="75.0576%" y="469" width="0.2302%" height="15" fill="rgb(210,164,37)"/><text x="75.3076%" y="479.50"></text></g><g><title>ip_finish_output2 (3 samples, 0.23%)</title><rect x="75.0576%" y="453" width="0.2302%" height="15" fill="rgb(226,191,16)"/><text x="75.3076%" y="463.50"></text></g><g><title>__local_bh_enable_ip (3 samples, 0.23%)</title><rect x="75.0576%" y="437" width="0.2302%" height="15" fill="rgb(214,40,45)"/><text x="75.3076%" y="447.50"></text></g><g><title>do_softirq (3 samples, 0.23%)</title><rect x="75.0576%" y="421" width="0.2302%" height="15" fill="rgb(244,29,26)"/><text x="75.3076%" y="431.50"></text></g><g><title>do_softirq_own_stack (3 samples, 0.23%)</title><rect x="75.0576%" y="405" width="0.2302%" height="15" fill="rgb(216,16,5)"/><text x="75.3076%" y="415.50"></text></g><g><title>__do_softirq (3 samples, 0.23%)</title><rect x="75.0576%" y="389" width="0.2302%" height="15" fill="rgb(249,76,35)"/><text x="75.3076%" y="399.50"></text></g><g><title>net_rx_action (3 samples, 0.23%)</title><rect x="75.0576%" y="373" width="0.2302%" height="15" fill="rgb(207,11,44)"/><text x="75.3076%" y="383.50"></text></g><g><title>process_backlog (3 samples, 0.23%)</title><rect x="75.0576%" y="357" width="0.2302%" height="15" fill="rgb(228,190,49)"/><text x="75.3076%" y="367.50"></text></g><g><title>__perf_event_task_sched_out (2 samples, 0.15%)</title><rect x="75.5180%" y="421" width="0.1535%" height="15" fill="rgb(214,173,12)"/><text x="75.7680%" y="431.50"></text></g><g><title>ctx_sched_out (2 samples, 0.15%)</title><rect x="75.5180%" y="405" width="0.1535%" height="15" fill="rgb(218,26,35)"/><text x="75.7680%" y="415.50"></text></g><g><title>dequeue_task_fair (2 samples, 0.15%)</title><rect x="75.6715%" y="421" width="0.1535%" height="15" fill="rgb(220,200,19)"/><text x="75.9215%" y="431.50"></text></g><g><title>dequeue_entity (2 samples, 0.15%)</title><rect x="75.6715%" y="405" width="0.1535%" height="15" fill="rgb(239,95,49)"/><text x="75.9215%" y="415.50"></text></g><g><title>update_curr (2 samples, 0.15%)</title><rect x="75.6715%" y="389" width="0.1535%" height="15" fill="rgb(235,85,53)"/><text x="75.9215%" y="399.50"></text></g><g><title>psi_task_change (3 samples, 0.23%)</title><rect x="75.9018%" y="421" width="0.2302%" height="15" fill="rgb(233,133,31)"/><text x="76.1518%" y="431.50"></text></g><g><title>psi_group_change (3 samples, 0.23%)</title><rect x="75.9018%" y="405" width="0.2302%" height="15" fill="rgb(218,25,20)"/><text x="76.1518%" y="415.50"></text></g><g><title>sk_wait_data (12 samples, 0.92%)</title><rect x="75.2878%" y="501" width="0.9210%" height="15" fill="rgb(252,210,38)"/><text x="75.5378%" y="511.50"></text></g><g><title>wait_woken (11 samples, 0.84%)</title><rect x="75.3645%" y="485" width="0.8442%" height="15" fill="rgb(242,134,21)"/><text x="75.6145%" y="495.50"></text></g><g><title>schedule_timeout (11 samples, 0.84%)</title><rect x="75.3645%" y="469" width="0.8442%" height="15" fill="rgb(213,28,48)"/><text x="75.6145%" y="479.50"></text></g><g><title>schedule (9 samples, 0.69%)</title><rect x="75.5180%" y="453" width="0.6907%" height="15" fill="rgb(250,196,2)"/><text x="75.7680%" y="463.50"></text></g><g><title>__schedule (9 samples, 0.69%)</title><rect x="75.5180%" y="437" width="0.6907%" height="15" fill="rgb(227,5,17)"/><text x="75.7680%" y="447.50"></text></g><g><title>__x64_sys_recvfrom (23 samples, 1.77%)</title><rect x="74.5971%" y="565" width="1.7652%" height="15" fill="rgb(221,226,24)"/><text x="74.8471%" y="575.50"></text></g><g><title>__sys_recvfrom (23 samples, 1.77%)</title><rect x="74.5971%" y="549" width="1.7652%" height="15" fill="rgb(211,5,48)"/><text x="74.8471%" y="559.50"></text></g><g><title>inet_recvmsg (20 samples, 1.53%)</title><rect x="74.8273%" y="533" width="1.5349%" height="15" fill="rgb(219,150,6)"/><text x="75.0773%" y="543.50"></text></g><g><title>tcp_recvmsg (20 samples, 1.53%)</title><rect x="74.8273%" y="517" width="1.5349%" height="15" fill="rgb(251,46,16)"/><text x="75.0773%" y="527.50"></text></g><g><title>msql_srv::packet::PacketReader&lt;R&gt;::next (26 samples, 2.00%)</title><rect x="74.4436%" y="709" width="1.9954%" height="15" fill="rgb(220,204,40)"/><text x="74.6936%" y="719.50">m..</text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (26 samples, 2.00%)</title><rect x="74.4436%" y="693" width="1.9954%" height="15" fill="rgb(211,85,2)"/><text x="74.6936%" y="703.50">&lt;..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (26 samples, 2.00%)</title><rect x="74.4436%" y="677" width="1.9954%" height="15" fill="rgb(229,17,7)"/><text x="74.6936%" y="687.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::read (26 samples, 2.00%)</title><rect x="74.4436%" y="661" width="1.9954%" height="15" fill="rgb(239,72,28)"/><text x="74.6936%" y="671.50">s..</text></g><g><title>std::sys::unix::net::Socket::read (26 samples, 2.00%)</title><rect x="74.4436%" y="645" width="1.9954%" height="15" fill="rgb(230,47,54)"/><text x="74.6936%" y="655.50">s..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (26 samples, 2.00%)</title><rect x="74.4436%" y="629" width="1.9954%" height="15" fill="rgb(214,50,8)"/><text x="74.6936%" y="639.50">s..</text></g><g><title>__libc_recv (26 samples, 2.00%)</title><rect x="74.4436%" y="613" width="1.9954%" height="15" fill="rgb(216,198,43)"/><text x="74.6936%" y="623.50">_..</text></g><g><title>entry_SYSCALL_64 (24 samples, 1.84%)</title><rect x="74.5971%" y="597" width="1.8419%" height="15" fill="rgb(234,20,35)"/><text x="74.8471%" y="607.50">e..</text></g><g><title>do_syscall_64 (24 samples, 1.84%)</title><rect x="74.5971%" y="581" width="1.8419%" height="15" fill="rgb(254,45,19)"/><text x="74.8471%" y="591.50">d..</text></g><g><title>__ip_local_out (2 samples, 0.15%)</title><rect x="76.8227%" y="469" width="0.1535%" height="15" fill="rgb(219,14,44)"/><text x="77.0727%" y="479.50"></text></g><g><title>psi_task_change (2 samples, 0.15%)</title><rect x="77.7437%" y="133" width="0.1535%" height="15" fill="rgb(217,220,26)"/><text x="77.9937%" y="143.50"></text></g><g><title>psi_group_change (2 samples, 0.15%)</title><rect x="77.7437%" y="117" width="0.1535%" height="15" fill="rgb(213,158,28)"/><text x="77.9937%" y="127.50"></text></g><g><title>enqueue_task (3 samples, 0.23%)</title><rect x="77.7437%" y="149" width="0.2302%" height="15" fill="rgb(252,51,52)"/><text x="77.9937%" y="159.50"></text></g><g><title>enqueue_task_fair (3 samples, 0.23%)</title><rect x="77.9739%" y="149" width="0.2302%" height="15" fill="rgb(246,89,16)"/><text x="78.2239%" y="159.50"></text></g><g><title>enqueue_entity (3 samples, 0.23%)</title><rect x="77.9739%" y="133" width="0.2302%" height="15" fill="rgb(216,158,49)"/><text x="78.2239%" y="143.50"></text></g><g><title>sock_def_readable (9 samples, 0.69%)</title><rect x="77.5902%" y="213" width="0.6907%" height="15" fill="rgb(236,107,19)"/><text x="77.8402%" y="223.50"></text></g><g><title>__wake_up_common_lock (9 samples, 0.69%)</title><rect x="77.5902%" y="197" width="0.6907%" height="15" fill="rgb(228,185,30)"/><text x="77.8402%" y="207.50"></text></g><g><title>__wake_up_common (9 samples, 0.69%)</title><rect x="77.5902%" y="181" width="0.6907%" height="15" fill="rgb(246,134,8)"/><text x="77.8402%" y="191.50"></text></g><g><title>try_to_wake_up (9 samples, 0.69%)</title><rect x="77.5902%" y="165" width="0.6907%" height="15" fill="rgb(214,143,50)"/><text x="77.8402%" y="175.50"></text></g><g><title>ip_local_deliver (16 samples, 1.23%)</title><rect x="77.2832%" y="309" width="1.2279%" height="15" fill="rgb(228,75,8)"/><text x="77.5332%" y="319.50"></text></g><g><title>ip_local_deliver_finish (15 samples, 1.15%)</title><rect x="77.3599%" y="293" width="1.1512%" height="15" fill="rgb(207,175,4)"/><text x="77.6099%" y="303.50"></text></g><g><title>ip_protocol_deliver_rcu (15 samples, 1.15%)</title><rect x="77.3599%" y="277" width="1.1512%" height="15" fill="rgb(205,108,24)"/><text x="77.6099%" y="287.50"></text></g><g><title>tcp_v4_rcv (15 samples, 1.15%)</title><rect x="77.3599%" y="261" width="1.1512%" height="15" fill="rgb(244,120,49)"/><text x="77.6099%" y="271.50"></text></g><g><title>tcp_v4_do_rcv (15 samples, 1.15%)</title><rect x="77.3599%" y="245" width="1.1512%" height="15" fill="rgb(223,47,38)"/><text x="77.6099%" y="255.50"></text></g><g><title>tcp_rcv_established (14 samples, 1.07%)</title><rect x="77.4367%" y="229" width="1.0744%" height="15" fill="rgb(229,179,11)"/><text x="77.6867%" y="239.50"></text></g><g><title>tcp_ack (3 samples, 0.23%)</title><rect x="78.2809%" y="213" width="0.2302%" height="15" fill="rgb(231,122,1)"/><text x="78.5309%" y="223.50"></text></g><g><title>ip_finish_output2 (21 samples, 1.61%)</title><rect x="76.9762%" y="453" width="1.6117%" height="15" fill="rgb(245,119,9)"/><text x="77.2262%" y="463.50"></text></g><g><title>__local_bh_enable_ip (19 samples, 1.46%)</title><rect x="77.1297%" y="437" width="1.4582%" height="15" fill="rgb(241,163,25)"/><text x="77.3797%" y="447.50"></text></g><g><title>do_softirq (19 samples, 1.46%)</title><rect x="77.1297%" y="421" width="1.4582%" height="15" fill="rgb(217,214,3)"/><text x="77.3797%" y="431.50"></text></g><g><title>do_softirq_own_stack (19 samples, 1.46%)</title><rect x="77.1297%" y="405" width="1.4582%" height="15" fill="rgb(240,86,28)"/><text x="77.3797%" y="415.50"></text></g><g><title>__do_softirq (19 samples, 1.46%)</title><rect x="77.1297%" y="389" width="1.4582%" height="15" fill="rgb(215,47,9)"/><text x="77.3797%" y="399.50"></text></g><g><title>net_rx_action (19 samples, 1.46%)</title><rect x="77.1297%" y="373" width="1.4582%" height="15" fill="rgb(252,25,45)"/><text x="77.3797%" y="383.50"></text></g><g><title>process_backlog (19 samples, 1.46%)</title><rect x="77.1297%" y="357" width="1.4582%" height="15" fill="rgb(251,164,9)"/><text x="77.3797%" y="367.50"></text></g><g><title>__netif_receive_skb_one_core (18 samples, 1.38%)</title><rect x="77.2064%" y="341" width="1.3814%" height="15" fill="rgb(233,194,0)"/><text x="77.4564%" y="351.50"></text></g><g><title>ip_rcv (17 samples, 1.30%)</title><rect x="77.2832%" y="325" width="1.3047%" height="15" fill="rgb(249,111,24)"/><text x="77.5332%" y="335.50"></text></g><g><title>__ip_queue_xmit (24 samples, 1.84%)</title><rect x="76.8227%" y="485" width="1.8419%" height="15" fill="rgb(250,223,3)"/><text x="77.0727%" y="495.50">_..</text></g><g><title>ip_output (22 samples, 1.69%)</title><rect x="76.9762%" y="469" width="1.6884%" height="15" fill="rgb(236,178,37)"/><text x="77.2262%" y="479.50"></text></g><g><title>__tcp_transmit_skb (29 samples, 2.23%)</title><rect x="76.6692%" y="501" width="2.2256%" height="15" fill="rgb(241,158,50)"/><text x="76.9192%" y="511.50">_..</text></g><g><title>__tcp_push_pending_frames (33 samples, 2.53%)</title><rect x="76.5925%" y="533" width="2.5326%" height="15" fill="rgb(213,121,41)"/><text x="76.8425%" y="543.50">__..</text></g><g><title>tcp_write_xmit (33 samples, 2.53%)</title><rect x="76.5925%" y="517" width="2.5326%" height="15" fill="rgb(240,92,3)"/><text x="76.8425%" y="527.50">tc..</text></g><g><title>tcp_event_new_data_sent (3 samples, 0.23%)</title><rect x="78.8949%" y="501" width="0.2302%" height="15" fill="rgb(205,123,3)"/><text x="79.1449%" y="511.50"></text></g><g><title>sk_stream_alloc_skb (2 samples, 0.15%)</title><rect x="79.1251%" y="533" width="0.1535%" height="15" fill="rgb(205,97,47)"/><text x="79.3751%" y="543.50"></text></g><g><title>__alloc_skb (2 samples, 0.15%)</title><rect x="79.1251%" y="517" width="0.1535%" height="15" fill="rgb(247,152,14)"/><text x="79.3751%" y="527.50"></text></g><g><title>__kmalloc_node_track_caller (2 samples, 0.15%)</title><rect x="79.1251%" y="501" width="0.1535%" height="15" fill="rgb(248,195,53)"/><text x="79.3751%" y="511.50"></text></g><g><title>do_syscall_64 (40 samples, 3.07%)</title><rect x="76.4390%" y="629" width="3.0698%" height="15" fill="rgb(226,201,16)"/><text x="76.6890%" y="639.50">do_..</text></g><g><title>__x64_sys_sendto (40 samples, 3.07%)</title><rect x="76.4390%" y="613" width="3.0698%" height="15" fill="rgb(205,98,0)"/><text x="76.6890%" y="623.50">__x..</text></g><g><title>__sys_sendto (40 samples, 3.07%)</title><rect x="76.4390%" y="597" width="3.0698%" height="15" fill="rgb(214,191,48)"/><text x="76.6890%" y="607.50">__s..</text></g><g><title>sock_sendmsg (40 samples, 3.07%)</title><rect x="76.4390%" y="581" width="3.0698%" height="15" fill="rgb(237,112,39)"/><text x="76.6890%" y="591.50">soc..</text></g><g><title>tcp_sendmsg (40 samples, 3.07%)</title><rect x="76.4390%" y="565" width="3.0698%" height="15" fill="rgb(247,203,27)"/><text x="76.6890%" y="575.50">tcp..</text></g><g><title>tcp_sendmsg_locked (39 samples, 2.99%)</title><rect x="76.5157%" y="549" width="2.9931%" height="15" fill="rgb(235,124,28)"/><text x="76.7657%" y="559.50">tcp..</text></g><g><title>entry_SYSCALL_64 (42 samples, 3.22%)</title><rect x="76.4390%" y="645" width="3.2233%" height="15" fill="rgb(208,207,46)"/><text x="76.6890%" y="655.50">ent..</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.15%)</title><rect x="79.5088%" y="629" width="0.1535%" height="15" fill="rgb(234,176,4)"/><text x="79.7588%" y="639.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (43 samples, 3.30%)</title><rect x="76.4390%" y="693" width="3.3001%" height="15" fill="rgb(230,133,28)"/><text x="76.6890%" y="703.50">&lt;st..</text></g><g><title>std::sys_common::net::TcpStream::write (43 samples, 3.30%)</title><rect x="76.4390%" y="677" width="3.3001%" height="15" fill="rgb(211,137,40)"/><text x="76.6890%" y="687.50">std..</text></g><g><title>__libc_send (43 samples, 3.30%)</title><rect x="76.4390%" y="661" width="3.3001%" height="15" fill="rgb(254,35,13)"/><text x="76.6890%" y="671.50">__l..</text></g><g><title>decor::Shim::run_on_tcp (83 samples, 6.37%)</title><rect x="73.4459%" y="741" width="6.3699%" height="15" fill="rgb(225,49,51)"/><text x="73.6959%" y="751.50">decor::S..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (83 samples, 6.37%)</title><rect x="73.4459%" y="725" width="6.3699%" height="15" fill="rgb(251,10,15)"/><text x="73.6959%" y="735.50">msql_srv..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (44 samples, 3.38%)</title><rect x="76.4390%" y="709" width="3.3768%" height="15" fill="rgb(228,207,15)"/><text x="76.6890%" y="719.50">std..</text></g><g><title>__GI___clone (85 samples, 6.52%)</title><rect x="73.3691%" y="853" width="6.5234%" height="15" fill="rgb(241,99,19)"/><text x="73.6191%" y="863.50">__GI___cl..</text></g><g><title>start_thread (85 samples, 6.52%)</title><rect x="73.3691%" y="837" width="6.5234%" height="15" fill="rgb(207,104,49)"/><text x="73.6191%" y="847.50">start_thr..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (84 samples, 6.45%)</title><rect x="73.4459%" y="821" width="6.4467%" height="15" fill="rgb(234,99,18)"/><text x="73.6959%" y="831.50">std::sys..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (84 samples, 6.45%)</title><rect x="73.4459%" y="805" width="6.4467%" height="15" fill="rgb(213,191,49)"/><text x="73.6959%" y="815.50">&lt;alloc::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (84 samples, 6.45%)</title><rect x="73.4459%" y="789" width="6.4467%" height="15" fill="rgb(210,226,19)"/><text x="73.6959%" y="799.50">&lt;alloc::..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (84 samples, 6.45%)</title><rect x="73.4459%" y="773" width="6.4467%" height="15" fill="rgb(229,97,18)"/><text x="73.6959%" y="783.50">core::op..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (84 samples, 6.45%)</title><rect x="73.4459%" y="757" width="6.4467%" height="15" fill="rgb(211,167,15)"/><text x="73.6959%" y="767.50">std::sys..</text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.23%)</title><rect x="79.9693%" y="597" width="0.2302%" height="15" fill="rgb(210,169,34)"/><text x="80.2193%" y="607.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.23%)</title><rect x="79.9693%" y="581" width="0.2302%" height="15" fill="rgb(241,121,31)"/><text x="80.2193%" y="591.50"></text></g><g><title>__GI___libc_free (2 samples, 0.15%)</title><rect x="80.3530%" y="581" width="0.1535%" height="15" fill="rgb(232,40,11)"/><text x="80.6030%" y="591.50"></text></g><g><title>cpu_stop_queue_work (233 samples, 17.88%)</title><rect x="80.5065%" y="469" width="17.8818%" height="15" fill="rgb(205,86,26)"/><text x="80.7565%" y="479.50">cpu_stop_queue_work</text></g><g><title>preempt_schedule_thunk (233 samples, 17.88%)</title><rect x="80.5065%" y="453" width="17.8818%" height="15" fill="rgb(231,126,28)"/><text x="80.7565%" y="463.50">preempt_schedule_thunk</text></g><g><title>preempt_schedule_common (233 samples, 17.88%)</title><rect x="80.5065%" y="437" width="17.8818%" height="15" fill="rgb(219,221,18)"/><text x="80.7565%" y="447.50">preempt_schedule_common</text></g><g><title>__schedule (233 samples, 17.88%)</title><rect x="80.5065%" y="421" width="17.8818%" height="15" fill="rgb(211,40,0)"/><text x="80.7565%" y="431.50">__schedule</text></g><g><title>finish_task_switch (233 samples, 17.88%)</title><rect x="80.5065%" y="405" width="17.8818%" height="15" fill="rgb(239,85,43)"/><text x="80.7565%" y="415.50">finish_task_switch</text></g><g><title>__perf_event_task_sched_in (229 samples, 17.57%)</title><rect x="80.8135%" y="389" width="17.5748%" height="15" fill="rgb(231,55,21)"/><text x="81.0635%" y="399.50">__perf_event_task_sched_in</text></g><g><title>__intel_pmu_enable_all.constprop.0 (227 samples, 17.42%)</title><rect x="80.9670%" y="373" width="17.4213%" height="15" fill="rgb(225,184,43)"/><text x="81.2170%" y="383.50">__intel_pmu_enable_all.cons..</text></g><g><title>native_write_msr (226 samples, 17.34%)</title><rect x="81.0437%" y="357" width="17.3446%" height="15" fill="rgb(251,158,41)"/><text x="81.2937%" y="367.50">native_write_msr</text></g><g><title>__set_cpus_allowed_ptr (234 samples, 17.96%)</title><rect x="80.5065%" y="501" width="17.9586%" height="15" fill="rgb(234,159,37)"/><text x="80.7565%" y="511.50">__set_cpus_allowed_ptr</text></g><g><title>stop_one_cpu (234 samples, 17.96%)</title><rect x="80.5065%" y="485" width="17.9586%" height="15" fill="rgb(216,204,22)"/><text x="80.7565%" y="495.50">stop_one_cpu</text></g><g><title>entry_SYSCALL_64 (235 samples, 18.04%)</title><rect x="80.5065%" y="565" width="18.0353%" height="15" fill="rgb(214,17,3)"/><text x="80.7565%" y="575.50">entry_SYSCALL_64</text></g><g><title>do_syscall_64 (235 samples, 18.04%)</title><rect x="80.5065%" y="549" width="18.0353%" height="15" fill="rgb(212,111,17)"/><text x="80.7565%" y="559.50">do_syscall_64</text></g><g><title>__x64_sys_sched_setaffinity (235 samples, 18.04%)</title><rect x="80.5065%" y="533" width="18.0353%" height="15" fill="rgb(221,157,24)"/><text x="80.7565%" y="543.50">__x64_sys_sched_setaffinity</text></g><g><title>sched_setaffinity (235 samples, 18.04%)</title><rect x="80.5065%" y="517" width="18.0353%" height="15" fill="rgb(252,16,13)"/><text x="80.7565%" y="527.50">sched_setaffinity</text></g><g><title>__GI___sched_setaffinity_new (236 samples, 18.11%)</title><rect x="80.5065%" y="581" width="18.1120%" height="15" fill="rgb(221,62,2)"/><text x="80.7565%" y="591.50">__GI___sched_setaffinity_new</text></g><g><title>hwloc::Topology::new (244 samples, 18.73%)</title><rect x="79.9693%" y="677" width="18.7260%" height="15" fill="rgb(247,87,22)"/><text x="80.2193%" y="687.50">hwloc::Topology::new</text></g><g><title>hwloc_topology_load (244 samples, 18.73%)</title><rect x="79.9693%" y="661" width="18.7260%" height="15" fill="rgb(215,73,9)"/><text x="80.2193%" y="671.50">hwloc_topology_load</text></g><g><title>[libhwloc.so.15.2.0] (244 samples, 18.73%)</title><rect x="79.9693%" y="645" width="18.7260%" height="15" fill="rgb(207,175,33)"/><text x="80.2193%" y="655.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (244 samples, 18.73%)</title><rect x="79.9693%" y="629" width="18.7260%" height="15" fill="rgb(243,129,54)"/><text x="80.2193%" y="639.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (244 samples, 18.73%)</title><rect x="79.9693%" y="613" width="18.7260%" height="15" fill="rgb(227,119,45)"/><text x="80.2193%" y="623.50">[libhwloc.so.15.2.0]</text></g><g><title>hwloc_linux_set_tid_cpubind (241 samples, 18.50%)</title><rect x="80.1995%" y="597" width="18.4958%" height="15" fill="rgb(205,109,36)"/><text x="80.4495%" y="607.50">hwloc_linux_set_tid_cpubind</text></g><g><title>__libc_start_main (245 samples, 18.80%)</title><rect x="79.9693%" y="837" width="18.8028%" height="15" fill="rgb(205,6,39)"/><text x="80.2193%" y="847.50">__libc_start_main</text></g><g><title>main (245 samples, 18.80%)</title><rect x="79.9693%" y="821" width="18.8028%" height="15" fill="rgb(221,32,16)"/><text x="80.2193%" y="831.50">main</text></g><g><title>std::rt::lang_start_internal (245 samples, 18.80%)</title><rect x="79.9693%" y="805" width="18.8028%" height="15" fill="rgb(228,144,50)"/><text x="80.2193%" y="815.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (245 samples, 18.80%)</title><rect x="79.9693%" y="789" width="18.8028%" height="15" fill="rgb(229,201,53)"/><text x="80.2193%" y="799.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (245 samples, 18.80%)</title><rect x="79.9693%" y="773" width="18.8028%" height="15" fill="rgb(249,153,27)"/><text x="80.2193%" y="783.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (245 samples, 18.80%)</title><rect x="79.9693%" y="757" width="18.8028%" height="15" fill="rgb(227,106,25)"/><text x="80.2193%" y="767.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (245 samples, 18.80%)</title><rect x="79.9693%" y="741" width="18.8028%" height="15" fill="rgb(230,65,29)"/><text x="80.2193%" y="751.50">core::ops::function::impls::&lt;..</text></g><g><title>std::rt::lang_start::_{{closure}} (245 samples, 18.80%)</title><rect x="79.9693%" y="725" width="18.8028%" height="15" fill="rgb(221,57,46)"/><text x="80.2193%" y="735.50">std::rt::lang_start::_{{closu..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (245 samples, 18.80%)</title><rect x="79.9693%" y="709" width="18.8028%" height="15" fill="rgb(229,161,17)"/><text x="80.2193%" y="719.50">std::sys_common::backtrace::_..</text></g><g><title>lobsters::main (245 samples, 18.80%)</title><rect x="79.9693%" y="693" width="18.8028%" height="15" fill="rgb(222,213,11)"/><text x="80.2193%" y="703.50">lobsters::main</text></g><g><title>_start (246 samples, 18.88%)</title><rect x="79.9693%" y="853" width="18.8795%" height="15" fill="rgb(235,35,13)"/><text x="80.2193%" y="863.50">_start</text></g><g><title>anon.144e612f7a92f11708487d2575dcc3d1.3.llvm.9538235009918832389 (2 samples, 0.15%)</title><rect x="98.8488%" y="853" width="0.1535%" height="15" fill="rgb(233,158,34)"/><text x="99.0988%" y="863.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.23%)</title><rect x="99.2325%" y="853" width="0.2302%" height="15" fill="rgb(215,151,48)"/><text x="99.4825%" y="863.50"></text></g><g><title>do_syscall_64 (2 samples, 0.15%)</title><rect x="99.3093%" y="837" width="0.1535%" height="15" fill="rgb(229,84,14)"/><text x="99.5593%" y="847.50"></text></g><g><title>lobsters (1,297 samples, 99.54%)</title><rect x="0.0000%" y="869" width="99.5395%" height="15" fill="rgb(229,68,14)"/><text x="0.2500%" y="879.50">lobsters</text></g><g><title>all (1,303 samples, 100%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(243,106,26)"/><text x="0.2500%" y="895.50"></text></g><g><title>perf (6 samples, 0.46%)</title><rect x="99.5395%" y="869" width="0.4605%" height="15" fill="rgb(206,45,38)"/><text x="99.7895%" y="879.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.46%)</title><rect x="99.5395%" y="853" width="0.4605%" height="15" fill="rgb(226,6,15)"/><text x="99.7895%" y="863.50"></text></g><g><title>do_syscall_64 (6 samples, 0.46%)</title><rect x="99.5395%" y="837" width="0.4605%" height="15" fill="rgb(232,22,54)"/><text x="99.7895%" y="847.50"></text></g><g><title>__x64_sys_execve (6 samples, 0.46%)</title><rect x="99.5395%" y="821" width="0.4605%" height="15" fill="rgb(229,222,32)"/><text x="99.7895%" y="831.50"></text></g><g><title>do_execve (6 samples, 0.46%)</title><rect x="99.5395%" y="805" width="0.4605%" height="15" fill="rgb(228,62,29)"/><text x="99.7895%" y="815.50"></text></g><g><title>__do_execve_file (6 samples, 0.46%)</title><rect x="99.5395%" y="789" width="0.4605%" height="15" fill="rgb(251,103,34)"/><text x="99.7895%" y="799.50"></text></g><g><title>search_binary_handler.part.0 (6 samples, 0.46%)</title><rect x="99.5395%" y="773" width="0.4605%" height="15" fill="rgb(233,12,30)"/><text x="99.7895%" y="783.50"></text></g><g><title>load_elf_binary (6 samples, 0.46%)</title><rect x="99.5395%" y="757" width="0.4605%" height="15" fill="rgb(238,52,0)"/><text x="99.7895%" y="767.50"></text></g><g><title>setup_new_exec (6 samples, 0.46%)</title><rect x="99.5395%" y="741" width="0.4605%" height="15" fill="rgb(223,98,5)"/><text x="99.7895%" y="751.50"></text></g><g><title>perf_event_exec (6 samples, 0.46%)</title><rect x="99.5395%" y="725" width="0.4605%" height="15" fill="rgb(228,75,37)"/><text x="99.7895%" y="735.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.38%)</title><rect x="99.6163%" y="709" width="0.3837%" height="15" fill="rgb(205,115,49)"/><text x="99.8663%" y="719.50"></text></g><g><title>native_write_msr (5 samples, 0.38%)</title><rect x="99.6163%" y="693" width="0.3837%" height="15" fill="rgb(250,154,43)"/><text x="99.8663%" y="703.50"></text></g></svg></svg>