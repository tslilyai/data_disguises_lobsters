<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="854" onload="init(evt)" viewBox="0 0 1200 854" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="854" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="837.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="837.00"> </text><svg id="frames" x="10" width="1180"><g><title>[[heap]] (2 samples, 0.15%)</title><rect x="0.0000%" y="773" width="0.1537%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="783.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.15%)</title><rect x="0.2306%" y="757" width="0.1537%" height="15" fill="rgb(217,0,24)"/><text x="0.4806%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="0.4612%" y="757" width="0.1537%" height="15" fill="rgb(221,193,54)"/><text x="0.7112%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.15%)</title><rect x="0.6149%" y="757" width="0.1537%" height="15" fill="rgb(248,212,6)"/><text x="0.8649%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="0.7686%" y="757" width="0.1537%" height="15" fill="rgb(208,68,35)"/><text x="1.0186%" y="767.50"></text></g><g><title>__rdl_alloc (2 samples, 0.15%)</title><rect x="1.8447%" y="757" width="0.1537%" height="15" fill="rgb(232,128,0)"/><text x="2.0947%" y="767.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.15%)</title><rect x="1.8447%" y="741" width="0.1537%" height="15" fill="rgb(207,160,47)"/><text x="2.0947%" y="751.50"></text></g><g><title>_int_free (5 samples, 0.38%)</title><rect x="1.9985%" y="757" width="0.3843%" height="15" fill="rgb(228,23,34)"/><text x="2.2485%" y="767.50"></text></g><g><title>_int_malloc (2 samples, 0.15%)</title><rect x="2.3828%" y="757" width="0.1537%" height="15" fill="rgb(218,30,26)"/><text x="2.6328%" y="767.50"></text></g><g><title>__libc_recv (2 samples, 0.15%)</title><rect x="2.3828%" y="741" width="0.1537%" height="15" fill="rgb(220,122,19)"/><text x="2.6328%" y="751.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.15%)</title><rect x="2.3828%" y="725" width="0.1537%" height="15" fill="rgb(250,228,42)"/><text x="2.6328%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.23%)</title><rect x="2.6134%" y="757" width="0.2306%" height="15" fill="rgb(240,193,28)"/><text x="2.8634%" y="767.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (5 samples, 0.38%)</title><rect x="2.8440%" y="757" width="0.3843%" height="15" fill="rgb(216,20,37)"/><text x="3.0940%" y="767.50"></text></g><g><title>alloc::string::String::push (2 samples, 0.15%)</title><rect x="3.2283%" y="757" width="0.1537%" height="15" fill="rgb(206,188,39)"/><text x="3.4783%" y="767.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.23%)</title><rect x="3.4589%" y="757" width="0.2306%" height="15" fill="rgb(217,207,13)"/><text x="3.7089%" y="767.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (3 samples, 0.23%)</title><rect x="3.8432%" y="757" width="0.2306%" height="15" fill="rgb(231,73,38)"/><text x="4.0932%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (2 samples, 0.15%)</title><rect x="4.2275%" y="757" width="0.1537%" height="15" fill="rgb(225,20,46)"/><text x="4.4775%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (2 samples, 0.15%)</title><rect x="4.3812%" y="757" width="0.1537%" height="15" fill="rgb(210,31,41)"/><text x="4.6312%" y="767.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (2 samples, 0.15%)</title><rect x="4.6887%" y="757" width="0.1537%" height="15" fill="rgb(221,200,47)"/><text x="4.9387%" y="767.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (2 samples, 0.15%)</title><rect x="4.8424%" y="757" width="0.1537%" height="15" fill="rgb(226,26,5)"/><text x="5.0924%" y="767.50"></text></g><g><title>[anon] (63 samples, 4.84%)</title><rect x="0.2306%" y="773" width="4.8424%" height="15" fill="rgb(249,33,26)"/><text x="0.4806%" y="783.50">[anon]</text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.15%)</title><rect x="5.1499%" y="757" width="0.1537%" height="15" fill="rgb(235,183,28)"/><text x="5.3999%" y="767.50"></text></g><g><title>[lobsters] (7 samples, 0.54%)</title><rect x="5.0730%" y="773" width="0.5380%" height="15" fill="rgb(221,5,38)"/><text x="5.3230%" y="783.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (4 samples, 0.31%)</title><rect x="5.6111%" y="757" width="0.3075%" height="15" fill="rgb(247,18,42)"/><text x="5.8611%" y="767.50"></text></g><g><title>decor::Shim::create_schema (4 samples, 0.31%)</title><rect x="5.6111%" y="741" width="0.3075%" height="15" fill="rgb(241,131,45)"/><text x="5.8611%" y="751.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (4 samples, 0.31%)</title><rect x="5.6111%" y="725" width="0.3075%" height="15" fill="rgb(249,31,29)"/><text x="5.8611%" y="735.50"></text></g><g><title>sql_parser::parser::parse_statements (4 samples, 0.31%)</title><rect x="5.6111%" y="709" width="0.3075%" height="15" fill="rgb(225,111,53)"/><text x="5.8611%" y="719.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (4 samples, 0.31%)</title><rect x="5.6111%" y="693" width="0.3075%" height="15" fill="rgb(238,160,17)"/><text x="5.8611%" y="703.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (4 samples, 0.31%)</title><rect x="5.6111%" y="677" width="0.3075%" height="15" fill="rgb(214,148,48)"/><text x="5.8611%" y="687.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (3 samples, 0.23%)</title><rect x="5.6879%" y="661" width="0.2306%" height="15" fill="rgb(232,36,49)"/><text x="5.9379%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.23%)</title><rect x="6.6872%" y="709" width="0.2306%" height="15" fill="rgb(209,103,24)"/><text x="6.9372%" y="719.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.15%)</title><rect x="6.9178%" y="517" width="0.1537%" height="15" fill="rgb(229,88,8)"/><text x="7.1678%" y="527.50"></text></g><g><title>_int_malloc (2 samples, 0.15%)</title><rect x="6.9178%" y="501" width="0.1537%" height="15" fill="rgb(213,181,19)"/><text x="7.1678%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.31%)</title><rect x="6.9178%" y="693" width="0.3075%" height="15" fill="rgb(254,191,54)"/><text x="7.1678%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.31%)</title><rect x="6.9178%" y="677" width="0.3075%" height="15" fill="rgb(241,83,37)"/><text x="7.1678%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (4 samples, 0.31%)</title><rect x="6.9178%" y="661" width="0.3075%" height="15" fill="rgb(233,36,39)"/><text x="7.1678%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.31%)</title><rect x="6.9178%" y="645" width="0.3075%" height="15" fill="rgb(226,3,54)"/><text x="7.1678%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.31%)</title><rect x="6.9178%" y="629" width="0.3075%" height="15" fill="rgb(245,192,40)"/><text x="7.1678%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (4 samples, 0.31%)</title><rect x="6.9178%" y="613" width="0.3075%" height="15" fill="rgb(238,167,29)"/><text x="7.1678%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.31%)</title><rect x="6.9178%" y="597" width="0.3075%" height="15" fill="rgb(232,182,51)"/><text x="7.1678%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.31%)</title><rect x="6.9178%" y="581" width="0.3075%" height="15" fill="rgb(231,60,39)"/><text x="7.1678%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (4 samples, 0.31%)</title><rect x="6.9178%" y="565" width="0.3075%" height="15" fill="rgb(208,69,12)"/><text x="7.1678%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.31%)</title><rect x="6.9178%" y="549" width="0.3075%" height="15" fill="rgb(235,93,37)"/><text x="7.1678%" y="559.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.31%)</title><rect x="6.9178%" y="533" width="0.3075%" height="15" fill="rgb(213,116,39)"/><text x="7.1678%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (7 samples, 0.54%)</title><rect x="6.9178%" y="709" width="0.5380%" height="15" fill="rgb(222,207,29)"/><text x="7.1678%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.23%)</title><rect x="7.2252%" y="693" width="0.2306%" height="15" fill="rgb(206,96,30)"/><text x="7.4752%" y="703.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.23%)</title><rect x="7.2252%" y="677" width="0.2306%" height="15" fill="rgb(218,138,4)"/><text x="7.4752%" y="687.50"></text></g><g><title>_int_malloc (3 samples, 0.23%)</title><rect x="7.2252%" y="661" width="0.2306%" height="15" fill="rgb(250,191,14)"/><text x="7.4752%" y="671.50"></text></g><g><title>sysmalloc (3 samples, 0.23%)</title><rect x="7.2252%" y="645" width="0.2306%" height="15" fill="rgb(239,60,40)"/><text x="7.4752%" y="655.50"></text></g><g><title>page_fault (2 samples, 0.15%)</title><rect x="7.3021%" y="629" width="0.1537%" height="15" fill="rgb(206,27,48)"/><text x="7.5521%" y="639.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.15%)</title><rect x="7.3021%" y="613" width="0.1537%" height="15" fill="rgb(225,35,8)"/><text x="7.5521%" y="623.50"></text></g><g><title>handle_mm_fault (2 samples, 0.15%)</title><rect x="7.3021%" y="597" width="0.1537%" height="15" fill="rgb(250,213,24)"/><text x="7.5521%" y="607.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.15%)</title><rect x="7.3021%" y="581" width="0.1537%" height="15" fill="rgb(247,123,22)"/><text x="7.5521%" y="591.50"></text></g><g><title>mem_cgroup_try_charge_delay (2 samples, 0.15%)</title><rect x="7.3021%" y="565" width="0.1537%" height="15" fill="rgb(231,138,38)"/><text x="7.5521%" y="575.50"></text></g><g><title>mem_cgroup_try_charge (2 samples, 0.15%)</title><rect x="7.3021%" y="549" width="0.1537%" height="15" fill="rgb(231,145,46)"/><text x="7.5521%" y="559.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.15%)</title><rect x="7.4558%" y="693" width="0.1537%" height="15" fill="rgb(251,118,11)"/><text x="7.7058%" y="703.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (13 samples, 1.00%)</title><rect x="7.6864%" y="645" width="0.9992%" height="15" fill="rgb(217,147,25)"/><text x="7.9364%" y="655.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (9 samples, 0.69%)</title><rect x="7.9939%" y="629" width="0.6918%" height="15" fill="rgb(247,81,37)"/><text x="8.2439%" y="639.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (7 samples, 0.54%)</title><rect x="8.1476%" y="613" width="0.5380%" height="15" fill="rgb(209,12,38)"/><text x="8.3976%" y="623.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (7 samples, 0.54%)</title><rect x="8.1476%" y="597" width="0.5380%" height="15" fill="rgb(227,1,9)"/><text x="8.3976%" y="607.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (4 samples, 0.31%)</title><rect x="8.3782%" y="581" width="0.3075%" height="15" fill="rgb(248,47,43)"/><text x="8.6282%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (16 samples, 1.23%)</title><rect x="7.6095%" y="677" width="1.2298%" height="15" fill="rgb(221,10,30)"/><text x="7.8595%" y="687.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (16 samples, 1.23%)</title><rect x="7.6095%" y="661" width="1.2298%" height="15" fill="rgb(210,229,1)"/><text x="7.8595%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (2 samples, 0.15%)</title><rect x="8.6856%" y="645" width="0.1537%" height="15" fill="rgb(222,148,37)"/><text x="8.9356%" y="655.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.15%)</title><rect x="8.6856%" y="629" width="0.1537%" height="15" fill="rgb(234,67,33)"/><text x="8.9356%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.15%)</title><rect x="8.6856%" y="613" width="0.1537%" height="15" fill="rgb(247,98,35)"/><text x="8.9356%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (17 samples, 1.31%)</title><rect x="7.6095%" y="693" width="1.3067%" height="15" fill="rgb(247,138,52)"/><text x="7.8595%" y="703.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (4 samples, 0.31%)</title><rect x="8.9931%" y="645" width="0.3075%" height="15" fill="rgb(213,79,30)"/><text x="9.2431%" y="655.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (2 samples, 0.15%)</title><rect x="9.1468%" y="629" width="0.1537%" height="15" fill="rgb(246,177,23)"/><text x="9.3968%" y="639.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.15%)</title><rect x="9.1468%" y="613" width="0.1537%" height="15" fill="rgb(230,62,27)"/><text x="9.3968%" y="623.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.15%)</title><rect x="9.1468%" y="597" width="0.1537%" height="15" fill="rgb(216,154,8)"/><text x="9.3968%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (6 samples, 0.46%)</title><rect x="8.9931%" y="677" width="0.4612%" height="15" fill="rgb(244,35,45)"/><text x="9.2431%" y="687.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (6 samples, 0.46%)</title><rect x="8.9931%" y="661" width="0.4612%" height="15" fill="rgb(251,115,12)"/><text x="9.2431%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (2 samples, 0.15%)</title><rect x="9.3005%" y="645" width="0.1537%" height="15" fill="rgb(240,54,50)"/><text x="9.5505%" y="655.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.15%)</title><rect x="9.3005%" y="629" width="0.1537%" height="15" fill="rgb(233,84,52)"/><text x="9.5505%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.15%)</title><rect x="9.3005%" y="613" width="0.1537%" height="15" fill="rgb(207,117,47)"/><text x="9.5505%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::ObjectName as core::fmt::Display&gt;::fmt (11 samples, 0.85%)</title><rect x="8.9162%" y="693" width="0.8455%" height="15" fill="rgb(249,43,39)"/><text x="9.1662%" y="703.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (4 samples, 0.31%)</title><rect x="9.4543%" y="677" width="0.3075%" height="15" fill="rgb(209,38,44)"/><text x="9.7043%" y="687.50"></text></g><g><title>core::fmt::write (2 samples, 0.15%)</title><rect x="9.6080%" y="661" width="0.1537%" height="15" fill="rgb(236,212,23)"/><text x="9.8580%" y="671.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.15%)</title><rect x="9.6080%" y="645" width="0.1537%" height="15" fill="rgb(242,79,21)"/><text x="9.8580%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.15%)</title><rect x="9.6080%" y="629" width="0.1537%" height="15" fill="rgb(211,96,35)"/><text x="9.8580%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (5 samples, 0.38%)</title><rect x="9.9154%" y="645" width="0.3843%" height="15" fill="rgb(253,215,40)"/><text x="10.1654%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (5 samples, 0.38%)</title><rect x="9.9154%" y="629" width="0.3843%" height="15" fill="rgb(211,81,21)"/><text x="10.1654%" y="639.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (5 samples, 0.38%)</title><rect x="9.9154%" y="613" width="0.3843%" height="15" fill="rgb(208,190,38)"/><text x="10.1654%" y="623.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.15%)</title><rect x="10.1460%" y="597" width="0.1537%" height="15" fill="rgb(235,213,38)"/><text x="10.3960%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (11 samples, 0.85%)</title><rect x="9.9154%" y="677" width="0.8455%" height="15" fill="rgb(237,122,38)"/><text x="10.1654%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Values as sql_parser::ast::display::AstDisplay&gt;::fmt (11 samples, 0.85%)</title><rect x="9.9154%" y="661" width="0.8455%" height="15" fill="rgb(244,218,35)"/><text x="10.1654%" y="671.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (6 samples, 0.46%)</title><rect x="10.2998%" y="645" width="0.4612%" height="15" fill="rgb(240,68,47)"/><text x="10.5498%" y="655.50"></text></g><g><title>core::fmt::write (2 samples, 0.15%)</title><rect x="10.6072%" y="629" width="0.1537%" height="15" fill="rgb(210,16,53)"/><text x="10.8572%" y="639.50"></text></g><g><title>alloc::string::String::push (2 samples, 0.15%)</title><rect x="10.9147%" y="613" width="0.1537%" height="15" fill="rgb(235,124,12)"/><text x="11.1647%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (2 samples, 0.15%)</title><rect x="10.9147%" y="597" width="0.1537%" height="15" fill="rgb(224,169,11)"/><text x="11.1647%" y="607.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (2 samples, 0.15%)</title><rect x="11.3759%" y="565" width="0.1537%" height="15" fill="rgb(250,166,2)"/><text x="11.6259%" y="575.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (10 samples, 0.77%)</title><rect x="10.8378%" y="629" width="0.7686%" height="15" fill="rgb(242,216,29)"/><text x="11.0878%" y="639.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (6 samples, 0.46%)</title><rect x="11.1453%" y="613" width="0.4612%" height="15" fill="rgb(230,116,27)"/><text x="11.3953%" y="623.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (6 samples, 0.46%)</title><rect x="11.1453%" y="597" width="0.4612%" height="15" fill="rgb(228,99,48)"/><text x="11.3953%" y="607.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (6 samples, 0.46%)</title><rect x="11.1453%" y="581" width="0.4612%" height="15" fill="rgb(253,11,6)"/><text x="11.3953%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (15 samples, 1.15%)</title><rect x="10.7610%" y="661" width="1.1530%" height="15" fill="rgb(247,143,39)"/><text x="11.0110%" y="671.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (15 samples, 1.15%)</title><rect x="10.7610%" y="645" width="1.1530%" height="15" fill="rgb(236,97,10)"/><text x="11.0110%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (4 samples, 0.31%)</title><rect x="11.6065%" y="629" width="0.3075%" height="15" fill="rgb(233,208,19)"/><text x="11.8565%" y="639.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.23%)</title><rect x="11.6833%" y="613" width="0.2306%" height="15" fill="rgb(216,164,2)"/><text x="11.9333%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.15%)</title><rect x="11.7602%" y="597" width="0.1537%" height="15" fill="rgb(220,129,5)"/><text x="12.0102%" y="607.50"></text></g><g><title>core::fmt::write (62 samples, 4.77%)</title><rect x="7.4558%" y="709" width="4.7656%" height="15" fill="rgb(242,17,10)"/><text x="7.7058%" y="719.50">core::..</text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (32 samples, 2.46%)</title><rect x="9.7617%" y="693" width="2.4596%" height="15" fill="rgb(242,107,0)"/><text x="10.0117%" y="703.50">&lt;s..</text></g><g><title>&lt;sql_parser::ast::defs::statement::InsertStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (19 samples, 1.46%)</title><rect x="10.7610%" y="677" width="1.4604%" height="15" fill="rgb(251,28,31)"/><text x="11.0110%" y="687.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (4 samples, 0.31%)</title><rect x="11.9139%" y="661" width="0.3075%" height="15" fill="rgb(233,223,10)"/><text x="12.1639%" y="671.50"></text></g><g><title>_int_free (3 samples, 0.23%)</title><rect x="12.5288%" y="661" width="0.2306%" height="15" fill="rgb(215,21,27)"/><text x="12.7788%" y="671.50"></text></g><g><title>core::ptr::drop_in_place (8 samples, 0.61%)</title><rect x="12.2214%" y="709" width="0.6149%" height="15" fill="rgb(232,23,21)"/><text x="12.4714%" y="719.50"></text></g><g><title>core::ptr::drop_in_place (5 samples, 0.38%)</title><rect x="12.4520%" y="693" width="0.3843%" height="15" fill="rgb(244,5,23)"/><text x="12.7020%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.38%)</title><rect x="12.4520%" y="677" width="0.3843%" height="15" fill="rgb(226,81,46)"/><text x="12.7020%" y="687.50"></text></g><g><title>decor::helpers::get_user_cols_of_datatable (3 samples, 0.23%)</title><rect x="12.8363%" y="709" width="0.2306%" height="15" fill="rgb(247,70,30)"/><text x="13.0863%" y="719.50"></text></g><g><title>core::fmt::write (2 samples, 0.15%)</title><rect x="12.9131%" y="693" width="0.1537%" height="15" fill="rgb(212,68,19)"/><text x="13.1631%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.23%)</title><rect x="13.0669%" y="693" width="0.2306%" height="15" fill="rgb(240,187,13)"/><text x="13.3169%" y="703.50"></text></g><g><title>decor::helpers::str_ident_match (4 samples, 0.31%)</title><rect x="13.0669%" y="709" width="0.3075%" height="15" fill="rgb(223,113,26)"/><text x="13.3169%" y="719.50"></text></g><g><title>core::fmt::write (4 samples, 0.31%)</title><rect x="13.3743%" y="693" width="0.3075%" height="15" fill="rgb(206,192,2)"/><text x="13.6243%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::ObjectName as core::fmt::Display&gt;::fmt (3 samples, 0.23%)</title><rect x="13.4512%" y="677" width="0.2306%" height="15" fill="rgb(241,108,4)"/><text x="13.7012%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.23%)</title><rect x="13.4512%" y="661" width="0.2306%" height="15" fill="rgb(247,173,49)"/><text x="13.7012%" y="671.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (3 samples, 0.23%)</title><rect x="13.4512%" y="645" width="0.2306%" height="15" fill="rgb(224,114,35)"/><text x="13.7012%" y="655.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (2 samples, 0.15%)</title><rect x="13.5281%" y="629" width="0.1537%" height="15" fill="rgb(245,159,27)"/><text x="13.7781%" y="639.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.15%)</title><rect x="13.8355%" y="629" width="0.1537%" height="15" fill="rgb(245,172,44)"/><text x="14.0855%" y="639.50"></text></g><g><title>alloc::fmt::format (4 samples, 0.31%)</title><rect x="13.8355%" y="677" width="0.3075%" height="15" fill="rgb(236,23,11)"/><text x="14.0855%" y="687.50"></text></g><g><title>core::fmt::Write::write_fmt (4 samples, 0.31%)</title><rect x="13.8355%" y="661" width="0.3075%" height="15" fill="rgb(205,117,38)"/><text x="14.0855%" y="671.50"></text></g><g><title>core::fmt::write (4 samples, 0.31%)</title><rect x="13.8355%" y="645" width="0.3075%" height="15" fill="rgb(237,72,25)"/><text x="14.0855%" y="655.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query (108 samples, 8.30%)</title><rect x="5.9185%" y="741" width="8.3013%" height="15" fill="rgb(244,70,9)"/><text x="6.1685%" y="751.50">decor::query..</text></g><g><title>decor::query_transformer::QueryTransformer::issue_to_dt_and_get_mv_stmt (108 samples, 8.30%)</title><rect x="5.9185%" y="725" width="8.3013%" height="15" fill="rgb(217,125,39)"/><text x="6.1685%" y="735.50">decor::query..</text></g><g><title>decor::mv_transformer::MVTransformer::objname_to_mv_string (11 samples, 0.85%)</title><rect x="13.3743%" y="709" width="0.8455%" height="15" fill="rgb(235,36,10)"/><text x="13.6243%" y="719.50"></text></g><g><title>decor::mv_transformer::MVTransformer::idents_to_mv_idents (7 samples, 0.54%)</title><rect x="13.6818%" y="693" width="0.5380%" height="15" fill="rgb(251,123,47)"/><text x="13.9318%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (3 samples, 0.23%)</title><rect x="14.2198%" y="645" width="0.2306%" height="15" fill="rgb(221,13,13)"/><text x="14.4698%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.23%)</title><rect x="14.2198%" y="629" width="0.2306%" height="15" fill="rgb(238,131,9)"/><text x="14.4698%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.23%)</title><rect x="14.2198%" y="613" width="0.2306%" height="15" fill="rgb(211,50,8)"/><text x="14.4698%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.23%)</title><rect x="14.2198%" y="597" width="0.2306%" height="15" fill="rgb(245,182,24)"/><text x="14.4698%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.15%)</title><rect x="14.2967%" y="581" width="0.1537%" height="15" fill="rgb(242,14,37)"/><text x="14.5467%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.15%)</title><rect x="14.2967%" y="565" width="0.1537%" height="15" fill="rgb(246,228,12)"/><text x="14.5467%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.15%)</title><rect x="14.2967%" y="549" width="0.1537%" height="15" fill="rgb(213,55,15)"/><text x="14.5467%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.15%)</title><rect x="14.2967%" y="533" width="0.1537%" height="15" fill="rgb(209,9,3)"/><text x="14.5467%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.15%)</title><rect x="14.2967%" y="517" width="0.1537%" height="15" fill="rgb(230,59,30)"/><text x="14.5467%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.15%)</title><rect x="14.2967%" y="501" width="0.1537%" height="15" fill="rgb(209,121,21)"/><text x="14.5467%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.15%)</title><rect x="14.2967%" y="485" width="0.1537%" height="15" fill="rgb(220,109,13)"/><text x="14.5467%" y="495.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.15%)</title><rect x="14.2967%" y="469" width="0.1537%" height="15" fill="rgb(232,18,1)"/><text x="14.5467%" y="479.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (112 samples, 8.61%)</title><rect x="5.9185%" y="757" width="8.6088%" height="15" fill="rgb(215,41,42)"/><text x="6.1685%" y="767.50">&lt;decor::Shim..</text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (4 samples, 0.31%)</title><rect x="14.2198%" y="741" width="0.3075%" height="15" fill="rgb(224,123,36)"/><text x="14.4698%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (4 samples, 0.31%)</title><rect x="14.2198%" y="725" width="0.3075%" height="15" fill="rgb(240,125,3)"/><text x="14.4698%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (4 samples, 0.31%)</title><rect x="14.2198%" y="709" width="0.3075%" height="15" fill="rgb(205,98,50)"/><text x="14.4698%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (4 samples, 0.31%)</title><rect x="14.2198%" y="693" width="0.3075%" height="15" fill="rgb(205,185,37)"/><text x="14.4698%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (4 samples, 0.31%)</title><rect x="14.2198%" y="677" width="0.3075%" height="15" fill="rgb(238,207,15)"/><text x="14.4698%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.31%)</title><rect x="14.2198%" y="661" width="0.3075%" height="15" fill="rgb(213,199,42)"/><text x="14.4698%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="14.6810%" y="757" width="0.1537%" height="15" fill="rgb(235,201,11)"/><text x="14.9310%" y="767.50"></text></g><g><title>__GI___libc_free (2 samples, 0.15%)</title><rect x="14.9885%" y="757" width="0.1537%" height="15" fill="rgb(207,46,11)"/><text x="15.2385%" y="767.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.15%)</title><rect x="15.1422%" y="757" width="0.1537%" height="15" fill="rgb(241,35,35)"/><text x="15.3922%" y="767.50"></text></g><g><title>tcp_ack (6 samples, 0.46%)</title><rect x="16.3720%" y="53" width="0.4612%" height="15" fill="rgb(243,32,47)"/><text x="16.6220%" y="63.50"></text></g><g><title>ip_local_deliver (12 samples, 0.92%)</title><rect x="15.9877%" y="149" width="0.9224%" height="15" fill="rgb(247,202,23)"/><text x="16.2377%" y="159.50"></text></g><g><title>ip_local_deliver_finish (12 samples, 0.92%)</title><rect x="15.9877%" y="133" width="0.9224%" height="15" fill="rgb(219,102,11)"/><text x="16.2377%" y="143.50"></text></g><g><title>ip_protocol_deliver_rcu (10 samples, 0.77%)</title><rect x="16.1414%" y="117" width="0.7686%" height="15" fill="rgb(243,110,44)"/><text x="16.3914%" y="127.50"></text></g><g><title>tcp_v4_rcv (9 samples, 0.69%)</title><rect x="16.2183%" y="101" width="0.6918%" height="15" fill="rgb(222,74,54)"/><text x="16.4683%" y="111.50"></text></g><g><title>tcp_v4_do_rcv (8 samples, 0.61%)</title><rect x="16.2952%" y="85" width="0.6149%" height="15" fill="rgb(216,99,12)"/><text x="16.5452%" y="95.50"></text></g><g><title>tcp_rcv_established (8 samples, 0.61%)</title><rect x="16.2952%" y="69" width="0.6149%" height="15" fill="rgb(226,22,26)"/><text x="16.5452%" y="79.50"></text></g><g><title>ip_finish_output2 (16 samples, 1.23%)</title><rect x="15.7571%" y="293" width="1.2298%" height="15" fill="rgb(217,163,10)"/><text x="16.0071%" y="303.50"></text></g><g><title>__local_bh_enable_ip (16 samples, 1.23%)</title><rect x="15.7571%" y="277" width="1.2298%" height="15" fill="rgb(213,25,53)"/><text x="16.0071%" y="287.50"></text></g><g><title>do_softirq (16 samples, 1.23%)</title><rect x="15.7571%" y="261" width="1.2298%" height="15" fill="rgb(252,105,26)"/><text x="16.0071%" y="271.50"></text></g><g><title>do_softirq_own_stack (16 samples, 1.23%)</title><rect x="15.7571%" y="245" width="1.2298%" height="15" fill="rgb(220,39,43)"/><text x="16.0071%" y="255.50"></text></g><g><title>__do_softirq (16 samples, 1.23%)</title><rect x="15.7571%" y="229" width="1.2298%" height="15" fill="rgb(229,68,48)"/><text x="16.0071%" y="239.50"></text></g><g><title>net_rx_action (15 samples, 1.15%)</title><rect x="15.8340%" y="213" width="1.1530%" height="15" fill="rgb(252,8,32)"/><text x="16.0840%" y="223.50"></text></g><g><title>process_backlog (15 samples, 1.15%)</title><rect x="15.8340%" y="197" width="1.1530%" height="15" fill="rgb(223,20,43)"/><text x="16.0840%" y="207.50"></text></g><g><title>__netif_receive_skb_one_core (14 samples, 1.08%)</title><rect x="15.9108%" y="181" width="1.0761%" height="15" fill="rgb(229,81,49)"/><text x="16.1608%" y="191.50"></text></g><g><title>ip_rcv (13 samples, 1.00%)</title><rect x="15.9877%" y="165" width="0.9992%" height="15" fill="rgb(236,28,36)"/><text x="16.2377%" y="175.50"></text></g><g><title>__tcp_transmit_skb (17 samples, 1.31%)</title><rect x="15.7571%" y="341" width="1.3067%" height="15" fill="rgb(249,185,26)"/><text x="16.0071%" y="351.50"></text></g><g><title>__ip_queue_xmit (17 samples, 1.31%)</title><rect x="15.7571%" y="325" width="1.3067%" height="15" fill="rgb(249,174,33)"/><text x="16.0071%" y="335.50"></text></g><g><title>ip_output (17 samples, 1.31%)</title><rect x="15.7571%" y="309" width="1.3067%" height="15" fill="rgb(233,201,37)"/><text x="16.0071%" y="319.50"></text></g><g><title>__tcp_push_pending_frames (19 samples, 1.46%)</title><rect x="15.6802%" y="373" width="1.4604%" height="15" fill="rgb(221,78,26)"/><text x="15.9302%" y="383.50"></text></g><g><title>tcp_write_xmit (19 samples, 1.46%)</title><rect x="15.6802%" y="357" width="1.4604%" height="15" fill="rgb(250,127,30)"/><text x="15.9302%" y="367.50"></text></g><g><title>do_syscall_64 (24 samples, 1.84%)</title><rect x="15.5265%" y="469" width="1.8447%" height="15" fill="rgb(230,49,44)"/><text x="15.7765%" y="479.50">d..</text></g><g><title>__x64_sys_sendto (24 samples, 1.84%)</title><rect x="15.5265%" y="453" width="1.8447%" height="15" fill="rgb(229,67,23)"/><text x="15.7765%" y="463.50">_..</text></g><g><title>__sys_sendto (24 samples, 1.84%)</title><rect x="15.5265%" y="437" width="1.8447%" height="15" fill="rgb(249,83,47)"/><text x="15.7765%" y="447.50">_..</text></g><g><title>sock_sendmsg (24 samples, 1.84%)</title><rect x="15.5265%" y="421" width="1.8447%" height="15" fill="rgb(215,43,3)"/><text x="15.7765%" y="431.50">s..</text></g><g><title>tcp_sendmsg (24 samples, 1.84%)</title><rect x="15.5265%" y="405" width="1.8447%" height="15" fill="rgb(238,154,13)"/><text x="15.7765%" y="415.50">t..</text></g><g><title>tcp_sendmsg_locked (24 samples, 1.84%)</title><rect x="15.5265%" y="389" width="1.8447%" height="15" fill="rgb(219,56,2)"/><text x="15.7765%" y="399.50">t..</text></g><g><title>__libc_start_main (28 samples, 2.15%)</title><rect x="15.2959%" y="757" width="2.1522%" height="15" fill="rgb(233,0,4)"/><text x="15.5459%" y="767.50">_..</text></g><g><title>main (28 samples, 2.15%)</title><rect x="15.2959%" y="741" width="2.1522%" height="15" fill="rgb(235,30,7)"/><text x="15.5459%" y="751.50">m..</text></g><g><title>std::rt::lang_start_internal (28 samples, 2.15%)</title><rect x="15.2959%" y="725" width="2.1522%" height="15" fill="rgb(250,79,13)"/><text x="15.5459%" y="735.50">s..</text></g><g><title>std::panic::catch_unwind (28 samples, 2.15%)</title><rect x="15.2959%" y="709" width="2.1522%" height="15" fill="rgb(211,146,34)"/><text x="15.5459%" y="719.50">s..</text></g><g><title>std::panicking::try (28 samples, 2.15%)</title><rect x="15.2959%" y="693" width="2.1522%" height="15" fill="rgb(228,22,38)"/><text x="15.5459%" y="703.50">s..</text></g><g><title>std::panicking::try::do_call (28 samples, 2.15%)</title><rect x="15.2959%" y="677" width="2.1522%" height="15" fill="rgb(235,168,5)"/><text x="15.5459%" y="687.50">s..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (28 samples, 2.15%)</title><rect x="15.2959%" y="661" width="2.1522%" height="15" fill="rgb(221,155,16)"/><text x="15.5459%" y="671.50">c..</text></g><g><title>std::rt::lang_start::_{{closure}} (28 samples, 2.15%)</title><rect x="15.2959%" y="645" width="2.1522%" height="15" fill="rgb(215,215,53)"/><text x="15.5459%" y="655.50">s..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (28 samples, 2.15%)</title><rect x="15.2959%" y="629" width="2.1522%" height="15" fill="rgb(223,4,10)"/><text x="15.5459%" y="639.50">s..</text></g><g><title>lobsters::main (28 samples, 2.15%)</title><rect x="15.2959%" y="613" width="2.1522%" height="15" fill="rgb(234,103,6)"/><text x="15.5459%" y="623.50">l..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (28 samples, 2.15%)</title><rect x="15.2959%" y="597" width="2.1522%" height="15" fill="rgb(227,97,0)"/><text x="15.5459%" y="607.50">m..</text></g><g><title>mysql::conn::Conn::_query (28 samples, 2.15%)</title><rect x="15.2959%" y="581" width="2.1522%" height="15" fill="rgb(234,150,53)"/><text x="15.5459%" y="591.50">m..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (28 samples, 2.15%)</title><rect x="15.2959%" y="565" width="2.1522%" height="15" fill="rgb(228,201,54)"/><text x="15.5459%" y="575.50">m..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (27 samples, 2.08%)</title><rect x="15.3728%" y="549" width="2.0753%" height="15" fill="rgb(222,22,37)"/><text x="15.6228%" y="559.50">s..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (26 samples, 2.00%)</title><rect x="15.4497%" y="533" width="1.9985%" height="15" fill="rgb(237,53,32)"/><text x="15.6997%" y="543.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::write (26 samples, 2.00%)</title><rect x="15.4497%" y="517" width="1.9985%" height="15" fill="rgb(233,25,53)"/><text x="15.6997%" y="527.50">s..</text></g><g><title>__libc_send (26 samples, 2.00%)</title><rect x="15.4497%" y="501" width="1.9985%" height="15" fill="rgb(210,40,34)"/><text x="15.6997%" y="511.50">_..</text></g><g><title>entry_SYSCALL_64 (25 samples, 1.92%)</title><rect x="15.5265%" y="485" width="1.9216%" height="15" fill="rgb(241,220,44)"/><text x="15.7765%" y="495.50">e..</text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.15%)</title><rect x="17.4481%" y="757" width="0.1537%" height="15" fill="rgb(235,28,35)"/><text x="17.6981%" y="767.50"></text></g><g><title>_int_free (9 samples, 0.69%)</title><rect x="17.6787%" y="757" width="0.6918%" height="15" fill="rgb(210,56,17)"/><text x="17.9287%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.15%)</title><rect x="18.5242%" y="757" width="0.1537%" height="15" fill="rgb(224,130,29)"/><text x="18.7742%" y="767.50"></text></g><g><title>core::fmt::Formatter::pad (3 samples, 0.23%)</title><rect x="18.8317%" y="757" width="0.2306%" height="15" fill="rgb(235,212,8)"/><text x="19.0817%" y="767.50"></text></g><g><title>core::fmt::write (2 samples, 0.15%)</title><rect x="19.0623%" y="757" width="0.1537%" height="15" fill="rgb(223,33,50)"/><text x="19.3123%" y="767.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.23%)</title><rect x="19.2160%" y="757" width="0.2306%" height="15" fill="rgb(219,149,13)"/><text x="19.4660%" y="767.50"></text></g><g><title>_raw_spin_lock_bh (2 samples, 0.15%)</title><rect x="19.9846%" y="469" width="0.1537%" height="15" fill="rgb(250,156,29)"/><text x="20.2346%" y="479.50"></text></g><g><title>lock_sock_nested (3 samples, 0.23%)</title><rect x="19.9846%" y="485" width="0.2306%" height="15" fill="rgb(216,193,19)"/><text x="20.2346%" y="495.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.15%)</title><rect x="20.9839%" y="357" width="0.1537%" height="15" fill="rgb(216,135,14)"/><text x="21.2339%" y="367.50"></text></g><g><title>loopback_xmit (2 samples, 0.15%)</title><rect x="20.9839%" y="341" width="0.1537%" height="15" fill="rgb(241,47,5)"/><text x="21.2339%" y="351.50"></text></g><g><title>netif_rx (2 samples, 0.15%)</title><rect x="20.9839%" y="325" width="0.1537%" height="15" fill="rgb(233,42,35)"/><text x="21.2339%" y="335.50"></text></g><g><title>netif_rx_internal (2 samples, 0.15%)</title><rect x="20.9839%" y="309" width="0.1537%" height="15" fill="rgb(231,13,6)"/><text x="21.2339%" y="319.50"></text></g><g><title>__dev_queue_xmit (4 samples, 0.31%)</title><rect x="20.9070%" y="373" width="0.3075%" height="15" fill="rgb(207,181,40)"/><text x="21.1570%" y="383.50"></text></g><g><title>enqueue_task (3 samples, 0.23%)</title><rect x="22.0600%" y="69" width="0.2306%" height="15" fill="rgb(254,173,49)"/><text x="22.3100%" y="79.50"></text></g><g><title>psi_task_change (3 samples, 0.23%)</title><rect x="22.0600%" y="53" width="0.2306%" height="15" fill="rgb(221,1,38)"/><text x="22.3100%" y="63.50"></text></g><g><title>psi_group_change (2 samples, 0.15%)</title><rect x="22.1368%" y="37" width="0.1537%" height="15" fill="rgb(206,124,46)"/><text x="22.3868%" y="47.50"></text></g><g><title>select_task_rq_fair (3 samples, 0.23%)</title><rect x="22.3674%" y="69" width="0.2306%" height="15" fill="rgb(249,21,11)"/><text x="22.6174%" y="79.50"></text></g><g><title>sock_def_readable (11 samples, 0.85%)</title><rect x="21.8294%" y="149" width="0.8455%" height="15" fill="rgb(222,201,40)"/><text x="22.0794%" y="159.50"></text></g><g><title>__wake_up_common_lock (10 samples, 0.77%)</title><rect x="21.9062%" y="133" width="0.7686%" height="15" fill="rgb(235,61,29)"/><text x="22.1562%" y="143.50"></text></g><g><title>__wake_up_common (10 samples, 0.77%)</title><rect x="21.9062%" y="117" width="0.7686%" height="15" fill="rgb(219,207,3)"/><text x="22.1562%" y="127.50"></text></g><g><title>pollwake (10 samples, 0.77%)</title><rect x="21.9062%" y="101" width="0.7686%" height="15" fill="rgb(222,56,46)"/><text x="22.1562%" y="111.50"></text></g><g><title>try_to_wake_up (9 samples, 0.69%)</title><rect x="21.9831%" y="85" width="0.6918%" height="15" fill="rgb(239,76,54)"/><text x="22.2331%" y="95.50"></text></g><g><title>bictcp_acked (2 samples, 0.15%)</title><rect x="22.6749%" y="133" width="0.1537%" height="15" fill="rgb(231,124,27)"/><text x="22.9249%" y="143.50"></text></g><g><title>tcp_ack (4 samples, 0.31%)</title><rect x="22.6749%" y="149" width="0.3075%" height="15" fill="rgb(249,195,6)"/><text x="22.9249%" y="159.50"></text></g><g><title>ip_finish_output2 (32 samples, 2.46%)</title><rect x="20.7533%" y="389" width="2.4596%" height="15" fill="rgb(237,174,47)"/><text x="21.0033%" y="399.50">ip..</text></g><g><title>__local_bh_enable_ip (26 samples, 2.00%)</title><rect x="21.2145%" y="373" width="1.9985%" height="15" fill="rgb(206,201,31)"/><text x="21.4645%" y="383.50">_..</text></g><g><title>do_softirq (26 samples, 2.00%)</title><rect x="21.2145%" y="357" width="1.9985%" height="15" fill="rgb(231,57,52)"/><text x="21.4645%" y="367.50">d..</text></g><g><title>do_softirq_own_stack (26 samples, 2.00%)</title><rect x="21.2145%" y="341" width="1.9985%" height="15" fill="rgb(248,177,22)"/><text x="21.4645%" y="351.50">d..</text></g><g><title>__do_softirq (26 samples, 2.00%)</title><rect x="21.2145%" y="325" width="1.9985%" height="15" fill="rgb(215,211,37)"/><text x="21.4645%" y="335.50">_..</text></g><g><title>net_rx_action (25 samples, 1.92%)</title><rect x="21.2913%" y="309" width="1.9216%" height="15" fill="rgb(241,128,51)"/><text x="21.5413%" y="319.50">n..</text></g><g><title>process_backlog (24 samples, 1.84%)</title><rect x="21.3682%" y="293" width="1.8447%" height="15" fill="rgb(227,165,31)"/><text x="21.6182%" y="303.50">p..</text></g><g><title>__netif_receive_skb_one_core (24 samples, 1.84%)</title><rect x="21.3682%" y="277" width="1.8447%" height="15" fill="rgb(228,167,24)"/><text x="21.6182%" y="287.50">_..</text></g><g><title>ip_rcv (23 samples, 1.77%)</title><rect x="21.4450%" y="261" width="1.7679%" height="15" fill="rgb(228,143,12)"/><text x="21.6950%" y="271.50"></text></g><g><title>ip_local_deliver (23 samples, 1.77%)</title><rect x="21.4450%" y="245" width="1.7679%" height="15" fill="rgb(249,149,8)"/><text x="21.6950%" y="255.50"></text></g><g><title>ip_local_deliver_finish (21 samples, 1.61%)</title><rect x="21.5988%" y="229" width="1.6141%" height="15" fill="rgb(243,35,44)"/><text x="21.8488%" y="239.50"></text></g><g><title>ip_protocol_deliver_rcu (21 samples, 1.61%)</title><rect x="21.5988%" y="213" width="1.6141%" height="15" fill="rgb(246,89,9)"/><text x="21.8488%" y="223.50"></text></g><g><title>tcp_v4_rcv (21 samples, 1.61%)</title><rect x="21.5988%" y="197" width="1.6141%" height="15" fill="rgb(233,213,13)"/><text x="21.8488%" y="207.50"></text></g><g><title>tcp_v4_do_rcv (19 samples, 1.46%)</title><rect x="21.7525%" y="181" width="1.4604%" height="15" fill="rgb(233,141,41)"/><text x="22.0025%" y="191.50"></text></g><g><title>tcp_rcv_established (19 samples, 1.46%)</title><rect x="21.7525%" y="165" width="1.4604%" height="15" fill="rgb(239,167,4)"/><text x="22.0025%" y="175.50"></text></g><g><title>tcp_mstamp_refresh (2 samples, 0.15%)</title><rect x="23.0592%" y="149" width="0.1537%" height="15" fill="rgb(209,217,16)"/><text x="23.3092%" y="159.50"></text></g><g><title>__ip_queue_xmit (36 samples, 2.77%)</title><rect x="20.5227%" y="421" width="2.7671%" height="15" fill="rgb(219,88,35)"/><text x="20.7727%" y="431.50">__..</text></g><g><title>ip_output (33 samples, 2.54%)</title><rect x="20.7533%" y="405" width="2.5365%" height="15" fill="rgb(220,193,23)"/><text x="21.0033%" y="415.50">ip..</text></g><g><title>__tcp_push_pending_frames (38 samples, 2.92%)</title><rect x="20.4458%" y="469" width="2.9208%" height="15" fill="rgb(230,90,52)"/><text x="20.6958%" y="479.50">__..</text></g><g><title>tcp_write_xmit (38 samples, 2.92%)</title><rect x="20.4458%" y="453" width="2.9208%" height="15" fill="rgb(252,106,19)"/><text x="20.6958%" y="463.50">tc..</text></g><g><title>__tcp_transmit_skb (38 samples, 2.92%)</title><rect x="20.4458%" y="437" width="2.9208%" height="15" fill="rgb(206,74,20)"/><text x="20.6958%" y="447.50">__..</text></g><g><title>sk_stream_alloc_skb (3 samples, 0.23%)</title><rect x="23.4435%" y="469" width="0.2306%" height="15" fill="rgb(230,138,44)"/><text x="23.6935%" y="479.50"></text></g><g><title>__alloc_skb (3 samples, 0.23%)</title><rect x="23.4435%" y="453" width="0.2306%" height="15" fill="rgb(235,182,43)"/><text x="23.6935%" y="463.50"></text></g><g><title>__x64_sys_sendto (55 samples, 4.23%)</title><rect x="19.6772%" y="549" width="4.2275%" height="15" fill="rgb(242,16,51)"/><text x="19.9272%" y="559.50">__x64..</text></g><g><title>__sys_sendto (55 samples, 4.23%)</title><rect x="19.6772%" y="533" width="4.2275%" height="15" fill="rgb(248,9,4)"/><text x="19.9272%" y="543.50">__sys..</text></g><g><title>sock_sendmsg (54 samples, 4.15%)</title><rect x="19.7540%" y="517" width="4.1507%" height="15" fill="rgb(210,31,22)"/><text x="20.0040%" y="527.50">sock_..</text></g><g><title>tcp_sendmsg (52 samples, 4.00%)</title><rect x="19.9078%" y="501" width="3.9969%" height="15" fill="rgb(239,54,39)"/><text x="20.1578%" y="511.50">tcp_..</text></g><g><title>tcp_sendmsg_locked (47 samples, 3.61%)</title><rect x="20.2921%" y="485" width="3.6126%" height="15" fill="rgb(230,99,41)"/><text x="20.5421%" y="495.50">tcp_..</text></g><g><title>tcp_send_mss (2 samples, 0.15%)</title><rect x="23.7510%" y="469" width="0.1537%" height="15" fill="rgb(253,106,12)"/><text x="24.0010%" y="479.50"></text></g><g><title>do_syscall_64 (57 samples, 4.38%)</title><rect x="19.6003%" y="565" width="4.3812%" height="15" fill="rgb(213,46,41)"/><text x="19.8503%" y="575.50">do_sy..</text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (60 samples, 4.61%)</title><rect x="19.4466%" y="693" width="4.6118%" height="15" fill="rgb(215,133,35)"/><text x="19.6966%" y="703.50">&lt;mysq..</text></g><g><title>mysql::conn::Conn::_query (60 samples, 4.61%)</title><rect x="19.4466%" y="677" width="4.6118%" height="15" fill="rgb(213,28,5)"/><text x="19.6966%" y="687.50">mysql..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (60 samples, 4.61%)</title><rect x="19.4466%" y="661" width="4.6118%" height="15" fill="rgb(215,77,49)"/><text x="19.6966%" y="671.50">mysql..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (58 samples, 4.46%)</title><rect x="19.6003%" y="645" width="4.4581%" height="15" fill="rgb(248,100,22)"/><text x="19.8503%" y="655.50">std::..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (58 samples, 4.46%)</title><rect x="19.6003%" y="629" width="4.4581%" height="15" fill="rgb(208,67,9)"/><text x="19.8503%" y="639.50">&lt;std:..</text></g><g><title>std::sys_common::net::TcpStream::write (58 samples, 4.46%)</title><rect x="19.6003%" y="613" width="4.4581%" height="15" fill="rgb(219,133,21)"/><text x="19.8503%" y="623.50">std::..</text></g><g><title>__libc_send (58 samples, 4.46%)</title><rect x="19.6003%" y="597" width="4.4581%" height="15" fill="rgb(246,46,29)"/><text x="19.8503%" y="607.50">__lib..</text></g><g><title>entry_SYSCALL_64 (58 samples, 4.46%)</title><rect x="19.6003%" y="581" width="4.4581%" height="15" fill="rgb(246,185,52)"/><text x="19.8503%" y="591.50">entry..</text></g><g><title>__GI___libc_free (3 samples, 0.23%)</title><rect x="24.0584%" y="581" width="0.2306%" height="15" fill="rgb(252,136,11)"/><text x="24.3084%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (5 samples, 0.38%)</title><rect x="24.0584%" y="613" width="0.3843%" height="15" fill="rgb(219,138,53)"/><text x="24.3084%" y="623.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (5 samples, 0.38%)</title><rect x="24.0584%" y="597" width="0.3843%" height="15" fill="rgb(211,51,23)"/><text x="24.3084%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (6 samples, 0.46%)</title><rect x="24.0584%" y="629" width="0.4612%" height="15" fill="rgb(247,221,28)"/><text x="24.3084%" y="639.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.15%)</title><rect x="24.5196%" y="613" width="0.1537%" height="15" fill="rgb(251,222,45)"/><text x="24.7696%" y="623.50"></text></g><g><title>_int_free (2 samples, 0.15%)</title><rect x="24.7502%" y="613" width="0.1537%" height="15" fill="rgb(217,162,53)"/><text x="25.0002%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (12 samples, 0.92%)</title><rect x="24.0584%" y="661" width="0.9224%" height="15" fill="rgb(229,93,14)"/><text x="24.3084%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Values as sql_parser::ast::display::AstDisplay&gt;::fmt (12 samples, 0.92%)</title><rect x="24.0584%" y="645" width="0.9224%" height="15" fill="rgb(209,67,49)"/><text x="24.3084%" y="655.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (6 samples, 0.46%)</title><rect x="24.5196%" y="629" width="0.4612%" height="15" fill="rgb(213,87,29)"/><text x="24.7696%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.23%)</title><rect x="25.1345%" y="629" width="0.2306%" height="15" fill="rgb(205,151,52)"/><text x="25.3845%" y="639.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.23%)</title><rect x="25.1345%" y="613" width="0.2306%" height="15" fill="rgb(253,215,39)"/><text x="25.3845%" y="623.50"></text></g><g><title>_int_realloc (3 samples, 0.23%)</title><rect x="25.1345%" y="597" width="0.2306%" height="15" fill="rgb(221,220,41)"/><text x="25.3845%" y="607.50"></text></g><g><title>_int_malloc (2 samples, 0.15%)</title><rect x="25.2114%" y="581" width="0.1537%" height="15" fill="rgb(218,133,21)"/><text x="25.4614%" y="591.50"></text></g><g><title>core::fmt::write (20 samples, 1.54%)</title><rect x="24.0584%" y="693" width="1.5373%" height="15" fill="rgb(221,193,43)"/><text x="24.3084%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (20 samples, 1.54%)</title><rect x="24.0584%" y="677" width="1.5373%" height="15" fill="rgb(240,128,52)"/><text x="24.3084%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::InsertStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (8 samples, 0.61%)</title><rect x="24.9808%" y="661" width="0.6149%" height="15" fill="rgb(253,114,12)"/><text x="25.2308%" y="671.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (7 samples, 0.54%)</title><rect x="25.0576%" y="645" width="0.5380%" height="15" fill="rgb(215,223,47)"/><text x="25.3076%" y="655.50"></text></g><g><title>core::fmt::write (3 samples, 0.23%)</title><rect x="25.3651%" y="629" width="0.2306%" height="15" fill="rgb(248,225,23)"/><text x="25.6151%" y="639.50"></text></g><g><title>sock_def_readable (5 samples, 0.38%)</title><rect x="26.5949%" y="133" width="0.3843%" height="15" fill="rgb(250,108,0)"/><text x="26.8449%" y="143.50"></text></g><g><title>__wake_up_common_lock (4 samples, 0.31%)</title><rect x="26.6718%" y="117" width="0.3075%" height="15" fill="rgb(228,208,7)"/><text x="26.9218%" y="127.50"></text></g><g><title>__wake_up_common (4 samples, 0.31%)</title><rect x="26.6718%" y="101" width="0.3075%" height="15" fill="rgb(244,45,10)"/><text x="26.9218%" y="111.50"></text></g><g><title>pollwake (4 samples, 0.31%)</title><rect x="26.6718%" y="85" width="0.3075%" height="15" fill="rgb(207,125,25)"/><text x="26.9218%" y="95.50"></text></g><g><title>try_to_wake_up (4 samples, 0.31%)</title><rect x="26.6718%" y="69" width="0.3075%" height="15" fill="rgb(210,195,18)"/><text x="26.9218%" y="79.50"></text></g><g><title>__ip_queue_xmit (14 samples, 1.08%)</title><rect x="26.1337%" y="405" width="1.0761%" height="15" fill="rgb(249,80,12)"/><text x="26.3837%" y="415.50"></text></g><g><title>ip_output (14 samples, 1.08%)</title><rect x="26.1337%" y="389" width="1.0761%" height="15" fill="rgb(221,65,9)"/><text x="26.3837%" y="399.50"></text></g><g><title>ip_finish_output2 (13 samples, 1.00%)</title><rect x="26.2106%" y="373" width="0.9992%" height="15" fill="rgb(235,49,36)"/><text x="26.4606%" y="383.50"></text></g><g><title>__local_bh_enable_ip (12 samples, 0.92%)</title><rect x="26.2875%" y="357" width="0.9224%" height="15" fill="rgb(225,32,20)"/><text x="26.5375%" y="367.50"></text></g><g><title>do_softirq (12 samples, 0.92%)</title><rect x="26.2875%" y="341" width="0.9224%" height="15" fill="rgb(215,141,46)"/><text x="26.5375%" y="351.50"></text></g><g><title>do_softirq_own_stack (12 samples, 0.92%)</title><rect x="26.2875%" y="325" width="0.9224%" height="15" fill="rgb(250,160,47)"/><text x="26.5375%" y="335.50"></text></g><g><title>__do_softirq (12 samples, 0.92%)</title><rect x="26.2875%" y="309" width="0.9224%" height="15" fill="rgb(216,222,40)"/><text x="26.5375%" y="319.50"></text></g><g><title>net_rx_action (11 samples, 0.85%)</title><rect x="26.3643%" y="293" width="0.8455%" height="15" fill="rgb(234,217,39)"/><text x="26.6143%" y="303.50"></text></g><g><title>process_backlog (11 samples, 0.85%)</title><rect x="26.3643%" y="277" width="0.8455%" height="15" fill="rgb(207,178,40)"/><text x="26.6143%" y="287.50"></text></g><g><title>__netif_receive_skb_one_core (11 samples, 0.85%)</title><rect x="26.3643%" y="261" width="0.8455%" height="15" fill="rgb(221,136,13)"/><text x="26.6143%" y="271.50"></text></g><g><title>ip_rcv (11 samples, 0.85%)</title><rect x="26.3643%" y="245" width="0.8455%" height="15" fill="rgb(249,199,10)"/><text x="26.6143%" y="255.50"></text></g><g><title>ip_local_deliver (11 samples, 0.85%)</title><rect x="26.3643%" y="229" width="0.8455%" height="15" fill="rgb(249,222,13)"/><text x="26.6143%" y="239.50"></text></g><g><title>ip_local_deliver_finish (11 samples, 0.85%)</title><rect x="26.3643%" y="213" width="0.8455%" height="15" fill="rgb(244,185,38)"/><text x="26.6143%" y="223.50"></text></g><g><title>ip_protocol_deliver_rcu (10 samples, 0.77%)</title><rect x="26.4412%" y="197" width="0.7686%" height="15" fill="rgb(236,202,9)"/><text x="26.6912%" y="207.50"></text></g><g><title>tcp_v4_rcv (10 samples, 0.77%)</title><rect x="26.4412%" y="181" width="0.7686%" height="15" fill="rgb(250,229,37)"/><text x="26.6912%" y="191.50"></text></g><g><title>tcp_v4_do_rcv (9 samples, 0.69%)</title><rect x="26.5181%" y="165" width="0.6918%" height="15" fill="rgb(206,174,23)"/><text x="26.7681%" y="175.50"></text></g><g><title>tcp_rcv_established (9 samples, 0.69%)</title><rect x="26.5181%" y="149" width="0.6918%" height="15" fill="rgb(211,33,43)"/><text x="26.7681%" y="159.50"></text></g><g><title>tcp_ack (3 samples, 0.23%)</title><rect x="26.9792%" y="133" width="0.2306%" height="15" fill="rgb(245,58,50)"/><text x="27.2292%" y="143.50"></text></g><g><title>__tcp_push_pending_frames (15 samples, 1.15%)</title><rect x="26.1337%" y="453" width="1.1530%" height="15" fill="rgb(244,68,36)"/><text x="26.3837%" y="463.50"></text></g><g><title>tcp_write_xmit (15 samples, 1.15%)</title><rect x="26.1337%" y="437" width="1.1530%" height="15" fill="rgb(232,229,15)"/><text x="26.3837%" y="447.50"></text></g><g><title>__tcp_transmit_skb (15 samples, 1.15%)</title><rect x="26.1337%" y="421" width="1.1530%" height="15" fill="rgb(254,30,23)"/><text x="26.3837%" y="431.50"></text></g><g><title>do_syscall_64 (16 samples, 1.23%)</title><rect x="26.1337%" y="549" width="1.2298%" height="15" fill="rgb(235,160,14)"/><text x="26.3837%" y="559.50"></text></g><g><title>__x64_sys_sendto (16 samples, 1.23%)</title><rect x="26.1337%" y="533" width="1.2298%" height="15" fill="rgb(212,155,44)"/><text x="26.3837%" y="543.50"></text></g><g><title>__sys_sendto (16 samples, 1.23%)</title><rect x="26.1337%" y="517" width="1.2298%" height="15" fill="rgb(226,2,50)"/><text x="26.3837%" y="527.50"></text></g><g><title>sock_sendmsg (16 samples, 1.23%)</title><rect x="26.1337%" y="501" width="1.2298%" height="15" fill="rgb(234,177,6)"/><text x="26.3837%" y="511.50"></text></g><g><title>tcp_sendmsg (16 samples, 1.23%)</title><rect x="26.1337%" y="485" width="1.2298%" height="15" fill="rgb(217,24,9)"/><text x="26.3837%" y="495.50"></text></g><g><title>tcp_sendmsg_locked (16 samples, 1.23%)</title><rect x="26.1337%" y="469" width="1.2298%" height="15" fill="rgb(220,13,46)"/><text x="26.3837%" y="479.50"></text></g><g><title>decor::Shim::run_on_tcp (104 samples, 7.99%)</title><rect x="19.4466%" y="757" width="7.9939%" height="15" fill="rgb(239,221,27)"/><text x="19.6966%" y="767.50">decor::Shim..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (104 samples, 7.99%)</title><rect x="19.4466%" y="741" width="7.9939%" height="15" fill="rgb(222,198,25)"/><text x="19.6966%" y="751.50">msql_srv::M..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (104 samples, 7.99%)</title><rect x="19.4466%" y="725" width="7.9939%" height="15" fill="rgb(211,99,13)"/><text x="19.6966%" y="735.50">&lt;decor::Shi..</text></g><g><title>decor::query_transformer::QueryTransformer::query (104 samples, 7.99%)</title><rect x="19.4466%" y="709" width="7.9939%" height="15" fill="rgb(232,111,31)"/><text x="19.6966%" y="719.50">decor::quer..</text></g><g><title>mysql::conn::transaction::Transaction::commit (22 samples, 1.69%)</title><rect x="25.7494%" y="693" width="1.6910%" height="15" fill="rgb(245,82,37)"/><text x="25.9994%" y="703.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (22 samples, 1.69%)</title><rect x="25.7494%" y="677" width="1.6910%" height="15" fill="rgb(227,149,46)"/><text x="25.9994%" y="687.50"></text></g><g><title>mysql::conn::Conn::_query (22 samples, 1.69%)</title><rect x="25.7494%" y="661" width="1.6910%" height="15" fill="rgb(218,36,50)"/><text x="25.9994%" y="671.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (22 samples, 1.69%)</title><rect x="25.7494%" y="645" width="1.6910%" height="15" fill="rgb(226,80,48)"/><text x="25.9994%" y="655.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (22 samples, 1.69%)</title><rect x="25.7494%" y="629" width="1.6910%" height="15" fill="rgb(238,224,15)"/><text x="25.9994%" y="639.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (21 samples, 1.61%)</title><rect x="25.8263%" y="613" width="1.6141%" height="15" fill="rgb(241,136,10)"/><text x="26.0763%" y="623.50"></text></g><g><title>std::sys_common::net::TcpStream::write (21 samples, 1.61%)</title><rect x="25.8263%" y="597" width="1.6141%" height="15" fill="rgb(208,32,45)"/><text x="26.0763%" y="607.50"></text></g><g><title>__libc_send (21 samples, 1.61%)</title><rect x="25.8263%" y="581" width="1.6141%" height="15" fill="rgb(207,135,9)"/><text x="26.0763%" y="591.50"></text></g><g><title>entry_SYSCALL_64 (18 samples, 1.38%)</title><rect x="26.0569%" y="565" width="1.3836%" height="15" fill="rgb(206,86,44)"/><text x="26.3069%" y="575.50"></text></g><g><title>decor::query_transformer::QueryTransformer::issue_to_dt_and_get_mv_stmt (2 samples, 0.15%)</title><rect x="27.5173%" y="757" width="0.1537%" height="15" fill="rgb(245,177,15)"/><text x="27.7673%" y="767.50"></text></g><g><title>decor::query_transformer::QueryTransformer::expr_to_value_expr (2 samples, 0.15%)</title><rect x="27.5173%" y="741" width="0.1537%" height="15" fill="rgb(206,64,50)"/><text x="27.7673%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="27.5173%" y="725" width="0.1537%" height="15" fill="rgb(234,36,40)"/><text x="27.7673%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="27.5173%" y="709" width="0.1537%" height="15" fill="rgb(213,64,8)"/><text x="27.7673%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="27.5173%" y="693" width="0.1537%" height="15" fill="rgb(210,75,36)"/><text x="27.7673%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.15%)</title><rect x="27.5173%" y="677" width="0.1537%" height="15" fill="rgb(229,88,21)"/><text x="27.7673%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.15%)</title><rect x="27.5173%" y="661" width="0.1537%" height="15" fill="rgb(252,204,47)"/><text x="27.7673%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.15%)</title><rect x="27.5173%" y="645" width="0.1537%" height="15" fill="rgb(208,77,27)"/><text x="27.7673%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.15%)</title><rect x="27.5173%" y="629" width="0.1537%" height="15" fill="rgb(221,76,26)"/><text x="27.7673%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.15%)</title><rect x="27.5173%" y="613" width="0.1537%" height="15" fill="rgb(225,139,18)"/><text x="27.7673%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.15%)</title><rect x="27.5173%" y="597" width="0.1537%" height="15" fill="rgb(230,137,11)"/><text x="27.7673%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.15%)</title><rect x="27.5173%" y="581" width="0.1537%" height="15" fill="rgb(212,28,1)"/><text x="27.7673%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.15%)</title><rect x="27.5173%" y="565" width="0.1537%" height="15" fill="rgb(248,164,17)"/><text x="27.7673%" y="575.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.15%)</title><rect x="27.5173%" y="549" width="0.1537%" height="15" fill="rgb(222,171,42)"/><text x="27.7673%" y="559.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.15%)</title><rect x="27.5173%" y="533" width="0.1537%" height="15" fill="rgb(243,84,45)"/><text x="27.7673%" y="543.50"></text></g><g><title>_int_malloc (2 samples, 0.15%)</title><rect x="27.5173%" y="517" width="0.1537%" height="15" fill="rgb(252,49,23)"/><text x="27.7673%" y="527.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (12 samples, 0.92%)</title><rect x="27.9785%" y="661" width="0.9224%" height="15" fill="rgb(215,19,7)"/><text x="28.2285%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (9 samples, 0.69%)</title><rect x="28.2091%" y="645" width="0.6918%" height="15" fill="rgb(238,81,41)"/><text x="28.4591%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (9 samples, 0.69%)</title><rect x="28.2091%" y="629" width="0.6918%" height="15" fill="rgb(210,199,37)"/><text x="28.4591%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (9 samples, 0.69%)</title><rect x="28.2091%" y="613" width="0.6918%" height="15" fill="rgb(244,192,49)"/><text x="28.4591%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.69%)</title><rect x="28.2091%" y="597" width="0.6918%" height="15" fill="rgb(226,211,11)"/><text x="28.4591%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (9 samples, 0.69%)</title><rect x="28.2091%" y="581" width="0.6918%" height="15" fill="rgb(236,162,54)"/><text x="28.4591%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (9 samples, 0.69%)</title><rect x="28.2091%" y="565" width="0.6918%" height="15" fill="rgb(220,229,9)"/><text x="28.4591%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9 samples, 0.69%)</title><rect x="28.2091%" y="549" width="0.6918%" height="15" fill="rgb(250,87,22)"/><text x="28.4591%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (9 samples, 0.69%)</title><rect x="28.2091%" y="533" width="0.6918%" height="15" fill="rgb(239,43,17)"/><text x="28.4591%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (9 samples, 0.69%)</title><rect x="28.2091%" y="517" width="0.6918%" height="15" fill="rgb(231,177,25)"/><text x="28.4591%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.69%)</title><rect x="28.2091%" y="501" width="0.6918%" height="15" fill="rgb(219,179,1)"/><text x="28.4591%" y="511.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.69%)</title><rect x="28.2091%" y="485" width="0.6918%" height="15" fill="rgb(238,219,53)"/><text x="28.4591%" y="495.50"></text></g><g><title>__GI___libc_malloc (9 samples, 0.69%)</title><rect x="28.2091%" y="469" width="0.6918%" height="15" fill="rgb(232,167,36)"/><text x="28.4591%" y="479.50"></text></g><g><title>_int_malloc (7 samples, 0.54%)</title><rect x="28.3628%" y="453" width="0.5380%" height="15" fill="rgb(244,19,51)"/><text x="28.6128%" y="463.50"></text></g><g><title>alloc_pages_vma (3 samples, 0.23%)</title><rect x="29.1314%" y="549" width="0.2306%" height="15" fill="rgb(224,6,22)"/><text x="29.3814%" y="559.50"></text></g><g><title>__alloc_pages_nodemask (3 samples, 0.23%)</title><rect x="29.1314%" y="533" width="0.2306%" height="15" fill="rgb(224,145,5)"/><text x="29.3814%" y="543.50"></text></g><g><title>get_page_from_freelist (3 samples, 0.23%)</title><rect x="29.1314%" y="517" width="0.2306%" height="15" fill="rgb(234,130,49)"/><text x="29.3814%" y="527.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.61%)</title><rect x="28.9008%" y="661" width="0.6149%" height="15" fill="rgb(254,6,2)"/><text x="29.1508%" y="671.50"></text></g><g><title>_int_malloc (7 samples, 0.54%)</title><rect x="28.9777%" y="645" width="0.5380%" height="15" fill="rgb(208,96,46)"/><text x="29.2277%" y="655.50"></text></g><g><title>sysmalloc (6 samples, 0.46%)</title><rect x="29.0546%" y="629" width="0.4612%" height="15" fill="rgb(239,3,39)"/><text x="29.3046%" y="639.50"></text></g><g><title>page_fault (6 samples, 0.46%)</title><rect x="29.0546%" y="613" width="0.4612%" height="15" fill="rgb(233,210,1)"/><text x="29.3046%" y="623.50"></text></g><g><title>do_user_addr_fault (6 samples, 0.46%)</title><rect x="29.0546%" y="597" width="0.4612%" height="15" fill="rgb(244,137,37)"/><text x="29.3046%" y="607.50"></text></g><g><title>handle_mm_fault (6 samples, 0.46%)</title><rect x="29.0546%" y="581" width="0.4612%" height="15" fill="rgb(240,136,2)"/><text x="29.3046%" y="591.50"></text></g><g><title>__handle_mm_fault (6 samples, 0.46%)</title><rect x="29.0546%" y="565" width="0.4612%" height="15" fill="rgb(239,18,37)"/><text x="29.3046%" y="575.50"></text></g><g><title>mem_cgroup_try_charge_delay (2 samples, 0.15%)</title><rect x="29.3620%" y="549" width="0.1537%" height="15" fill="rgb(218,185,22)"/><text x="29.6120%" y="559.50"></text></g><g><title>mem_cgroup_try_charge (2 samples, 0.15%)</title><rect x="29.3620%" y="533" width="0.1537%" height="15" fill="rgb(225,218,4)"/><text x="29.6120%" y="543.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (25 samples, 1.92%)</title><rect x="27.6710%" y="725" width="1.9216%" height="15" fill="rgb(230,182,32)"/><text x="27.9210%" y="735.50">&lt;..</text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (25 samples, 1.92%)</title><rect x="27.6710%" y="709" width="1.9216%" height="15" fill="rgb(242,56,43)"/><text x="27.9210%" y="719.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (24 samples, 1.84%)</title><rect x="27.7479%" y="693" width="1.8447%" height="15" fill="rgb(233,99,24)"/><text x="27.9979%" y="703.50">a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (23 samples, 1.77%)</title><rect x="27.8248%" y="677" width="1.7679%" height="15" fill="rgb(234,209,42)"/><text x="28.0748%" y="687.50"></text></g><g><title>core::fmt::write (2 samples, 0.15%)</title><rect x="29.5926%" y="725" width="0.1537%" height="15" fill="rgb(227,7,12)"/><text x="29.8426%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (2 samples, 0.15%)</title><rect x="29.5926%" y="709" width="0.1537%" height="15" fill="rgb(245,203,43)"/><text x="29.8426%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.15%)</title><rect x="29.5926%" y="693" width="0.1537%" height="15" fill="rgb(238,205,33)"/><text x="29.8426%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Values as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.15%)</title><rect x="29.5926%" y="677" width="0.1537%" height="15" fill="rgb(231,56,7)"/><text x="29.8426%" y="687.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.15%)</title><rect x="29.7463%" y="693" width="0.1537%" height="15" fill="rgb(244,186,29)"/><text x="29.9963%" y="703.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (2 samples, 0.15%)</title><rect x="29.7463%" y="677" width="0.1537%" height="15" fill="rgb(234,111,31)"/><text x="29.9963%" y="687.50"></text></g><g><title>decor::helpers::str_ident_match (5 samples, 0.38%)</title><rect x="29.7463%" y="725" width="0.3843%" height="15" fill="rgb(241,149,10)"/><text x="29.9963%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.38%)</title><rect x="29.7463%" y="709" width="0.3843%" height="15" fill="rgb(249,206,44)"/><text x="29.9963%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.15%)</title><rect x="29.9769%" y="693" width="0.1537%" height="15" fill="rgb(251,153,30)"/><text x="30.2269%" y="703.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.15%)</title><rect x="29.9769%" y="677" width="0.1537%" height="15" fill="rgb(239,152,38)"/><text x="30.2269%" y="687.50"></text></g><g><title>_int_realloc (2 samples, 0.15%)</title><rect x="29.9769%" y="661" width="0.1537%" height="15" fill="rgb(249,139,47)"/><text x="30.2269%" y="671.50"></text></g><g><title>_int_malloc (2 samples, 0.15%)</title><rect x="29.9769%" y="645" width="0.1537%" height="15" fill="rgb(244,64,35)"/><text x="30.2269%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (5 samples, 0.38%)</title><rect x="30.2844%" y="629" width="0.3843%" height="15" fill="rgb(216,46,15)"/><text x="30.5344%" y="639.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (5 samples, 0.38%)</title><rect x="30.2844%" y="613" width="0.3843%" height="15" fill="rgb(250,74,19)"/><text x="30.5344%" y="623.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (4 samples, 0.31%)</title><rect x="30.3613%" y="597" width="0.3075%" height="15" fill="rgb(249,42,33)"/><text x="30.6113%" y="607.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (4 samples, 0.31%)</title><rect x="30.3613%" y="581" width="0.3075%" height="15" fill="rgb(242,149,17)"/><text x="30.6113%" y="591.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (3 samples, 0.23%)</title><rect x="30.4381%" y="565" width="0.2306%" height="15" fill="rgb(244,29,21)"/><text x="30.6881%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (3 samples, 0.23%)</title><rect x="30.4381%" y="549" width="0.2306%" height="15" fill="rgb(220,130,37)"/><text x="30.6881%" y="559.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (3 samples, 0.23%)</title><rect x="30.4381%" y="533" width="0.2306%" height="15" fill="rgb(211,67,2)"/><text x="30.6881%" y="543.50"></text></g><g><title>alloc::fmt::format (9 samples, 0.69%)</title><rect x="30.2075%" y="693" width="0.6918%" height="15" fill="rgb(235,68,52)"/><text x="30.4575%" y="703.50"></text></g><g><title>core::fmt::Write::write_fmt (9 samples, 0.69%)</title><rect x="30.2075%" y="677" width="0.6918%" height="15" fill="rgb(246,142,3)"/><text x="30.4575%" y="687.50"></text></g><g><title>core::fmt::write (9 samples, 0.69%)</title><rect x="30.2075%" y="661" width="0.6918%" height="15" fill="rgb(241,25,7)"/><text x="30.4575%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (9 samples, 0.69%)</title><rect x="30.2075%" y="645" width="0.6918%" height="15" fill="rgb(242,119,39)"/><text x="30.4575%" y="655.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (3 samples, 0.23%)</title><rect x="30.6687%" y="629" width="0.2306%" height="15" fill="rgb(241,98,45)"/><text x="30.9187%" y="639.50"></text></g><g><title>core::fmt::write (3 samples, 0.23%)</title><rect x="30.6687%" y="613" width="0.2306%" height="15" fill="rgb(254,28,30)"/><text x="30.9187%" y="623.50"></text></g><g><title>decor::mv_transformer::MVTransformer::objname_to_mv_string (11 samples, 0.85%)</title><rect x="30.1307%" y="725" width="0.8455%" height="15" fill="rgb(241,142,54)"/><text x="30.3807%" y="735.50"></text></g><g><title>decor::mv_transformer::MVTransformer::idents_to_mv_idents (10 samples, 0.77%)</title><rect x="30.2075%" y="709" width="0.7686%" height="15" fill="rgb(222,85,15)"/><text x="30.4575%" y="719.50"></text></g><g><title>decor::qtcache::QueryCache::insert_gid_into_caches (2 samples, 0.15%)</title><rect x="31.3605%" y="709" width="0.1537%" height="15" fill="rgb(210,85,47)"/><text x="31.6105%" y="719.50"></text></g><g><title>__kfree_skb (3 samples, 0.23%)</title><rect x="31.8985%" y="453" width="0.2306%" height="15" fill="rgb(224,206,25)"/><text x="32.1485%" y="463.50"></text></g><g><title>skb_release_head_state (2 samples, 0.15%)</title><rect x="31.9754%" y="437" width="0.1537%" height="15" fill="rgb(243,201,19)"/><text x="32.2254%" y="447.50"></text></g><g><title>dst_release (2 samples, 0.15%)</title><rect x="31.9754%" y="421" width="0.1537%" height="15" fill="rgb(236,59,4)"/><text x="32.2254%" y="431.50"></text></g><g><title>__perf_event_task_sched_out (2 samples, 0.15%)</title><rect x="32.2829%" y="373" width="0.1537%" height="15" fill="rgb(254,179,45)"/><text x="32.5329%" y="383.50"></text></g><g><title>dequeue_task_fair (2 samples, 0.15%)</title><rect x="32.4366%" y="373" width="0.1537%" height="15" fill="rgb(226,14,10)"/><text x="32.6866%" y="383.50"></text></g><g><title>dequeue_entity (2 samples, 0.15%)</title><rect x="32.4366%" y="357" width="0.1537%" height="15" fill="rgb(244,27,41)"/><text x="32.6866%" y="367.50"></text></g><g><title>finish_task_switch (2 samples, 0.15%)</title><rect x="32.5903%" y="373" width="0.1537%" height="15" fill="rgb(235,35,32)"/><text x="32.8403%" y="383.50"></text></g><g><title>__perf_event_task_sched_in (2 samples, 0.15%)</title><rect x="32.5903%" y="357" width="0.1537%" height="15" fill="rgb(218,68,31)"/><text x="32.8403%" y="367.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (2 samples, 0.15%)</title><rect x="32.5903%" y="341" width="0.1537%" height="15" fill="rgb(207,120,37)"/><text x="32.8403%" y="351.50"></text></g><g><title>native_write_msr (2 samples, 0.15%)</title><rect x="32.5903%" y="325" width="0.1537%" height="15" fill="rgb(227,98,0)"/><text x="32.8403%" y="335.50"></text></g><g><title>pick_next_task_fair (2 samples, 0.15%)</title><rect x="32.7440%" y="373" width="0.1537%" height="15" fill="rgb(207,7,3)"/><text x="32.9940%" y="383.50"></text></g><g><title>sk_wait_data (13 samples, 1.00%)</title><rect x="32.1291%" y="453" width="0.9992%" height="15" fill="rgb(206,98,19)"/><text x="32.3791%" y="463.50"></text></g><g><title>wait_woken (11 samples, 0.85%)</title><rect x="32.2829%" y="437" width="0.8455%" height="15" fill="rgb(217,5,26)"/><text x="32.5329%" y="447.50"></text></g><g><title>schedule_timeout (11 samples, 0.85%)</title><rect x="32.2829%" y="421" width="0.8455%" height="15" fill="rgb(235,190,38)"/><text x="32.5329%" y="431.50"></text></g><g><title>schedule (11 samples, 0.85%)</title><rect x="32.2829%" y="405" width="0.8455%" height="15" fill="rgb(247,86,24)"/><text x="32.5329%" y="415.50"></text></g><g><title>__schedule (11 samples, 0.85%)</title><rect x="32.2829%" y="389" width="0.8455%" height="15" fill="rgb(205,101,16)"/><text x="32.5329%" y="399.50"></text></g><g><title>__x64_sys_recvfrom (19 samples, 1.46%)</title><rect x="31.7448%" y="517" width="1.4604%" height="15" fill="rgb(246,168,33)"/><text x="31.9948%" y="527.50"></text></g><g><title>__sys_recvfrom (19 samples, 1.46%)</title><rect x="31.7448%" y="501" width="1.4604%" height="15" fill="rgb(231,114,1)"/><text x="31.9948%" y="511.50"></text></g><g><title>inet_recvmsg (19 samples, 1.46%)</title><rect x="31.7448%" y="485" width="1.4604%" height="15" fill="rgb(207,184,53)"/><text x="31.9948%" y="495.50"></text></g><g><title>tcp_recvmsg (19 samples, 1.46%)</title><rect x="31.7448%" y="469" width="1.4604%" height="15" fill="rgb(224,95,51)"/><text x="31.9948%" y="479.50"></text></g><g><title>do_syscall_64 (21 samples, 1.61%)</title><rect x="31.7448%" y="533" width="1.6141%" height="15" fill="rgb(212,188,45)"/><text x="31.9948%" y="543.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (26 samples, 2.00%)</title><rect x="31.7448%" y="645" width="1.9985%" height="15" fill="rgb(223,154,38)"/><text x="31.9948%" y="655.50">&lt;..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (26 samples, 2.00%)</title><rect x="31.7448%" y="629" width="1.9985%" height="15" fill="rgb(251,22,52)"/><text x="31.9948%" y="639.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::read (26 samples, 2.00%)</title><rect x="31.7448%" y="613" width="1.9985%" height="15" fill="rgb(229,209,22)"/><text x="31.9948%" y="623.50">s..</text></g><g><title>std::sys::unix::net::Socket::read (26 samples, 2.00%)</title><rect x="31.7448%" y="597" width="1.9985%" height="15" fill="rgb(234,138,34)"/><text x="31.9948%" y="607.50">s..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (26 samples, 2.00%)</title><rect x="31.7448%" y="581" width="1.9985%" height="15" fill="rgb(212,95,11)"/><text x="31.9948%" y="591.50">s..</text></g><g><title>__libc_recv (26 samples, 2.00%)</title><rect x="31.7448%" y="565" width="1.9985%" height="15" fill="rgb(240,179,47)"/><text x="31.9948%" y="575.50">_..</text></g><g><title>entry_SYSCALL_64 (26 samples, 2.00%)</title><rect x="31.7448%" y="549" width="1.9985%" height="15" fill="rgb(240,163,11)"/><text x="31.9948%" y="559.50">e..</text></g><g><title>prepare_exit_to_usermode (5 samples, 0.38%)</title><rect x="33.3590%" y="533" width="0.3843%" height="15" fill="rgb(236,37,12)"/><text x="33.6090%" y="543.50"></text></g><g><title>switch_fpu_return (2 samples, 0.15%)</title><rect x="33.5895%" y="517" width="0.1537%" height="15" fill="rgb(232,164,16)"/><text x="33.8395%" y="527.50"></text></g><g><title>mysql::conn::Conn::read_packet (30 samples, 2.31%)</title><rect x="31.6679%" y="677" width="2.3059%" height="15" fill="rgb(244,205,15)"/><text x="31.9179%" y="687.50">m..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 2.31%)</title><rect x="31.6679%" y="661" width="2.3059%" height="15" fill="rgb(223,117,47)"/><text x="31.9179%" y="671.50">&lt;..</text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (3 samples, 0.23%)</title><rect x="33.7433%" y="645" width="0.2306%" height="15" fill="rgb(244,107,35)"/><text x="33.9933%" y="655.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (3 samples, 0.23%)</title><rect x="33.7433%" y="629" width="0.2306%" height="15" fill="rgb(205,140,8)"/><text x="33.9933%" y="639.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (3 samples, 0.23%)</title><rect x="33.7433%" y="613" width="0.2306%" height="15" fill="rgb(228,84,46)"/><text x="33.9933%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.23%)</title><rect x="33.7433%" y="597" width="0.2306%" height="15" fill="rgb(254,188,9)"/><text x="33.9933%" y="607.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.23%)</title><rect x="33.7433%" y="581" width="0.2306%" height="15" fill="rgb(206,112,54)"/><text x="33.9933%" y="591.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (33 samples, 2.54%)</title><rect x="31.5911%" y="693" width="2.5365%" height="15" fill="rgb(216,84,49)"/><text x="31.8411%" y="703.50">my..</text></g><g><title>lock_sock_nested (2 samples, 0.15%)</title><rect x="34.2813%" y="517" width="0.1537%" height="15" fill="rgb(214,194,35)"/><text x="34.5313%" y="527.50"></text></g><g><title>__ip_local_out (3 samples, 0.23%)</title><rect x="34.6656%" y="437" width="0.2306%" height="15" fill="rgb(249,28,3)"/><text x="34.9156%" y="447.50"></text></g><g><title>enqueue_task (2 samples, 0.15%)</title><rect x="35.6649%" y="101" width="0.1537%" height="15" fill="rgb(222,56,52)"/><text x="35.9149%" y="111.50"></text></g><g><title>__wake_up_common (7 samples, 0.54%)</title><rect x="35.5880%" y="149" width="0.5380%" height="15" fill="rgb(245,217,50)"/><text x="35.8380%" y="159.50"></text></g><g><title>pollwake (7 samples, 0.54%)</title><rect x="35.5880%" y="133" width="0.5380%" height="15" fill="rgb(213,201,24)"/><text x="35.8380%" y="143.50"></text></g><g><title>try_to_wake_up (6 samples, 0.46%)</title><rect x="35.6649%" y="117" width="0.4612%" height="15" fill="rgb(248,116,28)"/><text x="35.9149%" y="127.50"></text></g><g><title>sock_def_readable (8 samples, 0.61%)</title><rect x="35.5880%" y="181" width="0.6149%" height="15" fill="rgb(219,72,43)"/><text x="35.8380%" y="191.50"></text></g><g><title>__wake_up_common_lock (8 samples, 0.61%)</title><rect x="35.5880%" y="165" width="0.6149%" height="15" fill="rgb(209,138,14)"/><text x="35.8380%" y="175.50"></text></g><g><title>__local_bh_enable_ip (20 samples, 1.54%)</title><rect x="35.1268%" y="405" width="1.5373%" height="15" fill="rgb(222,18,33)"/><text x="35.3768%" y="415.50"></text></g><g><title>do_softirq (20 samples, 1.54%)</title><rect x="35.1268%" y="389" width="1.5373%" height="15" fill="rgb(213,199,7)"/><text x="35.3768%" y="399.50"></text></g><g><title>do_softirq_own_stack (20 samples, 1.54%)</title><rect x="35.1268%" y="373" width="1.5373%" height="15" fill="rgb(250,110,10)"/><text x="35.3768%" y="383.50"></text></g><g><title>__do_softirq (20 samples, 1.54%)</title><rect x="35.1268%" y="357" width="1.5373%" height="15" fill="rgb(248,123,6)"/><text x="35.3768%" y="367.50"></text></g><g><title>net_rx_action (19 samples, 1.46%)</title><rect x="35.2037%" y="341" width="1.4604%" height="15" fill="rgb(206,91,31)"/><text x="35.4537%" y="351.50"></text></g><g><title>process_backlog (18 samples, 1.38%)</title><rect x="35.2806%" y="325" width="1.3836%" height="15" fill="rgb(211,154,13)"/><text x="35.5306%" y="335.50"></text></g><g><title>__netif_receive_skb_one_core (18 samples, 1.38%)</title><rect x="35.2806%" y="309" width="1.3836%" height="15" fill="rgb(225,148,7)"/><text x="35.5306%" y="319.50"></text></g><g><title>ip_rcv (17 samples, 1.31%)</title><rect x="35.3574%" y="293" width="1.3067%" height="15" fill="rgb(220,160,43)"/><text x="35.6074%" y="303.50"></text></g><g><title>ip_local_deliver (17 samples, 1.31%)</title><rect x="35.3574%" y="277" width="1.3067%" height="15" fill="rgb(213,52,39)"/><text x="35.6074%" y="287.50"></text></g><g><title>ip_local_deliver_finish (16 samples, 1.23%)</title><rect x="35.4343%" y="261" width="1.2298%" height="15" fill="rgb(243,137,7)"/><text x="35.6843%" y="271.50"></text></g><g><title>ip_protocol_deliver_rcu (16 samples, 1.23%)</title><rect x="35.4343%" y="245" width="1.2298%" height="15" fill="rgb(230,79,13)"/><text x="35.6843%" y="255.50"></text></g><g><title>tcp_v4_rcv (15 samples, 1.15%)</title><rect x="35.5111%" y="229" width="1.1530%" height="15" fill="rgb(247,105,23)"/><text x="35.7611%" y="239.50"></text></g><g><title>tcp_v4_do_rcv (14 samples, 1.08%)</title><rect x="35.5880%" y="213" width="1.0761%" height="15" fill="rgb(223,179,41)"/><text x="35.8380%" y="223.50"></text></g><g><title>tcp_rcv_established (14 samples, 1.08%)</title><rect x="35.5880%" y="197" width="1.0761%" height="15" fill="rgb(218,9,34)"/><text x="35.8380%" y="207.50"></text></g><g><title>tcp_ack (6 samples, 0.46%)</title><rect x="36.2029%" y="181" width="0.4612%" height="15" fill="rgb(222,106,8)"/><text x="36.4529%" y="191.50"></text></g><g><title>ip_finish_output2 (22 samples, 1.69%)</title><rect x="35.0500%" y="421" width="1.6910%" height="15" fill="rgb(211,220,0)"/><text x="35.3000%" y="431.50"></text></g><g><title>__ip_queue_xmit (28 samples, 2.15%)</title><rect x="34.6656%" y="453" width="2.1522%" height="15" fill="rgb(229,52,16)"/><text x="34.9156%" y="463.50">_..</text></g><g><title>ip_output (23 samples, 1.77%)</title><rect x="35.0500%" y="437" width="1.7679%" height="15" fill="rgb(212,155,18)"/><text x="35.3000%" y="447.50"></text></g><g><title>__tcp_transmit_skb (31 samples, 2.38%)</title><rect x="34.5888%" y="469" width="2.3828%" height="15" fill="rgb(242,21,14)"/><text x="34.8388%" y="479.50">__..</text></g><g><title>__tcp_push_pending_frames (33 samples, 2.54%)</title><rect x="34.5888%" y="501" width="2.5365%" height="15" fill="rgb(222,19,48)"/><text x="34.8388%" y="511.50">__..</text></g><g><title>tcp_write_xmit (33 samples, 2.54%)</title><rect x="34.5888%" y="485" width="2.5365%" height="15" fill="rgb(232,45,27)"/><text x="34.8388%" y="495.50">tc..</text></g><g><title>tcp_event_new_data_sent (2 samples, 0.15%)</title><rect x="36.9716%" y="469" width="0.1537%" height="15" fill="rgb(249,103,42)"/><text x="37.2216%" y="479.50"></text></g><g><title>sk_stream_alloc_skb (2 samples, 0.15%)</title><rect x="37.1253%" y="501" width="0.1537%" height="15" fill="rgb(246,81,33)"/><text x="37.3753%" y="511.50"></text></g><g><title>__alloc_skb (2 samples, 0.15%)</title><rect x="37.1253%" y="485" width="0.1537%" height="15" fill="rgb(252,33,42)"/><text x="37.3753%" y="495.50"></text></g><g><title>__x64_sys_sendto (42 samples, 3.23%)</title><rect x="34.2045%" y="581" width="3.2283%" height="15" fill="rgb(209,212,41)"/><text x="34.4545%" y="591.50">__x..</text></g><g><title>__sys_sendto (42 samples, 3.23%)</title><rect x="34.2045%" y="565" width="3.2283%" height="15" fill="rgb(207,154,6)"/><text x="34.4545%" y="575.50">__s..</text></g><g><title>sock_sendmsg (42 samples, 3.23%)</title><rect x="34.2045%" y="549" width="3.2283%" height="15" fill="rgb(223,64,47)"/><text x="34.4545%" y="559.50">soc..</text></g><g><title>tcp_sendmsg (42 samples, 3.23%)</title><rect x="34.2045%" y="533" width="3.2283%" height="15" fill="rgb(211,161,38)"/><text x="34.4545%" y="543.50">tcp..</text></g><g><title>tcp_sendmsg_locked (39 samples, 3.00%)</title><rect x="34.4350%" y="517" width="2.9977%" height="15" fill="rgb(219,138,40)"/><text x="34.6850%" y="527.50">tcp..</text></g><g><title>do_syscall_64 (44 samples, 3.38%)</title><rect x="34.1276%" y="597" width="3.3820%" height="15" fill="rgb(241,228,46)"/><text x="34.3776%" y="607.50">do_..</text></g><g><title>decor::qtcache::QueryCache::insert_uid2gids_for_values (87 samples, 6.69%)</title><rect x="30.9762%" y="725" width="6.6872%" height="15" fill="rgb(223,209,38)"/><text x="31.2262%" y="735.50">decor::qt..</text></g><g><title>mysql::conn::Conn::_query (80 samples, 6.15%)</title><rect x="31.5142%" y="709" width="6.1491%" height="15" fill="rgb(236,164,45)"/><text x="31.7642%" y="719.50">mysql::c..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (46 samples, 3.54%)</title><rect x="34.1276%" y="693" width="3.5357%" height="15" fill="rgb(231,15,5)"/><text x="34.3776%" y="703.50">mys..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (46 samples, 3.54%)</title><rect x="34.1276%" y="677" width="3.5357%" height="15" fill="rgb(252,35,15)"/><text x="34.3776%" y="687.50">std..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (46 samples, 3.54%)</title><rect x="34.1276%" y="661" width="3.5357%" height="15" fill="rgb(248,181,18)"/><text x="34.3776%" y="671.50">&lt;st..</text></g><g><title>std::sys_common::net::TcpStream::write (46 samples, 3.54%)</title><rect x="34.1276%" y="645" width="3.5357%" height="15" fill="rgb(233,39,42)"/><text x="34.3776%" y="655.50">std..</text></g><g><title>__libc_send (46 samples, 3.54%)</title><rect x="34.1276%" y="629" width="3.5357%" height="15" fill="rgb(238,110,33)"/><text x="34.3776%" y="639.50">__l..</text></g><g><title>entry_SYSCALL_64 (46 samples, 3.54%)</title><rect x="34.1276%" y="613" width="3.5357%" height="15" fill="rgb(233,195,10)"/><text x="34.3776%" y="623.50">ent..</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.15%)</title><rect x="37.5096%" y="597" width="0.1537%" height="15" fill="rgb(254,105,3)"/><text x="37.7596%" y="607.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (5 samples, 0.38%)</title><rect x="37.9708%" y="645" width="0.3843%" height="15" fill="rgb(221,225,9)"/><text x="38.2208%" y="655.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.38%)</title><rect x="37.9708%" y="629" width="0.3843%" height="15" fill="rgb(224,227,45)"/><text x="38.2208%" y="639.50"></text></g><g><title>_int_malloc (4 samples, 0.31%)</title><rect x="38.0477%" y="613" width="0.3075%" height="15" fill="rgb(229,198,43)"/><text x="38.2977%" y="623.50"></text></g><g><title>pick_next_task_fair (3 samples, 0.23%)</title><rect x="38.8932%" y="357" width="0.2306%" height="15" fill="rgb(206,209,35)"/><text x="39.1432%" y="367.50"></text></g><g><title>__x64_sys_recvfrom (11 samples, 0.85%)</title><rect x="38.4320%" y="501" width="0.8455%" height="15" fill="rgb(245,195,53)"/><text x="38.6820%" y="511.50"></text></g><g><title>__sys_recvfrom (11 samples, 0.85%)</title><rect x="38.4320%" y="485" width="0.8455%" height="15" fill="rgb(240,92,26)"/><text x="38.6820%" y="495.50"></text></g><g><title>inet_recvmsg (11 samples, 0.85%)</title><rect x="38.4320%" y="469" width="0.8455%" height="15" fill="rgb(207,40,23)"/><text x="38.6820%" y="479.50"></text></g><g><title>tcp_recvmsg (11 samples, 0.85%)</title><rect x="38.4320%" y="453" width="0.8455%" height="15" fill="rgb(223,111,35)"/><text x="38.6820%" y="463.50"></text></g><g><title>sk_wait_data (7 samples, 0.54%)</title><rect x="38.7394%" y="437" width="0.5380%" height="15" fill="rgb(229,147,28)"/><text x="38.9894%" y="447.50"></text></g><g><title>wait_woken (7 samples, 0.54%)</title><rect x="38.7394%" y="421" width="0.5380%" height="15" fill="rgb(211,29,28)"/><text x="38.9894%" y="431.50"></text></g><g><title>schedule_timeout (7 samples, 0.54%)</title><rect x="38.7394%" y="405" width="0.5380%" height="15" fill="rgb(228,72,33)"/><text x="38.9894%" y="415.50"></text></g><g><title>schedule (7 samples, 0.54%)</title><rect x="38.7394%" y="389" width="0.5380%" height="15" fill="rgb(205,214,31)"/><text x="38.9894%" y="399.50"></text></g><g><title>__schedule (7 samples, 0.54%)</title><rect x="38.7394%" y="373" width="0.5380%" height="15" fill="rgb(224,111,15)"/><text x="38.9894%" y="383.50"></text></g><g><title>do_syscall_64 (12 samples, 0.92%)</title><rect x="38.4320%" y="517" width="0.9224%" height="15" fill="rgb(253,21,26)"/><text x="38.6820%" y="527.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (15 samples, 1.15%)</title><rect x="38.4320%" y="629" width="1.1530%" height="15" fill="rgb(245,139,43)"/><text x="38.6820%" y="639.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (15 samples, 1.15%)</title><rect x="38.4320%" y="613" width="1.1530%" height="15" fill="rgb(252,170,7)"/><text x="38.6820%" y="623.50"></text></g><g><title>std::sys_common::net::TcpStream::read (15 samples, 1.15%)</title><rect x="38.4320%" y="597" width="1.1530%" height="15" fill="rgb(231,118,14)"/><text x="38.6820%" y="607.50"></text></g><g><title>std::sys::unix::net::Socket::read (15 samples, 1.15%)</title><rect x="38.4320%" y="581" width="1.1530%" height="15" fill="rgb(238,83,0)"/><text x="38.6820%" y="591.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (15 samples, 1.15%)</title><rect x="38.4320%" y="565" width="1.1530%" height="15" fill="rgb(221,39,39)"/><text x="38.6820%" y="575.50"></text></g><g><title>__libc_recv (15 samples, 1.15%)</title><rect x="38.4320%" y="549" width="1.1530%" height="15" fill="rgb(222,119,46)"/><text x="38.6820%" y="559.50"></text></g><g><title>entry_SYSCALL_64 (15 samples, 1.15%)</title><rect x="38.4320%" y="533" width="1.1530%" height="15" fill="rgb(222,165,49)"/><text x="38.6820%" y="543.50"></text></g><g><title>prepare_exit_to_usermode (3 samples, 0.23%)</title><rect x="39.3543%" y="517" width="0.2306%" height="15" fill="rgb(219,113,52)"/><text x="39.6043%" y="527.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 1.46%)</title><rect x="38.3551%" y="645" width="1.4604%" height="15" fill="rgb(214,7,15)"/><text x="38.6051%" y="655.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (3 samples, 0.23%)</title><rect x="39.5849%" y="629" width="0.2306%" height="15" fill="rgb(235,32,4)"/><text x="39.8349%" y="639.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (2 samples, 0.15%)</title><rect x="39.6618%" y="613" width="0.1537%" height="15" fill="rgb(238,90,54)"/><text x="39.9118%" y="623.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.15%)</title><rect x="39.6618%" y="597" width="0.1537%" height="15" fill="rgb(213,208,19)"/><text x="39.9118%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.15%)</title><rect x="39.6618%" y="581" width="0.1537%" height="15" fill="rgb(233,156,4)"/><text x="39.9118%" y="591.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.15%)</title><rect x="39.6618%" y="565" width="0.1537%" height="15" fill="rgb(207,194,5)"/><text x="39.9118%" y="575.50"></text></g><g><title>mysql::conn::Conn::read_packet (26 samples, 2.00%)</title><rect x="37.9708%" y="661" width="1.9985%" height="15" fill="rgb(206,111,30)"/><text x="38.2208%" y="671.50">m..</text></g><g><title>mysql::conn::Conn::handle_result_set (29 samples, 2.23%)</title><rect x="37.8171%" y="677" width="2.2291%" height="15" fill="rgb(243,70,54)"/><text x="38.0671%" y="687.50">m..</text></g><g><title>dev_hard_start_xmit (2 samples, 0.15%)</title><rect x="40.4304%" y="373" width="0.1537%" height="15" fill="rgb(242,28,8)"/><text x="40.6804%" y="383.50"></text></g><g><title>loopback_xmit (2 samples, 0.15%)</title><rect x="40.4304%" y="357" width="0.1537%" height="15" fill="rgb(219,106,18)"/><text x="40.6804%" y="367.50"></text></g><g><title>__dev_queue_xmit (3 samples, 0.23%)</title><rect x="40.4304%" y="389" width="0.2306%" height="15" fill="rgb(244,222,10)"/><text x="40.6804%" y="399.50"></text></g><g><title>enqueue_task (3 samples, 0.23%)</title><rect x="41.2759%" y="85" width="0.2306%" height="15" fill="rgb(236,179,52)"/><text x="41.5259%" y="95.50"></text></g><g><title>enqueue_task_fair (3 samples, 0.23%)</title><rect x="41.5065%" y="85" width="0.2306%" height="15" fill="rgb(213,23,39)"/><text x="41.7565%" y="95.50"></text></g><g><title>enqueue_entity (3 samples, 0.23%)</title><rect x="41.5065%" y="69" width="0.2306%" height="15" fill="rgb(238,48,10)"/><text x="41.7565%" y="79.50"></text></g><g><title>sock_def_readable (10 samples, 0.77%)</title><rect x="41.1222%" y="165" width="0.7686%" height="15" fill="rgb(251,196,23)"/><text x="41.3722%" y="175.50"></text></g><g><title>__wake_up_common_lock (10 samples, 0.77%)</title><rect x="41.1222%" y="149" width="0.7686%" height="15" fill="rgb(250,152,24)"/><text x="41.3722%" y="159.50"></text></g><g><title>__wake_up_common (10 samples, 0.77%)</title><rect x="41.1222%" y="133" width="0.7686%" height="15" fill="rgb(209,150,17)"/><text x="41.3722%" y="143.50"></text></g><g><title>pollwake (10 samples, 0.77%)</title><rect x="41.1222%" y="117" width="0.7686%" height="15" fill="rgb(234,202,34)"/><text x="41.3722%" y="127.50"></text></g><g><title>try_to_wake_up (9 samples, 0.69%)</title><rect x="41.1991%" y="101" width="0.6918%" height="15" fill="rgb(253,148,53)"/><text x="41.4491%" y="111.50"></text></g><g><title>select_task_rq_fair (2 samples, 0.15%)</title><rect x="41.7371%" y="85" width="0.1537%" height="15" fill="rgb(218,129,16)"/><text x="41.9871%" y="95.50"></text></g><g><title>__kfree_skb (2 samples, 0.15%)</title><rect x="41.9677%" y="149" width="0.1537%" height="15" fill="rgb(216,85,19)"/><text x="42.2177%" y="159.50"></text></g><g><title>kfree (2 samples, 0.15%)</title><rect x="41.9677%" y="133" width="0.1537%" height="15" fill="rgb(235,228,7)"/><text x="42.2177%" y="143.50"></text></g><g><title>tcp_ack (5 samples, 0.38%)</title><rect x="41.8909%" y="165" width="0.3843%" height="15" fill="rgb(245,175,0)"/><text x="42.1409%" y="175.50"></text></g><g><title>__ip_queue_xmit (27 samples, 2.08%)</title><rect x="40.2767%" y="437" width="2.0753%" height="15" fill="rgb(208,168,36)"/><text x="40.5267%" y="447.50">_..</text></g><g><title>ip_output (26 samples, 2.00%)</title><rect x="40.3536%" y="421" width="1.9985%" height="15" fill="rgb(246,171,24)"/><text x="40.6036%" y="431.50">i..</text></g><g><title>ip_finish_output2 (25 samples, 1.92%)</title><rect x="40.4304%" y="405" width="1.9216%" height="15" fill="rgb(215,142,24)"/><text x="40.6804%" y="415.50">i..</text></g><g><title>__local_bh_enable_ip (22 samples, 1.69%)</title><rect x="40.6610%" y="389" width="1.6910%" height="15" fill="rgb(250,187,7)"/><text x="40.9110%" y="399.50"></text></g><g><title>do_softirq (22 samples, 1.69%)</title><rect x="40.6610%" y="373" width="1.6910%" height="15" fill="rgb(228,66,33)"/><text x="40.9110%" y="383.50"></text></g><g><title>do_softirq_own_stack (22 samples, 1.69%)</title><rect x="40.6610%" y="357" width="1.6910%" height="15" fill="rgb(234,215,21)"/><text x="40.9110%" y="367.50"></text></g><g><title>__do_softirq (21 samples, 1.61%)</title><rect x="40.7379%" y="341" width="1.6141%" height="15" fill="rgb(222,191,20)"/><text x="40.9879%" y="351.50"></text></g><g><title>net_rx_action (21 samples, 1.61%)</title><rect x="40.7379%" y="325" width="1.6141%" height="15" fill="rgb(245,79,54)"/><text x="40.9879%" y="335.50"></text></g><g><title>process_backlog (20 samples, 1.54%)</title><rect x="40.8148%" y="309" width="1.5373%" height="15" fill="rgb(240,10,37)"/><text x="41.0648%" y="319.50"></text></g><g><title>__netif_receive_skb_one_core (20 samples, 1.54%)</title><rect x="40.8148%" y="293" width="1.5373%" height="15" fill="rgb(214,192,32)"/><text x="41.0648%" y="303.50"></text></g><g><title>ip_rcv (19 samples, 1.46%)</title><rect x="40.8916%" y="277" width="1.4604%" height="15" fill="rgb(209,36,54)"/><text x="41.1416%" y="287.50"></text></g><g><title>ip_local_deliver (19 samples, 1.46%)</title><rect x="40.8916%" y="261" width="1.4604%" height="15" fill="rgb(220,10,11)"/><text x="41.1416%" y="271.50"></text></g><g><title>ip_local_deliver_finish (19 samples, 1.46%)</title><rect x="40.8916%" y="245" width="1.4604%" height="15" fill="rgb(221,106,17)"/><text x="41.1416%" y="255.50"></text></g><g><title>ip_protocol_deliver_rcu (19 samples, 1.46%)</title><rect x="40.8916%" y="229" width="1.4604%" height="15" fill="rgb(251,142,44)"/><text x="41.1416%" y="239.50"></text></g><g><title>tcp_v4_rcv (19 samples, 1.46%)</title><rect x="40.8916%" y="213" width="1.4604%" height="15" fill="rgb(238,13,15)"/><text x="41.1416%" y="223.50"></text></g><g><title>tcp_v4_do_rcv (16 samples, 1.23%)</title><rect x="41.1222%" y="197" width="1.2298%" height="15" fill="rgb(208,107,27)"/><text x="41.3722%" y="207.50"></text></g><g><title>tcp_rcv_established (16 samples, 1.23%)</title><rect x="41.1222%" y="181" width="1.2298%" height="15" fill="rgb(205,136,37)"/><text x="41.3722%" y="191.50"></text></g><g><title>__tcp_transmit_skb (28 samples, 2.15%)</title><rect x="40.2767%" y="453" width="2.1522%" height="15" fill="rgb(250,205,27)"/><text x="40.5267%" y="463.50">_..</text></g><g><title>__tcp_push_pending_frames (29 samples, 2.23%)</title><rect x="40.2767%" y="485" width="2.2291%" height="15" fill="rgb(210,80,43)"/><text x="40.5267%" y="495.50">_..</text></g><g><title>tcp_write_xmit (29 samples, 2.23%)</title><rect x="40.2767%" y="469" width="2.2291%" height="15" fill="rgb(247,160,36)"/><text x="40.5267%" y="479.50">t..</text></g><g><title>sock_sendmsg (34 samples, 2.61%)</title><rect x="40.1230%" y="533" width="2.6134%" height="15" fill="rgb(234,13,49)"/><text x="40.3730%" y="543.50">so..</text></g><g><title>tcp_sendmsg (34 samples, 2.61%)</title><rect x="40.1230%" y="517" width="2.6134%" height="15" fill="rgb(234,122,0)"/><text x="40.3730%" y="527.50">tc..</text></g><g><title>tcp_sendmsg_locked (32 samples, 2.46%)</title><rect x="40.2767%" y="501" width="2.4596%" height="15" fill="rgb(207,146,38)"/><text x="40.5267%" y="511.50">tc..</text></g><g><title>skb_do_copy_data_nocache (2 samples, 0.15%)</title><rect x="42.5826%" y="485" width="0.1537%" height="15" fill="rgb(207,177,25)"/><text x="42.8326%" y="495.50"></text></g><g><title>__x64_sys_sendto (35 samples, 2.69%)</title><rect x="40.1230%" y="565" width="2.6902%" height="15" fill="rgb(211,178,42)"/><text x="40.3730%" y="575.50">__..</text></g><g><title>__sys_sendto (35 samples, 2.69%)</title><rect x="40.1230%" y="549" width="2.6902%" height="15" fill="rgb(230,69,54)"/><text x="40.3730%" y="559.50">__..</text></g><g><title>do_syscall_64 (36 samples, 2.77%)</title><rect x="40.1230%" y="581" width="2.7671%" height="15" fill="rgb(214,135,41)"/><text x="40.3730%" y="591.50">do..</text></g><g><title>entry_SYSCALL_64 (37 samples, 2.84%)</title><rect x="40.1230%" y="597" width="2.8440%" height="15" fill="rgb(237,67,25)"/><text x="40.3730%" y="607.50">en..</text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (69 samples, 5.30%)</title><rect x="37.7402%" y="709" width="5.3036%" height="15" fill="rgb(222,189,50)"/><text x="37.9902%" y="719.50">&lt;mysql..</text></g><g><title>mysql::conn::Conn::_query (68 samples, 5.23%)</title><rect x="37.8171%" y="693" width="5.2267%" height="15" fill="rgb(245,148,34)"/><text x="38.0671%" y="703.50">mysql:..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (39 samples, 3.00%)</title><rect x="40.0461%" y="677" width="2.9977%" height="15" fill="rgb(222,29,6)"/><text x="40.2961%" y="687.50">mys..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (38 samples, 2.92%)</title><rect x="40.1230%" y="661" width="2.9208%" height="15" fill="rgb(221,189,43)"/><text x="40.3730%" y="671.50">st..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (38 samples, 2.92%)</title><rect x="40.1230%" y="645" width="2.9208%" height="15" fill="rgb(207,36,27)"/><text x="40.3730%" y="655.50">&lt;s..</text></g><g><title>std::sys_common::net::TcpStream::write (38 samples, 2.92%)</title><rect x="40.1230%" y="629" width="2.9208%" height="15" fill="rgb(217,90,24)"/><text x="40.3730%" y="639.50">st..</text></g><g><title>__libc_send (38 samples, 2.92%)</title><rect x="40.1230%" y="613" width="2.9208%" height="15" fill="rgb(224,66,35)"/><text x="40.3730%" y="623.50">__..</text></g><g><title>decor::query_transformer::QueryTransformer::query (201 samples, 15.45%)</title><rect x="27.6710%" y="757" width="15.4497%" height="15" fill="rgb(221,13,50)"/><text x="27.9210%" y="767.50">decor::query_transformer..</text></g><g><title>decor::query_transformer::QueryTransformer::issue_to_dt_and_get_mv_stmt (201 samples, 15.45%)</title><rect x="27.6710%" y="741" width="15.4497%" height="15" fill="rgb(236,68,49)"/><text x="27.9210%" y="751.50">decor::query_transformer..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (70 samples, 5.38%)</title><rect x="37.7402%" y="725" width="5.3805%" height="15" fill="rgb(229,146,28)"/><text x="37.9902%" y="735.50">mysql::..</text></g><g><title>sql_parser::parser::Parser::parse_keyword (5 samples, 0.38%)</title><rect x="43.4281%" y="709" width="0.3843%" height="15" fill="rgb(225,31,38)"/><text x="43.6781%" y="719.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="43.6587%" y="693" width="0.1537%" height="15" fill="rgb(250,208,3)"/><text x="43.9087%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::parse_object_name (3 samples, 0.23%)</title><rect x="43.8125%" y="709" width="0.2306%" height="15" fill="rgb(246,54,23)"/><text x="44.0625%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_identifier (3 samples, 0.23%)</title><rect x="43.8125%" y="693" width="0.2306%" height="15" fill="rgb(243,76,11)"/><text x="44.0625%" y="703.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (3 samples, 0.23%)</title><rect x="43.8125%" y="677" width="0.2306%" height="15" fill="rgb(245,21,50)"/><text x="44.0625%" y="687.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_lower (2 samples, 0.15%)</title><rect x="43.8893%" y="661" width="0.1537%" height="15" fill="rgb(228,9,43)"/><text x="44.1393%" y="671.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.15%)</title><rect x="43.8893%" y="645" width="0.1537%" height="15" fill="rgb(208,100,47)"/><text x="44.1393%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.15%)</title><rect x="43.8893%" y="629" width="0.1537%" height="15" fill="rgb(232,26,8)"/><text x="44.1393%" y="639.50"></text></g><g><title>alloc::string::String::push (2 samples, 0.15%)</title><rect x="44.4274%" y="661" width="0.1537%" height="15" fill="rgb(216,166,38)"/><text x="44.6774%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (2 samples, 0.15%)</title><rect x="44.4274%" y="645" width="0.1537%" height="15" fill="rgb(251,202,51)"/><text x="44.6774%" y="655.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (20 samples, 1.54%)</title><rect x="43.1975%" y="757" width="1.5373%" height="15" fill="rgb(254,216,34)"/><text x="43.4475%" y="767.50"></text></g><g><title>sql_parser::parser::parse_statements (19 samples, 1.46%)</title><rect x="43.2744%" y="741" width="1.4604%" height="15" fill="rgb(251,32,27)"/><text x="43.5244%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (19 samples, 1.46%)</title><rect x="43.2744%" y="725" width="1.4604%" height="15" fill="rgb(208,127,28)"/><text x="43.5244%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::parse_parenthesized_column_list (9 samples, 0.69%)</title><rect x="44.0430%" y="709" width="0.6918%" height="15" fill="rgb(224,137,22)"/><text x="44.2930%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_identifier (7 samples, 0.54%)</title><rect x="44.1968%" y="693" width="0.5380%" height="15" fill="rgb(254,70,32)"/><text x="44.4468%" y="703.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (5 samples, 0.38%)</title><rect x="44.3505%" y="677" width="0.3843%" height="15" fill="rgb(229,75,37)"/><text x="44.6005%" y="687.50"></text></g><g><title>dequeue_task_fair (2 samples, 0.15%)</title><rect x="45.2729%" y="389" width="0.1537%" height="15" fill="rgb(252,64,23)"/><text x="45.5229%" y="399.50"></text></g><g><title>dequeue_entity (2 samples, 0.15%)</title><rect x="45.2729%" y="373" width="0.1537%" height="15" fill="rgb(232,162,48)"/><text x="45.5229%" y="383.50"></text></g><g><title>update_curr (2 samples, 0.15%)</title><rect x="45.2729%" y="357" width="0.1537%" height="15" fill="rgb(246,160,12)"/><text x="45.5229%" y="367.50"></text></g><g><title>psi_task_change (2 samples, 0.15%)</title><rect x="45.5035%" y="389" width="0.1537%" height="15" fill="rgb(247,166,0)"/><text x="45.7535%" y="399.50"></text></g><g><title>psi_group_change (2 samples, 0.15%)</title><rect x="45.5035%" y="373" width="0.1537%" height="15" fill="rgb(249,219,21)"/><text x="45.7535%" y="383.50"></text></g><g><title>__x64_sys_recvfrom (14 samples, 1.08%)</title><rect x="44.8117%" y="533" width="1.0761%" height="15" fill="rgb(205,209,3)"/><text x="45.0617%" y="543.50"></text></g><g><title>__sys_recvfrom (14 samples, 1.08%)</title><rect x="44.8117%" y="517" width="1.0761%" height="15" fill="rgb(243,44,1)"/><text x="45.0617%" y="527.50"></text></g><g><title>inet_recvmsg (14 samples, 1.08%)</title><rect x="44.8117%" y="501" width="1.0761%" height="15" fill="rgb(206,159,16)"/><text x="45.0617%" y="511.50"></text></g><g><title>tcp_recvmsg (14 samples, 1.08%)</title><rect x="44.8117%" y="485" width="1.0761%" height="15" fill="rgb(244,77,30)"/><text x="45.0617%" y="495.50"></text></g><g><title>sk_wait_data (11 samples, 0.85%)</title><rect x="45.0423%" y="469" width="0.8455%" height="15" fill="rgb(218,69,12)"/><text x="45.2923%" y="479.50"></text></g><g><title>wait_woken (9 samples, 0.69%)</title><rect x="45.1960%" y="453" width="0.6918%" height="15" fill="rgb(212,87,7)"/><text x="45.4460%" y="463.50"></text></g><g><title>schedule_timeout (8 samples, 0.61%)</title><rect x="45.2729%" y="437" width="0.6149%" height="15" fill="rgb(245,114,25)"/><text x="45.5229%" y="447.50"></text></g><g><title>schedule (8 samples, 0.61%)</title><rect x="45.2729%" y="421" width="0.6149%" height="15" fill="rgb(210,61,42)"/><text x="45.5229%" y="431.50"></text></g><g><title>__schedule (8 samples, 0.61%)</title><rect x="45.2729%" y="405" width="0.6149%" height="15" fill="rgb(211,52,33)"/><text x="45.5229%" y="415.50"></text></g><g><title>uclamp_rq_dec_id (3 samples, 0.23%)</title><rect x="45.6572%" y="389" width="0.2306%" height="15" fill="rgb(234,58,33)"/><text x="45.9072%" y="399.50"></text></g><g><title>do_syscall_64 (16 samples, 1.23%)</title><rect x="44.8117%" y="549" width="1.2298%" height="15" fill="rgb(220,115,36)"/><text x="45.0617%" y="559.50"></text></g><g><title>syscall_slow_exit_work (2 samples, 0.15%)</title><rect x="45.8878%" y="533" width="0.1537%" height="15" fill="rgb(243,153,54)"/><text x="46.1378%" y="543.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (17 samples, 1.31%)</title><rect x="44.8117%" y="661" width="1.3067%" height="15" fill="rgb(251,47,18)"/><text x="45.0617%" y="671.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (17 samples, 1.31%)</title><rect x="44.8117%" y="645" width="1.3067%" height="15" fill="rgb(242,102,42)"/><text x="45.0617%" y="655.50"></text></g><g><title>std::sys_common::net::TcpStream::read (17 samples, 1.31%)</title><rect x="44.8117%" y="629" width="1.3067%" height="15" fill="rgb(234,31,38)"/><text x="45.0617%" y="639.50"></text></g><g><title>std::sys::unix::net::Socket::read (17 samples, 1.31%)</title><rect x="44.8117%" y="613" width="1.3067%" height="15" fill="rgb(221,117,51)"/><text x="45.0617%" y="623.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (17 samples, 1.31%)</title><rect x="44.8117%" y="597" width="1.3067%" height="15" fill="rgb(212,20,18)"/><text x="45.0617%" y="607.50"></text></g><g><title>__libc_recv (17 samples, 1.31%)</title><rect x="44.8117%" y="581" width="1.3067%" height="15" fill="rgb(245,133,36)"/><text x="45.0617%" y="591.50"></text></g><g><title>entry_SYSCALL_64 (17 samples, 1.31%)</title><rect x="44.8117%" y="565" width="1.3067%" height="15" fill="rgb(212,6,19)"/><text x="45.0617%" y="575.50"></text></g><g><title>lobsters::main (21 samples, 1.61%)</title><rect x="44.7348%" y="757" width="1.6141%" height="15" fill="rgb(218,1,36)"/><text x="44.9848%" y="767.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (20 samples, 1.54%)</title><rect x="44.8117%" y="741" width="1.5373%" height="15" fill="rgb(246,84,54)"/><text x="45.0617%" y="751.50"></text></g><g><title>mysql::conn::Conn::_query (20 samples, 1.54%)</title><rect x="44.8117%" y="725" width="1.5373%" height="15" fill="rgb(242,110,6)"/><text x="45.0617%" y="735.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (20 samples, 1.54%)</title><rect x="44.8117%" y="709" width="1.5373%" height="15" fill="rgb(214,47,5)"/><text x="45.0617%" y="719.50"></text></g><g><title>mysql::conn::Conn::read_packet (20 samples, 1.54%)</title><rect x="44.8117%" y="693" width="1.5373%" height="15" fill="rgb(218,159,25)"/><text x="45.0617%" y="703.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 1.54%)</title><rect x="44.8117%" y="677" width="1.5373%" height="15" fill="rgb(215,211,28)"/><text x="45.0617%" y="687.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (3 samples, 0.23%)</title><rect x="46.1184%" y="661" width="0.2306%" height="15" fill="rgb(238,59,32)"/><text x="46.3684%" y="671.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (2 samples, 0.15%)</title><rect x="46.1952%" y="645" width="0.1537%" height="15" fill="rgb(226,82,3)"/><text x="46.4452%" y="655.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.15%)</title><rect x="46.1952%" y="629" width="0.1537%" height="15" fill="rgb(240,164,32)"/><text x="46.4452%" y="639.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (3 samples, 0.23%)</title><rect x="46.4258%" y="741" width="0.2306%" height="15" fill="rgb(232,46,7)"/><text x="46.6758%" y="751.50"></text></g><g><title>decor::Shim::create_schema (3 samples, 0.23%)</title><rect x="46.4258%" y="725" width="0.2306%" height="15" fill="rgb(229,129,53)"/><text x="46.6758%" y="735.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query_drop (3 samples, 0.23%)</title><rect x="46.4258%" y="709" width="0.2306%" height="15" fill="rgb(234,188,29)"/><text x="46.6758%" y="719.50"></text></g><g><title>mysql::conn::Conn::start_transaction (2 samples, 0.15%)</title><rect x="46.5027%" y="693" width="0.1537%" height="15" fill="rgb(246,141,4)"/><text x="46.7527%" y="703.50"></text></g><g><title>mysql::conn::Conn::_start_transaction (2 samples, 0.15%)</title><rect x="46.5027%" y="677" width="0.1537%" height="15" fill="rgb(229,23,39)"/><text x="46.7527%" y="687.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (2 samples, 0.15%)</title><rect x="46.5027%" y="661" width="0.1537%" height="15" fill="rgb(206,12,3)"/><text x="46.7527%" y="671.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.15%)</title><rect x="46.5027%" y="645" width="0.1537%" height="15" fill="rgb(252,226,20)"/><text x="46.7527%" y="655.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (2 samples, 0.15%)</title><rect x="46.5027%" y="629" width="0.1537%" height="15" fill="rgb(216,123,35)"/><text x="46.7527%" y="639.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (2 samples, 0.15%)</title><rect x="46.5027%" y="613" width="0.1537%" height="15" fill="rgb(212,68,40)"/><text x="46.7527%" y="623.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (2 samples, 0.15%)</title><rect x="46.5027%" y="597" width="0.1537%" height="15" fill="rgb(254,125,32)"/><text x="46.7527%" y="607.50"></text></g><g><title>std::sys_common::net::TcpStream::write (2 samples, 0.15%)</title><rect x="46.5027%" y="581" width="0.1537%" height="15" fill="rgb(253,97,22)"/><text x="46.7527%" y="591.50"></text></g><g><title>__libc_send (2 samples, 0.15%)</title><rect x="46.5027%" y="565" width="0.1537%" height="15" fill="rgb(241,101,14)"/><text x="46.7527%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.15%)</title><rect x="46.5027%" y="549" width="0.1537%" height="15" fill="rgb(238,103,29)"/><text x="46.7527%" y="559.50"></text></g><g><title>do_syscall_64 (2 samples, 0.15%)</title><rect x="46.5027%" y="533" width="0.1537%" height="15" fill="rgb(233,195,47)"/><text x="46.7527%" y="543.50"></text></g><g><title>__x64_sys_sendto (2 samples, 0.15%)</title><rect x="46.5027%" y="517" width="0.1537%" height="15" fill="rgb(246,218,30)"/><text x="46.7527%" y="527.50"></text></g><g><title>__sys_sendto (2 samples, 0.15%)</title><rect x="46.5027%" y="501" width="0.1537%" height="15" fill="rgb(219,145,47)"/><text x="46.7527%" y="511.50"></text></g><g><title>sock_sendmsg (2 samples, 0.15%)</title><rect x="46.5027%" y="485" width="0.1537%" height="15" fill="rgb(243,12,26)"/><text x="46.7527%" y="495.50"></text></g><g><title>tcp_sendmsg (2 samples, 0.15%)</title><rect x="46.5027%" y="469" width="0.1537%" height="15" fill="rgb(214,87,16)"/><text x="46.7527%" y="479.50"></text></g><g><title>tcp_sendmsg_locked (2 samples, 0.15%)</title><rect x="46.5027%" y="453" width="0.1537%" height="15" fill="rgb(208,99,42)"/><text x="46.7527%" y="463.50"></text></g><g><title>__tcp_push_pending_frames (2 samples, 0.15%)</title><rect x="46.5027%" y="437" width="0.1537%" height="15" fill="rgb(253,99,2)"/><text x="46.7527%" y="447.50"></text></g><g><title>tcp_write_xmit (2 samples, 0.15%)</title><rect x="46.5027%" y="421" width="0.1537%" height="15" fill="rgb(220,168,23)"/><text x="46.7527%" y="431.50"></text></g><g><title>__tcp_transmit_skb (2 samples, 0.15%)</title><rect x="46.5027%" y="405" width="0.1537%" height="15" fill="rgb(242,38,24)"/><text x="46.7527%" y="415.50"></text></g><g><title>__ip_queue_xmit (2 samples, 0.15%)</title><rect x="46.5027%" y="389" width="0.1537%" height="15" fill="rgb(225,182,9)"/><text x="46.7527%" y="399.50"></text></g><g><title>ip_output (2 samples, 0.15%)</title><rect x="46.5027%" y="373" width="0.1537%" height="15" fill="rgb(243,178,37)"/><text x="46.7527%" y="383.50"></text></g><g><title>ip_finish_output2 (2 samples, 0.15%)</title><rect x="46.5027%" y="357" width="0.1537%" height="15" fill="rgb(232,139,19)"/><text x="46.7527%" y="367.50"></text></g><g><title>__local_bh_enable_ip (2 samples, 0.15%)</title><rect x="46.5027%" y="341" width="0.1537%" height="15" fill="rgb(225,201,24)"/><text x="46.7527%" y="351.50"></text></g><g><title>do_softirq (2 samples, 0.15%)</title><rect x="46.5027%" y="325" width="0.1537%" height="15" fill="rgb(221,47,46)"/><text x="46.7527%" y="335.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.15%)</title><rect x="46.5027%" y="309" width="0.1537%" height="15" fill="rgb(249,23,13)"/><text x="46.7527%" y="319.50"></text></g><g><title>__do_softirq (2 samples, 0.15%)</title><rect x="46.5027%" y="293" width="0.1537%" height="15" fill="rgb(219,9,5)"/><text x="46.7527%" y="303.50"></text></g><g><title>net_rx_action (2 samples, 0.15%)</title><rect x="46.5027%" y="277" width="0.1537%" height="15" fill="rgb(254,171,16)"/><text x="46.7527%" y="287.50"></text></g><g><title>process_backlog (2 samples, 0.15%)</title><rect x="46.5027%" y="261" width="0.1537%" height="15" fill="rgb(230,171,20)"/><text x="46.7527%" y="271.50"></text></g><g><title>__netif_receive_skb_one_core (2 samples, 0.15%)</title><rect x="46.5027%" y="245" width="0.1537%" height="15" fill="rgb(210,71,41)"/><text x="46.7527%" y="255.50"></text></g><g><title>ip_rcv (2 samples, 0.15%)</title><rect x="46.5027%" y="229" width="0.1537%" height="15" fill="rgb(206,173,20)"/><text x="46.7527%" y="239.50"></text></g><g><title>ip_local_deliver (2 samples, 0.15%)</title><rect x="46.5027%" y="213" width="0.1537%" height="15" fill="rgb(233,88,34)"/><text x="46.7527%" y="223.50"></text></g><g><title>finish_task_switch (2 samples, 0.15%)</title><rect x="47.3482%" y="357" width="0.1537%" height="15" fill="rgb(223,209,46)"/><text x="47.5982%" y="367.50"></text></g><g><title>__perf_event_task_sched_in (2 samples, 0.15%)</title><rect x="47.3482%" y="341" width="0.1537%" height="15" fill="rgb(250,43,18)"/><text x="47.5982%" y="351.50"></text></g><g><title>sk_wait_data (10 samples, 0.77%)</title><rect x="46.9639%" y="437" width="0.7686%" height="15" fill="rgb(208,13,10)"/><text x="47.2139%" y="447.50"></text></g><g><title>wait_woken (8 samples, 0.61%)</title><rect x="47.1176%" y="421" width="0.6149%" height="15" fill="rgb(212,200,36)"/><text x="47.3676%" y="431.50"></text></g><g><title>schedule_timeout (7 samples, 0.54%)</title><rect x="47.1945%" y="405" width="0.5380%" height="15" fill="rgb(225,90,30)"/><text x="47.4445%" y="415.50"></text></g><g><title>schedule (7 samples, 0.54%)</title><rect x="47.1945%" y="389" width="0.5380%" height="15" fill="rgb(236,182,39)"/><text x="47.4445%" y="399.50"></text></g><g><title>__schedule (7 samples, 0.54%)</title><rect x="47.1945%" y="373" width="0.5380%" height="15" fill="rgb(212,144,35)"/><text x="47.4445%" y="383.50"></text></g><g><title>uclamp_rq_dec_id (2 samples, 0.15%)</title><rect x="47.5788%" y="357" width="0.1537%" height="15" fill="rgb(228,63,44)"/><text x="47.8288%" y="367.50"></text></g><g><title>inet_recvmsg (15 samples, 1.15%)</title><rect x="46.7333%" y="469" width="1.1530%" height="15" fill="rgb(228,109,6)"/><text x="46.9833%" y="479.50"></text></g><g><title>tcp_recvmsg (14 samples, 1.08%)</title><rect x="46.8101%" y="453" width="1.0761%" height="15" fill="rgb(238,117,24)"/><text x="47.0601%" y="463.50"></text></g><g><title>__x64_sys_recvfrom (16 samples, 1.23%)</title><rect x="46.7333%" y="501" width="1.2298%" height="15" fill="rgb(242,26,26)"/><text x="46.9833%" y="511.50"></text></g><g><title>__sys_recvfrom (16 samples, 1.23%)</title><rect x="46.7333%" y="485" width="1.2298%" height="15" fill="rgb(221,92,48)"/><text x="46.9833%" y="495.50"></text></g><g><title>do_syscall_64 (17 samples, 1.31%)</title><rect x="46.7333%" y="517" width="1.3067%" height="15" fill="rgb(209,209,32)"/><text x="46.9833%" y="527.50"></text></g><g><title>entry_SYSCALL_64 (19 samples, 1.46%)</title><rect x="46.7333%" y="533" width="1.4604%" height="15" fill="rgb(221,70,22)"/><text x="46.9833%" y="543.50"></text></g><g><title>prepare_exit_to_usermode (2 samples, 0.15%)</title><rect x="48.0400%" y="517" width="0.1537%" height="15" fill="rgb(248,145,5)"/><text x="48.2900%" y="527.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 1.54%)</title><rect x="46.7333%" y="645" width="1.5373%" height="15" fill="rgb(226,116,26)"/><text x="46.9833%" y="655.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (20 samples, 1.54%)</title><rect x="46.7333%" y="629" width="1.5373%" height="15" fill="rgb(244,5,17)"/><text x="46.9833%" y="639.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (20 samples, 1.54%)</title><rect x="46.7333%" y="613" width="1.5373%" height="15" fill="rgb(252,159,33)"/><text x="46.9833%" y="623.50"></text></g><g><title>std::sys_common::net::TcpStream::read (20 samples, 1.54%)</title><rect x="46.7333%" y="597" width="1.5373%" height="15" fill="rgb(206,71,0)"/><text x="46.9833%" y="607.50"></text></g><g><title>std::sys::unix::net::Socket::read (20 samples, 1.54%)</title><rect x="46.7333%" y="581" width="1.5373%" height="15" fill="rgb(233,118,54)"/><text x="46.9833%" y="591.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (20 samples, 1.54%)</title><rect x="46.7333%" y="565" width="1.5373%" height="15" fill="rgb(234,83,48)"/><text x="46.9833%" y="575.50"></text></g><g><title>__libc_recv (20 samples, 1.54%)</title><rect x="46.7333%" y="549" width="1.5373%" height="15" fill="rgb(228,3,54)"/><text x="46.9833%" y="559.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (23 samples, 1.77%)</title><rect x="46.6564%" y="709" width="1.7679%" height="15" fill="rgb(226,155,13)"/><text x="46.9064%" y="719.50"></text></g><g><title>mysql::conn::Conn::_query (23 samples, 1.77%)</title><rect x="46.6564%" y="693" width="1.7679%" height="15" fill="rgb(241,28,37)"/><text x="46.9064%" y="703.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (23 samples, 1.77%)</title><rect x="46.6564%" y="677" width="1.7679%" height="15" fill="rgb(233,93,10)"/><text x="46.9064%" y="687.50"></text></g><g><title>mysql::conn::Conn::read_packet (22 samples, 1.69%)</title><rect x="46.7333%" y="661" width="1.6910%" height="15" fill="rgb(225,113,19)"/><text x="46.9833%" y="671.50"></text></g><g><title>__kfree_skb (2 samples, 0.15%)</title><rect x="48.7317%" y="405" width="0.1537%" height="15" fill="rgb(241,2,18)"/><text x="48.9817%" y="415.50"></text></g><g><title>skb_release_head_state (2 samples, 0.15%)</title><rect x="48.7317%" y="389" width="0.1537%" height="15" fill="rgb(228,207,21)"/><text x="48.9817%" y="399.50"></text></g><g><title>__perf_event_task_sched_out (2 samples, 0.15%)</title><rect x="49.2698%" y="325" width="0.1537%" height="15" fill="rgb(213,211,35)"/><text x="49.5198%" y="335.50"></text></g><g><title>psi_task_change (3 samples, 0.23%)</title><rect x="49.5772%" y="325" width="0.2306%" height="15" fill="rgb(209,83,10)"/><text x="49.8272%" y="335.50"></text></g><g><title>psi_group_change (3 samples, 0.23%)</title><rect x="49.5772%" y="309" width="0.2306%" height="15" fill="rgb(209,164,1)"/><text x="49.8272%" y="319.50"></text></g><g><title>uclamp_rq_dec_id (2 samples, 0.15%)</title><rect x="49.8078%" y="325" width="0.1537%" height="15" fill="rgb(213,184,43)"/><text x="50.0578%" y="335.50"></text></g><g><title>sk_wait_data (15 samples, 1.15%)</title><rect x="48.8855%" y="405" width="1.1530%" height="15" fill="rgb(231,61,34)"/><text x="49.1355%" y="415.50"></text></g><g><title>wait_woken (13 samples, 1.00%)</title><rect x="49.0392%" y="389" width="0.9992%" height="15" fill="rgb(235,75,3)"/><text x="49.2892%" y="399.50"></text></g><g><title>schedule_timeout (11 samples, 0.85%)</title><rect x="49.1929%" y="373" width="0.8455%" height="15" fill="rgb(220,106,47)"/><text x="49.4429%" y="383.50"></text></g><g><title>schedule (11 samples, 0.85%)</title><rect x="49.1929%" y="357" width="0.8455%" height="15" fill="rgb(210,196,33)"/><text x="49.4429%" y="367.50"></text></g><g><title>__schedule (11 samples, 0.85%)</title><rect x="49.1929%" y="341" width="0.8455%" height="15" fill="rgb(229,154,42)"/><text x="49.4429%" y="351.50"></text></g><g><title>do_syscall_64 (20 samples, 1.54%)</title><rect x="48.7317%" y="485" width="1.5373%" height="15" fill="rgb(228,114,26)"/><text x="48.9817%" y="495.50"></text></g><g><title>__x64_sys_recvfrom (20 samples, 1.54%)</title><rect x="48.7317%" y="469" width="1.5373%" height="15" fill="rgb(208,144,1)"/><text x="48.9817%" y="479.50"></text></g><g><title>__sys_recvfrom (20 samples, 1.54%)</title><rect x="48.7317%" y="453" width="1.5373%" height="15" fill="rgb(239,112,37)"/><text x="48.9817%" y="463.50"></text></g><g><title>inet_recvmsg (20 samples, 1.54%)</title><rect x="48.7317%" y="437" width="1.5373%" height="15" fill="rgb(210,96,50)"/><text x="48.9817%" y="447.50"></text></g><g><title>tcp_recvmsg (20 samples, 1.54%)</title><rect x="48.7317%" y="421" width="1.5373%" height="15" fill="rgb(222,178,2)"/><text x="48.9817%" y="431.50"></text></g><g><title>skb_copy_datagram_iter (3 samples, 0.23%)</title><rect x="50.0384%" y="405" width="0.2306%" height="15" fill="rgb(226,74,18)"/><text x="50.2884%" y="415.50"></text></g><g><title>__skb_datagram_iter (3 samples, 0.23%)</title><rect x="50.0384%" y="389" width="0.2306%" height="15" fill="rgb(225,67,54)"/><text x="50.2884%" y="399.50"></text></g><g><title>entry_SYSCALL_64 (22 samples, 1.69%)</title><rect x="48.7317%" y="501" width="1.6910%" height="15" fill="rgb(251,92,32)"/><text x="48.9817%" y="511.50"></text></g><g><title>prepare_exit_to_usermode (2 samples, 0.15%)</title><rect x="50.2690%" y="485" width="0.1537%" height="15" fill="rgb(228,149,22)"/><text x="50.5190%" y="495.50"></text></g><g><title>mysql::conn::Conn::read_packet (25 samples, 1.92%)</title><rect x="48.5780%" y="629" width="1.9216%" height="15" fill="rgb(243,54,13)"/><text x="48.8280%" y="639.50">m..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 1.84%)</title><rect x="48.6549%" y="613" width="1.8447%" height="15" fill="rgb(243,180,28)"/><text x="48.9049%" y="623.50">&lt;..</text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (24 samples, 1.84%)</title><rect x="48.6549%" y="597" width="1.8447%" height="15" fill="rgb(208,167,24)"/><text x="48.9049%" y="607.50">&lt;..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (24 samples, 1.84%)</title><rect x="48.6549%" y="581" width="1.8447%" height="15" fill="rgb(245,73,45)"/><text x="48.9049%" y="591.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::read (24 samples, 1.84%)</title><rect x="48.6549%" y="565" width="1.8447%" height="15" fill="rgb(237,203,48)"/><text x="48.9049%" y="575.50">s..</text></g><g><title>std::sys::unix::net::Socket::read (24 samples, 1.84%)</title><rect x="48.6549%" y="549" width="1.8447%" height="15" fill="rgb(211,197,16)"/><text x="48.9049%" y="559.50">s..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (24 samples, 1.84%)</title><rect x="48.6549%" y="533" width="1.8447%" height="15" fill="rgb(243,99,51)"/><text x="48.9049%" y="543.50">s..</text></g><g><title>__libc_recv (24 samples, 1.84%)</title><rect x="48.6549%" y="517" width="1.8447%" height="15" fill="rgb(215,123,29)"/><text x="48.9049%" y="527.50">_..</text></g><g><title>mysql::conn::Conn::handle_result_set (26 samples, 2.00%)</title><rect x="48.5780%" y="645" width="1.9985%" height="15" fill="rgb(239,186,37)"/><text x="48.8280%" y="655.50">m..</text></g><g><title>dev_hard_start_xmit (3 samples, 0.23%)</title><rect x="51.0377%" y="341" width="0.2306%" height="15" fill="rgb(252,136,39)"/><text x="51.2877%" y="351.50"></text></g><g><title>loopback_xmit (2 samples, 0.15%)</title><rect x="51.1145%" y="325" width="0.1537%" height="15" fill="rgb(223,213,32)"/><text x="51.3645%" y="335.50"></text></g><g><title>__dev_queue_xmit (4 samples, 0.31%)</title><rect x="51.0377%" y="357" width="0.3075%" height="15" fill="rgb(233,115,5)"/><text x="51.2877%" y="367.50"></text></g><g><title>__netif_receive_skb_core (3 samples, 0.23%)</title><rect x="51.6526%" y="245" width="0.2306%" height="15" fill="rgb(207,226,44)"/><text x="51.9026%" y="255.50"></text></g><g><title>__inet_lookup_established (2 samples, 0.15%)</title><rect x="52.0369%" y="165" width="0.1537%" height="15" fill="rgb(208,126,0)"/><text x="52.2869%" y="175.50"></text></g><g><title>psi_task_change (2 samples, 0.15%)</title><rect x="52.4981%" y="37" width="0.1537%" height="15" fill="rgb(244,66,21)"/><text x="52.7481%" y="47.50"></text></g><g><title>enqueue_task (3 samples, 0.23%)</title><rect x="52.4981%" y="53" width="0.2306%" height="15" fill="rgb(222,97,12)"/><text x="52.7481%" y="63.50"></text></g><g><title>enqueue_task_fair (3 samples, 0.23%)</title><rect x="52.7287%" y="53" width="0.2306%" height="15" fill="rgb(219,213,19)"/><text x="52.9787%" y="63.50"></text></g><g><title>enqueue_entity (3 samples, 0.23%)</title><rect x="52.7287%" y="37" width="0.2306%" height="15" fill="rgb(252,169,30)"/><text x="52.9787%" y="47.50"></text></g><g><title>sock_def_readable (11 samples, 0.85%)</title><rect x="52.2675%" y="133" width="0.8455%" height="15" fill="rgb(206,32,51)"/><text x="52.5175%" y="143.50"></text></g><g><title>__wake_up_common_lock (11 samples, 0.85%)</title><rect x="52.2675%" y="117" width="0.8455%" height="15" fill="rgb(250,172,42)"/><text x="52.5175%" y="127.50"></text></g><g><title>__wake_up_common (11 samples, 0.85%)</title><rect x="52.2675%" y="101" width="0.8455%" height="15" fill="rgb(209,34,43)"/><text x="52.5175%" y="111.50"></text></g><g><title>pollwake (11 samples, 0.85%)</title><rect x="52.2675%" y="85" width="0.8455%" height="15" fill="rgb(223,11,35)"/><text x="52.5175%" y="95.50"></text></g><g><title>try_to_wake_up (10 samples, 0.77%)</title><rect x="52.3444%" y="69" width="0.7686%" height="15" fill="rgb(251,219,26)"/><text x="52.5944%" y="79.50"></text></g><g><title>select_task_rq_fair (2 samples, 0.15%)</title><rect x="52.9593%" y="53" width="0.1537%" height="15" fill="rgb(231,119,3)"/><text x="53.2093%" y="63.50"></text></g><g><title>__kfree_skb (4 samples, 0.31%)</title><rect x="53.1899%" y="117" width="0.3075%" height="15" fill="rgb(216,97,11)"/><text x="53.4399%" y="127.50"></text></g><g><title>skb_release_data (4 samples, 0.31%)</title><rect x="53.1899%" y="101" width="0.3075%" height="15" fill="rgb(223,59,9)"/><text x="53.4399%" y="111.50"></text></g><g><title>__netif_receive_skb_one_core (26 samples, 2.00%)</title><rect x="51.6526%" y="261" width="1.9985%" height="15" fill="rgb(233,93,31)"/><text x="51.9026%" y="271.50">_..</text></g><g><title>ip_rcv (23 samples, 1.77%)</title><rect x="51.8832%" y="245" width="1.7679%" height="15" fill="rgb(239,81,33)"/><text x="52.1332%" y="255.50"></text></g><g><title>ip_local_deliver (23 samples, 1.77%)</title><rect x="51.8832%" y="229" width="1.7679%" height="15" fill="rgb(213,120,34)"/><text x="52.1332%" y="239.50"></text></g><g><title>ip_local_deliver_finish (22 samples, 1.69%)</title><rect x="51.9600%" y="213" width="1.6910%" height="15" fill="rgb(243,49,53)"/><text x="52.2100%" y="223.50"></text></g><g><title>ip_protocol_deliver_rcu (22 samples, 1.69%)</title><rect x="51.9600%" y="197" width="1.6910%" height="15" fill="rgb(247,216,33)"/><text x="52.2100%" y="207.50"></text></g><g><title>tcp_v4_rcv (22 samples, 1.69%)</title><rect x="51.9600%" y="181" width="1.6910%" height="15" fill="rgb(226,26,14)"/><text x="52.2100%" y="191.50"></text></g><g><title>tcp_v4_do_rcv (19 samples, 1.46%)</title><rect x="52.1906%" y="165" width="1.4604%" height="15" fill="rgb(215,49,53)"/><text x="52.4406%" y="175.50"></text></g><g><title>tcp_rcv_established (19 samples, 1.46%)</title><rect x="52.1906%" y="149" width="1.4604%" height="15" fill="rgb(245,162,40)"/><text x="52.4406%" y="159.50"></text></g><g><title>tcp_ack (7 samples, 0.54%)</title><rect x="53.1130%" y="133" width="0.5380%" height="15" fill="rgb(229,68,17)"/><text x="53.3630%" y="143.50"></text></g><g><title>__ip_queue_xmit (35 samples, 2.69%)</title><rect x="51.0377%" y="405" width="2.6902%" height="15" fill="rgb(213,182,10)"/><text x="51.2877%" y="415.50">__..</text></g><g><title>ip_output (35 samples, 2.69%)</title><rect x="51.0377%" y="389" width="2.6902%" height="15" fill="rgb(245,125,30)"/><text x="51.2877%" y="399.50">ip..</text></g><g><title>ip_finish_output2 (35 samples, 2.69%)</title><rect x="51.0377%" y="373" width="2.6902%" height="15" fill="rgb(232,202,2)"/><text x="51.2877%" y="383.50">ip..</text></g><g><title>__local_bh_enable_ip (31 samples, 2.38%)</title><rect x="51.3451%" y="357" width="2.3828%" height="15" fill="rgb(237,140,51)"/><text x="51.5951%" y="367.50">__..</text></g><g><title>do_softirq (31 samples, 2.38%)</title><rect x="51.3451%" y="341" width="2.3828%" height="15" fill="rgb(236,157,25)"/><text x="51.5951%" y="351.50">do..</text></g><g><title>do_softirq_own_stack (29 samples, 2.23%)</title><rect x="51.4988%" y="325" width="2.2291%" height="15" fill="rgb(219,209,0)"/><text x="51.7488%" y="335.50">d..</text></g><g><title>__do_softirq (29 samples, 2.23%)</title><rect x="51.4988%" y="309" width="2.2291%" height="15" fill="rgb(240,116,54)"/><text x="51.7488%" y="319.50">_..</text></g><g><title>net_rx_action (28 samples, 2.15%)</title><rect x="51.5757%" y="293" width="2.1522%" height="15" fill="rgb(216,10,36)"/><text x="51.8257%" y="303.50">n..</text></g><g><title>process_backlog (28 samples, 2.15%)</title><rect x="51.5757%" y="277" width="2.1522%" height="15" fill="rgb(222,72,44)"/><text x="51.8257%" y="287.50">p..</text></g><g><title>__tcp_select_window (2 samples, 0.15%)</title><rect x="53.7279%" y="405" width="0.1537%" height="15" fill="rgb(232,159,9)"/><text x="53.9779%" y="415.50"></text></g><g><title>__tcp_push_pending_frames (38 samples, 2.92%)</title><rect x="51.0377%" y="453" width="2.9208%" height="15" fill="rgb(210,39,32)"/><text x="51.2877%" y="463.50">__..</text></g><g><title>tcp_write_xmit (38 samples, 2.92%)</title><rect x="51.0377%" y="437" width="2.9208%" height="15" fill="rgb(216,194,45)"/><text x="51.2877%" y="447.50">tc..</text></g><g><title>__tcp_transmit_skb (38 samples, 2.92%)</title><rect x="51.0377%" y="421" width="2.9208%" height="15" fill="rgb(218,18,35)"/><text x="51.2877%" y="431.50">__..</text></g><g><title>sk_stream_alloc_skb (2 samples, 0.15%)</title><rect x="54.0354%" y="453" width="0.1537%" height="15" fill="rgb(207,83,51)"/><text x="54.2854%" y="463.50"></text></g><g><title>sock_sendmsg (46 samples, 3.54%)</title><rect x="50.8839%" y="501" width="3.5357%" height="15" fill="rgb(225,63,43)"/><text x="51.1339%" y="511.50">soc..</text></g><g><title>tcp_sendmsg (46 samples, 3.54%)</title><rect x="50.8839%" y="485" width="3.5357%" height="15" fill="rgb(207,57,36)"/><text x="51.1339%" y="495.50">tcp..</text></g><g><title>tcp_sendmsg_locked (45 samples, 3.46%)</title><rect x="50.9608%" y="469" width="3.4589%" height="15" fill="rgb(216,99,33)"/><text x="51.2108%" y="479.50">tcp..</text></g><g><title>__x64_sys_sendto (49 samples, 3.77%)</title><rect x="50.7302%" y="533" width="3.7663%" height="15" fill="rgb(225,42,16)"/><text x="50.9802%" y="543.50">__x6..</text></g><g><title>__sys_sendto (49 samples, 3.77%)</title><rect x="50.7302%" y="517" width="3.7663%" height="15" fill="rgb(220,201,45)"/><text x="50.9802%" y="527.50">__sy..</text></g><g><title>do_syscall_64 (51 samples, 3.92%)</title><rect x="50.7302%" y="549" width="3.9201%" height="15" fill="rgb(225,33,4)"/><text x="50.9802%" y="559.50">do_s..</text></g><g><title>syscall_trace_enter (2 samples, 0.15%)</title><rect x="54.4965%" y="533" width="0.1537%" height="15" fill="rgb(224,33,50)"/><text x="54.7465%" y="543.50"></text></g><g><title>entry_SYSCALL_64 (52 samples, 4.00%)</title><rect x="50.7302%" y="565" width="3.9969%" height="15" fill="rgb(246,198,51)"/><text x="50.9802%" y="575.50">entr..</text></g><g><title>mysql::conn::Conn::start_transaction (82 samples, 6.30%)</title><rect x="48.5012%" y="709" width="6.3028%" height="15" fill="rgb(205,22,4)"/><text x="48.7512%" y="719.50">mysql::c..</text></g><g><title>mysql::conn::Conn::_start_transaction (82 samples, 6.30%)</title><rect x="48.5012%" y="693" width="6.3028%" height="15" fill="rgb(206,3,8)"/><text x="48.7512%" y="703.50">mysql::c..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (82 samples, 6.30%)</title><rect x="48.5012%" y="677" width="6.3028%" height="15" fill="rgb(251,23,15)"/><text x="48.7512%" y="687.50">mysql::c..</text></g><g><title>mysql::conn::Conn::_query (82 samples, 6.30%)</title><rect x="48.5012%" y="661" width="6.3028%" height="15" fill="rgb(252,88,28)"/><text x="48.7512%" y="671.50">mysql::c..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (55 samples, 4.23%)</title><rect x="50.5765%" y="645" width="4.2275%" height="15" fill="rgb(212,127,14)"/><text x="50.8265%" y="655.50">mysql..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (54 samples, 4.15%)</title><rect x="50.6533%" y="629" width="4.1507%" height="15" fill="rgb(247,145,37)"/><text x="50.9033%" y="639.50">std::..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (54 samples, 4.15%)</title><rect x="50.6533%" y="613" width="4.1507%" height="15" fill="rgb(209,117,53)"/><text x="50.9033%" y="623.50">&lt;std:..</text></g><g><title>std::sys_common::net::TcpStream::write (54 samples, 4.15%)</title><rect x="50.6533%" y="597" width="4.1507%" height="15" fill="rgb(212,90,42)"/><text x="50.9033%" y="607.50">std::..</text></g><g><title>__libc_send (54 samples, 4.15%)</title><rect x="50.6533%" y="581" width="4.1507%" height="15" fill="rgb(218,164,37)"/><text x="50.9033%" y="591.50">__lib..</text></g><g><title>dequeue_task_fair (3 samples, 0.23%)</title><rect x="55.0346%" y="341" width="0.2306%" height="15" fill="rgb(246,65,34)"/><text x="55.2846%" y="351.50"></text></g><g><title>dequeue_entity (2 samples, 0.15%)</title><rect x="55.1115%" y="325" width="0.1537%" height="15" fill="rgb(231,100,33)"/><text x="55.3615%" y="335.50"></text></g><g><title>sk_wait_data (6 samples, 0.46%)</title><rect x="54.9577%" y="421" width="0.4612%" height="15" fill="rgb(228,126,14)"/><text x="55.2077%" y="431.50"></text></g><g><title>wait_woken (5 samples, 0.38%)</title><rect x="55.0346%" y="405" width="0.3843%" height="15" fill="rgb(215,173,21)"/><text x="55.2846%" y="415.50"></text></g><g><title>schedule_timeout (5 samples, 0.38%)</title><rect x="55.0346%" y="389" width="0.3843%" height="15" fill="rgb(210,6,40)"/><text x="55.2846%" y="399.50"></text></g><g><title>schedule (5 samples, 0.38%)</title><rect x="55.0346%" y="373" width="0.3843%" height="15" fill="rgb(212,48,18)"/><text x="55.2846%" y="383.50"></text></g><g><title>__schedule (5 samples, 0.38%)</title><rect x="55.0346%" y="357" width="0.3843%" height="15" fill="rgb(230,214,11)"/><text x="55.2846%" y="367.50"></text></g><g><title>psi_task_change (2 samples, 0.15%)</title><rect x="55.2652%" y="341" width="0.1537%" height="15" fill="rgb(254,105,39)"/><text x="55.5152%" y="351.50"></text></g><g><title>psi_group_change (2 samples, 0.15%)</title><rect x="55.2652%" y="325" width="0.1537%" height="15" fill="rgb(245,158,5)"/><text x="55.5152%" y="335.50"></text></g><g><title>__x64_sys_recvfrom (9 samples, 0.69%)</title><rect x="54.8809%" y="485" width="0.6918%" height="15" fill="rgb(249,208,11)"/><text x="55.1309%" y="495.50"></text></g><g><title>__sys_recvfrom (9 samples, 0.69%)</title><rect x="54.8809%" y="469" width="0.6918%" height="15" fill="rgb(210,39,28)"/><text x="55.1309%" y="479.50"></text></g><g><title>inet_recvmsg (9 samples, 0.69%)</title><rect x="54.8809%" y="453" width="0.6918%" height="15" fill="rgb(211,56,53)"/><text x="55.1309%" y="463.50"></text></g><g><title>tcp_recvmsg (9 samples, 0.69%)</title><rect x="54.8809%" y="437" width="0.6918%" height="15" fill="rgb(226,201,30)"/><text x="55.1309%" y="447.50"></text></g><g><title>do_syscall_64 (10 samples, 0.77%)</title><rect x="54.8809%" y="501" width="0.7686%" height="15" fill="rgb(239,101,34)"/><text x="55.1309%" y="511.50"></text></g><g><title>entry_SYSCALL_64 (11 samples, 0.85%)</title><rect x="54.8809%" y="517" width="0.8455%" height="15" fill="rgb(226,209,5)"/><text x="55.1309%" y="527.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (12 samples, 0.92%)</title><rect x="54.8809%" y="613" width="0.9224%" height="15" fill="rgb(250,105,47)"/><text x="55.1309%" y="623.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (12 samples, 0.92%)</title><rect x="54.8809%" y="597" width="0.9224%" height="15" fill="rgb(230,72,3)"/><text x="55.1309%" y="607.50"></text></g><g><title>std::sys_common::net::TcpStream::read (12 samples, 0.92%)</title><rect x="54.8809%" y="581" width="0.9224%" height="15" fill="rgb(232,218,39)"/><text x="55.1309%" y="591.50"></text></g><g><title>std::sys::unix::net::Socket::read (12 samples, 0.92%)</title><rect x="54.8809%" y="565" width="0.9224%" height="15" fill="rgb(248,166,6)"/><text x="55.1309%" y="575.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (12 samples, 0.92%)</title><rect x="54.8809%" y="549" width="0.9224%" height="15" fill="rgb(247,89,20)"/><text x="55.1309%" y="559.50"></text></g><g><title>__libc_recv (12 samples, 0.92%)</title><rect x="54.8809%" y="533" width="0.9224%" height="15" fill="rgb(248,130,54)"/><text x="55.1309%" y="543.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query (123 samples, 9.45%)</title><rect x="46.6564%" y="725" width="9.4543%" height="15" fill="rgb(234,196,4)"/><text x="46.9064%" y="735.50">decor::query_t..</text></g><g><title>mysql::conn::transaction::Transaction::commit (17 samples, 1.31%)</title><rect x="54.8040%" y="709" width="1.3067%" height="15" fill="rgb(250,143,31)"/><text x="55.0540%" y="719.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (17 samples, 1.31%)</title><rect x="54.8040%" y="693" width="1.3067%" height="15" fill="rgb(211,110,34)"/><text x="55.0540%" y="703.50"></text></g><g><title>mysql::conn::Conn::_query (17 samples, 1.31%)</title><rect x="54.8040%" y="677" width="1.3067%" height="15" fill="rgb(215,124,48)"/><text x="55.0540%" y="687.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (17 samples, 1.31%)</title><rect x="54.8040%" y="661" width="1.3067%" height="15" fill="rgb(216,46,13)"/><text x="55.0540%" y="671.50"></text></g><g><title>mysql::conn::Conn::read_packet (16 samples, 1.23%)</title><rect x="54.8809%" y="645" width="1.2298%" height="15" fill="rgb(205,184,25)"/><text x="55.1309%" y="655.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 1.23%)</title><rect x="54.8809%" y="629" width="1.2298%" height="15" fill="rgb(228,1,10)"/><text x="55.1309%" y="639.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (4 samples, 0.31%)</title><rect x="55.8032%" y="613" width="0.3075%" height="15" fill="rgb(213,116,27)"/><text x="56.0532%" y="623.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (2 samples, 0.15%)</title><rect x="55.9570%" y="597" width="0.1537%" height="15" fill="rgb(241,95,50)"/><text x="56.2070%" y="607.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.15%)</title><rect x="55.9570%" y="581" width="0.1537%" height="15" fill="rgb(238,48,32)"/><text x="56.2070%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (5 samples, 0.38%)</title><rect x="56.1875%" y="677" width="0.3843%" height="15" fill="rgb(235,113,49)"/><text x="56.4375%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (4 samples, 0.31%)</title><rect x="56.2644%" y="661" width="0.3075%" height="15" fill="rgb(205,127,43)"/><text x="56.5144%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.23%)</title><rect x="56.3413%" y="645" width="0.2306%" height="15" fill="rgb(250,162,2)"/><text x="56.5913%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (7 samples, 0.54%)</title><rect x="56.1107%" y="693" width="0.5380%" height="15" fill="rgb(220,13,41)"/><text x="56.3607%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (8 samples, 0.61%)</title><rect x="56.1107%" y="709" width="0.6149%" height="15" fill="rgb(249,221,25)"/><text x="56.3607%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (23 samples, 1.77%)</title><rect x="57.4174%" y="677" width="1.7679%" height="15" fill="rgb(215,208,19)"/><text x="57.6674%" y="687.50"></text></g><g><title>__GI___libc_realloc (23 samples, 1.77%)</title><rect x="57.4174%" y="661" width="1.7679%" height="15" fill="rgb(236,175,2)"/><text x="57.6674%" y="671.50"></text></g><g><title>_int_realloc (23 samples, 1.77%)</title><rect x="57.4174%" y="645" width="1.7679%" height="15" fill="rgb(241,52,2)"/><text x="57.6674%" y="655.50"></text></g><g><title>_int_malloc (20 samples, 1.54%)</title><rect x="57.6480%" y="629" width="1.5373%" height="15" fill="rgb(248,140,14)"/><text x="57.8980%" y="639.50"></text></g><g><title>malloc_consolidate (13 samples, 1.00%)</title><rect x="58.1860%" y="613" width="0.9992%" height="15" fill="rgb(253,22,42)"/><text x="58.4360%" y="623.50"></text></g><g><title>page_fault (2 samples, 0.15%)</title><rect x="59.2621%" y="677" width="0.1537%" height="15" fill="rgb(234,61,47)"/><text x="59.5121%" y="687.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.15%)</title><rect x="59.2621%" y="661" width="0.1537%" height="15" fill="rgb(208,226,15)"/><text x="59.5121%" y="671.50"></text></g><g><title>handle_mm_fault (2 samples, 0.15%)</title><rect x="59.2621%" y="645" width="0.1537%" height="15" fill="rgb(217,221,4)"/><text x="59.5121%" y="655.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.15%)</title><rect x="59.2621%" y="629" width="0.1537%" height="15" fill="rgb(212,174,34)"/><text x="59.5121%" y="639.50"></text></g><g><title>sql_parser::tokenizer::PeekableChars::next (2 samples, 0.15%)</title><rect x="59.7233%" y="661" width="0.1537%" height="15" fill="rgb(253,83,4)"/><text x="59.9733%" y="671.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.38%)</title><rect x="61.6449%" y="645" width="0.3843%" height="15" fill="rgb(250,195,49)"/><text x="61.8949%" y="655.50"></text></g><g><title>_int_malloc (5 samples, 0.38%)</title><rect x="61.6449%" y="629" width="0.3843%" height="15" fill="rgb(241,192,25)"/><text x="61.8949%" y="639.50"></text></g><g><title>__memcmp_avx2_movbe (12 samples, 0.92%)</title><rect x="62.0292%" y="645" width="0.9224%" height="15" fill="rgb(208,124,10)"/><text x="62.2792%" y="655.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.23%)</title><rect x="63.0284%" y="629" width="0.2306%" height="15" fill="rgb(222,33,0)"/><text x="63.2784%" y="639.50"></text></g><g><title>core::str::validations::next_code_point (2 samples, 0.15%)</title><rect x="63.1053%" y="613" width="0.1537%" height="15" fill="rgb(234,209,28)"/><text x="63.3553%" y="623.50"></text></g><g><title>alloc::string::String::push (2 samples, 0.15%)</title><rect x="63.2590%" y="629" width="0.1537%" height="15" fill="rgb(224,11,23)"/><text x="63.5090%" y="639.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (56 samples, 4.30%)</title><rect x="59.8770%" y="661" width="4.3044%" height="15" fill="rgb(232,99,1)"/><text x="60.1270%" y="671.50">sql_p..</text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (16 samples, 1.23%)</title><rect x="62.9516%" y="645" width="1.2298%" height="15" fill="rgb(237,95,45)"/><text x="63.2016%" y="655.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (10 samples, 0.77%)</title><rect x="63.4128%" y="629" width="0.7686%" height="15" fill="rgb(208,109,11)"/><text x="63.6628%" y="639.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (8 samples, 0.61%)</title><rect x="63.5665%" y="613" width="0.6149%" height="15" fill="rgb(216,190,48)"/><text x="63.8165%" y="623.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (8 samples, 0.61%)</title><rect x="63.5665%" y="597" width="0.6149%" height="15" fill="rgb(251,171,36)"/><text x="63.8165%" y="607.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (3 samples, 0.23%)</title><rect x="63.9508%" y="581" width="0.2306%" height="15" fill="rgb(230,62,22)"/><text x="64.2008%" y="591.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_string (3 samples, 0.23%)</title><rect x="64.1814%" y="661" width="0.2306%" height="15" fill="rgb(225,114,35)"/><text x="64.4314%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.15%)</title><rect x="64.2583%" y="645" width="0.1537%" height="15" fill="rgb(215,118,42)"/><text x="64.5083%" y="655.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.15%)</title><rect x="64.2583%" y="629" width="0.1537%" height="15" fill="rgb(243,119,21)"/><text x="64.5083%" y="639.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (237 samples, 18.22%)</title><rect x="46.3490%" y="757" width="18.2168%" height="15" fill="rgb(252,177,53)"/><text x="46.5990%" y="767.50">msql_srv::MysqlIntermediary&lt;..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (233 samples, 17.91%)</title><rect x="46.6564%" y="741" width="17.9093%" height="15" fill="rgb(237,209,29)"/><text x="46.9064%" y="751.50">&lt;decor::Shim as msql_srv::My..</text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (110 samples, 8.46%)</title><rect x="56.1107%" y="725" width="8.4550%" height="15" fill="rgb(212,65,23)"/><text x="56.3607%" y="735.50">decor::sqlpa..</text></g><g><title>sql_parser::parser::parse_statements (101 samples, 7.76%)</title><rect x="56.8025%" y="709" width="7.7633%" height="15" fill="rgb(230,222,46)"/><text x="57.0525%" y="719.50">sql_parser:..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (96 samples, 7.38%)</title><rect x="57.1868%" y="693" width="7.3789%" height="15" fill="rgb(215,135,32)"/><text x="57.4368%" y="703.50">sql_parser..</text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (67 samples, 5.15%)</title><rect x="59.4158%" y="677" width="5.1499%" height="15" fill="rgb(246,101,22)"/><text x="59.6658%" y="687.50">sql_pa..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_word (2 samples, 0.15%)</title><rect x="64.4120%" y="661" width="0.1537%" height="15" fill="rgb(206,107,13)"/><text x="64.6620%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.15%)</title><rect x="65.1806%" y="677" width="0.1537%" height="15" fill="rgb(250,100,44)"/><text x="65.4306%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (16 samples, 1.23%)</title><rect x="65.9493%" y="645" width="1.2298%" height="15" fill="rgb(231,147,38)"/><text x="66.1993%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (16 samples, 1.23%)</title><rect x="65.9493%" y="629" width="1.2298%" height="15" fill="rgb(229,8,40)"/><text x="66.1993%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (16 samples, 1.23%)</title><rect x="65.9493%" y="613" width="1.2298%" height="15" fill="rgb(221,135,30)"/><text x="66.1993%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (16 samples, 1.23%)</title><rect x="65.9493%" y="597" width="1.2298%" height="15" fill="rgb(249,193,18)"/><text x="66.1993%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (16 samples, 1.23%)</title><rect x="65.9493%" y="581" width="1.2298%" height="15" fill="rgb(209,133,39)"/><text x="66.1993%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (16 samples, 1.23%)</title><rect x="65.9493%" y="565" width="1.2298%" height="15" fill="rgb(232,100,14)"/><text x="66.1993%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (16 samples, 1.23%)</title><rect x="65.9493%" y="549" width="1.2298%" height="15" fill="rgb(224,185,1)"/><text x="66.1993%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (16 samples, 1.23%)</title><rect x="65.9493%" y="533" width="1.2298%" height="15" fill="rgb(223,139,8)"/><text x="66.1993%" y="543.50"></text></g><g><title>__memmove_avx_unaligned_erms (16 samples, 1.23%)</title><rect x="65.9493%" y="517" width="1.2298%" height="15" fill="rgb(232,213,38)"/><text x="66.1993%" y="527.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (24 samples, 1.84%)</title><rect x="65.4881%" y="677" width="1.8447%" height="15" fill="rgb(207,94,22)"/><text x="65.7381%" y="687.50">s..</text></g><g><title>sql_parser::parser::Parser::expected (21 samples, 1.61%)</title><rect x="65.7187%" y="661" width="1.6141%" height="15" fill="rgb(219,183,54)"/><text x="65.9687%" y="671.50"></text></g><g><title>_int_free (2 samples, 0.15%)</title><rect x="67.1791%" y="645" width="0.1537%" height="15" fill="rgb(216,185,54)"/><text x="67.4291%" y="655.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (33 samples, 2.54%)</title><rect x="65.0269%" y="757" width="2.5365%" height="15" fill="rgb(254,217,39)"/><text x="65.2769%" y="767.50">sq..</text></g><g><title>sql_parser::parser::Parser::parse_query_body (33 samples, 2.54%)</title><rect x="65.0269%" y="741" width="2.5365%" height="15" fill="rgb(240,178,23)"/><text x="65.2769%" y="751.50">sq..</text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (33 samples, 2.54%)</title><rect x="65.0269%" y="725" width="2.5365%" height="15" fill="rgb(218,11,47)"/><text x="65.2769%" y="735.50">sq..</text></g><g><title>sql_parser::parser::Parser::check_descent (33 samples, 2.54%)</title><rect x="65.0269%" y="709" width="2.5365%" height="15" fill="rgb(218,51,51)"/><text x="65.2769%" y="719.50">sq..</text></g><g><title>sql_parser::parser::Parser::parse_prefix (33 samples, 2.54%)</title><rect x="65.0269%" y="693" width="2.5365%" height="15" fill="rgb(238,126,27)"/><text x="65.2769%" y="703.50">sq..</text></g><g><title>sql_parser::parser::Parser::parse_value (3 samples, 0.23%)</title><rect x="67.3328%" y="677" width="0.2306%" height="15" fill="rgb(249,202,22)"/><text x="67.5828%" y="687.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.15%)</title><rect x="67.7940%" y="613" width="0.1537%" height="15" fill="rgb(254,195,49)"/><text x="68.0440%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (4 samples, 0.31%)</title><rect x="67.9477%" y="613" width="0.3075%" height="15" fill="rgb(208,123,14)"/><text x="68.1977%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.31%)</title><rect x="67.9477%" y="597" width="0.3075%" height="15" fill="rgb(224,200,8)"/><text x="68.1977%" y="607.50"></text></g><g><title>alloc::string::String::push_str (4 samples, 0.31%)</title><rect x="67.9477%" y="581" width="0.3075%" height="15" fill="rgb(217,61,36)"/><text x="68.1977%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (4 samples, 0.31%)</title><rect x="67.9477%" y="565" width="0.3075%" height="15" fill="rgb(206,35,45)"/><text x="68.1977%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 0.31%)</title><rect x="67.9477%" y="549" width="0.3075%" height="15" fill="rgb(217,65,33)"/><text x="68.1977%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (4 samples, 0.31%)</title><rect x="67.9477%" y="533" width="0.3075%" height="15" fill="rgb(222,158,48)"/><text x="68.1977%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.15%)</title><rect x="68.1015%" y="517" width="0.1537%" height="15" fill="rgb(254,2,54)"/><text x="68.3515%" y="527.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.15%)</title><rect x="68.1015%" y="501" width="0.1537%" height="15" fill="rgb(250,143,38)"/><text x="68.3515%" y="511.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (8 samples, 0.61%)</title><rect x="67.7171%" y="757" width="0.6149%" height="15" fill="rgb(248,25,0)"/><text x="67.9671%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (8 samples, 0.61%)</title><rect x="67.7171%" y="741" width="0.6149%" height="15" fill="rgb(206,152,27)"/><text x="67.9671%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (8 samples, 0.61%)</title><rect x="67.7171%" y="725" width="0.6149%" height="15" fill="rgb(240,77,30)"/><text x="67.9671%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (8 samples, 0.61%)</title><rect x="67.7171%" y="709" width="0.6149%" height="15" fill="rgb(231,5,3)"/><text x="67.9671%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (8 samples, 0.61%)</title><rect x="67.7171%" y="693" width="0.6149%" height="15" fill="rgb(207,226,32)"/><text x="67.9671%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::expected (8 samples, 0.61%)</title><rect x="67.7171%" y="677" width="0.6149%" height="15" fill="rgb(222,207,47)"/><text x="67.9671%" y="687.50"></text></g><g><title>alloc::fmt::format (7 samples, 0.54%)</title><rect x="67.7940%" y="661" width="0.5380%" height="15" fill="rgb(229,115,45)"/><text x="68.0440%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (7 samples, 0.54%)</title><rect x="67.7940%" y="645" width="0.5380%" height="15" fill="rgb(224,191,6)"/><text x="68.0440%" y="655.50"></text></g><g><title>core::fmt::write (7 samples, 0.54%)</title><rect x="67.7940%" y="629" width="0.5380%" height="15" fill="rgb(230,227,24)"/><text x="68.0440%" y="639.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="68.4858%" y="709" width="0.1537%" height="15" fill="rgb(228,80,19)"/><text x="68.7358%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="68.4858%" y="693" width="0.1537%" height="15" fill="rgb(247,229,0)"/><text x="68.7358%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="68.4858%" y="677" width="0.1537%" height="15" fill="rgb(237,194,15)"/><text x="68.7358%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.15%)</title><rect x="68.4858%" y="661" width="0.1537%" height="15" fill="rgb(219,203,20)"/><text x="68.7358%" y="671.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.15%)</title><rect x="68.9470%" y="677" width="0.1537%" height="15" fill="rgb(234,128,8)"/><text x="69.1970%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (11 samples, 0.85%)</title><rect x="68.7164%" y="709" width="0.8455%" height="15" fill="rgb(248,202,8)"/><text x="68.9664%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.61%)</title><rect x="68.9470%" y="693" width="0.6149%" height="15" fill="rgb(206,104,37)"/><text x="69.1970%" y="703.50"></text></g><g><title>__GI___libc_realloc (6 samples, 0.46%)</title><rect x="69.1007%" y="677" width="0.4612%" height="15" fill="rgb(223,8,27)"/><text x="69.3507%" y="687.50"></text></g><g><title>_int_realloc (5 samples, 0.38%)</title><rect x="69.1776%" y="661" width="0.3843%" height="15" fill="rgb(216,217,28)"/><text x="69.4276%" y="671.50"></text></g><g><title>_int_malloc (5 samples, 0.38%)</title><rect x="69.1776%" y="645" width="0.3843%" height="15" fill="rgb(249,199,1)"/><text x="69.4276%" y="655.50"></text></g><g><title>malloc_consolidate (3 samples, 0.23%)</title><rect x="69.3313%" y="629" width="0.2306%" height="15" fill="rgb(240,85,17)"/><text x="69.5813%" y="639.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (25 samples, 1.92%)</title><rect x="68.3321%" y="757" width="1.9216%" height="15" fill="rgb(206,108,45)"/><text x="68.5821%" y="767.50">s..</text></g><g><title>sql_parser::parser::Parser::check_descent (25 samples, 1.92%)</title><rect x="68.3321%" y="741" width="1.9216%" height="15" fill="rgb(245,210,41)"/><text x="68.5821%" y="751.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_query_body (25 samples, 1.92%)</title><rect x="68.3321%" y="725" width="1.9216%" height="15" fill="rgb(206,13,37)"/><text x="68.5821%" y="735.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_keyword (9 samples, 0.69%)</title><rect x="69.5619%" y="709" width="0.6918%" height="15" fill="rgb(250,61,18)"/><text x="69.8119%" y="719.50"></text></g><g><title>__memcmp_avx2_movbe (5 samples, 0.38%)</title><rect x="69.8693%" y="693" width="0.3843%" height="15" fill="rgb(235,172,48)"/><text x="70.1193%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (16 samples, 1.23%)</title><rect x="70.2537%" y="725" width="1.2298%" height="15" fill="rgb(249,201,17)"/><text x="70.5037%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (15 samples, 1.15%)</title><rect x="70.3305%" y="709" width="1.1530%" height="15" fill="rgb(219,208,6)"/><text x="70.5805%" y="719.50"></text></g><g><title>__memcmp_avx2_movbe (4 samples, 0.31%)</title><rect x="71.1760%" y="693" width="0.3075%" height="15" fill="rgb(248,31,23)"/><text x="71.4260%" y="703.50"></text></g><g><title>sql_parser::parser::parse_statements (17 samples, 1.31%)</title><rect x="70.2537%" y="757" width="1.3067%" height="15" fill="rgb(245,15,42)"/><text x="70.5037%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (17 samples, 1.31%)</title><rect x="70.2537%" y="741" width="1.3067%" height="15" fill="rgb(222,217,39)"/><text x="70.5037%" y="751.50"></text></g><g><title>__x64_sys_openat (2 samples, 0.15%)</title><rect x="71.7141%" y="501" width="0.1537%" height="15" fill="rgb(210,219,27)"/><text x="71.9641%" y="511.50"></text></g><g><title>do_sys_openat2 (2 samples, 0.15%)</title><rect x="71.7141%" y="485" width="0.1537%" height="15" fill="rgb(252,166,36)"/><text x="71.9641%" y="495.50"></text></g><g><title>do_filp_open (2 samples, 0.15%)</title><rect x="71.7141%" y="469" width="0.1537%" height="15" fill="rgb(245,132,34)"/><text x="71.9641%" y="479.50"></text></g><g><title>path_openat (2 samples, 0.15%)</title><rect x="71.7141%" y="453" width="0.1537%" height="15" fill="rgb(236,54,3)"/><text x="71.9641%" y="463.50"></text></g><g><title>link_path_walk (2 samples, 0.15%)</title><rect x="71.7141%" y="437" width="0.1537%" height="15" fill="rgb(241,173,43)"/><text x="71.9641%" y="447.50"></text></g><g><title>std::rt::lang_start_internal (3 samples, 0.23%)</title><rect x="71.7141%" y="757" width="0.2306%" height="15" fill="rgb(215,190,9)"/><text x="71.9641%" y="767.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.23%)</title><rect x="71.7141%" y="741" width="0.2306%" height="15" fill="rgb(242,101,16)"/><text x="71.9641%" y="751.50"></text></g><g><title>std::panicking::try (3 samples, 0.23%)</title><rect x="71.7141%" y="725" width="0.2306%" height="15" fill="rgb(223,190,21)"/><text x="71.9641%" y="735.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.23%)</title><rect x="71.7141%" y="709" width="0.2306%" height="15" fill="rgb(215,228,25)"/><text x="71.9641%" y="719.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (3 samples, 0.23%)</title><rect x="71.7141%" y="693" width="0.2306%" height="15" fill="rgb(225,36,22)"/><text x="71.9641%" y="703.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (3 samples, 0.23%)</title><rect x="71.7141%" y="677" width="0.2306%" height="15" fill="rgb(251,106,46)"/><text x="71.9641%" y="687.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3 samples, 0.23%)</title><rect x="71.7141%" y="661" width="0.2306%" height="15" fill="rgb(208,90,1)"/><text x="71.9641%" y="671.50"></text></g><g><title>lobsters::main (3 samples, 0.23%)</title><rect x="71.7141%" y="645" width="0.2306%" height="15" fill="rgb(243,10,4)"/><text x="71.9641%" y="655.50"></text></g><g><title>hwloc::Topology::new (3 samples, 0.23%)</title><rect x="71.7141%" y="629" width="0.2306%" height="15" fill="rgb(212,137,27)"/><text x="71.9641%" y="639.50"></text></g><g><title>hwloc_topology_load (3 samples, 0.23%)</title><rect x="71.7141%" y="613" width="0.2306%" height="15" fill="rgb(231,220,49)"/><text x="71.9641%" y="623.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.23%)</title><rect x="71.7141%" y="597" width="0.2306%" height="15" fill="rgb(237,96,20)"/><text x="71.9641%" y="607.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.23%)</title><rect x="71.7141%" y="581" width="0.2306%" height="15" fill="rgb(239,229,30)"/><text x="71.9641%" y="591.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.23%)</title><rect x="71.7141%" y="565" width="0.2306%" height="15" fill="rgb(219,65,33)"/><text x="71.9641%" y="575.50"></text></g><g><title>__GI___openat (3 samples, 0.23%)</title><rect x="71.7141%" y="549" width="0.2306%" height="15" fill="rgb(243,134,7)"/><text x="71.9641%" y="559.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.23%)</title><rect x="71.7141%" y="533" width="0.2306%" height="15" fill="rgb(216,177,54)"/><text x="71.9641%" y="543.50"></text></g><g><title>do_syscall_64 (3 samples, 0.23%)</title><rect x="71.7141%" y="517" width="0.2306%" height="15" fill="rgb(211,160,20)"/><text x="71.9641%" y="527.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.15%)</title><rect x="72.0215%" y="645" width="0.1537%" height="15" fill="rgb(239,85,39)"/><text x="72.2715%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (14 samples, 1.08%)</title><rect x="72.1752%" y="629" width="1.0761%" height="15" fill="rgb(232,125,22)"/><text x="72.4252%" y="639.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (14 samples, 1.08%)</title><rect x="72.1752%" y="613" width="1.0761%" height="15" fill="rgb(244,57,34)"/><text x="72.4252%" y="623.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (14 samples, 1.08%)</title><rect x="72.1752%" y="597" width="1.0761%" height="15" fill="rgb(214,203,32)"/><text x="72.4252%" y="607.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (13 samples, 1.00%)</title><rect x="72.2521%" y="581" width="0.9992%" height="15" fill="rgb(207,58,43)"/><text x="72.5021%" y="591.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (8 samples, 0.61%)</title><rect x="72.6364%" y="565" width="0.6149%" height="15" fill="rgb(215,193,15)"/><text x="72.8864%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (8 samples, 0.61%)</title><rect x="72.6364%" y="549" width="0.6149%" height="15" fill="rgb(232,15,44)"/><text x="72.8864%" y="559.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (6 samples, 0.46%)</title><rect x="72.7902%" y="533" width="0.4612%" height="15" fill="rgb(212,3,48)"/><text x="73.0402%" y="543.50"></text></g><g><title>core::fmt::write (19 samples, 1.46%)</title><rect x="72.0215%" y="677" width="1.4604%" height="15" fill="rgb(218,128,7)"/><text x="72.2715%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (19 samples, 1.46%)</title><rect x="72.0215%" y="661" width="1.4604%" height="15" fill="rgb(226,216,39)"/><text x="72.2715%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::InsertStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (17 samples, 1.31%)</title><rect x="72.1752%" y="645" width="1.3067%" height="15" fill="rgb(243,47,51)"/><text x="72.4252%" y="655.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (3 samples, 0.23%)</title><rect x="73.2513%" y="629" width="0.2306%" height="15" fill="rgb(241,183,40)"/><text x="73.5013%" y="639.50"></text></g><g><title>_int_free (2 samples, 0.15%)</title><rect x="73.5588%" y="661" width="0.1537%" height="15" fill="rgb(231,217,32)"/><text x="73.8088%" y="671.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query (25 samples, 1.92%)</title><rect x="71.9447%" y="693" width="1.9216%" height="15" fill="rgb(229,61,38)"/><text x="72.1947%" y="703.50">d..</text></g><g><title>core::ptr::drop_in_place (5 samples, 0.38%)</title><rect x="73.4819%" y="677" width="0.3843%" height="15" fill="rgb(225,210,5)"/><text x="73.7319%" y="687.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.15%)</title><rect x="73.7125%" y="661" width="0.1537%" height="15" fill="rgb(231,79,45)"/><text x="73.9625%" y="671.50"></text></g><g><title>[unknown] (891 samples, 68.49%)</title><rect x="5.6111%" y="773" width="68.4858%" height="15" fill="rgb(224,100,7)"/><text x="5.8611%" y="783.50">[unknown]</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (28 samples, 2.15%)</title><rect x="71.9447%" y="757" width="2.1522%" height="15" fill="rgb(241,198,18)"/><text x="72.1947%" y="767.50">s..</text></g><g><title>decor::Shim::run_on_tcp (28 samples, 2.15%)</title><rect x="71.9447%" y="741" width="2.1522%" height="15" fill="rgb(252,97,53)"/><text x="72.1947%" y="751.50">d..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (28 samples, 2.15%)</title><rect x="71.9447%" y="725" width="2.1522%" height="15" fill="rgb(220,88,7)"/><text x="72.1947%" y="735.50">m..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (28 samples, 2.15%)</title><rect x="71.9447%" y="709" width="2.1522%" height="15" fill="rgb(213,176,14)"/><text x="72.1947%" y="719.50">&lt;..</text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (3 samples, 0.23%)</title><rect x="73.8663%" y="693" width="0.2306%" height="15" fill="rgb(246,73,7)"/><text x="74.1163%" y="703.50"></text></g><g><title>_int_free (2 samples, 0.15%)</title><rect x="73.9431%" y="677" width="0.1537%" height="15" fill="rgb(245,64,36)"/><text x="74.1931%" y="687.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (8 samples, 0.61%)</title><rect x="74.0968%" y="629" width="0.6149%" height="15" fill="rgb(245,80,10)"/><text x="74.3468%" y="639.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.31%)</title><rect x="74.4043%" y="613" width="0.3075%" height="15" fill="rgb(232,107,50)"/><text x="74.6543%" y="623.50"></text></g><g><title>_int_free (2 samples, 0.15%)</title><rect x="74.5580%" y="597" width="0.1537%" height="15" fill="rgb(253,3,0)"/><text x="74.8080%" y="607.50"></text></g><g><title>core::ptr::drop_in_place (5 samples, 0.38%)</title><rect x="74.7886%" y="629" width="0.3843%" height="15" fill="rgb(212,99,53)"/><text x="75.0386%" y="639.50"></text></g><g><title>core::ptr::drop_in_place (5 samples, 0.38%)</title><rect x="74.7886%" y="613" width="0.3843%" height="15" fill="rgb(249,111,54)"/><text x="75.0386%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.38%)</title><rect x="74.7886%" y="597" width="0.3843%" height="15" fill="rgb(249,55,30)"/><text x="75.0386%" y="607.50"></text></g><g><title>core::ptr::drop_in_place (5 samples, 0.38%)</title><rect x="74.7886%" y="581" width="0.3843%" height="15" fill="rgb(237,47,42)"/><text x="75.0386%" y="591.50"></text></g><g><title>core::ptr::drop_in_place (5 samples, 0.38%)</title><rect x="74.7886%" y="565" width="0.3843%" height="15" fill="rgb(211,20,18)"/><text x="75.0386%" y="575.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.31%)</title><rect x="74.8655%" y="549" width="0.3075%" height="15" fill="rgb(231,203,46)"/><text x="75.1155%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.31%)</title><rect x="74.8655%" y="533" width="0.3075%" height="15" fill="rgb(237,142,3)"/><text x="75.1155%" y="543.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.15%)</title><rect x="75.0192%" y="517" width="0.1537%" height="15" fill="rgb(241,107,1)"/><text x="75.2692%" y="527.50"></text></g><g><title>__tcp_transmit_skb (2 samples, 0.15%)</title><rect x="75.4035%" y="421" width="0.1537%" height="15" fill="rgb(229,83,13)"/><text x="75.6535%" y="431.50"></text></g><g><title>__ip_queue_xmit (2 samples, 0.15%)</title><rect x="75.4035%" y="405" width="0.1537%" height="15" fill="rgb(241,91,40)"/><text x="75.6535%" y="415.50"></text></g><g><title>ip_output (2 samples, 0.15%)</title><rect x="75.4035%" y="389" width="0.1537%" height="15" fill="rgb(225,3,45)"/><text x="75.6535%" y="399.50"></text></g><g><title>ip_finish_output2 (2 samples, 0.15%)</title><rect x="75.4035%" y="373" width="0.1537%" height="15" fill="rgb(244,223,14)"/><text x="75.6535%" y="383.50"></text></g><g><title>do_syscall_64 (10 samples, 0.77%)</title><rect x="75.3267%" y="501" width="0.7686%" height="15" fill="rgb(224,124,37)"/><text x="75.5767%" y="511.50"></text></g><g><title>__x64_sys_recvfrom (10 samples, 0.77%)</title><rect x="75.3267%" y="485" width="0.7686%" height="15" fill="rgb(251,171,30)"/><text x="75.5767%" y="495.50"></text></g><g><title>__sys_recvfrom (10 samples, 0.77%)</title><rect x="75.3267%" y="469" width="0.7686%" height="15" fill="rgb(236,46,54)"/><text x="75.5767%" y="479.50"></text></g><g><title>inet_recvmsg (10 samples, 0.77%)</title><rect x="75.3267%" y="453" width="0.7686%" height="15" fill="rgb(245,213,5)"/><text x="75.5767%" y="463.50"></text></g><g><title>tcp_recvmsg (10 samples, 0.77%)</title><rect x="75.3267%" y="437" width="0.7686%" height="15" fill="rgb(230,144,27)"/><text x="75.5767%" y="447.50"></text></g><g><title>sk_wait_data (7 samples, 0.54%)</title><rect x="75.5573%" y="421" width="0.5380%" height="15" fill="rgb(220,86,6)"/><text x="75.8073%" y="431.50"></text></g><g><title>wait_woken (6 samples, 0.46%)</title><rect x="75.6341%" y="405" width="0.4612%" height="15" fill="rgb(240,20,13)"/><text x="75.8841%" y="415.50"></text></g><g><title>schedule_timeout (6 samples, 0.46%)</title><rect x="75.6341%" y="389" width="0.4612%" height="15" fill="rgb(217,89,34)"/><text x="75.8841%" y="399.50"></text></g><g><title>schedule (6 samples, 0.46%)</title><rect x="75.6341%" y="373" width="0.4612%" height="15" fill="rgb(229,13,5)"/><text x="75.8841%" y="383.50"></text></g><g><title>__schedule (6 samples, 0.46%)</title><rect x="75.6341%" y="357" width="0.4612%" height="15" fill="rgb(244,67,35)"/><text x="75.8841%" y="367.50"></text></g><g><title>update_rq_clock (2 samples, 0.15%)</title><rect x="75.9416%" y="341" width="0.1537%" height="15" fill="rgb(221,40,2)"/><text x="76.1916%" y="351.50"></text></g><g><title>__libc_recv (12 samples, 0.92%)</title><rect x="75.2498%" y="533" width="0.9224%" height="15" fill="rgb(237,157,21)"/><text x="75.4998%" y="543.50"></text></g><g><title>entry_SYSCALL_64 (11 samples, 0.85%)</title><rect x="75.3267%" y="517" width="0.8455%" height="15" fill="rgb(222,94,11)"/><text x="75.5767%" y="527.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (13 samples, 1.00%)</title><rect x="75.2498%" y="597" width="0.9992%" height="15" fill="rgb(249,113,6)"/><text x="75.4998%" y="607.50"></text></g><g><title>std::sys_common::net::TcpStream::read (13 samples, 1.00%)</title><rect x="75.2498%" y="581" width="0.9992%" height="15" fill="rgb(238,137,36)"/><text x="75.4998%" y="591.50"></text></g><g><title>std::sys::unix::net::Socket::read (13 samples, 1.00%)</title><rect x="75.2498%" y="565" width="0.9992%" height="15" fill="rgb(210,102,26)"/><text x="75.4998%" y="575.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (13 samples, 1.00%)</title><rect x="75.2498%" y="549" width="0.9992%" height="15" fill="rgb(218,30,30)"/><text x="75.4998%" y="559.50"></text></g><g><title>msql_srv::packet::PacketReader&lt;R&gt;::next (15 samples, 1.15%)</title><rect x="75.1729%" y="629" width="1.1530%" height="15" fill="rgb(214,67,26)"/><text x="75.4229%" y="639.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (15 samples, 1.15%)</title><rect x="75.1729%" y="613" width="1.1530%" height="15" fill="rgb(251,9,53)"/><text x="75.4229%" y="623.50"></text></g><g><title>__dev_queue_xmit (3 samples, 0.23%)</title><rect x="76.7871%" y="357" width="0.2306%" height="15" fill="rgb(228,204,25)"/><text x="77.0371%" y="367.50"></text></g><g><title>__rcu_read_lock (2 samples, 0.15%)</title><rect x="77.1714%" y="197" width="0.1537%" height="15" fill="rgb(207,153,8)"/><text x="77.4214%" y="207.50"></text></g><g><title>enqueue_task (3 samples, 0.23%)</title><rect x="77.7095%" y="69" width="0.2306%" height="15" fill="rgb(242,9,16)"/><text x="77.9595%" y="79.50"></text></g><g><title>uclamp_rq_inc_id (2 samples, 0.15%)</title><rect x="77.7863%" y="53" width="0.1537%" height="15" fill="rgb(217,211,10)"/><text x="78.0363%" y="63.50"></text></g><g><title>enqueue_task_fair (5 samples, 0.38%)</title><rect x="77.9400%" y="69" width="0.3843%" height="15" fill="rgb(219,228,52)"/><text x="78.1900%" y="79.50"></text></g><g><title>enqueue_entity (5 samples, 0.38%)</title><rect x="77.9400%" y="53" width="0.3843%" height="15" fill="rgb(231,92,29)"/><text x="78.1900%" y="63.50"></text></g><g><title>update_load_avg (3 samples, 0.23%)</title><rect x="78.0938%" y="37" width="0.2306%" height="15" fill="rgb(232,8,23)"/><text x="78.3438%" y="47.50"></text></g><g><title>sock_def_readable (16 samples, 1.23%)</title><rect x="77.5557%" y="133" width="1.2298%" height="15" fill="rgb(216,211,34)"/><text x="77.8057%" y="143.50"></text></g><g><title>__wake_up_common_lock (16 samples, 1.23%)</title><rect x="77.5557%" y="117" width="1.2298%" height="15" fill="rgb(236,151,0)"/><text x="77.8057%" y="127.50"></text></g><g><title>__wake_up_common (16 samples, 1.23%)</title><rect x="77.5557%" y="101" width="1.2298%" height="15" fill="rgb(209,168,3)"/><text x="77.8057%" y="111.50"></text></g><g><title>try_to_wake_up (15 samples, 1.15%)</title><rect x="77.6326%" y="85" width="1.1530%" height="15" fill="rgb(208,129,28)"/><text x="77.8826%" y="95.50"></text></g><g><title>update_rq_clock (5 samples, 0.38%)</title><rect x="78.4012%" y="69" width="0.3843%" height="15" fill="rgb(229,78,22)"/><text x="78.6512%" y="79.50"></text></g><g><title>tcp_v4_do_rcv (19 samples, 1.46%)</title><rect x="77.4789%" y="165" width="1.4604%" height="15" fill="rgb(228,187,13)"/><text x="77.7289%" y="175.50"></text></g><g><title>tcp_rcv_established (19 samples, 1.46%)</title><rect x="77.4789%" y="149" width="1.4604%" height="15" fill="rgb(240,119,24)"/><text x="77.7289%" y="159.50"></text></g><g><title>tcp_ack (2 samples, 0.15%)</title><rect x="78.7855%" y="133" width="0.1537%" height="15" fill="rgb(209,194,42)"/><text x="79.0355%" y="143.50"></text></g><g><title>__netif_receive_skb_one_core (25 samples, 1.92%)</title><rect x="77.0945%" y="261" width="1.9216%" height="15" fill="rgb(247,200,46)"/><text x="77.3445%" y="271.50">_..</text></g><g><title>ip_rcv (24 samples, 1.84%)</title><rect x="77.1714%" y="245" width="1.8447%" height="15" fill="rgb(218,76,16)"/><text x="77.4214%" y="255.50">i..</text></g><g><title>ip_local_deliver (24 samples, 1.84%)</title><rect x="77.1714%" y="229" width="1.8447%" height="15" fill="rgb(225,21,48)"/><text x="77.4214%" y="239.50">i..</text></g><g><title>ip_local_deliver_finish (24 samples, 1.84%)</title><rect x="77.1714%" y="213" width="1.8447%" height="15" fill="rgb(239,223,50)"/><text x="77.4214%" y="223.50">i..</text></g><g><title>ip_protocol_deliver_rcu (22 samples, 1.69%)</title><rect x="77.3251%" y="197" width="1.6910%" height="15" fill="rgb(244,45,21)"/><text x="77.5751%" y="207.50"></text></g><g><title>tcp_v4_rcv (22 samples, 1.69%)</title><rect x="77.3251%" y="181" width="1.6910%" height="15" fill="rgb(232,33,43)"/><text x="77.5751%" y="191.50"></text></g><g><title>__ip_queue_xmit (32 samples, 2.46%)</title><rect x="76.6334%" y="405" width="2.4596%" height="15" fill="rgb(209,8,3)"/><text x="76.8834%" y="415.50">__..</text></g><g><title>ip_output (30 samples, 2.31%)</title><rect x="76.7871%" y="389" width="2.3059%" height="15" fill="rgb(214,25,53)"/><text x="77.0371%" y="399.50">i..</text></g><g><title>ip_finish_output2 (30 samples, 2.31%)</title><rect x="76.7871%" y="373" width="2.3059%" height="15" fill="rgb(254,186,54)"/><text x="77.0371%" y="383.50">i..</text></g><g><title>__local_bh_enable_ip (27 samples, 2.08%)</title><rect x="77.0177%" y="357" width="2.0753%" height="15" fill="rgb(208,174,49)"/><text x="77.2677%" y="367.50">_..</text></g><g><title>do_softirq (27 samples, 2.08%)</title><rect x="77.0177%" y="341" width="2.0753%" height="15" fill="rgb(233,191,51)"/><text x="77.2677%" y="351.50">d..</text></g><g><title>do_softirq_own_stack (27 samples, 2.08%)</title><rect x="77.0177%" y="325" width="2.0753%" height="15" fill="rgb(222,134,10)"/><text x="77.2677%" y="335.50">d..</text></g><g><title>__do_softirq (27 samples, 2.08%)</title><rect x="77.0177%" y="309" width="2.0753%" height="15" fill="rgb(230,226,20)"/><text x="77.2677%" y="319.50">_..</text></g><g><title>net_rx_action (27 samples, 2.08%)</title><rect x="77.0177%" y="293" width="2.0753%" height="15" fill="rgb(251,111,25)"/><text x="77.2677%" y="303.50">n..</text></g><g><title>process_backlog (26 samples, 2.00%)</title><rect x="77.0945%" y="277" width="1.9985%" height="15" fill="rgb(224,40,46)"/><text x="77.3445%" y="287.50">p..</text></g><g><title>__tcp_push_pending_frames (35 samples, 2.69%)</title><rect x="76.5565%" y="453" width="2.6902%" height="15" fill="rgb(236,108,47)"/><text x="76.8065%" y="463.50">__..</text></g><g><title>tcp_write_xmit (35 samples, 2.69%)</title><rect x="76.5565%" y="437" width="2.6902%" height="15" fill="rgb(234,93,0)"/><text x="76.8065%" y="447.50">tc..</text></g><g><title>__tcp_transmit_skb (34 samples, 2.61%)</title><rect x="76.6334%" y="421" width="2.6134%" height="15" fill="rgb(224,213,32)"/><text x="76.8834%" y="431.50">__..</text></g><g><title>do_syscall_64 (38 samples, 2.92%)</title><rect x="76.4796%" y="549" width="2.9208%" height="15" fill="rgb(251,11,48)"/><text x="76.7296%" y="559.50">do..</text></g><g><title>__x64_sys_sendto (38 samples, 2.92%)</title><rect x="76.4796%" y="533" width="2.9208%" height="15" fill="rgb(236,173,5)"/><text x="76.7296%" y="543.50">__..</text></g><g><title>__sys_sendto (38 samples, 2.92%)</title><rect x="76.4796%" y="517" width="2.9208%" height="15" fill="rgb(230,95,12)"/><text x="76.7296%" y="527.50">__..</text></g><g><title>sock_sendmsg (38 samples, 2.92%)</title><rect x="76.4796%" y="501" width="2.9208%" height="15" fill="rgb(232,209,1)"/><text x="76.7296%" y="511.50">so..</text></g><g><title>tcp_sendmsg (38 samples, 2.92%)</title><rect x="76.4796%" y="485" width="2.9208%" height="15" fill="rgb(232,6,1)"/><text x="76.7296%" y="495.50">tc..</text></g><g><title>tcp_sendmsg_locked (37 samples, 2.84%)</title><rect x="76.5565%" y="469" width="2.8440%" height="15" fill="rgb(210,224,50)"/><text x="76.8065%" y="479.50">tc..</text></g><g><title>decor::Shim::run_on_tcp (70 samples, 5.38%)</title><rect x="74.0968%" y="661" width="5.3805%" height="15" fill="rgb(228,127,35)"/><text x="74.3468%" y="671.50">decor::..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (70 samples, 5.38%)</title><rect x="74.0968%" y="645" width="5.3805%" height="15" fill="rgb(245,102,45)"/><text x="74.3468%" y="655.50">msql_sr..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (41 samples, 3.15%)</title><rect x="76.3259%" y="629" width="3.1514%" height="15" fill="rgb(214,1,49)"/><text x="76.5759%" y="639.50">std..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (41 samples, 3.15%)</title><rect x="76.3259%" y="613" width="3.1514%" height="15" fill="rgb(226,163,40)"/><text x="76.5759%" y="623.50">&lt;st..</text></g><g><title>std::sys_common::net::TcpStream::write (41 samples, 3.15%)</title><rect x="76.3259%" y="597" width="3.1514%" height="15" fill="rgb(239,212,28)"/><text x="76.5759%" y="607.50">std..</text></g><g><title>__libc_send (41 samples, 3.15%)</title><rect x="76.3259%" y="581" width="3.1514%" height="15" fill="rgb(220,20,13)"/><text x="76.5759%" y="591.50">__l..</text></g><g><title>entry_SYSCALL_64 (39 samples, 3.00%)</title><rect x="76.4796%" y="565" width="2.9977%" height="15" fill="rgb(210,164,35)"/><text x="76.7296%" y="575.50">ent..</text></g><g><title>__GI___clone (71 samples, 5.46%)</title><rect x="74.0968%" y="773" width="5.4573%" height="15" fill="rgb(248,109,41)"/><text x="74.3468%" y="783.50">__GI___..</text></g><g><title>start_thread (71 samples, 5.46%)</title><rect x="74.0968%" y="757" width="5.4573%" height="15" fill="rgb(238,23,50)"/><text x="74.3468%" y="767.50">start_t..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (71 samples, 5.46%)</title><rect x="74.0968%" y="741" width="5.4573%" height="15" fill="rgb(211,48,49)"/><text x="74.3468%" y="751.50">std::sy..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (71 samples, 5.46%)</title><rect x="74.0968%" y="725" width="5.4573%" height="15" fill="rgb(223,36,21)"/><text x="74.3468%" y="735.50">&lt;alloc:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (71 samples, 5.46%)</title><rect x="74.0968%" y="709" width="5.4573%" height="15" fill="rgb(207,123,46)"/><text x="74.3468%" y="719.50">&lt;alloc:..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (71 samples, 5.46%)</title><rect x="74.0968%" y="693" width="5.4573%" height="15" fill="rgb(240,218,32)"/><text x="74.3468%" y="703.50">core::o..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (71 samples, 5.46%)</title><rect x="74.0968%" y="677" width="5.4573%" height="15" fill="rgb(252,5,43)"/><text x="74.3468%" y="687.50">std::sy..</text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.15%)</title><rect x="79.7079%" y="517" width="0.1537%" height="15" fill="rgb(252,84,19)"/><text x="79.9579%" y="527.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.15%)</title><rect x="79.7079%" y="501" width="0.1537%" height="15" fill="rgb(243,152,39)"/><text x="79.9579%" y="511.50"></text></g><g><title>preempt_schedule_thunk (234 samples, 17.99%)</title><rect x="80.2460%" y="373" width="17.9862%" height="15" fill="rgb(234,160,15)"/><text x="80.4960%" y="383.50">preempt_schedule_thunk</text></g><g><title>preempt_schedule_common (234 samples, 17.99%)</title><rect x="80.2460%" y="357" width="17.9862%" height="15" fill="rgb(237,34,20)"/><text x="80.4960%" y="367.50">preempt_schedule_common</text></g><g><title>__schedule (234 samples, 17.99%)</title><rect x="80.2460%" y="341" width="17.9862%" height="15" fill="rgb(229,97,13)"/><text x="80.4960%" y="351.50">__schedule</text></g><g><title>finish_task_switch (234 samples, 17.99%)</title><rect x="80.2460%" y="325" width="17.9862%" height="15" fill="rgb(234,71,50)"/><text x="80.4960%" y="335.50">finish_task_switch</text></g><g><title>__perf_event_task_sched_in (232 samples, 17.83%)</title><rect x="80.3997%" y="309" width="17.8324%" height="15" fill="rgb(253,155,4)"/><text x="80.6497%" y="319.50">__perf_event_task_sched_in</text></g><g><title>__intel_pmu_enable_all.constprop.0 (232 samples, 17.83%)</title><rect x="80.3997%" y="293" width="17.8324%" height="15" fill="rgb(222,185,37)"/><text x="80.6497%" y="303.50">__intel_pmu_enable_all.const..</text></g><g><title>native_write_msr (232 samples, 17.83%)</title><rect x="80.3997%" y="277" width="17.8324%" height="15" fill="rgb(251,177,13)"/><text x="80.6497%" y="287.50">native_write_msr</text></g><g><title>__x64_sys_sched_setaffinity (236 samples, 18.14%)</title><rect x="80.1691%" y="453" width="18.1399%" height="15" fill="rgb(250,179,40)"/><text x="80.4191%" y="463.50">__x64_sys_sched_setaffinity</text></g><g><title>sched_setaffinity (236 samples, 18.14%)</title><rect x="80.1691%" y="437" width="18.1399%" height="15" fill="rgb(242,44,2)"/><text x="80.4191%" y="447.50">sched_setaffinity</text></g><g><title>__set_cpus_allowed_ptr (236 samples, 18.14%)</title><rect x="80.1691%" y="421" width="18.1399%" height="15" fill="rgb(216,177,13)"/><text x="80.4191%" y="431.50">__set_cpus_allowed_ptr</text></g><g><title>stop_one_cpu (236 samples, 18.14%)</title><rect x="80.1691%" y="405" width="18.1399%" height="15" fill="rgb(216,106,43)"/><text x="80.4191%" y="415.50">stop_one_cpu</text></g><g><title>cpu_stop_queue_work (235 samples, 18.06%)</title><rect x="80.2460%" y="389" width="18.0630%" height="15" fill="rgb(216,183,2)"/><text x="80.4960%" y="399.50">cpu_stop_queue_work</text></g><g><title>[libhwloc.so.15.2.0] (243 samples, 18.68%)</title><rect x="79.7079%" y="533" width="18.6779%" height="15" fill="rgb(249,75,3)"/><text x="79.9579%" y="543.50">[libhwloc.so.15.2.0]</text></g><g><title>hwloc_linux_set_tid_cpubind (240 samples, 18.45%)</title><rect x="79.9385%" y="517" width="18.4473%" height="15" fill="rgb(219,67,39)"/><text x="80.1885%" y="527.50">hwloc_linux_set_tid_cpubind</text></g><g><title>__GI___sched_setaffinity_new (237 samples, 18.22%)</title><rect x="80.1691%" y="501" width="18.2168%" height="15" fill="rgb(253,228,2)"/><text x="80.4191%" y="511.50">__GI___sched_setaffinity_new</text></g><g><title>entry_SYSCALL_64 (237 samples, 18.22%)</title><rect x="80.1691%" y="485" width="18.2168%" height="15" fill="rgb(235,138,27)"/><text x="80.4191%" y="495.50">entry_SYSCALL_64</text></g><g><title>do_syscall_64 (237 samples, 18.22%)</title><rect x="80.1691%" y="469" width="18.2168%" height="15" fill="rgb(236,97,51)"/><text x="80.4191%" y="479.50">do_syscall_64</text></g><g><title>hwloc::Topology::new (245 samples, 18.83%)</title><rect x="79.6311%" y="597" width="18.8317%" height="15" fill="rgb(240,80,30)"/><text x="79.8811%" y="607.50">hwloc::Topology::new</text></g><g><title>hwloc_topology_load (245 samples, 18.83%)</title><rect x="79.6311%" y="581" width="18.8317%" height="15" fill="rgb(230,178,19)"/><text x="79.8811%" y="591.50">hwloc_topology_load</text></g><g><title>[libhwloc.so.15.2.0] (244 samples, 18.75%)</title><rect x="79.7079%" y="565" width="18.7548%" height="15" fill="rgb(210,190,27)"/><text x="79.9579%" y="575.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (244 samples, 18.75%)</title><rect x="79.7079%" y="549" width="18.7548%" height="15" fill="rgb(222,107,31)"/><text x="79.9579%" y="559.50">[libhwloc.so.15.2.0]</text></g><g><title>__libc_start_main (247 samples, 18.99%)</title><rect x="79.6311%" y="757" width="18.9854%" height="15" fill="rgb(216,127,34)"/><text x="79.8811%" y="767.50">__libc_start_main</text></g><g><title>main (247 samples, 18.99%)</title><rect x="79.6311%" y="741" width="18.9854%" height="15" fill="rgb(234,116,52)"/><text x="79.8811%" y="751.50">main</text></g><g><title>std::rt::lang_start_internal (247 samples, 18.99%)</title><rect x="79.6311%" y="725" width="18.9854%" height="15" fill="rgb(222,124,15)"/><text x="79.8811%" y="735.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (247 samples, 18.99%)</title><rect x="79.6311%" y="709" width="18.9854%" height="15" fill="rgb(231,179,28)"/><text x="79.8811%" y="719.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (247 samples, 18.99%)</title><rect x="79.6311%" y="693" width="18.9854%" height="15" fill="rgb(226,93,45)"/><text x="79.8811%" y="703.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (247 samples, 18.99%)</title><rect x="79.6311%" y="677" width="18.9854%" height="15" fill="rgb(215,8,51)"/><text x="79.8811%" y="687.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (247 samples, 18.99%)</title><rect x="79.6311%" y="661" width="18.9854%" height="15" fill="rgb(223,106,5)"/><text x="79.8811%" y="671.50">core::ops::function::impls::&lt;i..</text></g><g><title>std::rt::lang_start::_{{closure}} (247 samples, 18.99%)</title><rect x="79.6311%" y="645" width="18.9854%" height="15" fill="rgb(250,191,5)"/><text x="79.8811%" y="655.50">std::rt::lang_start::_{{closur..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (247 samples, 18.99%)</title><rect x="79.6311%" y="629" width="18.9854%" height="15" fill="rgb(242,132,44)"/><text x="79.8811%" y="639.50">std::sys_common::backtrace::__..</text></g><g><title>lobsters::main (247 samples, 18.99%)</title><rect x="79.6311%" y="613" width="18.9854%" height="15" fill="rgb(251,152,29)"/><text x="79.8811%" y="623.50">lobsters::main</text></g><g><title>_start (248 samples, 19.06%)</title><rect x="79.6311%" y="773" width="19.0623%" height="15" fill="rgb(218,179,5)"/><text x="79.8811%" y="783.50">_start</text></g><g><title>[vmlinux] (2 samples, 0.15%)</title><rect x="99.3082%" y="741" width="0.1537%" height="15" fill="rgb(227,67,19)"/><text x="99.5582%" y="751.50"></text></g><g><title>do_group_exit (2 samples, 0.15%)</title><rect x="99.3082%" y="725" width="0.1537%" height="15" fill="rgb(233,119,31)"/><text x="99.5582%" y="735.50"></text></g><g><title>do_exit (2 samples, 0.15%)</title><rect x="99.3082%" y="709" width="0.1537%" height="15" fill="rgb(241,120,22)"/><text x="99.5582%" y="719.50"></text></g><g><title>mmput (2 samples, 0.15%)</title><rect x="99.3082%" y="693" width="0.1537%" height="15" fill="rgb(224,102,30)"/><text x="99.5582%" y="703.50"></text></g><g><title>exit_mmap (2 samples, 0.15%)</title><rect x="99.3082%" y="677" width="0.1537%" height="15" fill="rgb(210,164,37)"/><text x="99.5582%" y="687.50"></text></g><g><title>lobsters (1,295 samples, 99.54%)</title><rect x="0.0000%" y="789" width="99.5388%" height="15" fill="rgb(226,191,16)"/><text x="0.2500%" y="799.50">lobsters</text></g><g><title>entry_SYSCALL_64 (6 samples, 0.46%)</title><rect x="99.0776%" y="773" width="0.4612%" height="15" fill="rgb(214,40,45)"/><text x="99.3276%" y="783.50"></text></g><g><title>do_syscall_64 (3 samples, 0.23%)</title><rect x="99.3082%" y="757" width="0.2306%" height="15" fill="rgb(244,29,26)"/><text x="99.5582%" y="767.50"></text></g><g><title>all (1,301 samples, 100%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(216,16,5)"/><text x="0.2500%" y="815.50"></text></g><g><title>perf (6 samples, 0.46%)</title><rect x="99.5388%" y="789" width="0.4612%" height="15" fill="rgb(249,76,35)"/><text x="99.7888%" y="799.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.46%)</title><rect x="99.5388%" y="773" width="0.4612%" height="15" fill="rgb(207,11,44)"/><text x="99.7888%" y="783.50"></text></g><g><title>do_syscall_64 (6 samples, 0.46%)</title><rect x="99.5388%" y="757" width="0.4612%" height="15" fill="rgb(228,190,49)"/><text x="99.7888%" y="767.50"></text></g><g><title>__x64_sys_execve (6 samples, 0.46%)</title><rect x="99.5388%" y="741" width="0.4612%" height="15" fill="rgb(214,173,12)"/><text x="99.7888%" y="751.50"></text></g><g><title>do_execve (6 samples, 0.46%)</title><rect x="99.5388%" y="725" width="0.4612%" height="15" fill="rgb(218,26,35)"/><text x="99.7888%" y="735.50"></text></g><g><title>__do_execve_file (6 samples, 0.46%)</title><rect x="99.5388%" y="709" width="0.4612%" height="15" fill="rgb(220,200,19)"/><text x="99.7888%" y="719.50"></text></g><g><title>search_binary_handler.part.0 (6 samples, 0.46%)</title><rect x="99.5388%" y="693" width="0.4612%" height="15" fill="rgb(239,95,49)"/><text x="99.7888%" y="703.50"></text></g><g><title>load_elf_binary (6 samples, 0.46%)</title><rect x="99.5388%" y="677" width="0.4612%" height="15" fill="rgb(235,85,53)"/><text x="99.7888%" y="687.50"></text></g><g><title>setup_new_exec (6 samples, 0.46%)</title><rect x="99.5388%" y="661" width="0.4612%" height="15" fill="rgb(233,133,31)"/><text x="99.7888%" y="671.50"></text></g><g><title>perf_event_exec (6 samples, 0.46%)</title><rect x="99.5388%" y="645" width="0.4612%" height="15" fill="rgb(218,25,20)"/><text x="99.7888%" y="655.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.38%)</title><rect x="99.6157%" y="629" width="0.3843%" height="15" fill="rgb(252,210,38)"/><text x="99.8657%" y="639.50"></text></g><g><title>native_write_msr (5 samples, 0.38%)</title><rect x="99.6157%" y="613" width="0.3843%" height="15" fill="rgb(242,134,21)"/><text x="99.8657%" y="623.50"></text></g></svg></svg>