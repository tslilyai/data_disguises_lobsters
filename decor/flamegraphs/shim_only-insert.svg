<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="950" onload="init(evt)" viewBox="0 0 1200 950" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="950" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="933.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="933.00"> </text><svg id="frames" x="10" width="1180"><g><title>[[heap]] (3 samples, 0.48%)</title><rect x="0.0000%" y="869" width="0.4769%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="879.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (3 samples, 0.48%)</title><rect x="0.0000%" y="853" width="0.4769%" height="15" fill="rgb(217,0,24)"/><text x="0.2500%" y="863.50"></text></g><g><title>std::sys_common::net::TcpStream::read (3 samples, 0.48%)</title><rect x="0.0000%" y="837" width="0.4769%" height="15" fill="rgb(221,193,54)"/><text x="0.2500%" y="847.50"></text></g><g><title>std::sys::unix::net::Socket::read (3 samples, 0.48%)</title><rect x="0.0000%" y="821" width="0.4769%" height="15" fill="rgb(248,212,6)"/><text x="0.2500%" y="831.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (3 samples, 0.48%)</title><rect x="0.0000%" y="805" width="0.4769%" height="15" fill="rgb(208,68,35)"/><text x="0.2500%" y="815.50"></text></g><g><title>__libc_recv (3 samples, 0.48%)</title><rect x="0.0000%" y="789" width="0.4769%" height="15" fill="rgb(232,128,0)"/><text x="0.2500%" y="799.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.48%)</title><rect x="0.0000%" y="773" width="0.4769%" height="15" fill="rgb(207,160,47)"/><text x="0.2500%" y="783.50"></text></g><g><title>__libc_send (4 samples, 0.64%)</title><rect x="0.4769%" y="853" width="0.6359%" height="15" fill="rgb(228,23,34)"/><text x="0.7269%" y="863.50"></text></g><g><title>entry_SYSCALL_64 (4 samples, 0.64%)</title><rect x="0.4769%" y="837" width="0.6359%" height="15" fill="rgb(218,30,26)"/><text x="0.7269%" y="847.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.16%)</title><rect x="1.1129%" y="853" width="0.1590%" height="15" fill="rgb(220,122,19)"/><text x="1.3629%" y="863.50"></text></g><g><title>do_lookup_x (1 samples, 0.16%)</title><rect x="1.2719%" y="853" width="0.1590%" height="15" fill="rgb(250,228,42)"/><text x="1.5219%" y="863.50"></text></g><g><title>[[stack]] (7 samples, 1.11%)</title><rect x="0.4769%" y="869" width="1.1129%" height="15" fill="rgb(240,193,28)"/><text x="0.7269%" y="879.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.16%)</title><rect x="1.4308%" y="853" width="0.1590%" height="15" fill="rgb(216,20,37)"/><text x="1.6808%" y="863.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (2 samples, 0.32%)</title><rect x="1.5898%" y="853" width="0.3180%" height="15" fill="rgb(206,188,39)"/><text x="1.8398%" y="863.50"></text></g><g><title>std::sys_common::net::TcpStream::read (2 samples, 0.32%)</title><rect x="1.5898%" y="837" width="0.3180%" height="15" fill="rgb(217,207,13)"/><text x="1.8398%" y="847.50"></text></g><g><title>std::sys::unix::net::Socket::read (2 samples, 0.32%)</title><rect x="1.5898%" y="821" width="0.3180%" height="15" fill="rgb(231,73,38)"/><text x="1.8398%" y="831.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (2 samples, 0.32%)</title><rect x="1.5898%" y="805" width="0.3180%" height="15" fill="rgb(225,20,46)"/><text x="1.8398%" y="815.50"></text></g><g><title>__libc_recv (2 samples, 0.32%)</title><rect x="1.5898%" y="789" width="0.3180%" height="15" fill="rgb(210,31,41)"/><text x="1.8398%" y="799.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.32%)</title><rect x="1.5898%" y="773" width="0.3180%" height="15" fill="rgb(221,200,47)"/><text x="1.8398%" y="783.50"></text></g><g><title>__libc_send (1 samples, 0.16%)</title><rect x="1.9078%" y="853" width="0.1590%" height="15" fill="rgb(226,26,5)"/><text x="2.1578%" y="863.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.16%)</title><rect x="1.9078%" y="837" width="0.1590%" height="15" fill="rgb(249,33,26)"/><text x="2.1578%" y="847.50"></text></g><g><title>msql_srv::resultset::QueryResultWriter&lt;W&gt;::start (1 samples, 0.16%)</title><rect x="2.0668%" y="853" width="0.1590%" height="15" fill="rgb(235,183,28)"/><text x="2.3168%" y="863.50"></text></g><g><title>[anon] (5 samples, 0.79%)</title><rect x="1.5898%" y="869" width="0.7949%" height="15" fill="rgb(221,5,38)"/><text x="1.8398%" y="879.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.16%)</title><rect x="2.2258%" y="853" width="0.1590%" height="15" fill="rgb(247,18,42)"/><text x="2.4758%" y="863.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.16%)</title><rect x="2.3847%" y="853" width="0.1590%" height="15" fill="rgb(241,131,45)"/><text x="2.6347%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.16%)</title><rect x="2.5437%" y="853" width="0.1590%" height="15" fill="rgb(249,31,29)"/><text x="2.7937%" y="863.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.16%)</title><rect x="2.7027%" y="853" width="0.1590%" height="15" fill="rgb(225,111,53)"/><text x="2.9527%" y="863.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.16%)</title><rect x="3.1797%" y="485" width="0.1590%" height="15" fill="rgb(238,160,17)"/><text x="3.4297%" y="495.50"></text></g><g><title>preempt_count_sub (1 samples, 0.16%)</title><rect x="3.1797%" y="469" width="0.1590%" height="15" fill="rgb(214,148,48)"/><text x="3.4297%" y="479.50"></text></g><g><title>lock_sock_nested (1 samples, 0.16%)</title><rect x="3.3386%" y="485" width="0.1590%" height="15" fill="rgb(232,36,49)"/><text x="3.5886%" y="495.50"></text></g><g><title>release_sock (2 samples, 0.32%)</title><rect x="3.4976%" y="485" width="0.3180%" height="15" fill="rgb(209,103,24)"/><text x="3.7476%" y="495.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.16%)</title><rect x="3.6566%" y="469" width="0.1590%" height="15" fill="rgb(229,88,8)"/><text x="3.9066%" y="479.50"></text></g><g><title>__ip_local_out (1 samples, 0.16%)</title><rect x="5.4054%" y="405" width="0.1590%" height="15" fill="rgb(213,181,19)"/><text x="5.6554%" y="415.50"></text></g><g><title>__sk_dst_check (1 samples, 0.16%)</title><rect x="5.5644%" y="405" width="0.1590%" height="15" fill="rgb(254,191,54)"/><text x="5.8144%" y="415.50"></text></g><g><title>ipv4_dst_check (1 samples, 0.16%)</title><rect x="5.5644%" y="389" width="0.1590%" height="15" fill="rgb(241,83,37)"/><text x="5.8144%" y="399.50"></text></g><g><title>__ip_finish_output (1 samples, 0.16%)</title><rect x="5.8824%" y="389" width="0.1590%" height="15" fill="rgb(233,36,39)"/><text x="6.1324%" y="399.50"></text></g><g><title>ipv4_mtu (1 samples, 0.16%)</title><rect x="5.8824%" y="373" width="0.1590%" height="15" fill="rgb(226,3,54)"/><text x="6.1324%" y="383.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.16%)</title><rect x="6.3593%" y="357" width="0.1590%" height="15" fill="rgb(245,192,40)"/><text x="6.6093%" y="367.50"></text></g><g><title>__dev_queue_xmit (3 samples, 0.48%)</title><rect x="6.3593%" y="373" width="0.4769%" height="15" fill="rgb(238,167,29)"/><text x="6.6093%" y="383.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.32%)</title><rect x="6.5183%" y="357" width="0.3180%" height="15" fill="rgb(232,182,51)"/><text x="6.7683%" y="367.50"></text></g><g><title>loopback_xmit (2 samples, 0.32%)</title><rect x="6.5183%" y="341" width="0.3180%" height="15" fill="rgb(231,60,39)"/><text x="6.7683%" y="351.50"></text></g><g><title>netif_rx (2 samples, 0.32%)</title><rect x="6.5183%" y="325" width="0.3180%" height="15" fill="rgb(208,69,12)"/><text x="6.7683%" y="335.50"></text></g><g><title>netif_rx_internal (2 samples, 0.32%)</title><rect x="6.5183%" y="309" width="0.3180%" height="15" fill="rgb(235,93,37)"/><text x="6.7683%" y="319.50"></text></g><g><title>ktime_get_with_offset (1 samples, 0.16%)</title><rect x="6.6773%" y="293" width="0.1590%" height="15" fill="rgb(213,116,39)"/><text x="6.9273%" y="303.50"></text></g><g><title>irqtime_account_irq (1 samples, 0.16%)</title><rect x="6.8362%" y="309" width="0.1590%" height="15" fill="rgb(222,207,29)"/><text x="7.0862%" y="319.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.16%)</title><rect x="6.8362%" y="293" width="0.1590%" height="15" fill="rgb(206,96,30)"/><text x="7.0862%" y="303.50"></text></g><g><title>__kfree_skb_flush (1 samples, 0.16%)</title><rect x="7.1542%" y="293" width="0.1590%" height="15" fill="rgb(218,138,4)"/><text x="7.4042%" y="303.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.16%)</title><rect x="7.1542%" y="277" width="0.1590%" height="15" fill="rgb(250,191,14)"/><text x="7.4042%" y="287.50"></text></g><g><title>__usecs_to_jiffies (1 samples, 0.16%)</title><rect x="7.3132%" y="293" width="0.1590%" height="15" fill="rgb(239,60,40)"/><text x="7.5632%" y="303.50"></text></g><g><title>sk_reset_timer (1 samples, 0.16%)</title><rect x="8.5851%" y="149" width="0.1590%" height="15" fill="rgb(206,27,48)"/><text x="8.8351%" y="159.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.16%)</title><rect x="9.0620%" y="85" width="0.1590%" height="15" fill="rgb(225,35,8)"/><text x="9.3120%" y="95.50"></text></g><g><title>_raw_spin_lock_irqsave (2 samples, 0.32%)</title><rect x="9.2210%" y="85" width="0.3180%" height="15" fill="rgb(250,213,24)"/><text x="9.4710%" y="95.50"></text></g><g><title>psi_task_change (5 samples, 0.79%)</title><rect x="9.5390%" y="69" width="0.7949%" height="15" fill="rgb(247,123,22)"/><text x="9.7890%" y="79.50"></text></g><g><title>psi_group_change (5 samples, 0.79%)</title><rect x="9.5390%" y="53" width="0.7949%" height="15" fill="rgb(231,138,38)"/><text x="9.7890%" y="63.50"></text></g><g><title>enqueue_task (7 samples, 1.11%)</title><rect x="9.5390%" y="85" width="1.1129%" height="15" fill="rgb(231,145,46)"/><text x="9.7890%" y="95.50"></text></g><g><title>uclamp_rq_inc_id (2 samples, 0.32%)</title><rect x="10.3339%" y="69" width="0.3180%" height="15" fill="rgb(251,118,11)"/><text x="10.5839%" y="79.50"></text></g><g><title>update_cfs_group (1 samples, 0.16%)</title><rect x="11.2878%" y="53" width="0.1590%" height="15" fill="rgb(217,147,25)"/><text x="11.5378%" y="63.50"></text></g><g><title>__update_load_avg_cfs_rq (4 samples, 0.64%)</title><rect x="11.7647%" y="37" width="0.6359%" height="15" fill="rgb(247,81,37)"/><text x="12.0147%" y="47.50"></text></g><g><title>enqueue_task_fair (12 samples, 1.91%)</title><rect x="10.6518%" y="85" width="1.9078%" height="15" fill="rgb(209,12,38)"/><text x="10.9018%" y="95.50">e..</text></g><g><title>enqueue_entity (12 samples, 1.91%)</title><rect x="10.6518%" y="69" width="1.9078%" height="15" fill="rgb(227,1,9)"/><text x="10.9018%" y="79.50">e..</text></g><g><title>update_load_avg (7 samples, 1.11%)</title><rect x="11.4467%" y="53" width="1.1129%" height="15" fill="rgb(248,47,43)"/><text x="11.6967%" y="63.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.16%)</title><rect x="12.4006%" y="37" width="0.1590%" height="15" fill="rgb(221,10,30)"/><text x="12.6506%" y="47.50"></text></g><g><title>sock_def_readable (25 samples, 3.97%)</title><rect x="8.7440%" y="149" width="3.9746%" height="15" fill="rgb(210,229,1)"/><text x="8.9940%" y="159.50">sock..</text></g><g><title>__wake_up_common_lock (24 samples, 3.82%)</title><rect x="8.9030%" y="133" width="3.8156%" height="15" fill="rgb(222,148,37)"/><text x="9.1530%" y="143.50">__wa..</text></g><g><title>__wake_up_common (24 samples, 3.82%)</title><rect x="8.9030%" y="117" width="3.8156%" height="15" fill="rgb(234,67,33)"/><text x="9.1530%" y="127.50">__wa..</text></g><g><title>try_to_wake_up (24 samples, 3.82%)</title><rect x="8.9030%" y="101" width="3.8156%" height="15" fill="rgb(247,98,35)"/><text x="9.1530%" y="111.50">try_..</text></g><g><title>update_rq_clock (1 samples, 0.16%)</title><rect x="12.5596%" y="85" width="0.1590%" height="15" fill="rgb(247,138,52)"/><text x="12.8096%" y="95.50"></text></g><g><title>kfree (1 samples, 0.16%)</title><rect x="13.0366%" y="117" width="0.1590%" height="15" fill="rgb(213,79,30)"/><text x="13.2866%" y="127.50"></text></g><g><title>__slab_free (1 samples, 0.16%)</title><rect x="13.0366%" y="101" width="0.1590%" height="15" fill="rgb(246,177,23)"/><text x="13.2866%" y="111.50"></text></g><g><title>__kfree_skb (3 samples, 0.48%)</title><rect x="13.0366%" y="133" width="0.4769%" height="15" fill="rgb(230,62,27)"/><text x="13.2866%" y="143.50"></text></g><g><title>skb_release_data (2 samples, 0.32%)</title><rect x="13.1955%" y="117" width="0.3180%" height="15" fill="rgb(216,154,8)"/><text x="13.4455%" y="127.50"></text></g><g><title>kmem_cache_free (1 samples, 0.16%)</title><rect x="13.5135%" y="133" width="0.1590%" height="15" fill="rgb(244,35,45)"/><text x="13.7635%" y="143.50"></text></g><g><title>tcp_chrono_stop (1 samples, 0.16%)</title><rect x="13.6725%" y="133" width="0.1590%" height="15" fill="rgb(251,115,12)"/><text x="13.9225%" y="143.50"></text></g><g><title>tcp_ack (8 samples, 1.27%)</title><rect x="12.7186%" y="149" width="1.2719%" height="15" fill="rgb(240,54,50)"/><text x="12.9686%" y="159.50"></text></g><g><title>tcp_rearm_rto (1 samples, 0.16%)</title><rect x="13.8315%" y="133" width="0.1590%" height="15" fill="rgb(233,84,52)"/><text x="14.0815%" y="143.50"></text></g><g><title>do_softirq (48 samples, 7.63%)</title><rect x="6.8362%" y="357" width="7.6312%" height="15" fill="rgb(207,117,47)"/><text x="7.0862%" y="367.50">do_softirq</text></g><g><title>do_softirq_own_stack (48 samples, 7.63%)</title><rect x="6.8362%" y="341" width="7.6312%" height="15" fill="rgb(249,43,39)"/><text x="7.0862%" y="351.50">do_softirq..</text></g><g><title>__do_softirq (48 samples, 7.63%)</title><rect x="6.8362%" y="325" width="7.6312%" height="15" fill="rgb(209,38,44)"/><text x="7.0862%" y="335.50">__do_softi..</text></g><g><title>net_rx_action (47 samples, 7.47%)</title><rect x="6.9952%" y="309" width="7.4722%" height="15" fill="rgb(236,212,23)"/><text x="7.2452%" y="319.50">net_rx_act..</text></g><g><title>process_backlog (44 samples, 7.00%)</title><rect x="7.4722%" y="293" width="6.9952%" height="15" fill="rgb(242,79,21)"/><text x="7.7222%" y="303.50">process_b..</text></g><g><title>__netif_receive_skb_one_core (44 samples, 7.00%)</title><rect x="7.4722%" y="277" width="6.9952%" height="15" fill="rgb(211,96,35)"/><text x="7.7222%" y="287.50">__netif_r..</text></g><g><title>ip_rcv (44 samples, 7.00%)</title><rect x="7.4722%" y="261" width="6.9952%" height="15" fill="rgb(253,215,40)"/><text x="7.7222%" y="271.50">ip_rcv</text></g><g><title>ip_local_deliver (43 samples, 6.84%)</title><rect x="7.6312%" y="245" width="6.8362%" height="15" fill="rgb(211,81,21)"/><text x="7.8812%" y="255.50">ip_local_..</text></g><g><title>ip_local_deliver_finish (43 samples, 6.84%)</title><rect x="7.6312%" y="229" width="6.8362%" height="15" fill="rgb(208,190,38)"/><text x="7.8812%" y="239.50">ip_local_..</text></g><g><title>ip_protocol_deliver_rcu (41 samples, 6.52%)</title><rect x="7.9491%" y="213" width="6.5183%" height="15" fill="rgb(235,213,38)"/><text x="8.1991%" y="223.50">ip_protoc..</text></g><g><title>tcp_v4_rcv (41 samples, 6.52%)</title><rect x="7.9491%" y="197" width="6.5183%" height="15" fill="rgb(237,122,38)"/><text x="8.1991%" y="207.50">tcp_v4_rcv</text></g><g><title>tcp_v4_do_rcv (38 samples, 6.04%)</title><rect x="8.4261%" y="181" width="6.0413%" height="15" fill="rgb(244,218,35)"/><text x="8.6761%" y="191.50">tcp_v4_d..</text></g><g><title>tcp_rcv_established (38 samples, 6.04%)</title><rect x="8.4261%" y="165" width="6.0413%" height="15" fill="rgb(240,68,47)"/><text x="8.6761%" y="175.50">tcp_rcv_..</text></g><g><title>tcp_queue_rcv (3 samples, 0.48%)</title><rect x="13.9905%" y="149" width="0.4769%" height="15" fill="rgb(210,16,53)"/><text x="14.2405%" y="159.50"></text></g><g><title>__ip_queue_xmit (59 samples, 9.38%)</title><rect x="5.2464%" y="421" width="9.3800%" height="15" fill="rgb(235,124,12)"/><text x="5.4964%" y="431.50">__ip_queue_xm..</text></g><g><title>ip_output (56 samples, 8.90%)</title><rect x="5.7234%" y="405" width="8.9030%" height="15" fill="rgb(224,169,11)"/><text x="5.9734%" y="415.50">ip_output</text></g><g><title>ip_finish_output2 (54 samples, 8.59%)</title><rect x="6.0413%" y="389" width="8.5851%" height="15" fill="rgb(250,166,2)"/><text x="6.2913%" y="399.50">ip_finish_ou..</text></g><g><title>__local_bh_enable_ip (49 samples, 7.79%)</title><rect x="6.8362%" y="373" width="7.7901%" height="15" fill="rgb(242,216,29)"/><text x="7.0862%" y="383.50">__local_bh_..</text></g><g><title>preempt_count_sub (1 samples, 0.16%)</title><rect x="14.4674%" y="357" width="0.1590%" height="15" fill="rgb(230,116,27)"/><text x="14.7174%" y="367.50"></text></g><g><title>tcp_established_options (1 samples, 0.16%)</title><rect x="14.6264%" y="421" width="0.1590%" height="15" fill="rgb(228,99,48)"/><text x="14.8764%" y="431.50"></text></g><g><title>__tcp_transmit_skb (64 samples, 10.17%)</title><rect x="4.7695%" y="437" width="10.1749%" height="15" fill="rgb(253,11,6)"/><text x="5.0195%" y="447.50">__tcp_transmit_..</text></g><g><title>tcp_options_write (1 samples, 0.16%)</title><rect x="14.7854%" y="421" width="0.1590%" height="15" fill="rgb(247,143,39)"/><text x="15.0354%" y="431.50"></text></g><g><title>__tcp_push_pending_frames (67 samples, 10.65%)</title><rect x="4.4515%" y="469" width="10.6518%" height="15" fill="rgb(236,97,10)"/><text x="4.7015%" y="479.50">__tcp_push_pendi..</text></g><g><title>tcp_write_xmit (67 samples, 10.65%)</title><rect x="4.4515%" y="453" width="10.6518%" height="15" fill="rgb(233,208,19)"/><text x="4.7015%" y="463.50">tcp_write_xmit</text></g><g><title>tcp_event_new_data_sent (1 samples, 0.16%)</title><rect x="14.9444%" y="437" width="0.1590%" height="15" fill="rgb(216,164,2)"/><text x="15.1944%" y="447.50"></text></g><g><title>sk_page_frag_refill (1 samples, 0.16%)</title><rect x="15.1033%" y="469" width="0.1590%" height="15" fill="rgb(220,129,5)"/><text x="15.3533%" y="479.50"></text></g><g><title>skb_page_frag_refill (1 samples, 0.16%)</title><rect x="15.1033%" y="453" width="0.1590%" height="15" fill="rgb(242,17,10)"/><text x="15.3533%" y="463.50"></text></g><g><title>__kmalloc_node_track_caller (1 samples, 0.16%)</title><rect x="15.2623%" y="437" width="0.1590%" height="15" fill="rgb(242,107,0)"/><text x="15.5123%" y="447.50"></text></g><g><title>memset_erms (1 samples, 0.16%)</title><rect x="15.2623%" y="421" width="0.1590%" height="15" fill="rgb(251,28,31)"/><text x="15.5123%" y="431.50"></text></g><g><title>sk_stream_alloc_skb (2 samples, 0.32%)</title><rect x="15.2623%" y="469" width="0.3180%" height="15" fill="rgb(233,223,10)"/><text x="15.5123%" y="479.50"></text></g><g><title>__alloc_skb (2 samples, 0.32%)</title><rect x="15.2623%" y="453" width="0.3180%" height="15" fill="rgb(215,21,27)"/><text x="15.5123%" y="463.50"></text></g><g><title>kmem_cache_alloc_node (1 samples, 0.16%)</title><rect x="15.4213%" y="437" width="0.1590%" height="15" fill="rgb(232,23,21)"/><text x="15.6713%" y="447.50"></text></g><g><title>skb_do_copy_data_nocache (1 samples, 0.16%)</title><rect x="15.5803%" y="469" width="0.1590%" height="15" fill="rgb(244,5,23)"/><text x="15.8303%" y="479.50"></text></g><g><title>_copy_from_iter_full (1 samples, 0.16%)</title><rect x="15.5803%" y="453" width="0.1590%" height="15" fill="rgb(226,81,46)"/><text x="15.8303%" y="463.50"></text></g><g><title>copy_user_enhanced_fast_string (1 samples, 0.16%)</title><rect x="15.5803%" y="437" width="0.1590%" height="15" fill="rgb(247,70,30)"/><text x="15.8303%" y="447.50"></text></g><g><title>sock_sendmsg (81 samples, 12.88%)</title><rect x="3.0207%" y="517" width="12.8776%" height="15" fill="rgb(212,68,19)"/><text x="3.2707%" y="527.50">sock_sendmsg</text></g><g><title>tcp_sendmsg (81 samples, 12.88%)</title><rect x="3.0207%" y="501" width="12.8776%" height="15" fill="rgb(240,187,13)"/><text x="3.2707%" y="511.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (76 samples, 12.08%)</title><rect x="3.8156%" y="485" width="12.0827%" height="15" fill="rgb(223,113,26)"/><text x="4.0656%" y="495.50">tcp_sendmsg_locked</text></g><g><title>skb_entail (1 samples, 0.16%)</title><rect x="15.7393%" y="469" width="0.1590%" height="15" fill="rgb(206,192,2)"/><text x="15.9893%" y="479.50"></text></g><g><title>__x64_sys_sendto (85 samples, 13.51%)</title><rect x="2.8617%" y="549" width="13.5135%" height="15" fill="rgb(241,108,4)"/><text x="3.1117%" y="559.50">__x64_sys_sendto</text></g><g><title>__sys_sendto (85 samples, 13.51%)</title><rect x="2.8617%" y="533" width="13.5135%" height="15" fill="rgb(247,173,49)"/><text x="3.1117%" y="543.50">__sys_sendto</text></g><g><title>sockfd_lookup_light (3 samples, 0.48%)</title><rect x="15.8983%" y="517" width="0.4769%" height="15" fill="rgb(224,114,35)"/><text x="16.1483%" y="527.50"></text></g><g><title>__fget_light (3 samples, 0.48%)</title><rect x="15.8983%" y="501" width="0.4769%" height="15" fill="rgb(245,159,27)"/><text x="16.1483%" y="511.50"></text></g><g><title>__fget_files (2 samples, 0.32%)</title><rect x="16.0572%" y="485" width="0.3180%" height="15" fill="rgb(245,172,44)"/><text x="16.3072%" y="495.50"></text></g><g><title>do_syscall_64 (86 samples, 13.67%)</title><rect x="2.8617%" y="565" width="13.6725%" height="15" fill="rgb(236,23,11)"/><text x="3.1117%" y="575.50">do_syscall_64</text></g><g><title>syscall_slow_exit_work (1 samples, 0.16%)</title><rect x="16.3752%" y="549" width="0.1590%" height="15" fill="rgb(205,117,38)"/><text x="16.6252%" y="559.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.16%)</title><rect x="16.3752%" y="533" width="0.1590%" height="15" fill="rgb(237,72,25)"/><text x="16.6252%" y="543.50"></text></g><g><title>kfree (1 samples, 0.16%)</title><rect x="16.3752%" y="517" width="0.1590%" height="15" fill="rgb(244,70,9)"/><text x="16.6252%" y="527.50"></text></g><g><title>entry_SYSCALL_64 (89 samples, 14.15%)</title><rect x="2.8617%" y="581" width="14.1494%" height="15" fill="rgb(217,125,39)"/><text x="3.1117%" y="591.50">entry_SYSCALL_64</text></g><g><title>prepare_exit_to_usermode (3 samples, 0.48%)</title><rect x="16.5342%" y="565" width="0.4769%" height="15" fill="rgb(235,36,10)"/><text x="16.7842%" y="575.50"></text></g><g><title>__libc_send (91 samples, 14.47%)</title><rect x="2.8617%" y="597" width="14.4674%" height="15" fill="rgb(251,123,47)"/><text x="3.1117%" y="607.50">__libc_send</text></g><g><title>syscall_return_via_sysret (2 samples, 0.32%)</title><rect x="17.0111%" y="581" width="0.3180%" height="15" fill="rgb(221,13,13)"/><text x="17.2611%" y="591.50"></text></g><g><title>__libc_start_main (92 samples, 14.63%)</title><rect x="2.8617%" y="853" width="14.6264%" height="15" fill="rgb(238,131,9)"/><text x="3.1117%" y="863.50">__libc_start_main</text></g><g><title>main (92 samples, 14.63%)</title><rect x="2.8617%" y="837" width="14.6264%" height="15" fill="rgb(211,50,8)"/><text x="3.1117%" y="847.50">main</text></g><g><title>std::rt::lang_start_internal (92 samples, 14.63%)</title><rect x="2.8617%" y="821" width="14.6264%" height="15" fill="rgb(245,182,24)"/><text x="3.1117%" y="831.50">std::rt::lang_start_in..</text></g><g><title>std::panic::catch_unwind (92 samples, 14.63%)</title><rect x="2.8617%" y="805" width="14.6264%" height="15" fill="rgb(242,14,37)"/><text x="3.1117%" y="815.50">std::panic::catch_unwi..</text></g><g><title>std::panicking::try (92 samples, 14.63%)</title><rect x="2.8617%" y="789" width="14.6264%" height="15" fill="rgb(246,228,12)"/><text x="3.1117%" y="799.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (92 samples, 14.63%)</title><rect x="2.8617%" y="773" width="14.6264%" height="15" fill="rgb(213,55,15)"/><text x="3.1117%" y="783.50">std::panicking::try::d..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (92 samples, 14.63%)</title><rect x="2.8617%" y="757" width="14.6264%" height="15" fill="rgb(209,9,3)"/><text x="3.1117%" y="767.50">core::ops::function::i..</text></g><g><title>std::rt::lang_start::_{{closure}} (92 samples, 14.63%)</title><rect x="2.8617%" y="741" width="14.6264%" height="15" fill="rgb(230,59,30)"/><text x="3.1117%" y="751.50">std::rt::lang_start::_..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (92 samples, 14.63%)</title><rect x="2.8617%" y="725" width="14.6264%" height="15" fill="rgb(209,121,21)"/><text x="3.1117%" y="735.50">std::sys_common::backt..</text></g><g><title>lobsters::main (92 samples, 14.63%)</title><rect x="2.8617%" y="709" width="14.6264%" height="15" fill="rgb(220,109,13)"/><text x="3.1117%" y="719.50">lobsters::main</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (92 samples, 14.63%)</title><rect x="2.8617%" y="693" width="14.6264%" height="15" fill="rgb(232,18,1)"/><text x="3.1117%" y="703.50">mysql::conn::queryable..</text></g><g><title>mysql::conn::Conn::_query (92 samples, 14.63%)</title><rect x="2.8617%" y="677" width="14.6264%" height="15" fill="rgb(215,41,42)"/><text x="3.1117%" y="687.50">mysql::conn::Conn::_qu..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (92 samples, 14.63%)</title><rect x="2.8617%" y="661" width="14.6264%" height="15" fill="rgb(224,123,36)"/><text x="3.1117%" y="671.50">mysql_common::proto::s..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (92 samples, 14.63%)</title><rect x="2.8617%" y="645" width="14.6264%" height="15" fill="rgb(240,125,3)"/><text x="3.1117%" y="655.50">std::io::buffered::Buf..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (92 samples, 14.63%)</title><rect x="2.8617%" y="629" width="14.6264%" height="15" fill="rgb(205,98,50)"/><text x="3.1117%" y="639.50">&lt;std::net::tcp::TcpStr..</text></g><g><title>std::sys_common::net::TcpStream::write (92 samples, 14.63%)</title><rect x="2.8617%" y="613" width="14.6264%" height="15" fill="rgb(205,185,37)"/><text x="3.1117%" y="623.50">std::sys_common::net::..</text></g><g><title>std::sys::unix::cvt (1 samples, 0.16%)</title><rect x="17.3291%" y="597" width="0.1590%" height="15" fill="rgb(238,207,15)"/><text x="17.5791%" y="607.50"></text></g><g><title>&lt;isize as std::sys::unix::IsMinusOne&gt;::is_minus_one (1 samples, 0.16%)</title><rect x="17.3291%" y="581" width="0.1590%" height="15" fill="rgb(213,199,42)"/><text x="17.5791%" y="591.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.16%)</title><rect x="17.4881%" y="789" width="0.1590%" height="15" fill="rgb(235,201,11)"/><text x="17.7381%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.16%)</title><rect x="17.4881%" y="773" width="0.1590%" height="15" fill="rgb(207,46,11)"/><text x="17.7381%" y="783.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.16%)</title><rect x="17.4881%" y="757" width="0.1590%" height="15" fill="rgb(241,35,35)"/><text x="17.7381%" y="767.50"></text></g><g><title>core::fmt::write (2 samples, 0.32%)</title><rect x="17.4881%" y="821" width="0.3180%" height="15" fill="rgb(243,32,47)"/><text x="17.7381%" y="831.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::ObjectName as core::fmt::Display&gt;::fmt (2 samples, 0.32%)</title><rect x="17.4881%" y="805" width="0.3180%" height="15" fill="rgb(247,202,23)"/><text x="17.7381%" y="815.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.16%)</title><rect x="17.6471%" y="789" width="0.1590%" height="15" fill="rgb(219,102,11)"/><text x="17.8971%" y="799.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (1 samples, 0.16%)</title><rect x="17.6471%" y="773" width="0.1590%" height="15" fill="rgb(243,110,44)"/><text x="17.8971%" y="783.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.16%)</title><rect x="17.6471%" y="757" width="0.1590%" height="15" fill="rgb(222,74,54)"/><text x="17.8971%" y="767.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (1 samples, 0.16%)</title><rect x="17.6471%" y="741" width="0.1590%" height="15" fill="rgb(216,99,12)"/><text x="17.8971%" y="751.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (1 samples, 0.16%)</title><rect x="17.6471%" y="725" width="0.1590%" height="15" fill="rgb(226,22,26)"/><text x="17.8971%" y="735.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.16%)</title><rect x="17.6471%" y="709" width="0.1590%" height="15" fill="rgb(217,163,10)"/><text x="17.8971%" y="719.50"></text></g><g><title>apic_timer_interrupt (1 samples, 0.16%)</title><rect x="17.6471%" y="693" width="0.1590%" height="15" fill="rgb(213,25,53)"/><text x="17.8971%" y="703.50"></text></g><g><title>smp_apic_timer_interrupt (1 samples, 0.16%)</title><rect x="17.6471%" y="677" width="0.1590%" height="15" fill="rgb(252,105,26)"/><text x="17.8971%" y="687.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.16%)</title><rect x="17.6471%" y="661" width="0.1590%" height="15" fill="rgb(220,39,43)"/><text x="17.8971%" y="671.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.16%)</title><rect x="17.6471%" y="645" width="0.1590%" height="15" fill="rgb(229,68,48)"/><text x="17.8971%" y="655.50"></text></g><g><title>tick_sched_timer (1 samples, 0.16%)</title><rect x="17.6471%" y="629" width="0.1590%" height="15" fill="rgb(252,8,32)"/><text x="17.8971%" y="639.50"></text></g><g><title>tick_sched_handle (1 samples, 0.16%)</title><rect x="17.6471%" y="613" width="0.1590%" height="15" fill="rgb(223,20,43)"/><text x="17.8971%" y="623.50"></text></g><g><title>update_process_times (1 samples, 0.16%)</title><rect x="17.6471%" y="597" width="0.1590%" height="15" fill="rgb(229,81,49)"/><text x="17.8971%" y="607.50"></text></g><g><title>scheduler_tick (1 samples, 0.16%)</title><rect x="17.6471%" y="581" width="0.1590%" height="15" fill="rgb(236,28,36)"/><text x="17.8971%" y="591.50"></text></g><g><title>task_tick_fair (1 samples, 0.16%)</title><rect x="17.6471%" y="565" width="0.1590%" height="15" fill="rgb(249,185,26)"/><text x="17.8971%" y="575.50"></text></g><g><title>update_curr (1 samples, 0.16%)</title><rect x="17.6471%" y="549" width="0.1590%" height="15" fill="rgb(249,174,33)"/><text x="17.8971%" y="559.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.16%)</title><rect x="17.8060%" y="773" width="0.1590%" height="15" fill="rgb(233,201,37)"/><text x="18.0560%" y="783.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.16%)</title><rect x="17.8060%" y="757" width="0.1590%" height="15" fill="rgb(221,78,26)"/><text x="18.0560%" y="767.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="17.8060%" y="741" width="0.1590%" height="15" fill="rgb(250,127,30)"/><text x="18.0560%" y="751.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.16%)</title><rect x="17.8060%" y="725" width="0.1590%" height="15" fill="rgb(230,49,44)"/><text x="18.0560%" y="735.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.16%)</title><rect x="17.8060%" y="709" width="0.1590%" height="15" fill="rgb(229,67,23)"/><text x="18.0560%" y="719.50"></text></g><g><title>std::sys_common::net::TcpStream::read (1 samples, 0.16%)</title><rect x="17.8060%" y="693" width="0.1590%" height="15" fill="rgb(249,83,47)"/><text x="18.0560%" y="703.50"></text></g><g><title>std::sys::unix::net::Socket::read (1 samples, 0.16%)</title><rect x="17.8060%" y="677" width="0.1590%" height="15" fill="rgb(215,43,3)"/><text x="18.0560%" y="687.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (1 samples, 0.16%)</title><rect x="17.8060%" y="661" width="0.1590%" height="15" fill="rgb(238,154,13)"/><text x="18.0560%" y="671.50"></text></g><g><title>__libc_recv (1 samples, 0.16%)</title><rect x="17.8060%" y="645" width="0.1590%" height="15" fill="rgb(219,56,2)"/><text x="18.0560%" y="655.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.16%)</title><rect x="17.8060%" y="629" width="0.1590%" height="15" fill="rgb(233,0,4)"/><text x="18.0560%" y="639.50"></text></g><g><title>do_syscall_64 (1 samples, 0.16%)</title><rect x="17.8060%" y="613" width="0.1590%" height="15" fill="rgb(235,30,7)"/><text x="18.0560%" y="623.50"></text></g><g><title>__x64_sys_recvfrom (1 samples, 0.16%)</title><rect x="17.8060%" y="597" width="0.1590%" height="15" fill="rgb(250,79,13)"/><text x="18.0560%" y="607.50"></text></g><g><title>__sys_recvfrom (1 samples, 0.16%)</title><rect x="17.8060%" y="581" width="0.1590%" height="15" fill="rgb(211,146,34)"/><text x="18.0560%" y="591.50"></text></g><g><title>inet_recvmsg (1 samples, 0.16%)</title><rect x="17.8060%" y="565" width="0.1590%" height="15" fill="rgb(228,22,38)"/><text x="18.0560%" y="575.50"></text></g><g><title>tcp_recvmsg (1 samples, 0.16%)</title><rect x="17.8060%" y="549" width="0.1590%" height="15" fill="rgb(235,168,5)"/><text x="18.0560%" y="559.50"></text></g><g><title>sk_wait_data (1 samples, 0.16%)</title><rect x="17.8060%" y="533" width="0.1590%" height="15" fill="rgb(221,155,16)"/><text x="18.0560%" y="543.50"></text></g><g><title>_raw_spin_unlock_irqrestore (1 samples, 0.16%)</title><rect x="17.8060%" y="517" width="0.1590%" height="15" fill="rgb(215,215,53)"/><text x="18.0560%" y="527.50"></text></g><g><title>decor::Shim::create_schema (4 samples, 0.64%)</title><rect x="17.4881%" y="853" width="0.6359%" height="15" fill="rgb(223,4,10)"/><text x="17.7381%" y="863.50"></text></g><g><title>decor::query_transformer::QueryTransformer::get_mv_stmt (4 samples, 0.64%)</title><rect x="17.4881%" y="837" width="0.6359%" height="15" fill="rgb(234,103,6)"/><text x="17.7381%" y="847.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (2 samples, 0.32%)</title><rect x="17.8060%" y="821" width="0.3180%" height="15" fill="rgb(227,97,0)"/><text x="18.0560%" y="831.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (2 samples, 0.32%)</title><rect x="17.8060%" y="805" width="0.3180%" height="15" fill="rgb(234,150,53)"/><text x="18.0560%" y="815.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.32%)</title><rect x="17.8060%" y="789" width="0.3180%" height="15" fill="rgb(228,201,54)"/><text x="18.0560%" y="799.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.16%)</title><rect x="17.9650%" y="773" width="0.1590%" height="15" fill="rgb(222,22,37)"/><text x="18.2150%" y="783.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.16%)</title><rect x="17.9650%" y="757" width="0.1590%" height="15" fill="rgb(237,53,32)"/><text x="18.2150%" y="767.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.16%)</title><rect x="17.9650%" y="741" width="0.1590%" height="15" fill="rgb(233,25,53)"/><text x="18.2150%" y="751.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1 samples, 0.16%)</title><rect x="17.9650%" y="725" width="0.1590%" height="15" fill="rgb(210,40,34)"/><text x="18.2150%" y="735.50"></text></g><g><title>__libc_send (1 samples, 0.16%)</title><rect x="17.9650%" y="709" width="0.1590%" height="15" fill="rgb(241,220,44)"/><text x="18.2150%" y="719.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.16%)</title><rect x="17.9650%" y="693" width="0.1590%" height="15" fill="rgb(235,28,35)"/><text x="18.2150%" y="703.50"></text></g><g><title>do_syscall_64 (1 samples, 0.16%)</title><rect x="17.9650%" y="677" width="0.1590%" height="15" fill="rgb(210,56,17)"/><text x="18.2150%" y="687.50"></text></g><g><title>__x64_sys_sendto (1 samples, 0.16%)</title><rect x="17.9650%" y="661" width="0.1590%" height="15" fill="rgb(224,130,29)"/><text x="18.2150%" y="671.50"></text></g><g><title>__sys_sendto (1 samples, 0.16%)</title><rect x="17.9650%" y="645" width="0.1590%" height="15" fill="rgb(235,212,8)"/><text x="18.2150%" y="655.50"></text></g><g><title>sock_sendmsg (1 samples, 0.16%)</title><rect x="17.9650%" y="629" width="0.1590%" height="15" fill="rgb(223,33,50)"/><text x="18.2150%" y="639.50"></text></g><g><title>tcp_sendmsg (1 samples, 0.16%)</title><rect x="17.9650%" y="613" width="0.1590%" height="15" fill="rgb(219,149,13)"/><text x="18.2150%" y="623.50"></text></g><g><title>tcp_sendmsg_locked (1 samples, 0.16%)</title><rect x="17.9650%" y="597" width="0.1590%" height="15" fill="rgb(250,156,29)"/><text x="18.2150%" y="607.50"></text></g><g><title>hwloc::Topology::new (1 samples, 0.16%)</title><rect x="18.1240%" y="837" width="0.1590%" height="15" fill="rgb(216,193,19)"/><text x="18.3740%" y="847.50"></text></g><g><title>hwloc_topology_load (1 samples, 0.16%)</title><rect x="18.1240%" y="821" width="0.1590%" height="15" fill="rgb(216,135,14)"/><text x="18.3740%" y="831.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.16%)</title><rect x="18.1240%" y="805" width="0.1590%" height="15" fill="rgb(241,47,5)"/><text x="18.3740%" y="815.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.16%)</title><rect x="18.1240%" y="789" width="0.1590%" height="15" fill="rgb(233,42,35)"/><text x="18.3740%" y="799.50"></text></g><g><title>__isoc99_fscanf (1 samples, 0.16%)</title><rect x="18.1240%" y="773" width="0.1590%" height="15" fill="rgb(231,13,6)"/><text x="18.3740%" y="783.50"></text></g><g><title>__vfscanf_internal (1 samples, 0.16%)</title><rect x="18.1240%" y="757" width="0.1590%" height="15" fill="rgb(207,181,40)"/><text x="18.3740%" y="767.50"></text></g><g><title>__GI__IO_default_uflow (1 samples, 0.16%)</title><rect x="18.1240%" y="741" width="0.1590%" height="15" fill="rgb(254,173,49)"/><text x="18.3740%" y="751.50"></text></g><g><title>__GI__IO_file_underflow (1 samples, 0.16%)</title><rect x="18.1240%" y="725" width="0.1590%" height="15" fill="rgb(221,1,38)"/><text x="18.3740%" y="735.50"></text></g><g><title>__GI___read (1 samples, 0.16%)</title><rect x="18.1240%" y="709" width="0.1590%" height="15" fill="rgb(206,124,46)"/><text x="18.3740%" y="719.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.16%)</title><rect x="18.1240%" y="693" width="0.1590%" height="15" fill="rgb(249,21,11)"/><text x="18.3740%" y="703.50"></text></g><g><title>do_syscall_64 (1 samples, 0.16%)</title><rect x="18.1240%" y="677" width="0.1590%" height="15" fill="rgb(222,201,40)"/><text x="18.3740%" y="687.50"></text></g><g><title>ksys_read (1 samples, 0.16%)</title><rect x="18.1240%" y="661" width="0.1590%" height="15" fill="rgb(235,61,29)"/><text x="18.3740%" y="671.50"></text></g><g><title>vfs_read (1 samples, 0.16%)</title><rect x="18.1240%" y="645" width="0.1590%" height="15" fill="rgb(219,207,3)"/><text x="18.3740%" y="655.50"></text></g><g><title>seq_read (1 samples, 0.16%)</title><rect x="18.1240%" y="629" width="0.1590%" height="15" fill="rgb(222,56,46)"/><text x="18.3740%" y="639.50"></text></g><g><title>show_cpuinfo (1 samples, 0.16%)</title><rect x="18.1240%" y="613" width="0.1590%" height="15" fill="rgb(239,76,54)"/><text x="18.3740%" y="623.50"></text></g><g><title>seq_printf (1 samples, 0.16%)</title><rect x="18.1240%" y="597" width="0.1590%" height="15" fill="rgb(231,124,27)"/><text x="18.3740%" y="607.50"></text></g><g><title>vsnprintf (1 samples, 0.16%)</title><rect x="18.1240%" y="581" width="0.1590%" height="15" fill="rgb(249,195,6)"/><text x="18.3740%" y="591.50"></text></g><g><title>string (1 samples, 0.16%)</title><rect x="18.1240%" y="565" width="0.1590%" height="15" fill="rgb(237,174,47)"/><text x="18.3740%" y="575.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.16%)</title><rect x="18.2830%" y="773" width="0.1590%" height="15" fill="rgb(206,201,31)"/><text x="18.5330%" y="783.50"></text></g><g><title>__rdl_alloc (1 samples, 0.16%)</title><rect x="18.2830%" y="757" width="0.1590%" height="15" fill="rgb(231,57,52)"/><text x="18.5330%" y="767.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.16%)</title><rect x="18.2830%" y="741" width="0.1590%" height="15" fill="rgb(248,177,22)"/><text x="18.5330%" y="751.50"></text></g><g><title>__pthread_disable_asynccancel (1 samples, 0.16%)</title><rect x="18.4420%" y="661" width="0.1590%" height="15" fill="rgb(215,211,37)"/><text x="18.6920%" y="671.50"></text></g><g><title>__kfree_skb (1 samples, 0.16%)</title><rect x="19.2369%" y="565" width="0.1590%" height="15" fill="rgb(241,128,51)"/><text x="19.4869%" y="575.50"></text></g><g><title>skb_release_head_state (1 samples, 0.16%)</title><rect x="19.2369%" y="549" width="0.1590%" height="15" fill="rgb(227,165,31)"/><text x="19.4869%" y="559.50"></text></g><g><title>sock_rfree (1 samples, 0.16%)</title><rect x="19.2369%" y="533" width="0.1590%" height="15" fill="rgb(228,167,24)"/><text x="19.4869%" y="543.50"></text></g><g><title>lock_sock_nested (1 samples, 0.16%)</title><rect x="19.3959%" y="565" width="0.1590%" height="15" fill="rgb(228,143,12)"/><text x="19.6459%" y="575.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.16%)</title><rect x="19.3959%" y="549" width="0.1590%" height="15" fill="rgb(249,149,8)"/><text x="19.6459%" y="559.50"></text></g><g><title>preempt_count_add (1 samples, 0.16%)</title><rect x="19.3959%" y="533" width="0.1590%" height="15" fill="rgb(243,35,44)"/><text x="19.6459%" y="543.50"></text></g><g><title>ns_to_timespec64 (1 samples, 0.16%)</title><rect x="19.5548%" y="565" width="0.1590%" height="15" fill="rgb(246,89,9)"/><text x="19.8048%" y="575.50"></text></g><g><title>release_sock (1 samples, 0.16%)</title><rect x="19.7138%" y="565" width="0.1590%" height="15" fill="rgb(233,213,13)"/><text x="19.9638%" y="575.50"></text></g><g><title>tcp_release_cb (1 samples, 0.16%)</title><rect x="19.7138%" y="549" width="0.1590%" height="15" fill="rgb(233,141,41)"/><text x="19.9638%" y="559.50"></text></g><g><title>remove_wait_queue (1 samples, 0.16%)</title><rect x="20.0318%" y="549" width="0.1590%" height="15" fill="rgb(239,167,4)"/><text x="20.2818%" y="559.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.16%)</title><rect x="20.0318%" y="533" width="0.1590%" height="15" fill="rgb(209,217,16)"/><text x="20.2818%" y="543.50"></text></g><g><title>__perf_event_task_sched_out (1 samples, 0.16%)</title><rect x="20.5087%" y="485" width="0.1590%" height="15" fill="rgb(219,88,35)"/><text x="20.7587%" y="495.50"></text></g><g><title>ctx_sched_out (1 samples, 0.16%)</title><rect x="20.5087%" y="469" width="0.1590%" height="15" fill="rgb(220,193,23)"/><text x="20.7587%" y="479.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.16%)</title><rect x="20.5087%" y="453" width="0.1590%" height="15" fill="rgb(230,90,52)"/><text x="20.7587%" y="463.50"></text></g><g><title>reweight_entity (1 samples, 0.16%)</title><rect x="20.6677%" y="453" width="0.1590%" height="15" fill="rgb(252,106,19)"/><text x="20.9177%" y="463.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.16%)</title><rect x="20.9857%" y="437" width="0.1590%" height="15" fill="rgb(206,74,20)"/><text x="21.2357%" y="447.50"></text></g><g><title>dequeue_task_fair (4 samples, 0.64%)</title><rect x="20.6677%" y="485" width="0.6359%" height="15" fill="rgb(230,138,44)"/><text x="20.9177%" y="495.50"></text></g><g><title>dequeue_entity (4 samples, 0.64%)</title><rect x="20.6677%" y="469" width="0.6359%" height="15" fill="rgb(235,182,43)"/><text x="20.9177%" y="479.50"></text></g><g><title>update_load_avg (3 samples, 0.48%)</title><rect x="20.8267%" y="453" width="0.4769%" height="15" fill="rgb(242,16,51)"/><text x="21.0767%" y="463.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.16%)</title><rect x="21.1447%" y="437" width="0.1590%" height="15" fill="rgb(248,9,4)"/><text x="21.3947%" y="447.50"></text></g><g><title>finish_task_switch (2 samples, 0.32%)</title><rect x="21.3037%" y="485" width="0.3180%" height="15" fill="rgb(210,31,22)"/><text x="21.5537%" y="495.50"></text></g><g><title>__perf_event_task_sched_in (1 samples, 0.16%)</title><rect x="21.4626%" y="469" width="0.1590%" height="15" fill="rgb(239,54,39)"/><text x="21.7126%" y="479.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (1 samples, 0.16%)</title><rect x="21.4626%" y="453" width="0.1590%" height="15" fill="rgb(230,99,41)"/><text x="21.7126%" y="463.50"></text></g><g><title>native_write_msr (1 samples, 0.16%)</title><rect x="21.4626%" y="437" width="0.1590%" height="15" fill="rgb(253,106,12)"/><text x="21.7126%" y="447.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.16%)</title><rect x="21.6216%" y="469" width="0.1590%" height="15" fill="rgb(213,46,41)"/><text x="21.8716%" y="479.50"></text></g><g><title>pick_next_task_idle (2 samples, 0.32%)</title><rect x="21.6216%" y="485" width="0.3180%" height="15" fill="rgb(215,133,35)"/><text x="21.8716%" y="495.50"></text></g><g><title>__update_idle_core (1 samples, 0.16%)</title><rect x="21.7806%" y="469" width="0.1590%" height="15" fill="rgb(213,28,5)"/><text x="22.0306%" y="479.50"></text></g><g><title>psi_task_change (1 samples, 0.16%)</title><rect x="21.9396%" y="485" width="0.1590%" height="15" fill="rgb(215,77,49)"/><text x="22.1896%" y="495.50"></text></g><g><title>psi_group_change (1 samples, 0.16%)</title><rect x="21.9396%" y="469" width="0.1590%" height="15" fill="rgb(248,100,22)"/><text x="22.1896%" y="479.50"></text></g><g><title>record_times (1 samples, 0.16%)</title><rect x="21.9396%" y="453" width="0.1590%" height="15" fill="rgb(208,67,9)"/><text x="22.1896%" y="463.50"></text></g><g><title>put_prev_task_fair (1 samples, 0.16%)</title><rect x="22.0986%" y="485" width="0.1590%" height="15" fill="rgb(219,133,21)"/><text x="22.3486%" y="495.50"></text></g><g><title>put_prev_entity (1 samples, 0.16%)</title><rect x="22.0986%" y="469" width="0.1590%" height="15" fill="rgb(246,46,29)"/><text x="22.3486%" y="479.50"></text></g><g><title>check_cfs_rq_runtime (1 samples, 0.16%)</title><rect x="22.0986%" y="453" width="0.1590%" height="15" fill="rgb(246,185,52)"/><text x="22.3486%" y="463.50"></text></g><g><title>sk_wait_data (16 samples, 2.54%)</title><rect x="19.8728%" y="565" width="2.5437%" height="15" fill="rgb(252,136,11)"/><text x="20.1228%" y="575.50">sk..</text></g><g><title>wait_woken (14 samples, 2.23%)</title><rect x="20.1908%" y="549" width="2.2258%" height="15" fill="rgb(219,138,53)"/><text x="20.4408%" y="559.50">w..</text></g><g><title>schedule_timeout (13 samples, 2.07%)</title><rect x="20.3498%" y="533" width="2.0668%" height="15" fill="rgb(211,51,23)"/><text x="20.5998%" y="543.50">s..</text></g><g><title>schedule (12 samples, 1.91%)</title><rect x="20.5087%" y="517" width="1.9078%" height="15" fill="rgb(247,221,28)"/><text x="20.7587%" y="527.50">s..</text></g><g><title>__schedule (12 samples, 1.91%)</title><rect x="20.5087%" y="501" width="1.9078%" height="15" fill="rgb(251,222,45)"/><text x="20.7587%" y="511.50">_..</text></g><g><title>uclamp_rq_dec_id (1 samples, 0.16%)</title><rect x="22.2576%" y="485" width="0.1590%" height="15" fill="rgb(217,162,53)"/><text x="22.5076%" y="495.50"></text></g><g><title>_copy_to_iter (1 samples, 0.16%)</title><rect x="22.5755%" y="533" width="0.1590%" height="15" fill="rgb(229,93,14)"/><text x="22.8255%" y="543.50"></text></g><g><title>inet_recvmsg (27 samples, 4.29%)</title><rect x="18.6010%" y="597" width="4.2925%" height="15" fill="rgb(209,67,49)"/><text x="18.8510%" y="607.50">inet_..</text></g><g><title>tcp_recvmsg (26 samples, 4.13%)</title><rect x="18.7599%" y="581" width="4.1335%" height="15" fill="rgb(213,87,29)"/><text x="19.0099%" y="591.50">tcp_r..</text></g><g><title>skb_copy_datagram_iter (3 samples, 0.48%)</title><rect x="22.4165%" y="565" width="0.4769%" height="15" fill="rgb(205,151,52)"/><text x="22.6665%" y="575.50"></text></g><g><title>__skb_datagram_iter (3 samples, 0.48%)</title><rect x="22.4165%" y="549" width="0.4769%" height="15" fill="rgb(253,215,39)"/><text x="22.6665%" y="559.50"></text></g><g><title>simple_copy_to_iter (1 samples, 0.16%)</title><rect x="22.7345%" y="533" width="0.1590%" height="15" fill="rgb(221,220,41)"/><text x="22.9845%" y="543.50"></text></g><g><title>__check_object_size (1 samples, 0.16%)</title><rect x="22.7345%" y="517" width="0.1590%" height="15" fill="rgb(218,133,21)"/><text x="22.9845%" y="527.50"></text></g><g><title>check_stack_object (1 samples, 0.16%)</title><rect x="22.7345%" y="501" width="0.1590%" height="15" fill="rgb(221,193,43)"/><text x="22.9845%" y="511.50"></text></g><g><title>__fdget (1 samples, 0.16%)</title><rect x="22.8935%" y="581" width="0.1590%" height="15" fill="rgb(240,128,52)"/><text x="23.1435%" y="591.50"></text></g><g><title>__x64_sys_recvfrom (29 samples, 4.61%)</title><rect x="18.6010%" y="629" width="4.6105%" height="15" fill="rgb(253,114,12)"/><text x="18.8510%" y="639.50">__x64..</text></g><g><title>__sys_recvfrom (29 samples, 4.61%)</title><rect x="18.6010%" y="613" width="4.6105%" height="15" fill="rgb(215,223,47)"/><text x="18.8510%" y="623.50">__sys..</text></g><g><title>sockfd_lookup_light (2 samples, 0.32%)</title><rect x="22.8935%" y="597" width="0.3180%" height="15" fill="rgb(248,225,23)"/><text x="23.1435%" y="607.50"></text></g><g><title>__fget_light (1 samples, 0.16%)</title><rect x="23.0525%" y="581" width="0.1590%" height="15" fill="rgb(250,108,0)"/><text x="23.3025%" y="591.50"></text></g><g><title>syscall_slow_exit_work (1 samples, 0.16%)</title><rect x="23.2114%" y="629" width="0.1590%" height="15" fill="rgb(228,208,7)"/><text x="23.4614%" y="639.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.16%)</title><rect x="23.2114%" y="613" width="0.1590%" height="15" fill="rgb(244,45,10)"/><text x="23.4614%" y="623.50"></text></g><g><title>do_syscall_64 (31 samples, 4.93%)</title><rect x="18.6010%" y="645" width="4.9285%" height="15" fill="rgb(207,125,25)"/><text x="18.8510%" y="655.50">do_sys..</text></g><g><title>syscall_trace_enter (1 samples, 0.16%)</title><rect x="23.3704%" y="629" width="0.1590%" height="15" fill="rgb(210,195,18)"/><text x="23.6204%" y="639.50"></text></g><g><title>entry_SYSCALL_64 (40 samples, 6.36%)</title><rect x="18.6010%" y="661" width="6.3593%" height="15" fill="rgb(249,80,12)"/><text x="18.8510%" y="671.50">entry_SY..</text></g><g><title>prepare_exit_to_usermode (9 samples, 1.43%)</title><rect x="23.5294%" y="645" width="1.4308%" height="15" fill="rgb(221,65,9)"/><text x="23.7794%" y="655.50"></text></g><g><title>switch_fpu_return (1 samples, 0.16%)</title><rect x="24.8013%" y="629" width="0.1590%" height="15" fill="rgb(235,49,36)"/><text x="25.0513%" y="639.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (42 samples, 6.68%)</title><rect x="18.4420%" y="757" width="6.6773%" height="15" fill="rgb(225,32,20)"/><text x="18.6920%" y="767.50">&lt;std::io:..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (42 samples, 6.68%)</title><rect x="18.4420%" y="741" width="6.6773%" height="15" fill="rgb(215,141,46)"/><text x="18.6920%" y="751.50">&lt;std::net..</text></g><g><title>std::sys_common::net::TcpStream::read (42 samples, 6.68%)</title><rect x="18.4420%" y="725" width="6.6773%" height="15" fill="rgb(250,160,47)"/><text x="18.6920%" y="735.50">std::sys_..</text></g><g><title>std::sys::unix::net::Socket::read (42 samples, 6.68%)</title><rect x="18.4420%" y="709" width="6.6773%" height="15" fill="rgb(216,222,40)"/><text x="18.6920%" y="719.50">std::sys:..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (42 samples, 6.68%)</title><rect x="18.4420%" y="693" width="6.6773%" height="15" fill="rgb(234,217,39)"/><text x="18.6920%" y="703.50">std::sys:..</text></g><g><title>__libc_recv (42 samples, 6.68%)</title><rect x="18.4420%" y="677" width="6.6773%" height="15" fill="rgb(207,178,40)"/><text x="18.6920%" y="687.50">__libc_re..</text></g><g><title>syscall_return_via_sysret (1 samples, 0.16%)</title><rect x="24.9603%" y="661" width="0.1590%" height="15" fill="rgb(221,136,13)"/><text x="25.2103%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.32%)</title><rect x="25.1192%" y="709" width="0.3180%" height="15" fill="rgb(249,199,10)"/><text x="25.3692%" y="719.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.32%)</title><rect x="25.1192%" y="693" width="0.3180%" height="15" fill="rgb(249,222,13)"/><text x="25.3692%" y="703.50"></text></g><g><title>lobsters::main (48 samples, 7.63%)</title><rect x="18.1240%" y="853" width="7.6312%" height="15" fill="rgb(244,185,38)"/><text x="18.3740%" y="863.50">lobsters::..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (47 samples, 7.47%)</title><rect x="18.2830%" y="837" width="7.4722%" height="15" fill="rgb(236,202,9)"/><text x="18.5330%" y="847.50">mysql::con..</text></g><g><title>mysql::conn::Conn::_query (47 samples, 7.47%)</title><rect x="18.2830%" y="821" width="7.4722%" height="15" fill="rgb(250,229,37)"/><text x="18.5330%" y="831.50">mysql::con..</text></g><g><title>mysql::conn::Conn::handle_result_set (47 samples, 7.47%)</title><rect x="18.2830%" y="805" width="7.4722%" height="15" fill="rgb(206,174,23)"/><text x="18.5330%" y="815.50">mysql::con..</text></g><g><title>mysql::conn::Conn::read_packet (47 samples, 7.47%)</title><rect x="18.2830%" y="789" width="7.4722%" height="15" fill="rgb(211,33,43)"/><text x="18.5330%" y="799.50">mysql::con..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (46 samples, 7.31%)</title><rect x="18.4420%" y="773" width="7.3132%" height="15" fill="rgb(245,58,50)"/><text x="18.6920%" y="783.50">&lt;mysql_com..</text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (4 samples, 0.64%)</title><rect x="25.1192%" y="757" width="0.6359%" height="15" fill="rgb(244,68,36)"/><text x="25.3692%" y="767.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (4 samples, 0.64%)</title><rect x="25.1192%" y="741" width="0.6359%" height="15" fill="rgb(232,229,15)"/><text x="25.3692%" y="751.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (4 samples, 0.64%)</title><rect x="25.1192%" y="725" width="0.6359%" height="15" fill="rgb(254,30,23)"/><text x="25.3692%" y="735.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.32%)</title><rect x="25.4372%" y="709" width="0.3180%" height="15" fill="rgb(235,160,14)"/><text x="25.6872%" y="719.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (2 samples, 0.32%)</title><rect x="25.4372%" y="693" width="0.3180%" height="15" fill="rgb(212,155,44)"/><text x="25.6872%" y="703.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (1 samples, 0.16%)</title><rect x="25.7552%" y="853" width="0.1590%" height="15" fill="rgb(226,2,50)"/><text x="26.0052%" y="863.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (1 samples, 0.16%)</title><rect x="25.7552%" y="837" width="0.1590%" height="15" fill="rgb(234,177,6)"/><text x="26.0052%" y="847.50"></text></g><g><title>decor::Shim::create_schema (1 samples, 0.16%)</title><rect x="25.7552%" y="821" width="0.1590%" height="15" fill="rgb(217,24,9)"/><text x="26.0052%" y="831.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (1 samples, 0.16%)</title><rect x="25.7552%" y="805" width="0.1590%" height="15" fill="rgb(220,13,46)"/><text x="26.0052%" y="815.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (1 samples, 0.16%)</title><rect x="25.7552%" y="789" width="0.1590%" height="15" fill="rgb(239,221,27)"/><text x="26.0052%" y="799.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.16%)</title><rect x="25.7552%" y="773" width="0.1590%" height="15" fill="rgb(222,198,25)"/><text x="26.0052%" y="783.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.16%)</title><rect x="25.7552%" y="757" width="0.1590%" height="15" fill="rgb(211,99,13)"/><text x="26.0052%" y="767.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.16%)</title><rect x="25.7552%" y="741" width="0.1590%" height="15" fill="rgb(232,111,31)"/><text x="26.0052%" y="751.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="25.7552%" y="725" width="0.1590%" height="15" fill="rgb(245,82,37)"/><text x="26.0052%" y="735.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (1 samples, 0.16%)</title><rect x="25.7552%" y="709" width="0.1590%" height="15" fill="rgb(227,149,46)"/><text x="26.0052%" y="719.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (1 samples, 0.16%)</title><rect x="25.7552%" y="693" width="0.1590%" height="15" fill="rgb(218,36,50)"/><text x="26.0052%" y="703.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.16%)</title><rect x="25.7552%" y="677" width="0.1590%" height="15" fill="rgb(226,80,48)"/><text x="26.0052%" y="687.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.16%)</title><rect x="25.7552%" y="661" width="0.1590%" height="15" fill="rgb(238,224,15)"/><text x="26.0052%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.16%)</title><rect x="25.7552%" y="645" width="0.1590%" height="15" fill="rgb(241,136,10)"/><text x="26.0052%" y="655.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (1 samples, 0.16%)</title><rect x="25.9141%" y="853" width="0.1590%" height="15" fill="rgb(208,32,45)"/><text x="26.1641%" y="863.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.16%)</title><rect x="26.0731%" y="853" width="0.1590%" height="15" fill="rgb(207,135,9)"/><text x="26.3231%" y="863.50"></text></g><g><title>regex::exec::ExecBuilder::build (1 samples, 0.16%)</title><rect x="26.2321%" y="853" width="0.1590%" height="15" fill="rgb(206,86,44)"/><text x="26.4821%" y="863.50"></text></g><g><title>regex::compile::Compiler::compile (1 samples, 0.16%)</title><rect x="26.2321%" y="837" width="0.1590%" height="15" fill="rgb(245,177,15)"/><text x="26.4821%" y="847.50"></text></g><g><title>regex::compile::Compiler::c (1 samples, 0.16%)</title><rect x="26.2321%" y="821" width="0.1590%" height="15" fill="rgb(206,64,50)"/><text x="26.4821%" y="831.50"></text></g><g><title>regex::compile::Compiler::c_repeat_range (1 samples, 0.16%)</title><rect x="26.2321%" y="805" width="0.1590%" height="15" fill="rgb(234,36,40)"/><text x="26.4821%" y="815.50"></text></g><g><title>regex::compile::Compiler::c_class (1 samples, 0.16%)</title><rect x="26.2321%" y="789" width="0.1590%" height="15" fill="rgb(213,64,8)"/><text x="26.4821%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.16%)</title><rect x="26.2321%" y="773" width="0.1590%" height="15" fill="rgb(210,75,36)"/><text x="26.4821%" y="783.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.16%)</title><rect x="26.2321%" y="757" width="0.1590%" height="15" fill="rgb(229,88,21)"/><text x="26.4821%" y="767.50"></text></g><g><title>_int_realloc (1 samples, 0.16%)</title><rect x="26.2321%" y="741" width="0.1590%" height="15" fill="rgb(252,204,47)"/><text x="26.4821%" y="751.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.16%)</title><rect x="26.2321%" y="725" width="0.1590%" height="15" fill="rgb(208,77,27)"/><text x="26.4821%" y="735.50"></text></g><g><title>sql_parser::parser::parse_statements (1 samples, 0.16%)</title><rect x="26.3911%" y="853" width="0.1590%" height="15" fill="rgb(221,76,26)"/><text x="26.6411%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (1 samples, 0.16%)</title><rect x="26.3911%" y="837" width="0.1590%" height="15" fill="rgb(225,139,18)"/><text x="26.6411%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::parse_columns (1 samples, 0.16%)</title><rect x="26.3911%" y="821" width="0.1590%" height="15" fill="rgb(230,137,11)"/><text x="26.6411%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (1 samples, 0.16%)</title><rect x="26.3911%" y="805" width="0.1590%" height="15" fill="rgb(212,28,1)"/><text x="26.6411%" y="815.50"></text></g><g><title>__rust_dealloc (1 samples, 0.16%)</title><rect x="26.3911%" y="789" width="0.1590%" height="15" fill="rgb(248,164,17)"/><text x="26.6411%" y="799.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (2 samples, 0.32%)</title><rect x="26.5501%" y="853" width="0.3180%" height="15" fill="rgb(222,171,42)"/><text x="26.8001%" y="863.50"></text></g><g><title>std::net::tcp::TcpStream::set_write_timeout (1 samples, 0.16%)</title><rect x="26.8680%" y="853" width="0.1590%" height="15" fill="rgb(243,84,45)"/><text x="27.1180%" y="863.50"></text></g><g><title>std::sys_common::net::TcpStream::set_write_timeout (1 samples, 0.16%)</title><rect x="26.8680%" y="837" width="0.1590%" height="15" fill="rgb(252,49,23)"/><text x="27.1180%" y="847.50"></text></g><g><title>std::sys::unix::net::Socket::set_timeout (1 samples, 0.16%)</title><rect x="26.8680%" y="821" width="0.1590%" height="15" fill="rgb(215,19,7)"/><text x="27.1180%" y="831.50"></text></g><g><title>std::io::error::Error::new (1 samples, 0.16%)</title><rect x="26.8680%" y="805" width="0.1590%" height="15" fill="rgb(238,81,41)"/><text x="27.1180%" y="815.50"></text></g><g><title>std::io::error::Error::_new (1 samples, 0.16%)</title><rect x="26.8680%" y="789" width="0.1590%" height="15" fill="rgb(210,199,37)"/><text x="27.1180%" y="799.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.16%)</title><rect x="26.8680%" y="773" width="0.1590%" height="15" fill="rgb(244,192,49)"/><text x="27.1180%" y="783.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.16%)</title><rect x="26.8680%" y="757" width="0.1590%" height="15" fill="rgb(226,211,11)"/><text x="27.1180%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.16%)</title><rect x="26.8680%" y="741" width="0.1590%" height="15" fill="rgb(236,162,54)"/><text x="27.1180%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.16%)</title><rect x="26.8680%" y="725" width="0.1590%" height="15" fill="rgb(220,229,9)"/><text x="27.1180%" y="735.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.16%)</title><rect x="26.8680%" y="709" width="0.1590%" height="15" fill="rgb(250,87,22)"/><text x="27.1180%" y="719.50"></text></g><g><title>__libc_recv (1 samples, 0.16%)</title><rect x="26.8680%" y="693" width="0.1590%" height="15" fill="rgb(239,43,17)"/><text x="27.1180%" y="703.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.16%)</title><rect x="26.8680%" y="677" width="0.1590%" height="15" fill="rgb(231,177,25)"/><text x="27.1180%" y="687.50"></text></g><g><title>do_filp_open (2 samples, 0.32%)</title><rect x="27.0270%" y="565" width="0.3180%" height="15" fill="rgb(219,179,1)"/><text x="27.2770%" y="575.50"></text></g><g><title>path_openat (2 samples, 0.32%)</title><rect x="27.0270%" y="549" width="0.3180%" height="15" fill="rgb(238,219,53)"/><text x="27.2770%" y="559.50"></text></g><g><title>link_path_walk (2 samples, 0.32%)</title><rect x="27.0270%" y="533" width="0.3180%" height="15" fill="rgb(232,167,36)"/><text x="27.2770%" y="543.50"></text></g><g><title>walk_component (2 samples, 0.32%)</title><rect x="27.0270%" y="517" width="0.3180%" height="15" fill="rgb(244,19,51)"/><text x="27.2770%" y="527.50"></text></g><g><title>lookup_fast.constprop.0 (2 samples, 0.32%)</title><rect x="27.0270%" y="501" width="0.3180%" height="15" fill="rgb(224,6,22)"/><text x="27.2770%" y="511.50"></text></g><g><title>__d_lookup (2 samples, 0.32%)</title><rect x="27.0270%" y="485" width="0.3180%" height="15" fill="rgb(224,145,5)"/><text x="27.2770%" y="495.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.16%)</title><rect x="27.1860%" y="469" width="0.1590%" height="15" fill="rgb(234,130,49)"/><text x="27.4360%" y="479.50"></text></g><g><title>preempt_count_sub (1 samples, 0.16%)</title><rect x="27.1860%" y="453" width="0.1590%" height="15" fill="rgb(254,6,2)"/><text x="27.4360%" y="463.50"></text></g><g><title>hwloc::Topology::new (3 samples, 0.48%)</title><rect x="27.0270%" y="725" width="0.4769%" height="15" fill="rgb(208,96,46)"/><text x="27.2770%" y="735.50"></text></g><g><title>hwloc_topology_load (3 samples, 0.48%)</title><rect x="27.0270%" y="709" width="0.4769%" height="15" fill="rgb(239,3,39)"/><text x="27.2770%" y="719.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.48%)</title><rect x="27.0270%" y="693" width="0.4769%" height="15" fill="rgb(233,210,1)"/><text x="27.2770%" y="703.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.48%)</title><rect x="27.0270%" y="677" width="0.4769%" height="15" fill="rgb(244,137,37)"/><text x="27.2770%" y="687.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.48%)</title><rect x="27.0270%" y="661" width="0.4769%" height="15" fill="rgb(240,136,2)"/><text x="27.2770%" y="671.50"></text></g><g><title>__GI___openat (3 samples, 0.48%)</title><rect x="27.0270%" y="645" width="0.4769%" height="15" fill="rgb(239,18,37)"/><text x="27.2770%" y="655.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.48%)</title><rect x="27.0270%" y="629" width="0.4769%" height="15" fill="rgb(218,185,22)"/><text x="27.2770%" y="639.50"></text></g><g><title>do_syscall_64 (3 samples, 0.48%)</title><rect x="27.0270%" y="613" width="0.4769%" height="15" fill="rgb(225,218,4)"/><text x="27.2770%" y="623.50"></text></g><g><title>__x64_sys_openat (3 samples, 0.48%)</title><rect x="27.0270%" y="597" width="0.4769%" height="15" fill="rgb(230,182,32)"/><text x="27.2770%" y="607.50"></text></g><g><title>do_sys_openat2 (3 samples, 0.48%)</title><rect x="27.0270%" y="581" width="0.4769%" height="15" fill="rgb(242,56,43)"/><text x="27.2770%" y="591.50"></text></g><g><title>kmem_cache_free (1 samples, 0.16%)</title><rect x="27.3450%" y="565" width="0.1590%" height="15" fill="rgb(233,99,24)"/><text x="27.5950%" y="575.50"></text></g><g><title>lobsters::init_database (1 samples, 0.16%)</title><rect x="27.5040%" y="725" width="0.1590%" height="15" fill="rgb(234,209,42)"/><text x="27.7540%" y="735.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (1 samples, 0.16%)</title><rect x="27.5040%" y="709" width="0.1590%" height="15" fill="rgb(227,7,12)"/><text x="27.7540%" y="719.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.16%)</title><rect x="27.5040%" y="693" width="0.1590%" height="15" fill="rgb(245,203,43)"/><text x="27.7540%" y="703.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.16%)</title><rect x="27.5040%" y="677" width="0.1590%" height="15" fill="rgb(238,205,33)"/><text x="27.7540%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.16%)</title><rect x="27.5040%" y="661" width="0.1590%" height="15" fill="rgb(231,56,7)"/><text x="27.7540%" y="671.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.16%)</title><rect x="27.5040%" y="645" width="0.1590%" height="15" fill="rgb(244,186,29)"/><text x="27.7540%" y="655.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1 samples, 0.16%)</title><rect x="27.5040%" y="629" width="0.1590%" height="15" fill="rgb(234,111,31)"/><text x="27.7540%" y="639.50"></text></g><g><title>__libc_send (1 samples, 0.16%)</title><rect x="27.5040%" y="613" width="0.1590%" height="15" fill="rgb(241,149,10)"/><text x="27.7540%" y="623.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.16%)</title><rect x="27.5040%" y="597" width="0.1590%" height="15" fill="rgb(249,206,44)"/><text x="27.7540%" y="607.50"></text></g><g><title>do_syscall_64 (1 samples, 0.16%)</title><rect x="27.5040%" y="581" width="0.1590%" height="15" fill="rgb(251,153,30)"/><text x="27.7540%" y="591.50"></text></g><g><title>__x64_sys_sendto (1 samples, 0.16%)</title><rect x="27.5040%" y="565" width="0.1590%" height="15" fill="rgb(239,152,38)"/><text x="27.7540%" y="575.50"></text></g><g><title>__sys_sendto (1 samples, 0.16%)</title><rect x="27.5040%" y="549" width="0.1590%" height="15" fill="rgb(249,139,47)"/><text x="27.7540%" y="559.50"></text></g><g><title>sock_sendmsg (1 samples, 0.16%)</title><rect x="27.5040%" y="533" width="0.1590%" height="15" fill="rgb(244,64,35)"/><text x="27.7540%" y="543.50"></text></g><g><title>tcp_sendmsg (1 samples, 0.16%)</title><rect x="27.5040%" y="517" width="0.1590%" height="15" fill="rgb(216,46,15)"/><text x="27.7540%" y="527.50"></text></g><g><title>tcp_sendmsg_locked (1 samples, 0.16%)</title><rect x="27.5040%" y="501" width="0.1590%" height="15" fill="rgb(250,74,19)"/><text x="27.7540%" y="511.50"></text></g><g><title>skb_entail (1 samples, 0.16%)</title><rect x="27.5040%" y="485" width="0.1590%" height="15" fill="rgb(249,42,33)"/><text x="27.7540%" y="495.50"></text></g><g><title>std::rt::lang_start_internal (5 samples, 0.79%)</title><rect x="27.0270%" y="853" width="0.7949%" height="15" fill="rgb(242,149,17)"/><text x="27.2770%" y="863.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.79%)</title><rect x="27.0270%" y="837" width="0.7949%" height="15" fill="rgb(244,29,21)"/><text x="27.2770%" y="847.50"></text></g><g><title>std::panicking::try (5 samples, 0.79%)</title><rect x="27.0270%" y="821" width="0.7949%" height="15" fill="rgb(220,130,37)"/><text x="27.2770%" y="831.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.79%)</title><rect x="27.0270%" y="805" width="0.7949%" height="15" fill="rgb(211,67,2)"/><text x="27.2770%" y="815.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (5 samples, 0.79%)</title><rect x="27.0270%" y="789" width="0.7949%" height="15" fill="rgb(235,68,52)"/><text x="27.2770%" y="799.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (5 samples, 0.79%)</title><rect x="27.0270%" y="773" width="0.7949%" height="15" fill="rgb(246,142,3)"/><text x="27.2770%" y="783.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (5 samples, 0.79%)</title><rect x="27.0270%" y="757" width="0.7949%" height="15" fill="rgb(241,25,7)"/><text x="27.2770%" y="767.50"></text></g><g><title>lobsters::main (5 samples, 0.79%)</title><rect x="27.0270%" y="741" width="0.7949%" height="15" fill="rgb(242,119,39)"/><text x="27.2770%" y="751.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (1 samples, 0.16%)</title><rect x="27.6630%" y="725" width="0.1590%" height="15" fill="rgb(241,98,45)"/><text x="27.9130%" y="735.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.16%)</title><rect x="27.6630%" y="709" width="0.1590%" height="15" fill="rgb(254,28,30)"/><text x="27.9130%" y="719.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.16%)</title><rect x="27.6630%" y="693" width="0.1590%" height="15" fill="rgb(241,142,54)"/><text x="27.9130%" y="703.50"></text></g><g><title>[unknown] (161 samples, 25.60%)</title><rect x="2.3847%" y="869" width="25.5962%" height="15" fill="rgb(222,85,15)"/><text x="2.6347%" y="879.50">[unknown]</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.16%)</title><rect x="27.8219%" y="853" width="0.1590%" height="15" fill="rgb(210,85,47)"/><text x="28.0719%" y="863.50"></text></g><g><title>decor::Shim::run_on_tcp (1 samples, 0.16%)</title><rect x="27.8219%" y="837" width="0.1590%" height="15" fill="rgb(224,206,25)"/><text x="28.0719%" y="847.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (1 samples, 0.16%)</title><rect x="27.8219%" y="821" width="0.1590%" height="15" fill="rgb(243,201,19)"/><text x="28.0719%" y="831.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (1 samples, 0.16%)</title><rect x="27.8219%" y="805" width="0.1590%" height="15" fill="rgb(236,59,4)"/><text x="28.0719%" y="815.50"></text></g><g><title>decor::Shim::create_schema (1 samples, 0.16%)</title><rect x="27.8219%" y="789" width="0.1590%" height="15" fill="rgb(254,179,45)"/><text x="28.0719%" y="799.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (1 samples, 0.16%)</title><rect x="27.8219%" y="773" width="0.1590%" height="15" fill="rgb(226,14,10)"/><text x="28.0719%" y="783.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (1 samples, 0.16%)</title><rect x="27.8219%" y="757" width="0.1590%" height="15" fill="rgb(244,27,41)"/><text x="28.0719%" y="767.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.16%)</title><rect x="27.8219%" y="741" width="0.1590%" height="15" fill="rgb(235,35,32)"/><text x="28.0719%" y="751.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.16%)</title><rect x="27.8219%" y="725" width="0.1590%" height="15" fill="rgb(218,68,31)"/><text x="28.0719%" y="735.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.16%)</title><rect x="27.8219%" y="709" width="0.1590%" height="15" fill="rgb(207,120,37)"/><text x="28.0719%" y="719.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.16%)</title><rect x="27.8219%" y="693" width="0.1590%" height="15" fill="rgb(227,98,0)"/><text x="28.0719%" y="703.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1 samples, 0.16%)</title><rect x="27.8219%" y="677" width="0.1590%" height="15" fill="rgb(207,7,3)"/><text x="28.0719%" y="687.50"></text></g><g><title>__libc_send (1 samples, 0.16%)</title><rect x="27.8219%" y="661" width="0.1590%" height="15" fill="rgb(206,98,19)"/><text x="28.0719%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.16%)</title><rect x="27.8219%" y="645" width="0.1590%" height="15" fill="rgb(217,5,26)"/><text x="28.0719%" y="655.50"></text></g><g><title>do_syscall_64 (1 samples, 0.16%)</title><rect x="27.8219%" y="629" width="0.1590%" height="15" fill="rgb(235,190,38)"/><text x="28.0719%" y="639.50"></text></g><g><title>__x64_sys_sendto (1 samples, 0.16%)</title><rect x="27.8219%" y="613" width="0.1590%" height="15" fill="rgb(247,86,24)"/><text x="28.0719%" y="623.50"></text></g><g><title>__sys_sendto (1 samples, 0.16%)</title><rect x="27.8219%" y="597" width="0.1590%" height="15" fill="rgb(205,101,16)"/><text x="28.0719%" y="607.50"></text></g><g><title>sock_sendmsg (1 samples, 0.16%)</title><rect x="27.8219%" y="581" width="0.1590%" height="15" fill="rgb(246,168,33)"/><text x="28.0719%" y="591.50"></text></g><g><title>tcp_sendmsg (1 samples, 0.16%)</title><rect x="27.8219%" y="565" width="0.1590%" height="15" fill="rgb(231,114,1)"/><text x="28.0719%" y="575.50"></text></g><g><title>tcp_sendmsg_locked (1 samples, 0.16%)</title><rect x="27.8219%" y="549" width="0.1590%" height="15" fill="rgb(207,184,53)"/><text x="28.0719%" y="559.50"></text></g><g><title>__tcp_push_pending_frames (1 samples, 0.16%)</title><rect x="27.8219%" y="533" width="0.1590%" height="15" fill="rgb(224,95,51)"/><text x="28.0719%" y="543.50"></text></g><g><title>tcp_write_xmit (1 samples, 0.16%)</title><rect x="27.8219%" y="517" width="0.1590%" height="15" fill="rgb(212,188,45)"/><text x="28.0719%" y="527.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.16%)</title><rect x="27.8219%" y="501" width="0.1590%" height="15" fill="rgb(223,154,38)"/><text x="28.0719%" y="511.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.16%)</title><rect x="27.8219%" y="485" width="0.1590%" height="15" fill="rgb(251,22,52)"/><text x="28.0719%" y="495.50"></text></g><g><title>ip_output (1 samples, 0.16%)</title><rect x="27.8219%" y="469" width="0.1590%" height="15" fill="rgb(229,209,22)"/><text x="28.0719%" y="479.50"></text></g><g><title>ip_finish_output (1 samples, 0.16%)</title><rect x="27.8219%" y="453" width="0.1590%" height="15" fill="rgb(234,138,34)"/><text x="28.0719%" y="463.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (1 samples, 0.16%)</title><rect x="27.8219%" y="437" width="0.1590%" height="15" fill="rgb(212,95,11)"/><text x="28.0719%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.16%)</title><rect x="28.1399%" y="709" width="0.1590%" height="15" fill="rgb(240,179,47)"/><text x="28.3899%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (1 samples, 0.16%)</title><rect x="28.1399%" y="693" width="0.1590%" height="15" fill="rgb(240,163,11)"/><text x="28.3899%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.16%)</title><rect x="28.1399%" y="677" width="0.1590%" height="15" fill="rgb(236,37,12)"/><text x="28.3899%" y="687.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.16%)</title><rect x="28.1399%" y="661" width="0.1590%" height="15" fill="rgb(232,164,16)"/><text x="28.3899%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.16%)</title><rect x="28.1399%" y="645" width="0.1590%" height="15" fill="rgb(244,205,15)"/><text x="28.3899%" y="655.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.16%)</title><rect x="28.1399%" y="629" width="0.1590%" height="15" fill="rgb(223,117,47)"/><text x="28.3899%" y="639.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (2 samples, 0.32%)</title><rect x="28.1399%" y="725" width="0.3180%" height="15" fill="rgb(244,107,35)"/><text x="28.3899%" y="735.50"></text></g><g><title>decor::Shim::create_schema (1 samples, 0.16%)</title><rect x="28.2989%" y="709" width="0.1590%" height="15" fill="rgb(205,140,8)"/><text x="28.5489%" y="719.50"></text></g><g><title>decor::helpers::process_schema_stmt (1 samples, 0.16%)</title><rect x="28.2989%" y="693" width="0.1590%" height="15" fill="rgb(228,84,46)"/><text x="28.5489%" y="703.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::replace (1 samples, 0.16%)</title><rect x="28.2989%" y="677" width="0.1590%" height="15" fill="rgb(254,188,9)"/><text x="28.5489%" y="687.50"></text></g><g><title>core::str::pattern::StrSearcher::new (1 samples, 0.16%)</title><rect x="28.2989%" y="661" width="0.1590%" height="15" fill="rgb(206,112,54)"/><text x="28.5489%" y="671.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (1 samples, 0.16%)</title><rect x="28.2989%" y="645" width="0.1590%" height="15" fill="rgb(216,84,49)"/><text x="28.5489%" y="655.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_create (1 samples, 0.16%)</title><rect x="28.2989%" y="629" width="0.1590%" height="15" fill="rgb(214,194,35)"/><text x="28.5489%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.16%)</title><rect x="28.2989%" y="613" width="0.1590%" height="15" fill="rgb(249,28,3)"/><text x="28.5489%" y="623.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_create::{{closure}} (1 samples, 0.16%)</title><rect x="28.2989%" y="597" width="0.1590%" height="15" fill="rgb(222,56,52)"/><text x="28.5489%" y="607.50"></text></g><g><title>decor::answer_rows (1 samples, 0.16%)</title><rect x="28.4579%" y="709" width="0.1590%" height="15" fill="rgb(245,217,50)"/><text x="28.7079%" y="719.50"></text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::finish (1 samples, 0.16%)</title><rect x="28.4579%" y="693" width="0.1590%" height="15" fill="rgb(213,201,24)"/><text x="28.7079%" y="703.50"></text></g><g><title>msql_srv::writers::write_ok_packet (1 samples, 0.16%)</title><rect x="28.4579%" y="677" width="0.1590%" height="15" fill="rgb(248,116,28)"/><text x="28.7079%" y="687.50"></text></g><g><title>mysql_common::io::WriteMysqlExt::write_lenenc_int (1 samples, 0.16%)</title><rect x="28.4579%" y="661" width="0.1590%" height="15" fill="rgb(219,72,43)"/><text x="28.7079%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.16%)</title><rect x="28.4579%" y="645" width="0.1590%" height="15" fill="rgb(209,138,14)"/><text x="28.7079%" y="655.50"></text></g><g><title>import_single_range (1 samples, 0.16%)</title><rect x="28.7758%" y="485" width="0.1590%" height="15" fill="rgb(222,18,33)"/><text x="29.0258%" y="495.50"></text></g><g><title>__kfree_skb (1 samples, 0.16%)</title><rect x="29.0938%" y="453" width="0.1590%" height="15" fill="rgb(213,199,7)"/><text x="29.3438%" y="463.50"></text></g><g><title>skb_release_head_state (1 samples, 0.16%)</title><rect x="29.0938%" y="437" width="0.1590%" height="15" fill="rgb(250,110,10)"/><text x="29.3438%" y="447.50"></text></g><g><title>dst_release (1 samples, 0.16%)</title><rect x="29.0938%" y="421" width="0.1590%" height="15" fill="rgb(248,123,6)"/><text x="29.3438%" y="431.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.16%)</title><rect x="29.2528%" y="437" width="0.1590%" height="15" fill="rgb(206,91,31)"/><text x="29.5028%" y="447.50"></text></g><g><title>remove_wait_queue (1 samples, 0.16%)</title><rect x="29.4118%" y="437" width="0.1590%" height="15" fill="rgb(211,154,13)"/><text x="29.6618%" y="447.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.16%)</title><rect x="29.4118%" y="421" width="0.1590%" height="15" fill="rgb(225,148,7)"/><text x="29.6618%" y="431.50"></text></g><g><title>__perf_event_task_sched_out (1 samples, 0.16%)</title><rect x="30.0477%" y="373" width="0.1590%" height="15" fill="rgb(220,160,43)"/><text x="30.2977%" y="383.50"></text></g><g><title>reweight_entity (1 samples, 0.16%)</title><rect x="30.2067%" y="341" width="0.1590%" height="15" fill="rgb(213,52,39)"/><text x="30.4567%" y="351.50"></text></g><g><title>dequeue_task_fair (2 samples, 0.32%)</title><rect x="30.2067%" y="373" width="0.3180%" height="15" fill="rgb(243,137,7)"/><text x="30.4567%" y="383.50"></text></g><g><title>dequeue_entity (2 samples, 0.32%)</title><rect x="30.2067%" y="357" width="0.3180%" height="15" fill="rgb(230,79,13)"/><text x="30.4567%" y="367.50"></text></g><g><title>update_curr (1 samples, 0.16%)</title><rect x="30.3657%" y="341" width="0.1590%" height="15" fill="rgb(247,105,23)"/><text x="30.6157%" y="351.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.16%)</title><rect x="30.3657%" y="325" width="0.1590%" height="15" fill="rgb(223,179,41)"/><text x="30.6157%" y="335.50"></text></g><g><title>finish_task_switch (2 samples, 0.32%)</title><rect x="30.5246%" y="373" width="0.3180%" height="15" fill="rgb(218,9,34)"/><text x="30.7746%" y="383.50"></text></g><g><title>_raw_spin_unlock_irq (1 samples, 0.16%)</title><rect x="30.6836%" y="357" width="0.1590%" height="15" fill="rgb(222,106,8)"/><text x="30.9336%" y="367.50"></text></g><g><title>pick_next_task_fair (1 samples, 0.16%)</title><rect x="30.8426%" y="373" width="0.1590%" height="15" fill="rgb(211,220,0)"/><text x="31.0926%" y="383.50"></text></g><g><title>newidle_balance (1 samples, 0.16%)</title><rect x="30.8426%" y="357" width="0.1590%" height="15" fill="rgb(229,52,16)"/><text x="31.0926%" y="367.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.16%)</title><rect x="30.8426%" y="341" width="0.1590%" height="15" fill="rgb(212,155,18)"/><text x="31.0926%" y="351.50"></text></g><g><title>psi_task_change (1 samples, 0.16%)</title><rect x="31.0016%" y="373" width="0.1590%" height="15" fill="rgb(242,21,14)"/><text x="31.2516%" y="383.50"></text></g><g><title>psi_group_change (1 samples, 0.16%)</title><rect x="31.0016%" y="357" width="0.1590%" height="15" fill="rgb(222,19,48)"/><text x="31.2516%" y="367.50"></text></g><g><title>put_prev_task_fair (2 samples, 0.32%)</title><rect x="31.1606%" y="373" width="0.3180%" height="15" fill="rgb(232,45,27)"/><text x="31.4106%" y="383.50"></text></g><g><title>put_prev_entity (2 samples, 0.32%)</title><rect x="31.1606%" y="357" width="0.3180%" height="15" fill="rgb(249,103,42)"/><text x="31.4106%" y="367.50"></text></g><g><title>uclamp_rq_dec_id (3 samples, 0.48%)</title><rect x="31.4785%" y="373" width="0.4769%" height="15" fill="rgb(246,81,33)"/><text x="31.7285%" y="383.50"></text></g><g><title>sk_wait_data (18 samples, 2.86%)</title><rect x="29.2528%" y="453" width="2.8617%" height="15" fill="rgb(252,33,42)"/><text x="29.5028%" y="463.50">sk..</text></g><g><title>wait_woken (16 samples, 2.54%)</title><rect x="29.5707%" y="437" width="2.5437%" height="15" fill="rgb(209,212,41)"/><text x="29.8207%" y="447.50">wa..</text></g><g><title>schedule_timeout (15 samples, 2.38%)</title><rect x="29.7297%" y="421" width="2.3847%" height="15" fill="rgb(207,154,6)"/><text x="29.9797%" y="431.50">sc..</text></g><g><title>schedule (14 samples, 2.23%)</title><rect x="29.8887%" y="405" width="2.2258%" height="15" fill="rgb(223,64,47)"/><text x="30.1387%" y="415.50">s..</text></g><g><title>__schedule (13 samples, 2.07%)</title><rect x="30.0477%" y="389" width="2.0668%" height="15" fill="rgb(211,161,38)"/><text x="30.2977%" y="399.50">_..</text></g><g><title>update_rq_clock (1 samples, 0.16%)</title><rect x="31.9555%" y="373" width="0.1590%" height="15" fill="rgb(219,138,40)"/><text x="32.2055%" y="383.50"></text></g><g><title>_copy_to_iter (1 samples, 0.16%)</title><rect x="32.1145%" y="421" width="0.1590%" height="15" fill="rgb(241,228,46)"/><text x="32.3645%" y="431.50"></text></g><g><title>skb_copy_datagram_iter (2 samples, 0.32%)</title><rect x="32.1145%" y="453" width="0.3180%" height="15" fill="rgb(223,209,38)"/><text x="32.3645%" y="463.50"></text></g><g><title>__skb_datagram_iter (2 samples, 0.32%)</title><rect x="32.1145%" y="437" width="0.3180%" height="15" fill="rgb(236,164,45)"/><text x="32.3645%" y="447.50"></text></g><g><title>simple_copy_to_iter (1 samples, 0.16%)</title><rect x="32.2734%" y="421" width="0.1590%" height="15" fill="rgb(231,15,5)"/><text x="32.5234%" y="431.50"></text></g><g><title>__check_object_size (1 samples, 0.16%)</title><rect x="32.2734%" y="405" width="0.1590%" height="15" fill="rgb(252,35,15)"/><text x="32.5234%" y="415.50"></text></g><g><title>tcp_cleanup_rbuf (2 samples, 0.32%)</title><rect x="32.4324%" y="453" width="0.3180%" height="15" fill="rgb(248,181,18)"/><text x="32.6824%" y="463.50"></text></g><g><title>do_syscall_64 (27 samples, 4.29%)</title><rect x="28.6169%" y="533" width="4.2925%" height="15" fill="rgb(233,39,42)"/><text x="28.8669%" y="543.50">do_sy..</text></g><g><title>__x64_sys_recvfrom (27 samples, 4.29%)</title><rect x="28.6169%" y="517" width="4.2925%" height="15" fill="rgb(238,110,33)"/><text x="28.8669%" y="527.50">__x64..</text></g><g><title>__sys_recvfrom (26 samples, 4.13%)</title><rect x="28.7758%" y="501" width="4.1335%" height="15" fill="rgb(233,195,10)"/><text x="29.0258%" y="511.50">__sys..</text></g><g><title>inet_recvmsg (25 samples, 3.97%)</title><rect x="28.9348%" y="485" width="3.9746%" height="15" fill="rgb(254,105,3)"/><text x="29.1848%" y="495.50">inet..</text></g><g><title>tcp_recvmsg (25 samples, 3.97%)</title><rect x="28.9348%" y="469" width="3.9746%" height="15" fill="rgb(221,225,9)"/><text x="29.1848%" y="479.50">tcp_..</text></g><g><title>tcp_rcv_space_adjust (1 samples, 0.16%)</title><rect x="32.7504%" y="453" width="0.1590%" height="15" fill="rgb(224,227,45)"/><text x="33.0004%" y="463.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (30 samples, 4.77%)</title><rect x="28.6169%" y="645" width="4.7695%" height="15" fill="rgb(229,198,43)"/><text x="28.8669%" y="655.50">&lt;std::..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (30 samples, 4.77%)</title><rect x="28.6169%" y="629" width="4.7695%" height="15" fill="rgb(206,209,35)"/><text x="28.8669%" y="639.50">&lt;std::..</text></g><g><title>std::sys_common::net::TcpStream::read (30 samples, 4.77%)</title><rect x="28.6169%" y="613" width="4.7695%" height="15" fill="rgb(245,195,53)"/><text x="28.8669%" y="623.50">std::s..</text></g><g><title>std::sys::unix::net::Socket::read (30 samples, 4.77%)</title><rect x="28.6169%" y="597" width="4.7695%" height="15" fill="rgb(240,92,26)"/><text x="28.8669%" y="607.50">std::s..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (30 samples, 4.77%)</title><rect x="28.6169%" y="581" width="4.7695%" height="15" fill="rgb(207,40,23)"/><text x="28.8669%" y="591.50">std::s..</text></g><g><title>__libc_recv (30 samples, 4.77%)</title><rect x="28.6169%" y="565" width="4.7695%" height="15" fill="rgb(223,111,35)"/><text x="28.8669%" y="575.50">__libc..</text></g><g><title>entry_SYSCALL_64 (30 samples, 4.77%)</title><rect x="28.6169%" y="549" width="4.7695%" height="15" fill="rgb(229,147,28)"/><text x="28.8669%" y="559.50">entry_..</text></g><g><title>prepare_exit_to_usermode (3 samples, 0.48%)</title><rect x="32.9094%" y="533" width="0.4769%" height="15" fill="rgb(211,29,28)"/><text x="33.1594%" y="543.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (31 samples, 4.93%)</title><rect x="28.6169%" y="693" width="4.9285%" height="15" fill="rgb(228,72,33)"/><text x="28.8669%" y="703.50">mysql:..</text></g><g><title>mysql::conn::Conn::read_packet (31 samples, 4.93%)</title><rect x="28.6169%" y="677" width="4.9285%" height="15" fill="rgb(205,214,31)"/><text x="28.8669%" y="687.50">mysql:..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (31 samples, 4.93%)</title><rect x="28.6169%" y="661" width="4.9285%" height="15" fill="rgb(224,111,15)"/><text x="28.8669%" y="671.50">&lt;mysql..</text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (1 samples, 0.16%)</title><rect x="33.3863%" y="645" width="0.1590%" height="15" fill="rgb(253,21,26)"/><text x="33.6363%" y="655.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (1 samples, 0.16%)</title><rect x="33.3863%" y="629" width="0.1590%" height="15" fill="rgb(245,139,43)"/><text x="33.6363%" y="639.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.16%)</title><rect x="33.3863%" y="613" width="0.1590%" height="15" fill="rgb(252,170,7)"/><text x="33.6363%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.16%)</title><rect x="33.3863%" y="597" width="0.1590%" height="15" fill="rgb(231,118,14)"/><text x="33.6363%" y="607.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.16%)</title><rect x="33.3863%" y="581" width="0.1590%" height="15" fill="rgb(238,83,0)"/><text x="33.6363%" y="591.50"></text></g><g><title>import_single_range (1 samples, 0.16%)</title><rect x="34.1812%" y="549" width="0.1590%" height="15" fill="rgb(221,39,39)"/><text x="34.4312%" y="559.50"></text></g><g><title>inet_sendmsg (1 samples, 0.16%)</title><rect x="34.3402%" y="533" width="0.1590%" height="15" fill="rgb(222,119,46)"/><text x="34.5902%" y="543.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.16%)</title><rect x="34.4992%" y="517" width="0.1590%" height="15" fill="rgb(222,165,49)"/><text x="34.7492%" y="527.50"></text></g><g><title>preempt_count_sub (1 samples, 0.16%)</title><rect x="34.4992%" y="501" width="0.1590%" height="15" fill="rgb(219,113,52)"/><text x="34.7492%" y="511.50"></text></g><g><title>lock_sock_nested (1 samples, 0.16%)</title><rect x="34.6582%" y="517" width="0.1590%" height="15" fill="rgb(214,7,15)"/><text x="34.9082%" y="527.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.16%)</title><rect x="35.4531%" y="437" width="0.1590%" height="15" fill="rgb(235,32,4)"/><text x="35.7031%" y="447.50"></text></g><g><title>__sk_dst_check (1 samples, 0.16%)</title><rect x="35.6121%" y="437" width="0.1590%" height="15" fill="rgb(238,90,54)"/><text x="35.8621%" y="447.50"></text></g><g><title>ipv4_dst_check (1 samples, 0.16%)</title><rect x="35.6121%" y="421" width="0.1590%" height="15" fill="rgb(213,208,19)"/><text x="35.8621%" y="431.50"></text></g><g><title>__dev_queue_xmit (1 samples, 0.16%)</title><rect x="35.9300%" y="405" width="0.1590%" height="15" fill="rgb(233,156,4)"/><text x="36.1800%" y="415.50"></text></g><g><title>dev_hard_start_xmit (1 samples, 0.16%)</title><rect x="35.9300%" y="389" width="0.1590%" height="15" fill="rgb(207,194,5)"/><text x="36.1800%" y="399.50"></text></g><g><title>loopback_xmit (1 samples, 0.16%)</title><rect x="35.9300%" y="373" width="0.1590%" height="15" fill="rgb(206,111,30)"/><text x="36.1800%" y="383.50"></text></g><g><title>netif_rx (1 samples, 0.16%)</title><rect x="35.9300%" y="357" width="0.1590%" height="15" fill="rgb(243,70,54)"/><text x="36.1800%" y="367.50"></text></g><g><title>netif_rx_internal (1 samples, 0.16%)</title><rect x="35.9300%" y="341" width="0.1590%" height="15" fill="rgb(242,28,8)"/><text x="36.1800%" y="351.50"></text></g><g><title>enqueue_to_backlog (1 samples, 0.16%)</title><rect x="35.9300%" y="325" width="0.1590%" height="15" fill="rgb(219,106,18)"/><text x="36.1800%" y="335.50"></text></g><g><title>irqtime_account_irq (1 samples, 0.16%)</title><rect x="36.5660%" y="341" width="0.1590%" height="15" fill="rgb(244,222,10)"/><text x="36.8160%" y="351.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.16%)</title><rect x="36.5660%" y="325" width="0.1590%" height="15" fill="rgb(236,179,52)"/><text x="36.8160%" y="335.50"></text></g><g><title>__kfree_skb_flush (1 samples, 0.16%)</title><rect x="36.8839%" y="325" width="0.1590%" height="15" fill="rgb(213,23,39)"/><text x="37.1339%" y="335.50"></text></g><g><title>__netif_receive_skb_core (2 samples, 0.32%)</title><rect x="37.2019%" y="293" width="0.3180%" height="15" fill="rgb(238,48,10)"/><text x="37.4519%" y="303.50"></text></g><g><title>__inet_lookup_established (1 samples, 0.16%)</title><rect x="37.5199%" y="213" width="0.1590%" height="15" fill="rgb(251,196,23)"/><text x="37.7699%" y="223.50"></text></g><g><title>enqueue_task (4 samples, 0.64%)</title><rect x="38.3148%" y="101" width="0.6359%" height="15" fill="rgb(250,152,24)"/><text x="38.5648%" y="111.50"></text></g><g><title>psi_task_change (4 samples, 0.64%)</title><rect x="38.3148%" y="85" width="0.6359%" height="15" fill="rgb(209,150,17)"/><text x="38.5648%" y="95.50"></text></g><g><title>psi_group_change (3 samples, 0.48%)</title><rect x="38.4738%" y="69" width="0.4769%" height="15" fill="rgb(234,202,34)"/><text x="38.7238%" y="79.50"></text></g><g><title>enqueue_task_fair (2 samples, 0.32%)</title><rect x="38.9507%" y="101" width="0.3180%" height="15" fill="rgb(253,148,53)"/><text x="39.2007%" y="111.50"></text></g><g><title>enqueue_entity (2 samples, 0.32%)</title><rect x="38.9507%" y="85" width="0.3180%" height="15" fill="rgb(218,129,16)"/><text x="39.2007%" y="95.50"></text></g><g><title>update_load_avg (1 samples, 0.16%)</title><rect x="39.1097%" y="69" width="0.1590%" height="15" fill="rgb(216,85,19)"/><text x="39.3597%" y="79.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.16%)</title><rect x="39.1097%" y="53" width="0.1590%" height="15" fill="rgb(235,228,7)"/><text x="39.3597%" y="63.50"></text></g><g><title>sock_def_readable (10 samples, 1.59%)</title><rect x="37.8378%" y="181" width="1.5898%" height="15" fill="rgb(245,175,0)"/><text x="38.0878%" y="191.50"></text></g><g><title>__wake_up_common_lock (10 samples, 1.59%)</title><rect x="37.8378%" y="165" width="1.5898%" height="15" fill="rgb(208,168,36)"/><text x="38.0878%" y="175.50"></text></g><g><title>__wake_up_common (9 samples, 1.43%)</title><rect x="37.9968%" y="149" width="1.4308%" height="15" fill="rgb(246,171,24)"/><text x="38.2468%" y="159.50"></text></g><g><title>pollwake (9 samples, 1.43%)</title><rect x="37.9968%" y="133" width="1.4308%" height="15" fill="rgb(215,142,24)"/><text x="38.2468%" y="143.50"></text></g><g><title>try_to_wake_up (9 samples, 1.43%)</title><rect x="37.9968%" y="117" width="1.4308%" height="15" fill="rgb(250,187,7)"/><text x="38.2468%" y="127.50"></text></g><g><title>select_task_rq_fair (1 samples, 0.16%)</title><rect x="39.2687%" y="101" width="0.1590%" height="15" fill="rgb(228,66,33)"/><text x="39.5187%" y="111.50"></text></g><g><title>available_idle_cpu (1 samples, 0.16%)</title><rect x="39.2687%" y="85" width="0.1590%" height="15" fill="rgb(234,215,21)"/><text x="39.5187%" y="95.50"></text></g><g><title>__kfree_skb (2 samples, 0.32%)</title><rect x="39.5866%" y="165" width="0.3180%" height="15" fill="rgb(222,191,20)"/><text x="39.8366%" y="175.50"></text></g><g><title>skb_release_data (2 samples, 0.32%)</title><rect x="39.5866%" y="149" width="0.3180%" height="15" fill="rgb(245,79,54)"/><text x="39.8366%" y="159.50"></text></g><g><title>tcp_ack (4 samples, 0.64%)</title><rect x="39.4277%" y="181" width="0.6359%" height="15" fill="rgb(240,10,37)"/><text x="39.6777%" y="191.50"></text></g><g><title>tcp_schedule_loss_probe.part.0 (1 samples, 0.16%)</title><rect x="39.9046%" y="165" width="0.1590%" height="15" fill="rgb(214,192,32)"/><text x="40.1546%" y="175.50"></text></g><g><title>__ip_queue_xmit (31 samples, 4.93%)</title><rect x="35.2941%" y="453" width="4.9285%" height="15" fill="rgb(209,36,54)"/><text x="35.5441%" y="463.50">__ip_q..</text></g><g><title>ip_output (28 samples, 4.45%)</title><rect x="35.7711%" y="437" width="4.4515%" height="15" fill="rgb(220,10,11)"/><text x="36.0211%" y="447.50">ip_ou..</text></g><g><title>ip_finish_output2 (28 samples, 4.45%)</title><rect x="35.7711%" y="421" width="4.4515%" height="15" fill="rgb(221,106,17)"/><text x="36.0211%" y="431.50">ip_fi..</text></g><g><title>__local_bh_enable_ip (26 samples, 4.13%)</title><rect x="36.0890%" y="405" width="4.1335%" height="15" fill="rgb(251,142,44)"/><text x="36.3390%" y="415.50">__loc..</text></g><g><title>do_softirq (26 samples, 4.13%)</title><rect x="36.0890%" y="389" width="4.1335%" height="15" fill="rgb(238,13,15)"/><text x="36.3390%" y="399.50">do_so..</text></g><g><title>do_softirq_own_stack (24 samples, 3.82%)</title><rect x="36.4070%" y="373" width="3.8156%" height="15" fill="rgb(208,107,27)"/><text x="36.6570%" y="383.50">do_s..</text></g><g><title>__do_softirq (24 samples, 3.82%)</title><rect x="36.4070%" y="357" width="3.8156%" height="15" fill="rgb(205,136,37)"/><text x="36.6570%" y="367.50">__do..</text></g><g><title>net_rx_action (22 samples, 3.50%)</title><rect x="36.7250%" y="341" width="3.4976%" height="15" fill="rgb(250,205,27)"/><text x="36.9750%" y="351.50">net..</text></g><g><title>process_backlog (20 samples, 3.18%)</title><rect x="37.0429%" y="325" width="3.1797%" height="15" fill="rgb(210,80,43)"/><text x="37.2929%" y="335.50">pro..</text></g><g><title>__netif_receive_skb_one_core (20 samples, 3.18%)</title><rect x="37.0429%" y="309" width="3.1797%" height="15" fill="rgb(247,160,36)"/><text x="37.2929%" y="319.50">__n..</text></g><g><title>ip_rcv (17 samples, 2.70%)</title><rect x="37.5199%" y="293" width="2.7027%" height="15" fill="rgb(234,13,49)"/><text x="37.7699%" y="303.50">ip..</text></g><g><title>ip_local_deliver (17 samples, 2.70%)</title><rect x="37.5199%" y="277" width="2.7027%" height="15" fill="rgb(234,122,0)"/><text x="37.7699%" y="287.50">ip..</text></g><g><title>ip_local_deliver_finish (17 samples, 2.70%)</title><rect x="37.5199%" y="261" width="2.7027%" height="15" fill="rgb(207,146,38)"/><text x="37.7699%" y="271.50">ip..</text></g><g><title>ip_protocol_deliver_rcu (17 samples, 2.70%)</title><rect x="37.5199%" y="245" width="2.7027%" height="15" fill="rgb(207,177,25)"/><text x="37.7699%" y="255.50">ip..</text></g><g><title>tcp_v4_rcv (17 samples, 2.70%)</title><rect x="37.5199%" y="229" width="2.7027%" height="15" fill="rgb(211,178,42)"/><text x="37.7699%" y="239.50">tc..</text></g><g><title>tcp_v4_do_rcv (16 samples, 2.54%)</title><rect x="37.6789%" y="213" width="2.5437%" height="15" fill="rgb(230,69,54)"/><text x="37.9289%" y="223.50">tc..</text></g><g><title>tcp_rcv_established (15 samples, 2.38%)</title><rect x="37.8378%" y="197" width="2.3847%" height="15" fill="rgb(214,135,41)"/><text x="38.0878%" y="207.50">tc..</text></g><g><title>tcp_queue_rcv (1 samples, 0.16%)</title><rect x="40.0636%" y="181" width="0.1590%" height="15" fill="rgb(237,67,25)"/><text x="40.3136%" y="191.50"></text></g><g><title>__tcp_push_pending_frames (32 samples, 5.09%)</title><rect x="35.2941%" y="501" width="5.0874%" height="15" fill="rgb(222,189,50)"/><text x="35.5441%" y="511.50">__tcp_..</text></g><g><title>tcp_write_xmit (32 samples, 5.09%)</title><rect x="35.2941%" y="485" width="5.0874%" height="15" fill="rgb(245,148,34)"/><text x="35.5441%" y="495.50">tcp_wr..</text></g><g><title>__tcp_transmit_skb (32 samples, 5.09%)</title><rect x="35.2941%" y="469" width="5.0874%" height="15" fill="rgb(222,29,6)"/><text x="35.5441%" y="479.50">__tcp_..</text></g><g><title>tcp_established_options (1 samples, 0.16%)</title><rect x="40.2226%" y="453" width="0.1590%" height="15" fill="rgb(221,189,43)"/><text x="40.4726%" y="463.50"></text></g><g><title>sk_page_frag_refill (2 samples, 0.32%)</title><rect x="40.3816%" y="501" width="0.3180%" height="15" fill="rgb(207,36,27)"/><text x="40.6316%" y="511.50"></text></g><g><title>skb_page_frag_refill (1 samples, 0.16%)</title><rect x="40.5405%" y="485" width="0.1590%" height="15" fill="rgb(217,90,24)"/><text x="40.7905%" y="495.50"></text></g><g><title>__kmalloc_node_track_caller (2 samples, 0.32%)</title><rect x="40.6995%" y="469" width="0.3180%" height="15" fill="rgb(224,66,35)"/><text x="40.9495%" y="479.50"></text></g><g><title>kmalloc_slab (1 samples, 0.16%)</title><rect x="40.8585%" y="453" width="0.1590%" height="15" fill="rgb(221,13,50)"/><text x="41.1085%" y="463.50"></text></g><g><title>__ksize (1 samples, 0.16%)</title><rect x="41.0175%" y="469" width="0.1590%" height="15" fill="rgb(236,68,49)"/><text x="41.2675%" y="479.50"></text></g><g><title>__slab_alloc.constprop.0 (1 samples, 0.16%)</title><rect x="41.1765%" y="453" width="0.1590%" height="15" fill="rgb(229,146,28)"/><text x="41.4265%" y="463.50"></text></g><g><title>___slab_alloc (1 samples, 0.16%)</title><rect x="41.1765%" y="437" width="0.1590%" height="15" fill="rgb(225,31,38)"/><text x="41.4265%" y="447.50"></text></g><g><title>sock_sendmsg (45 samples, 7.15%)</title><rect x="34.3402%" y="549" width="7.1542%" height="15" fill="rgb(250,208,3)"/><text x="34.5902%" y="559.50">sock_sendm..</text></g><g><title>tcp_sendmsg (44 samples, 7.00%)</title><rect x="34.4992%" y="533" width="6.9952%" height="15" fill="rgb(246,54,23)"/><text x="34.7492%" y="543.50">tcp_sendm..</text></g><g><title>tcp_sendmsg_locked (42 samples, 6.68%)</title><rect x="34.8172%" y="517" width="6.6773%" height="15" fill="rgb(243,76,11)"/><text x="35.0672%" y="527.50">tcp_sendm..</text></g><g><title>sk_stream_alloc_skb (5 samples, 0.79%)</title><rect x="40.6995%" y="501" width="0.7949%" height="15" fill="rgb(245,21,50)"/><text x="40.9495%" y="511.50"></text></g><g><title>__alloc_skb (5 samples, 0.79%)</title><rect x="40.6995%" y="485" width="0.7949%" height="15" fill="rgb(228,9,43)"/><text x="40.9495%" y="495.50"></text></g><g><title>kmem_cache_alloc_node (2 samples, 0.32%)</title><rect x="41.1765%" y="469" width="0.3180%" height="15" fill="rgb(208,100,47)"/><text x="41.4265%" y="479.50"></text></g><g><title>memset_erms (1 samples, 0.16%)</title><rect x="41.3355%" y="453" width="0.1590%" height="15" fill="rgb(232,26,8)"/><text x="41.5855%" y="463.50"></text></g><g><title>__x64_sys_sendto (48 samples, 7.63%)</title><rect x="34.0223%" y="581" width="7.6312%" height="15" fill="rgb(216,166,38)"/><text x="34.2723%" y="591.50">__x64_sys_..</text></g><g><title>__sys_sendto (48 samples, 7.63%)</title><rect x="34.0223%" y="565" width="7.6312%" height="15" fill="rgb(251,202,51)"/><text x="34.2723%" y="575.50">__sys_send..</text></g><g><title>sockfd_lookup_light (1 samples, 0.16%)</title><rect x="41.4944%" y="549" width="0.1590%" height="15" fill="rgb(254,216,34)"/><text x="41.7444%" y="559.50"></text></g><g><title>__fget_light (1 samples, 0.16%)</title><rect x="41.4944%" y="533" width="0.1590%" height="15" fill="rgb(251,32,27)"/><text x="41.7444%" y="543.50"></text></g><g><title>do_syscall_64 (49 samples, 7.79%)</title><rect x="34.0223%" y="597" width="7.7901%" height="15" fill="rgb(208,127,28)"/><text x="34.2723%" y="607.50">do_syscall_..</text></g><g><title>syscall_trace_enter (1 samples, 0.16%)</title><rect x="41.6534%" y="581" width="0.1590%" height="15" fill="rgb(224,137,22)"/><text x="41.9034%" y="591.50"></text></g><g><title>__audit_syscall_entry (1 samples, 0.16%)</title><rect x="41.6534%" y="565" width="0.1590%" height="15" fill="rgb(254,70,32)"/><text x="41.9034%" y="575.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (58 samples, 9.22%)</title><rect x="33.8633%" y="661" width="9.2210%" height="15" fill="rgb(229,75,37)"/><text x="34.1133%" y="671.50">&lt;std::net::tc..</text></g><g><title>std::sys_common::net::TcpStream::write (58 samples, 9.22%)</title><rect x="33.8633%" y="645" width="9.2210%" height="15" fill="rgb(252,64,23)"/><text x="34.1133%" y="655.50">std::sys_comm..</text></g><g><title>__libc_send (58 samples, 9.22%)</title><rect x="33.8633%" y="629" width="9.2210%" height="15" fill="rgb(232,162,48)"/><text x="34.1133%" y="639.50">__libc_send</text></g><g><title>entry_SYSCALL_64 (57 samples, 9.06%)</title><rect x="34.0223%" y="613" width="9.0620%" height="15" fill="rgb(246,160,12)"/><text x="34.2723%" y="623.50">entry_SYSCALL..</text></g><g><title>prepare_exit_to_usermode (8 samples, 1.27%)</title><rect x="41.8124%" y="597" width="1.2719%" height="15" fill="rgb(247,166,0)"/><text x="42.0624%" y="607.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (93 samples, 14.79%)</title><rect x="28.4579%" y="725" width="14.7854%" height="15" fill="rgb(249,219,21)"/><text x="28.7079%" y="735.50">&lt;decor::Shim as msql_sr..</text></g><g><title>mysql::conn::Conn::_query (92 samples, 14.63%)</title><rect x="28.6169%" y="709" width="14.6264%" height="15" fill="rgb(205,209,3)"/><text x="28.8669%" y="719.50">mysql::conn::Conn::_qu..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (61 samples, 9.70%)</title><rect x="33.5453%" y="693" width="9.6979%" height="15" fill="rgb(243,44,1)"/><text x="33.7953%" y="703.50">mysql_common::..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (59 samples, 9.38%)</title><rect x="33.8633%" y="677" width="9.3800%" height="15" fill="rgb(206,159,16)"/><text x="34.1133%" y="687.50">std::io::buff..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf::BufGuard::new (1 samples, 0.16%)</title><rect x="43.0843%" y="661" width="0.1590%" height="15" fill="rgb(244,77,30)"/><text x="43.3343%" y="671.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.16%)</title><rect x="43.2432%" y="725" width="0.1590%" height="15" fill="rgb(218,69,12)"/><text x="43.4932%" y="735.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.16%)</title><rect x="43.2432%" y="709" width="0.1590%" height="15" fill="rgb(212,87,7)"/><text x="43.4932%" y="719.50"></text></g><g><title>&lt;mysql::conn::Conn as core::ops::drop::Drop&gt;::drop (1 samples, 0.16%)</title><rect x="43.2432%" y="693" width="0.1590%" height="15" fill="rgb(245,114,25)"/><text x="43.4932%" y="703.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.16%)</title><rect x="43.2432%" y="677" width="0.1590%" height="15" fill="rgb(210,61,42)"/><text x="43.4932%" y="687.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.16%)</title><rect x="43.2432%" y="661" width="0.1590%" height="15" fill="rgb(211,52,33)"/><text x="43.4932%" y="671.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.16%)</title><rect x="43.2432%" y="645" width="0.1590%" height="15" fill="rgb(234,58,33)"/><text x="43.4932%" y="655.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1 samples, 0.16%)</title><rect x="43.2432%" y="629" width="0.1590%" height="15" fill="rgb(220,115,36)"/><text x="43.4932%" y="639.50"></text></g><g><title>__libc_send (1 samples, 0.16%)</title><rect x="43.2432%" y="613" width="0.1590%" height="15" fill="rgb(243,153,54)"/><text x="43.4932%" y="623.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.16%)</title><rect x="43.2432%" y="597" width="0.1590%" height="15" fill="rgb(251,47,18)"/><text x="43.4932%" y="607.50"></text></g><g><title>do_syscall_64 (1 samples, 0.16%)</title><rect x="43.2432%" y="581" width="0.1590%" height="15" fill="rgb(242,102,42)"/><text x="43.4932%" y="591.50"></text></g><g><title>__x64_sys_sendto (1 samples, 0.16%)</title><rect x="43.2432%" y="565" width="0.1590%" height="15" fill="rgb(234,31,38)"/><text x="43.4932%" y="575.50"></text></g><g><title>__sys_sendto (1 samples, 0.16%)</title><rect x="43.2432%" y="549" width="0.1590%" height="15" fill="rgb(221,117,51)"/><text x="43.4932%" y="559.50"></text></g><g><title>sock_sendmsg (1 samples, 0.16%)</title><rect x="43.2432%" y="533" width="0.1590%" height="15" fill="rgb(212,20,18)"/><text x="43.4932%" y="543.50"></text></g><g><title>tcp_sendmsg (1 samples, 0.16%)</title><rect x="43.2432%" y="517" width="0.1590%" height="15" fill="rgb(245,133,36)"/><text x="43.4932%" y="527.50"></text></g><g><title>tcp_sendmsg_locked (1 samples, 0.16%)</title><rect x="43.2432%" y="501" width="0.1590%" height="15" fill="rgb(212,6,19)"/><text x="43.4932%" y="511.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.16%)</title><rect x="43.4022%" y="725" width="0.1590%" height="15" fill="rgb(218,1,36)"/><text x="43.6522%" y="735.50"></text></g><g><title>core::str::validations::run_utf8_validation (1 samples, 0.16%)</title><rect x="43.4022%" y="709" width="0.1590%" height="15" fill="rgb(246,84,54)"/><text x="43.6522%" y="719.50"></text></g><g><title>msql_srv::commands::parse (1 samples, 0.16%)</title><rect x="43.5612%" y="725" width="0.1590%" height="15" fill="rgb(242,110,6)"/><text x="43.8112%" y="735.50"></text></g><g><title>&lt;(A,B,C,D,E,F,G,H,I) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.16%)</title><rect x="43.5612%" y="709" width="0.1590%" height="15" fill="rgb(214,47,5)"/><text x="43.8112%" y="719.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.32%)</title><rect x="44.6741%" y="437" width="0.3180%" height="15" fill="rgb(218,159,25)"/><text x="44.9241%" y="447.50"></text></g><g><title>loopback_xmit (1 samples, 0.16%)</title><rect x="44.8331%" y="421" width="0.1590%" height="15" fill="rgb(215,211,28)"/><text x="45.0831%" y="431.50"></text></g><g><title>__dev_queue_xmit (4 samples, 0.64%)</title><rect x="44.6741%" y="453" width="0.6359%" height="15" fill="rgb(238,59,32)"/><text x="44.9241%" y="463.50"></text></g><g><title>validate_xmit_skb (2 samples, 0.32%)</title><rect x="44.9921%" y="437" width="0.3180%" height="15" fill="rgb(226,82,3)"/><text x="45.2421%" y="447.50"></text></g><g><title>netif_skb_features (1 samples, 0.16%)</title><rect x="45.1510%" y="421" width="0.1590%" height="15" fill="rgb(240,164,32)"/><text x="45.4010%" y="431.50"></text></g><g><title>kmem_cache_free (1 samples, 0.16%)</title><rect x="45.7870%" y="213" width="0.1590%" height="15" fill="rgb(232,46,7)"/><text x="46.0370%" y="223.50"></text></g><g><title>__tcp_transmit_skb (10 samples, 1.59%)</title><rect x="44.5151%" y="517" width="1.5898%" height="15" fill="rgb(229,129,53)"/><text x="44.7651%" y="527.50"></text></g><g><title>__ip_queue_xmit (10 samples, 1.59%)</title><rect x="44.5151%" y="501" width="1.5898%" height="15" fill="rgb(234,188,29)"/><text x="44.7651%" y="511.50"></text></g><g><title>ip_output (10 samples, 1.59%)</title><rect x="44.5151%" y="485" width="1.5898%" height="15" fill="rgb(246,141,4)"/><text x="44.7651%" y="495.50"></text></g><g><title>ip_finish_output2 (10 samples, 1.59%)</title><rect x="44.5151%" y="469" width="1.5898%" height="15" fill="rgb(229,23,39)"/><text x="44.7651%" y="479.50"></text></g><g><title>__local_bh_enable_ip (5 samples, 0.79%)</title><rect x="45.3100%" y="453" width="0.7949%" height="15" fill="rgb(206,12,3)"/><text x="45.5600%" y="463.50"></text></g><g><title>do_softirq (5 samples, 0.79%)</title><rect x="45.3100%" y="437" width="0.7949%" height="15" fill="rgb(252,226,20)"/><text x="45.5600%" y="447.50"></text></g><g><title>do_softirq_own_stack (5 samples, 0.79%)</title><rect x="45.3100%" y="421" width="0.7949%" height="15" fill="rgb(216,123,35)"/><text x="45.5600%" y="431.50"></text></g><g><title>__do_softirq (4 samples, 0.64%)</title><rect x="45.4690%" y="405" width="0.6359%" height="15" fill="rgb(212,68,40)"/><text x="45.7190%" y="415.50"></text></g><g><title>net_rx_action (4 samples, 0.64%)</title><rect x="45.4690%" y="389" width="0.6359%" height="15" fill="rgb(254,125,32)"/><text x="45.7190%" y="399.50"></text></g><g><title>process_backlog (4 samples, 0.64%)</title><rect x="45.4690%" y="373" width="0.6359%" height="15" fill="rgb(253,97,22)"/><text x="45.7190%" y="383.50"></text></g><g><title>__netif_receive_skb_one_core (4 samples, 0.64%)</title><rect x="45.4690%" y="357" width="0.6359%" height="15" fill="rgb(241,101,14)"/><text x="45.7190%" y="367.50"></text></g><g><title>ip_rcv (4 samples, 0.64%)</title><rect x="45.4690%" y="341" width="0.6359%" height="15" fill="rgb(238,103,29)"/><text x="45.7190%" y="351.50"></text></g><g><title>ip_local_deliver (4 samples, 0.64%)</title><rect x="45.4690%" y="325" width="0.6359%" height="15" fill="rgb(233,195,47)"/><text x="45.7190%" y="335.50"></text></g><g><title>ip_local_deliver_finish (4 samples, 0.64%)</title><rect x="45.4690%" y="309" width="0.6359%" height="15" fill="rgb(246,218,30)"/><text x="45.7190%" y="319.50"></text></g><g><title>ip_protocol_deliver_rcu (4 samples, 0.64%)</title><rect x="45.4690%" y="293" width="0.6359%" height="15" fill="rgb(219,145,47)"/><text x="45.7190%" y="303.50"></text></g><g><title>tcp_v4_rcv (4 samples, 0.64%)</title><rect x="45.4690%" y="277" width="0.6359%" height="15" fill="rgb(243,12,26)"/><text x="45.7190%" y="287.50"></text></g><g><title>tcp_v4_do_rcv (3 samples, 0.48%)</title><rect x="45.6280%" y="261" width="0.4769%" height="15" fill="rgb(214,87,16)"/><text x="45.8780%" y="271.50"></text></g><g><title>tcp_rcv_established (3 samples, 0.48%)</title><rect x="45.6280%" y="245" width="0.4769%" height="15" fill="rgb(208,99,42)"/><text x="45.8780%" y="255.50"></text></g><g><title>tcp_ack (3 samples, 0.48%)</title><rect x="45.6280%" y="229" width="0.4769%" height="15" fill="rgb(253,99,2)"/><text x="45.8780%" y="239.50"></text></g><g><title>tcp_schedule_loss_probe.part.0 (1 samples, 0.16%)</title><rect x="45.9459%" y="213" width="0.1590%" height="15" fill="rgb(220,168,23)"/><text x="46.1959%" y="223.50"></text></g><g><title>kfree_skbmem (1 samples, 0.16%)</title><rect x="46.1049%" y="517" width="0.1590%" height="15" fill="rgb(242,38,24)"/><text x="46.3549%" y="527.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.16%)</title><rect x="46.2639%" y="501" width="0.1590%" height="15" fill="rgb(225,182,9)"/><text x="46.5139%" y="511.50"></text></g><g><title>preempt_count_add (1 samples, 0.16%)</title><rect x="46.2639%" y="485" width="0.1590%" height="15" fill="rgb(243,178,37)"/><text x="46.5139%" y="495.50"></text></g><g><title>in_lock_functions (1 samples, 0.16%)</title><rect x="46.2639%" y="469" width="0.1590%" height="15" fill="rgb(232,139,19)"/><text x="46.5139%" y="479.50"></text></g><g><title>add_wait_queue (1 samples, 0.16%)</title><rect x="46.4229%" y="501" width="0.1590%" height="15" fill="rgb(225,201,24)"/><text x="46.6729%" y="511.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.16%)</title><rect x="46.4229%" y="485" width="0.1590%" height="15" fill="rgb(221,47,46)"/><text x="46.6729%" y="495.50"></text></g><g><title>preempt_count_add (1 samples, 0.16%)</title><rect x="46.4229%" y="469" width="0.1590%" height="15" fill="rgb(249,23,13)"/><text x="46.6729%" y="479.50"></text></g><g><title>update_curr (1 samples, 0.16%)</title><rect x="46.5819%" y="405" width="0.1590%" height="15" fill="rgb(219,9,5)"/><text x="46.8319%" y="415.50"></text></g><g><title>__cgroup_account_cputime (1 samples, 0.16%)</title><rect x="46.5819%" y="389" width="0.1590%" height="15" fill="rgb(254,171,16)"/><text x="46.8319%" y="399.50"></text></g><g><title>preempt_count_add (1 samples, 0.16%)</title><rect x="46.5819%" y="373" width="0.1590%" height="15" fill="rgb(230,171,20)"/><text x="46.8319%" y="383.50"></text></g><g><title>dequeue_task_fair (2 samples, 0.32%)</title><rect x="46.5819%" y="437" width="0.3180%" height="15" fill="rgb(210,71,41)"/><text x="46.8319%" y="447.50"></text></g><g><title>dequeue_entity (2 samples, 0.32%)</title><rect x="46.5819%" y="421" width="0.3180%" height="15" fill="rgb(206,173,20)"/><text x="46.8319%" y="431.50"></text></g><g><title>update_load_avg (1 samples, 0.16%)</title><rect x="46.7409%" y="405" width="0.1590%" height="15" fill="rgb(233,88,34)"/><text x="46.9909%" y="415.50"></text></g><g><title>finish_task_switch (1 samples, 0.16%)</title><rect x="46.8998%" y="437" width="0.1590%" height="15" fill="rgb(223,209,46)"/><text x="47.1498%" y="447.50"></text></g><g><title>__perf_event_task_sched_in (1 samples, 0.16%)</title><rect x="46.8998%" y="421" width="0.1590%" height="15" fill="rgb(250,43,18)"/><text x="47.1498%" y="431.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (1 samples, 0.16%)</title><rect x="46.8998%" y="405" width="0.1590%" height="15" fill="rgb(208,13,10)"/><text x="47.1498%" y="415.50"></text></g><g><title>native_write_msr (1 samples, 0.16%)</title><rect x="46.8998%" y="389" width="0.1590%" height="15" fill="rgb(212,200,36)"/><text x="47.1498%" y="399.50"></text></g><g><title>pick_next_task_fair (1 samples, 0.16%)</title><rect x="47.0588%" y="437" width="0.1590%" height="15" fill="rgb(225,90,30)"/><text x="47.3088%" y="447.50"></text></g><g><title>newidle_balance (1 samples, 0.16%)</title><rect x="47.0588%" y="421" width="0.1590%" height="15" fill="rgb(236,182,39)"/><text x="47.3088%" y="431.50"></text></g><g><title>psi_task_change (1 samples, 0.16%)</title><rect x="47.2178%" y="437" width="0.1590%" height="15" fill="rgb(212,144,35)"/><text x="47.4678%" y="447.50"></text></g><g><title>psi_group_change (1 samples, 0.16%)</title><rect x="47.2178%" y="421" width="0.1590%" height="15" fill="rgb(228,63,44)"/><text x="47.4678%" y="431.50"></text></g><g><title>put_prev_task_fair (1 samples, 0.16%)</title><rect x="47.3768%" y="437" width="0.1590%" height="15" fill="rgb(228,109,6)"/><text x="47.6268%" y="447.50"></text></g><g><title>put_prev_entity (1 samples, 0.16%)</title><rect x="47.3768%" y="421" width="0.1590%" height="15" fill="rgb(238,117,24)"/><text x="47.6268%" y="431.50"></text></g><g><title>sk_wait_data (9 samples, 1.43%)</title><rect x="46.2639%" y="517" width="1.4308%" height="15" fill="rgb(242,26,26)"/><text x="46.5139%" y="527.50"></text></g><g><title>wait_woken (7 samples, 1.11%)</title><rect x="46.5819%" y="501" width="1.1129%" height="15" fill="rgb(221,92,48)"/><text x="46.8319%" y="511.50"></text></g><g><title>schedule_timeout (7 samples, 1.11%)</title><rect x="46.5819%" y="485" width="1.1129%" height="15" fill="rgb(209,209,32)"/><text x="46.8319%" y="495.50"></text></g><g><title>schedule (7 samples, 1.11%)</title><rect x="46.5819%" y="469" width="1.1129%" height="15" fill="rgb(221,70,22)"/><text x="46.8319%" y="479.50"></text></g><g><title>__schedule (7 samples, 1.11%)</title><rect x="46.5819%" y="453" width="1.1129%" height="15" fill="rgb(248,145,5)"/><text x="46.8319%" y="463.50"></text></g><g><title>uclamp_rq_dec_id (1 samples, 0.16%)</title><rect x="47.5358%" y="437" width="0.1590%" height="15" fill="rgb(226,116,26)"/><text x="47.7858%" y="447.50"></text></g><g><title>inet_recvmsg (25 samples, 3.97%)</title><rect x="44.1971%" y="549" width="3.9746%" height="15" fill="rgb(244,5,17)"/><text x="44.4471%" y="559.50">inet..</text></g><g><title>tcp_recvmsg (25 samples, 3.97%)</title><rect x="44.1971%" y="533" width="3.9746%" height="15" fill="rgb(252,159,33)"/><text x="44.4471%" y="543.50">tcp_..</text></g><g><title>skb_copy_datagram_iter (3 samples, 0.48%)</title><rect x="47.6948%" y="517" width="0.4769%" height="15" fill="rgb(206,71,0)"/><text x="47.9448%" y="527.50"></text></g><g><title>__skb_datagram_iter (3 samples, 0.48%)</title><rect x="47.6948%" y="501" width="0.4769%" height="15" fill="rgb(233,118,54)"/><text x="47.9448%" y="511.50"></text></g><g><title>simple_copy_to_iter (2 samples, 0.32%)</title><rect x="47.8537%" y="485" width="0.3180%" height="15" fill="rgb(234,83,48)"/><text x="48.1037%" y="495.50"></text></g><g><title>__check_object_size (2 samples, 0.32%)</title><rect x="47.8537%" y="469" width="0.3180%" height="15" fill="rgb(228,3,54)"/><text x="48.1037%" y="479.50"></text></g><g><title>__virt_addr_valid (1 samples, 0.16%)</title><rect x="48.0127%" y="453" width="0.1590%" height="15" fill="rgb(226,155,13)"/><text x="48.2627%" y="463.50"></text></g><g><title>do_syscall_64 (28 samples, 4.45%)</title><rect x="44.1971%" y="597" width="4.4515%" height="15" fill="rgb(241,28,37)"/><text x="44.4471%" y="607.50">do_sy..</text></g><g><title>__x64_sys_recvfrom (28 samples, 4.45%)</title><rect x="44.1971%" y="581" width="4.4515%" height="15" fill="rgb(233,93,10)"/><text x="44.4471%" y="591.50">__x64..</text></g><g><title>__sys_recvfrom (28 samples, 4.45%)</title><rect x="44.1971%" y="565" width="4.4515%" height="15" fill="rgb(225,113,19)"/><text x="44.4471%" y="575.50">__sys..</text></g><g><title>sockfd_lookup_light (3 samples, 0.48%)</title><rect x="48.1717%" y="549" width="0.4769%" height="15" fill="rgb(241,2,18)"/><text x="48.4217%" y="559.50"></text></g><g><title>__fget_light (2 samples, 0.32%)</title><rect x="48.3307%" y="533" width="0.3180%" height="15" fill="rgb(228,207,21)"/><text x="48.5807%" y="543.50"></text></g><g><title>__fget_files (2 samples, 0.32%)</title><rect x="48.3307%" y="517" width="0.3180%" height="15" fill="rgb(213,211,35)"/><text x="48.5807%" y="527.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (33 samples, 5.25%)</title><rect x="43.8792%" y="709" width="5.2464%" height="15" fill="rgb(209,83,10)"/><text x="44.1292%" y="719.50">&lt;std::..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (32 samples, 5.09%)</title><rect x="44.0382%" y="693" width="5.0874%" height="15" fill="rgb(209,164,1)"/><text x="44.2882%" y="703.50">&lt;std::..</text></g><g><title>std::sys_common::net::TcpStream::read (32 samples, 5.09%)</title><rect x="44.0382%" y="677" width="5.0874%" height="15" fill="rgb(213,184,43)"/><text x="44.2882%" y="687.50">std::s..</text></g><g><title>std::sys::unix::net::Socket::read (32 samples, 5.09%)</title><rect x="44.0382%" y="661" width="5.0874%" height="15" fill="rgb(231,61,34)"/><text x="44.2882%" y="671.50">std::s..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (32 samples, 5.09%)</title><rect x="44.0382%" y="645" width="5.0874%" height="15" fill="rgb(235,75,3)"/><text x="44.2882%" y="655.50">std::s..</text></g><g><title>__libc_recv (32 samples, 5.09%)</title><rect x="44.0382%" y="629" width="5.0874%" height="15" fill="rgb(220,106,47)"/><text x="44.2882%" y="639.50">__libc..</text></g><g><title>entry_SYSCALL_64 (31 samples, 4.93%)</title><rect x="44.1971%" y="613" width="4.9285%" height="15" fill="rgb(210,196,33)"/><text x="44.4471%" y="623.50">entry_..</text></g><g><title>prepare_exit_to_usermode (3 samples, 0.48%)</title><rect x="48.6486%" y="597" width="0.4769%" height="15" fill="rgb(229,154,42)"/><text x="48.8986%" y="607.50"></text></g><g><title>msql_srv::packet::PacketReader&lt;R&gt;::next (35 samples, 5.56%)</title><rect x="43.7202%" y="725" width="5.5644%" height="15" fill="rgb(228,114,26)"/><text x="43.9702%" y="735.50">msql_sr..</text></g><g><title>__memset_avx2_erms (1 samples, 0.16%)</title><rect x="49.1256%" y="709" width="0.1590%" height="15" fill="rgb(208,144,1)"/><text x="49.3756%" y="719.50"></text></g><g><title>__pthread_disable_asynccancel (1 samples, 0.16%)</title><rect x="49.2846%" y="661" width="0.1590%" height="15" fill="rgb(239,112,37)"/><text x="49.5346%" y="671.50"></text></g><g><title>fput_many (1 samples, 0.16%)</title><rect x="49.6025%" y="597" width="0.1590%" height="15" fill="rgb(210,96,50)"/><text x="49.8525%" y="607.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.16%)</title><rect x="49.7615%" y="565" width="0.1590%" height="15" fill="rgb(222,178,2)"/><text x="50.0115%" y="575.50"></text></g><g><title>__ip_local_out (1 samples, 0.16%)</title><rect x="50.7154%" y="485" width="0.1590%" height="15" fill="rgb(226,74,18)"/><text x="50.9654%" y="495.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.16%)</title><rect x="50.8744%" y="485" width="0.1590%" height="15" fill="rgb(225,67,54)"/><text x="51.1244%" y="495.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.16%)</title><rect x="51.5103%" y="437" width="0.1590%" height="15" fill="rgb(251,92,32)"/><text x="51.7603%" y="447.50"></text></g><g><title>preempt_count_sub (1 samples, 0.16%)</title><rect x="51.5103%" y="421" width="0.1590%" height="15" fill="rgb(228,149,22)"/><text x="51.7603%" y="431.50"></text></g><g><title>dev_hard_start_xmit (1 samples, 0.16%)</title><rect x="51.6693%" y="437" width="0.1590%" height="15" fill="rgb(243,54,13)"/><text x="51.9193%" y="447.50"></text></g><g><title>loopback_xmit (1 samples, 0.16%)</title><rect x="51.6693%" y="421" width="0.1590%" height="15" fill="rgb(243,180,28)"/><text x="51.9193%" y="431.50"></text></g><g><title>tcp_wfree (1 samples, 0.16%)</title><rect x="51.6693%" y="405" width="0.1590%" height="15" fill="rgb(208,167,24)"/><text x="51.9193%" y="415.50"></text></g><g><title>__dev_queue_xmit (4 samples, 0.64%)</title><rect x="51.3514%" y="453" width="0.6359%" height="15" fill="rgb(245,73,45)"/><text x="51.6014%" y="463.50"></text></g><g><title>validate_xmit_skb (1 samples, 0.16%)</title><rect x="51.8283%" y="437" width="0.1590%" height="15" fill="rgb(237,203,48)"/><text x="52.0783%" y="447.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.16%)</title><rect x="52.1463%" y="373" width="0.1590%" height="15" fill="rgb(211,197,16)"/><text x="52.3963%" y="383.50"></text></g><g><title>__inet_lookup_established (1 samples, 0.16%)</title><rect x="52.6232%" y="261" width="0.1590%" height="15" fill="rgb(243,99,51)"/><text x="52.8732%" y="271.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (1 samples, 0.16%)</title><rect x="52.7822%" y="245" width="0.1590%" height="15" fill="rgb(215,123,29)"/><text x="53.0322%" y="255.50"></text></g><g><title>sk_filter_trim_cap (2 samples, 0.32%)</title><rect x="52.7822%" y="261" width="0.3180%" height="15" fill="rgb(239,186,37)"/><text x="53.0322%" y="271.50"></text></g><g><title>security_sock_rcv_skb (1 samples, 0.16%)</title><rect x="52.9412%" y="245" width="0.1590%" height="15" fill="rgb(252,136,39)"/><text x="53.1912%" y="255.50"></text></g><g><title>sk_reset_timer (1 samples, 0.16%)</title><rect x="53.1002%" y="229" width="0.1590%" height="15" fill="rgb(223,213,32)"/><text x="53.3502%" y="239.50"></text></g><g><title>__mod_timer (1 samples, 0.16%)</title><rect x="53.1002%" y="213" width="0.1590%" height="15" fill="rgb(233,115,5)"/><text x="53.3502%" y="223.50"></text></g><g><title>_raw_spin_unlock (2 samples, 0.32%)</title><rect x="53.2591%" y="165" width="0.3180%" height="15" fill="rgb(207,226,44)"/><text x="53.5091%" y="175.50"></text></g><g><title>enqueue_task (2 samples, 0.32%)</title><rect x="53.5771%" y="165" width="0.3180%" height="15" fill="rgb(208,126,0)"/><text x="53.8271%" y="175.50"></text></g><g><title>psi_task_change (2 samples, 0.32%)</title><rect x="53.5771%" y="149" width="0.3180%" height="15" fill="rgb(244,66,21)"/><text x="53.8271%" y="159.50"></text></g><g><title>psi_group_change (2 samples, 0.32%)</title><rect x="53.5771%" y="133" width="0.3180%" height="15" fill="rgb(222,97,12)"/><text x="53.8271%" y="143.50"></text></g><g><title>account_entity_enqueue (1 samples, 0.16%)</title><rect x="54.0541%" y="133" width="0.1590%" height="15" fill="rgb(219,213,19)"/><text x="54.3041%" y="143.50"></text></g><g><title>enqueue_task_fair (3 samples, 0.48%)</title><rect x="53.8951%" y="165" width="0.4769%" height="15" fill="rgb(252,169,30)"/><text x="54.1451%" y="175.50"></text></g><g><title>enqueue_entity (2 samples, 0.32%)</title><rect x="54.0541%" y="149" width="0.3180%" height="15" fill="rgb(206,32,51)"/><text x="54.3041%" y="159.50"></text></g><g><title>reweight_entity (1 samples, 0.16%)</title><rect x="54.2130%" y="133" width="0.1590%" height="15" fill="rgb(250,172,42)"/><text x="54.4630%" y="143.50"></text></g><g><title>sock_def_readable (8 samples, 1.27%)</title><rect x="53.2591%" y="229" width="1.2719%" height="15" fill="rgb(209,34,43)"/><text x="53.5091%" y="239.50"></text></g><g><title>__wake_up_common_lock (8 samples, 1.27%)</title><rect x="53.2591%" y="213" width="1.2719%" height="15" fill="rgb(223,11,35)"/><text x="53.5091%" y="223.50"></text></g><g><title>__wake_up_common (8 samples, 1.27%)</title><rect x="53.2591%" y="197" width="1.2719%" height="15" fill="rgb(251,219,26)"/><text x="53.5091%" y="207.50"></text></g><g><title>try_to_wake_up (8 samples, 1.27%)</title><rect x="53.2591%" y="181" width="1.2719%" height="15" fill="rgb(231,119,3)"/><text x="53.5091%" y="191.50"></text></g><g><title>update_rq_clock (1 samples, 0.16%)</title><rect x="54.3720%" y="165" width="0.1590%" height="15" fill="rgb(216,97,11)"/><text x="54.6220%" y="175.50"></text></g><g><title>__kfree_skb (3 samples, 0.48%)</title><rect x="54.6900%" y="213" width="0.4769%" height="15" fill="rgb(223,59,9)"/><text x="54.9400%" y="223.50"></text></g><g><title>skb_release_data (3 samples, 0.48%)</title><rect x="54.6900%" y="197" width="0.4769%" height="15" fill="rgb(233,93,31)"/><text x="54.9400%" y="207.50"></text></g><g><title>tcp_ack (5 samples, 0.79%)</title><rect x="54.5310%" y="229" width="0.7949%" height="15" fill="rgb(239,81,33)"/><text x="54.7810%" y="239.50"></text></g><g><title>tcp_schedule_loss_probe (1 samples, 0.16%)</title><rect x="55.1669%" y="213" width="0.1590%" height="15" fill="rgb(213,120,34)"/><text x="55.4169%" y="223.50"></text></g><g><title>tcp_check_space (1 samples, 0.16%)</title><rect x="55.3259%" y="229" width="0.1590%" height="15" fill="rgb(243,49,53)"/><text x="55.5759%" y="239.50"></text></g><g><title>tcp_event_data_recv (1 samples, 0.16%)</title><rect x="55.4849%" y="229" width="0.1590%" height="15" fill="rgb(247,216,33)"/><text x="55.7349%" y="239.50"></text></g><g><title>ip_local_deliver (23 samples, 3.66%)</title><rect x="52.3052%" y="325" width="3.6566%" height="15" fill="rgb(226,26,14)"/><text x="52.5552%" y="335.50">ip_l..</text></g><g><title>ip_local_deliver_finish (23 samples, 3.66%)</title><rect x="52.3052%" y="309" width="3.6566%" height="15" fill="rgb(215,49,53)"/><text x="52.5552%" y="319.50">ip_l..</text></g><g><title>ip_protocol_deliver_rcu (23 samples, 3.66%)</title><rect x="52.3052%" y="293" width="3.6566%" height="15" fill="rgb(245,162,40)"/><text x="52.5552%" y="303.50">ip_p..</text></g><g><title>tcp_v4_rcv (22 samples, 3.50%)</title><rect x="52.4642%" y="277" width="3.4976%" height="15" fill="rgb(229,68,17)"/><text x="52.7142%" y="287.50">tcp..</text></g><g><title>tcp_v4_do_rcv (18 samples, 2.86%)</title><rect x="53.1002%" y="261" width="2.8617%" height="15" fill="rgb(213,182,10)"/><text x="53.3502%" y="271.50">tc..</text></g><g><title>tcp_rcv_established (18 samples, 2.86%)</title><rect x="53.1002%" y="245" width="2.8617%" height="15" fill="rgb(245,125,30)"/><text x="53.3502%" y="255.50">tc..</text></g><g><title>tcp_queue_rcv (2 samples, 0.32%)</title><rect x="55.6439%" y="229" width="0.3180%" height="15" fill="rgb(232,202,2)"/><text x="55.8939%" y="239.50"></text></g><g><title>__ip_queue_xmit (34 samples, 5.41%)</title><rect x="50.7154%" y="501" width="5.4054%" height="15" fill="rgb(237,140,51)"/><text x="50.9654%" y="511.50">__ip_qu..</text></g><g><title>ip_output (32 samples, 5.09%)</title><rect x="51.0334%" y="485" width="5.0874%" height="15" fill="rgb(236,157,25)"/><text x="51.2834%" y="495.50">ip_out..</text></g><g><title>ip_finish_output2 (32 samples, 5.09%)</title><rect x="51.0334%" y="469" width="5.0874%" height="15" fill="rgb(219,209,0)"/><text x="51.2834%" y="479.50">ip_fin..</text></g><g><title>__local_bh_enable_ip (26 samples, 4.13%)</title><rect x="51.9873%" y="453" width="4.1335%" height="15" fill="rgb(240,116,54)"/><text x="52.2373%" y="463.50">__loc..</text></g><g><title>do_softirq (26 samples, 4.13%)</title><rect x="51.9873%" y="437" width="4.1335%" height="15" fill="rgb(216,10,36)"/><text x="52.2373%" y="447.50">do_so..</text></g><g><title>do_softirq_own_stack (26 samples, 4.13%)</title><rect x="51.9873%" y="421" width="4.1335%" height="15" fill="rgb(222,72,44)"/><text x="52.2373%" y="431.50">do_so..</text></g><g><title>__do_softirq (26 samples, 4.13%)</title><rect x="51.9873%" y="405" width="4.1335%" height="15" fill="rgb(232,159,9)"/><text x="52.2373%" y="415.50">__do_..</text></g><g><title>net_rx_action (26 samples, 4.13%)</title><rect x="51.9873%" y="389" width="4.1335%" height="15" fill="rgb(210,39,32)"/><text x="52.2373%" y="399.50">net_r..</text></g><g><title>process_backlog (24 samples, 3.82%)</title><rect x="52.3052%" y="373" width="3.8156%" height="15" fill="rgb(216,194,45)"/><text x="52.5552%" y="383.50">proc..</text></g><g><title>__netif_receive_skb_one_core (24 samples, 3.82%)</title><rect x="52.3052%" y="357" width="3.8156%" height="15" fill="rgb(218,18,35)"/><text x="52.5552%" y="367.50">__ne..</text></g><g><title>ip_rcv (24 samples, 3.82%)</title><rect x="52.3052%" y="341" width="3.8156%" height="15" fill="rgb(207,83,51)"/><text x="52.5552%" y="351.50">ip_r..</text></g><g><title>ip_rcv_core (1 samples, 0.16%)</title><rect x="55.9618%" y="325" width="0.1590%" height="15" fill="rgb(225,63,43)"/><text x="56.2118%" y="335.50"></text></g><g><title>bictcp_cwnd_event (1 samples, 0.16%)</title><rect x="56.1208%" y="501" width="0.1590%" height="15" fill="rgb(207,57,36)"/><text x="56.3708%" y="511.50"></text></g><g><title>tcp_update_skb_after_send (1 samples, 0.16%)</title><rect x="56.2798%" y="501" width="0.1590%" height="15" fill="rgb(216,99,33)"/><text x="56.5298%" y="511.50"></text></g><g><title>__tcp_transmit_skb (37 samples, 5.88%)</title><rect x="50.7154%" y="517" width="5.8824%" height="15" fill="rgb(225,42,16)"/><text x="50.9654%" y="527.50">__tcp_t..</text></g><g><title>tcp_v4_send_check (1 samples, 0.16%)</title><rect x="56.4388%" y="501" width="0.1590%" height="15" fill="rgb(220,201,45)"/><text x="56.6888%" y="511.50"></text></g><g><title>__tcp_push_pending_frames (40 samples, 6.36%)</title><rect x="50.3975%" y="549" width="6.3593%" height="15" fill="rgb(225,33,4)"/><text x="50.6475%" y="559.50">__tcp_pu..</text></g><g><title>tcp_write_xmit (40 samples, 6.36%)</title><rect x="50.3975%" y="533" width="6.3593%" height="15" fill="rgb(224,33,50)"/><text x="50.6475%" y="543.50">tcp_writ..</text></g><g><title>tcp_event_new_data_sent (1 samples, 0.16%)</title><rect x="56.5978%" y="517" width="0.1590%" height="15" fill="rgb(246,198,51)"/><text x="56.8478%" y="527.50"></text></g><g><title>tcp_rearm_rto (1 samples, 0.16%)</title><rect x="56.5978%" y="501" width="0.1590%" height="15" fill="rgb(205,22,4)"/><text x="56.8478%" y="511.50"></text></g><g><title>skb_do_copy_data_nocache (1 samples, 0.16%)</title><rect x="56.7568%" y="549" width="0.1590%" height="15" fill="rgb(206,3,8)"/><text x="57.0068%" y="559.50"></text></g><g><title>_copy_from_iter_full (1 samples, 0.16%)</title><rect x="56.7568%" y="533" width="0.1590%" height="15" fill="rgb(251,23,15)"/><text x="57.0068%" y="543.50"></text></g><g><title>skb_entail (1 samples, 0.16%)</title><rect x="56.9157%" y="549" width="0.1590%" height="15" fill="rgb(252,88,28)"/><text x="57.1657%" y="559.50"></text></g><g><title>__x64_sys_sendto (49 samples, 7.79%)</title><rect x="49.6025%" y="629" width="7.7901%" height="15" fill="rgb(212,127,14)"/><text x="49.8525%" y="639.50">__x64_sys_s..</text></g><g><title>__sys_sendto (49 samples, 7.79%)</title><rect x="49.6025%" y="613" width="7.7901%" height="15" fill="rgb(247,145,37)"/><text x="49.8525%" y="623.50">__sys_sendto</text></g><g><title>sock_sendmsg (48 samples, 7.63%)</title><rect x="49.7615%" y="597" width="7.6312%" height="15" fill="rgb(209,117,53)"/><text x="50.0115%" y="607.50">sock_sendm..</text></g><g><title>tcp_sendmsg (48 samples, 7.63%)</title><rect x="49.7615%" y="581" width="7.6312%" height="15" fill="rgb(212,90,42)"/><text x="50.0115%" y="591.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (47 samples, 7.47%)</title><rect x="49.9205%" y="565" width="7.4722%" height="15" fill="rgb(218,164,37)"/><text x="50.1705%" y="575.50">tcp_sendms..</text></g><g><title>tcp_send_mss (2 samples, 0.32%)</title><rect x="57.0747%" y="549" width="0.3180%" height="15" fill="rgb(246,65,34)"/><text x="57.3247%" y="559.50"></text></g><g><title>tcp_current_mss (2 samples, 0.32%)</title><rect x="57.0747%" y="533" width="0.3180%" height="15" fill="rgb(231,100,33)"/><text x="57.3247%" y="543.50"></text></g><g><title>tcp_established_options (1 samples, 0.16%)</title><rect x="57.2337%" y="517" width="0.1590%" height="15" fill="rgb(228,126,14)"/><text x="57.4837%" y="527.50"></text></g><g><title>do_syscall_64 (51 samples, 8.11%)</title><rect x="49.4436%" y="645" width="8.1081%" height="15" fill="rgb(215,173,21)"/><text x="49.6936%" y="655.50">do_syscall_..</text></g><g><title>syscall_slow_exit_work (1 samples, 0.16%)</title><rect x="57.3927%" y="629" width="0.1590%" height="15" fill="rgb(210,6,40)"/><text x="57.6427%" y="639.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.16%)</title><rect x="57.3927%" y="613" width="0.1590%" height="15" fill="rgb(212,48,18)"/><text x="57.6427%" y="623.50"></text></g><g><title>kfree (1 samples, 0.16%)</title><rect x="57.3927%" y="597" width="0.1590%" height="15" fill="rgb(230,214,11)"/><text x="57.6427%" y="607.50"></text></g><g><title>decor::Shim::run_on_tcp (188 samples, 29.89%)</title><rect x="27.9809%" y="757" width="29.8887%" height="15" fill="rgb(254,105,39)"/><text x="28.2309%" y="767.50">decor::Shim::run_on_tcp</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (188 samples, 29.89%)</title><rect x="27.9809%" y="741" width="29.8887%" height="15" fill="rgb(245,158,5)"/><text x="28.2309%" y="751.50">msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (54 samples, 8.59%)</title><rect x="49.2846%" y="725" width="8.5851%" height="15" fill="rgb(249,208,11)"/><text x="49.5346%" y="735.50">std::io::buf..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (54 samples, 8.59%)</title><rect x="49.2846%" y="709" width="8.5851%" height="15" fill="rgb(210,39,28)"/><text x="49.5346%" y="719.50">&lt;std::net::t..</text></g><g><title>std::sys_common::net::TcpStream::write (54 samples, 8.59%)</title><rect x="49.2846%" y="693" width="8.5851%" height="15" fill="rgb(211,56,53)"/><text x="49.5346%" y="703.50">std::sys_com..</text></g><g><title>__libc_send (54 samples, 8.59%)</title><rect x="49.2846%" y="677" width="8.5851%" height="15" fill="rgb(226,201,30)"/><text x="49.5346%" y="687.50">__libc_send</text></g><g><title>entry_SYSCALL_64 (53 samples, 8.43%)</title><rect x="49.4436%" y="661" width="8.4261%" height="15" fill="rgb(239,101,34)"/><text x="49.6936%" y="671.50">entry_SYSCAL..</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.32%)</title><rect x="57.5517%" y="645" width="0.3180%" height="15" fill="rgb(226,209,5)"/><text x="57.8017%" y="655.50"></text></g><g><title>__GI___clone (189 samples, 30.05%)</title><rect x="27.9809%" y="869" width="30.0477%" height="15" fill="rgb(250,105,47)"/><text x="28.2309%" y="879.50">__GI___clone</text></g><g><title>start_thread (189 samples, 30.05%)</title><rect x="27.9809%" y="853" width="30.0477%" height="15" fill="rgb(230,72,3)"/><text x="28.2309%" y="863.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (189 samples, 30.05%)</title><rect x="27.9809%" y="837" width="30.0477%" height="15" fill="rgb(232,218,39)"/><text x="28.2309%" y="847.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (189 samples, 30.05%)</title><rect x="27.9809%" y="821" width="30.0477%" height="15" fill="rgb(248,166,6)"/><text x="28.2309%" y="831.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::Fn..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (189 samples, 30.05%)</title><rect x="27.9809%" y="805" width="30.0477%" height="15" fill="rgb(247,89,20)"/><text x="28.2309%" y="815.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::Fn..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (189 samples, 30.05%)</title><rect x="27.9809%" y="789" width="30.0477%" height="15" fill="rgb(248,130,54)"/><text x="28.2309%" y="799.50">core::ops::function::FnOnce::call_once{{vtable-s..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (189 samples, 30.05%)</title><rect x="27.9809%" y="773" width="30.0477%" height="15" fill="rgb(234,196,4)"/><text x="28.2309%" y="783.50">std::sys_common::backtrace::__rust_begin_short_b..</text></g><g><title>mysql::conn::Conn::new (1 samples, 0.16%)</title><rect x="57.8696%" y="757" width="0.1590%" height="15" fill="rgb(250,143,31)"/><text x="58.1196%" y="767.50"></text></g><g><title>mysql::conn::opts::from_url (1 samples, 0.16%)</title><rect x="57.8696%" y="741" width="0.1590%" height="15" fill="rgb(211,110,34)"/><text x="58.1196%" y="751.50"></text></g><g><title>url::host::Host::parse (1 samples, 0.16%)</title><rect x="57.8696%" y="725" width="0.1590%" height="15" fill="rgb(215,124,48)"/><text x="58.1196%" y="735.50"></text></g><g><title>idna::domain_to_ascii (1 samples, 0.16%)</title><rect x="57.8696%" y="709" width="0.1590%" height="15" fill="rgb(216,46,13)"/><text x="58.1196%" y="719.50"></text></g><g><title>idna::uts46::Config::to_ascii (1 samples, 0.16%)</title><rect x="57.8696%" y="693" width="0.1590%" height="15" fill="rgb(205,184,25)"/><text x="58.1196%" y="703.50"></text></g><g><title>idna::uts46::processing (1 samples, 0.16%)</title><rect x="57.8696%" y="677" width="0.1590%" height="15" fill="rgb(228,1,10)"/><text x="58.1196%" y="687.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="57.8696%" y="661" width="0.1590%" height="15" fill="rgb(213,116,27)"/><text x="58.1196%" y="671.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.16%)</title><rect x="57.8696%" y="645" width="0.1590%" height="15" fill="rgb(241,95,50)"/><text x="58.1196%" y="655.50"></text></g><g><title>_int_free (1 samples, 0.16%)</title><rect x="58.3466%" y="693" width="0.1590%" height="15" fill="rgb(238,48,32)"/><text x="58.5966%" y="703.50"></text></g><g><title>alloc::fmt::format (2 samples, 0.32%)</title><rect x="58.5056%" y="693" width="0.3180%" height="15" fill="rgb(235,113,49)"/><text x="58.7556%" y="703.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.32%)</title><rect x="58.5056%" y="677" width="0.3180%" height="15" fill="rgb(205,127,43)"/><text x="58.7556%" y="687.50"></text></g><g><title>core::fmt::write (2 samples, 0.32%)</title><rect x="58.5056%" y="661" width="0.3180%" height="15" fill="rgb(250,162,2)"/><text x="58.7556%" y="671.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.16%)</title><rect x="58.6645%" y="645" width="0.1590%" height="15" fill="rgb(220,13,41)"/><text x="58.9145%" y="655.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.16%)</title><rect x="58.6645%" y="629" width="0.1590%" height="15" fill="rgb(249,221,25)"/><text x="58.9145%" y="639.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.16%)</title><rect x="58.6645%" y="613" width="0.1590%" height="15" fill="rgb(215,208,19)"/><text x="58.9145%" y="623.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.16%)</title><rect x="58.8235%" y="693" width="0.1590%" height="15" fill="rgb(236,175,2)"/><text x="59.0735%" y="703.50"></text></g><g><title>hwloc_topology_destroy (1 samples, 0.16%)</title><rect x="58.8235%" y="677" width="0.1590%" height="15" fill="rgb(241,52,2)"/><text x="59.0735%" y="687.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.16%)</title><rect x="58.8235%" y="661" width="0.1590%" height="15" fill="rgb(248,140,14)"/><text x="59.0735%" y="671.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.16%)</title><rect x="58.8235%" y="645" width="0.1590%" height="15" fill="rgb(253,22,42)"/><text x="59.0735%" y="655.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.16%)</title><rect x="58.8235%" y="629" width="0.1590%" height="15" fill="rgb(234,61,47)"/><text x="59.0735%" y="639.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.16%)</title><rect x="58.8235%" y="613" width="0.1590%" height="15" fill="rgb(208,226,15)"/><text x="59.0735%" y="623.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.16%)</title><rect x="58.8235%" y="597" width="0.1590%" height="15" fill="rgb(217,221,4)"/><text x="59.0735%" y="607.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.16%)</title><rect x="58.8235%" y="581" width="0.1590%" height="15" fill="rgb(212,174,34)"/><text x="59.0735%" y="591.50"></text></g><g><title>_int_free (1 samples, 0.16%)</title><rect x="58.8235%" y="565" width="0.1590%" height="15" fill="rgb(253,83,4)"/><text x="59.0735%" y="575.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.32%)</title><rect x="58.9825%" y="597" width="0.3180%" height="15" fill="rgb(250,195,49)"/><text x="59.2325%" y="607.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.48%)</title><rect x="58.9825%" y="613" width="0.4769%" height="15" fill="rgb(241,192,25)"/><text x="59.2325%" y="623.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.16%)</title><rect x="59.3005%" y="597" width="0.1590%" height="15" fill="rgb(208,124,10)"/><text x="59.5505%" y="607.50"></text></g><g><title>_int_malloc (1 samples, 0.16%)</title><rect x="59.3005%" y="581" width="0.1590%" height="15" fill="rgb(222,33,0)"/><text x="59.5505%" y="591.50"></text></g><g><title>__GI___libc_free (1 samples, 0.16%)</title><rect x="59.6184%" y="597" width="0.1590%" height="15" fill="rgb(234,209,28)"/><text x="59.8684%" y="607.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (232 samples, 36.88%)</title><rect x="59.9364%" y="389" width="36.8839%" height="15" fill="rgb(224,11,23)"/><text x="60.1864%" y="399.50">__intel_pmu_enable_all.constprop.0</text></g><g><title>native_write_msr (232 samples, 36.88%)</title><rect x="59.9364%" y="373" width="36.8839%" height="15" fill="rgb(232,99,1)"/><text x="60.1864%" y="383.50">native_write_msr</text></g><g><title>__x64_sys_sched_setaffinity (234 samples, 37.20%)</title><rect x="59.7774%" y="549" width="37.2019%" height="15" fill="rgb(237,95,45)"/><text x="60.0274%" y="559.50">__x64_sys_sched_setaffinity</text></g><g><title>sched_setaffinity (234 samples, 37.20%)</title><rect x="59.7774%" y="533" width="37.2019%" height="15" fill="rgb(208,109,11)"/><text x="60.0274%" y="543.50">sched_setaffinity</text></g><g><title>__set_cpus_allowed_ptr (234 samples, 37.20%)</title><rect x="59.7774%" y="517" width="37.2019%" height="15" fill="rgb(216,190,48)"/><text x="60.0274%" y="527.50">__set_cpus_allowed_ptr</text></g><g><title>stop_one_cpu (234 samples, 37.20%)</title><rect x="59.7774%" y="501" width="37.2019%" height="15" fill="rgb(251,171,36)"/><text x="60.0274%" y="511.50">stop_one_cpu</text></g><g><title>cpu_stop_queue_work (234 samples, 37.20%)</title><rect x="59.7774%" y="485" width="37.2019%" height="15" fill="rgb(230,62,22)"/><text x="60.0274%" y="495.50">cpu_stop_queue_work</text></g><g><title>preempt_schedule_thunk (234 samples, 37.20%)</title><rect x="59.7774%" y="469" width="37.2019%" height="15" fill="rgb(225,114,35)"/><text x="60.0274%" y="479.50">preempt_schedule_thunk</text></g><g><title>preempt_schedule_common (234 samples, 37.20%)</title><rect x="59.7774%" y="453" width="37.2019%" height="15" fill="rgb(215,118,42)"/><text x="60.0274%" y="463.50">preempt_schedule_common</text></g><g><title>__schedule (234 samples, 37.20%)</title><rect x="59.7774%" y="437" width="37.2019%" height="15" fill="rgb(243,119,21)"/><text x="60.0274%" y="447.50">__schedule</text></g><g><title>finish_task_switch (234 samples, 37.20%)</title><rect x="59.7774%" y="421" width="37.2019%" height="15" fill="rgb(252,177,53)"/><text x="60.0274%" y="431.50">finish_task_switch</text></g><g><title>__perf_event_task_sched_in (234 samples, 37.20%)</title><rect x="59.7774%" y="405" width="37.2019%" height="15" fill="rgb(237,209,29)"/><text x="60.0274%" y="415.50">__perf_event_task_sched_in</text></g><g><title>_raw_spin_unlock (1 samples, 0.16%)</title><rect x="96.8203%" y="389" width="0.1590%" height="15" fill="rgb(212,65,23)"/><text x="97.0703%" y="399.50"></text></g><g><title>do_syscall_64 (235 samples, 37.36%)</title><rect x="59.7774%" y="565" width="37.3609%" height="15" fill="rgb(230,222,46)"/><text x="60.0274%" y="575.50">do_syscall_64</text></g><g><title>syscall_slow_exit_work (1 samples, 0.16%)</title><rect x="96.9793%" y="549" width="0.1590%" height="15" fill="rgb(215,135,32)"/><text x="97.2293%" y="559.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.16%)</title><rect x="96.9793%" y="533" width="0.1590%" height="15" fill="rgb(246,101,22)"/><text x="97.2293%" y="543.50"></text></g><g><title>kfree (1 samples, 0.16%)</title><rect x="96.9793%" y="517" width="0.1590%" height="15" fill="rgb(206,107,13)"/><text x="97.2293%" y="527.50"></text></g><g><title>entry_SYSCALL_64 (236 samples, 37.52%)</title><rect x="59.7774%" y="581" width="37.5199%" height="15" fill="rgb(250,100,44)"/><text x="60.0274%" y="591.50">entry_SYSCALL_64</text></g><g><title>prepare_exit_to_usermode (1 samples, 0.16%)</title><rect x="97.1383%" y="565" width="0.1590%" height="15" fill="rgb(231,147,38)"/><text x="97.3883%" y="575.50"></text></g><g><title>hwloc::Topology::new (243 samples, 38.63%)</title><rect x="58.9825%" y="693" width="38.6328%" height="15" fill="rgb(229,8,40)"/><text x="59.2325%" y="703.50">hwloc::Topology::new</text></g><g><title>hwloc_topology_load (243 samples, 38.63%)</title><rect x="58.9825%" y="677" width="38.6328%" height="15" fill="rgb(221,135,30)"/><text x="59.2325%" y="687.50">hwloc_topology_load</text></g><g><title>[libhwloc.so.15.2.0] (243 samples, 38.63%)</title><rect x="58.9825%" y="661" width="38.6328%" height="15" fill="rgb(249,193,18)"/><text x="59.2325%" y="671.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (243 samples, 38.63%)</title><rect x="58.9825%" y="645" width="38.6328%" height="15" fill="rgb(209,133,39)"/><text x="59.2325%" y="655.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (243 samples, 38.63%)</title><rect x="58.9825%" y="629" width="38.6328%" height="15" fill="rgb(232,100,14)"/><text x="59.2325%" y="639.50">[libhwloc.so.15.2.0]</text></g><g><title>hwloc_linux_set_tid_cpubind (240 samples, 38.16%)</title><rect x="59.4595%" y="613" width="38.1558%" height="15" fill="rgb(224,185,1)"/><text x="59.7095%" y="623.50">hwloc_linux_set_tid_cpubind</text></g><g><title>__GI___sched_setaffinity_new (238 samples, 37.84%)</title><rect x="59.7774%" y="597" width="37.8378%" height="15" fill="rgb(223,139,8)"/><text x="60.0274%" y="607.50">__GI___sched_setaffinity_new</text></g><g><title>syscall_return_via_sysret (2 samples, 0.32%)</title><rect x="97.2973%" y="581" width="0.3180%" height="15" fill="rgb(232,213,38)"/><text x="97.5473%" y="591.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (2 samples, 0.32%)</title><rect x="97.6153%" y="693" width="0.3180%" height="15" fill="rgb(207,94,22)"/><text x="97.8653%" y="703.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.16%)</title><rect x="97.7742%" y="677" width="0.1590%" height="15" fill="rgb(219,183,54)"/><text x="98.0242%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.16%)</title><rect x="97.7742%" y="661" width="0.1590%" height="15" fill="rgb(216,185,54)"/><text x="98.0242%" y="671.50"></text></g><g><title>__libc_start_main (252 samples, 40.06%)</title><rect x="58.0286%" y="853" width="40.0636%" height="15" fill="rgb(254,217,39)"/><text x="58.2786%" y="863.50">__libc_start_main</text></g><g><title>main (252 samples, 40.06%)</title><rect x="58.0286%" y="837" width="40.0636%" height="15" fill="rgb(240,178,23)"/><text x="58.2786%" y="847.50">main</text></g><g><title>std::rt::lang_start_internal (252 samples, 40.06%)</title><rect x="58.0286%" y="821" width="40.0636%" height="15" fill="rgb(218,11,47)"/><text x="58.2786%" y="831.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (252 samples, 40.06%)</title><rect x="58.0286%" y="805" width="40.0636%" height="15" fill="rgb(218,51,51)"/><text x="58.2786%" y="815.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (252 samples, 40.06%)</title><rect x="58.0286%" y="789" width="40.0636%" height="15" fill="rgb(238,126,27)"/><text x="58.2786%" y="799.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (252 samples, 40.06%)</title><rect x="58.0286%" y="773" width="40.0636%" height="15" fill="rgb(249,202,22)"/><text x="58.2786%" y="783.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (252 samples, 40.06%)</title><rect x="58.0286%" y="757" width="40.0636%" height="15" fill="rgb(254,195,49)"/><text x="58.2786%" y="767.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; ..</text></g><g><title>std::rt::lang_start::_{{closure}} (252 samples, 40.06%)</title><rect x="58.0286%" y="741" width="40.0636%" height="15" fill="rgb(208,123,14)"/><text x="58.2786%" y="751.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (252 samples, 40.06%)</title><rect x="58.0286%" y="725" width="40.0636%" height="15" fill="rgb(224,200,8)"/><text x="58.2786%" y="735.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>lobsters::main (252 samples, 40.06%)</title><rect x="58.0286%" y="709" width="40.0636%" height="15" fill="rgb(217,61,36)"/><text x="58.2786%" y="719.50">lobsters::main</text></g><g><title>std::net::each_addr (1 samples, 0.16%)</title><rect x="97.9332%" y="693" width="0.1590%" height="15" fill="rgb(206,35,45)"/><text x="98.1832%" y="703.50"></text></g><g><title>std::sys_common::net::TcpListener::bind (1 samples, 0.16%)</title><rect x="97.9332%" y="677" width="0.1590%" height="15" fill="rgb(217,65,33)"/><text x="98.1832%" y="687.50"></text></g><g><title>std::sys::unix::net::Socket::new (1 samples, 0.16%)</title><rect x="97.9332%" y="661" width="0.1590%" height="15" fill="rgb(222,158,48)"/><text x="98.1832%" y="671.50"></text></g><g><title>__GI___socket (1 samples, 0.16%)</title><rect x="97.9332%" y="645" width="0.1590%" height="15" fill="rgb(254,2,54)"/><text x="98.1832%" y="655.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.16%)</title><rect x="97.9332%" y="629" width="0.1590%" height="15" fill="rgb(250,143,38)"/><text x="98.1832%" y="639.50"></text></g><g><title>do_syscall_64 (1 samples, 0.16%)</title><rect x="97.9332%" y="613" width="0.1590%" height="15" fill="rgb(248,25,0)"/><text x="98.1832%" y="623.50"></text></g><g><title>__x64_sys_socket (1 samples, 0.16%)</title><rect x="97.9332%" y="597" width="0.1590%" height="15" fill="rgb(206,152,27)"/><text x="98.1832%" y="607.50"></text></g><g><title>__sys_socket (1 samples, 0.16%)</title><rect x="97.9332%" y="581" width="0.1590%" height="15" fill="rgb(240,77,30)"/><text x="98.1832%" y="591.50"></text></g><g><title>__sock_create (1 samples, 0.16%)</title><rect x="97.9332%" y="565" width="0.1590%" height="15" fill="rgb(231,5,3)"/><text x="98.1832%" y="575.50"></text></g><g><title>sock_alloc (1 samples, 0.16%)</title><rect x="97.9332%" y="549" width="0.1590%" height="15" fill="rgb(207,226,32)"/><text x="98.1832%" y="559.50"></text></g><g><title>new_inode_pseudo (1 samples, 0.16%)</title><rect x="97.9332%" y="533" width="0.1590%" height="15" fill="rgb(222,207,47)"/><text x="98.1832%" y="543.50"></text></g><g><title>alloc_inode (1 samples, 0.16%)</title><rect x="97.9332%" y="517" width="0.1590%" height="15" fill="rgb(229,115,45)"/><text x="98.1832%" y="527.50"></text></g><g><title>inode_init_always (1 samples, 0.16%)</title><rect x="97.9332%" y="501" width="0.1590%" height="15" fill="rgb(224,191,6)"/><text x="98.1832%" y="511.50"></text></g><g><title>security_inode_alloc (1 samples, 0.16%)</title><rect x="97.9332%" y="485" width="0.1590%" height="15" fill="rgb(230,227,24)"/><text x="98.1832%" y="495.50"></text></g><g><title>_start (253 samples, 40.22%)</title><rect x="58.0286%" y="869" width="40.2226%" height="15" fill="rgb(228,80,19)"/><text x="58.2786%" y="879.50">_start</text></g><g><title>_dl_start (1 samples, 0.16%)</title><rect x="98.0922%" y="853" width="0.1590%" height="15" fill="rgb(247,229,0)"/><text x="98.3422%" y="863.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.16%)</title><rect x="98.0922%" y="837" width="0.1590%" height="15" fill="rgb(237,194,15)"/><text x="98.3422%" y="847.50"></text></g><g><title>dl_main (1 samples, 0.16%)</title><rect x="98.0922%" y="821" width="0.1590%" height="15" fill="rgb(219,203,20)"/><text x="98.3422%" y="831.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.16%)</title><rect x="98.0922%" y="805" width="0.1590%" height="15" fill="rgb(234,128,8)"/><text x="98.3422%" y="815.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.16%)</title><rect x="98.0922%" y="789" width="0.1590%" height="15" fill="rgb(248,202,8)"/><text x="98.3422%" y="799.50"></text></g><g><title>openaux (1 samples, 0.16%)</title><rect x="98.0922%" y="773" width="0.1590%" height="15" fill="rgb(206,104,37)"/><text x="98.3422%" y="783.50"></text></g><g><title>_dl_map_object (1 samples, 0.16%)</title><rect x="98.0922%" y="757" width="0.1590%" height="15" fill="rgb(223,8,27)"/><text x="98.3422%" y="767.50"></text></g><g><title>_dl_map_object_from_fd (1 samples, 0.16%)</title><rect x="98.0922%" y="741" width="0.1590%" height="15" fill="rgb(216,217,28)"/><text x="98.3422%" y="751.50"></text></g><g><title>__mprotect (1 samples, 0.16%)</title><rect x="98.0922%" y="725" width="0.1590%" height="15" fill="rgb(249,199,1)"/><text x="98.3422%" y="735.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.16%)</title><rect x="98.0922%" y="709" width="0.1590%" height="15" fill="rgb(240,85,17)"/><text x="98.3422%" y="719.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.16%)</title><rect x="98.0922%" y="693" width="0.1590%" height="15" fill="rgb(206,108,45)"/><text x="98.3422%" y="703.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.16%)</title><rect x="98.5692%" y="757" width="0.1590%" height="15" fill="rgb(245,210,41)"/><text x="98.8192%" y="767.50"></text></g><g><title>release_pages (1 samples, 0.16%)</title><rect x="98.5692%" y="741" width="0.1590%" height="15" fill="rgb(206,13,37)"/><text x="98.8192%" y="751.50"></text></g><g><title>[vmlinux] (2 samples, 0.32%)</title><rect x="98.5692%" y="837" width="0.3180%" height="15" fill="rgb(250,61,18)"/><text x="98.8192%" y="847.50"></text></g><g><title>do_group_exit (2 samples, 0.32%)</title><rect x="98.5692%" y="821" width="0.3180%" height="15" fill="rgb(235,172,48)"/><text x="98.8192%" y="831.50"></text></g><g><title>do_exit (2 samples, 0.32%)</title><rect x="98.5692%" y="805" width="0.3180%" height="15" fill="rgb(249,201,17)"/><text x="98.8192%" y="815.50"></text></g><g><title>mmput (2 samples, 0.32%)</title><rect x="98.5692%" y="789" width="0.3180%" height="15" fill="rgb(219,208,6)"/><text x="98.8192%" y="799.50"></text></g><g><title>exit_mmap (2 samples, 0.32%)</title><rect x="98.5692%" y="773" width="0.3180%" height="15" fill="rgb(248,31,23)"/><text x="98.8192%" y="783.50"></text></g><g><title>unmap_vmas (1 samples, 0.16%)</title><rect x="98.7281%" y="757" width="0.1590%" height="15" fill="rgb(245,15,42)"/><text x="98.9781%" y="767.50"></text></g><g><title>unmap_page_range (1 samples, 0.16%)</title><rect x="98.7281%" y="741" width="0.1590%" height="15" fill="rgb(222,217,39)"/><text x="98.9781%" y="751.50"></text></g><g><title>page_remove_rmap.part.0 (1 samples, 0.16%)</title><rect x="98.7281%" y="725" width="0.1590%" height="15" fill="rgb(210,219,27)"/><text x="98.9781%" y="735.50"></text></g><g><title>lobsters (623 samples, 99.05%)</title><rect x="0.0000%" y="885" width="99.0461%" height="15" fill="rgb(252,166,36)"/><text x="0.2500%" y="895.50">lobsters</text></g><g><title>entry_SYSCALL_64 (5 samples, 0.79%)</title><rect x="98.2512%" y="869" width="0.7949%" height="15" fill="rgb(245,132,34)"/><text x="98.5012%" y="879.50"></text></g><g><title>do_syscall_64 (3 samples, 0.48%)</title><rect x="98.5692%" y="853" width="0.4769%" height="15" fill="rgb(236,54,3)"/><text x="98.8192%" y="863.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.16%)</title><rect x="98.8871%" y="837" width="0.1590%" height="15" fill="rgb(241,173,43)"/><text x="99.1371%" y="847.50"></text></g><g><title>do_execve (1 samples, 0.16%)</title><rect x="98.8871%" y="821" width="0.1590%" height="15" fill="rgb(215,190,9)"/><text x="99.1371%" y="831.50"></text></g><g><title>__do_execve_file (1 samples, 0.16%)</title><rect x="98.8871%" y="805" width="0.1590%" height="15" fill="rgb(242,101,16)"/><text x="99.1371%" y="815.50"></text></g><g><title>search_binary_handler.part.0 (1 samples, 0.16%)</title><rect x="98.8871%" y="789" width="0.1590%" height="15" fill="rgb(223,190,21)"/><text x="99.1371%" y="799.50"></text></g><g><title>load_elf_binary (1 samples, 0.16%)</title><rect x="98.8871%" y="773" width="0.1590%" height="15" fill="rgb(215,228,25)"/><text x="99.1371%" y="783.50"></text></g><g><title>__clear_user (1 samples, 0.16%)</title><rect x="98.8871%" y="757" width="0.1590%" height="15" fill="rgb(225,36,22)"/><text x="99.1371%" y="767.50"></text></g><g><title>page_fault (1 samples, 0.16%)</title><rect x="98.8871%" y="741" width="0.1590%" height="15" fill="rgb(251,106,46)"/><text x="99.1371%" y="751.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.16%)</title><rect x="98.8871%" y="725" width="0.1590%" height="15" fill="rgb(208,90,1)"/><text x="99.1371%" y="735.50"></text></g><g><title>handle_mm_fault (1 samples, 0.16%)</title><rect x="98.8871%" y="709" width="0.1590%" height="15" fill="rgb(243,10,4)"/><text x="99.1371%" y="719.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.16%)</title><rect x="98.8871%" y="693" width="0.1590%" height="15" fill="rgb(212,137,27)"/><text x="99.1371%" y="703.50"></text></g><g><title>mem_cgroup_try_charge_delay (1 samples, 0.16%)</title><rect x="98.8871%" y="677" width="0.1590%" height="15" fill="rgb(231,220,49)"/><text x="99.1371%" y="687.50"></text></g><g><title>mem_cgroup_try_charge (1 samples, 0.16%)</title><rect x="98.8871%" y="661" width="0.1590%" height="15" fill="rgb(237,96,20)"/><text x="99.1371%" y="671.50"></text></g><g><title>try_charge (1 samples, 0.16%)</title><rect x="98.8871%" y="645" width="0.1590%" height="15" fill="rgb(239,229,30)"/><text x="99.1371%" y="655.50"></text></g><g><title>all (629 samples, 100%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(219,65,33)"/><text x="0.2500%" y="911.50"></text></g><g><title>perf (6 samples, 0.95%)</title><rect x="99.0461%" y="885" width="0.9539%" height="15" fill="rgb(243,134,7)"/><text x="99.2961%" y="895.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.95%)</title><rect x="99.0461%" y="869" width="0.9539%" height="15" fill="rgb(216,177,54)"/><text x="99.2961%" y="879.50"></text></g><g><title>do_syscall_64 (6 samples, 0.95%)</title><rect x="99.0461%" y="853" width="0.9539%" height="15" fill="rgb(211,160,20)"/><text x="99.2961%" y="863.50"></text></g><g><title>__x64_sys_execve (6 samples, 0.95%)</title><rect x="99.0461%" y="837" width="0.9539%" height="15" fill="rgb(239,85,39)"/><text x="99.2961%" y="847.50"></text></g><g><title>do_execve (6 samples, 0.95%)</title><rect x="99.0461%" y="821" width="0.9539%" height="15" fill="rgb(232,125,22)"/><text x="99.2961%" y="831.50"></text></g><g><title>__do_execve_file (6 samples, 0.95%)</title><rect x="99.0461%" y="805" width="0.9539%" height="15" fill="rgb(244,57,34)"/><text x="99.2961%" y="815.50"></text></g><g><title>search_binary_handler.part.0 (6 samples, 0.95%)</title><rect x="99.0461%" y="789" width="0.9539%" height="15" fill="rgb(214,203,32)"/><text x="99.2961%" y="799.50"></text></g><g><title>load_elf_binary (6 samples, 0.95%)</title><rect x="99.0461%" y="773" width="0.9539%" height="15" fill="rgb(207,58,43)"/><text x="99.2961%" y="783.50"></text></g><g><title>setup_new_exec (6 samples, 0.95%)</title><rect x="99.0461%" y="757" width="0.9539%" height="15" fill="rgb(215,193,15)"/><text x="99.2961%" y="767.50"></text></g><g><title>perf_event_exec (6 samples, 0.95%)</title><rect x="99.0461%" y="741" width="0.9539%" height="15" fill="rgb(232,15,44)"/><text x="99.2961%" y="751.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.79%)</title><rect x="99.2051%" y="725" width="0.7949%" height="15" fill="rgb(212,3,48)"/><text x="99.4551%" y="735.50"></text></g><g><title>native_write_msr (5 samples, 0.79%)</title><rect x="99.2051%" y="709" width="0.7949%" height="15" fill="rgb(218,128,7)"/><text x="99.4551%" y="719.50"></text></g></svg></svg>