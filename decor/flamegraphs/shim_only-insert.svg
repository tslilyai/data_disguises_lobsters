<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="998" onload="init(evt)" viewBox="0 0 1200 998" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="998" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="981.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="981.00"> </text><svg id="frames" x="10" width="1180"><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="0.0000%" y="917" width="0.1546%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="927.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (2 samples, 0.31%)</title><rect x="0.1546%" y="901" width="0.3091%" height="15" fill="rgb(217,0,24)"/><text x="0.4046%" y="911.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (2 samples, 0.31%)</title><rect x="0.4637%" y="901" width="0.3091%" height="15" fill="rgb(221,193,54)"/><text x="0.7137%" y="911.50"></text></g><g><title>std::sys_common::net::TcpStream::read (2 samples, 0.31%)</title><rect x="0.4637%" y="885" width="0.3091%" height="15" fill="rgb(248,212,6)"/><text x="0.7137%" y="895.50"></text></g><g><title>std::sys::unix::net::Socket::read (2 samples, 0.31%)</title><rect x="0.4637%" y="869" width="0.3091%" height="15" fill="rgb(208,68,35)"/><text x="0.7137%" y="879.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (2 samples, 0.31%)</title><rect x="0.4637%" y="853" width="0.3091%" height="15" fill="rgb(232,128,0)"/><text x="0.7137%" y="863.50"></text></g><g><title>__libc_recv (2 samples, 0.31%)</title><rect x="0.4637%" y="837" width="0.3091%" height="15" fill="rgb(207,160,47)"/><text x="0.7137%" y="847.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.31%)</title><rect x="0.4637%" y="821" width="0.3091%" height="15" fill="rgb(228,23,34)"/><text x="0.7137%" y="831.50"></text></g><g><title>[[heap]] (5 samples, 0.77%)</title><rect x="0.1546%" y="917" width="0.7728%" height="15" fill="rgb(218,30,26)"/><text x="0.4046%" y="927.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (1 samples, 0.15%)</title><rect x="0.7728%" y="901" width="0.1546%" height="15" fill="rgb(220,122,19)"/><text x="1.0228%" y="911.50"></text></g><g><title>__libc_send (1 samples, 0.15%)</title><rect x="0.9274%" y="901" width="0.1546%" height="15" fill="rgb(250,228,42)"/><text x="1.1774%" y="911.50"></text></g><g><title>[[stack]] (2 samples, 0.31%)</title><rect x="0.9274%" y="917" width="0.3091%" height="15" fill="rgb(240,193,28)"/><text x="1.1774%" y="927.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="1.0819%" y="901" width="0.1546%" height="15" fill="rgb(216,20,37)"/><text x="1.3319%" y="911.50"></text></g><g><title>&lt;(A,B,C,D,E,F,G,H,I) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.15%)</title><rect x="1.2365%" y="901" width="0.1546%" height="15" fill="rgb(206,188,39)"/><text x="1.4865%" y="911.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.15%)</title><rect x="1.3910%" y="901" width="0.1546%" height="15" fill="rgb(217,207,13)"/><text x="1.6410%" y="911.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.15%)</title><rect x="1.5456%" y="901" width="0.1546%" height="15" fill="rgb(231,73,38)"/><text x="1.7956%" y="911.50"></text></g><g><title>__libc_send (1 samples, 0.15%)</title><rect x="1.7002%" y="901" width="0.1546%" height="15" fill="rgb(225,20,46)"/><text x="1.9502%" y="911.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.15%)</title><rect x="1.7002%" y="885" width="0.1546%" height="15" fill="rgb(210,31,41)"/><text x="1.9502%" y="895.50"></text></g><g><title>[anon] (5 samples, 0.77%)</title><rect x="1.2365%" y="917" width="0.7728%" height="15" fill="rgb(221,200,47)"/><text x="1.4865%" y="927.50"></text></g><g><title>bytes::bytes_mut::BytesMut::set_start (1 samples, 0.15%)</title><rect x="1.8547%" y="901" width="0.1546%" height="15" fill="rgb(226,26,5)"/><text x="2.1047%" y="911.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="2.0093%" y="853" width="0.1546%" height="15" fill="rgb(249,33,26)"/><text x="2.2593%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="2.0093%" y="837" width="0.1546%" height="15" fill="rgb(235,183,28)"/><text x="2.2593%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.15%)</title><rect x="2.0093%" y="821" width="0.1546%" height="15" fill="rgb(221,5,38)"/><text x="2.2593%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="2.0093%" y="805" width="0.1546%" height="15" fill="rgb(247,18,42)"/><text x="2.2593%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.15%)</title><rect x="2.0093%" y="789" width="0.1546%" height="15" fill="rgb(241,131,45)"/><text x="2.2593%" y="799.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="2.0093%" y="773" width="0.1546%" height="15" fill="rgb(249,31,29)"/><text x="2.2593%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="2.1638%" y="821" width="0.1546%" height="15" fill="rgb(225,111,53)"/><text x="2.4138%" y="831.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.15%)</title><rect x="2.1638%" y="805" width="0.1546%" height="15" fill="rgb(238,160,17)"/><text x="2.4138%" y="815.50"></text></g><g><title>_int_realloc (1 samples, 0.15%)</title><rect x="2.1638%" y="789" width="0.1546%" height="15" fill="rgb(214,148,48)"/><text x="2.4138%" y="799.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="2.1638%" y="773" width="0.1546%" height="15" fill="rgb(232,36,49)"/><text x="2.4138%" y="783.50"></text></g><g><title>sysmalloc (1 samples, 0.15%)</title><rect x="2.1638%" y="757" width="0.1546%" height="15" fill="rgb(209,103,24)"/><text x="2.4138%" y="767.50"></text></g><g><title>page_fault (1 samples, 0.15%)</title><rect x="2.1638%" y="741" width="0.1546%" height="15" fill="rgb(229,88,8)"/><text x="2.4138%" y="751.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.15%)</title><rect x="2.1638%" y="725" width="0.1546%" height="15" fill="rgb(213,181,19)"/><text x="2.4138%" y="735.50"></text></g><g><title>handle_mm_fault (1 samples, 0.15%)</title><rect x="2.1638%" y="709" width="0.1546%" height="15" fill="rgb(254,191,54)"/><text x="2.4138%" y="719.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.15%)</title><rect x="2.1638%" y="693" width="0.1546%" height="15" fill="rgb(241,83,37)"/><text x="2.4138%" y="703.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.15%)</title><rect x="2.1638%" y="677" width="0.1546%" height="15" fill="rgb(233,36,39)"/><text x="2.4138%" y="687.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.15%)</title><rect x="2.1638%" y="661" width="0.1546%" height="15" fill="rgb(226,3,54)"/><text x="2.4138%" y="671.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (3 samples, 0.46%)</title><rect x="2.0093%" y="901" width="0.4637%" height="15" fill="rgb(245,192,40)"/><text x="2.2593%" y="911.50"></text></g><g><title>decor::Shim::create_schema (3 samples, 0.46%)</title><rect x="2.0093%" y="885" width="0.4637%" height="15" fill="rgb(238,167,29)"/><text x="2.2593%" y="895.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (3 samples, 0.46%)</title><rect x="2.0093%" y="869" width="0.4637%" height="15" fill="rgb(232,182,51)"/><text x="2.2593%" y="879.50"></text></g><g><title>sql_parser::parser::parse_statements (2 samples, 0.31%)</title><rect x="2.1638%" y="853" width="0.3091%" height="15" fill="rgb(231,60,39)"/><text x="2.4138%" y="863.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (2 samples, 0.31%)</title><rect x="2.1638%" y="837" width="0.3091%" height="15" fill="rgb(208,69,12)"/><text x="2.4138%" y="847.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (1 samples, 0.15%)</title><rect x="2.3184%" y="821" width="0.1546%" height="15" fill="rgb(235,93,37)"/><text x="2.5684%" y="831.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (1 samples, 0.15%)</title><rect x="2.3184%" y="805" width="0.1546%" height="15" fill="rgb(213,116,39)"/><text x="2.5684%" y="815.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.31%)</title><rect x="2.4730%" y="901" width="0.3091%" height="15" fill="rgb(222,207,29)"/><text x="2.7230%" y="911.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.15%)</title><rect x="2.7821%" y="901" width="0.1546%" height="15" fill="rgb(206,96,30)"/><text x="3.0321%" y="911.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.15%)</title><rect x="2.9366%" y="741" width="0.1546%" height="15" fill="rgb(218,138,4)"/><text x="3.1866%" y="751.50"></text></g><g><title>hwloc_topology_destroy (1 samples, 0.15%)</title><rect x="2.9366%" y="725" width="0.1546%" height="15" fill="rgb(250,191,14)"/><text x="3.1866%" y="735.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.15%)</title><rect x="2.9366%" y="709" width="0.1546%" height="15" fill="rgb(239,60,40)"/><text x="3.1866%" y="719.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.15%)</title><rect x="2.9366%" y="693" width="0.1546%" height="15" fill="rgb(206,27,48)"/><text x="3.1866%" y="703.50"></text></g><g><title>dlclose (1 samples, 0.15%)</title><rect x="2.9366%" y="677" width="0.1546%" height="15" fill="rgb(225,35,8)"/><text x="3.1866%" y="687.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.15%)</title><rect x="2.9366%" y="661" width="0.1546%" height="15" fill="rgb(250,213,24)"/><text x="3.1866%" y="671.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.15%)</title><rect x="2.9366%" y="645" width="0.1546%" height="15" fill="rgb(247,123,22)"/><text x="3.1866%" y="655.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.15%)</title><rect x="2.9366%" y="629" width="0.1546%" height="15" fill="rgb(231,138,38)"/><text x="3.1866%" y="639.50"></text></g><g><title>_dl_close (1 samples, 0.15%)</title><rect x="2.9366%" y="613" width="0.1546%" height="15" fill="rgb(231,145,46)"/><text x="3.1866%" y="623.50"></text></g><g><title>_dl_close_worker (1 samples, 0.15%)</title><rect x="2.9366%" y="597" width="0.1546%" height="15" fill="rgb(251,118,11)"/><text x="3.1866%" y="607.50"></text></g><g><title>_dl_unmap (1 samples, 0.15%)</title><rect x="2.9366%" y="581" width="0.1546%" height="15" fill="rgb(217,147,25)"/><text x="3.1866%" y="591.50"></text></g><g><title>munmap (1 samples, 0.15%)</title><rect x="2.9366%" y="565" width="0.1546%" height="15" fill="rgb(247,81,37)"/><text x="3.1866%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.15%)</title><rect x="2.9366%" y="549" width="0.1546%" height="15" fill="rgb(209,12,38)"/><text x="3.1866%" y="559.50"></text></g><g><title>do_syscall_64 (1 samples, 0.15%)</title><rect x="2.9366%" y="533" width="0.1546%" height="15" fill="rgb(227,1,9)"/><text x="3.1866%" y="543.50"></text></g><g><title>__x64_sys_munmap (1 samples, 0.15%)</title><rect x="2.9366%" y="517" width="0.1546%" height="15" fill="rgb(248,47,43)"/><text x="3.1866%" y="527.50"></text></g><g><title>__vm_munmap (1 samples, 0.15%)</title><rect x="2.9366%" y="501" width="0.1546%" height="15" fill="rgb(221,10,30)"/><text x="3.1866%" y="511.50"></text></g><g><title>__do_munmap (1 samples, 0.15%)</title><rect x="2.9366%" y="485" width="0.1546%" height="15" fill="rgb(210,229,1)"/><text x="3.1866%" y="495.50"></text></g><g><title>unmap_region (1 samples, 0.15%)</title><rect x="2.9366%" y="469" width="0.1546%" height="15" fill="rgb(222,148,37)"/><text x="3.1866%" y="479.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.15%)</title><rect x="2.9366%" y="453" width="0.1546%" height="15" fill="rgb(234,67,33)"/><text x="3.1866%" y="463.50"></text></g><g><title>release_pages (1 samples, 0.15%)</title><rect x="2.9366%" y="437" width="0.1546%" height="15" fill="rgb(247,98,35)"/><text x="3.1866%" y="447.50"></text></g><g><title>free_unref_page_list (1 samples, 0.15%)</title><rect x="2.9366%" y="421" width="0.1546%" height="15" fill="rgb(247,138,52)"/><text x="3.1866%" y="431.50"></text></g><g><title>hwloc::Topology::new (1 samples, 0.15%)</title><rect x="3.0912%" y="741" width="0.1546%" height="15" fill="rgb(213,79,30)"/><text x="3.3412%" y="751.50"></text></g><g><title>hwloc_topology_load (1 samples, 0.15%)</title><rect x="3.0912%" y="725" width="0.1546%" height="15" fill="rgb(246,177,23)"/><text x="3.3412%" y="735.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.15%)</title><rect x="3.0912%" y="709" width="0.1546%" height="15" fill="rgb(230,62,27)"/><text x="3.3412%" y="719.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.15%)</title><rect x="3.0912%" y="693" width="0.1546%" height="15" fill="rgb(216,154,8)"/><text x="3.3412%" y="703.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.15%)</title><rect x="3.0912%" y="677" width="0.1546%" height="15" fill="rgb(244,35,45)"/><text x="3.3412%" y="687.50"></text></g><g><title>__libc_close (1 samples, 0.15%)</title><rect x="3.0912%" y="661" width="0.1546%" height="15" fill="rgb(251,115,12)"/><text x="3.3412%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.15%)</title><rect x="3.0912%" y="645" width="0.1546%" height="15" fill="rgb(240,54,50)"/><text x="3.3412%" y="655.50"></text></g><g><title>do_syscall_64 (1 samples, 0.15%)</title><rect x="3.0912%" y="629" width="0.1546%" height="15" fill="rgb(233,84,52)"/><text x="3.3412%" y="639.50"></text></g><g><title>__x64_sys_close (1 samples, 0.15%)</title><rect x="3.0912%" y="613" width="0.1546%" height="15" fill="rgb(207,117,47)"/><text x="3.3412%" y="623.50"></text></g><g><title>filp_close (1 samples, 0.15%)</title><rect x="3.0912%" y="597" width="0.1546%" height="15" fill="rgb(249,43,39)"/><text x="3.3412%" y="607.50"></text></g><g><title>fput_many (1 samples, 0.15%)</title><rect x="3.0912%" y="581" width="0.1546%" height="15" fill="rgb(209,38,44)"/><text x="3.3412%" y="591.50"></text></g><g><title>task_work_add (1 samples, 0.15%)</title><rect x="3.0912%" y="565" width="0.1546%" height="15" fill="rgb(236,212,23)"/><text x="3.3412%" y="575.50"></text></g><g><title>kick_process (1 samples, 0.15%)</title><rect x="3.0912%" y="549" width="0.1546%" height="15" fill="rgb(242,79,21)"/><text x="3.3412%" y="559.50"></text></g><g><title>preempt_count_add (1 samples, 0.15%)</title><rect x="3.0912%" y="533" width="0.1546%" height="15" fill="rgb(211,96,35)"/><text x="3.3412%" y="543.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::encode (1 samples, 0.15%)</title><rect x="3.2457%" y="693" width="0.1546%" height="15" fill="rgb(253,215,40)"/><text x="3.4957%" y="703.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::encode (1 samples, 0.15%)</title><rect x="3.2457%" y="677" width="0.1546%" height="15" fill="rgb(211,81,21)"/><text x="3.4957%" y="687.50"></text></g><g><title>__x86_indirect_thunk_rax (2 samples, 0.31%)</title><rect x="3.5549%" y="629" width="0.3091%" height="15" fill="rgb(208,190,38)"/><text x="3.8049%" y="639.50"></text></g><g><title>import_single_range (1 samples, 0.15%)</title><rect x="4.1731%" y="565" width="0.1546%" height="15" fill="rgb(235,213,38)"/><text x="4.4231%" y="575.50"></text></g><g><title>lock_sock_nested (1 samples, 0.15%)</title><rect x="4.3277%" y="533" width="0.1546%" height="15" fill="rgb(237,122,38)"/><text x="4.5777%" y="543.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.15%)</title><rect x="4.3277%" y="517" width="0.1546%" height="15" fill="rgb(244,218,35)"/><text x="4.5777%" y="527.50"></text></g><g><title>preempt_count_sub (1 samples, 0.15%)</title><rect x="4.3277%" y="501" width="0.1546%" height="15" fill="rgb(240,68,47)"/><text x="4.5777%" y="511.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.15%)</title><rect x="6.0278%" y="405" width="0.1546%" height="15" fill="rgb(210,16,53)"/><text x="6.2778%" y="415.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.15%)</title><rect x="6.3369%" y="341" width="0.1546%" height="15" fill="rgb(235,124,12)"/><text x="6.5869%" y="351.50"></text></g><g><title>netif_rx (3 samples, 0.46%)</title><rect x="6.1824%" y="373" width="0.4637%" height="15" fill="rgb(224,169,11)"/><text x="6.4324%" y="383.50"></text></g><g><title>netif_rx_internal (3 samples, 0.46%)</title><rect x="6.1824%" y="357" width="0.4637%" height="15" fill="rgb(250,166,2)"/><text x="6.4324%" y="367.50"></text></g><g><title>preempt_count_add (1 samples, 0.15%)</title><rect x="6.4915%" y="341" width="0.1546%" height="15" fill="rgb(242,216,29)"/><text x="6.7415%" y="351.50"></text></g><g><title>dev_hard_start_xmit (5 samples, 0.77%)</title><rect x="6.1824%" y="405" width="0.7728%" height="15" fill="rgb(230,116,27)"/><text x="6.4324%" y="415.50"></text></g><g><title>loopback_xmit (5 samples, 0.77%)</title><rect x="6.1824%" y="389" width="0.7728%" height="15" fill="rgb(228,99,48)"/><text x="6.4324%" y="399.50"></text></g><g><title>tcp_wfree (2 samples, 0.31%)</title><rect x="6.6461%" y="373" width="0.3091%" height="15" fill="rgb(253,11,6)"/><text x="6.8961%" y="383.50"></text></g><g><title>__dev_queue_xmit (12 samples, 1.85%)</title><rect x="5.8733%" y="421" width="1.8547%" height="15" fill="rgb(247,143,39)"/><text x="6.1233%" y="431.50">_..</text></g><g><title>validate_xmit_skb (5 samples, 0.77%)</title><rect x="6.9552%" y="405" width="0.7728%" height="15" fill="rgb(236,97,10)"/><text x="7.2052%" y="415.50"></text></g><g><title>netif_skb_features (1 samples, 0.15%)</title><rect x="7.5734%" y="389" width="0.1546%" height="15" fill="rgb(233,208,19)"/><text x="7.8234%" y="399.50"></text></g><g><title>irqtime_account_irq (1 samples, 0.15%)</title><rect x="7.8825%" y="357" width="0.1546%" height="15" fill="rgb(216,164,2)"/><text x="8.1325%" y="367.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.15%)</title><rect x="7.8825%" y="341" width="0.1546%" height="15" fill="rgb(220,129,5)"/><text x="8.1325%" y="351.50"></text></g><g><title>__netif_receive_skb_core (1 samples, 0.15%)</title><rect x="8.5008%" y="309" width="0.1546%" height="15" fill="rgb(242,17,10)"/><text x="8.7508%" y="319.50"></text></g><g><title>__inet_lookup_established (1 samples, 0.15%)</title><rect x="8.9645%" y="229" width="0.1546%" height="15" fill="rgb(242,107,0)"/><text x="9.2145%" y="239.50"></text></g><g><title>sk_filter_trim_cap (2 samples, 0.31%)</title><rect x="9.1190%" y="229" width="0.3091%" height="15" fill="rgb(251,28,31)"/><text x="9.3690%" y="239.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (2 samples, 0.31%)</title><rect x="9.1190%" y="213" width="0.3091%" height="15" fill="rgb(233,223,10)"/><text x="9.3690%" y="223.50"></text></g><g><title>__tcp_ack_snd_check (1 samples, 0.15%)</title><rect x="9.7372%" y="197" width="0.1546%" height="15" fill="rgb(215,21,27)"/><text x="9.9872%" y="207.50"></text></g><g><title>sk_reset_timer (1 samples, 0.15%)</title><rect x="9.8918%" y="197" width="0.1546%" height="15" fill="rgb(232,23,21)"/><text x="10.1418%" y="207.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.15%)</title><rect x="10.2009%" y="181" width="0.1546%" height="15" fill="rgb(244,5,23)"/><text x="10.4509%" y="191.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.15%)</title><rect x="10.8192%" y="133" width="0.1546%" height="15" fill="rgb(226,81,46)"/><text x="11.0692%" y="143.50"></text></g><g><title>preempt_count_sub (1 samples, 0.15%)</title><rect x="10.8192%" y="117" width="0.1546%" height="15" fill="rgb(247,70,30)"/><text x="11.0692%" y="127.50"></text></g><g><title>psi_task_change (2 samples, 0.31%)</title><rect x="10.9737%" y="117" width="0.3091%" height="15" fill="rgb(212,68,19)"/><text x="11.2237%" y="127.50"></text></g><g><title>psi_group_change (2 samples, 0.31%)</title><rect x="10.9737%" y="101" width="0.3091%" height="15" fill="rgb(240,187,13)"/><text x="11.2237%" y="111.50"></text></g><g><title>record_times (2 samples, 0.31%)</title><rect x="10.9737%" y="85" width="0.3091%" height="15" fill="rgb(223,113,26)"/><text x="11.2237%" y="95.50"></text></g><g><title>sched_clock_cpu (2 samples, 0.31%)</title><rect x="10.9737%" y="69" width="0.3091%" height="15" fill="rgb(206,192,2)"/><text x="11.2237%" y="79.50"></text></g><g><title>sched_clock (2 samples, 0.31%)</title><rect x="10.9737%" y="53" width="0.3091%" height="15" fill="rgb(241,108,4)"/><text x="11.2237%" y="63.50"></text></g><g><title>native_sched_clock (2 samples, 0.31%)</title><rect x="10.9737%" y="37" width="0.3091%" height="15" fill="rgb(247,173,49)"/><text x="11.2237%" y="47.50"></text></g><g><title>enqueue_task (3 samples, 0.46%)</title><rect x="10.9737%" y="133" width="0.4637%" height="15" fill="rgb(224,114,35)"/><text x="11.2237%" y="143.50"></text></g><g><title>uclamp_rq_inc_id (1 samples, 0.15%)</title><rect x="11.2828%" y="117" width="0.1546%" height="15" fill="rgb(245,159,27)"/><text x="11.5328%" y="127.50"></text></g><g><title>reweight_entity (1 samples, 0.15%)</title><rect x="12.0556%" y="101" width="0.1546%" height="15" fill="rgb(245,172,44)"/><text x="12.3056%" y="111.50"></text></g><g><title>update_cfs_group (1 samples, 0.15%)</title><rect x="12.2102%" y="101" width="0.1546%" height="15" fill="rgb(236,23,11)"/><text x="12.4602%" y="111.50"></text></g><g><title>enqueue_task_fair (8 samples, 1.24%)</title><rect x="11.4374%" y="133" width="1.2365%" height="15" fill="rgb(205,117,38)"/><text x="11.6874%" y="143.50"></text></g><g><title>enqueue_entity (7 samples, 1.08%)</title><rect x="11.5920%" y="117" width="1.0819%" height="15" fill="rgb(237,72,25)"/><text x="11.8420%" y="127.50"></text></g><g><title>update_load_avg (2 samples, 0.31%)</title><rect x="12.3648%" y="101" width="0.3091%" height="15" fill="rgb(244,70,9)"/><text x="12.6148%" y="111.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.15%)</title><rect x="12.5193%" y="85" width="0.1546%" height="15" fill="rgb(217,125,39)"/><text x="12.7693%" y="95.50"></text></g><g><title>ttwu_do_wakeup (1 samples, 0.15%)</title><rect x="12.6739%" y="133" width="0.1546%" height="15" fill="rgb(235,36,10)"/><text x="12.9239%" y="143.50"></text></g><g><title>check_preempt_curr (1 samples, 0.15%)</title><rect x="12.6739%" y="117" width="0.1546%" height="15" fill="rgb(251,123,47)"/><text x="12.9239%" y="127.50"></text></g><g><title>resched_curr (1 samples, 0.15%)</title><rect x="12.6739%" y="101" width="0.1546%" height="15" fill="rgb(221,13,13)"/><text x="12.9239%" y="111.50"></text></g><g><title>try_to_wake_up (16 samples, 2.47%)</title><rect x="10.6646%" y="149" width="2.4730%" height="15" fill="rgb(238,131,9)"/><text x="10.9146%" y="159.50">tr..</text></g><g><title>update_rq_clock (2 samples, 0.31%)</title><rect x="12.8284%" y="133" width="0.3091%" height="15" fill="rgb(211,50,8)"/><text x="13.0784%" y="143.50"></text></g><g><title>sock_def_readable (21 samples, 3.25%)</title><rect x="10.0464%" y="197" width="3.2457%" height="15" fill="rgb(245,182,24)"/><text x="10.2964%" y="207.50">soc..</text></g><g><title>__wake_up_common_lock (19 samples, 2.94%)</title><rect x="10.3555%" y="181" width="2.9366%" height="15" fill="rgb(242,14,37)"/><text x="10.6055%" y="191.50">__..</text></g><g><title>__wake_up_common (18 samples, 2.78%)</title><rect x="10.5100%" y="165" width="2.7821%" height="15" fill="rgb(246,228,12)"/><text x="10.7600%" y="175.50">__..</text></g><g><title>woken_wake_function (1 samples, 0.15%)</title><rect x="13.1376%" y="149" width="0.1546%" height="15" fill="rgb(213,55,15)"/><text x="13.3876%" y="159.50"></text></g><g><title>kfree (1 samples, 0.15%)</title><rect x="13.9104%" y="165" width="0.1546%" height="15" fill="rgb(209,9,3)"/><text x="14.1604%" y="175.50"></text></g><g><title>__slab_free (1 samples, 0.15%)</title><rect x="13.9104%" y="149" width="0.1546%" height="15" fill="rgb(230,59,30)"/><text x="14.1604%" y="159.50"></text></g><g><title>__kfree_skb (3 samples, 0.46%)</title><rect x="13.7558%" y="181" width="0.4637%" height="15" fill="rgb(209,121,21)"/><text x="14.0058%" y="191.50"></text></g><g><title>skb_release_data (1 samples, 0.15%)</title><rect x="14.0649%" y="165" width="0.1546%" height="15" fill="rgb(220,109,13)"/><text x="14.3149%" y="175.50"></text></g><g><title>tcp_ack_update_rtt (2 samples, 0.31%)</title><rect x="14.2195%" y="181" width="0.3091%" height="15" fill="rgb(232,18,1)"/><text x="14.4695%" y="191.50"></text></g><g><title>__usecs_to_jiffies (1 samples, 0.15%)</title><rect x="14.3740%" y="165" width="0.1546%" height="15" fill="rgb(215,41,42)"/><text x="14.6240%" y="175.50"></text></g><g><title>tcp_ack (9 samples, 1.39%)</title><rect x="13.2921%" y="197" width="1.3910%" height="15" fill="rgb(224,123,36)"/><text x="13.5421%" y="207.50"></text></g><g><title>tcp_rate_gen (1 samples, 0.15%)</title><rect x="14.5286%" y="181" width="0.1546%" height="15" fill="rgb(240,125,3)"/><text x="14.7786%" y="191.50"></text></g><g><title>tcp_queue_rcv (1 samples, 0.15%)</title><rect x="14.6832%" y="197" width="0.1546%" height="15" fill="rgb(205,98,50)"/><text x="14.9332%" y="207.50"></text></g><g><title>tcp_v4_do_rcv (36 samples, 5.56%)</title><rect x="9.4281%" y="229" width="5.5641%" height="15" fill="rgb(205,185,37)"/><text x="9.6781%" y="239.50">tcp_v4_..</text></g><g><title>tcp_rcv_established (36 samples, 5.56%)</title><rect x="9.4281%" y="213" width="5.5641%" height="15" fill="rgb(238,207,15)"/><text x="9.6781%" y="223.50">tcp_rcv..</text></g><g><title>tcp_send_delayed_ack (1 samples, 0.15%)</title><rect x="14.8377%" y="197" width="0.1546%" height="15" fill="rgb(213,199,42)"/><text x="15.0877%" y="207.50"></text></g><g><title>__local_bh_enable_ip (48 samples, 7.42%)</title><rect x="7.7280%" y="421" width="7.4189%" height="15" fill="rgb(235,201,11)"/><text x="7.9780%" y="431.50">__local_bh..</text></g><g><title>do_softirq (48 samples, 7.42%)</title><rect x="7.7280%" y="405" width="7.4189%" height="15" fill="rgb(207,46,11)"/><text x="7.9780%" y="415.50">do_softirq</text></g><g><title>do_softirq_own_stack (47 samples, 7.26%)</title><rect x="7.8825%" y="389" width="7.2643%" height="15" fill="rgb(241,35,35)"/><text x="8.1325%" y="399.50">do_softirq..</text></g><g><title>__do_softirq (47 samples, 7.26%)</title><rect x="7.8825%" y="373" width="7.2643%" height="15" fill="rgb(243,32,47)"/><text x="8.1325%" y="383.50">__do_softi..</text></g><g><title>net_rx_action (46 samples, 7.11%)</title><rect x="8.0371%" y="357" width="7.1097%" height="15" fill="rgb(247,202,23)"/><text x="8.2871%" y="367.50">net_rx_act..</text></g><g><title>process_backlog (46 samples, 7.11%)</title><rect x="8.0371%" y="341" width="7.1097%" height="15" fill="rgb(219,102,11)"/><text x="8.2871%" y="351.50">process_ba..</text></g><g><title>__netif_receive_skb_one_core (44 samples, 6.80%)</title><rect x="8.3462%" y="325" width="6.8006%" height="15" fill="rgb(243,110,44)"/><text x="8.5962%" y="335.50">__netif_r..</text></g><g><title>ip_rcv (42 samples, 6.49%)</title><rect x="8.6553%" y="309" width="6.4915%" height="15" fill="rgb(222,74,54)"/><text x="8.9053%" y="319.50">ip_rcv</text></g><g><title>ip_local_deliver (41 samples, 6.34%)</title><rect x="8.8099%" y="293" width="6.3369%" height="15" fill="rgb(216,99,12)"/><text x="9.0599%" y="303.50">ip_local..</text></g><g><title>ip_local_deliver_finish (41 samples, 6.34%)</title><rect x="8.8099%" y="277" width="6.3369%" height="15" fill="rgb(226,22,26)"/><text x="9.0599%" y="287.50">ip_local..</text></g><g><title>ip_protocol_deliver_rcu (41 samples, 6.34%)</title><rect x="8.8099%" y="261" width="6.3369%" height="15" fill="rgb(217,163,10)"/><text x="9.0599%" y="271.50">ip_proto..</text></g><g><title>tcp_v4_rcv (41 samples, 6.34%)</title><rect x="8.8099%" y="245" width="6.3369%" height="15" fill="rgb(213,25,53)"/><text x="9.0599%" y="255.50">tcp_v4_r..</text></g><g><title>tcp_v4_inbound_md5_hash (1 samples, 0.15%)</title><rect x="14.9923%" y="229" width="0.1546%" height="15" fill="rgb(252,105,26)"/><text x="15.2423%" y="239.50"></text></g><g><title>__ip_queue_xmit (64 samples, 9.89%)</title><rect x="5.4096%" y="469" width="9.8918%" height="15" fill="rgb(220,39,43)"/><text x="5.6596%" y="479.50">__ip_queue_xmit</text></g><g><title>ip_output (62 samples, 9.58%)</title><rect x="5.7187%" y="453" width="9.5827%" height="15" fill="rgb(229,68,48)"/><text x="5.9687%" y="463.50">ip_output</text></g><g><title>ip_finish_output2 (62 samples, 9.58%)</title><rect x="5.7187%" y="437" width="9.5827%" height="15" fill="rgb(252,8,32)"/><text x="5.9687%" y="447.50">ip_finish_outp..</text></g><g><title>dev_queue_xmit (1 samples, 0.15%)</title><rect x="15.1468%" y="421" width="0.1546%" height="15" fill="rgb(223,20,43)"/><text x="15.3968%" y="431.50"></text></g><g><title>__tcp_select_window (1 samples, 0.15%)</title><rect x="15.3014%" y="469" width="0.1546%" height="15" fill="rgb(229,81,49)"/><text x="15.5514%" y="479.50"></text></g><g><title>__tcp_push_pending_frames (71 samples, 10.97%)</title><rect x="4.6368%" y="517" width="10.9737%" height="15" fill="rgb(236,28,36)"/><text x="4.8868%" y="527.50">__tcp_push_pendi..</text></g><g><title>tcp_write_xmit (71 samples, 10.97%)</title><rect x="4.6368%" y="501" width="10.9737%" height="15" fill="rgb(249,185,26)"/><text x="4.8868%" y="511.50">tcp_write_xmit</text></g><g><title>__tcp_transmit_skb (69 samples, 10.66%)</title><rect x="4.9459%" y="485" width="10.6646%" height="15" fill="rgb(249,174,33)"/><text x="5.1959%" y="495.50">__tcp_transmit_s..</text></g><g><title>ip_queue_xmit (1 samples, 0.15%)</title><rect x="15.4560%" y="469" width="0.1546%" height="15" fill="rgb(233,201,37)"/><text x="15.7060%" y="479.50"></text></g><g><title>__kmalloc_node_track_caller (3 samples, 0.46%)</title><rect x="15.6105%" y="485" width="0.4637%" height="15" fill="rgb(221,78,26)"/><text x="15.8605%" y="495.50"></text></g><g><title>sk_stream_alloc_skb (4 samples, 0.62%)</title><rect x="15.6105%" y="517" width="0.6182%" height="15" fill="rgb(250,127,30)"/><text x="15.8605%" y="527.50"></text></g><g><title>__alloc_skb (4 samples, 0.62%)</title><rect x="15.6105%" y="501" width="0.6182%" height="15" fill="rgb(230,49,44)"/><text x="15.8605%" y="511.50"></text></g><g><title>__ksize (1 samples, 0.15%)</title><rect x="16.0742%" y="485" width="0.1546%" height="15" fill="rgb(229,67,23)"/><text x="16.3242%" y="495.50"></text></g><g><title>skb_entail (1 samples, 0.15%)</title><rect x="16.2287%" y="517" width="0.1546%" height="15" fill="rgb(249,83,47)"/><text x="16.4787%" y="527.50"></text></g><g><title>sock_sendmsg (83 samples, 12.83%)</title><rect x="4.3277%" y="565" width="12.8284%" height="15" fill="rgb(215,43,3)"/><text x="4.5777%" y="575.50">sock_sendmsg</text></g><g><title>tcp_sendmsg (83 samples, 12.83%)</title><rect x="4.3277%" y="549" width="12.8284%" height="15" fill="rgb(238,154,13)"/><text x="4.5777%" y="559.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (82 samples, 12.67%)</title><rect x="4.4822%" y="533" width="12.6739%" height="15" fill="rgb(219,56,2)"/><text x="4.7322%" y="543.50">tcp_sendmsg_locked</text></g><g><title>tcp_send_mss (5 samples, 0.77%)</title><rect x="16.3833%" y="517" width="0.7728%" height="15" fill="rgb(233,0,4)"/><text x="16.6333%" y="527.50"></text></g><g><title>tcp_current_mss (5 samples, 0.77%)</title><rect x="16.3833%" y="501" width="0.7728%" height="15" fill="rgb(235,30,7)"/><text x="16.6333%" y="511.50"></text></g><g><title>tcp_established_options (1 samples, 0.15%)</title><rect x="17.0015%" y="485" width="0.1546%" height="15" fill="rgb(250,79,13)"/><text x="17.2515%" y="495.50"></text></g><g><title>__x64_sys_sendto (87 samples, 13.45%)</title><rect x="3.8640%" y="597" width="13.4467%" height="15" fill="rgb(211,146,34)"/><text x="4.1140%" y="607.50">__x64_sys_sendto</text></g><g><title>__sys_sendto (87 samples, 13.45%)</title><rect x="3.8640%" y="581" width="13.4467%" height="15" fill="rgb(228,22,38)"/><text x="4.1140%" y="591.50">__sys_sendto</text></g><g><title>sockfd_lookup_light (1 samples, 0.15%)</title><rect x="17.1561%" y="565" width="0.1546%" height="15" fill="rgb(235,168,5)"/><text x="17.4061%" y="575.50"></text></g><g><title>__fget_light (1 samples, 0.15%)</title><rect x="17.1561%" y="549" width="0.1546%" height="15" fill="rgb(221,155,16)"/><text x="17.4061%" y="559.50"></text></g><g><title>__fget_files (1 samples, 0.15%)</title><rect x="17.1561%" y="533" width="0.1546%" height="15" fill="rgb(215,215,53)"/><text x="17.4061%" y="543.50"></text></g><g><title>do_syscall_64 (88 samples, 13.60%)</title><rect x="3.8640%" y="613" width="13.6012%" height="15" fill="rgb(223,4,10)"/><text x="4.1140%" y="623.50">do_syscall_64</text></g><g><title>syscall_slow_exit_work (1 samples, 0.15%)</title><rect x="17.3107%" y="597" width="0.1546%" height="15" fill="rgb(234,103,6)"/><text x="17.5607%" y="607.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.15%)</title><rect x="17.3107%" y="581" width="0.1546%" height="15" fill="rgb(227,97,0)"/><text x="17.5607%" y="591.50"></text></g><g><title>__libc_start_main (98 samples, 15.15%)</title><rect x="2.9366%" y="901" width="15.1468%" height="15" fill="rgb(234,150,53)"/><text x="3.1866%" y="911.50">__libc_start_main</text></g><g><title>main (98 samples, 15.15%)</title><rect x="2.9366%" y="885" width="15.1468%" height="15" fill="rgb(228,201,54)"/><text x="3.1866%" y="895.50">main</text></g><g><title>std::rt::lang_start_internal (98 samples, 15.15%)</title><rect x="2.9366%" y="869" width="15.1468%" height="15" fill="rgb(222,22,37)"/><text x="3.1866%" y="879.50">std::rt::lang_start_int..</text></g><g><title>std::panic::catch_unwind (98 samples, 15.15%)</title><rect x="2.9366%" y="853" width="15.1468%" height="15" fill="rgb(237,53,32)"/><text x="3.1866%" y="863.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (98 samples, 15.15%)</title><rect x="2.9366%" y="837" width="15.1468%" height="15" fill="rgb(233,25,53)"/><text x="3.1866%" y="847.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (98 samples, 15.15%)</title><rect x="2.9366%" y="821" width="15.1468%" height="15" fill="rgb(210,40,34)"/><text x="3.1866%" y="831.50">std::panicking::try::do..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (98 samples, 15.15%)</title><rect x="2.9366%" y="805" width="15.1468%" height="15" fill="rgb(241,220,44)"/><text x="3.1866%" y="815.50">core::ops::function::im..</text></g><g><title>std::rt::lang_start::_{{closure}} (98 samples, 15.15%)</title><rect x="2.9366%" y="789" width="15.1468%" height="15" fill="rgb(235,28,35)"/><text x="3.1866%" y="799.50">std::rt::lang_start::_{..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (98 samples, 15.15%)</title><rect x="2.9366%" y="773" width="15.1468%" height="15" fill="rgb(210,56,17)"/><text x="3.1866%" y="783.50">std::sys_common::backtr..</text></g><g><title>lobsters::main (98 samples, 15.15%)</title><rect x="2.9366%" y="757" width="15.1468%" height="15" fill="rgb(224,130,29)"/><text x="3.1866%" y="767.50">lobsters::main</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (96 samples, 14.84%)</title><rect x="3.2457%" y="741" width="14.8377%" height="15" fill="rgb(235,212,8)"/><text x="3.4957%" y="751.50">mysql::conn::queryable:..</text></g><g><title>mysql::conn::Conn::_query (96 samples, 14.84%)</title><rect x="3.2457%" y="725" width="14.8377%" height="15" fill="rgb(223,33,50)"/><text x="3.4957%" y="735.50">mysql::conn::Conn::_que..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (96 samples, 14.84%)</title><rect x="3.2457%" y="709" width="14.8377%" height="15" fill="rgb(219,149,13)"/><text x="3.4957%" y="719.50">mysql_common::proto::sy..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (95 samples, 14.68%)</title><rect x="3.4003%" y="693" width="14.6832%" height="15" fill="rgb(250,156,29)"/><text x="3.6503%" y="703.50">std::io::buffered::Buf..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (94 samples, 14.53%)</title><rect x="3.5549%" y="677" width="14.5286%" height="15" fill="rgb(216,193,19)"/><text x="3.8049%" y="687.50">&lt;std::net::tcp::TcpStr..</text></g><g><title>std::sys_common::net::TcpStream::write (94 samples, 14.53%)</title><rect x="3.5549%" y="661" width="14.5286%" height="15" fill="rgb(216,135,14)"/><text x="3.8049%" y="671.50">std::sys_common::net::..</text></g><g><title>__libc_send (94 samples, 14.53%)</title><rect x="3.5549%" y="645" width="14.5286%" height="15" fill="rgb(241,47,5)"/><text x="3.8049%" y="655.50">__libc_send</text></g><g><title>entry_SYSCALL_64 (92 samples, 14.22%)</title><rect x="3.8640%" y="629" width="14.2195%" height="15" fill="rgb(233,42,35)"/><text x="4.1140%" y="639.50">entry_SYSCALL_64</text></g><g><title>prepare_exit_to_usermode (4 samples, 0.62%)</title><rect x="17.4652%" y="613" width="0.6182%" height="15" fill="rgb(231,13,6)"/><text x="17.7152%" y="623.50"></text></g><g><title>decor::Shim::create_schema (1 samples, 0.15%)</title><rect x="18.0835%" y="901" width="0.1546%" height="15" fill="rgb(207,181,40)"/><text x="18.3335%" y="911.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query_drop (1 samples, 0.15%)</title><rect x="18.0835%" y="885" width="0.1546%" height="15" fill="rgb(254,173,49)"/><text x="18.3335%" y="895.50"></text></g><g><title>decor::query_transformer::QueryTransformer::issue_to_dt_and_get_mv_stmt (1 samples, 0.15%)</title><rect x="18.0835%" y="869" width="0.1546%" height="15" fill="rgb(221,1,38)"/><text x="18.3335%" y="879.50"></text></g><g><title>core::fmt::write (1 samples, 0.15%)</title><rect x="18.0835%" y="853" width="0.1546%" height="15" fill="rgb(206,124,46)"/><text x="18.3335%" y="863.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::CreateTableStatement as core::fmt::Display&gt;::fmt (1 samples, 0.15%)</title><rect x="18.0835%" y="837" width="0.1546%" height="15" fill="rgb(249,21,11)"/><text x="18.3335%" y="847.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::CreateTableStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.15%)</title><rect x="18.0835%" y="821" width="0.1546%" height="15" fill="rgb(222,201,40)"/><text x="18.3335%" y="831.50"></text></g><g><title>&lt;sql_parser::ast::defs::ddl::ColumnDef as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.15%)</title><rect x="18.0835%" y="805" width="0.1546%" height="15" fill="rgb(235,61,29)"/><text x="18.3335%" y="815.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.15%)</title><rect x="18.0835%" y="789" width="0.1546%" height="15" fill="rgb(219,207,3)"/><text x="18.3335%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="18.0835%" y="773" width="0.1546%" height="15" fill="rgb(222,56,46)"/><text x="18.3335%" y="783.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.15%)</title><rect x="18.0835%" y="757" width="0.1546%" height="15" fill="rgb(239,76,54)"/><text x="18.3335%" y="767.50"></text></g><g><title>_int_realloc (1 samples, 0.15%)</title><rect x="18.0835%" y="741" width="0.1546%" height="15" fill="rgb(231,124,27)"/><text x="18.3335%" y="751.50"></text></g><g><title>_int_free (1 samples, 0.15%)</title><rect x="18.0835%" y="725" width="0.1546%" height="15" fill="rgb(249,195,6)"/><text x="18.3335%" y="735.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query_drop (1 samples, 0.15%)</title><rect x="18.2380%" y="901" width="0.1546%" height="15" fill="rgb(237,174,47)"/><text x="18.4880%" y="911.50"></text></g><g><title>decor::query_transformer::QueryTransformer::issue_to_dt_and_get_mv_stmt (1 samples, 0.15%)</title><rect x="18.2380%" y="885" width="0.1546%" height="15" fill="rgb(206,201,31)"/><text x="18.4880%" y="895.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (1 samples, 0.15%)</title><rect x="18.2380%" y="869" width="0.1546%" height="15" fill="rgb(231,57,52)"/><text x="18.4880%" y="879.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (1 samples, 0.15%)</title><rect x="18.2380%" y="853" width="0.1546%" height="15" fill="rgb(248,177,22)"/><text x="18.4880%" y="863.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.15%)</title><rect x="18.2380%" y="837" width="0.1546%" height="15" fill="rgb(215,211,37)"/><text x="18.4880%" y="847.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.15%)</title><rect x="18.2380%" y="821" width="0.1546%" height="15" fill="rgb(241,128,51)"/><text x="18.4880%" y="831.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.15%)</title><rect x="18.2380%" y="805" width="0.1546%" height="15" fill="rgb(227,165,31)"/><text x="18.4880%" y="815.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="18.2380%" y="789" width="0.1546%" height="15" fill="rgb(228,167,24)"/><text x="18.4880%" y="799.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.15%)</title><rect x="18.2380%" y="773" width="0.1546%" height="15" fill="rgb(228,143,12)"/><text x="18.4880%" y="783.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.15%)</title><rect x="18.2380%" y="757" width="0.1546%" height="15" fill="rgb(249,149,8)"/><text x="18.4880%" y="767.50"></text></g><g><title>std::sys_common::net::TcpStream::read (1 samples, 0.15%)</title><rect x="18.2380%" y="741" width="0.1546%" height="15" fill="rgb(243,35,44)"/><text x="18.4880%" y="751.50"></text></g><g><title>std::sys::unix::net::Socket::read (1 samples, 0.15%)</title><rect x="18.2380%" y="725" width="0.1546%" height="15" fill="rgb(246,89,9)"/><text x="18.4880%" y="735.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (1 samples, 0.15%)</title><rect x="18.2380%" y="709" width="0.1546%" height="15" fill="rgb(233,213,13)"/><text x="18.4880%" y="719.50"></text></g><g><title>__libc_recv (1 samples, 0.15%)</title><rect x="18.2380%" y="693" width="0.1546%" height="15" fill="rgb(233,141,41)"/><text x="18.4880%" y="703.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.15%)</title><rect x="18.2380%" y="677" width="0.1546%" height="15" fill="rgb(239,167,4)"/><text x="18.4880%" y="687.50"></text></g><g><title>do_syscall_64 (1 samples, 0.15%)</title><rect x="18.2380%" y="661" width="0.1546%" height="15" fill="rgb(209,217,16)"/><text x="18.4880%" y="671.50"></text></g><g><title>__x64_sys_recvfrom (1 samples, 0.15%)</title><rect x="18.2380%" y="645" width="0.1546%" height="15" fill="rgb(219,88,35)"/><text x="18.4880%" y="655.50"></text></g><g><title>__sys_recvfrom (1 samples, 0.15%)</title><rect x="18.2380%" y="629" width="0.1546%" height="15" fill="rgb(220,193,23)"/><text x="18.4880%" y="639.50"></text></g><g><title>inet_recvmsg (1 samples, 0.15%)</title><rect x="18.2380%" y="613" width="0.1546%" height="15" fill="rgb(230,90,52)"/><text x="18.4880%" y="623.50"></text></g><g><title>tcp_recvmsg (1 samples, 0.15%)</title><rect x="18.2380%" y="597" width="0.1546%" height="15" fill="rgb(252,106,19)"/><text x="18.4880%" y="607.50"></text></g><g><title>__kfree_skb (1 samples, 0.15%)</title><rect x="18.2380%" y="581" width="0.1546%" height="15" fill="rgb(206,74,20)"/><text x="18.4880%" y="591.50"></text></g><g><title>skb_release_head_state (1 samples, 0.15%)</title><rect x="18.2380%" y="565" width="0.1546%" height="15" fill="rgb(230,138,44)"/><text x="18.4880%" y="575.50"></text></g><g><title>sock_rfree (1 samples, 0.15%)</title><rect x="18.2380%" y="549" width="0.1546%" height="15" fill="rgb(235,182,43)"/><text x="18.4880%" y="559.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.15%)</title><rect x="18.3926%" y="869" width="0.1546%" height="15" fill="rgb(242,16,51)"/><text x="18.6426%" y="879.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.15%)</title><rect x="18.3926%" y="853" width="0.1546%" height="15" fill="rgb(248,9,4)"/><text x="18.6426%" y="863.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.15%)</title><rect x="18.3926%" y="837" width="0.1546%" height="15" fill="rgb(210,31,22)"/><text x="18.6426%" y="847.50"></text></g><g><title>dlopen (1 samples, 0.15%)</title><rect x="18.3926%" y="821" width="0.1546%" height="15" fill="rgb(239,54,39)"/><text x="18.6426%" y="831.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.15%)</title><rect x="18.3926%" y="805" width="0.1546%" height="15" fill="rgb(230,99,41)"/><text x="18.6426%" y="815.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.15%)</title><rect x="18.3926%" y="789" width="0.1546%" height="15" fill="rgb(253,106,12)"/><text x="18.6426%" y="799.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.15%)</title><rect x="18.3926%" y="773" width="0.1546%" height="15" fill="rgb(213,46,41)"/><text x="18.6426%" y="783.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.15%)</title><rect x="18.3926%" y="757" width="0.1546%" height="15" fill="rgb(215,133,35)"/><text x="18.6426%" y="767.50"></text></g><g><title>_dl_open (1 samples, 0.15%)</title><rect x="18.3926%" y="741" width="0.1546%" height="15" fill="rgb(213,28,5)"/><text x="18.6426%" y="751.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.15%)</title><rect x="18.3926%" y="725" width="0.1546%" height="15" fill="rgb(215,77,49)"/><text x="18.6426%" y="735.50"></text></g><g><title>dl_open_worker (1 samples, 0.15%)</title><rect x="18.3926%" y="709" width="0.1546%" height="15" fill="rgb(248,100,22)"/><text x="18.6426%" y="719.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.15%)</title><rect x="18.3926%" y="693" width="0.1546%" height="15" fill="rgb(208,67,9)"/><text x="18.6426%" y="703.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.15%)</title><rect x="18.3926%" y="677" width="0.1546%" height="15" fill="rgb(219,133,21)"/><text x="18.6426%" y="687.50"></text></g><g><title>do_lookup_x (1 samples, 0.15%)</title><rect x="18.3926%" y="661" width="0.1546%" height="15" fill="rgb(246,46,29)"/><text x="18.6426%" y="671.50"></text></g><g><title>hwloc::Topology::new (2 samples, 0.31%)</title><rect x="18.3926%" y="885" width="0.3091%" height="15" fill="rgb(246,185,52)"/><text x="18.6426%" y="895.50"></text></g><g><title>hwloc_topology_load (1 samples, 0.15%)</title><rect x="18.5471%" y="869" width="0.1546%" height="15" fill="rgb(252,136,11)"/><text x="18.7971%" y="879.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.15%)</title><rect x="18.5471%" y="853" width="0.1546%" height="15" fill="rgb(219,138,53)"/><text x="18.7971%" y="863.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.15%)</title><rect x="18.5471%" y="837" width="0.1546%" height="15" fill="rgb(211,51,23)"/><text x="18.7971%" y="847.50"></text></g><g><title>__isoc99_fscanf (1 samples, 0.15%)</title><rect x="18.5471%" y="821" width="0.1546%" height="15" fill="rgb(247,221,28)"/><text x="18.7971%" y="831.50"></text></g><g><title>__vfscanf_internal (1 samples, 0.15%)</title><rect x="18.5471%" y="805" width="0.1546%" height="15" fill="rgb(251,222,45)"/><text x="18.7971%" y="815.50"></text></g><g><title>__GI__IO_default_uflow (1 samples, 0.15%)</title><rect x="18.5471%" y="789" width="0.1546%" height="15" fill="rgb(217,162,53)"/><text x="18.7971%" y="799.50"></text></g><g><title>__GI__IO_file_underflow (1 samples, 0.15%)</title><rect x="18.5471%" y="773" width="0.1546%" height="15" fill="rgb(229,93,14)"/><text x="18.7971%" y="783.50"></text></g><g><title>__GI___read (1 samples, 0.15%)</title><rect x="18.5471%" y="757" width="0.1546%" height="15" fill="rgb(209,67,49)"/><text x="18.7971%" y="767.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.15%)</title><rect x="18.5471%" y="741" width="0.1546%" height="15" fill="rgb(213,87,29)"/><text x="18.7971%" y="751.50"></text></g><g><title>do_syscall_64 (1 samples, 0.15%)</title><rect x="18.5471%" y="725" width="0.1546%" height="15" fill="rgb(205,151,52)"/><text x="18.7971%" y="735.50"></text></g><g><title>ksys_read (1 samples, 0.15%)</title><rect x="18.5471%" y="709" width="0.1546%" height="15" fill="rgb(253,215,39)"/><text x="18.7971%" y="719.50"></text></g><g><title>vfs_read (1 samples, 0.15%)</title><rect x="18.5471%" y="693" width="0.1546%" height="15" fill="rgb(221,220,41)"/><text x="18.7971%" y="703.50"></text></g><g><title>seq_read (1 samples, 0.15%)</title><rect x="18.5471%" y="677" width="0.1546%" height="15" fill="rgb(218,133,21)"/><text x="18.7971%" y="687.50"></text></g><g><title>show_cpuinfo (1 samples, 0.15%)</title><rect x="18.5471%" y="661" width="0.1546%" height="15" fill="rgb(221,193,43)"/><text x="18.7971%" y="671.50"></text></g><g><title>seq_printf (1 samples, 0.15%)</title><rect x="18.5471%" y="645" width="0.1546%" height="15" fill="rgb(240,128,52)"/><text x="18.7971%" y="655.50"></text></g><g><title>vsnprintf (1 samples, 0.15%)</title><rect x="18.5471%" y="629" width="0.1546%" height="15" fill="rgb(253,114,12)"/><text x="18.7971%" y="639.50"></text></g><g><title>format_decode (1 samples, 0.15%)</title><rect x="18.5471%" y="613" width="0.1546%" height="15" fill="rgb(215,223,47)"/><text x="18.7971%" y="623.50"></text></g><g><title>_int_free (1 samples, 0.15%)</title><rect x="18.7017%" y="837" width="0.1546%" height="15" fill="rgb(248,225,23)"/><text x="18.9517%" y="847.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.15%)</title><rect x="18.8563%" y="821" width="0.1546%" height="15" fill="rgb(250,108,0)"/><text x="19.1063%" y="831.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="18.8563%" y="805" width="0.1546%" height="15" fill="rgb(228,208,7)"/><text x="19.1063%" y="815.50"></text></g><g><title>__pthread_disable_asynccancel (1 samples, 0.15%)</title><rect x="19.3199%" y="709" width="0.1546%" height="15" fill="rgb(244,45,10)"/><text x="19.5699%" y="719.50"></text></g><g><title>__x86_indirect_thunk_rax (1 samples, 0.15%)</title><rect x="19.4745%" y="709" width="0.1546%" height="15" fill="rgb(207,125,25)"/><text x="19.7245%" y="719.50"></text></g><g><title>__kfree_skb (1 samples, 0.15%)</title><rect x="20.4019%" y="613" width="0.1546%" height="15" fill="rgb(210,195,18)"/><text x="20.6519%" y="623.50"></text></g><g><title>skb_release_head_state (1 samples, 0.15%)</title><rect x="20.4019%" y="597" width="0.1546%" height="15" fill="rgb(249,80,12)"/><text x="20.6519%" y="607.50"></text></g><g><title>dst_release (1 samples, 0.15%)</title><rect x="20.4019%" y="581" width="0.1546%" height="15" fill="rgb(221,65,9)"/><text x="20.6519%" y="591.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.15%)</title><rect x="20.5564%" y="613" width="0.1546%" height="15" fill="rgb(235,49,36)"/><text x="20.8064%" y="623.50"></text></g><g><title>preempt_count_sub (1 samples, 0.15%)</title><rect x="20.5564%" y="597" width="0.1546%" height="15" fill="rgb(225,32,20)"/><text x="20.8064%" y="607.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.15%)</title><rect x="20.7110%" y="597" width="0.1546%" height="15" fill="rgb(215,141,46)"/><text x="20.9610%" y="607.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.15%)</title><rect x="20.8655%" y="597" width="0.1546%" height="15" fill="rgb(250,160,47)"/><text x="21.1155%" y="607.50"></text></g><g><title>_raw_spin_unlock_irqrestore (1 samples, 0.15%)</title><rect x="21.0201%" y="597" width="0.1546%" height="15" fill="rgb(216,222,40)"/><text x="21.2701%" y="607.50"></text></g><g><title>__perf_event_task_sched_out (1 samples, 0.15%)</title><rect x="22.1020%" y="533" width="0.1546%" height="15" fill="rgb(234,217,39)"/><text x="22.3520%" y="543.50"></text></g><g><title>ctx_sched_out (1 samples, 0.15%)</title><rect x="22.1020%" y="517" width="0.1546%" height="15" fill="rgb(207,178,40)"/><text x="22.3520%" y="527.50"></text></g><g><title>x86_pmu_disable (1 samples, 0.15%)</title><rect x="22.1020%" y="501" width="0.1546%" height="15" fill="rgb(221,136,13)"/><text x="22.3520%" y="511.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.15%)</title><rect x="22.1020%" y="485" width="0.1546%" height="15" fill="rgb(249,199,10)"/><text x="22.3520%" y="495.50"></text></g><g><title>update_curr (1 samples, 0.15%)</title><rect x="22.5657%" y="501" width="0.1546%" height="15" fill="rgb(249,222,13)"/><text x="22.8157%" y="511.50"></text></g><g><title>update_min_vruntime (1 samples, 0.15%)</title><rect x="22.5657%" y="485" width="0.1546%" height="15" fill="rgb(244,185,38)"/><text x="22.8157%" y="495.50"></text></g><g><title>dequeue_task_fair (4 samples, 0.62%)</title><rect x="22.2566%" y="533" width="0.6182%" height="15" fill="rgb(236,202,9)"/><text x="22.5066%" y="543.50"></text></g><g><title>dequeue_entity (3 samples, 0.46%)</title><rect x="22.4111%" y="517" width="0.4637%" height="15" fill="rgb(250,229,37)"/><text x="22.6611%" y="527.50"></text></g><g><title>update_load_avg (1 samples, 0.15%)</title><rect x="22.7202%" y="501" width="0.1546%" height="15" fill="rgb(206,174,23)"/><text x="22.9702%" y="511.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (3 samples, 0.46%)</title><rect x="22.8748%" y="501" width="0.4637%" height="15" fill="rgb(211,33,43)"/><text x="23.1248%" y="511.50"></text></g><g><title>native_write_msr (3 samples, 0.46%)</title><rect x="22.8748%" y="485" width="0.4637%" height="15" fill="rgb(245,58,50)"/><text x="23.1248%" y="495.50"></text></g><g><title>__perf_event_task_sched_in (4 samples, 0.62%)</title><rect x="22.8748%" y="517" width="0.6182%" height="15" fill="rgb(244,68,36)"/><text x="23.1248%" y="527.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.15%)</title><rect x="23.3385%" y="501" width="0.1546%" height="15" fill="rgb(232,229,15)"/><text x="23.5885%" y="511.50"></text></g><g><title>preempt_count_sub (1 samples, 0.15%)</title><rect x="23.3385%" y="485" width="0.1546%" height="15" fill="rgb(254,30,23)"/><text x="23.5885%" y="495.50"></text></g><g><title>finish_task_switch (5 samples, 0.77%)</title><rect x="22.8748%" y="533" width="0.7728%" height="15" fill="rgb(235,160,14)"/><text x="23.1248%" y="543.50"></text></g><g><title>_raw_spin_unlock_irq (1 samples, 0.15%)</title><rect x="23.4930%" y="517" width="0.1546%" height="15" fill="rgb(212,155,44)"/><text x="23.7430%" y="527.50"></text></g><g><title>preempt_count_sub (1 samples, 0.15%)</title><rect x="23.4930%" y="501" width="0.1546%" height="15" fill="rgb(226,2,50)"/><text x="23.7430%" y="511.50"></text></g><g><title>pick_next_task_fair (1 samples, 0.15%)</title><rect x="23.6476%" y="533" width="0.1546%" height="15" fill="rgb(234,177,6)"/><text x="23.8976%" y="543.50"></text></g><g><title>newidle_balance (1 samples, 0.15%)</title><rect x="23.6476%" y="517" width="0.1546%" height="15" fill="rgb(217,24,9)"/><text x="23.8976%" y="527.50"></text></g><g><title>psi_task_change (1 samples, 0.15%)</title><rect x="23.8022%" y="533" width="0.1546%" height="15" fill="rgb(220,13,46)"/><text x="24.0522%" y="543.50"></text></g><g><title>psi_group_change (1 samples, 0.15%)</title><rect x="23.8022%" y="517" width="0.1546%" height="15" fill="rgb(239,221,27)"/><text x="24.0522%" y="527.50"></text></g><g><title>record_times (1 samples, 0.15%)</title><rect x="23.8022%" y="501" width="0.1546%" height="15" fill="rgb(222,198,25)"/><text x="24.0522%" y="511.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.15%)</title><rect x="23.8022%" y="485" width="0.1546%" height="15" fill="rgb(211,99,13)"/><text x="24.0522%" y="495.50"></text></g><g><title>put_prev_task_fair (2 samples, 0.31%)</title><rect x="23.9567%" y="533" width="0.3091%" height="15" fill="rgb(232,111,31)"/><text x="24.2067%" y="543.50"></text></g><g><title>put_prev_entity (1 samples, 0.15%)</title><rect x="24.1113%" y="517" width="0.1546%" height="15" fill="rgb(245,82,37)"/><text x="24.3613%" y="527.50"></text></g><g><title>check_cfs_rq_runtime (1 samples, 0.15%)</title><rect x="24.1113%" y="501" width="0.1546%" height="15" fill="rgb(227,149,46)"/><text x="24.3613%" y="511.50"></text></g><g><title>rcu_note_context_switch (1 samples, 0.15%)</title><rect x="24.2658%" y="533" width="0.1546%" height="15" fill="rgb(218,36,50)"/><text x="24.5158%" y="543.50"></text></g><g><title>uclamp_rq_dec_id (1 samples, 0.15%)</title><rect x="24.4204%" y="533" width="0.1546%" height="15" fill="rgb(226,80,48)"/><text x="24.6704%" y="543.50"></text></g><g><title>sk_wait_data (26 samples, 4.02%)</title><rect x="20.7110%" y="613" width="4.0185%" height="15" fill="rgb(238,224,15)"/><text x="20.9610%" y="623.50">sk_w..</text></g><g><title>wait_woken (23 samples, 3.55%)</title><rect x="21.1747%" y="597" width="3.5549%" height="15" fill="rgb(241,136,10)"/><text x="21.4247%" y="607.50">wait..</text></g><g><title>schedule_timeout (19 samples, 2.94%)</title><rect x="21.7929%" y="581" width="2.9366%" height="15" fill="rgb(208,32,45)"/><text x="22.0429%" y="591.50">sc..</text></g><g><title>schedule (19 samples, 2.94%)</title><rect x="21.7929%" y="565" width="2.9366%" height="15" fill="rgb(207,135,9)"/><text x="22.0429%" y="575.50">sc..</text></g><g><title>__schedule (18 samples, 2.78%)</title><rect x="21.9474%" y="549" width="2.7821%" height="15" fill="rgb(206,86,44)"/><text x="22.1974%" y="559.50">__..</text></g><g><title>update_rq_clock (1 samples, 0.15%)</title><rect x="24.5750%" y="533" width="0.1546%" height="15" fill="rgb(245,177,15)"/><text x="24.8250%" y="543.50"></text></g><g><title>inet_recvmsg (38 samples, 5.87%)</title><rect x="19.7836%" y="645" width="5.8733%" height="15" fill="rgb(206,64,50)"/><text x="20.0336%" y="655.50">inet_re..</text></g><g><title>tcp_recvmsg (36 samples, 5.56%)</title><rect x="20.0927%" y="629" width="5.5641%" height="15" fill="rgb(234,36,40)"/><text x="20.3427%" y="639.50">tcp_rec..</text></g><g><title>skb_copy_datagram_iter (6 samples, 0.93%)</title><rect x="24.7295%" y="613" width="0.9274%" height="15" fill="rgb(213,64,8)"/><text x="24.9795%" y="623.50"></text></g><g><title>__skb_datagram_iter (6 samples, 0.93%)</title><rect x="24.7295%" y="597" width="0.9274%" height="15" fill="rgb(210,75,36)"/><text x="24.9795%" y="607.50"></text></g><g><title>simple_copy_to_iter (4 samples, 0.62%)</title><rect x="25.0386%" y="581" width="0.6182%" height="15" fill="rgb(229,88,21)"/><text x="25.2886%" y="591.50"></text></g><g><title>__check_object_size (3 samples, 0.46%)</title><rect x="25.1932%" y="565" width="0.4637%" height="15" fill="rgb(252,204,47)"/><text x="25.4432%" y="575.50"></text></g><g><title>__virt_addr_valid (1 samples, 0.15%)</title><rect x="25.5023%" y="549" width="0.1546%" height="15" fill="rgb(208,77,27)"/><text x="25.7523%" y="559.50"></text></g><g><title>__fdget (1 samples, 0.15%)</title><rect x="25.6569%" y="629" width="0.1546%" height="15" fill="rgb(221,76,26)"/><text x="25.9069%" y="639.50"></text></g><g><title>__x64_sys_recvfrom (41 samples, 6.34%)</title><rect x="19.6291%" y="677" width="6.3369%" height="15" fill="rgb(225,139,18)"/><text x="19.8791%" y="687.50">__x64_sy..</text></g><g><title>__sys_recvfrom (41 samples, 6.34%)</title><rect x="19.6291%" y="661" width="6.3369%" height="15" fill="rgb(230,137,11)"/><text x="19.8791%" y="671.50">__sys_re..</text></g><g><title>sockfd_lookup_light (2 samples, 0.31%)</title><rect x="25.6569%" y="645" width="0.3091%" height="15" fill="rgb(212,28,1)"/><text x="25.9069%" y="655.50"></text></g><g><title>__fget_light (1 samples, 0.15%)</title><rect x="25.8114%" y="629" width="0.1546%" height="15" fill="rgb(248,164,17)"/><text x="26.0614%" y="639.50"></text></g><g><title>__fget_files (1 samples, 0.15%)</title><rect x="25.8114%" y="613" width="0.1546%" height="15" fill="rgb(222,171,42)"/><text x="26.0614%" y="623.50"></text></g><g><title>syscall_slow_exit_work (1 samples, 0.15%)</title><rect x="25.9660%" y="677" width="0.1546%" height="15" fill="rgb(243,84,45)"/><text x="26.2160%" y="687.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.15%)</title><rect x="25.9660%" y="661" width="0.1546%" height="15" fill="rgb(252,49,23)"/><text x="26.2160%" y="671.50"></text></g><g><title>kfree (1 samples, 0.15%)</title><rect x="25.9660%" y="645" width="0.1546%" height="15" fill="rgb(215,19,7)"/><text x="26.2160%" y="655.50"></text></g><g><title>do_syscall_64 (43 samples, 6.65%)</title><rect x="19.6291%" y="693" width="6.6461%" height="15" fill="rgb(238,81,41)"/><text x="19.8791%" y="703.50">do_syscal..</text></g><g><title>syscall_trace_enter (1 samples, 0.15%)</title><rect x="26.1206%" y="677" width="0.1546%" height="15" fill="rgb(210,199,37)"/><text x="26.3706%" y="687.50"></text></g><g><title>__audit_syscall_entry (1 samples, 0.15%)</title><rect x="26.1206%" y="661" width="0.1546%" height="15" fill="rgb(244,192,49)"/><text x="26.3706%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (47 samples, 7.26%)</title><rect x="19.6291%" y="709" width="7.2643%" height="15" fill="rgb(226,211,11)"/><text x="19.8791%" y="719.50">entry_SYSC..</text></g><g><title>prepare_exit_to_usermode (4 samples, 0.62%)</title><rect x="26.2751%" y="693" width="0.6182%" height="15" fill="rgb(236,162,54)"/><text x="26.5251%" y="703.50"></text></g><g><title>switch_fpu_return (1 samples, 0.15%)</title><rect x="26.7388%" y="677" width="0.1546%" height="15" fill="rgb(220,229,9)"/><text x="26.9888%" y="687.50"></text></g><g><title>__libc_recv (52 samples, 8.04%)</title><rect x="19.0108%" y="725" width="8.0371%" height="15" fill="rgb(250,87,22)"/><text x="19.2608%" y="735.50">__libc_recv</text></g><g><title>syscall_return_via_sysret (1 samples, 0.15%)</title><rect x="26.8934%" y="709" width="0.1546%" height="15" fill="rgb(239,43,17)"/><text x="27.1434%" y="719.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (53 samples, 8.19%)</title><rect x="19.0108%" y="805" width="8.1917%" height="15" fill="rgb(231,177,25)"/><text x="19.2608%" y="815.50">&lt;std::io::b..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (53 samples, 8.19%)</title><rect x="19.0108%" y="789" width="8.1917%" height="15" fill="rgb(219,179,1)"/><text x="19.2608%" y="799.50">&lt;std::net::..</text></g><g><title>std::sys_common::net::TcpStream::read (53 samples, 8.19%)</title><rect x="19.0108%" y="773" width="8.1917%" height="15" fill="rgb(238,219,53)"/><text x="19.2608%" y="783.50">std::sys_co..</text></g><g><title>std::sys::unix::net::Socket::read (53 samples, 8.19%)</title><rect x="19.0108%" y="757" width="8.1917%" height="15" fill="rgb(232,167,36)"/><text x="19.2608%" y="767.50">std::sys::u..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (53 samples, 8.19%)</title><rect x="19.0108%" y="741" width="8.1917%" height="15" fill="rgb(244,19,51)"/><text x="19.2608%" y="751.50">std::sys::u..</text></g><g><title>std::sys::unix::cvt (1 samples, 0.15%)</title><rect x="27.0479%" y="725" width="0.1546%" height="15" fill="rgb(224,6,22)"/><text x="27.2979%" y="735.50"></text></g><g><title>&lt;isize as std::sys::unix::IsMinusOne&gt;::is_minus_one (1 samples, 0.15%)</title><rect x="27.0479%" y="709" width="0.1546%" height="15" fill="rgb(224,145,5)"/><text x="27.2979%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="27.2025%" y="757" width="0.1546%" height="15" fill="rgb(234,130,49)"/><text x="27.4525%" y="767.50"></text></g><g><title>__rdl_alloc (1 samples, 0.15%)</title><rect x="27.2025%" y="741" width="0.1546%" height="15" fill="rgb(254,6,2)"/><text x="27.4525%" y="751.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.15%)</title><rect x="27.2025%" y="725" width="0.1546%" height="15" fill="rgb(208,96,46)"/><text x="27.4525%" y="735.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (55 samples, 8.50%)</title><rect x="19.0108%" y="821" width="8.5008%" height="15" fill="rgb(239,3,39)"/><text x="19.2608%" y="831.50">&lt;mysql_commo..</text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (2 samples, 0.31%)</title><rect x="27.2025%" y="805" width="0.3091%" height="15" fill="rgb(233,210,1)"/><text x="27.4525%" y="815.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (2 samples, 0.31%)</title><rect x="27.2025%" y="789" width="0.3091%" height="15" fill="rgb(244,137,37)"/><text x="27.4525%" y="799.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.31%)</title><rect x="27.2025%" y="773" width="0.3091%" height="15" fill="rgb(240,136,2)"/><text x="27.4525%" y="783.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.15%)</title><rect x="27.3570%" y="757" width="0.1546%" height="15" fill="rgb(239,18,37)"/><text x="27.6070%" y="767.50"></text></g><g><title>bytes::bytes_mut::BytesMut::set_start (1 samples, 0.15%)</title><rect x="27.3570%" y="741" width="0.1546%" height="15" fill="rgb(218,185,22)"/><text x="27.6070%" y="751.50"></text></g><g><title>_int_free (1 samples, 0.15%)</title><rect x="27.5116%" y="821" width="0.1546%" height="15" fill="rgb(225,218,4)"/><text x="27.7616%" y="831.50"></text></g><g><title>mysql::conn::Conn::read_packet (58 samples, 8.96%)</title><rect x="18.8563%" y="837" width="8.9645%" height="15" fill="rgb(230,182,32)"/><text x="19.1063%" y="847.50">mysql::conn::..</text></g><g><title>std::io::error::Error::_new (1 samples, 0.15%)</title><rect x="27.6662%" y="821" width="0.1546%" height="15" fill="rgb(242,56,43)"/><text x="27.9162%" y="831.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.15%)</title><rect x="27.6662%" y="805" width="0.1546%" height="15" fill="rgb(233,99,24)"/><text x="27.9162%" y="815.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.15%)</title><rect x="27.6662%" y="789" width="0.1546%" height="15" fill="rgb(234,209,42)"/><text x="27.9162%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.15%)</title><rect x="27.6662%" y="773" width="0.1546%" height="15" fill="rgb(227,7,12)"/><text x="27.9162%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.15%)</title><rect x="27.6662%" y="757" width="0.1546%" height="15" fill="rgb(245,203,43)"/><text x="27.9162%" y="767.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.15%)</title><rect x="27.6662%" y="741" width="0.1546%" height="15" fill="rgb(238,205,33)"/><text x="27.9162%" y="751.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="27.6662%" y="725" width="0.1546%" height="15" fill="rgb(231,56,7)"/><text x="27.9162%" y="735.50"></text></g><g><title>lobsters::main (62 samples, 9.58%)</title><rect x="18.3926%" y="901" width="9.5827%" height="15" fill="rgb(244,186,29)"/><text x="18.6426%" y="911.50">lobsters::main</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (60 samples, 9.27%)</title><rect x="18.7017%" y="885" width="9.2736%" height="15" fill="rgb(234,111,31)"/><text x="18.9517%" y="895.50">mysql::conn::..</text></g><g><title>mysql::conn::Conn::_query (60 samples, 9.27%)</title><rect x="18.7017%" y="869" width="9.2736%" height="15" fill="rgb(241,149,10)"/><text x="18.9517%" y="879.50">mysql::conn::..</text></g><g><title>mysql::conn::Conn::handle_result_set (60 samples, 9.27%)</title><rect x="18.7017%" y="853" width="9.2736%" height="15" fill="rgb(249,206,44)"/><text x="18.9517%" y="863.50">mysql::conn::..</text></g><g><title>mysql_common::packets::OkPacket::into_owned (1 samples, 0.15%)</title><rect x="27.8207%" y="837" width="0.1546%" height="15" fill="rgb(251,153,30)"/><text x="28.0707%" y="847.50"></text></g><g><title>core::fmt::write (1 samples, 0.15%)</title><rect x="27.9753%" y="837" width="0.1546%" height="15" fill="rgb(239,152,38)"/><text x="28.2253%" y="847.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (1 samples, 0.15%)</title><rect x="27.9753%" y="821" width="0.1546%" height="15" fill="rgb(249,139,47)"/><text x="28.2253%" y="831.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::CreateTableStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.15%)</title><rect x="27.9753%" y="805" width="0.1546%" height="15" fill="rgb(244,64,35)"/><text x="28.2253%" y="815.50"></text></g><g><title>&lt;sql_parser::ast::defs::ddl::IndexDef as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.15%)</title><rect x="27.9753%" y="789" width="0.1546%" height="15" fill="rgb(216,46,15)"/><text x="28.2253%" y="799.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.15%)</title><rect x="27.9753%" y="773" width="0.1546%" height="15" fill="rgb(250,74,19)"/><text x="28.2253%" y="783.50"></text></g><g><title>core::fmt::write (1 samples, 0.15%)</title><rect x="27.9753%" y="757" width="0.1546%" height="15" fill="rgb(249,42,33)"/><text x="28.2253%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (1 samples, 0.15%)</title><rect x="27.9753%" y="741" width="0.1546%" height="15" fill="rgb(242,149,17)"/><text x="28.2253%" y="751.50"></text></g><g><title>core::iter::adapters::zip::Zip&lt;A,B&gt;::new (1 samples, 0.15%)</title><rect x="27.9753%" y="725" width="0.1546%" height="15" fill="rgb(244,29,21)"/><text x="28.2253%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (1 samples, 0.15%)</title><rect x="27.9753%" y="709" width="0.1546%" height="15" fill="rgb(220,130,37)"/><text x="28.2253%" y="719.50"></text></g><g><title>core::cmp::min (1 samples, 0.15%)</title><rect x="27.9753%" y="693" width="0.1546%" height="15" fill="rgb(211,67,2)"/><text x="28.2253%" y="703.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.15%)</title><rect x="27.9753%" y="677" width="0.1546%" height="15" fill="rgb(235,68,52)"/><text x="28.2253%" y="687.50"></text></g><g><title>core::fmt::write (1 samples, 0.15%)</title><rect x="27.9753%" y="661" width="0.1546%" height="15" fill="rgb(246,142,3)"/><text x="28.2253%" y="671.50"></text></g><g><title>mysql::conn::Conn::start_transaction (1 samples, 0.15%)</title><rect x="28.1298%" y="837" width="0.1546%" height="15" fill="rgb(241,25,7)"/><text x="28.3798%" y="847.50"></text></g><g><title>mysql::conn::Conn::_start_transaction (1 samples, 0.15%)</title><rect x="28.1298%" y="821" width="0.1546%" height="15" fill="rgb(242,119,39)"/><text x="28.3798%" y="831.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (1 samples, 0.15%)</title><rect x="28.1298%" y="805" width="0.1546%" height="15" fill="rgb(241,98,45)"/><text x="28.3798%" y="815.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.15%)</title><rect x="28.1298%" y="789" width="0.1546%" height="15" fill="rgb(254,28,30)"/><text x="28.3798%" y="799.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.15%)</title><rect x="28.1298%" y="773" width="0.1546%" height="15" fill="rgb(241,142,54)"/><text x="28.3798%" y="783.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.15%)</title><rect x="28.1298%" y="757" width="0.1546%" height="15" fill="rgb(222,85,15)"/><text x="28.3798%" y="767.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.15%)</title><rect x="28.1298%" y="741" width="0.1546%" height="15" fill="rgb(210,85,47)"/><text x="28.3798%" y="751.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1 samples, 0.15%)</title><rect x="28.1298%" y="725" width="0.1546%" height="15" fill="rgb(224,206,25)"/><text x="28.3798%" y="735.50"></text></g><g><title>__libc_send (1 samples, 0.15%)</title><rect x="28.1298%" y="709" width="0.1546%" height="15" fill="rgb(243,201,19)"/><text x="28.3798%" y="719.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.15%)</title><rect x="28.1298%" y="693" width="0.1546%" height="15" fill="rgb(236,59,4)"/><text x="28.3798%" y="703.50"></text></g><g><title>do_syscall_64 (1 samples, 0.15%)</title><rect x="28.1298%" y="677" width="0.1546%" height="15" fill="rgb(254,179,45)"/><text x="28.3798%" y="687.50"></text></g><g><title>__x64_sys_sendto (1 samples, 0.15%)</title><rect x="28.1298%" y="661" width="0.1546%" height="15" fill="rgb(226,14,10)"/><text x="28.3798%" y="671.50"></text></g><g><title>__sys_sendto (1 samples, 0.15%)</title><rect x="28.1298%" y="645" width="0.1546%" height="15" fill="rgb(244,27,41)"/><text x="28.3798%" y="655.50"></text></g><g><title>sock_sendmsg (1 samples, 0.15%)</title><rect x="28.1298%" y="629" width="0.1546%" height="15" fill="rgb(235,35,32)"/><text x="28.3798%" y="639.50"></text></g><g><title>tcp_sendmsg (1 samples, 0.15%)</title><rect x="28.1298%" y="613" width="0.1546%" height="15" fill="rgb(218,68,31)"/><text x="28.3798%" y="623.50"></text></g><g><title>tcp_sendmsg_locked (1 samples, 0.15%)</title><rect x="28.1298%" y="597" width="0.1546%" height="15" fill="rgb(207,120,37)"/><text x="28.3798%" y="607.50"></text></g><g><title>__tcp_push_pending_frames (1 samples, 0.15%)</title><rect x="28.1298%" y="581" width="0.1546%" height="15" fill="rgb(227,98,0)"/><text x="28.3798%" y="591.50"></text></g><g><title>tcp_write_xmit (1 samples, 0.15%)</title><rect x="28.1298%" y="565" width="0.1546%" height="15" fill="rgb(207,7,3)"/><text x="28.3798%" y="575.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.15%)</title><rect x="28.1298%" y="549" width="0.1546%" height="15" fill="rgb(206,98,19)"/><text x="28.3798%" y="559.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.15%)</title><rect x="28.1298%" y="533" width="0.1546%" height="15" fill="rgb(217,5,26)"/><text x="28.3798%" y="543.50"></text></g><g><title>ip_output (1 samples, 0.15%)</title><rect x="28.1298%" y="517" width="0.1546%" height="15" fill="rgb(235,190,38)"/><text x="28.3798%" y="527.50"></text></g><g><title>ip_finish_output2 (1 samples, 0.15%)</title><rect x="28.1298%" y="501" width="0.1546%" height="15" fill="rgb(247,86,24)"/><text x="28.3798%" y="511.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.15%)</title><rect x="28.1298%" y="485" width="0.1546%" height="15" fill="rgb(205,101,16)"/><text x="28.3798%" y="495.50"></text></g><g><title>do_softirq (1 samples, 0.15%)</title><rect x="28.1298%" y="469" width="0.1546%" height="15" fill="rgb(246,168,33)"/><text x="28.3798%" y="479.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.15%)</title><rect x="28.1298%" y="453" width="0.1546%" height="15" fill="rgb(231,114,1)"/><text x="28.3798%" y="463.50"></text></g><g><title>__do_softirq (1 samples, 0.15%)</title><rect x="28.1298%" y="437" width="0.1546%" height="15" fill="rgb(207,184,53)"/><text x="28.3798%" y="447.50"></text></g><g><title>net_rx_action (1 samples, 0.15%)</title><rect x="28.1298%" y="421" width="0.1546%" height="15" fill="rgb(224,95,51)"/><text x="28.3798%" y="431.50"></text></g><g><title>process_backlog (1 samples, 0.15%)</title><rect x="28.1298%" y="405" width="0.1546%" height="15" fill="rgb(212,188,45)"/><text x="28.3798%" y="415.50"></text></g><g><title>__netif_receive_skb_one_core (1 samples, 0.15%)</title><rect x="28.1298%" y="389" width="0.1546%" height="15" fill="rgb(223,154,38)"/><text x="28.3798%" y="399.50"></text></g><g><title>ip_rcv (1 samples, 0.15%)</title><rect x="28.1298%" y="373" width="0.1546%" height="15" fill="rgb(251,22,52)"/><text x="28.3798%" y="383.50"></text></g><g><title>ip_local_deliver (1 samples, 0.15%)</title><rect x="28.1298%" y="357" width="0.1546%" height="15" fill="rgb(229,209,22)"/><text x="28.3798%" y="367.50"></text></g><g><title>ip_local_deliver_finish (1 samples, 0.15%)</title><rect x="28.1298%" y="341" width="0.1546%" height="15" fill="rgb(234,138,34)"/><text x="28.3798%" y="351.50"></text></g><g><title>ip_protocol_deliver_rcu (1 samples, 0.15%)</title><rect x="28.1298%" y="325" width="0.1546%" height="15" fill="rgb(212,95,11)"/><text x="28.3798%" y="335.50"></text></g><g><title>tcp_v4_rcv (1 samples, 0.15%)</title><rect x="28.1298%" y="309" width="0.1546%" height="15" fill="rgb(240,179,47)"/><text x="28.3798%" y="319.50"></text></g><g><title>sock_def_readable (1 samples, 0.15%)</title><rect x="28.2844%" y="277" width="0.1546%" height="15" fill="rgb(240,163,11)"/><text x="28.5344%" y="287.50"></text></g><g><title>__wake_up_common_lock (1 samples, 0.15%)</title><rect x="28.2844%" y="261" width="0.1546%" height="15" fill="rgb(236,37,12)"/><text x="28.5344%" y="271.50"></text></g><g><title>__wake_up_common (1 samples, 0.15%)</title><rect x="28.2844%" y="245" width="0.1546%" height="15" fill="rgb(232,164,16)"/><text x="28.5344%" y="255.50"></text></g><g><title>pollwake (1 samples, 0.15%)</title><rect x="28.2844%" y="229" width="0.1546%" height="15" fill="rgb(244,205,15)"/><text x="28.5344%" y="239.50"></text></g><g><title>try_to_wake_up (1 samples, 0.15%)</title><rect x="28.2844%" y="213" width="0.1546%" height="15" fill="rgb(223,117,47)"/><text x="28.5344%" y="223.50"></text></g><g><title>enqueue_task (1 samples, 0.15%)</title><rect x="28.2844%" y="197" width="0.1546%" height="15" fill="rgb(244,107,35)"/><text x="28.5344%" y="207.50"></text></g><g><title>psi_task_change (1 samples, 0.15%)</title><rect x="28.2844%" y="181" width="0.1546%" height="15" fill="rgb(205,140,8)"/><text x="28.5344%" y="191.50"></text></g><g><title>psi_group_change (1 samples, 0.15%)</title><rect x="28.2844%" y="165" width="0.1546%" height="15" fill="rgb(228,84,46)"/><text x="28.5344%" y="175.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (4 samples, 0.62%)</title><rect x="27.9753%" y="901" width="0.6182%" height="15" fill="rgb(254,188,9)"/><text x="28.2253%" y="911.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (4 samples, 0.62%)</title><rect x="27.9753%" y="885" width="0.6182%" height="15" fill="rgb(206,112,54)"/><text x="28.2253%" y="895.50"></text></g><g><title>decor::Shim::create_schema (4 samples, 0.62%)</title><rect x="27.9753%" y="869" width="0.6182%" height="15" fill="rgb(216,84,49)"/><text x="28.2253%" y="879.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query_drop (4 samples, 0.62%)</title><rect x="27.9753%" y="853" width="0.6182%" height="15" fill="rgb(214,194,35)"/><text x="28.2253%" y="863.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (2 samples, 0.31%)</title><rect x="28.2844%" y="837" width="0.3091%" height="15" fill="rgb(249,28,3)"/><text x="28.5344%" y="847.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (2 samples, 0.31%)</title><rect x="28.2844%" y="821" width="0.3091%" height="15" fill="rgb(222,56,52)"/><text x="28.5344%" y="831.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.31%)</title><rect x="28.2844%" y="805" width="0.3091%" height="15" fill="rgb(245,217,50)"/><text x="28.5344%" y="815.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (2 samples, 0.31%)</title><rect x="28.2844%" y="789" width="0.3091%" height="15" fill="rgb(213,201,24)"/><text x="28.5344%" y="799.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (2 samples, 0.31%)</title><rect x="28.2844%" y="773" width="0.3091%" height="15" fill="rgb(248,116,28)"/><text x="28.5344%" y="783.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (2 samples, 0.31%)</title><rect x="28.2844%" y="757" width="0.3091%" height="15" fill="rgb(219,72,43)"/><text x="28.5344%" y="767.50"></text></g><g><title>std::sys_common::net::TcpStream::write (2 samples, 0.31%)</title><rect x="28.2844%" y="741" width="0.3091%" height="15" fill="rgb(209,138,14)"/><text x="28.5344%" y="751.50"></text></g><g><title>__libc_send (2 samples, 0.31%)</title><rect x="28.2844%" y="725" width="0.3091%" height="15" fill="rgb(222,18,33)"/><text x="28.5344%" y="735.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.31%)</title><rect x="28.2844%" y="709" width="0.3091%" height="15" fill="rgb(213,199,7)"/><text x="28.5344%" y="719.50"></text></g><g><title>do_syscall_64 (2 samples, 0.31%)</title><rect x="28.2844%" y="693" width="0.3091%" height="15" fill="rgb(250,110,10)"/><text x="28.5344%" y="703.50"></text></g><g><title>__x64_sys_sendto (2 samples, 0.31%)</title><rect x="28.2844%" y="677" width="0.3091%" height="15" fill="rgb(248,123,6)"/><text x="28.5344%" y="687.50"></text></g><g><title>__sys_sendto (2 samples, 0.31%)</title><rect x="28.2844%" y="661" width="0.3091%" height="15" fill="rgb(206,91,31)"/><text x="28.5344%" y="671.50"></text></g><g><title>sock_sendmsg (2 samples, 0.31%)</title><rect x="28.2844%" y="645" width="0.3091%" height="15" fill="rgb(211,154,13)"/><text x="28.5344%" y="655.50"></text></g><g><title>tcp_sendmsg (2 samples, 0.31%)</title><rect x="28.2844%" y="629" width="0.3091%" height="15" fill="rgb(225,148,7)"/><text x="28.5344%" y="639.50"></text></g><g><title>tcp_sendmsg_locked (2 samples, 0.31%)</title><rect x="28.2844%" y="613" width="0.3091%" height="15" fill="rgb(220,160,43)"/><text x="28.5344%" y="623.50"></text></g><g><title>__tcp_push_pending_frames (2 samples, 0.31%)</title><rect x="28.2844%" y="597" width="0.3091%" height="15" fill="rgb(213,52,39)"/><text x="28.5344%" y="607.50"></text></g><g><title>tcp_write_xmit (2 samples, 0.31%)</title><rect x="28.2844%" y="581" width="0.3091%" height="15" fill="rgb(243,137,7)"/><text x="28.5344%" y="591.50"></text></g><g><title>__tcp_transmit_skb (2 samples, 0.31%)</title><rect x="28.2844%" y="565" width="0.3091%" height="15" fill="rgb(230,79,13)"/><text x="28.5344%" y="575.50"></text></g><g><title>__ip_queue_xmit (2 samples, 0.31%)</title><rect x="28.2844%" y="549" width="0.3091%" height="15" fill="rgb(247,105,23)"/><text x="28.5344%" y="559.50"></text></g><g><title>ip_output (2 samples, 0.31%)</title><rect x="28.2844%" y="533" width="0.3091%" height="15" fill="rgb(223,179,41)"/><text x="28.5344%" y="543.50"></text></g><g><title>ip_finish_output2 (2 samples, 0.31%)</title><rect x="28.2844%" y="517" width="0.3091%" height="15" fill="rgb(218,9,34)"/><text x="28.5344%" y="527.50"></text></g><g><title>__local_bh_enable_ip (2 samples, 0.31%)</title><rect x="28.2844%" y="501" width="0.3091%" height="15" fill="rgb(222,106,8)"/><text x="28.5344%" y="511.50"></text></g><g><title>do_softirq (2 samples, 0.31%)</title><rect x="28.2844%" y="485" width="0.3091%" height="15" fill="rgb(211,220,0)"/><text x="28.5344%" y="495.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.31%)</title><rect x="28.2844%" y="469" width="0.3091%" height="15" fill="rgb(229,52,16)"/><text x="28.5344%" y="479.50"></text></g><g><title>__do_softirq (2 samples, 0.31%)</title><rect x="28.2844%" y="453" width="0.3091%" height="15" fill="rgb(212,155,18)"/><text x="28.5344%" y="463.50"></text></g><g><title>net_rx_action (2 samples, 0.31%)</title><rect x="28.2844%" y="437" width="0.3091%" height="15" fill="rgb(242,21,14)"/><text x="28.5344%" y="447.50"></text></g><g><title>process_backlog (2 samples, 0.31%)</title><rect x="28.2844%" y="421" width="0.3091%" height="15" fill="rgb(222,19,48)"/><text x="28.5344%" y="431.50"></text></g><g><title>__netif_receive_skb_one_core (2 samples, 0.31%)</title><rect x="28.2844%" y="405" width="0.3091%" height="15" fill="rgb(232,45,27)"/><text x="28.5344%" y="415.50"></text></g><g><title>ip_rcv (2 samples, 0.31%)</title><rect x="28.2844%" y="389" width="0.3091%" height="15" fill="rgb(249,103,42)"/><text x="28.5344%" y="399.50"></text></g><g><title>ip_local_deliver (2 samples, 0.31%)</title><rect x="28.2844%" y="373" width="0.3091%" height="15" fill="rgb(246,81,33)"/><text x="28.5344%" y="383.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.31%)</title><rect x="28.2844%" y="357" width="0.3091%" height="15" fill="rgb(252,33,42)"/><text x="28.5344%" y="367.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.31%)</title><rect x="28.2844%" y="341" width="0.3091%" height="15" fill="rgb(209,212,41)"/><text x="28.5344%" y="351.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.31%)</title><rect x="28.2844%" y="325" width="0.3091%" height="15" fill="rgb(207,154,6)"/><text x="28.5344%" y="335.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.31%)</title><rect x="28.2844%" y="309" width="0.3091%" height="15" fill="rgb(223,64,47)"/><text x="28.5344%" y="319.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.31%)</title><rect x="28.2844%" y="293" width="0.3091%" height="15" fill="rgb(211,161,38)"/><text x="28.5344%" y="303.50"></text></g><g><title>tcp_queue_rcv (1 samples, 0.15%)</title><rect x="28.4389%" y="277" width="0.1546%" height="15" fill="rgb(219,138,40)"/><text x="28.6889%" y="287.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.15%)</title><rect x="28.5935%" y="901" width="0.1546%" height="15" fill="rgb(241,228,46)"/><text x="28.8435%" y="911.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.15%)</title><rect x="28.7481%" y="901" width="0.1546%" height="15" fill="rgb(223,209,38)"/><text x="28.9981%" y="911.50"></text></g><g><title>regex::exec::ExecBuilder::build (1 samples, 0.15%)</title><rect x="28.9026%" y="901" width="0.1546%" height="15" fill="rgb(236,164,45)"/><text x="29.1526%" y="911.50"></text></g><g><title>regex::compile::Compiler::compile (1 samples, 0.15%)</title><rect x="28.9026%" y="885" width="0.1546%" height="15" fill="rgb(231,15,5)"/><text x="29.1526%" y="895.50"></text></g><g><title>regex::compile::Compiler::c (1 samples, 0.15%)</title><rect x="28.9026%" y="869" width="0.1546%" height="15" fill="rgb(252,35,15)"/><text x="29.1526%" y="879.50"></text></g><g><title>regex::compile::Compiler::c_repeat_range (1 samples, 0.15%)</title><rect x="28.9026%" y="853" width="0.1546%" height="15" fill="rgb(248,181,18)"/><text x="29.1526%" y="863.50"></text></g><g><title>regex::compile::Compiler::c_class (1 samples, 0.15%)</title><rect x="28.9026%" y="837" width="0.1546%" height="15" fill="rgb(233,39,42)"/><text x="29.1526%" y="847.50"></text></g><g><title>regex::compile::CompileClass::c_utf8_seq (1 samples, 0.15%)</title><rect x="28.9026%" y="821" width="0.1546%" height="15" fill="rgb(238,110,33)"/><text x="29.1526%" y="831.50"></text></g><g><title>regex::compile::SuffixCache::get (1 samples, 0.15%)</title><rect x="28.9026%" y="805" width="0.1546%" height="15" fill="rgb(233,195,10)"/><text x="29.1526%" y="815.50"></text></g><g><title>sql_parser::parser::parse_statements (1 samples, 0.15%)</title><rect x="29.0572%" y="901" width="0.1546%" height="15" fill="rgb(254,105,3)"/><text x="29.3072%" y="911.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (1 samples, 0.15%)</title><rect x="29.0572%" y="885" width="0.1546%" height="15" fill="rgb(221,225,9)"/><text x="29.3072%" y="895.50"></text></g><g><title>sql_parser::parser::Parser::parse_columns (1 samples, 0.15%)</title><rect x="29.0572%" y="869" width="0.1546%" height="15" fill="rgb(224,227,45)"/><text x="29.3072%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="29.0572%" y="853" width="0.1546%" height="15" fill="rgb(229,198,43)"/><text x="29.3072%" y="863.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.15%)</title><rect x="29.0572%" y="837" width="0.1546%" height="15" fill="rgb(206,209,35)"/><text x="29.3072%" y="847.50"></text></g><g><title>_int_realloc (1 samples, 0.15%)</title><rect x="29.0572%" y="821" width="0.1546%" height="15" fill="rgb(245,195,53)"/><text x="29.3072%" y="831.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="29.0572%" y="805" width="0.1546%" height="15" fill="rgb(240,92,26)"/><text x="29.3072%" y="815.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (1 samples, 0.15%)</title><rect x="29.2117%" y="901" width="0.1546%" height="15" fill="rgb(207,40,23)"/><text x="29.4617%" y="911.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.15%)</title><rect x="29.2117%" y="885" width="0.1546%" height="15" fill="rgb(223,111,35)"/><text x="29.4617%" y="895.50"></text></g><g><title>lobsters::main (1 samples, 0.15%)</title><rect x="29.2117%" y="869" width="0.1546%" height="15" fill="rgb(229,147,28)"/><text x="29.4617%" y="879.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (1 samples, 0.15%)</title><rect x="29.2117%" y="853" width="0.1546%" height="15" fill="rgb(211,29,28)"/><text x="29.4617%" y="863.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.15%)</title><rect x="29.2117%" y="837" width="0.1546%" height="15" fill="rgb(228,72,33)"/><text x="29.4617%" y="847.50"></text></g><g><title>mysql::conn::query_result::QueryResult&lt;T&gt;::handle_next (1 samples, 0.15%)</title><rect x="29.2117%" y="821" width="0.1546%" height="15" fill="rgb(205,214,31)"/><text x="29.4617%" y="831.50"></text></g><g><title>lookup_fast.constprop.0 (1 samples, 0.15%)</title><rect x="29.3663%" y="549" width="0.1546%" height="15" fill="rgb(224,111,15)"/><text x="29.6163%" y="559.50"></text></g><g><title>__d_lookup (1 samples, 0.15%)</title><rect x="29.3663%" y="533" width="0.1546%" height="15" fill="rgb(253,21,26)"/><text x="29.6163%" y="543.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.15%)</title><rect x="29.3663%" y="517" width="0.1546%" height="15" fill="rgb(245,139,43)"/><text x="29.6163%" y="527.50"></text></g><g><title>preempt_count_add (1 samples, 0.15%)</title><rect x="29.3663%" y="501" width="0.1546%" height="15" fill="rgb(252,170,7)"/><text x="29.6163%" y="511.50"></text></g><g><title>[unknown] (179 samples, 27.67%)</title><rect x="2.0093%" y="917" width="27.6662%" height="15" fill="rgb(231,118,14)"/><text x="2.2593%" y="927.50">[unknown]</text></g><g><title>std::rt::lang_start_internal (2 samples, 0.31%)</title><rect x="29.3663%" y="901" width="0.3091%" height="15" fill="rgb(238,83,0)"/><text x="29.6163%" y="911.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.31%)</title><rect x="29.3663%" y="885" width="0.3091%" height="15" fill="rgb(221,39,39)"/><text x="29.6163%" y="895.50"></text></g><g><title>std::panicking::try (2 samples, 0.31%)</title><rect x="29.3663%" y="869" width="0.3091%" height="15" fill="rgb(222,119,46)"/><text x="29.6163%" y="879.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.31%)</title><rect x="29.3663%" y="853" width="0.3091%" height="15" fill="rgb(222,165,49)"/><text x="29.6163%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (2 samples, 0.31%)</title><rect x="29.3663%" y="837" width="0.3091%" height="15" fill="rgb(219,113,52)"/><text x="29.6163%" y="847.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (2 samples, 0.31%)</title><rect x="29.3663%" y="821" width="0.3091%" height="15" fill="rgb(214,7,15)"/><text x="29.6163%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2 samples, 0.31%)</title><rect x="29.3663%" y="805" width="0.3091%" height="15" fill="rgb(235,32,4)"/><text x="29.6163%" y="815.50"></text></g><g><title>lobsters::main (2 samples, 0.31%)</title><rect x="29.3663%" y="789" width="0.3091%" height="15" fill="rgb(238,90,54)"/><text x="29.6163%" y="799.50"></text></g><g><title>hwloc::Topology::new (2 samples, 0.31%)</title><rect x="29.3663%" y="773" width="0.3091%" height="15" fill="rgb(213,208,19)"/><text x="29.6163%" y="783.50"></text></g><g><title>hwloc_topology_load (2 samples, 0.31%)</title><rect x="29.3663%" y="757" width="0.3091%" height="15" fill="rgb(233,156,4)"/><text x="29.6163%" y="767.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.31%)</title><rect x="29.3663%" y="741" width="0.3091%" height="15" fill="rgb(207,194,5)"/><text x="29.6163%" y="751.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.31%)</title><rect x="29.3663%" y="725" width="0.3091%" height="15" fill="rgb(206,111,30)"/><text x="29.6163%" y="735.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.31%)</title><rect x="29.3663%" y="709" width="0.3091%" height="15" fill="rgb(243,70,54)"/><text x="29.6163%" y="719.50"></text></g><g><title>__GI___openat (2 samples, 0.31%)</title><rect x="29.3663%" y="693" width="0.3091%" height="15" fill="rgb(242,28,8)"/><text x="29.6163%" y="703.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.31%)</title><rect x="29.3663%" y="677" width="0.3091%" height="15" fill="rgb(219,106,18)"/><text x="29.6163%" y="687.50"></text></g><g><title>do_syscall_64 (2 samples, 0.31%)</title><rect x="29.3663%" y="661" width="0.3091%" height="15" fill="rgb(244,222,10)"/><text x="29.6163%" y="671.50"></text></g><g><title>__x64_sys_openat (2 samples, 0.31%)</title><rect x="29.3663%" y="645" width="0.3091%" height="15" fill="rgb(236,179,52)"/><text x="29.6163%" y="655.50"></text></g><g><title>do_sys_openat2 (2 samples, 0.31%)</title><rect x="29.3663%" y="629" width="0.3091%" height="15" fill="rgb(213,23,39)"/><text x="29.6163%" y="639.50"></text></g><g><title>do_filp_open (2 samples, 0.31%)</title><rect x="29.3663%" y="613" width="0.3091%" height="15" fill="rgb(238,48,10)"/><text x="29.6163%" y="623.50"></text></g><g><title>path_openat (2 samples, 0.31%)</title><rect x="29.3663%" y="597" width="0.3091%" height="15" fill="rgb(251,196,23)"/><text x="29.6163%" y="607.50"></text></g><g><title>link_path_walk (2 samples, 0.31%)</title><rect x="29.3663%" y="581" width="0.3091%" height="15" fill="rgb(250,152,24)"/><text x="29.6163%" y="591.50"></text></g><g><title>walk_component (2 samples, 0.31%)</title><rect x="29.3663%" y="565" width="0.3091%" height="15" fill="rgb(209,150,17)"/><text x="29.6163%" y="575.50"></text></g><g><title>step_into (1 samples, 0.15%)</title><rect x="29.5209%" y="549" width="0.1546%" height="15" fill="rgb(234,202,34)"/><text x="29.7709%" y="559.50"></text></g><g><title>dput (1 samples, 0.15%)</title><rect x="29.5209%" y="533" width="0.1546%" height="15" fill="rgb(253,148,53)"/><text x="29.7709%" y="543.50"></text></g><g><title>lockref_put_return (1 samples, 0.15%)</title><rect x="29.5209%" y="517" width="0.1546%" height="15" fill="rgb(218,129,16)"/><text x="29.7709%" y="527.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="29.8300%" y="741" width="0.1546%" height="15" fill="rgb(216,85,19)"/><text x="30.0800%" y="751.50"></text></g><g><title>mysql::conn::query_result::QueryResult&lt;T&gt;::handle_next (1 samples, 0.15%)</title><rect x="29.8300%" y="725" width="0.1546%" height="15" fill="rgb(235,228,7)"/><text x="30.0800%" y="735.50"></text></g><g><title>mysql_common::io::WriteMysqlExt::write_lenenc_int (1 samples, 0.15%)</title><rect x="30.1391%" y="709" width="0.1546%" height="15" fill="rgb(245,175,0)"/><text x="30.3891%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.15%)</title><rect x="30.1391%" y="693" width="0.1546%" height="15" fill="rgb(208,168,36)"/><text x="30.3891%" y="703.50"></text></g><g><title>decor::helpers::answer_rows (7 samples, 1.08%)</title><rect x="29.6754%" y="757" width="1.0819%" height="15" fill="rgb(246,171,24)"/><text x="29.9254%" y="767.50"></text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::finish (5 samples, 0.77%)</title><rect x="29.9845%" y="741" width="0.7728%" height="15" fill="rgb(215,142,24)"/><text x="30.2345%" y="751.50"></text></g><g><title>msql_srv::writers::write_ok_packet (4 samples, 0.62%)</title><rect x="30.1391%" y="725" width="0.6182%" height="15" fill="rgb(250,187,7)"/><text x="30.3891%" y="735.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.46%)</title><rect x="30.2937%" y="709" width="0.4637%" height="15" fill="rgb(228,66,33)"/><text x="30.5437%" y="719.50"></text></g><g><title>fput_many (1 samples, 0.15%)</title><rect x="30.9119%" y="533" width="0.1546%" height="15" fill="rgb(234,215,21)"/><text x="31.1619%" y="543.50"></text></g><g><title>__kfree_skb (1 samples, 0.15%)</title><rect x="31.2210%" y="501" width="0.1546%" height="15" fill="rgb(222,191,20)"/><text x="31.4710%" y="511.50"></text></g><g><title>skb_release_head_state (1 samples, 0.15%)</title><rect x="31.2210%" y="485" width="0.1546%" height="15" fill="rgb(245,79,54)"/><text x="31.4710%" y="495.50"></text></g><g><title>dst_release (1 samples, 0.15%)</title><rect x="31.2210%" y="469" width="0.1546%" height="15" fill="rgb(240,10,37)"/><text x="31.4710%" y="479.50"></text></g><g><title>lock_sock_nested (1 samples, 0.15%)</title><rect x="31.3756%" y="501" width="0.1546%" height="15" fill="rgb(214,192,32)"/><text x="31.6256%" y="511.50"></text></g><g><title>release_sock (1 samples, 0.15%)</title><rect x="31.5301%" y="501" width="0.1546%" height="15" fill="rgb(209,36,54)"/><text x="31.7801%" y="511.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.15%)</title><rect x="31.5301%" y="485" width="0.1546%" height="15" fill="rgb(220,10,11)"/><text x="31.7801%" y="495.50"></text></g><g><title>preempt_count_add (1 samples, 0.15%)</title><rect x="31.5301%" y="469" width="0.1546%" height="15" fill="rgb(221,106,17)"/><text x="31.7801%" y="479.50"></text></g><g><title>in_lock_functions (1 samples, 0.15%)</title><rect x="31.5301%" y="453" width="0.1546%" height="15" fill="rgb(251,142,44)"/><text x="31.7801%" y="463.50"></text></g><g><title>remove_wait_queue (1 samples, 0.15%)</title><rect x="32.3029%" y="485" width="0.1546%" height="15" fill="rgb(238,13,15)"/><text x="32.5529%" y="495.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.15%)</title><rect x="32.3029%" y="469" width="0.1546%" height="15" fill="rgb(208,107,27)"/><text x="32.5529%" y="479.50"></text></g><g><title>__perf_event_task_sched_out (1 samples, 0.15%)</title><rect x="32.7666%" y="421" width="0.1546%" height="15" fill="rgb(205,136,37)"/><text x="33.0166%" y="431.50"></text></g><g><title>ctx_sched_out (1 samples, 0.15%)</title><rect x="32.7666%" y="405" width="0.1546%" height="15" fill="rgb(250,205,27)"/><text x="33.0166%" y="415.50"></text></g><g><title>intel_pmu_disable_all (1 samples, 0.15%)</title><rect x="32.7666%" y="389" width="0.1546%" height="15" fill="rgb(210,80,43)"/><text x="33.0166%" y="399.50"></text></g><g><title>account_entity_dequeue (1 samples, 0.15%)</title><rect x="33.0757%" y="389" width="0.1546%" height="15" fill="rgb(247,160,36)"/><text x="33.3257%" y="399.50"></text></g><g><title>__cgroup_account_cputime (1 samples, 0.15%)</title><rect x="33.2303%" y="373" width="0.1546%" height="15" fill="rgb(234,13,49)"/><text x="33.4803%" y="383.50"></text></g><g><title>preempt_count_add (1 samples, 0.15%)</title><rect x="33.2303%" y="357" width="0.1546%" height="15" fill="rgb(234,122,0)"/><text x="33.4803%" y="367.50"></text></g><g><title>dequeue_task_fair (4 samples, 0.62%)</title><rect x="32.9212%" y="421" width="0.6182%" height="15" fill="rgb(207,146,38)"/><text x="33.1712%" y="431.50"></text></g><g><title>dequeue_entity (3 samples, 0.46%)</title><rect x="33.0757%" y="405" width="0.4637%" height="15" fill="rgb(207,177,25)"/><text x="33.3257%" y="415.50"></text></g><g><title>update_curr (2 samples, 0.31%)</title><rect x="33.2303%" y="389" width="0.3091%" height="15" fill="rgb(211,178,42)"/><text x="33.4803%" y="399.50"></text></g><g><title>update_min_vruntime (1 samples, 0.15%)</title><rect x="33.3849%" y="373" width="0.1546%" height="15" fill="rgb(230,69,54)"/><text x="33.6349%" y="383.50"></text></g><g><title>finish_task_switch (2 samples, 0.31%)</title><rect x="33.5394%" y="421" width="0.3091%" height="15" fill="rgb(214,135,41)"/><text x="33.7894%" y="431.50"></text></g><g><title>__perf_event_task_sched_in (2 samples, 0.31%)</title><rect x="33.5394%" y="405" width="0.3091%" height="15" fill="rgb(237,67,25)"/><text x="33.7894%" y="415.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (2 samples, 0.31%)</title><rect x="33.5394%" y="389" width="0.3091%" height="15" fill="rgb(222,189,50)"/><text x="33.7894%" y="399.50"></text></g><g><title>native_write_msr (2 samples, 0.31%)</title><rect x="33.5394%" y="373" width="0.3091%" height="15" fill="rgb(245,148,34)"/><text x="33.7894%" y="383.50"></text></g><g><title>psi_task_change (3 samples, 0.46%)</title><rect x="33.8485%" y="421" width="0.4637%" height="15" fill="rgb(222,29,6)"/><text x="34.0985%" y="431.50"></text></g><g><title>psi_group_change (3 samples, 0.46%)</title><rect x="33.8485%" y="405" width="0.4637%" height="15" fill="rgb(221,189,43)"/><text x="34.0985%" y="415.50"></text></g><g><title>record_times (1 samples, 0.15%)</title><rect x="34.1577%" y="389" width="0.1546%" height="15" fill="rgb(207,36,27)"/><text x="34.4077%" y="399.50"></text></g><g><title>rcu_note_context_switch (1 samples, 0.15%)</title><rect x="34.3122%" y="421" width="0.1546%" height="15" fill="rgb(217,90,24)"/><text x="34.5622%" y="431.50"></text></g><g><title>rcu_preempt_deferred_qs (1 samples, 0.15%)</title><rect x="34.3122%" y="405" width="0.1546%" height="15" fill="rgb(224,66,35)"/><text x="34.5622%" y="415.50"></text></g><g><title>uclamp_rq_dec_id (2 samples, 0.31%)</title><rect x="34.4668%" y="421" width="0.3091%" height="15" fill="rgb(221,13,50)"/><text x="34.7168%" y="431.50"></text></g><g><title>sk_wait_data (21 samples, 3.25%)</title><rect x="31.6847%" y="501" width="3.2457%" height="15" fill="rgb(236,68,49)"/><text x="31.9347%" y="511.50">sk_..</text></g><g><title>wait_woken (16 samples, 2.47%)</title><rect x="32.4575%" y="485" width="2.4730%" height="15" fill="rgb(229,146,28)"/><text x="32.7075%" y="495.50">wa..</text></g><g><title>schedule_timeout (16 samples, 2.47%)</title><rect x="32.4575%" y="469" width="2.4730%" height="15" fill="rgb(225,31,38)"/><text x="32.7075%" y="479.50">sc..</text></g><g><title>schedule (15 samples, 2.32%)</title><rect x="32.6121%" y="453" width="2.3184%" height="15" fill="rgb(250,208,3)"/><text x="32.8621%" y="463.50">s..</text></g><g><title>__schedule (15 samples, 2.32%)</title><rect x="32.6121%" y="437" width="2.3184%" height="15" fill="rgb(246,54,23)"/><text x="32.8621%" y="447.50">_..</text></g><g><title>update_rq_clock (1 samples, 0.15%)</title><rect x="34.7759%" y="421" width="0.1546%" height="15" fill="rgb(243,76,11)"/><text x="35.0259%" y="431.50"></text></g><g><title>update_irq_load_avg (1 samples, 0.15%)</title><rect x="34.7759%" y="405" width="0.1546%" height="15" fill="rgb(245,21,50)"/><text x="35.0259%" y="415.50"></text></g><g><title>skb_copy_datagram_iter (2 samples, 0.31%)</title><rect x="34.9304%" y="501" width="0.3091%" height="15" fill="rgb(228,9,43)"/><text x="35.1804%" y="511.50"></text></g><g><title>__skb_datagram_iter (2 samples, 0.31%)</title><rect x="34.9304%" y="485" width="0.3091%" height="15" fill="rgb(208,100,47)"/><text x="35.1804%" y="495.50"></text></g><g><title>do_syscall_64 (29 samples, 4.48%)</title><rect x="30.9119%" y="581" width="4.4822%" height="15" fill="rgb(232,26,8)"/><text x="31.1619%" y="591.50">do_sy..</text></g><g><title>__x64_sys_recvfrom (29 samples, 4.48%)</title><rect x="30.9119%" y="565" width="4.4822%" height="15" fill="rgb(216,166,38)"/><text x="31.1619%" y="575.50">__x64..</text></g><g><title>__sys_recvfrom (29 samples, 4.48%)</title><rect x="30.9119%" y="549" width="4.4822%" height="15" fill="rgb(251,202,51)"/><text x="31.1619%" y="559.50">__sys..</text></g><g><title>inet_recvmsg (28 samples, 4.33%)</title><rect x="31.0665%" y="533" width="4.3277%" height="15" fill="rgb(254,216,34)"/><text x="31.3165%" y="543.50">inet_..</text></g><g><title>tcp_recvmsg (28 samples, 4.33%)</title><rect x="31.0665%" y="517" width="4.3277%" height="15" fill="rgb(251,32,27)"/><text x="31.3165%" y="527.50">tcp_r..</text></g><g><title>tcp_cleanup_rbuf (1 samples, 0.15%)</title><rect x="35.2396%" y="501" width="0.1546%" height="15" fill="rgb(208,127,28)"/><text x="35.4896%" y="511.50"></text></g><g><title>entry_SYSCALL_64 (32 samples, 4.95%)</title><rect x="30.9119%" y="597" width="4.9459%" height="15" fill="rgb(224,137,22)"/><text x="31.1619%" y="607.50">entry_..</text></g><g><title>prepare_exit_to_usermode (3 samples, 0.46%)</title><rect x="35.3941%" y="581" width="0.4637%" height="15" fill="rgb(254,70,32)"/><text x="35.6441%" y="591.50"></text></g><g><title>switch_fpu_return (1 samples, 0.15%)</title><rect x="35.7032%" y="565" width="0.1546%" height="15" fill="rgb(229,75,37)"/><text x="35.9532%" y="575.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (34 samples, 5.26%)</title><rect x="30.7573%" y="693" width="5.2550%" height="15" fill="rgb(252,64,23)"/><text x="31.0073%" y="703.50">&lt;std::..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (34 samples, 5.26%)</title><rect x="30.7573%" y="677" width="5.2550%" height="15" fill="rgb(232,162,48)"/><text x="31.0073%" y="687.50">&lt;std::..</text></g><g><title>std::sys_common::net::TcpStream::read (34 samples, 5.26%)</title><rect x="30.7573%" y="661" width="5.2550%" height="15" fill="rgb(246,160,12)"/><text x="31.0073%" y="671.50">std::s..</text></g><g><title>std::sys::unix::net::Socket::read (34 samples, 5.26%)</title><rect x="30.7573%" y="645" width="5.2550%" height="15" fill="rgb(247,166,0)"/><text x="31.0073%" y="655.50">std::s..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (34 samples, 5.26%)</title><rect x="30.7573%" y="629" width="5.2550%" height="15" fill="rgb(249,219,21)"/><text x="31.0073%" y="639.50">std::s..</text></g><g><title>__libc_recv (34 samples, 5.26%)</title><rect x="30.7573%" y="613" width="5.2550%" height="15" fill="rgb(205,209,3)"/><text x="31.0073%" y="623.50">__libc..</text></g><g><title>syscall_return_via_sysret (1 samples, 0.15%)</title><rect x="35.8578%" y="597" width="0.1546%" height="15" fill="rgb(243,44,1)"/><text x="36.1078%" y="607.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (35 samples, 5.41%)</title><rect x="30.7573%" y="741" width="5.4096%" height="15" fill="rgb(206,159,16)"/><text x="31.0073%" y="751.50">mysql::..</text></g><g><title>mysql::conn::Conn::read_packet (35 samples, 5.41%)</title><rect x="30.7573%" y="725" width="5.4096%" height="15" fill="rgb(244,77,30)"/><text x="31.0073%" y="735.50">mysql::..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (35 samples, 5.41%)</title><rect x="30.7573%" y="709" width="5.4096%" height="15" fill="rgb(218,69,12)"/><text x="31.0073%" y="719.50">&lt;mysql_..</text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (1 samples, 0.15%)</title><rect x="36.0124%" y="693" width="0.1546%" height="15" fill="rgb(212,87,7)"/><text x="36.2624%" y="703.50"></text></g><g><title>__pthread_disable_asynccancel (1 samples, 0.15%)</title><rect x="36.1669%" y="661" width="0.1546%" height="15" fill="rgb(245,114,25)"/><text x="36.4169%" y="671.50"></text></g><g><title>__x86_indirect_thunk_rax (2 samples, 0.31%)</title><rect x="36.3215%" y="661" width="0.3091%" height="15" fill="rgb(210,61,42)"/><text x="36.5715%" y="671.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.15%)</title><rect x="36.7852%" y="565" width="0.1546%" height="15" fill="rgb(211,52,33)"/><text x="37.0352%" y="575.50"></text></g><g><title>preempt_count_sub (1 samples, 0.15%)</title><rect x="36.7852%" y="549" width="0.1546%" height="15" fill="rgb(234,58,33)"/><text x="37.0352%" y="559.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.15%)</title><rect x="37.7125%" y="485" width="0.1546%" height="15" fill="rgb(220,115,36)"/><text x="37.9625%" y="495.50"></text></g><g><title>__dev_queue_xmit (1 samples, 0.15%)</title><rect x="38.0216%" y="453" width="0.1546%" height="15" fill="rgb(243,153,54)"/><text x="38.2716%" y="463.50"></text></g><g><title>dev_hard_start_xmit (1 samples, 0.15%)</title><rect x="38.0216%" y="437" width="0.1546%" height="15" fill="rgb(251,47,18)"/><text x="38.2716%" y="447.50"></text></g><g><title>loopback_xmit (1 samples, 0.15%)</title><rect x="38.0216%" y="421" width="0.1546%" height="15" fill="rgb(242,102,42)"/><text x="38.2716%" y="431.50"></text></g><g><title>tcp_wfree (1 samples, 0.15%)</title><rect x="38.0216%" y="405" width="0.1546%" height="15" fill="rgb(234,31,38)"/><text x="38.2716%" y="415.50"></text></g><g><title>__kfree_skb_flush (2 samples, 0.31%)</title><rect x="38.3308%" y="373" width="0.3091%" height="15" fill="rgb(221,117,51)"/><text x="38.5808%" y="383.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.15%)</title><rect x="39.4127%" y="149" width="0.1546%" height="15" fill="rgb(212,20,18)"/><text x="39.6627%" y="159.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.15%)</title><rect x="39.5672%" y="149" width="0.1546%" height="15" fill="rgb(245,133,36)"/><text x="39.8172%" y="159.50"></text></g><g><title>preempt_count_sub (1 samples, 0.15%)</title><rect x="39.5672%" y="133" width="0.1546%" height="15" fill="rgb(212,6,19)"/><text x="39.8172%" y="143.50"></text></g><g><title>psi_task_change (6 samples, 0.93%)</title><rect x="39.7218%" y="133" width="0.9274%" height="15" fill="rgb(218,1,36)"/><text x="39.9718%" y="143.50"></text></g><g><title>psi_group_change (4 samples, 0.62%)</title><rect x="40.0309%" y="117" width="0.6182%" height="15" fill="rgb(246,84,54)"/><text x="40.2809%" y="127.50"></text></g><g><title>record_times (1 samples, 0.15%)</title><rect x="40.4946%" y="101" width="0.1546%" height="15" fill="rgb(242,110,6)"/><text x="40.7446%" y="111.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.15%)</title><rect x="40.4946%" y="85" width="0.1546%" height="15" fill="rgb(214,47,5)"/><text x="40.7446%" y="95.50"></text></g><g><title>sched_clock (1 samples, 0.15%)</title><rect x="40.4946%" y="69" width="0.1546%" height="15" fill="rgb(218,159,25)"/><text x="40.7446%" y="79.50"></text></g><g><title>native_sched_clock (1 samples, 0.15%)</title><rect x="40.4946%" y="53" width="0.1546%" height="15" fill="rgb(215,211,28)"/><text x="40.7446%" y="63.50"></text></g><g><title>enqueue_task (7 samples, 1.08%)</title><rect x="39.7218%" y="149" width="1.0819%" height="15" fill="rgb(238,59,32)"/><text x="39.9718%" y="159.50"></text></g><g><title>uclamp_rq_inc_id (1 samples, 0.15%)</title><rect x="40.6491%" y="133" width="0.1546%" height="15" fill="rgb(226,82,3)"/><text x="40.8991%" y="143.50"></text></g><g><title>sock_def_readable (14 samples, 2.16%)</title><rect x="38.9490%" y="229" width="2.1638%" height="15" fill="rgb(240,164,32)"/><text x="39.1990%" y="239.50">s..</text></g><g><title>__wake_up_common_lock (14 samples, 2.16%)</title><rect x="38.9490%" y="213" width="2.1638%" height="15" fill="rgb(232,46,7)"/><text x="39.1990%" y="223.50">_..</text></g><g><title>__wake_up_common (14 samples, 2.16%)</title><rect x="38.9490%" y="197" width="2.1638%" height="15" fill="rgb(229,129,53)"/><text x="39.1990%" y="207.50">_..</text></g><g><title>pollwake (14 samples, 2.16%)</title><rect x="38.9490%" y="181" width="2.1638%" height="15" fill="rgb(234,188,29)"/><text x="39.1990%" y="191.50">p..</text></g><g><title>try_to_wake_up (13 samples, 2.01%)</title><rect x="39.1036%" y="165" width="2.0093%" height="15" fill="rgb(246,141,4)"/><text x="39.3536%" y="175.50">t..</text></g><g><title>enqueue_task_fair (2 samples, 0.31%)</title><rect x="40.8037%" y="149" width="0.3091%" height="15" fill="rgb(229,23,39)"/><text x="41.0537%" y="159.50"></text></g><g><title>enqueue_entity (2 samples, 0.31%)</title><rect x="40.8037%" y="133" width="0.3091%" height="15" fill="rgb(206,12,3)"/><text x="41.0537%" y="143.50"></text></g><g><title>update_load_avg (2 samples, 0.31%)</title><rect x="40.8037%" y="117" width="0.3091%" height="15" fill="rgb(252,226,20)"/><text x="41.0537%" y="127.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.15%)</title><rect x="40.9583%" y="101" width="0.1546%" height="15" fill="rgb(216,123,35)"/><text x="41.2083%" y="111.50"></text></g><g><title>tcp_event_data_recv (1 samples, 0.15%)</title><rect x="41.1128%" y="229" width="0.1546%" height="15" fill="rgb(212,68,40)"/><text x="41.3628%" y="239.50"></text></g><g><title>tcp_grow_window (1 samples, 0.15%)</title><rect x="41.2674%" y="229" width="0.1546%" height="15" fill="rgb(254,125,32)"/><text x="41.5174%" y="239.50"></text></g><g><title>tcp_mstamp_refresh (1 samples, 0.15%)</title><rect x="41.4219%" y="229" width="0.1546%" height="15" fill="rgb(253,97,22)"/><text x="41.6719%" y="239.50"></text></g><g><title>ktime_get (1 samples, 0.15%)</title><rect x="41.4219%" y="213" width="0.1546%" height="15" fill="rgb(241,101,14)"/><text x="41.6719%" y="223.50"></text></g><g><title>__ip_queue_xmit (29 samples, 4.48%)</title><rect x="37.5580%" y="501" width="4.4822%" height="15" fill="rgb(238,103,29)"/><text x="37.8080%" y="511.50">__ip_..</text></g><g><title>ip_output (27 samples, 4.17%)</title><rect x="37.8671%" y="485" width="4.1731%" height="15" fill="rgb(233,195,47)"/><text x="38.1171%" y="495.50">ip_ou..</text></g><g><title>ip_finish_output2 (26 samples, 4.02%)</title><rect x="38.0216%" y="469" width="4.0185%" height="15" fill="rgb(246,218,30)"/><text x="38.2716%" y="479.50">ip_f..</text></g><g><title>__local_bh_enable_ip (25 samples, 3.86%)</title><rect x="38.1762%" y="453" width="3.8640%" height="15" fill="rgb(219,145,47)"/><text x="38.4262%" y="463.50">__lo..</text></g><g><title>do_softirq (25 samples, 3.86%)</title><rect x="38.1762%" y="437" width="3.8640%" height="15" fill="rgb(243,12,26)"/><text x="38.4262%" y="447.50">do_s..</text></g><g><title>do_softirq_own_stack (25 samples, 3.86%)</title><rect x="38.1762%" y="421" width="3.8640%" height="15" fill="rgb(214,87,16)"/><text x="38.4262%" y="431.50">do_s..</text></g><g><title>__do_softirq (25 samples, 3.86%)</title><rect x="38.1762%" y="405" width="3.8640%" height="15" fill="rgb(208,99,42)"/><text x="38.4262%" y="415.50">__do..</text></g><g><title>net_rx_action (24 samples, 3.71%)</title><rect x="38.3308%" y="389" width="3.7094%" height="15" fill="rgb(253,99,2)"/><text x="38.5808%" y="399.50">net_..</text></g><g><title>process_backlog (22 samples, 3.40%)</title><rect x="38.6399%" y="373" width="3.4003%" height="15" fill="rgb(220,168,23)"/><text x="38.8899%" y="383.50">pro..</text></g><g><title>__netif_receive_skb_one_core (22 samples, 3.40%)</title><rect x="38.6399%" y="357" width="3.4003%" height="15" fill="rgb(242,38,24)"/><text x="38.8899%" y="367.50">__n..</text></g><g><title>ip_rcv (22 samples, 3.40%)</title><rect x="38.6399%" y="341" width="3.4003%" height="15" fill="rgb(225,182,9)"/><text x="38.8899%" y="351.50">ip_..</text></g><g><title>ip_local_deliver (21 samples, 3.25%)</title><rect x="38.7944%" y="325" width="3.2457%" height="15" fill="rgb(243,178,37)"/><text x="39.0444%" y="335.50">ip_..</text></g><g><title>ip_local_deliver_finish (20 samples, 3.09%)</title><rect x="38.9490%" y="309" width="3.0912%" height="15" fill="rgb(232,139,19)"/><text x="39.1990%" y="319.50">ip_..</text></g><g><title>ip_protocol_deliver_rcu (20 samples, 3.09%)</title><rect x="38.9490%" y="293" width="3.0912%" height="15" fill="rgb(225,201,24)"/><text x="39.1990%" y="303.50">ip_..</text></g><g><title>tcp_v4_rcv (20 samples, 3.09%)</title><rect x="38.9490%" y="277" width="3.0912%" height="15" fill="rgb(221,47,46)"/><text x="39.1990%" y="287.50">tcp..</text></g><g><title>tcp_v4_do_rcv (20 samples, 3.09%)</title><rect x="38.9490%" y="261" width="3.0912%" height="15" fill="rgb(249,23,13)"/><text x="39.1990%" y="271.50">tcp..</text></g><g><title>tcp_rcv_established (20 samples, 3.09%)</title><rect x="38.9490%" y="245" width="3.0912%" height="15" fill="rgb(219,9,5)"/><text x="39.1990%" y="255.50">tcp..</text></g><g><title>tcp_queue_rcv (3 samples, 0.46%)</title><rect x="41.5765%" y="229" width="0.4637%" height="15" fill="rgb(254,171,16)"/><text x="41.8265%" y="239.50"></text></g><g><title>bictcp_cwnd_event (1 samples, 0.15%)</title><rect x="42.0402%" y="501" width="0.1546%" height="15" fill="rgb(230,171,20)"/><text x="42.2902%" y="511.50"></text></g><g><title>tcp_rate_skb_sent (1 samples, 0.15%)</title><rect x="42.1947%" y="501" width="0.1546%" height="15" fill="rgb(210,71,41)"/><text x="42.4447%" y="511.50"></text></g><g><title>__tcp_push_pending_frames (33 samples, 5.10%)</title><rect x="37.4034%" y="549" width="5.1005%" height="15" fill="rgb(206,173,20)"/><text x="37.6534%" y="559.50">__tcp_..</text></g><g><title>tcp_write_xmit (33 samples, 5.10%)</title><rect x="37.4034%" y="533" width="5.1005%" height="15" fill="rgb(233,88,34)"/><text x="37.6534%" y="543.50">tcp_wr..</text></g><g><title>__tcp_transmit_skb (33 samples, 5.10%)</title><rect x="37.4034%" y="517" width="5.1005%" height="15" fill="rgb(223,209,46)"/><text x="37.6534%" y="527.50">__tcp_..</text></g><g><title>tcp_update_skb_after_send (1 samples, 0.15%)</title><rect x="42.3493%" y="501" width="0.1546%" height="15" fill="rgb(250,43,18)"/><text x="42.5993%" y="511.50"></text></g><g><title>__kmalloc_node_track_caller (1 samples, 0.15%)</title><rect x="42.5039%" y="517" width="0.1546%" height="15" fill="rgb(208,13,10)"/><text x="42.7539%" y="527.50"></text></g><g><title>memset_erms (1 samples, 0.15%)</title><rect x="42.5039%" y="501" width="0.1546%" height="15" fill="rgb(212,200,36)"/><text x="42.7539%" y="511.50"></text></g><g><title>__ksize (1 samples, 0.15%)</title><rect x="42.6584%" y="517" width="0.1546%" height="15" fill="rgb(225,90,30)"/><text x="42.9084%" y="527.50"></text></g><g><title>sk_stream_alloc_skb (3 samples, 0.46%)</title><rect x="42.5039%" y="549" width="0.4637%" height="15" fill="rgb(236,182,39)"/><text x="42.7539%" y="559.50"></text></g><g><title>__alloc_skb (3 samples, 0.46%)</title><rect x="42.5039%" y="533" width="0.4637%" height="15" fill="rgb(212,144,35)"/><text x="42.7539%" y="543.50"></text></g><g><title>kmem_cache_alloc_node (1 samples, 0.15%)</title><rect x="42.8130%" y="517" width="0.1546%" height="15" fill="rgb(228,63,44)"/><text x="43.0630%" y="527.50"></text></g><g><title>do_syscall_64 (43 samples, 6.65%)</title><rect x="36.6306%" y="645" width="6.6461%" height="15" fill="rgb(228,109,6)"/><text x="36.8806%" y="655.50">do_syscal..</text></g><g><title>__x64_sys_sendto (42 samples, 6.49%)</title><rect x="36.7852%" y="629" width="6.4915%" height="15" fill="rgb(238,117,24)"/><text x="37.0352%" y="639.50">__x64_sys..</text></g><g><title>__sys_sendto (42 samples, 6.49%)</title><rect x="36.7852%" y="613" width="6.4915%" height="15" fill="rgb(242,26,26)"/><text x="37.0352%" y="623.50">__sys_sen..</text></g><g><title>sock_sendmsg (42 samples, 6.49%)</title><rect x="36.7852%" y="597" width="6.4915%" height="15" fill="rgb(221,92,48)"/><text x="37.0352%" y="607.50">sock_send..</text></g><g><title>tcp_sendmsg (42 samples, 6.49%)</title><rect x="36.7852%" y="581" width="6.4915%" height="15" fill="rgb(209,209,32)"/><text x="37.0352%" y="591.50">tcp_sendm..</text></g><g><title>tcp_sendmsg_locked (41 samples, 6.34%)</title><rect x="36.9397%" y="565" width="6.3369%" height="15" fill="rgb(221,70,22)"/><text x="37.1897%" y="575.50">tcp_send..</text></g><g><title>skb_do_copy_data_nocache (2 samples, 0.31%)</title><rect x="42.9675%" y="549" width="0.3091%" height="15" fill="rgb(248,145,5)"/><text x="43.2175%" y="559.50"></text></g><g><title>__check_object_size (1 samples, 0.15%)</title><rect x="43.1221%" y="533" width="0.1546%" height="15" fill="rgb(226,116,26)"/><text x="43.3721%" y="543.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (90 samples, 13.91%)</title><rect x="29.6754%" y="773" width="13.9104%" height="15" fill="rgb(244,5,17)"/><text x="29.9254%" y="783.50">&lt;decor::Shim as msql_..</text></g><g><title>mysql::conn::Conn::_query (83 samples, 12.83%)</title><rect x="30.7573%" y="757" width="12.8284%" height="15" fill="rgb(252,159,33)"/><text x="31.0073%" y="767.50">mysql::conn::Conn::..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (48 samples, 7.42%)</title><rect x="36.1669%" y="741" width="7.4189%" height="15" fill="rgb(206,71,0)"/><text x="36.4169%" y="751.50">mysql_comm..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (48 samples, 7.42%)</title><rect x="36.1669%" y="725" width="7.4189%" height="15" fill="rgb(233,118,54)"/><text x="36.4169%" y="735.50">std::io::b..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (48 samples, 7.42%)</title><rect x="36.1669%" y="709" width="7.4189%" height="15" fill="rgb(234,83,48)"/><text x="36.4169%" y="719.50">&lt;std::net:..</text></g><g><title>std::sys_common::net::TcpStream::write (48 samples, 7.42%)</title><rect x="36.1669%" y="693" width="7.4189%" height="15" fill="rgb(228,3,54)"/><text x="36.4169%" y="703.50">std::sys_c..</text></g><g><title>__libc_send (48 samples, 7.42%)</title><rect x="36.1669%" y="677" width="7.4189%" height="15" fill="rgb(226,155,13)"/><text x="36.4169%" y="687.50">__libc_send</text></g><g><title>entry_SYSCALL_64 (45 samples, 6.96%)</title><rect x="36.6306%" y="661" width="6.9552%" height="15" fill="rgb(241,28,37)"/><text x="36.8806%" y="671.50">entry_SYS..</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.31%)</title><rect x="43.2767%" y="645" width="0.3091%" height="15" fill="rgb(233,93,10)"/><text x="43.5267%" y="655.50"></text></g><g><title>__pthread_enable_asynccancel (1 samples, 0.15%)</title><rect x="43.5858%" y="661" width="0.1546%" height="15" fill="rgb(225,113,19)"/><text x="43.8358%" y="671.50"></text></g><g><title>__kfree_skb (1 samples, 0.15%)</title><rect x="44.2040%" y="565" width="0.1546%" height="15" fill="rgb(241,2,18)"/><text x="44.4540%" y="575.50"></text></g><g><title>skb_release_head_state (1 samples, 0.15%)</title><rect x="44.2040%" y="549" width="0.1546%" height="15" fill="rgb(228,207,21)"/><text x="44.4540%" y="559.50"></text></g><g><title>dst_release (1 samples, 0.15%)</title><rect x="44.2040%" y="533" width="0.1546%" height="15" fill="rgb(213,211,35)"/><text x="44.4540%" y="543.50"></text></g><g><title>__tcp_send_ack.part.0 (2 samples, 0.31%)</title><rect x="44.3586%" y="565" width="0.3091%" height="15" fill="rgb(209,83,10)"/><text x="44.6086%" y="575.50"></text></g><g><title>__alloc_skb (2 samples, 0.31%)</title><rect x="44.3586%" y="549" width="0.3091%" height="15" fill="rgb(209,164,1)"/><text x="44.6086%" y="559.50"></text></g><g><title>__kmalloc_node_track_caller (1 samples, 0.15%)</title><rect x="44.5131%" y="533" width="0.1546%" height="15" fill="rgb(213,184,43)"/><text x="44.7631%" y="543.50"></text></g><g><title>__dev_queue_xmit (1 samples, 0.15%)</title><rect x="45.1314%" y="501" width="0.1546%" height="15" fill="rgb(231,61,34)"/><text x="45.3814%" y="511.50"></text></g><g><title>validate_xmit_skb (1 samples, 0.15%)</title><rect x="45.1314%" y="485" width="0.1546%" height="15" fill="rgb(235,75,3)"/><text x="45.3814%" y="495.50"></text></g><g><title>netif_skb_features (1 samples, 0.15%)</title><rect x="45.1314%" y="469" width="0.1546%" height="15" fill="rgb(220,106,47)"/><text x="45.3814%" y="479.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.15%)</title><rect x="45.4405%" y="341" width="0.1546%" height="15" fill="rgb(210,196,33)"/><text x="45.6905%" y="351.50"></text></g><g><title>__kfree_skb (1 samples, 0.15%)</title><rect x="45.9042%" y="277" width="0.1546%" height="15" fill="rgb(229,154,42)"/><text x="46.1542%" y="287.50"></text></g><g><title>skb_release_head_state (1 samples, 0.15%)</title><rect x="45.9042%" y="261" width="0.1546%" height="15" fill="rgb(228,114,26)"/><text x="46.1542%" y="271.50"></text></g><g><title>kfree (1 samples, 0.15%)</title><rect x="46.2133%" y="245" width="0.1546%" height="15" fill="rgb(208,144,1)"/><text x="46.4633%" y="255.50"></text></g><g><title>__slab_free (1 samples, 0.15%)</title><rect x="46.2133%" y="229" width="0.1546%" height="15" fill="rgb(239,112,37)"/><text x="46.4633%" y="239.50"></text></g><g><title>__kfree_skb (2 samples, 0.31%)</title><rect x="46.2133%" y="261" width="0.3091%" height="15" fill="rgb(210,96,50)"/><text x="46.4633%" y="271.50"></text></g><g><title>skb_release_data (1 samples, 0.15%)</title><rect x="46.3679%" y="245" width="0.1546%" height="15" fill="rgb(222,178,2)"/><text x="46.6179%" y="255.50"></text></g><g><title>ip_local_deliver (8 samples, 1.24%)</title><rect x="45.4405%" y="373" width="1.2365%" height="15" fill="rgb(226,74,18)"/><text x="45.6905%" y="383.50"></text></g><g><title>ip_local_deliver_finish (8 samples, 1.24%)</title><rect x="45.4405%" y="357" width="1.2365%" height="15" fill="rgb(225,67,54)"/><text x="45.6905%" y="367.50"></text></g><g><title>ip_protocol_deliver_rcu (7 samples, 1.08%)</title><rect x="45.5951%" y="341" width="1.0819%" height="15" fill="rgb(251,92,32)"/><text x="45.8451%" y="351.50"></text></g><g><title>tcp_v4_rcv (7 samples, 1.08%)</title><rect x="45.5951%" y="325" width="1.0819%" height="15" fill="rgb(228,149,22)"/><text x="45.8451%" y="335.50"></text></g><g><title>tcp_v4_do_rcv (7 samples, 1.08%)</title><rect x="45.5951%" y="309" width="1.0819%" height="15" fill="rgb(243,54,13)"/><text x="45.8451%" y="319.50"></text></g><g><title>tcp_rcv_established (5 samples, 0.77%)</title><rect x="45.9042%" y="293" width="0.7728%" height="15" fill="rgb(243,180,28)"/><text x="46.1542%" y="303.50"></text></g><g><title>tcp_ack (4 samples, 0.62%)</title><rect x="46.0587%" y="277" width="0.6182%" height="15" fill="rgb(208,167,24)"/><text x="46.3087%" y="287.50"></text></g><g><title>kmem_cache_free (1 samples, 0.15%)</title><rect x="46.5224%" y="261" width="0.1546%" height="15" fill="rgb(245,73,45)"/><text x="46.7724%" y="271.50"></text></g><g><title>__slab_free (1 samples, 0.15%)</title><rect x="46.5224%" y="245" width="0.1546%" height="15" fill="rgb(237,203,48)"/><text x="46.7724%" y="255.50"></text></g><g><title>__netif_receive_skb_one_core (9 samples, 1.39%)</title><rect x="45.4405%" y="405" width="1.3910%" height="15" fill="rgb(211,197,16)"/><text x="45.6905%" y="415.50"></text></g><g><title>ip_rcv (9 samples, 1.39%)</title><rect x="45.4405%" y="389" width="1.3910%" height="15" fill="rgb(243,99,51)"/><text x="45.6905%" y="399.50"></text></g><g><title>ip_rcv_core (1 samples, 0.15%)</title><rect x="46.6770%" y="373" width="0.1546%" height="15" fill="rgb(215,123,29)"/><text x="46.9270%" y="383.50"></text></g><g><title>__tcp_transmit_skb (15 samples, 2.32%)</title><rect x="44.6677%" y="565" width="2.3184%" height="15" fill="rgb(239,186,37)"/><text x="44.9177%" y="575.50">_..</text></g><g><title>__ip_queue_xmit (13 samples, 2.01%)</title><rect x="44.9768%" y="549" width="2.0093%" height="15" fill="rgb(252,136,39)"/><text x="45.2268%" y="559.50">_..</text></g><g><title>ip_output (13 samples, 2.01%)</title><rect x="44.9768%" y="533" width="2.0093%" height="15" fill="rgb(223,213,32)"/><text x="45.2268%" y="543.50">i..</text></g><g><title>ip_finish_output2 (13 samples, 2.01%)</title><rect x="44.9768%" y="517" width="2.0093%" height="15" fill="rgb(233,115,5)"/><text x="45.2268%" y="527.50">i..</text></g><g><title>__local_bh_enable_ip (11 samples, 1.70%)</title><rect x="45.2859%" y="501" width="1.7002%" height="15" fill="rgb(207,226,44)"/><text x="45.5359%" y="511.50"></text></g><g><title>do_softirq (11 samples, 1.70%)</title><rect x="45.2859%" y="485" width="1.7002%" height="15" fill="rgb(208,126,0)"/><text x="45.5359%" y="495.50"></text></g><g><title>do_softirq_own_stack (11 samples, 1.70%)</title><rect x="45.2859%" y="469" width="1.7002%" height="15" fill="rgb(244,66,21)"/><text x="45.5359%" y="479.50"></text></g><g><title>__do_softirq (11 samples, 1.70%)</title><rect x="45.2859%" y="453" width="1.7002%" height="15" fill="rgb(222,97,12)"/><text x="45.5359%" y="463.50"></text></g><g><title>net_rx_action (10 samples, 1.55%)</title><rect x="45.4405%" y="437" width="1.5456%" height="15" fill="rgb(219,213,19)"/><text x="45.6905%" y="447.50"></text></g><g><title>process_backlog (10 samples, 1.55%)</title><rect x="45.4405%" y="421" width="1.5456%" height="15" fill="rgb(252,169,30)"/><text x="45.6905%" y="431.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.15%)</title><rect x="46.8315%" y="405" width="0.1546%" height="15" fill="rgb(206,32,51)"/><text x="47.0815%" y="415.50"></text></g><g><title>_raw_spin_lock_bh (3 samples, 0.46%)</title><rect x="47.1406%" y="549" width="0.4637%" height="15" fill="rgb(250,172,42)"/><text x="47.3906%" y="559.50"></text></g><g><title>preempt_count_add (1 samples, 0.15%)</title><rect x="47.4498%" y="533" width="0.1546%" height="15" fill="rgb(209,34,43)"/><text x="47.6998%" y="543.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.15%)</title><rect x="48.0680%" y="453" width="0.1546%" height="15" fill="rgb(223,11,35)"/><text x="48.3180%" y="463.50"></text></g><g><title>__perf_event_task_sched_out (3 samples, 0.46%)</title><rect x="47.9134%" y="485" width="0.4637%" height="15" fill="rgb(251,219,26)"/><text x="48.1634%" y="495.50"></text></g><g><title>ctx_sched_out (2 samples, 0.31%)</title><rect x="48.0680%" y="469" width="0.3091%" height="15" fill="rgb(231,119,3)"/><text x="48.3180%" y="479.50"></text></g><g><title>intel_pmu_disable_all (1 samples, 0.15%)</title><rect x="48.2226%" y="453" width="0.1546%" height="15" fill="rgb(216,97,11)"/><text x="48.4726%" y="463.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.15%)</title><rect x="48.2226%" y="437" width="0.1546%" height="15" fill="rgb(223,59,9)"/><text x="48.4726%" y="447.50"></text></g><g><title>dequeue_task_fair (1 samples, 0.15%)</title><rect x="48.3771%" y="485" width="0.1546%" height="15" fill="rgb(233,93,31)"/><text x="48.6271%" y="495.50"></text></g><g><title>dequeue_entity (1 samples, 0.15%)</title><rect x="48.3771%" y="469" width="0.1546%" height="15" fill="rgb(239,81,33)"/><text x="48.6271%" y="479.50"></text></g><g><title>update_curr (1 samples, 0.15%)</title><rect x="48.3771%" y="453" width="0.1546%" height="15" fill="rgb(213,120,34)"/><text x="48.6271%" y="463.50"></text></g><g><title>pick_next_task_fair (1 samples, 0.15%)</title><rect x="48.5317%" y="485" width="0.1546%" height="15" fill="rgb(243,49,53)"/><text x="48.7817%" y="495.50"></text></g><g><title>psi_task_change (1 samples, 0.15%)</title><rect x="48.6862%" y="485" width="0.1546%" height="15" fill="rgb(247,216,33)"/><text x="48.9362%" y="495.50"></text></g><g><title>psi_group_change (1 samples, 0.15%)</title><rect x="48.6862%" y="469" width="0.1546%" height="15" fill="rgb(226,26,14)"/><text x="48.9362%" y="479.50"></text></g><g><title>put_prev_task_fair (2 samples, 0.31%)</title><rect x="48.8408%" y="485" width="0.3091%" height="15" fill="rgb(215,49,53)"/><text x="49.0908%" y="495.50"></text></g><g><title>rcu_note_context_switch (1 samples, 0.15%)</title><rect x="49.1499%" y="485" width="0.1546%" height="15" fill="rgb(245,162,40)"/><text x="49.3999%" y="495.50"></text></g><g><title>rcu_preempt_deferred_qs (1 samples, 0.15%)</title><rect x="49.1499%" y="469" width="0.1546%" height="15" fill="rgb(229,68,17)"/><text x="49.3999%" y="479.50"></text></g><g><title>sk_wait_data (16 samples, 2.47%)</title><rect x="46.9861%" y="565" width="2.4730%" height="15" fill="rgb(213,182,10)"/><text x="47.2361%" y="575.50">sk..</text></g><g><title>wait_woken (12 samples, 1.85%)</title><rect x="47.6043%" y="549" width="1.8547%" height="15" fill="rgb(245,125,30)"/><text x="47.8543%" y="559.50">w..</text></g><g><title>schedule_timeout (12 samples, 1.85%)</title><rect x="47.6043%" y="533" width="1.8547%" height="15" fill="rgb(232,202,2)"/><text x="47.8543%" y="543.50">s..</text></g><g><title>schedule (12 samples, 1.85%)</title><rect x="47.6043%" y="517" width="1.8547%" height="15" fill="rgb(237,140,51)"/><text x="47.8543%" y="527.50">s..</text></g><g><title>__schedule (12 samples, 1.85%)</title><rect x="47.6043%" y="501" width="1.8547%" height="15" fill="rgb(236,157,25)"/><text x="47.8543%" y="511.50">_..</text></g><g><title>update_rq_clock (1 samples, 0.15%)</title><rect x="49.3045%" y="485" width="0.1546%" height="15" fill="rgb(219,209,0)"/><text x="49.5545%" y="495.50"></text></g><g><title>tcp_cleanup_rbuf (1 samples, 0.15%)</title><rect x="49.4590%" y="565" width="0.1546%" height="15" fill="rgb(240,116,54)"/><text x="49.7090%" y="575.50"></text></g><g><title>__x64_sys_recvfrom (39 samples, 6.03%)</title><rect x="43.7403%" y="629" width="6.0278%" height="15" fill="rgb(216,10,36)"/><text x="43.9903%" y="639.50">__x64_sy..</text></g><g><title>__sys_recvfrom (38 samples, 5.87%)</title><rect x="43.8949%" y="613" width="5.8733%" height="15" fill="rgb(222,72,44)"/><text x="44.1449%" y="623.50">__sys_r..</text></g><g><title>inet_recvmsg (37 samples, 5.72%)</title><rect x="44.0495%" y="597" width="5.7187%" height="15" fill="rgb(232,159,9)"/><text x="44.2995%" y="607.50">inet_re..</text></g><g><title>tcp_recvmsg (36 samples, 5.56%)</title><rect x="44.2040%" y="581" width="5.5641%" height="15" fill="rgb(210,39,32)"/><text x="44.4540%" y="591.50">tcp_rec..</text></g><g><title>tcp_rcv_space_adjust (1 samples, 0.15%)</title><rect x="49.6136%" y="565" width="0.1546%" height="15" fill="rgb(216,194,45)"/><text x="49.8636%" y="575.50"></text></g><g><title>do_syscall_64 (41 samples, 6.34%)</title><rect x="43.7403%" y="645" width="6.3369%" height="15" fill="rgb(218,18,35)"/><text x="43.9903%" y="655.50">do_sysca..</text></g><g><title>syscall_trace_enter (2 samples, 0.31%)</title><rect x="49.7682%" y="629" width="0.3091%" height="15" fill="rgb(207,83,51)"/><text x="50.0182%" y="639.50"></text></g><g><title>__audit_syscall_entry (1 samples, 0.15%)</title><rect x="49.9227%" y="613" width="0.1546%" height="15" fill="rgb(225,63,43)"/><text x="50.1727%" y="623.50"></text></g><g><title>entry_SYSCALL_64 (42 samples, 6.49%)</title><rect x="43.7403%" y="661" width="6.4915%" height="15" fill="rgb(207,57,36)"/><text x="43.9903%" y="671.50">entry_SYS..</text></g><g><title>prepare_exit_to_usermode (1 samples, 0.15%)</title><rect x="50.0773%" y="645" width="0.1546%" height="15" fill="rgb(216,99,33)"/><text x="50.3273%" y="655.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (44 samples, 6.80%)</title><rect x="43.5858%" y="757" width="6.8006%" height="15" fill="rgb(225,42,16)"/><text x="43.8358%" y="767.50">&lt;std::io:..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (44 samples, 6.80%)</title><rect x="43.5858%" y="741" width="6.8006%" height="15" fill="rgb(220,201,45)"/><text x="43.8358%" y="751.50">&lt;std::net..</text></g><g><title>std::sys_common::net::TcpStream::read (44 samples, 6.80%)</title><rect x="43.5858%" y="725" width="6.8006%" height="15" fill="rgb(225,33,4)"/><text x="43.8358%" y="735.50">std::sys_..</text></g><g><title>std::sys::unix::net::Socket::read (44 samples, 6.80%)</title><rect x="43.5858%" y="709" width="6.8006%" height="15" fill="rgb(224,33,50)"/><text x="43.8358%" y="719.50">std::sys:..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (44 samples, 6.80%)</title><rect x="43.5858%" y="693" width="6.8006%" height="15" fill="rgb(246,198,51)"/><text x="43.8358%" y="703.50">std::sys:..</text></g><g><title>__libc_recv (44 samples, 6.80%)</title><rect x="43.5858%" y="677" width="6.8006%" height="15" fill="rgb(205,22,4)"/><text x="43.8358%" y="687.50">__libc_re..</text></g><g><title>syscall_return_via_sysret (1 samples, 0.15%)</title><rect x="50.2318%" y="661" width="0.1546%" height="15" fill="rgb(206,3,8)"/><text x="50.4818%" y="671.50"></text></g><g><title>msql_srv::packet::PacketReader&lt;R&gt;::next (46 samples, 7.11%)</title><rect x="43.5858%" y="773" width="7.1097%" height="15" fill="rgb(251,23,15)"/><text x="43.8358%" y="783.50">msql_srv::..</text></g><g><title>__memset_avx2_erms (2 samples, 0.31%)</title><rect x="50.3864%" y="757" width="0.3091%" height="15" fill="rgb(252,88,28)"/><text x="50.6364%" y="767.50"></text></g><g><title>__x86_indirect_thunk_rax (1 samples, 0.15%)</title><rect x="50.6955%" y="709" width="0.1546%" height="15" fill="rgb(212,127,14)"/><text x="50.9455%" y="719.50"></text></g><g><title>fput_many (1 samples, 0.15%)</title><rect x="51.3138%" y="645" width="0.1546%" height="15" fill="rgb(247,145,37)"/><text x="51.5638%" y="655.50"></text></g><g><title>__sk_dst_check (1 samples, 0.15%)</title><rect x="51.9320%" y="533" width="0.1546%" height="15" fill="rgb(209,117,53)"/><text x="52.1820%" y="543.50"></text></g><g><title>ipv4_dst_check (1 samples, 0.15%)</title><rect x="51.9320%" y="517" width="0.1546%" height="15" fill="rgb(212,90,42)"/><text x="52.1820%" y="527.50"></text></g><g><title>__ip_finish_output (1 samples, 0.15%)</title><rect x="52.0866%" y="517" width="0.1546%" height="15" fill="rgb(218,164,37)"/><text x="52.3366%" y="527.50"></text></g><g><title>dev_hard_start_xmit (1 samples, 0.15%)</title><rect x="52.3957%" y="485" width="0.1546%" height="15" fill="rgb(246,65,34)"/><text x="52.6457%" y="495.50"></text></g><g><title>loopback_xmit (1 samples, 0.15%)</title><rect x="52.3957%" y="469" width="0.1546%" height="15" fill="rgb(231,100,33)"/><text x="52.6457%" y="479.50"></text></g><g><title>__dev_queue_xmit (2 samples, 0.31%)</title><rect x="52.3957%" y="501" width="0.3091%" height="15" fill="rgb(228,126,14)"/><text x="52.6457%" y="511.50"></text></g><g><title>validate_xmit_xfrm (1 samples, 0.15%)</title><rect x="52.5502%" y="485" width="0.1546%" height="15" fill="rgb(215,173,21)"/><text x="52.8002%" y="495.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.15%)</title><rect x="52.7048%" y="437" width="0.1546%" height="15" fill="rgb(210,6,40)"/><text x="52.9548%" y="447.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (1 samples, 0.15%)</title><rect x="53.4776%" y="293" width="0.1546%" height="15" fill="rgb(212,48,18)"/><text x="53.7276%" y="303.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.15%)</title><rect x="53.4776%" y="277" width="0.1546%" height="15" fill="rgb(230,214,11)"/><text x="53.7276%" y="287.50"></text></g><g><title>sk_filter_trim_cap (2 samples, 0.31%)</title><rect x="53.4776%" y="309" width="0.3091%" height="15" fill="rgb(254,105,39)"/><text x="53.7276%" y="319.50"></text></g><g><title>security_sock_rcv_skb (1 samples, 0.15%)</title><rect x="53.6321%" y="293" width="0.1546%" height="15" fill="rgb(245,158,5)"/><text x="53.8821%" y="303.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.15%)</title><rect x="54.0958%" y="213" width="0.1546%" height="15" fill="rgb(249,208,11)"/><text x="54.3458%" y="223.50"></text></g><g><title>preempt_count_add (1 samples, 0.15%)</title><rect x="54.0958%" y="197" width="0.1546%" height="15" fill="rgb(210,39,28)"/><text x="54.3458%" y="207.50"></text></g><g><title>enqueue_task (1 samples, 0.15%)</title><rect x="54.2504%" y="213" width="0.1546%" height="15" fill="rgb(211,56,53)"/><text x="54.5004%" y="223.50"></text></g><g><title>psi_task_change (1 samples, 0.15%)</title><rect x="54.2504%" y="197" width="0.1546%" height="15" fill="rgb(226,201,30)"/><text x="54.5004%" y="207.50"></text></g><g><title>psi_group_change (1 samples, 0.15%)</title><rect x="54.2504%" y="181" width="0.1546%" height="15" fill="rgb(239,101,34)"/><text x="54.5004%" y="191.50"></text></g><g><title>reweight_entity (1 samples, 0.15%)</title><rect x="54.5595%" y="181" width="0.1546%" height="15" fill="rgb(226,209,5)"/><text x="54.8095%" y="191.50"></text></g><g><title>__wake_up_common (6 samples, 0.93%)</title><rect x="53.9413%" y="245" width="0.9274%" height="15" fill="rgb(250,105,47)"/><text x="54.1913%" y="255.50"></text></g><g><title>try_to_wake_up (6 samples, 0.93%)</title><rect x="53.9413%" y="229" width="0.9274%" height="15" fill="rgb(230,72,3)"/><text x="54.1913%" y="239.50"></text></g><g><title>enqueue_task_fair (3 samples, 0.46%)</title><rect x="54.4049%" y="213" width="0.4637%" height="15" fill="rgb(232,218,39)"/><text x="54.6549%" y="223.50"></text></g><g><title>enqueue_entity (2 samples, 0.31%)</title><rect x="54.5595%" y="197" width="0.3091%" height="15" fill="rgb(248,166,6)"/><text x="54.8095%" y="207.50"></text></g><g><title>update_load_avg (1 samples, 0.15%)</title><rect x="54.7141%" y="181" width="0.1546%" height="15" fill="rgb(247,89,20)"/><text x="54.9641%" y="191.50"></text></g><g><title>_raw_spin_lock_irqsave (3 samples, 0.46%)</title><rect x="54.8686%" y="245" width="0.4637%" height="15" fill="rgb(248,130,54)"/><text x="55.1186%" y="255.50"></text></g><g><title>sock_def_readable (10 samples, 1.55%)</title><rect x="53.9413%" y="277" width="1.5456%" height="15" fill="rgb(234,196,4)"/><text x="54.1913%" y="287.50"></text></g><g><title>__wake_up_common_lock (10 samples, 1.55%)</title><rect x="53.9413%" y="261" width="1.5456%" height="15" fill="rgb(250,143,31)"/><text x="54.1913%" y="271.50"></text></g><g><title>_raw_spin_unlock_irqrestore (1 samples, 0.15%)</title><rect x="55.3323%" y="245" width="0.1546%" height="15" fill="rgb(211,110,34)"/><text x="55.5823%" y="255.50"></text></g><g><title>preempt_count_sub (1 samples, 0.15%)</title><rect x="55.3323%" y="229" width="0.1546%" height="15" fill="rgb(215,124,48)"/><text x="55.5823%" y="239.50"></text></g><g><title>kfree (1 samples, 0.15%)</title><rect x="55.4869%" y="245" width="0.1546%" height="15" fill="rgb(216,46,13)"/><text x="55.7369%" y="255.50"></text></g><g><title>__kfree_skb (2 samples, 0.31%)</title><rect x="55.4869%" y="261" width="0.3091%" height="15" fill="rgb(205,184,25)"/><text x="55.7369%" y="271.50"></text></g><g><title>skb_release_data (1 samples, 0.15%)</title><rect x="55.6414%" y="245" width="0.1546%" height="15" fill="rgb(228,1,10)"/><text x="55.8914%" y="255.50"></text></g><g><title>tcp_ack (3 samples, 0.46%)</title><rect x="55.4869%" y="277" width="0.4637%" height="15" fill="rgb(213,116,27)"/><text x="55.7369%" y="287.50"></text></g><g><title>kmem_cache_free (1 samples, 0.15%)</title><rect x="55.7960%" y="261" width="0.1546%" height="15" fill="rgb(241,95,50)"/><text x="56.0460%" y="271.50"></text></g><g><title>cache_from_obj (1 samples, 0.15%)</title><rect x="55.7960%" y="245" width="0.1546%" height="15" fill="rgb(238,48,32)"/><text x="56.0460%" y="255.50"></text></g><g><title>ip_local_deliver (18 samples, 2.78%)</title><rect x="53.3230%" y="373" width="2.7821%" height="15" fill="rgb(235,113,49)"/><text x="53.5730%" y="383.50">ip..</text></g><g><title>ip_local_deliver_finish (18 samples, 2.78%)</title><rect x="53.3230%" y="357" width="2.7821%" height="15" fill="rgb(205,127,43)"/><text x="53.5730%" y="367.50">ip..</text></g><g><title>ip_protocol_deliver_rcu (18 samples, 2.78%)</title><rect x="53.3230%" y="341" width="2.7821%" height="15" fill="rgb(250,162,2)"/><text x="53.5730%" y="351.50">ip..</text></g><g><title>tcp_v4_rcv (18 samples, 2.78%)</title><rect x="53.3230%" y="325" width="2.7821%" height="15" fill="rgb(220,13,41)"/><text x="53.5730%" y="335.50">tc..</text></g><g><title>tcp_v4_do_rcv (15 samples, 2.32%)</title><rect x="53.7867%" y="309" width="2.3184%" height="15" fill="rgb(249,221,25)"/><text x="54.0367%" y="319.50">t..</text></g><g><title>tcp_rcv_established (15 samples, 2.32%)</title><rect x="53.7867%" y="293" width="2.3184%" height="15" fill="rgb(215,208,19)"/><text x="54.0367%" y="303.50">t..</text></g><g><title>tcp_mstamp_refresh (1 samples, 0.15%)</title><rect x="55.9505%" y="277" width="0.1546%" height="15" fill="rgb(236,175,2)"/><text x="56.2005%" y="287.50"></text></g><g><title>ktime_get (1 samples, 0.15%)</title><rect x="55.9505%" y="261" width="0.1546%" height="15" fill="rgb(241,52,2)"/><text x="56.2005%" y="271.50"></text></g><g><title>ip_rcv_core (1 samples, 0.15%)</title><rect x="56.1051%" y="373" width="0.1546%" height="15" fill="rgb(248,140,14)"/><text x="56.3551%" y="383.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.15%)</title><rect x="56.1051%" y="357" width="0.1546%" height="15" fill="rgb(253,22,42)"/><text x="56.3551%" y="367.50"></text></g><g><title>__netif_receive_skb_one_core (22 samples, 3.40%)</title><rect x="53.1685%" y="405" width="3.4003%" height="15" fill="rgb(234,61,47)"/><text x="53.4185%" y="415.50">__n..</text></g><g><title>ip_rcv (21 samples, 3.25%)</title><rect x="53.3230%" y="389" width="3.2457%" height="15" fill="rgb(208,226,15)"/><text x="53.5730%" y="399.50">ip_..</text></g><g><title>ip_rcv_finish (2 samples, 0.31%)</title><rect x="56.2597%" y="373" width="0.3091%" height="15" fill="rgb(217,221,4)"/><text x="56.5097%" y="383.50"></text></g><g><title>ip_rcv_finish_core.constprop.0 (2 samples, 0.31%)</title><rect x="56.2597%" y="357" width="0.3091%" height="15" fill="rgb(212,174,34)"/><text x="56.5097%" y="367.50"></text></g><g><title>ip_finish_output2 (29 samples, 4.48%)</title><rect x="52.2411%" y="517" width="4.4822%" height="15" fill="rgb(253,83,4)"/><text x="52.4911%" y="527.50">ip_fi..</text></g><g><title>__local_bh_enable_ip (26 samples, 4.02%)</title><rect x="52.7048%" y="501" width="4.0185%" height="15" fill="rgb(250,195,49)"/><text x="52.9548%" y="511.50">__lo..</text></g><g><title>do_softirq (26 samples, 4.02%)</title><rect x="52.7048%" y="485" width="4.0185%" height="15" fill="rgb(241,192,25)"/><text x="52.9548%" y="495.50">do_s..</text></g><g><title>do_softirq_own_stack (26 samples, 4.02%)</title><rect x="52.7048%" y="469" width="4.0185%" height="15" fill="rgb(208,124,10)"/><text x="52.9548%" y="479.50">do_s..</text></g><g><title>__do_softirq (26 samples, 4.02%)</title><rect x="52.7048%" y="453" width="4.0185%" height="15" fill="rgb(222,33,0)"/><text x="52.9548%" y="463.50">__do..</text></g><g><title>net_rx_action (25 samples, 3.86%)</title><rect x="52.8594%" y="437" width="3.8640%" height="15" fill="rgb(234,209,28)"/><text x="53.1094%" y="447.50">net_..</text></g><g><title>process_backlog (24 samples, 3.71%)</title><rect x="53.0139%" y="421" width="3.7094%" height="15" fill="rgb(224,11,23)"/><text x="53.2639%" y="431.50">proc..</text></g><g><title>__rcu_read_unlock (1 samples, 0.15%)</title><rect x="56.5688%" y="405" width="0.1546%" height="15" fill="rgb(232,99,1)"/><text x="56.8188%" y="415.50"></text></g><g><title>__ip_queue_xmit (34 samples, 5.26%)</title><rect x="51.7774%" y="549" width="5.2550%" height="15" fill="rgb(237,95,45)"/><text x="52.0274%" y="559.50">__ip_q..</text></g><g><title>ip_output (32 samples, 4.95%)</title><rect x="52.0866%" y="533" width="4.9459%" height="15" fill="rgb(208,109,11)"/><text x="52.3366%" y="543.50">ip_out..</text></g><g><title>ip_finish_output (2 samples, 0.31%)</title><rect x="56.7233%" y="517" width="0.3091%" height="15" fill="rgb(216,190,48)"/><text x="56.9733%" y="527.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (2 samples, 0.31%)</title><rect x="56.7233%" y="501" width="0.3091%" height="15" fill="rgb(251,171,36)"/><text x="56.9733%" y="511.50"></text></g><g><title>preempt_count_add (2 samples, 0.31%)</title><rect x="56.7233%" y="485" width="0.3091%" height="15" fill="rgb(230,62,22)"/><text x="56.9733%" y="495.50"></text></g><g><title>ip_queue_xmit (1 samples, 0.15%)</title><rect x="57.0325%" y="549" width="0.1546%" height="15" fill="rgb(225,114,35)"/><text x="57.2825%" y="559.50"></text></g><g><title>skb_clone (1 samples, 0.15%)</title><rect x="57.1870%" y="549" width="0.1546%" height="15" fill="rgb(215,118,42)"/><text x="57.4370%" y="559.50"></text></g><g><title>__copy_skb_header (1 samples, 0.15%)</title><rect x="57.1870%" y="533" width="0.1546%" height="15" fill="rgb(243,119,21)"/><text x="57.4370%" y="543.50"></text></g><g><title>__tcp_transmit_skb (37 samples, 5.72%)</title><rect x="51.7774%" y="565" width="5.7187%" height="15" fill="rgb(252,177,53)"/><text x="52.0274%" y="575.50">__tcp_t..</text></g><g><title>tcp_rate_skb_sent (1 samples, 0.15%)</title><rect x="57.3416%" y="549" width="0.1546%" height="15" fill="rgb(237,209,29)"/><text x="57.5916%" y="559.50"></text></g><g><title>__tcp_push_pending_frames (40 samples, 6.18%)</title><rect x="51.4683%" y="597" width="6.1824%" height="15" fill="rgb(212,65,23)"/><text x="51.7183%" y="607.50">__tcp_pu..</text></g><g><title>tcp_write_xmit (40 samples, 6.18%)</title><rect x="51.4683%" y="581" width="6.1824%" height="15" fill="rgb(230,222,46)"/><text x="51.7183%" y="591.50">tcp_writ..</text></g><g><title>ktime_get (1 samples, 0.15%)</title><rect x="57.4961%" y="565" width="0.1546%" height="15" fill="rgb(215,135,32)"/><text x="57.7461%" y="575.50"></text></g><g><title>read_tsc (1 samples, 0.15%)</title><rect x="57.4961%" y="549" width="0.1546%" height="15" fill="rgb(246,101,22)"/><text x="57.7461%" y="559.50"></text></g><g><title>__kmalloc_node_track_caller (1 samples, 0.15%)</title><rect x="57.8053%" y="565" width="0.1546%" height="15" fill="rgb(206,107,13)"/><text x="58.0553%" y="575.50"></text></g><g><title>memset_erms (1 samples, 0.15%)</title><rect x="57.8053%" y="549" width="0.1546%" height="15" fill="rgb(250,100,44)"/><text x="58.0553%" y="559.50"></text></g><g><title>sk_stream_alloc_skb (3 samples, 0.46%)</title><rect x="57.6507%" y="597" width="0.4637%" height="15" fill="rgb(231,147,38)"/><text x="57.9007%" y="607.50"></text></g><g><title>__alloc_skb (3 samples, 0.46%)</title><rect x="57.6507%" y="581" width="0.4637%" height="15" fill="rgb(229,8,40)"/><text x="57.9007%" y="591.50"></text></g><g><title>__ksize (1 samples, 0.15%)</title><rect x="57.9598%" y="565" width="0.1546%" height="15" fill="rgb(221,135,30)"/><text x="58.2098%" y="575.50"></text></g><g><title>skb_do_copy_data_nocache (1 samples, 0.15%)</title><rect x="58.1144%" y="597" width="0.1546%" height="15" fill="rgb(249,193,18)"/><text x="58.3644%" y="607.50"></text></g><g><title>sock_sendmsg (45 samples, 6.96%)</title><rect x="51.4683%" y="645" width="6.9552%" height="15" fill="rgb(209,133,39)"/><text x="51.7183%" y="655.50">sock_send..</text></g><g><title>tcp_sendmsg (45 samples, 6.96%)</title><rect x="51.4683%" y="629" width="6.9552%" height="15" fill="rgb(232,100,14)"/><text x="51.7183%" y="639.50">tcp_sendm..</text></g><g><title>tcp_sendmsg_locked (45 samples, 6.96%)</title><rect x="51.4683%" y="613" width="6.9552%" height="15" fill="rgb(224,185,1)"/><text x="51.7183%" y="623.50">tcp_sendm..</text></g><g><title>tcp_tx_timestamp (1 samples, 0.15%)</title><rect x="58.2689%" y="597" width="0.1546%" height="15" fill="rgb(223,139,8)"/><text x="58.5189%" y="607.50"></text></g><g><title>__x64_sys_sendto (47 samples, 7.26%)</title><rect x="51.3138%" y="677" width="7.2643%" height="15" fill="rgb(232,213,38)"/><text x="51.5638%" y="687.50">__x64_sys_..</text></g><g><title>__sys_sendto (47 samples, 7.26%)</title><rect x="51.3138%" y="661" width="7.2643%" height="15" fill="rgb(207,94,22)"/><text x="51.5638%" y="671.50">__sys_send..</text></g><g><title>sockfd_lookup_light (1 samples, 0.15%)</title><rect x="58.4235%" y="645" width="0.1546%" height="15" fill="rgb(219,183,54)"/><text x="58.6735%" y="655.50"></text></g><g><title>__fget_light (1 samples, 0.15%)</title><rect x="58.4235%" y="629" width="0.1546%" height="15" fill="rgb(216,185,54)"/><text x="58.6735%" y="639.50"></text></g><g><title>do_syscall_64 (48 samples, 7.42%)</title><rect x="51.3138%" y="693" width="7.4189%" height="15" fill="rgb(254,217,39)"/><text x="51.5638%" y="703.50">do_syscall..</text></g><g><title>syscall_slow_exit_work (1 samples, 0.15%)</title><rect x="58.5781%" y="677" width="0.1546%" height="15" fill="rgb(240,178,23)"/><text x="58.8281%" y="687.50"></text></g><g><title>decor::Shim::run_on_tcp (189 samples, 29.21%)</title><rect x="29.6754%" y="805" width="29.2117%" height="15" fill="rgb(218,11,47)"/><text x="29.9254%" y="815.50">decor::Shim::run_on_tcp</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (189 samples, 29.21%)</title><rect x="29.6754%" y="789" width="29.2117%" height="15" fill="rgb(218,51,51)"/><text x="29.9254%" y="799.50">msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (53 samples, 8.19%)</title><rect x="50.6955%" y="773" width="8.1917%" height="15" fill="rgb(238,126,27)"/><text x="50.9455%" y="783.50">std::io::bu..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (53 samples, 8.19%)</title><rect x="50.6955%" y="757" width="8.1917%" height="15" fill="rgb(249,202,22)"/><text x="50.9455%" y="767.50">&lt;std::net::..</text></g><g><title>std::sys_common::net::TcpStream::write (53 samples, 8.19%)</title><rect x="50.6955%" y="741" width="8.1917%" height="15" fill="rgb(254,195,49)"/><text x="50.9455%" y="751.50">std::sys_co..</text></g><g><title>__libc_send (53 samples, 8.19%)</title><rect x="50.6955%" y="725" width="8.1917%" height="15" fill="rgb(208,123,14)"/><text x="50.9455%" y="735.50">__libc_send</text></g><g><title>entry_SYSCALL_64 (52 samples, 8.04%)</title><rect x="50.8501%" y="709" width="8.0371%" height="15" fill="rgb(224,200,8)"/><text x="51.1001%" y="719.50">entry_SYSCA..</text></g><g><title>prepare_exit_to_usermode (1 samples, 0.15%)</title><rect x="58.7326%" y="693" width="0.1546%" height="15" fill="rgb(217,61,36)"/><text x="58.9826%" y="703.50"></text></g><g><title>__GI___clone (190 samples, 29.37%)</title><rect x="29.6754%" y="917" width="29.3663%" height="15" fill="rgb(206,35,45)"/><text x="29.9254%" y="927.50">__GI___clone</text></g><g><title>start_thread (190 samples, 29.37%)</title><rect x="29.6754%" y="901" width="29.3663%" height="15" fill="rgb(217,65,33)"/><text x="29.9254%" y="911.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (190 samples, 29.37%)</title><rect x="29.6754%" y="885" width="29.3663%" height="15" fill="rgb(222,158,48)"/><text x="29.9254%" y="895.50">std::sys::unix::thread::Thread::new::thread_sta..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (190 samples, 29.37%)</title><rect x="29.6754%" y="869" width="29.3663%" height="15" fill="rgb(254,2,54)"/><text x="29.9254%" y="879.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::F..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (190 samples, 29.37%)</title><rect x="29.6754%" y="853" width="29.3663%" height="15" fill="rgb(250,143,38)"/><text x="29.9254%" y="863.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::F..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (190 samples, 29.37%)</title><rect x="29.6754%" y="837" width="29.3663%" height="15" fill="rgb(248,25,0)"/><text x="29.9254%" y="847.50">core::ops::function::FnOnce::call_once{{vtable-..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (190 samples, 29.37%)</title><rect x="29.6754%" y="821" width="29.3663%" height="15" fill="rgb(206,152,27)"/><text x="29.9254%" y="831.50">std::sys_common::backtrace::__rust_begin_short_..</text></g><g><title>mysql::conn::Conn::new (1 samples, 0.15%)</title><rect x="58.8872%" y="805" width="0.1546%" height="15" fill="rgb(240,77,30)"/><text x="59.1372%" y="815.50"></text></g><g><title>mysql::conn::opts::from_url (1 samples, 0.15%)</title><rect x="58.8872%" y="789" width="0.1546%" height="15" fill="rgb(231,5,3)"/><text x="59.1372%" y="799.50"></text></g><g><title>url::host::Host::parse (1 samples, 0.15%)</title><rect x="58.8872%" y="773" width="0.1546%" height="15" fill="rgb(207,226,32)"/><text x="59.1372%" y="783.50"></text></g><g><title>idna::domain_to_ascii (1 samples, 0.15%)</title><rect x="58.8872%" y="757" width="0.1546%" height="15" fill="rgb(222,207,47)"/><text x="59.1372%" y="767.50"></text></g><g><title>idna::uts46::Config::to_ascii (1 samples, 0.15%)</title><rect x="58.8872%" y="741" width="0.1546%" height="15" fill="rgb(229,115,45)"/><text x="59.1372%" y="751.50"></text></g><g><title>idna::uts46::processing (1 samples, 0.15%)</title><rect x="58.8872%" y="725" width="0.1546%" height="15" fill="rgb(224,191,6)"/><text x="59.1372%" y="735.50"></text></g><g><title>idna::uts46::find_char (1 samples, 0.15%)</title><rect x="58.8872%" y="709" width="0.1546%" height="15" fill="rgb(230,227,24)"/><text x="59.1372%" y="719.50"></text></g><g><title>alloc::fmt::format (2 samples, 0.31%)</title><rect x="59.1963%" y="741" width="0.3091%" height="15" fill="rgb(228,80,19)"/><text x="59.4463%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.31%)</title><rect x="59.1963%" y="725" width="0.3091%" height="15" fill="rgb(247,229,0)"/><text x="59.4463%" y="735.50"></text></g><g><title>core::fmt::write (2 samples, 0.31%)</title><rect x="59.1963%" y="709" width="0.3091%" height="15" fill="rgb(237,194,15)"/><text x="59.4463%" y="719.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.15%)</title><rect x="59.3509%" y="693" width="0.1546%" height="15" fill="rgb(219,203,20)"/><text x="59.6009%" y="703.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.15%)</title><rect x="59.3509%" y="677" width="0.1546%" height="15" fill="rgb(234,128,8)"/><text x="59.6009%" y="687.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.15%)</title><rect x="59.3509%" y="661" width="0.1546%" height="15" fill="rgb(248,202,8)"/><text x="59.6009%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.15%)</title><rect x="59.3509%" y="645" width="0.1546%" height="15" fill="rgb(206,104,37)"/><text x="59.6009%" y="655.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.15%)</title><rect x="59.3509%" y="629" width="0.1546%" height="15" fill="rgb(223,8,27)"/><text x="59.6009%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.15%)</title><rect x="59.3509%" y="613" width="0.1546%" height="15" fill="rgb(216,217,28)"/><text x="59.6009%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.15%)</title><rect x="59.3509%" y="597" width="0.1546%" height="15" fill="rgb(249,199,1)"/><text x="59.6009%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.15%)</title><rect x="59.3509%" y="581" width="0.1546%" height="15" fill="rgb(240,85,17)"/><text x="59.6009%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.15%)</title><rect x="59.3509%" y="565" width="0.1546%" height="15" fill="rgb(206,108,45)"/><text x="59.6009%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="59.3509%" y="549" width="0.1546%" height="15" fill="rgb(245,210,41)"/><text x="59.6009%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.15%)</title><rect x="59.3509%" y="533" width="0.1546%" height="15" fill="rgb(206,13,37)"/><text x="59.6009%" y="543.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="59.5054%" y="741" width="0.1546%" height="15" fill="rgb(250,61,18)"/><text x="59.7554%" y="751.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="59.5054%" y="725" width="0.1546%" height="15" fill="rgb(235,172,48)"/><text x="59.7554%" y="735.50"></text></g><g><title>__libc_close (1 samples, 0.15%)</title><rect x="59.5054%" y="709" width="0.1546%" height="15" fill="rgb(249,201,17)"/><text x="59.7554%" y="719.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.15%)</title><rect x="59.5054%" y="693" width="0.1546%" height="15" fill="rgb(219,208,6)"/><text x="59.7554%" y="703.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.15%)</title><rect x="59.5054%" y="677" width="0.1546%" height="15" fill="rgb(248,31,23)"/><text x="59.7554%" y="687.50"></text></g><g><title>task_work_run (1 samples, 0.15%)</title><rect x="59.5054%" y="661" width="0.1546%" height="15" fill="rgb(245,15,42)"/><text x="59.7554%" y="671.50"></text></g><g><title>__fput (1 samples, 0.15%)</title><rect x="59.5054%" y="645" width="0.1546%" height="15" fill="rgb(222,217,39)"/><text x="59.7554%" y="655.50"></text></g><g><title>__dentry_kill (1 samples, 0.15%)</title><rect x="59.5054%" y="629" width="0.1546%" height="15" fill="rgb(210,219,27)"/><text x="59.7554%" y="639.50"></text></g><g><title>evict (1 samples, 0.15%)</title><rect x="59.5054%" y="613" width="0.1546%" height="15" fill="rgb(252,166,36)"/><text x="59.7554%" y="623.50"></text></g><g><title>truncate_inode_pages_final (1 samples, 0.15%)</title><rect x="59.5054%" y="597" width="0.1546%" height="15" fill="rgb(245,132,34)"/><text x="59.7554%" y="607.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.15%)</title><rect x="59.6600%" y="661" width="0.1546%" height="15" fill="rgb(236,54,3)"/><text x="59.9100%" y="671.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.15%)</title><rect x="59.6600%" y="645" width="0.1546%" height="15" fill="rgb(241,173,43)"/><text x="59.9100%" y="655.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.15%)</title><rect x="59.8145%" y="645" width="0.1546%" height="15" fill="rgb(215,190,9)"/><text x="60.0645%" y="655.50"></text></g><g><title>__set_cpus_allowed_ptr (234 samples, 36.17%)</title><rect x="59.9691%" y="565" width="36.1669%" height="15" fill="rgb(242,101,16)"/><text x="60.2191%" y="575.50">__set_cpus_allowed_ptr</text></g><g><title>stop_one_cpu (234 samples, 36.17%)</title><rect x="59.9691%" y="549" width="36.1669%" height="15" fill="rgb(223,190,21)"/><text x="60.2191%" y="559.50">stop_one_cpu</text></g><g><title>cpu_stop_queue_work (234 samples, 36.17%)</title><rect x="59.9691%" y="533" width="36.1669%" height="15" fill="rgb(215,228,25)"/><text x="60.2191%" y="543.50">cpu_stop_queue_work</text></g><g><title>preempt_schedule_thunk (234 samples, 36.17%)</title><rect x="59.9691%" y="517" width="36.1669%" height="15" fill="rgb(225,36,22)"/><text x="60.2191%" y="527.50">preempt_schedule_thunk</text></g><g><title>preempt_schedule_common (234 samples, 36.17%)</title><rect x="59.9691%" y="501" width="36.1669%" height="15" fill="rgb(251,106,46)"/><text x="60.2191%" y="511.50">preempt_schedule_common</text></g><g><title>__schedule (234 samples, 36.17%)</title><rect x="59.9691%" y="485" width="36.1669%" height="15" fill="rgb(208,90,1)"/><text x="60.2191%" y="495.50">__schedule</text></g><g><title>finish_task_switch (234 samples, 36.17%)</title><rect x="59.9691%" y="469" width="36.1669%" height="15" fill="rgb(243,10,4)"/><text x="60.2191%" y="479.50">finish_task_switch</text></g><g><title>__perf_event_task_sched_in (231 samples, 35.70%)</title><rect x="60.4328%" y="453" width="35.7032%" height="15" fill="rgb(212,137,27)"/><text x="60.6828%" y="463.50">__perf_event_task_sched_in</text></g><g><title>__intel_pmu_enable_all.constprop.0 (231 samples, 35.70%)</title><rect x="60.4328%" y="437" width="35.7032%" height="15" fill="rgb(231,220,49)"/><text x="60.6828%" y="447.50">__intel_pmu_enable_all.constprop.0</text></g><g><title>native_write_msr (231 samples, 35.70%)</title><rect x="60.4328%" y="421" width="35.7032%" height="15" fill="rgb(237,96,20)"/><text x="60.6828%" y="431.50">native_write_msr</text></g><g><title>do_syscall_64 (235 samples, 36.32%)</title><rect x="59.9691%" y="613" width="36.3215%" height="15" fill="rgb(239,229,30)"/><text x="60.2191%" y="623.50">do_syscall_64</text></g><g><title>__x64_sys_sched_setaffinity (235 samples, 36.32%)</title><rect x="59.9691%" y="597" width="36.3215%" height="15" fill="rgb(219,65,33)"/><text x="60.2191%" y="607.50">__x64_sys_sched_setaffinity</text></g><g><title>sched_setaffinity (235 samples, 36.32%)</title><rect x="59.9691%" y="581" width="36.3215%" height="15" fill="rgb(243,134,7)"/><text x="60.2191%" y="591.50">sched_setaffinity</text></g><g><title>cpuset_cpus_allowed (1 samples, 0.15%)</title><rect x="96.1360%" y="565" width="0.1546%" height="15" fill="rgb(216,177,54)"/><text x="96.3860%" y="575.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.15%)</title><rect x="96.1360%" y="549" width="0.1546%" height="15" fill="rgb(211,160,20)"/><text x="96.3860%" y="559.50"></text></g><g><title>hwloc::Topology::new (240 samples, 37.09%)</title><rect x="59.6600%" y="741" width="37.0943%" height="15" fill="rgb(239,85,39)"/><text x="59.9100%" y="751.50">hwloc::Topology::new</text></g><g><title>hwloc_topology_load (240 samples, 37.09%)</title><rect x="59.6600%" y="725" width="37.0943%" height="15" fill="rgb(232,125,22)"/><text x="59.9100%" y="735.50">hwloc_topology_load</text></g><g><title>[libhwloc.so.15.2.0] (240 samples, 37.09%)</title><rect x="59.6600%" y="709" width="37.0943%" height="15" fill="rgb(244,57,34)"/><text x="59.9100%" y="719.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (240 samples, 37.09%)</title><rect x="59.6600%" y="693" width="37.0943%" height="15" fill="rgb(214,203,32)"/><text x="59.9100%" y="703.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (240 samples, 37.09%)</title><rect x="59.6600%" y="677" width="37.0943%" height="15" fill="rgb(207,58,43)"/><text x="59.9100%" y="687.50">[libhwloc.so.15.2.0]</text></g><g><title>hwloc_linux_set_tid_cpubind (239 samples, 36.94%)</title><rect x="59.8145%" y="661" width="36.9397%" height="15" fill="rgb(215,193,15)"/><text x="60.0645%" y="671.50">hwloc_linux_set_tid_cpubind</text></g><g><title>__GI___sched_setaffinity_new (238 samples, 36.79%)</title><rect x="59.9691%" y="645" width="36.7852%" height="15" fill="rgb(232,15,44)"/><text x="60.2191%" y="655.50">__GI___sched_setaffinity_new</text></g><g><title>entry_SYSCALL_64 (238 samples, 36.79%)</title><rect x="59.9691%" y="629" width="36.7852%" height="15" fill="rgb(212,3,48)"/><text x="60.2191%" y="639.50">entry_SYSCALL_64</text></g><g><title>prepare_exit_to_usermode (3 samples, 0.46%)</title><rect x="96.2906%" y="613" width="0.4637%" height="15" fill="rgb(218,128,7)"/><text x="96.5406%" y="623.50"></text></g><g><title>switch_fpu_return (1 samples, 0.15%)</title><rect x="96.5997%" y="597" width="0.1546%" height="15" fill="rgb(226,216,39)"/><text x="96.8497%" y="607.50"></text></g><g><title>copy_kernel_to_fpregs (1 samples, 0.15%)</title><rect x="96.5997%" y="581" width="0.1546%" height="15" fill="rgb(243,47,51)"/><text x="96.8497%" y="591.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (3 samples, 0.46%)</title><rect x="96.7543%" y="741" width="0.4637%" height="15" fill="rgb(241,183,40)"/><text x="97.0043%" y="751.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.31%)</title><rect x="96.9088%" y="725" width="0.3091%" height="15" fill="rgb(231,217,32)"/><text x="97.1588%" y="735.50"></text></g><g><title>__libc_start_main (248 samples, 38.33%)</title><rect x="59.0417%" y="901" width="38.3308%" height="15" fill="rgb(229,61,38)"/><text x="59.2917%" y="911.50">__libc_start_main</text></g><g><title>main (248 samples, 38.33%)</title><rect x="59.0417%" y="885" width="38.3308%" height="15" fill="rgb(225,210,5)"/><text x="59.2917%" y="895.50">main</text></g><g><title>std::rt::lang_start_internal (248 samples, 38.33%)</title><rect x="59.0417%" y="869" width="38.3308%" height="15" fill="rgb(231,79,45)"/><text x="59.2917%" y="879.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (248 samples, 38.33%)</title><rect x="59.0417%" y="853" width="38.3308%" height="15" fill="rgb(224,100,7)"/><text x="59.2917%" y="863.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (248 samples, 38.33%)</title><rect x="59.0417%" y="837" width="38.3308%" height="15" fill="rgb(241,198,18)"/><text x="59.2917%" y="847.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (248 samples, 38.33%)</title><rect x="59.0417%" y="821" width="38.3308%" height="15" fill="rgb(252,97,53)"/><text x="59.2917%" y="831.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (248 samples, 38.33%)</title><rect x="59.0417%" y="805" width="38.3308%" height="15" fill="rgb(220,88,7)"/><text x="59.2917%" y="815.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;..</text></g><g><title>std::rt::lang_start::_{{closure}} (248 samples, 38.33%)</title><rect x="59.0417%" y="789" width="38.3308%" height="15" fill="rgb(213,176,14)"/><text x="59.2917%" y="799.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (248 samples, 38.33%)</title><rect x="59.0417%" y="773" width="38.3308%" height="15" fill="rgb(246,73,7)"/><text x="59.2917%" y="783.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>lobsters::main (248 samples, 38.33%)</title><rect x="59.0417%" y="757" width="38.3308%" height="15" fill="rgb(245,64,36)"/><text x="59.2917%" y="767.50">lobsters::main</text></g><g><title>std::net::each_addr (1 samples, 0.15%)</title><rect x="97.2179%" y="741" width="0.1546%" height="15" fill="rgb(245,80,10)"/><text x="97.4679%" y="751.50"></text></g><g><title>std::sys_common::net::TcpListener::bind (1 samples, 0.15%)</title><rect x="97.2179%" y="725" width="0.1546%" height="15" fill="rgb(232,107,50)"/><text x="97.4679%" y="735.50"></text></g><g><title>std::sys::unix::net::Socket::new (1 samples, 0.15%)</title><rect x="97.2179%" y="709" width="0.1546%" height="15" fill="rgb(253,3,0)"/><text x="97.4679%" y="719.50"></text></g><g><title>__GI___socket (1 samples, 0.15%)</title><rect x="97.2179%" y="693" width="0.1546%" height="15" fill="rgb(212,99,53)"/><text x="97.4679%" y="703.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.15%)</title><rect x="97.2179%" y="677" width="0.1546%" height="15" fill="rgb(249,111,54)"/><text x="97.4679%" y="687.50"></text></g><g><title>do_syscall_64 (1 samples, 0.15%)</title><rect x="97.2179%" y="661" width="0.1546%" height="15" fill="rgb(249,55,30)"/><text x="97.4679%" y="671.50"></text></g><g><title>__x64_sys_socket (1 samples, 0.15%)</title><rect x="97.2179%" y="645" width="0.1546%" height="15" fill="rgb(237,47,42)"/><text x="97.4679%" y="655.50"></text></g><g><title>__sys_socket (1 samples, 0.15%)</title><rect x="97.2179%" y="629" width="0.1546%" height="15" fill="rgb(211,20,18)"/><text x="97.4679%" y="639.50"></text></g><g><title>__sock_create (1 samples, 0.15%)</title><rect x="97.2179%" y="613" width="0.1546%" height="15" fill="rgb(231,203,46)"/><text x="97.4679%" y="623.50"></text></g><g><title>inet_create (1 samples, 0.15%)</title><rect x="97.2179%" y="597" width="0.1546%" height="15" fill="rgb(237,142,3)"/><text x="97.4679%" y="607.50"></text></g><g><title>tcp_v4_init_sock (1 samples, 0.15%)</title><rect x="97.2179%" y="581" width="0.1546%" height="15" fill="rgb(241,107,1)"/><text x="97.4679%" y="591.50"></text></g><g><title>tcp_init_sock (1 samples, 0.15%)</title><rect x="97.2179%" y="565" width="0.1546%" height="15" fill="rgb(229,83,13)"/><text x="97.4679%" y="575.50"></text></g><g><title>percpu_counter_add_batch (1 samples, 0.15%)</title><rect x="97.2179%" y="549" width="0.1546%" height="15" fill="rgb(241,91,40)"/><text x="97.4679%" y="559.50"></text></g><g><title>_start (249 samples, 38.49%)</title><rect x="59.0417%" y="917" width="38.4853%" height="15" fill="rgb(225,3,45)"/><text x="59.2917%" y="927.50">_start</text></g><g><title>_dl_start (1 samples, 0.15%)</title><rect x="97.3725%" y="901" width="0.1546%" height="15" fill="rgb(244,223,14)"/><text x="97.6225%" y="911.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.15%)</title><rect x="97.3725%" y="885" width="0.1546%" height="15" fill="rgb(224,124,37)"/><text x="97.6225%" y="895.50"></text></g><g><title>dl_main (1 samples, 0.15%)</title><rect x="97.3725%" y="869" width="0.1546%" height="15" fill="rgb(251,171,30)"/><text x="97.6225%" y="879.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.15%)</title><rect x="97.3725%" y="853" width="0.1546%" height="15" fill="rgb(236,46,54)"/><text x="97.6225%" y="863.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.15%)</title><rect x="97.3725%" y="837" width="0.1546%" height="15" fill="rgb(245,213,5)"/><text x="97.6225%" y="847.50"></text></g><g><title>openaux (1 samples, 0.15%)</title><rect x="97.3725%" y="821" width="0.1546%" height="15" fill="rgb(230,144,27)"/><text x="97.6225%" y="831.50"></text></g><g><title>_dl_map_object (1 samples, 0.15%)</title><rect x="97.3725%" y="805" width="0.1546%" height="15" fill="rgb(220,86,6)"/><text x="97.6225%" y="815.50"></text></g><g><title>_dl_map_object_from_fd (1 samples, 0.15%)</title><rect x="97.3725%" y="789" width="0.1546%" height="15" fill="rgb(240,20,13)"/><text x="97.6225%" y="799.50"></text></g><g><title>page_fault (1 samples, 0.15%)</title><rect x="97.3725%" y="773" width="0.1546%" height="15" fill="rgb(217,89,34)"/><text x="97.6225%" y="783.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.15%)</title><rect x="97.3725%" y="757" width="0.1546%" height="15" fill="rgb(229,13,5)"/><text x="97.6225%" y="767.50"></text></g><g><title>handle_mm_fault (1 samples, 0.15%)</title><rect x="97.3725%" y="741" width="0.1546%" height="15" fill="rgb(244,67,35)"/><text x="97.6225%" y="751.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.15%)</title><rect x="97.3725%" y="725" width="0.1546%" height="15" fill="rgb(221,40,2)"/><text x="97.6225%" y="735.50"></text></g><g><title>do_wp_page (1 samples, 0.15%)</title><rect x="97.3725%" y="709" width="0.1546%" height="15" fill="rgb(237,157,21)"/><text x="97.6225%" y="719.50"></text></g><g><title>wp_page_copy (1 samples, 0.15%)</title><rect x="97.3725%" y="693" width="0.1546%" height="15" fill="rgb(222,94,11)"/><text x="97.6225%" y="703.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.15%)</title><rect x="97.3725%" y="677" width="0.1546%" height="15" fill="rgb(249,113,6)"/><text x="97.6225%" y="687.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.15%)</title><rect x="97.3725%" y="661" width="0.1546%" height="15" fill="rgb(238,137,36)"/><text x="97.6225%" y="671.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.15%)</title><rect x="97.3725%" y="645" width="0.1546%" height="15" fill="rgb(210,102,26)"/><text x="97.6225%" y="655.50"></text></g><g><title>prep_new_page (1 samples, 0.15%)</title><rect x="97.3725%" y="629" width="0.1546%" height="15" fill="rgb(218,30,30)"/><text x="97.6225%" y="639.50"></text></g><g><title>kernel_init_free_pages (1 samples, 0.15%)</title><rect x="97.3725%" y="613" width="0.1546%" height="15" fill="rgb(214,67,26)"/><text x="97.6225%" y="623.50"></text></g><g><title>clear_page_erms (1 samples, 0.15%)</title><rect x="97.3725%" y="597" width="0.1546%" height="15" fill="rgb(251,9,53)"/><text x="97.6225%" y="607.50"></text></g><g><title>[vmlinux] (2 samples, 0.31%)</title><rect x="98.1453%" y="885" width="0.3091%" height="15" fill="rgb(228,204,25)"/><text x="98.3953%" y="895.50"></text></g><g><title>do_group_exit (2 samples, 0.31%)</title><rect x="98.1453%" y="869" width="0.3091%" height="15" fill="rgb(207,153,8)"/><text x="98.3953%" y="879.50"></text></g><g><title>do_exit (2 samples, 0.31%)</title><rect x="98.1453%" y="853" width="0.3091%" height="15" fill="rgb(242,9,16)"/><text x="98.3953%" y="863.50"></text></g><g><title>mmput (2 samples, 0.31%)</title><rect x="98.1453%" y="837" width="0.3091%" height="15" fill="rgb(217,211,10)"/><text x="98.3953%" y="847.50"></text></g><g><title>exit_mmap (2 samples, 0.31%)</title><rect x="98.1453%" y="821" width="0.3091%" height="15" fill="rgb(219,228,52)"/><text x="98.3953%" y="831.50"></text></g><g><title>unmap_vmas (2 samples, 0.31%)</title><rect x="98.1453%" y="805" width="0.3091%" height="15" fill="rgb(231,92,29)"/><text x="98.3953%" y="815.50"></text></g><g><title>unmap_page_range (2 samples, 0.31%)</title><rect x="98.1453%" y="789" width="0.3091%" height="15" fill="rgb(232,8,23)"/><text x="98.3953%" y="799.50"></text></g><g><title>page_remove_file_rmap (2 samples, 0.31%)</title><rect x="98.1453%" y="773" width="0.3091%" height="15" fill="rgb(216,211,34)"/><text x="98.3953%" y="783.50"></text></g><g><title>entry_SYSCALL_64 (7 samples, 1.08%)</title><rect x="97.5270%" y="917" width="1.0819%" height="15" fill="rgb(236,151,0)"/><text x="97.7770%" y="927.50"></text></g><g><title>do_syscall_64 (3 samples, 0.46%)</title><rect x="98.1453%" y="901" width="0.4637%" height="15" fill="rgb(209,168,3)"/><text x="98.3953%" y="911.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.15%)</title><rect x="98.4544%" y="885" width="0.1546%" height="15" fill="rgb(208,129,28)"/><text x="98.7044%" y="895.50"></text></g><g><title>do_execve (1 samples, 0.15%)</title><rect x="98.4544%" y="869" width="0.1546%" height="15" fill="rgb(229,78,22)"/><text x="98.7044%" y="879.50"></text></g><g><title>__do_execve_file (1 samples, 0.15%)</title><rect x="98.4544%" y="853" width="0.1546%" height="15" fill="rgb(228,187,13)"/><text x="98.7044%" y="863.50"></text></g><g><title>search_binary_handler.part.0 (1 samples, 0.15%)</title><rect x="98.4544%" y="837" width="0.1546%" height="15" fill="rgb(240,119,24)"/><text x="98.7044%" y="847.50"></text></g><g><title>load_elf_binary (1 samples, 0.15%)</title><rect x="98.4544%" y="821" width="0.1546%" height="15" fill="rgb(209,194,42)"/><text x="98.7044%" y="831.50"></text></g><g><title>elf_map (1 samples, 0.15%)</title><rect x="98.4544%" y="805" width="0.1546%" height="15" fill="rgb(247,200,46)"/><text x="98.7044%" y="815.50"></text></g><g><title>vm_mmap_pgoff (1 samples, 0.15%)</title><rect x="98.4544%" y="789" width="0.1546%" height="15" fill="rgb(218,76,16)"/><text x="98.7044%" y="799.50"></text></g><g><title>do_mmap (1 samples, 0.15%)</title><rect x="98.4544%" y="773" width="0.1546%" height="15" fill="rgb(225,21,48)"/><text x="98.7044%" y="783.50"></text></g><g><title>mmap_region (1 samples, 0.15%)</title><rect x="98.4544%" y="757" width="0.1546%" height="15" fill="rgb(239,223,50)"/><text x="98.7044%" y="767.50"></text></g><g><title>perf_event_mmap (1 samples, 0.15%)</title><rect x="98.4544%" y="741" width="0.1546%" height="15" fill="rgb(244,45,21)"/><text x="98.7044%" y="751.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.15%)</title><rect x="98.4544%" y="725" width="0.1546%" height="15" fill="rgb(232,33,43)"/><text x="98.7044%" y="735.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.15%)</title><rect x="98.4544%" y="709" width="0.1546%" height="15" fill="rgb(209,8,3)"/><text x="98.7044%" y="719.50"></text></g><g><title>perf_event_mmap_output (1 samples, 0.15%)</title><rect x="98.4544%" y="693" width="0.1546%" height="15" fill="rgb(214,25,53)"/><text x="98.7044%" y="703.50"></text></g><g><title>perf_output_copy (1 samples, 0.15%)</title><rect x="98.4544%" y="677" width="0.1546%" height="15" fill="rgb(254,186,54)"/><text x="98.7044%" y="687.50"></text></g><g><title>page_fault (1 samples, 0.15%)</title><rect x="98.6090%" y="917" width="0.1546%" height="15" fill="rgb(208,174,49)"/><text x="98.8590%" y="927.50"></text></g><g><title>lobsters (641 samples, 99.07%)</title><rect x="0.0000%" y="933" width="99.0726%" height="15" fill="rgb(233,191,51)"/><text x="0.2500%" y="943.50">lobsters</text></g><g><title>syscall_return_via_sysret (2 samples, 0.31%)</title><rect x="98.7635%" y="917" width="0.3091%" height="15" fill="rgb(222,134,10)"/><text x="99.0135%" y="927.50"></text></g><g><title>all (647 samples, 100%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(230,226,20)"/><text x="0.2500%" y="959.50"></text></g><g><title>perf (6 samples, 0.93%)</title><rect x="99.0726%" y="933" width="0.9274%" height="15" fill="rgb(251,111,25)"/><text x="99.3226%" y="943.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.93%)</title><rect x="99.0726%" y="917" width="0.9274%" height="15" fill="rgb(224,40,46)"/><text x="99.3226%" y="927.50"></text></g><g><title>do_syscall_64 (6 samples, 0.93%)</title><rect x="99.0726%" y="901" width="0.9274%" height="15" fill="rgb(236,108,47)"/><text x="99.3226%" y="911.50"></text></g><g><title>__x64_sys_execve (6 samples, 0.93%)</title><rect x="99.0726%" y="885" width="0.9274%" height="15" fill="rgb(234,93,0)"/><text x="99.3226%" y="895.50"></text></g><g><title>do_execve (6 samples, 0.93%)</title><rect x="99.0726%" y="869" width="0.9274%" height="15" fill="rgb(224,213,32)"/><text x="99.3226%" y="879.50"></text></g><g><title>__do_execve_file (6 samples, 0.93%)</title><rect x="99.0726%" y="853" width="0.9274%" height="15" fill="rgb(251,11,48)"/><text x="99.3226%" y="863.50"></text></g><g><title>search_binary_handler.part.0 (6 samples, 0.93%)</title><rect x="99.0726%" y="837" width="0.9274%" height="15" fill="rgb(236,173,5)"/><text x="99.3226%" y="847.50"></text></g><g><title>load_elf_binary (6 samples, 0.93%)</title><rect x="99.0726%" y="821" width="0.9274%" height="15" fill="rgb(230,95,12)"/><text x="99.3226%" y="831.50"></text></g><g><title>setup_new_exec (6 samples, 0.93%)</title><rect x="99.0726%" y="805" width="0.9274%" height="15" fill="rgb(232,209,1)"/><text x="99.3226%" y="815.50"></text></g><g><title>perf_event_exec (6 samples, 0.93%)</title><rect x="99.0726%" y="789" width="0.9274%" height="15" fill="rgb(232,6,1)"/><text x="99.3226%" y="799.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (6 samples, 0.93%)</title><rect x="99.0726%" y="773" width="0.9274%" height="15" fill="rgb(210,224,50)"/><text x="99.3226%" y="783.50"></text></g><g><title>native_write_msr (6 samples, 0.93%)</title><rect x="99.0726%" y="757" width="0.9274%" height="15" fill="rgb(228,127,35)"/><text x="99.3226%" y="767.50"></text></g></svg></svg>