<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="950" onload="init(evt)" viewBox="0 0 1200 950" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="950" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="933.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="933.00"> </text><svg id="frames" x="10" width="1180"><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.16%)</title><rect x="0.0000%" y="853" width="0.1634%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="863.50"></text></g><g><title>std::sys_common::net::TcpStream::read (1 samples, 0.16%)</title><rect x="0.0000%" y="837" width="0.1634%" height="15" fill="rgb(217,0,24)"/><text x="0.2500%" y="847.50"></text></g><g><title>std::sys::unix::net::Socket::read (1 samples, 0.16%)</title><rect x="0.0000%" y="821" width="0.1634%" height="15" fill="rgb(221,193,54)"/><text x="0.2500%" y="831.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (1 samples, 0.16%)</title><rect x="0.0000%" y="805" width="0.1634%" height="15" fill="rgb(248,212,6)"/><text x="0.2500%" y="815.50"></text></g><g><title>__libc_recv (1 samples, 0.16%)</title><rect x="0.0000%" y="789" width="0.1634%" height="15" fill="rgb(208,68,35)"/><text x="0.2500%" y="799.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.16%)</title><rect x="0.0000%" y="773" width="0.1634%" height="15" fill="rgb(232,128,0)"/><text x="0.2500%" y="783.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.16%)</title><rect x="0.1634%" y="853" width="0.1634%" height="15" fill="rgb(207,160,47)"/><text x="0.4134%" y="863.50"></text></g><g><title>hwloc_linux_set_tid_cpubind (1 samples, 0.16%)</title><rect x="0.3268%" y="853" width="0.1634%" height="15" fill="rgb(228,23,34)"/><text x="0.5768%" y="863.50"></text></g><g><title>[[heap]] (4 samples, 0.65%)</title><rect x="0.0000%" y="869" width="0.6536%" height="15" fill="rgb(218,30,26)"/><text x="0.2500%" y="879.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::encode (1 samples, 0.16%)</title><rect x="0.4902%" y="853" width="0.1634%" height="15" fill="rgb(220,122,19)"/><text x="0.7402%" y="863.50"></text></g><g><title>[[stack]] (1 samples, 0.16%)</title><rect x="0.6536%" y="869" width="0.1634%" height="15" fill="rgb(250,228,42)"/><text x="0.9036%" y="879.50"></text></g><g><title>core::fmt::write (1 samples, 0.16%)</title><rect x="0.6536%" y="853" width="0.1634%" height="15" fill="rgb(240,193,28)"/><text x="0.9036%" y="863.50"></text></g><g><title>__libc_send (2 samples, 0.33%)</title><rect x="0.8170%" y="853" width="0.3268%" height="15" fill="rgb(216,20,37)"/><text x="1.0670%" y="863.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.33%)</title><rect x="0.8170%" y="837" width="0.3268%" height="15" fill="rgb(206,188,39)"/><text x="1.0670%" y="847.50"></text></g><g><title>_int_free (2 samples, 0.33%)</title><rect x="1.1438%" y="853" width="0.3268%" height="15" fill="rgb(217,207,13)"/><text x="1.3938%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.16%)</title><rect x="1.4706%" y="853" width="0.1634%" height="15" fill="rgb(231,73,38)"/><text x="1.7206%" y="863.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.16%)</title><rect x="1.6340%" y="853" width="0.1634%" height="15" fill="rgb(225,20,46)"/><text x="1.8840%" y="863.50"></text></g><g><title>decor::answer_rows (1 samples, 0.16%)</title><rect x="1.7974%" y="853" width="0.1634%" height="15" fill="rgb(210,31,41)"/><text x="2.0474%" y="863.50"></text></g><g><title>msql_srv::packet::PacketReader&lt;R&gt;::next (1 samples, 0.16%)</title><rect x="1.9608%" y="853" width="0.1634%" height="15" fill="rgb(221,200,47)"/><text x="2.2108%" y="863.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.16%)</title><rect x="2.1242%" y="853" width="0.1634%" height="15" fill="rgb(226,26,5)"/><text x="2.3742%" y="863.50"></text></g><g><title>[anon] (10 samples, 1.63%)</title><rect x="0.8170%" y="869" width="1.6340%" height="15" fill="rgb(249,33,26)"/><text x="1.0670%" y="879.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (1 samples, 0.16%)</title><rect x="2.2876%" y="853" width="0.1634%" height="15" fill="rgb(235,183,28)"/><text x="2.5376%" y="863.50"></text></g><g><title>[lobsters] (1 samples, 0.16%)</title><rect x="2.4510%" y="869" width="0.1634%" height="15" fill="rgb(221,5,38)"/><text x="2.7010%" y="879.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.16%)</title><rect x="2.4510%" y="853" width="0.1634%" height="15" fill="rgb(247,18,42)"/><text x="2.7010%" y="863.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (1 samples, 0.16%)</title><rect x="2.6144%" y="853" width="0.1634%" height="15" fill="rgb(241,131,45)"/><text x="2.8644%" y="863.50"></text></g><g><title>&lt;mysql::conn::query_result::SetIteratorState as core::convert::From&lt;mysql::conn::query_result::Or&lt;alloc::vec::Vec&lt;mysql_common::packets::Column&gt;,mysql_common::packets::OkPacket&gt;&gt;&gt;::from (1 samples, 0.16%)</title><rect x="2.7778%" y="853" width="0.1634%" height="15" fill="rgb(249,31,29)"/><text x="3.0278%" y="863.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.49%)</title><rect x="2.9412%" y="853" width="0.4902%" height="15" fill="rgb(225,111,53)"/><text x="3.1912%" y="863.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.16%)</title><rect x="3.4314%" y="853" width="0.1634%" height="15" fill="rgb(238,160,17)"/><text x="3.6814%" y="863.50"></text></g><g><title>__libc_recv (2 samples, 0.33%)</title><rect x="3.5948%" y="853" width="0.3268%" height="15" fill="rgb(214,148,48)"/><text x="3.8448%" y="863.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.16%)</title><rect x="3.9216%" y="693" width="0.1634%" height="15" fill="rgb(232,36,49)"/><text x="4.1716%" y="703.50"></text></g><g><title>hwloc_topology_destroy (1 samples, 0.16%)</title><rect x="3.9216%" y="677" width="0.1634%" height="15" fill="rgb(209,103,24)"/><text x="4.1716%" y="687.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.16%)</title><rect x="3.9216%" y="661" width="0.1634%" height="15" fill="rgb(229,88,8)"/><text x="4.1716%" y="671.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.16%)</title><rect x="3.9216%" y="645" width="0.1634%" height="15" fill="rgb(213,181,19)"/><text x="4.1716%" y="655.50"></text></g><g><title>dlclose (1 samples, 0.16%)</title><rect x="3.9216%" y="629" width="0.1634%" height="15" fill="rgb(254,191,54)"/><text x="4.1716%" y="639.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.16%)</title><rect x="3.9216%" y="613" width="0.1634%" height="15" fill="rgb(241,83,37)"/><text x="4.1716%" y="623.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.16%)</title><rect x="3.9216%" y="597" width="0.1634%" height="15" fill="rgb(233,36,39)"/><text x="4.1716%" y="607.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.16%)</title><rect x="3.9216%" y="581" width="0.1634%" height="15" fill="rgb(226,3,54)"/><text x="4.1716%" y="591.50"></text></g><g><title>_dl_close (1 samples, 0.16%)</title><rect x="3.9216%" y="565" width="0.1634%" height="15" fill="rgb(245,192,40)"/><text x="4.1716%" y="575.50"></text></g><g><title>_dl_close_worker (1 samples, 0.16%)</title><rect x="3.9216%" y="549" width="0.1634%" height="15" fill="rgb(238,167,29)"/><text x="4.1716%" y="559.50"></text></g><g><title>_dl_unmap (1 samples, 0.16%)</title><rect x="3.9216%" y="533" width="0.1634%" height="15" fill="rgb(232,182,51)"/><text x="4.1716%" y="543.50"></text></g><g><title>munmap (1 samples, 0.16%)</title><rect x="3.9216%" y="517" width="0.1634%" height="15" fill="rgb(231,60,39)"/><text x="4.1716%" y="527.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.16%)</title><rect x="3.9216%" y="501" width="0.1634%" height="15" fill="rgb(208,69,12)"/><text x="4.1716%" y="511.50"></text></g><g><title>do_syscall_64 (1 samples, 0.16%)</title><rect x="3.9216%" y="485" width="0.1634%" height="15" fill="rgb(235,93,37)"/><text x="4.1716%" y="495.50"></text></g><g><title>__x64_sys_munmap (1 samples, 0.16%)</title><rect x="3.9216%" y="469" width="0.1634%" height="15" fill="rgb(213,116,39)"/><text x="4.1716%" y="479.50"></text></g><g><title>__vm_munmap (1 samples, 0.16%)</title><rect x="3.9216%" y="453" width="0.1634%" height="15" fill="rgb(222,207,29)"/><text x="4.1716%" y="463.50"></text></g><g><title>__do_munmap (1 samples, 0.16%)</title><rect x="3.9216%" y="437" width="0.1634%" height="15" fill="rgb(206,96,30)"/><text x="4.1716%" y="447.50"></text></g><g><title>unmap_region (1 samples, 0.16%)</title><rect x="3.9216%" y="421" width="0.1634%" height="15" fill="rgb(218,138,4)"/><text x="4.1716%" y="431.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.16%)</title><rect x="3.9216%" y="405" width="0.1634%" height="15" fill="rgb(250,191,14)"/><text x="4.1716%" y="415.50"></text></g><g><title>release_pages (1 samples, 0.16%)</title><rect x="3.9216%" y="389" width="0.1634%" height="15" fill="rgb(239,60,40)"/><text x="4.1716%" y="399.50"></text></g><g><title>mem_cgroup_uncharge_list (1 samples, 0.16%)</title><rect x="3.9216%" y="373" width="0.1634%" height="15" fill="rgb(206,27,48)"/><text x="4.1716%" y="383.50"></text></g><g><title>uncharge_batch (1 samples, 0.16%)</title><rect x="3.9216%" y="357" width="0.1634%" height="15" fill="rgb(225,35,8)"/><text x="4.1716%" y="367.50"></text></g><g><title>__count_memcg_events.part.0 (1 samples, 0.16%)</title><rect x="3.9216%" y="341" width="0.1634%" height="15" fill="rgb(250,213,24)"/><text x="4.1716%" y="351.50"></text></g><g><title>hwloc::Topology::new (1 samples, 0.16%)</title><rect x="4.0850%" y="693" width="0.1634%" height="15" fill="rgb(247,123,22)"/><text x="4.3350%" y="703.50"></text></g><g><title>hwloc_topology_load (1 samples, 0.16%)</title><rect x="4.0850%" y="677" width="0.1634%" height="15" fill="rgb(231,138,38)"/><text x="4.3350%" y="687.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.16%)</title><rect x="4.0850%" y="661" width="0.1634%" height="15" fill="rgb(231,145,46)"/><text x="4.3350%" y="671.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.16%)</title><rect x="4.0850%" y="645" width="0.1634%" height="15" fill="rgb(251,118,11)"/><text x="4.3350%" y="655.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.16%)</title><rect x="4.0850%" y="629" width="0.1634%" height="15" fill="rgb(217,147,25)"/><text x="4.3350%" y="639.50"></text></g><g><title>__libc_read (1 samples, 0.16%)</title><rect x="4.0850%" y="613" width="0.1634%" height="15" fill="rgb(247,81,37)"/><text x="4.3350%" y="623.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.16%)</title><rect x="4.0850%" y="597" width="0.1634%" height="15" fill="rgb(209,12,38)"/><text x="4.3350%" y="607.50"></text></g><g><title>do_syscall_64 (1 samples, 0.16%)</title><rect x="4.0850%" y="581" width="0.1634%" height="15" fill="rgb(227,1,9)"/><text x="4.3350%" y="591.50"></text></g><g><title>syscall_slow_exit_work (1 samples, 0.16%)</title><rect x="4.0850%" y="565" width="0.1634%" height="15" fill="rgb(248,47,43)"/><text x="4.3350%" y="575.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.16%)</title><rect x="4.0850%" y="549" width="0.1634%" height="15" fill="rgb(221,10,30)"/><text x="4.3350%" y="559.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.16%)</title><rect x="4.2484%" y="485" width="0.1634%" height="15" fill="rgb(210,229,1)"/><text x="4.4984%" y="495.50"></text></g><g><title>preempt_count_sub (1 samples, 0.16%)</title><rect x="4.2484%" y="469" width="0.1634%" height="15" fill="rgb(222,148,37)"/><text x="4.4984%" y="479.50"></text></g><g><title>__sk_dst_check (1 samples, 0.16%)</title><rect x="5.2288%" y="405" width="0.1634%" height="15" fill="rgb(234,67,33)"/><text x="5.4788%" y="415.50"></text></g><g><title>ipv4_dst_check (1 samples, 0.16%)</title><rect x="5.2288%" y="389" width="0.1634%" height="15" fill="rgb(247,98,35)"/><text x="5.4788%" y="399.50"></text></g><g><title>__ip_finish_output (1 samples, 0.16%)</title><rect x="5.5556%" y="389" width="0.1634%" height="15" fill="rgb(247,138,52)"/><text x="5.8056%" y="399.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.16%)</title><rect x="6.2092%" y="357" width="0.1634%" height="15" fill="rgb(213,79,30)"/><text x="6.4592%" y="367.50"></text></g><g><title>preempt_count_sub (1 samples, 0.16%)</title><rect x="6.2092%" y="341" width="0.1634%" height="15" fill="rgb(246,177,23)"/><text x="6.4592%" y="351.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.16%)</title><rect x="7.0261%" y="293" width="0.1634%" height="15" fill="rgb(230,62,27)"/><text x="7.2761%" y="303.50"></text></g><g><title>enqueue_to_backlog (2 samples, 0.33%)</title><rect x="7.1895%" y="293" width="0.3268%" height="15" fill="rgb(216,154,8)"/><text x="7.4395%" y="303.50"></text></g><g><title>__raise_softirq_irqoff (1 samples, 0.16%)</title><rect x="7.3529%" y="277" width="0.1634%" height="15" fill="rgb(244,35,45)"/><text x="7.6029%" y="287.50"></text></g><g><title>netif_rx (6 samples, 0.98%)</title><rect x="6.6993%" y="325" width="0.9804%" height="15" fill="rgb(251,115,12)"/><text x="6.9493%" y="335.50"></text></g><g><title>netif_rx_internal (6 samples, 0.98%)</title><rect x="6.6993%" y="309" width="0.9804%" height="15" fill="rgb(240,54,50)"/><text x="6.9493%" y="319.50"></text></g><g><title>ktime_get_with_offset (1 samples, 0.16%)</title><rect x="7.5163%" y="293" width="0.1634%" height="15" fill="rgb(233,84,52)"/><text x="7.7663%" y="303.50"></text></g><g><title>skb_clone_tx_timestamp (1 samples, 0.16%)</title><rect x="7.6797%" y="325" width="0.1634%" height="15" fill="rgb(207,117,47)"/><text x="7.9297%" y="335.50"></text></g><g><title>dev_hard_start_xmit (10 samples, 1.63%)</title><rect x="6.3725%" y="357" width="1.6340%" height="15" fill="rgb(249,43,39)"/><text x="6.6225%" y="367.50"></text></g><g><title>loopback_xmit (8 samples, 1.31%)</title><rect x="6.6993%" y="341" width="1.3072%" height="15" fill="rgb(209,38,44)"/><text x="6.9493%" y="351.50"></text></g><g><title>tcp_wfree (1 samples, 0.16%)</title><rect x="7.8431%" y="325" width="0.1634%" height="15" fill="rgb(236,212,23)"/><text x="8.0931%" y="335.50"></text></g><g><title>__dev_queue_xmit (14 samples, 2.29%)</title><rect x="6.2092%" y="373" width="2.2876%" height="15" fill="rgb(242,79,21)"/><text x="6.4592%" y="383.50">_..</text></g><g><title>validate_xmit_skb (3 samples, 0.49%)</title><rect x="8.0065%" y="357" width="0.4902%" height="15" fill="rgb(211,96,35)"/><text x="8.2565%" y="367.50"></text></g><g><title>netif_skb_features (1 samples, 0.16%)</title><rect x="8.3333%" y="341" width="0.1634%" height="15" fill="rgb(253,215,40)"/><text x="8.5833%" y="351.50"></text></g><g><title>skb_network_protocol (1 samples, 0.16%)</title><rect x="8.3333%" y="325" width="0.1634%" height="15" fill="rgb(211,81,21)"/><text x="8.5833%" y="335.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.16%)</title><rect x="8.4967%" y="341" width="0.1634%" height="15" fill="rgb(208,190,38)"/><text x="8.7467%" y="351.50"></text></g><g><title>irqtime_account_irq (1 samples, 0.16%)</title><rect x="8.6601%" y="309" width="0.1634%" height="15" fill="rgb(235,213,38)"/><text x="8.9101%" y="319.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.16%)</title><rect x="8.6601%" y="293" width="0.1634%" height="15" fill="rgb(237,122,38)"/><text x="8.9101%" y="303.50"></text></g><g><title>sched_clock (1 samples, 0.16%)</title><rect x="8.6601%" y="277" width="0.1634%" height="15" fill="rgb(244,218,35)"/><text x="8.9101%" y="287.50"></text></g><g><title>native_sched_clock (1 samples, 0.16%)</title><rect x="8.6601%" y="261" width="0.1634%" height="15" fill="rgb(240,68,47)"/><text x="8.9101%" y="271.50"></text></g><g><title>__inet_lookup_established (3 samples, 0.49%)</title><rect x="9.6405%" y="181" width="0.4902%" height="15" fill="rgb(210,16,53)"/><text x="9.8905%" y="191.50"></text></g><g><title>inet_ehashfn (2 samples, 0.33%)</title><rect x="9.8039%" y="165" width="0.3268%" height="15" fill="rgb(235,124,12)"/><text x="10.0539%" y="175.50"></text></g><g><title>sk_reset_timer (1 samples, 0.16%)</title><rect x="10.2941%" y="149" width="0.1634%" height="15" fill="rgb(224,169,11)"/><text x="10.5441%" y="159.50"></text></g><g><title>__mod_timer (1 samples, 0.16%)</title><rect x="10.2941%" y="133" width="0.1634%" height="15" fill="rgb(250,166,2)"/><text x="10.5441%" y="143.50"></text></g><g><title>default_wake_function (1 samples, 0.16%)</title><rect x="10.4575%" y="101" width="0.1634%" height="15" fill="rgb(242,216,29)"/><text x="10.7075%" y="111.50"></text></g><g><title>_raw_spin_lock (3 samples, 0.49%)</title><rect x="10.9477%" y="85" width="0.4902%" height="15" fill="rgb(230,116,27)"/><text x="11.1977%" y="95.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.16%)</title><rect x="11.4379%" y="85" width="0.1634%" height="15" fill="rgb(228,99,48)"/><text x="11.6879%" y="95.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.16%)</title><rect x="11.6013%" y="85" width="0.1634%" height="15" fill="rgb(253,11,6)"/><text x="11.8513%" y="95.50"></text></g><g><title>preempt_count_sub (1 samples, 0.16%)</title><rect x="11.6013%" y="69" width="0.1634%" height="15" fill="rgb(247,143,39)"/><text x="11.8513%" y="79.50"></text></g><g><title>psi_task_change (6 samples, 0.98%)</title><rect x="11.7647%" y="69" width="0.9804%" height="15" fill="rgb(236,97,10)"/><text x="12.0147%" y="79.50"></text></g><g><title>psi_group_change (4 samples, 0.65%)</title><rect x="12.0915%" y="53" width="0.6536%" height="15" fill="rgb(233,208,19)"/><text x="12.3415%" y="63.50"></text></g><g><title>enqueue_task (8 samples, 1.31%)</title><rect x="11.7647%" y="85" width="1.3072%" height="15" fill="rgb(216,164,2)"/><text x="12.0147%" y="95.50"></text></g><g><title>uclamp_rq_inc_id (2 samples, 0.33%)</title><rect x="12.7451%" y="69" width="0.3268%" height="15" fill="rgb(220,129,5)"/><text x="12.9951%" y="79.50"></text></g><g><title>__wake_up_common (19 samples, 3.10%)</title><rect x="10.4575%" y="117" width="3.1046%" height="15" fill="rgb(242,17,10)"/><text x="10.7075%" y="127.50">__w..</text></g><g><title>try_to_wake_up (18 samples, 2.94%)</title><rect x="10.6209%" y="101" width="2.9412%" height="15" fill="rgb(242,107,0)"/><text x="10.8709%" y="111.50">tr..</text></g><g><title>enqueue_task_fair (3 samples, 0.49%)</title><rect x="13.0719%" y="85" width="0.4902%" height="15" fill="rgb(251,28,31)"/><text x="13.3219%" y="95.50"></text></g><g><title>enqueue_entity (3 samples, 0.49%)</title><rect x="13.0719%" y="69" width="0.4902%" height="15" fill="rgb(233,223,10)"/><text x="13.3219%" y="79.50"></text></g><g><title>update_load_avg (1 samples, 0.16%)</title><rect x="13.3987%" y="53" width="0.1634%" height="15" fill="rgb(215,21,27)"/><text x="13.6487%" y="63.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.16%)</title><rect x="13.3987%" y="37" width="0.1634%" height="15" fill="rgb(232,23,21)"/><text x="13.6487%" y="47.50"></text></g><g><title>_raw_spin_lock_irqsave (2 samples, 0.33%)</title><rect x="13.5621%" y="117" width="0.3268%" height="15" fill="rgb(244,5,23)"/><text x="13.8121%" y="127.50"></text></g><g><title>preempt_count_add (1 samples, 0.16%)</title><rect x="13.7255%" y="101" width="0.1634%" height="15" fill="rgb(226,81,46)"/><text x="13.9755%" y="111.50"></text></g><g><title>sock_def_readable (22 samples, 3.59%)</title><rect x="10.4575%" y="149" width="3.5948%" height="15" fill="rgb(247,70,30)"/><text x="10.7075%" y="159.50">sock..</text></g><g><title>__wake_up_common_lock (22 samples, 3.59%)</title><rect x="10.4575%" y="133" width="3.5948%" height="15" fill="rgb(212,68,19)"/><text x="10.7075%" y="143.50">__wa..</text></g><g><title>_raw_spin_unlock_irqrestore (1 samples, 0.16%)</title><rect x="13.8889%" y="117" width="0.1634%" height="15" fill="rgb(240,187,13)"/><text x="14.1389%" y="127.50"></text></g><g><title>preempt_count_sub (1 samples, 0.16%)</title><rect x="13.8889%" y="101" width="0.1634%" height="15" fill="rgb(223,113,26)"/><text x="14.1389%" y="111.50"></text></g><g><title>__kfree_skb (2 samples, 0.33%)</title><rect x="14.0523%" y="133" width="0.3268%" height="15" fill="rgb(206,192,2)"/><text x="14.3023%" y="143.50"></text></g><g><title>skb_release_data (2 samples, 0.33%)</title><rect x="14.0523%" y="117" width="0.3268%" height="15" fill="rgb(241,108,4)"/><text x="14.3023%" y="127.50"></text></g><g><title>tcp_ack_update_rtt (1 samples, 0.16%)</title><rect x="14.3791%" y="133" width="0.1634%" height="15" fill="rgb(247,173,49)"/><text x="14.6291%" y="143.50"></text></g><g><title>__usecs_to_jiffies (1 samples, 0.16%)</title><rect x="14.3791%" y="117" width="0.1634%" height="15" fill="rgb(224,114,35)"/><text x="14.6291%" y="127.50"></text></g><g><title>tcp_newly_delivered (1 samples, 0.16%)</title><rect x="14.5425%" y="133" width="0.1634%" height="15" fill="rgb(245,159,27)"/><text x="14.7925%" y="143.50"></text></g><g><title>tcp_ack (5 samples, 0.82%)</title><rect x="14.0523%" y="149" width="0.8170%" height="15" fill="rgb(245,172,44)"/><text x="14.3023%" y="159.50"></text></g><g><title>tcp_rearm_rto (1 samples, 0.16%)</title><rect x="14.7059%" y="133" width="0.1634%" height="15" fill="rgb(236,23,11)"/><text x="14.9559%" y="143.50"></text></g><g><title>tcp_check_space (1 samples, 0.16%)</title><rect x="14.8693%" y="149" width="0.1634%" height="15" fill="rgb(205,117,38)"/><text x="15.1193%" y="159.50"></text></g><g><title>tcp_v4_do_rcv (31 samples, 5.07%)</title><rect x="10.1307%" y="181" width="5.0654%" height="15" fill="rgb(237,72,25)"/><text x="10.3807%" y="191.50">tcp_v4..</text></g><g><title>tcp_rcv_established (30 samples, 4.90%)</title><rect x="10.2941%" y="165" width="4.9020%" height="15" fill="rgb(244,70,9)"/><text x="10.5441%" y="175.50">tcp_rc..</text></g><g><title>tcp_event_data_recv (1 samples, 0.16%)</title><rect x="15.0327%" y="149" width="0.1634%" height="15" fill="rgb(217,125,39)"/><text x="15.2827%" y="159.50"></text></g><g><title>tcp_v4_fill_cb (1 samples, 0.16%)</title><rect x="15.1961%" y="181" width="0.1634%" height="15" fill="rgb(235,36,10)"/><text x="15.4461%" y="191.50"></text></g><g><title>ip_local_deliver (41 samples, 6.70%)</title><rect x="8.8235%" y="245" width="6.6993%" height="15" fill="rgb(251,123,47)"/><text x="9.0735%" y="255.50">ip_local_..</text></g><g><title>ip_local_deliver_finish (41 samples, 6.70%)</title><rect x="8.8235%" y="229" width="6.6993%" height="15" fill="rgb(221,13,13)"/><text x="9.0735%" y="239.50">ip_local_..</text></g><g><title>ip_protocol_deliver_rcu (40 samples, 6.54%)</title><rect x="8.9869%" y="213" width="6.5359%" height="15" fill="rgb(238,131,9)"/><text x="9.2369%" y="223.50">ip_protoc..</text></g><g><title>tcp_v4_rcv (40 samples, 6.54%)</title><rect x="8.9869%" y="197" width="6.5359%" height="15" fill="rgb(211,50,8)"/><text x="9.2369%" y="207.50">tcp_v4_rcv</text></g><g><title>tcp_v4_inbound_md5_hash (1 samples, 0.16%)</title><rect x="15.3595%" y="181" width="0.1634%" height="15" fill="rgb(245,182,24)"/><text x="15.6095%" y="191.50"></text></g><g><title>__netif_receive_skb_one_core (42 samples, 6.86%)</title><rect x="8.8235%" y="277" width="6.8627%" height="15" fill="rgb(242,14,37)"/><text x="9.0735%" y="287.50">__netif_r..</text></g><g><title>ip_rcv (42 samples, 6.86%)</title><rect x="8.8235%" y="261" width="6.8627%" height="15" fill="rgb(246,228,12)"/><text x="9.0735%" y="271.50">ip_rcv</text></g><g><title>ip_rcv_finish (1 samples, 0.16%)</title><rect x="15.5229%" y="245" width="0.1634%" height="15" fill="rgb(213,55,15)"/><text x="15.7729%" y="255.50"></text></g><g><title>ip_rcv_finish_core.constprop.0 (1 samples, 0.16%)</title><rect x="15.5229%" y="229" width="0.1634%" height="15" fill="rgb(209,9,3)"/><text x="15.7729%" y="239.50"></text></g><g><title>__ip_queue_xmit (66 samples, 10.78%)</title><rect x="5.0654%" y="421" width="10.7843%" height="15" fill="rgb(230,59,30)"/><text x="5.3154%" y="431.50">__ip_queue_xmit</text></g><g><title>ip_output (64 samples, 10.46%)</title><rect x="5.3922%" y="405" width="10.4575%" height="15" fill="rgb(209,121,21)"/><text x="5.6422%" y="415.50">ip_output</text></g><g><title>ip_finish_output2 (62 samples, 10.13%)</title><rect x="5.7190%" y="389" width="10.1307%" height="15" fill="rgb(220,109,13)"/><text x="5.9690%" y="399.50">ip_finish_outpu..</text></g><g><title>__local_bh_enable_ip (45 samples, 7.35%)</title><rect x="8.4967%" y="373" width="7.3529%" height="15" fill="rgb(232,18,1)"/><text x="8.7467%" y="383.50">__local_bh..</text></g><g><title>do_softirq (45 samples, 7.35%)</title><rect x="8.4967%" y="357" width="7.3529%" height="15" fill="rgb(215,41,42)"/><text x="8.7467%" y="367.50">do_softirq</text></g><g><title>do_softirq_own_stack (44 samples, 7.19%)</title><rect x="8.6601%" y="341" width="7.1895%" height="15" fill="rgb(224,123,36)"/><text x="8.9101%" y="351.50">do_softirq..</text></g><g><title>__do_softirq (44 samples, 7.19%)</title><rect x="8.6601%" y="325" width="7.1895%" height="15" fill="rgb(240,125,3)"/><text x="8.9101%" y="335.50">__do_softi..</text></g><g><title>net_rx_action (43 samples, 7.03%)</title><rect x="8.8235%" y="309" width="7.0261%" height="15" fill="rgb(205,98,50)"/><text x="9.0735%" y="319.50">net_rx_ac..</text></g><g><title>process_backlog (43 samples, 7.03%)</title><rect x="8.8235%" y="293" width="7.0261%" height="15" fill="rgb(205,185,37)"/><text x="9.0735%" y="303.50">process_b..</text></g><g><title>__rcu_read_unlock (1 samples, 0.16%)</title><rect x="15.6863%" y="277" width="0.1634%" height="15" fill="rgb(238,207,15)"/><text x="15.9363%" y="287.50"></text></g><g><title>__tcp_transmit_skb (68 samples, 11.11%)</title><rect x="4.9020%" y="437" width="11.1111%" height="15" fill="rgb(213,199,42)"/><text x="5.1520%" y="447.50">__tcp_transmit_s..</text></g><g><title>tcp_update_skb_after_send (1 samples, 0.16%)</title><rect x="15.8497%" y="421" width="0.1634%" height="15" fill="rgb(235,201,11)"/><text x="16.0997%" y="431.50"></text></g><g><title>__tcp_push_pending_frames (70 samples, 11.44%)</title><rect x="4.7386%" y="469" width="11.4379%" height="15" fill="rgb(207,46,11)"/><text x="4.9886%" y="479.50">__tcp_push_pendin..</text></g><g><title>tcp_write_xmit (69 samples, 11.27%)</title><rect x="4.9020%" y="453" width="11.2745%" height="15" fill="rgb(241,35,35)"/><text x="5.1520%" y="463.50">tcp_write_xmit</text></g><g><title>ktime_get (1 samples, 0.16%)</title><rect x="16.0131%" y="437" width="0.1634%" height="15" fill="rgb(243,32,47)"/><text x="16.2631%" y="447.50"></text></g><g><title>__x86_indirect_thunk_rax (1 samples, 0.16%)</title><rect x="16.0131%" y="421" width="0.1634%" height="15" fill="rgb(247,202,23)"/><text x="16.2631%" y="431.50"></text></g><g><title>__kmalloc_node_track_caller (3 samples, 0.49%)</title><rect x="16.3399%" y="437" width="0.4902%" height="15" fill="rgb(219,102,11)"/><text x="16.5899%" y="447.50"></text></g><g><title>kmalloc_slab (1 samples, 0.16%)</title><rect x="16.6667%" y="421" width="0.1634%" height="15" fill="rgb(243,110,44)"/><text x="16.9167%" y="431.50"></text></g><g><title>__ksize (1 samples, 0.16%)</title><rect x="16.8301%" y="437" width="0.1634%" height="15" fill="rgb(222,74,54)"/><text x="17.0801%" y="447.50"></text></g><g><title>sk_stream_alloc_skb (6 samples, 0.98%)</title><rect x="16.1765%" y="469" width="0.9804%" height="15" fill="rgb(216,99,12)"/><text x="16.4265%" y="479.50"></text></g><g><title>__alloc_skb (6 samples, 0.98%)</title><rect x="16.1765%" y="453" width="0.9804%" height="15" fill="rgb(226,22,26)"/><text x="16.4265%" y="463.50"></text></g><g><title>kmem_cache_alloc_node (1 samples, 0.16%)</title><rect x="16.9935%" y="437" width="0.1634%" height="15" fill="rgb(217,163,10)"/><text x="17.2435%" y="447.50"></text></g><g><title>__check_object_size (1 samples, 0.16%)</title><rect x="17.1569%" y="453" width="0.1634%" height="15" fill="rgb(213,25,53)"/><text x="17.4069%" y="463.50"></text></g><g><title>skb_do_copy_data_nocache (2 samples, 0.33%)</title><rect x="17.1569%" y="469" width="0.3268%" height="15" fill="rgb(252,105,26)"/><text x="17.4069%" y="479.50"></text></g><g><title>_copy_from_iter_full (1 samples, 0.16%)</title><rect x="17.3203%" y="453" width="0.1634%" height="15" fill="rgb(220,39,43)"/><text x="17.5703%" y="463.50"></text></g><g><title>copy_user_enhanced_fast_string (1 samples, 0.16%)</title><rect x="17.3203%" y="437" width="0.1634%" height="15" fill="rgb(229,68,48)"/><text x="17.5703%" y="447.50"></text></g><g><title>skb_entail (2 samples, 0.33%)</title><rect x="17.4837%" y="469" width="0.3268%" height="15" fill="rgb(252,8,32)"/><text x="17.7337%" y="479.50"></text></g><g><title>tcp_chrono_start (1 samples, 0.16%)</title><rect x="17.6471%" y="453" width="0.1634%" height="15" fill="rgb(223,20,43)"/><text x="17.8971%" y="463.50"></text></g><g><title>__x64_sys_sendto (84 samples, 13.73%)</title><rect x="4.2484%" y="549" width="13.7255%" height="15" fill="rgb(229,81,49)"/><text x="4.4984%" y="559.50">__x64_sys_sendto</text></g><g><title>__sys_sendto (84 samples, 13.73%)</title><rect x="4.2484%" y="533" width="13.7255%" height="15" fill="rgb(236,28,36)"/><text x="4.4984%" y="543.50">__sys_sendto</text></g><g><title>sock_sendmsg (84 samples, 13.73%)</title><rect x="4.2484%" y="517" width="13.7255%" height="15" fill="rgb(249,185,26)"/><text x="4.4984%" y="527.50">sock_sendmsg</text></g><g><title>tcp_sendmsg (84 samples, 13.73%)</title><rect x="4.2484%" y="501" width="13.7255%" height="15" fill="rgb(249,174,33)"/><text x="4.4984%" y="511.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (83 samples, 13.56%)</title><rect x="4.4118%" y="485" width="13.5621%" height="15" fill="rgb(233,201,37)"/><text x="4.6618%" y="495.50">tcp_sendmsg_locked</text></g><g><title>tcp_send_mss (1 samples, 0.16%)</title><rect x="17.8105%" y="469" width="0.1634%" height="15" fill="rgb(221,78,26)"/><text x="18.0605%" y="479.50"></text></g><g><title>tcp_current_mss (1 samples, 0.16%)</title><rect x="17.8105%" y="453" width="0.1634%" height="15" fill="rgb(250,127,30)"/><text x="18.0605%" y="463.50"></text></g><g><title>ipv4_mtu (1 samples, 0.16%)</title><rect x="17.8105%" y="437" width="0.1634%" height="15" fill="rgb(230,49,44)"/><text x="18.0605%" y="447.50"></text></g><g><title>do_syscall_64 (85 samples, 13.89%)</title><rect x="4.2484%" y="565" width="13.8889%" height="15" fill="rgb(229,67,23)"/><text x="4.4984%" y="575.50">do_syscall_64</text></g><g><title>syscall_trace_enter (1 samples, 0.16%)</title><rect x="17.9739%" y="549" width="0.1634%" height="15" fill="rgb(249,83,47)"/><text x="18.2239%" y="559.50"></text></g><g><title>ktime_get_coarse_real_ts64 (1 samples, 0.16%)</title><rect x="17.9739%" y="533" width="0.1634%" height="15" fill="rgb(215,43,3)"/><text x="18.2239%" y="543.50"></text></g><g><title>__libc_start_main (91 samples, 14.87%)</title><rect x="3.9216%" y="853" width="14.8693%" height="15" fill="rgb(238,154,13)"/><text x="4.1716%" y="863.50">__libc_start_main</text></g><g><title>main (91 samples, 14.87%)</title><rect x="3.9216%" y="837" width="14.8693%" height="15" fill="rgb(219,56,2)"/><text x="4.1716%" y="847.50">main</text></g><g><title>std::rt::lang_start_internal (91 samples, 14.87%)</title><rect x="3.9216%" y="821" width="14.8693%" height="15" fill="rgb(233,0,4)"/><text x="4.1716%" y="831.50">std::rt::lang_start_int..</text></g><g><title>std::panic::catch_unwind (91 samples, 14.87%)</title><rect x="3.9216%" y="805" width="14.8693%" height="15" fill="rgb(235,30,7)"/><text x="4.1716%" y="815.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (91 samples, 14.87%)</title><rect x="3.9216%" y="789" width="14.8693%" height="15" fill="rgb(250,79,13)"/><text x="4.1716%" y="799.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (91 samples, 14.87%)</title><rect x="3.9216%" y="773" width="14.8693%" height="15" fill="rgb(211,146,34)"/><text x="4.1716%" y="783.50">std::panicking::try::do..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (91 samples, 14.87%)</title><rect x="3.9216%" y="757" width="14.8693%" height="15" fill="rgb(228,22,38)"/><text x="4.1716%" y="767.50">core::ops::function::im..</text></g><g><title>std::rt::lang_start::_{{closure}} (91 samples, 14.87%)</title><rect x="3.9216%" y="741" width="14.8693%" height="15" fill="rgb(235,168,5)"/><text x="4.1716%" y="751.50">std::rt::lang_start::_{..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (91 samples, 14.87%)</title><rect x="3.9216%" y="725" width="14.8693%" height="15" fill="rgb(221,155,16)"/><text x="4.1716%" y="735.50">std::sys_common::backtr..</text></g><g><title>lobsters::main (91 samples, 14.87%)</title><rect x="3.9216%" y="709" width="14.8693%" height="15" fill="rgb(215,215,53)"/><text x="4.1716%" y="719.50">lobsters::main</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (89 samples, 14.54%)</title><rect x="4.2484%" y="693" width="14.5425%" height="15" fill="rgb(223,4,10)"/><text x="4.4984%" y="703.50">mysql::conn::queryable..</text></g><g><title>mysql::conn::Conn::_query (89 samples, 14.54%)</title><rect x="4.2484%" y="677" width="14.5425%" height="15" fill="rgb(234,103,6)"/><text x="4.4984%" y="687.50">mysql::conn::Conn::_qu..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (89 samples, 14.54%)</title><rect x="4.2484%" y="661" width="14.5425%" height="15" fill="rgb(227,97,0)"/><text x="4.4984%" y="671.50">mysql_common::proto::s..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (89 samples, 14.54%)</title><rect x="4.2484%" y="645" width="14.5425%" height="15" fill="rgb(234,150,53)"/><text x="4.4984%" y="655.50">std::io::buffered::Buf..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (89 samples, 14.54%)</title><rect x="4.2484%" y="629" width="14.5425%" height="15" fill="rgb(228,201,54)"/><text x="4.4984%" y="639.50">&lt;std::net::tcp::TcpStr..</text></g><g><title>std::sys_common::net::TcpStream::write (89 samples, 14.54%)</title><rect x="4.2484%" y="613" width="14.5425%" height="15" fill="rgb(222,22,37)"/><text x="4.4984%" y="623.50">std::sys_common::net::..</text></g><g><title>__libc_send (89 samples, 14.54%)</title><rect x="4.2484%" y="597" width="14.5425%" height="15" fill="rgb(237,53,32)"/><text x="4.4984%" y="607.50">__libc_send</text></g><g><title>entry_SYSCALL_64 (89 samples, 14.54%)</title><rect x="4.2484%" y="581" width="14.5425%" height="15" fill="rgb(233,25,53)"/><text x="4.4984%" y="591.50">entry_SYSCALL_64</text></g><g><title>prepare_exit_to_usermode (4 samples, 0.65%)</title><rect x="18.1373%" y="565" width="0.6536%" height="15" fill="rgb(210,40,34)"/><text x="18.3873%" y="575.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.16%)</title><rect x="18.7908%" y="853" width="0.1634%" height="15" fill="rgb(241,220,44)"/><text x="19.0408%" y="863.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.16%)</title><rect x="18.9542%" y="853" width="0.1634%" height="15" fill="rgb(235,28,35)"/><text x="19.2042%" y="863.50"></text></g><g><title>decor::Shim::run_on_tcp (1 samples, 0.16%)</title><rect x="19.1176%" y="853" width="0.1634%" height="15" fill="rgb(210,56,17)"/><text x="19.3676%" y="863.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (1 samples, 0.16%)</title><rect x="19.1176%" y="837" width="0.1634%" height="15" fill="rgb(224,130,29)"/><text x="19.3676%" y="847.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (1 samples, 0.16%)</title><rect x="19.1176%" y="821" width="0.1634%" height="15" fill="rgb(235,212,8)"/><text x="19.3676%" y="831.50"></text></g><g><title>decor::Shim::create_schema (1 samples, 0.16%)</title><rect x="19.1176%" y="805" width="0.1634%" height="15" fill="rgb(223,33,50)"/><text x="19.3676%" y="815.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (1 samples, 0.16%)</title><rect x="19.1176%" y="789" width="0.1634%" height="15" fill="rgb(219,149,13)"/><text x="19.3676%" y="799.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (1 samples, 0.16%)</title><rect x="19.1176%" y="773" width="0.1634%" height="15" fill="rgb(250,156,29)"/><text x="19.3676%" y="783.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.16%)</title><rect x="19.1176%" y="757" width="0.1634%" height="15" fill="rgb(216,193,19)"/><text x="19.3676%" y="767.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.16%)</title><rect x="19.1176%" y="741" width="0.1634%" height="15" fill="rgb(216,135,14)"/><text x="19.3676%" y="751.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.16%)</title><rect x="19.1176%" y="725" width="0.1634%" height="15" fill="rgb(241,47,5)"/><text x="19.3676%" y="735.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.16%)</title><rect x="19.1176%" y="709" width="0.1634%" height="15" fill="rgb(233,42,35)"/><text x="19.3676%" y="719.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1 samples, 0.16%)</title><rect x="19.1176%" y="693" width="0.1634%" height="15" fill="rgb(231,13,6)"/><text x="19.3676%" y="703.50"></text></g><g><title>__libc_send (1 samples, 0.16%)</title><rect x="19.1176%" y="677" width="0.1634%" height="15" fill="rgb(207,181,40)"/><text x="19.3676%" y="687.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.16%)</title><rect x="19.1176%" y="661" width="0.1634%" height="15" fill="rgb(254,173,49)"/><text x="19.3676%" y="671.50"></text></g><g><title>do_syscall_64 (1 samples, 0.16%)</title><rect x="19.1176%" y="645" width="0.1634%" height="15" fill="rgb(221,1,38)"/><text x="19.3676%" y="655.50"></text></g><g><title>__x64_sys_sendto (1 samples, 0.16%)</title><rect x="19.1176%" y="629" width="0.1634%" height="15" fill="rgb(206,124,46)"/><text x="19.3676%" y="639.50"></text></g><g><title>__sys_sendto (1 samples, 0.16%)</title><rect x="19.1176%" y="613" width="0.1634%" height="15" fill="rgb(249,21,11)"/><text x="19.3676%" y="623.50"></text></g><g><title>sock_sendmsg (1 samples, 0.16%)</title><rect x="19.1176%" y="597" width="0.1634%" height="15" fill="rgb(222,201,40)"/><text x="19.3676%" y="607.50"></text></g><g><title>tcp_sendmsg (1 samples, 0.16%)</title><rect x="19.1176%" y="581" width="0.1634%" height="15" fill="rgb(235,61,29)"/><text x="19.3676%" y="591.50"></text></g><g><title>tcp_sendmsg_locked (1 samples, 0.16%)</title><rect x="19.1176%" y="565" width="0.1634%" height="15" fill="rgb(219,207,3)"/><text x="19.3676%" y="575.50"></text></g><g><title>__tcp_push_pending_frames (1 samples, 0.16%)</title><rect x="19.1176%" y="549" width="0.1634%" height="15" fill="rgb(222,56,46)"/><text x="19.3676%" y="559.50"></text></g><g><title>tcp_write_xmit (1 samples, 0.16%)</title><rect x="19.1176%" y="533" width="0.1634%" height="15" fill="rgb(239,76,54)"/><text x="19.3676%" y="543.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.16%)</title><rect x="19.1176%" y="517" width="0.1634%" height="15" fill="rgb(231,124,27)"/><text x="19.3676%" y="527.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.16%)</title><rect x="19.1176%" y="501" width="0.1634%" height="15" fill="rgb(249,195,6)"/><text x="19.3676%" y="511.50"></text></g><g><title>ip_output (1 samples, 0.16%)</title><rect x="19.1176%" y="485" width="0.1634%" height="15" fill="rgb(237,174,47)"/><text x="19.3676%" y="495.50"></text></g><g><title>ip_finish_output2 (1 samples, 0.16%)</title><rect x="19.1176%" y="469" width="0.1634%" height="15" fill="rgb(206,201,31)"/><text x="19.3676%" y="479.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.16%)</title><rect x="19.1176%" y="453" width="0.1634%" height="15" fill="rgb(231,57,52)"/><text x="19.3676%" y="463.50"></text></g><g><title>do_softirq (1 samples, 0.16%)</title><rect x="19.1176%" y="437" width="0.1634%" height="15" fill="rgb(248,177,22)"/><text x="19.3676%" y="447.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.16%)</title><rect x="19.1176%" y="421" width="0.1634%" height="15" fill="rgb(215,211,37)"/><text x="19.3676%" y="431.50"></text></g><g><title>__do_softirq (1 samples, 0.16%)</title><rect x="19.1176%" y="405" width="0.1634%" height="15" fill="rgb(241,128,51)"/><text x="19.3676%" y="415.50"></text></g><g><title>net_rx_action (1 samples, 0.16%)</title><rect x="19.1176%" y="389" width="0.1634%" height="15" fill="rgb(227,165,31)"/><text x="19.3676%" y="399.50"></text></g><g><title>process_backlog (1 samples, 0.16%)</title><rect x="19.1176%" y="373" width="0.1634%" height="15" fill="rgb(228,167,24)"/><text x="19.3676%" y="383.50"></text></g><g><title>__netif_receive_skb_one_core (1 samples, 0.16%)</title><rect x="19.1176%" y="357" width="0.1634%" height="15" fill="rgb(228,143,12)"/><text x="19.3676%" y="367.50"></text></g><g><title>ip_rcv (1 samples, 0.16%)</title><rect x="19.1176%" y="341" width="0.1634%" height="15" fill="rgb(249,149,8)"/><text x="19.3676%" y="351.50"></text></g><g><title>ip_local_deliver (1 samples, 0.16%)</title><rect x="19.1176%" y="325" width="0.1634%" height="15" fill="rgb(243,35,44)"/><text x="19.3676%" y="335.50"></text></g><g><title>ip_local_deliver_finish (1 samples, 0.16%)</title><rect x="19.1176%" y="309" width="0.1634%" height="15" fill="rgb(246,89,9)"/><text x="19.3676%" y="319.50"></text></g><g><title>ip_protocol_deliver_rcu (1 samples, 0.16%)</title><rect x="19.1176%" y="293" width="0.1634%" height="15" fill="rgb(233,213,13)"/><text x="19.3676%" y="303.50"></text></g><g><title>tcp_v4_rcv (1 samples, 0.16%)</title><rect x="19.1176%" y="277" width="0.1634%" height="15" fill="rgb(233,141,41)"/><text x="19.3676%" y="287.50"></text></g><g><title>tcp_v4_do_rcv (1 samples, 0.16%)</title><rect x="19.1176%" y="261" width="0.1634%" height="15" fill="rgb(239,167,4)"/><text x="19.3676%" y="271.50"></text></g><g><title>tcp_rcv_established (1 samples, 0.16%)</title><rect x="19.1176%" y="245" width="0.1634%" height="15" fill="rgb(209,217,16)"/><text x="19.3676%" y="255.50"></text></g><g><title>sock_def_readable (1 samples, 0.16%)</title><rect x="19.1176%" y="229" width="0.1634%" height="15" fill="rgb(219,88,35)"/><text x="19.3676%" y="239.50"></text></g><g><title>__wake_up_common_lock (1 samples, 0.16%)</title><rect x="19.1176%" y="213" width="0.1634%" height="15" fill="rgb(220,193,23)"/><text x="19.3676%" y="223.50"></text></g><g><title>__wake_up_common (1 samples, 0.16%)</title><rect x="19.1176%" y="197" width="0.1634%" height="15" fill="rgb(230,90,52)"/><text x="19.3676%" y="207.50"></text></g><g><title>pollwake (1 samples, 0.16%)</title><rect x="19.1176%" y="181" width="0.1634%" height="15" fill="rgb(252,106,19)"/><text x="19.3676%" y="191.50"></text></g><g><title>try_to_wake_up (1 samples, 0.16%)</title><rect x="19.1176%" y="165" width="0.1634%" height="15" fill="rgb(206,74,20)"/><text x="19.3676%" y="175.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.16%)</title><rect x="19.1176%" y="149" width="0.1634%" height="15" fill="rgb(230,138,44)"/><text x="19.3676%" y="159.50"></text></g><g><title>hwloc::Topology::new (1 samples, 0.16%)</title><rect x="19.2810%" y="837" width="0.1634%" height="15" fill="rgb(235,182,43)"/><text x="19.5310%" y="847.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.16%)</title><rect x="19.2810%" y="821" width="0.1634%" height="15" fill="rgb(242,16,51)"/><text x="19.5310%" y="831.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.16%)</title><rect x="19.2810%" y="805" width="0.1634%" height="15" fill="rgb(248,9,4)"/><text x="19.5310%" y="815.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.16%)</title><rect x="19.2810%" y="789" width="0.1634%" height="15" fill="rgb(210,31,22)"/><text x="19.5310%" y="799.50"></text></g><g><title>dlopen (1 samples, 0.16%)</title><rect x="19.2810%" y="773" width="0.1634%" height="15" fill="rgb(239,54,39)"/><text x="19.5310%" y="783.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.16%)</title><rect x="19.2810%" y="757" width="0.1634%" height="15" fill="rgb(230,99,41)"/><text x="19.5310%" y="767.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.16%)</title><rect x="19.2810%" y="741" width="0.1634%" height="15" fill="rgb(253,106,12)"/><text x="19.5310%" y="751.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.16%)</title><rect x="19.2810%" y="725" width="0.1634%" height="15" fill="rgb(213,46,41)"/><text x="19.5310%" y="735.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.16%)</title><rect x="19.2810%" y="709" width="0.1634%" height="15" fill="rgb(215,133,35)"/><text x="19.5310%" y="719.50"></text></g><g><title>_dl_open (1 samples, 0.16%)</title><rect x="19.2810%" y="693" width="0.1634%" height="15" fill="rgb(213,28,5)"/><text x="19.5310%" y="703.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.16%)</title><rect x="19.2810%" y="677" width="0.1634%" height="15" fill="rgb(215,77,49)"/><text x="19.5310%" y="687.50"></text></g><g><title>dl_open_worker (1 samples, 0.16%)</title><rect x="19.2810%" y="661" width="0.1634%" height="15" fill="rgb(248,100,22)"/><text x="19.5310%" y="671.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.16%)</title><rect x="19.2810%" y="645" width="0.1634%" height="15" fill="rgb(208,67,9)"/><text x="19.5310%" y="655.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.16%)</title><rect x="19.2810%" y="629" width="0.1634%" height="15" fill="rgb(219,133,21)"/><text x="19.5310%" y="639.50"></text></g><g><title>do_lookup_x (1 samples, 0.16%)</title><rect x="19.2810%" y="613" width="0.1634%" height="15" fill="rgb(246,46,29)"/><text x="19.5310%" y="623.50"></text></g><g><title>mysql::conn::Conn::handle_ok (2 samples, 0.33%)</title><rect x="19.4444%" y="789" width="0.3268%" height="15" fill="rgb(246,185,52)"/><text x="19.6944%" y="799.50"></text></g><g><title>skb_release_data (1 samples, 0.16%)</title><rect x="20.4248%" y="549" width="0.1634%" height="15" fill="rgb(252,136,11)"/><text x="20.6748%" y="559.50"></text></g><g><title>dst_release (2 samples, 0.33%)</title><rect x="20.5882%" y="533" width="0.3268%" height="15" fill="rgb(219,138,53)"/><text x="20.8382%" y="543.50"></text></g><g><title>__kfree_skb (4 samples, 0.65%)</title><rect x="20.4248%" y="565" width="0.6536%" height="15" fill="rgb(211,51,23)"/><text x="20.6748%" y="575.50"></text></g><g><title>skb_release_head_state (3 samples, 0.49%)</title><rect x="20.5882%" y="549" width="0.4902%" height="15" fill="rgb(247,221,28)"/><text x="20.8382%" y="559.50"></text></g><g><title>sock_rfree (1 samples, 0.16%)</title><rect x="20.9150%" y="533" width="0.1634%" height="15" fill="rgb(251,222,45)"/><text x="21.1650%" y="543.50"></text></g><g><title>add_wait_queue (3 samples, 0.49%)</title><rect x="21.0784%" y="549" width="0.4902%" height="15" fill="rgb(217,162,53)"/><text x="21.3284%" y="559.50"></text></g><g><title>_raw_spin_lock_irqsave (3 samples, 0.49%)</title><rect x="21.0784%" y="533" width="0.4902%" height="15" fill="rgb(229,93,14)"/><text x="21.3284%" y="543.50"></text></g><g><title>preempt_count_add (2 samples, 0.33%)</title><rect x="21.2418%" y="517" width="0.3268%" height="15" fill="rgb(209,67,49)"/><text x="21.4918%" y="527.50"></text></g><g><title>in_lock_functions (1 samples, 0.16%)</title><rect x="21.4052%" y="501" width="0.1634%" height="15" fill="rgb(213,87,29)"/><text x="21.6552%" y="511.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.16%)</title><rect x="21.7320%" y="469" width="0.1634%" height="15" fill="rgb(205,151,52)"/><text x="21.9820%" y="479.50"></text></g><g><title>__perf_event_task_sched_out (2 samples, 0.33%)</title><rect x="21.7320%" y="485" width="0.3268%" height="15" fill="rgb(253,215,39)"/><text x="21.9820%" y="495.50"></text></g><g><title>ctx_sched_out (1 samples, 0.16%)</title><rect x="21.8954%" y="469" width="0.1634%" height="15" fill="rgb(221,220,41)"/><text x="22.1454%" y="479.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.16%)</title><rect x="21.8954%" y="453" width="0.1634%" height="15" fill="rgb(218,133,21)"/><text x="22.1454%" y="463.50"></text></g><g><title>sched_clock (1 samples, 0.16%)</title><rect x="21.8954%" y="437" width="0.1634%" height="15" fill="rgb(221,193,43)"/><text x="22.1454%" y="447.50"></text></g><g><title>native_sched_clock (1 samples, 0.16%)</title><rect x="21.8954%" y="421" width="0.1634%" height="15" fill="rgb(240,128,52)"/><text x="22.1454%" y="431.50"></text></g><g><title>__cgroup_account_cputime (1 samples, 0.16%)</title><rect x="22.8758%" y="437" width="0.1634%" height="15" fill="rgb(253,114,12)"/><text x="23.1258%" y="447.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.16%)</title><rect x="22.8758%" y="421" width="0.1634%" height="15" fill="rgb(215,223,47)"/><text x="23.1258%" y="431.50"></text></g><g><title>update_curr (2 samples, 0.33%)</title><rect x="22.8758%" y="453" width="0.3268%" height="15" fill="rgb(248,225,23)"/><text x="23.1258%" y="463.50"></text></g><g><title>update_min_vruntime (1 samples, 0.16%)</title><rect x="23.0392%" y="437" width="0.1634%" height="15" fill="rgb(250,108,0)"/><text x="23.2892%" y="447.50"></text></g><g><title>dequeue_task_fair (8 samples, 1.31%)</title><rect x="22.0588%" y="485" width="1.3072%" height="15" fill="rgb(228,208,7)"/><text x="22.3088%" y="495.50"></text></g><g><title>dequeue_entity (6 samples, 0.98%)</title><rect x="22.3856%" y="469" width="0.9804%" height="15" fill="rgb(244,45,10)"/><text x="22.6356%" y="479.50"></text></g><g><title>update_load_avg (1 samples, 0.16%)</title><rect x="23.2026%" y="453" width="0.1634%" height="15" fill="rgb(207,125,25)"/><text x="23.4526%" y="463.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.16%)</title><rect x="23.2026%" y="437" width="0.1634%" height="15" fill="rgb(210,195,18)"/><text x="23.4526%" y="447.50"></text></g><g><title>finish_task_switch (2 samples, 0.33%)</title><rect x="23.3660%" y="485" width="0.3268%" height="15" fill="rgb(249,80,12)"/><text x="23.6160%" y="495.50"></text></g><g><title>pick_next_task_fair (2 samples, 0.33%)</title><rect x="23.6928%" y="485" width="0.3268%" height="15" fill="rgb(221,65,9)"/><text x="23.9428%" y="495.50"></text></g><g><title>psi_task_change (2 samples, 0.33%)</title><rect x="24.0196%" y="485" width="0.3268%" height="15" fill="rgb(235,49,36)"/><text x="24.2696%" y="495.50"></text></g><g><title>psi_group_change (2 samples, 0.33%)</title><rect x="24.0196%" y="469" width="0.3268%" height="15" fill="rgb(225,32,20)"/><text x="24.2696%" y="479.50"></text></g><g><title>record_times (1 samples, 0.16%)</title><rect x="24.1830%" y="453" width="0.1634%" height="15" fill="rgb(215,141,46)"/><text x="24.4330%" y="463.50"></text></g><g><title>sk_wait_data (21 samples, 3.43%)</title><rect x="21.0784%" y="565" width="3.4314%" height="15" fill="rgb(250,160,47)"/><text x="21.3284%" y="575.50">sk_..</text></g><g><title>wait_woken (18 samples, 2.94%)</title><rect x="21.5686%" y="549" width="2.9412%" height="15" fill="rgb(216,222,40)"/><text x="21.8186%" y="559.50">wa..</text></g><g><title>schedule_timeout (17 samples, 2.78%)</title><rect x="21.7320%" y="533" width="2.7778%" height="15" fill="rgb(234,217,39)"/><text x="21.9820%" y="543.50">sc..</text></g><g><title>schedule (17 samples, 2.78%)</title><rect x="21.7320%" y="517" width="2.7778%" height="15" fill="rgb(207,178,40)"/><text x="21.9820%" y="527.50">sc..</text></g><g><title>__schedule (17 samples, 2.78%)</title><rect x="21.7320%" y="501" width="2.7778%" height="15" fill="rgb(221,136,13)"/><text x="21.9820%" y="511.50">__..</text></g><g><title>update_rq_clock (1 samples, 0.16%)</title><rect x="24.3464%" y="485" width="0.1634%" height="15" fill="rgb(249,199,10)"/><text x="24.5964%" y="495.50"></text></g><g><title>skb_copy_datagram_iter (2 samples, 0.33%)</title><rect x="24.5098%" y="565" width="0.3268%" height="15" fill="rgb(249,222,13)"/><text x="24.7598%" y="575.50"></text></g><g><title>__skb_datagram_iter (2 samples, 0.33%)</title><rect x="24.5098%" y="549" width="0.3268%" height="15" fill="rgb(244,185,38)"/><text x="24.7598%" y="559.50"></text></g><g><title>tcp_cleanup_rbuf (2 samples, 0.33%)</title><rect x="24.8366%" y="565" width="0.3268%" height="15" fill="rgb(236,202,9)"/><text x="25.0866%" y="575.50"></text></g><g><title>inet_recvmsg (30 samples, 4.90%)</title><rect x="20.4248%" y="597" width="4.9020%" height="15" fill="rgb(250,229,37)"/><text x="20.6748%" y="607.50">inet_r..</text></g><g><title>tcp_recvmsg (30 samples, 4.90%)</title><rect x="20.4248%" y="581" width="4.9020%" height="15" fill="rgb(206,174,23)"/><text x="20.6748%" y="591.50">tcp_re..</text></g><g><title>tcp_rcv_space_adjust (1 samples, 0.16%)</title><rect x="25.1634%" y="565" width="0.1634%" height="15" fill="rgb(211,33,43)"/><text x="25.4134%" y="575.50"></text></g><g><title>sock_recvmsg (1 samples, 0.16%)</title><rect x="25.3268%" y="597" width="0.1634%" height="15" fill="rgb(245,58,50)"/><text x="25.5768%" y="607.50"></text></g><g><title>security_socket_recvmsg (1 samples, 0.16%)</title><rect x="25.3268%" y="581" width="0.1634%" height="15" fill="rgb(244,68,36)"/><text x="25.5768%" y="591.50"></text></g><g><title>__x64_sys_recvfrom (33 samples, 5.39%)</title><rect x="20.2614%" y="629" width="5.3922%" height="15" fill="rgb(232,229,15)"/><text x="20.5114%" y="639.50">__x64_s..</text></g><g><title>__sys_recvfrom (32 samples, 5.23%)</title><rect x="20.4248%" y="613" width="5.2288%" height="15" fill="rgb(254,30,23)"/><text x="20.6748%" y="623.50">__sys_..</text></g><g><title>sockfd_lookup_light (1 samples, 0.16%)</title><rect x="25.4902%" y="597" width="0.1634%" height="15" fill="rgb(235,160,14)"/><text x="25.7402%" y="607.50"></text></g><g><title>__fget_light (1 samples, 0.16%)</title><rect x="25.4902%" y="581" width="0.1634%" height="15" fill="rgb(212,155,44)"/><text x="25.7402%" y="591.50"></text></g><g><title>__fget_files (1 samples, 0.16%)</title><rect x="25.4902%" y="565" width="0.1634%" height="15" fill="rgb(226,2,50)"/><text x="25.7402%" y="575.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.16%)</title><rect x="25.4902%" y="549" width="0.1634%" height="15" fill="rgb(234,177,6)"/><text x="25.7402%" y="559.50"></text></g><g><title>do_syscall_64 (34 samples, 5.56%)</title><rect x="20.2614%" y="645" width="5.5556%" height="15" fill="rgb(217,24,9)"/><text x="20.5114%" y="655.50">do_sysc..</text></g><g><title>syscall_slow_exit_work (1 samples, 0.16%)</title><rect x="25.6536%" y="629" width="0.1634%" height="15" fill="rgb(220,13,46)"/><text x="25.9036%" y="639.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.16%)</title><rect x="25.6536%" y="613" width="0.1634%" height="15" fill="rgb(239,221,27)"/><text x="25.9036%" y="623.50"></text></g><g><title>entry_SYSCALL_64 (38 samples, 6.21%)</title><rect x="20.0980%" y="661" width="6.2092%" height="15" fill="rgb(222,198,25)"/><text x="20.3480%" y="671.50">entry_SY..</text></g><g><title>prepare_exit_to_usermode (3 samples, 0.49%)</title><rect x="25.8170%" y="645" width="0.4902%" height="15" fill="rgb(211,99,13)"/><text x="26.0670%" y="655.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (40 samples, 6.54%)</title><rect x="19.9346%" y="757" width="6.5359%" height="15" fill="rgb(232,111,31)"/><text x="20.1846%" y="767.50">&lt;std::io:..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (40 samples, 6.54%)</title><rect x="19.9346%" y="741" width="6.5359%" height="15" fill="rgb(245,82,37)"/><text x="20.1846%" y="751.50">&lt;std::net..</text></g><g><title>std::sys_common::net::TcpStream::read (40 samples, 6.54%)</title><rect x="19.9346%" y="725" width="6.5359%" height="15" fill="rgb(227,149,46)"/><text x="20.1846%" y="735.50">std::sys_..</text></g><g><title>std::sys::unix::net::Socket::read (40 samples, 6.54%)</title><rect x="19.9346%" y="709" width="6.5359%" height="15" fill="rgb(218,36,50)"/><text x="20.1846%" y="719.50">std::sys:..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (40 samples, 6.54%)</title><rect x="19.9346%" y="693" width="6.5359%" height="15" fill="rgb(226,80,48)"/><text x="20.1846%" y="703.50">std::sys:..</text></g><g><title>__libc_recv (40 samples, 6.54%)</title><rect x="19.9346%" y="677" width="6.5359%" height="15" fill="rgb(238,224,15)"/><text x="20.1846%" y="687.50">__libc_re..</text></g><g><title>syscall_return_via_sysret (1 samples, 0.16%)</title><rect x="26.3072%" y="661" width="0.1634%" height="15" fill="rgb(241,136,10)"/><text x="26.5572%" y="671.50"></text></g><g><title>mysql::conn::Conn::read_packet (43 samples, 7.03%)</title><rect x="19.7712%" y="789" width="7.0261%" height="15" fill="rgb(208,32,45)"/><text x="20.0212%" y="799.50">mysql::co..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (43 samples, 7.03%)</title><rect x="19.7712%" y="773" width="7.0261%" height="15" fill="rgb(207,135,9)"/><text x="20.0212%" y="783.50">&lt;mysql_co..</text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (2 samples, 0.33%)</title><rect x="26.4706%" y="757" width="0.3268%" height="15" fill="rgb(206,86,44)"/><text x="26.7206%" y="767.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (2 samples, 0.33%)</title><rect x="26.4706%" y="741" width="0.3268%" height="15" fill="rgb(245,177,15)"/><text x="26.7206%" y="751.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.33%)</title><rect x="26.4706%" y="725" width="0.3268%" height="15" fill="rgb(206,64,50)"/><text x="26.7206%" y="735.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.33%)</title><rect x="26.4706%" y="709" width="0.3268%" height="15" fill="rgb(234,36,40)"/><text x="26.7206%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.16%)</title><rect x="26.6340%" y="693" width="0.1634%" height="15" fill="rgb(213,64,8)"/><text x="26.8840%" y="703.50"></text></g><g><title>mysql_common::packets::OkPacket::into_owned (1 samples, 0.16%)</title><rect x="26.7974%" y="789" width="0.1634%" height="15" fill="rgb(210,75,36)"/><text x="27.0474%" y="799.50"></text></g><g><title>lobsters::main (48 samples, 7.84%)</title><rect x="19.2810%" y="853" width="7.8431%" height="15" fill="rgb(229,88,21)"/><text x="19.5310%" y="863.50">lobsters::m..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (47 samples, 7.68%)</title><rect x="19.4444%" y="837" width="7.6797%" height="15" fill="rgb(252,204,47)"/><text x="19.6944%" y="847.50">mysql::conn..</text></g><g><title>mysql::conn::Conn::_query (47 samples, 7.68%)</title><rect x="19.4444%" y="821" width="7.6797%" height="15" fill="rgb(208,77,27)"/><text x="19.6944%" y="831.50">mysql::conn..</text></g><g><title>mysql::conn::Conn::handle_result_set (47 samples, 7.68%)</title><rect x="19.4444%" y="805" width="7.6797%" height="15" fill="rgb(221,76,26)"/><text x="19.6944%" y="815.50">mysql::conn..</text></g><g><title>mysql_common::packets::parse_ok_packet (1 samples, 0.16%)</title><rect x="26.9608%" y="789" width="0.1634%" height="15" fill="rgb(225,139,18)"/><text x="27.2108%" y="799.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (1 samples, 0.16%)</title><rect x="27.1242%" y="853" width="0.1634%" height="15" fill="rgb(230,137,11)"/><text x="27.3742%" y="863.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (1 samples, 0.16%)</title><rect x="27.1242%" y="837" width="0.1634%" height="15" fill="rgb(212,28,1)"/><text x="27.3742%" y="847.50"></text></g><g><title>decor::Shim::create_schema (1 samples, 0.16%)</title><rect x="27.1242%" y="821" width="0.1634%" height="15" fill="rgb(248,164,17)"/><text x="27.3742%" y="831.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (1 samples, 0.16%)</title><rect x="27.1242%" y="805" width="0.1634%" height="15" fill="rgb(222,171,42)"/><text x="27.3742%" y="815.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (1 samples, 0.16%)</title><rect x="27.1242%" y="789" width="0.1634%" height="15" fill="rgb(243,84,45)"/><text x="27.3742%" y="799.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.16%)</title><rect x="27.1242%" y="773" width="0.1634%" height="15" fill="rgb(252,49,23)"/><text x="27.3742%" y="783.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.16%)</title><rect x="27.1242%" y="757" width="0.1634%" height="15" fill="rgb(215,19,7)"/><text x="27.3742%" y="767.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.16%)</title><rect x="27.1242%" y="741" width="0.1634%" height="15" fill="rgb(238,81,41)"/><text x="27.3742%" y="751.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="27.1242%" y="725" width="0.1634%" height="15" fill="rgb(210,199,37)"/><text x="27.3742%" y="735.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.16%)</title><rect x="27.1242%" y="709" width="0.1634%" height="15" fill="rgb(244,192,49)"/><text x="27.3742%" y="719.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.16%)</title><rect x="27.1242%" y="693" width="0.1634%" height="15" fill="rgb(226,211,11)"/><text x="27.3742%" y="703.50"></text></g><g><title>std::sys_common::net::TcpStream::read (1 samples, 0.16%)</title><rect x="27.1242%" y="677" width="0.1634%" height="15" fill="rgb(236,162,54)"/><text x="27.3742%" y="687.50"></text></g><g><title>std::sys::unix::net::Socket::read (1 samples, 0.16%)</title><rect x="27.1242%" y="661" width="0.1634%" height="15" fill="rgb(220,229,9)"/><text x="27.3742%" y="671.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (1 samples, 0.16%)</title><rect x="27.1242%" y="645" width="0.1634%" height="15" fill="rgb(250,87,22)"/><text x="27.3742%" y="655.50"></text></g><g><title>__libc_recv (1 samples, 0.16%)</title><rect x="27.1242%" y="629" width="0.1634%" height="15" fill="rgb(239,43,17)"/><text x="27.3742%" y="639.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.16%)</title><rect x="27.1242%" y="613" width="0.1634%" height="15" fill="rgb(231,177,25)"/><text x="27.3742%" y="623.50"></text></g><g><title>do_syscall_64 (1 samples, 0.16%)</title><rect x="27.1242%" y="597" width="0.1634%" height="15" fill="rgb(219,179,1)"/><text x="27.3742%" y="607.50"></text></g><g><title>__x64_sys_recvfrom (1 samples, 0.16%)</title><rect x="27.1242%" y="581" width="0.1634%" height="15" fill="rgb(238,219,53)"/><text x="27.3742%" y="591.50"></text></g><g><title>__sys_recvfrom (1 samples, 0.16%)</title><rect x="27.1242%" y="565" width="0.1634%" height="15" fill="rgb(232,167,36)"/><text x="27.3742%" y="575.50"></text></g><g><title>inet_recvmsg (1 samples, 0.16%)</title><rect x="27.1242%" y="549" width="0.1634%" height="15" fill="rgb(244,19,51)"/><text x="27.3742%" y="559.50"></text></g><g><title>tcp_recvmsg (1 samples, 0.16%)</title><rect x="27.1242%" y="533" width="0.1634%" height="15" fill="rgb(224,6,22)"/><text x="27.3742%" y="543.50"></text></g><g><title>sk_wait_data (1 samples, 0.16%)</title><rect x="27.1242%" y="517" width="0.1634%" height="15" fill="rgb(224,145,5)"/><text x="27.3742%" y="527.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.16%)</title><rect x="27.1242%" y="501" width="0.1634%" height="15" fill="rgb(234,130,49)"/><text x="27.3742%" y="511.50"></text></g><g><title>preempt_count_add (1 samples, 0.16%)</title><rect x="27.1242%" y="485" width="0.1634%" height="15" fill="rgb(254,6,2)"/><text x="27.3742%" y="495.50"></text></g><g><title>in_lock_functions (1 samples, 0.16%)</title><rect x="27.1242%" y="469" width="0.1634%" height="15" fill="rgb(208,96,46)"/><text x="27.3742%" y="479.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.16%)</title><rect x="27.2876%" y="853" width="0.1634%" height="15" fill="rgb(239,3,39)"/><text x="27.5376%" y="863.50"></text></g><g><title>regex::exec::ExecBuilder::build (1 samples, 0.16%)</title><rect x="27.4510%" y="853" width="0.1634%" height="15" fill="rgb(233,210,1)"/><text x="27.7010%" y="863.50"></text></g><g><title>regex::compile::Compiler::compile (1 samples, 0.16%)</title><rect x="27.4510%" y="837" width="0.1634%" height="15" fill="rgb(244,137,37)"/><text x="27.7010%" y="847.50"></text></g><g><title>regex::compile::Compiler::c (1 samples, 0.16%)</title><rect x="27.4510%" y="821" width="0.1634%" height="15" fill="rgb(240,136,2)"/><text x="27.7010%" y="831.50"></text></g><g><title>regex::compile::Compiler::c_repeat_range (1 samples, 0.16%)</title><rect x="27.4510%" y="805" width="0.1634%" height="15" fill="rgb(239,18,37)"/><text x="27.7010%" y="815.50"></text></g><g><title>regex::compile::Compiler::c_concat (1 samples, 0.16%)</title><rect x="27.4510%" y="789" width="0.1634%" height="15" fill="rgb(218,185,22)"/><text x="27.7010%" y="799.50"></text></g><g><title>regex::compile::Compiler::c_class (1 samples, 0.16%)</title><rect x="27.4510%" y="773" width="0.1634%" height="15" fill="rgb(225,218,4)"/><text x="27.7010%" y="783.50"></text></g><g><title>regex::compile::CompileClass::c_utf8_seq (1 samples, 0.16%)</title><rect x="27.4510%" y="757" width="0.1634%" height="15" fill="rgb(230,182,32)"/><text x="27.7010%" y="767.50"></text></g><g><title>regex::compile::SuffixCache::get (1 samples, 0.16%)</title><rect x="27.4510%" y="741" width="0.1634%" height="15" fill="rgb(242,56,43)"/><text x="27.7010%" y="751.50"></text></g><g><title>sql_parser::parser::parse_statements (1 samples, 0.16%)</title><rect x="27.6144%" y="853" width="0.1634%" height="15" fill="rgb(233,99,24)"/><text x="27.8644%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (1 samples, 0.16%)</title><rect x="27.6144%" y="837" width="0.1634%" height="15" fill="rgb(234,209,42)"/><text x="27.8644%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::parse_columns (1 samples, 0.16%)</title><rect x="27.6144%" y="821" width="0.1634%" height="15" fill="rgb(227,7,12)"/><text x="27.8644%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (1 samples, 0.16%)</title><rect x="27.6144%" y="805" width="0.1634%" height="15" fill="rgb(245,203,43)"/><text x="27.8644%" y="815.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (2 samples, 0.33%)</title><rect x="27.7778%" y="853" width="0.3268%" height="15" fill="rgb(238,205,33)"/><text x="28.0278%" y="863.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2 samples, 0.33%)</title><rect x="27.7778%" y="837" width="0.3268%" height="15" fill="rgb(231,56,7)"/><text x="28.0278%" y="847.50"></text></g><g><title>lobsters::main (2 samples, 0.33%)</title><rect x="27.7778%" y="821" width="0.3268%" height="15" fill="rgb(244,186,29)"/><text x="28.0278%" y="831.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (2 samples, 0.33%)</title><rect x="27.7778%" y="805" width="0.3268%" height="15" fill="rgb(234,111,31)"/><text x="28.0278%" y="815.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.33%)</title><rect x="27.7778%" y="789" width="0.3268%" height="15" fill="rgb(241,149,10)"/><text x="28.0278%" y="799.50"></text></g><g><title>mysql::conn::query_result::QueryResult&lt;T&gt;::handle_next (2 samples, 0.33%)</title><rect x="27.7778%" y="773" width="0.3268%" height="15" fill="rgb(249,206,44)"/><text x="28.0278%" y="783.50"></text></g><g><title>mysql::conn::Conn::more_results_exists (1 samples, 0.16%)</title><rect x="27.9412%" y="757" width="0.1634%" height="15" fill="rgb(251,153,30)"/><text x="28.1912%" y="767.50"></text></g><g><title>link_path_walk (1 samples, 0.16%)</title><rect x="28.1046%" y="533" width="0.1634%" height="15" fill="rgb(239,152,38)"/><text x="28.3546%" y="543.50"></text></g><g><title>inode_permission.part.0 (1 samples, 0.16%)</title><rect x="28.1046%" y="517" width="0.1634%" height="15" fill="rgb(249,139,47)"/><text x="28.3546%" y="527.50"></text></g><g><title>kernfs_iop_permission (1 samples, 0.16%)</title><rect x="28.1046%" y="501" width="0.1634%" height="15" fill="rgb(244,64,35)"/><text x="28.3546%" y="511.50"></text></g><g><title>kernfs_refresh_inode (1 samples, 0.16%)</title><rect x="28.1046%" y="485" width="0.1634%" height="15" fill="rgb(216,46,15)"/><text x="28.3546%" y="495.50"></text></g><g><title>hwloc::Topology::new (2 samples, 0.33%)</title><rect x="28.1046%" y="725" width="0.3268%" height="15" fill="rgb(250,74,19)"/><text x="28.3546%" y="735.50"></text></g><g><title>hwloc_topology_load (2 samples, 0.33%)</title><rect x="28.1046%" y="709" width="0.3268%" height="15" fill="rgb(249,42,33)"/><text x="28.3546%" y="719.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.33%)</title><rect x="28.1046%" y="693" width="0.3268%" height="15" fill="rgb(242,149,17)"/><text x="28.3546%" y="703.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.33%)</title><rect x="28.1046%" y="677" width="0.3268%" height="15" fill="rgb(244,29,21)"/><text x="28.3546%" y="687.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.33%)</title><rect x="28.1046%" y="661" width="0.3268%" height="15" fill="rgb(220,130,37)"/><text x="28.3546%" y="671.50"></text></g><g><title>__GI___openat (2 samples, 0.33%)</title><rect x="28.1046%" y="645" width="0.3268%" height="15" fill="rgb(211,67,2)"/><text x="28.3546%" y="655.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.33%)</title><rect x="28.1046%" y="629" width="0.3268%" height="15" fill="rgb(235,68,52)"/><text x="28.3546%" y="639.50"></text></g><g><title>do_syscall_64 (2 samples, 0.33%)</title><rect x="28.1046%" y="613" width="0.3268%" height="15" fill="rgb(246,142,3)"/><text x="28.3546%" y="623.50"></text></g><g><title>__x64_sys_openat (2 samples, 0.33%)</title><rect x="28.1046%" y="597" width="0.3268%" height="15" fill="rgb(241,25,7)"/><text x="28.3546%" y="607.50"></text></g><g><title>do_sys_openat2 (2 samples, 0.33%)</title><rect x="28.1046%" y="581" width="0.3268%" height="15" fill="rgb(242,119,39)"/><text x="28.3546%" y="591.50"></text></g><g><title>do_filp_open (2 samples, 0.33%)</title><rect x="28.1046%" y="565" width="0.3268%" height="15" fill="rgb(241,98,45)"/><text x="28.3546%" y="575.50"></text></g><g><title>path_openat (2 samples, 0.33%)</title><rect x="28.1046%" y="549" width="0.3268%" height="15" fill="rgb(254,28,30)"/><text x="28.3546%" y="559.50"></text></g><g><title>terminate_walk (1 samples, 0.16%)</title><rect x="28.2680%" y="533" width="0.1634%" height="15" fill="rgb(241,142,54)"/><text x="28.5180%" y="543.50"></text></g><g><title>mntput (1 samples, 0.16%)</title><rect x="28.2680%" y="517" width="0.1634%" height="15" fill="rgb(222,85,15)"/><text x="28.5180%" y="527.50"></text></g><g><title>std::rt::lang_start_internal (4 samples, 0.65%)</title><rect x="28.1046%" y="853" width="0.6536%" height="15" fill="rgb(210,85,47)"/><text x="28.3546%" y="863.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.65%)</title><rect x="28.1046%" y="837" width="0.6536%" height="15" fill="rgb(224,206,25)"/><text x="28.3546%" y="847.50"></text></g><g><title>std::panicking::try (4 samples, 0.65%)</title><rect x="28.1046%" y="821" width="0.6536%" height="15" fill="rgb(243,201,19)"/><text x="28.3546%" y="831.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.65%)</title><rect x="28.1046%" y="805" width="0.6536%" height="15" fill="rgb(236,59,4)"/><text x="28.3546%" y="815.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (4 samples, 0.65%)</title><rect x="28.1046%" y="789" width="0.6536%" height="15" fill="rgb(254,179,45)"/><text x="28.3546%" y="799.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (4 samples, 0.65%)</title><rect x="28.1046%" y="773" width="0.6536%" height="15" fill="rgb(226,14,10)"/><text x="28.3546%" y="783.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (4 samples, 0.65%)</title><rect x="28.1046%" y="757" width="0.6536%" height="15" fill="rgb(244,27,41)"/><text x="28.3546%" y="767.50"></text></g><g><title>lobsters::main (4 samples, 0.65%)</title><rect x="28.1046%" y="741" width="0.6536%" height="15" fill="rgb(235,35,32)"/><text x="28.3546%" y="751.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (2 samples, 0.33%)</title><rect x="28.4314%" y="725" width="0.3268%" height="15" fill="rgb(218,68,31)"/><text x="28.6814%" y="735.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.33%)</title><rect x="28.4314%" y="709" width="0.3268%" height="15" fill="rgb(207,120,37)"/><text x="28.6814%" y="719.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (2 samples, 0.33%)</title><rect x="28.4314%" y="693" width="0.3268%" height="15" fill="rgb(227,98,0)"/><text x="28.6814%" y="703.50"></text></g><g><title>[unknown] (161 samples, 26.31%)</title><rect x="2.6144%" y="869" width="26.3072%" height="15" fill="rgb(207,7,3)"/><text x="2.8644%" y="879.50">[unknown]</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.16%)</title><rect x="28.7582%" y="853" width="0.1634%" height="15" fill="rgb(206,98,19)"/><text x="29.0082%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (1 samples, 0.16%)</title><rect x="28.7582%" y="837" width="0.1634%" height="15" fill="rgb(217,5,26)"/><text x="29.0082%" y="847.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (1 samples, 0.16%)</title><rect x="28.7582%" y="821" width="0.1634%" height="15" fill="rgb(235,190,38)"/><text x="29.0082%" y="831.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (1 samples, 0.16%)</title><rect x="28.7582%" y="805" width="0.1634%" height="15" fill="rgb(247,86,24)"/><text x="29.0082%" y="815.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.16%)</title><rect x="28.7582%" y="789" width="0.1634%" height="15" fill="rgb(205,101,16)"/><text x="29.0082%" y="799.50"></text></g><g><title>decor::Shim::run_on_tcp (1 samples, 0.16%)</title><rect x="28.7582%" y="773" width="0.1634%" height="15" fill="rgb(246,168,33)"/><text x="29.0082%" y="783.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (1 samples, 0.16%)</title><rect x="28.7582%" y="757" width="0.1634%" height="15" fill="rgb(231,114,1)"/><text x="29.0082%" y="767.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (1 samples, 0.16%)</title><rect x="28.7582%" y="741" width="0.1634%" height="15" fill="rgb(207,184,53)"/><text x="29.0082%" y="751.50"></text></g><g><title>decor::Shim::create_schema (1 samples, 0.16%)</title><rect x="28.7582%" y="725" width="0.1634%" height="15" fill="rgb(224,95,51)"/><text x="29.0082%" y="735.50"></text></g><g><title>core::fmt::write (1 samples, 0.16%)</title><rect x="28.7582%" y="709" width="0.1634%" height="15" fill="rgb(212,188,45)"/><text x="29.0082%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (1 samples, 0.16%)</title><rect x="28.7582%" y="693" width="0.1634%" height="15" fill="rgb(223,154,38)"/><text x="29.0082%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::CreateTableStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.16%)</title><rect x="28.7582%" y="677" width="0.1634%" height="15" fill="rgb(251,22,52)"/><text x="29.0082%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::ddl::IndexDef as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.16%)</title><rect x="28.7582%" y="661" width="0.1634%" height="15" fill="rgb(229,209,22)"/><text x="29.0082%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.16%)</title><rect x="28.7582%" y="645" width="0.1634%" height="15" fill="rgb(234,138,34)"/><text x="29.0082%" y="655.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (1 samples, 0.16%)</title><rect x="28.7582%" y="629" width="0.1634%" height="15" fill="rgb(212,95,11)"/><text x="29.0082%" y="639.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.16%)</title><rect x="28.7582%" y="613" width="0.1634%" height="15" fill="rgb(240,179,47)"/><text x="29.0082%" y="623.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (1 samples, 0.16%)</title><rect x="28.7582%" y="597" width="0.1634%" height="15" fill="rgb(240,163,11)"/><text x="29.0082%" y="607.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="29.2484%" y="709" width="0.1634%" height="15" fill="rgb(236,37,12)"/><text x="29.4984%" y="719.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (1 samples, 0.16%)</title><rect x="29.2484%" y="693" width="0.1634%" height="15" fill="rgb(232,164,16)"/><text x="29.4984%" y="703.50"></text></g><g><title>mysql::conn::Conn::next_text (1 samples, 0.16%)</title><rect x="29.2484%" y="677" width="0.1634%" height="15" fill="rgb(244,205,15)"/><text x="29.4984%" y="687.50"></text></g><g><title>mysql_common::value::read_text_values (1 samples, 0.16%)</title><rect x="29.2484%" y="661" width="0.1634%" height="15" fill="rgb(223,117,47)"/><text x="29.4984%" y="671.50"></text></g><g><title>mysql_common::value::read_text_value (1 samples, 0.16%)</title><rect x="29.2484%" y="645" width="0.1634%" height="15" fill="rgb(244,107,35)"/><text x="29.4984%" y="655.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.16%)</title><rect x="29.2484%" y="629" width="0.1634%" height="15" fill="rgb(205,140,8)"/><text x="29.4984%" y="639.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (2 samples, 0.33%)</title><rect x="29.2484%" y="725" width="0.3268%" height="15" fill="rgb(228,84,46)"/><text x="29.4984%" y="735.50"></text></g><g><title>mysql::conn::Conn::select_db (1 samples, 0.16%)</title><rect x="29.4118%" y="709" width="0.1634%" height="15" fill="rgb(254,188,9)"/><text x="29.6618%" y="719.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.16%)</title><rect x="29.4118%" y="693" width="0.1634%" height="15" fill="rgb(206,112,54)"/><text x="29.6618%" y="703.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.16%)</title><rect x="29.4118%" y="677" width="0.1634%" height="15" fill="rgb(216,84,49)"/><text x="29.6618%" y="687.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.16%)</title><rect x="29.4118%" y="661" width="0.1634%" height="15" fill="rgb(214,194,35)"/><text x="29.6618%" y="671.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1 samples, 0.16%)</title><rect x="29.4118%" y="645" width="0.1634%" height="15" fill="rgb(249,28,3)"/><text x="29.6618%" y="655.50"></text></g><g><title>__libc_send (1 samples, 0.16%)</title><rect x="29.4118%" y="629" width="0.1634%" height="15" fill="rgb(222,56,52)"/><text x="29.6618%" y="639.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.16%)</title><rect x="29.4118%" y="613" width="0.1634%" height="15" fill="rgb(245,217,50)"/><text x="29.6618%" y="623.50"></text></g><g><title>do_syscall_64 (1 samples, 0.16%)</title><rect x="29.4118%" y="597" width="0.1634%" height="15" fill="rgb(213,201,24)"/><text x="29.6618%" y="607.50"></text></g><g><title>__x64_sys_sendto (1 samples, 0.16%)</title><rect x="29.4118%" y="581" width="0.1634%" height="15" fill="rgb(248,116,28)"/><text x="29.6618%" y="591.50"></text></g><g><title>__sys_sendto (1 samples, 0.16%)</title><rect x="29.4118%" y="565" width="0.1634%" height="15" fill="rgb(219,72,43)"/><text x="29.6618%" y="575.50"></text></g><g><title>sock_sendmsg (1 samples, 0.16%)</title><rect x="29.4118%" y="549" width="0.1634%" height="15" fill="rgb(209,138,14)"/><text x="29.6618%" y="559.50"></text></g><g><title>tcp_sendmsg (1 samples, 0.16%)</title><rect x="29.4118%" y="533" width="0.1634%" height="15" fill="rgb(222,18,33)"/><text x="29.6618%" y="543.50"></text></g><g><title>tcp_sendmsg_locked (1 samples, 0.16%)</title><rect x="29.4118%" y="517" width="0.1634%" height="15" fill="rgb(213,199,7)"/><text x="29.6618%" y="527.50"></text></g><g><title>__tcp_push_pending_frames (1 samples, 0.16%)</title><rect x="29.4118%" y="501" width="0.1634%" height="15" fill="rgb(250,110,10)"/><text x="29.6618%" y="511.50"></text></g><g><title>tcp_write_xmit (1 samples, 0.16%)</title><rect x="29.4118%" y="485" width="0.1634%" height="15" fill="rgb(248,123,6)"/><text x="29.6618%" y="495.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.16%)</title><rect x="29.4118%" y="469" width="0.1634%" height="15" fill="rgb(206,91,31)"/><text x="29.6618%" y="479.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.16%)</title><rect x="29.4118%" y="453" width="0.1634%" height="15" fill="rgb(211,154,13)"/><text x="29.6618%" y="463.50"></text></g><g><title>ip_output (1 samples, 0.16%)</title><rect x="29.4118%" y="437" width="0.1634%" height="15" fill="rgb(225,148,7)"/><text x="29.6618%" y="447.50"></text></g><g><title>ip_finish_output2 (1 samples, 0.16%)</title><rect x="29.4118%" y="421" width="0.1634%" height="15" fill="rgb(220,160,43)"/><text x="29.6618%" y="431.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.16%)</title><rect x="29.4118%" y="405" width="0.1634%" height="15" fill="rgb(213,52,39)"/><text x="29.6618%" y="415.50"></text></g><g><title>do_softirq (1 samples, 0.16%)</title><rect x="29.4118%" y="389" width="0.1634%" height="15" fill="rgb(243,137,7)"/><text x="29.6618%" y="399.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.16%)</title><rect x="29.4118%" y="373" width="0.1634%" height="15" fill="rgb(230,79,13)"/><text x="29.6618%" y="383.50"></text></g><g><title>__do_softirq (1 samples, 0.16%)</title><rect x="29.4118%" y="357" width="0.1634%" height="15" fill="rgb(247,105,23)"/><text x="29.6618%" y="367.50"></text></g><g><title>net_rx_action (1 samples, 0.16%)</title><rect x="29.4118%" y="341" width="0.1634%" height="15" fill="rgb(223,179,41)"/><text x="29.6618%" y="351.50"></text></g><g><title>process_backlog (1 samples, 0.16%)</title><rect x="29.4118%" y="325" width="0.1634%" height="15" fill="rgb(218,9,34)"/><text x="29.6618%" y="335.50"></text></g><g><title>__netif_receive_skb_one_core (1 samples, 0.16%)</title><rect x="29.4118%" y="309" width="0.1634%" height="15" fill="rgb(222,106,8)"/><text x="29.6618%" y="319.50"></text></g><g><title>ip_rcv (1 samples, 0.16%)</title><rect x="29.4118%" y="293" width="0.1634%" height="15" fill="rgb(211,220,0)"/><text x="29.6618%" y="303.50"></text></g><g><title>ip_local_deliver (1 samples, 0.16%)</title><rect x="29.4118%" y="277" width="0.1634%" height="15" fill="rgb(229,52,16)"/><text x="29.6618%" y="287.50"></text></g><g><title>ip_local_deliver_finish (1 samples, 0.16%)</title><rect x="29.4118%" y="261" width="0.1634%" height="15" fill="rgb(212,155,18)"/><text x="29.6618%" y="271.50"></text></g><g><title>ip_protocol_deliver_rcu (1 samples, 0.16%)</title><rect x="29.4118%" y="245" width="0.1634%" height="15" fill="rgb(242,21,14)"/><text x="29.6618%" y="255.50"></text></g><g><title>tcp_v4_rcv (1 samples, 0.16%)</title><rect x="29.4118%" y="229" width="0.1634%" height="15" fill="rgb(222,19,48)"/><text x="29.6618%" y="239.50"></text></g><g><title>tcp_v4_do_rcv (1 samples, 0.16%)</title><rect x="29.4118%" y="213" width="0.1634%" height="15" fill="rgb(232,45,27)"/><text x="29.6618%" y="223.50"></text></g><g><title>tcp_rcv_established (1 samples, 0.16%)</title><rect x="29.4118%" y="197" width="0.1634%" height="15" fill="rgb(249,103,42)"/><text x="29.6618%" y="207.50"></text></g><g><title>sock_def_readable (1 samples, 0.16%)</title><rect x="29.4118%" y="181" width="0.1634%" height="15" fill="rgb(246,81,33)"/><text x="29.6618%" y="191.50"></text></g><g><title>__wake_up_common_lock (1 samples, 0.16%)</title><rect x="29.4118%" y="165" width="0.1634%" height="15" fill="rgb(252,33,42)"/><text x="29.6618%" y="175.50"></text></g><g><title>__wake_up_common (1 samples, 0.16%)</title><rect x="29.4118%" y="149" width="0.1634%" height="15" fill="rgb(209,212,41)"/><text x="29.6618%" y="159.50"></text></g><g><title>pollwake (1 samples, 0.16%)</title><rect x="29.4118%" y="133" width="0.1634%" height="15" fill="rgb(207,154,6)"/><text x="29.6618%" y="143.50"></text></g><g><title>try_to_wake_up (1 samples, 0.16%)</title><rect x="29.4118%" y="117" width="0.1634%" height="15" fill="rgb(223,64,47)"/><text x="29.6618%" y="127.50"></text></g><g><title>enqueue_task (1 samples, 0.16%)</title><rect x="29.4118%" y="101" width="0.1634%" height="15" fill="rgb(211,161,38)"/><text x="29.6618%" y="111.50"></text></g><g><title>uclamp_rq_inc_id (1 samples, 0.16%)</title><rect x="29.4118%" y="85" width="0.1634%" height="15" fill="rgb(219,138,40)"/><text x="29.6618%" y="95.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="30.2288%" y="693" width="0.1634%" height="15" fill="rgb(241,228,46)"/><text x="30.4788%" y="703.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.16%)</title><rect x="30.5556%" y="677" width="0.1634%" height="15" fill="rgb(223,209,38)"/><text x="30.8056%" y="687.50"></text></g><g><title>decor::answer_rows (5 samples, 0.82%)</title><rect x="30.0654%" y="709" width="0.8170%" height="15" fill="rgb(236,164,45)"/><text x="30.3154%" y="719.50"></text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::finish (3 samples, 0.49%)</title><rect x="30.3922%" y="693" width="0.4902%" height="15" fill="rgb(231,15,5)"/><text x="30.6422%" y="703.50"></text></g><g><title>msql_srv::writers::write_ok_packet (1 samples, 0.16%)</title><rect x="30.7190%" y="677" width="0.1634%" height="15" fill="rgb(252,35,15)"/><text x="30.9690%" y="687.50"></text></g><g><title>mysql_common::io::WriteMysqlExt::write_lenenc_int (1 samples, 0.16%)</title><rect x="30.7190%" y="661" width="0.1634%" height="15" fill="rgb(248,181,18)"/><text x="30.9690%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.16%)</title><rect x="30.7190%" y="645" width="0.1634%" height="15" fill="rgb(233,39,42)"/><text x="30.9690%" y="655.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.16%)</title><rect x="30.8824%" y="693" width="0.1634%" height="15" fill="rgb(238,110,33)"/><text x="31.1324%" y="703.50"></text></g><g><title>__pthread_disable_asynccancel (1 samples, 0.16%)</title><rect x="31.2092%" y="549" width="0.1634%" height="15" fill="rgb(233,195,10)"/><text x="31.4592%" y="559.50"></text></g><g><title>__pthread_enable_asynccancel (1 samples, 0.16%)</title><rect x="31.3725%" y="549" width="0.1634%" height="15" fill="rgb(254,105,3)"/><text x="31.6225%" y="559.50"></text></g><g><title>remove_wait_queue (2 samples, 0.33%)</title><rect x="31.8627%" y="437" width="0.3268%" height="15" fill="rgb(221,225,9)"/><text x="32.1127%" y="447.50"></text></g><g><title>_raw_spin_lock_irqsave (2 samples, 0.33%)</title><rect x="31.8627%" y="421" width="0.3268%" height="15" fill="rgb(224,227,45)"/><text x="32.1127%" y="431.50"></text></g><g><title>__perf_event_task_sched_out (1 samples, 0.16%)</title><rect x="32.1895%" y="373" width="0.1634%" height="15" fill="rgb(229,198,43)"/><text x="32.4395%" y="383.50"></text></g><g><title>ctx_sched_out (1 samples, 0.16%)</title><rect x="32.1895%" y="357" width="0.1634%" height="15" fill="rgb(206,209,35)"/><text x="32.4395%" y="367.50"></text></g><g><title>reweight_entity (1 samples, 0.16%)</title><rect x="32.3529%" y="341" width="0.1634%" height="15" fill="rgb(245,195,53)"/><text x="32.6029%" y="351.50"></text></g><g><title>update_cfs_group (1 samples, 0.16%)</title><rect x="32.5163%" y="341" width="0.1634%" height="15" fill="rgb(240,92,26)"/><text x="32.7663%" y="351.50"></text></g><g><title>dequeue_task_fair (5 samples, 0.82%)</title><rect x="32.3529%" y="373" width="0.8170%" height="15" fill="rgb(207,40,23)"/><text x="32.6029%" y="383.50"></text></g><g><title>dequeue_entity (5 samples, 0.82%)</title><rect x="32.3529%" y="357" width="0.8170%" height="15" fill="rgb(223,111,35)"/><text x="32.6029%" y="367.50"></text></g><g><title>update_curr (3 samples, 0.49%)</title><rect x="32.6797%" y="341" width="0.4902%" height="15" fill="rgb(229,147,28)"/><text x="32.9297%" y="351.50"></text></g><g><title>__cgroup_account_cputime (1 samples, 0.16%)</title><rect x="33.0065%" y="325" width="0.1634%" height="15" fill="rgb(211,29,28)"/><text x="33.2565%" y="335.50"></text></g><g><title>finish_task_switch (1 samples, 0.16%)</title><rect x="33.1699%" y="373" width="0.1634%" height="15" fill="rgb(228,72,33)"/><text x="33.4199%" y="383.50"></text></g><g><title>__perf_event_task_sched_in (1 samples, 0.16%)</title><rect x="33.1699%" y="357" width="0.1634%" height="15" fill="rgb(205,214,31)"/><text x="33.4199%" y="367.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (1 samples, 0.16%)</title><rect x="33.1699%" y="341" width="0.1634%" height="15" fill="rgb(224,111,15)"/><text x="33.4199%" y="351.50"></text></g><g><title>native_write_msr (1 samples, 0.16%)</title><rect x="33.1699%" y="325" width="0.1634%" height="15" fill="rgb(253,21,26)"/><text x="33.4199%" y="335.50"></text></g><g><title>pick_next_task_idle (1 samples, 0.16%)</title><rect x="33.3333%" y="373" width="0.1634%" height="15" fill="rgb(245,139,43)"/><text x="33.5833%" y="383.50"></text></g><g><title>psi_task_change (3 samples, 0.49%)</title><rect x="33.4967%" y="373" width="0.4902%" height="15" fill="rgb(252,170,7)"/><text x="33.7467%" y="383.50"></text></g><g><title>psi_group_change (2 samples, 0.33%)</title><rect x="33.6601%" y="357" width="0.3268%" height="15" fill="rgb(231,118,14)"/><text x="33.9101%" y="367.50"></text></g><g><title>record_times (1 samples, 0.16%)</title><rect x="33.8235%" y="341" width="0.1634%" height="15" fill="rgb(238,83,0)"/><text x="34.0735%" y="351.50"></text></g><g><title>put_prev_task_fair (1 samples, 0.16%)</title><rect x="33.9869%" y="373" width="0.1634%" height="15" fill="rgb(221,39,39)"/><text x="34.2369%" y="383.50"></text></g><g><title>sk_wait_data (17 samples, 2.78%)</title><rect x="31.8627%" y="453" width="2.7778%" height="15" fill="rgb(222,119,46)"/><text x="32.1127%" y="463.50">sk..</text></g><g><title>wait_woken (15 samples, 2.45%)</title><rect x="32.1895%" y="437" width="2.4510%" height="15" fill="rgb(222,165,49)"/><text x="32.4395%" y="447.50">wa..</text></g><g><title>schedule_timeout (15 samples, 2.45%)</title><rect x="32.1895%" y="421" width="2.4510%" height="15" fill="rgb(219,113,52)"/><text x="32.4395%" y="431.50">sc..</text></g><g><title>schedule (15 samples, 2.45%)</title><rect x="32.1895%" y="405" width="2.4510%" height="15" fill="rgb(214,7,15)"/><text x="32.4395%" y="415.50">sc..</text></g><g><title>__schedule (15 samples, 2.45%)</title><rect x="32.1895%" y="389" width="2.4510%" height="15" fill="rgb(235,32,4)"/><text x="32.4395%" y="399.50">__..</text></g><g><title>uclamp_rq_dec_id (3 samples, 0.49%)</title><rect x="34.1503%" y="373" width="0.4902%" height="15" fill="rgb(238,90,54)"/><text x="34.4003%" y="383.50"></text></g><g><title>_copy_to_iter (1 samples, 0.16%)</title><rect x="34.8039%" y="421" width="0.1634%" height="15" fill="rgb(213,208,19)"/><text x="35.0539%" y="431.50"></text></g><g><title>inet_recvmsg (23 samples, 3.76%)</title><rect x="31.6993%" y="485" width="3.7582%" height="15" fill="rgb(233,156,4)"/><text x="31.9493%" y="495.50">inet..</text></g><g><title>tcp_recvmsg (23 samples, 3.76%)</title><rect x="31.6993%" y="469" width="3.7582%" height="15" fill="rgb(207,194,5)"/><text x="31.9493%" y="479.50">tcp_..</text></g><g><title>skb_copy_datagram_iter (5 samples, 0.82%)</title><rect x="34.6405%" y="453" width="0.8170%" height="15" fill="rgb(206,111,30)"/><text x="34.8905%" y="463.50"></text></g><g><title>__skb_datagram_iter (5 samples, 0.82%)</title><rect x="34.6405%" y="437" width="0.8170%" height="15" fill="rgb(243,70,54)"/><text x="34.8905%" y="447.50"></text></g><g><title>simple_copy_to_iter (3 samples, 0.49%)</title><rect x="34.9673%" y="421" width="0.4902%" height="15" fill="rgb(242,28,8)"/><text x="35.2173%" y="431.50"></text></g><g><title>__check_object_size (3 samples, 0.49%)</title><rect x="34.9673%" y="405" width="0.4902%" height="15" fill="rgb(219,106,18)"/><text x="35.2173%" y="415.50"></text></g><g><title>check_stack_object (1 samples, 0.16%)</title><rect x="35.2941%" y="389" width="0.1634%" height="15" fill="rgb(244,222,10)"/><text x="35.5441%" y="399.50"></text></g><g><title>__x64_sys_recvfrom (24 samples, 3.92%)</title><rect x="31.6993%" y="517" width="3.9216%" height="15" fill="rgb(236,179,52)"/><text x="31.9493%" y="527.50">__x6..</text></g><g><title>__sys_recvfrom (24 samples, 3.92%)</title><rect x="31.6993%" y="501" width="3.9216%" height="15" fill="rgb(213,23,39)"/><text x="31.9493%" y="511.50">__sy..</text></g><g><title>sock_recvmsg (1 samples, 0.16%)</title><rect x="35.4575%" y="485" width="0.1634%" height="15" fill="rgb(238,48,10)"/><text x="35.7075%" y="495.50"></text></g><g><title>do_syscall_64 (25 samples, 4.08%)</title><rect x="31.6993%" y="533" width="4.0850%" height="15" fill="rgb(251,196,23)"/><text x="31.9493%" y="543.50">do_s..</text></g><g><title>syscall_slow_exit_work (1 samples, 0.16%)</title><rect x="35.6209%" y="517" width="0.1634%" height="15" fill="rgb(250,152,24)"/><text x="35.8709%" y="527.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.16%)</title><rect x="35.6209%" y="501" width="0.1634%" height="15" fill="rgb(209,150,17)"/><text x="35.8709%" y="511.50"></text></g><g><title>unroll_tree_refs (1 samples, 0.16%)</title><rect x="35.6209%" y="485" width="0.1634%" height="15" fill="rgb(234,202,34)"/><text x="35.8709%" y="495.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (31 samples, 5.07%)</title><rect x="31.0458%" y="693" width="5.0654%" height="15" fill="rgb(253,148,53)"/><text x="31.2958%" y="703.50">mysql:..</text></g><g><title>mysql::conn::Conn::read_packet (30 samples, 4.90%)</title><rect x="31.2092%" y="677" width="4.9020%" height="15" fill="rgb(218,129,16)"/><text x="31.4592%" y="687.50">mysql:..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 4.90%)</title><rect x="31.2092%" y="661" width="4.9020%" height="15" fill="rgb(216,85,19)"/><text x="31.4592%" y="671.50">&lt;mysql..</text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (30 samples, 4.90%)</title><rect x="31.2092%" y="645" width="4.9020%" height="15" fill="rgb(235,228,7)"/><text x="31.4592%" y="655.50">&lt;std::..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (30 samples, 4.90%)</title><rect x="31.2092%" y="629" width="4.9020%" height="15" fill="rgb(245,175,0)"/><text x="31.4592%" y="639.50">&lt;std::..</text></g><g><title>std::sys_common::net::TcpStream::read (30 samples, 4.90%)</title><rect x="31.2092%" y="613" width="4.9020%" height="15" fill="rgb(208,168,36)"/><text x="31.4592%" y="623.50">std::s..</text></g><g><title>std::sys::unix::net::Socket::read (30 samples, 4.90%)</title><rect x="31.2092%" y="597" width="4.9020%" height="15" fill="rgb(246,171,24)"/><text x="31.4592%" y="607.50">std::s..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (30 samples, 4.90%)</title><rect x="31.2092%" y="581" width="4.9020%" height="15" fill="rgb(215,142,24)"/><text x="31.4592%" y="591.50">std::s..</text></g><g><title>__libc_recv (30 samples, 4.90%)</title><rect x="31.2092%" y="565" width="4.9020%" height="15" fill="rgb(250,187,7)"/><text x="31.4592%" y="575.50">__libc..</text></g><g><title>entry_SYSCALL_64 (28 samples, 4.58%)</title><rect x="31.5359%" y="549" width="4.5752%" height="15" fill="rgb(228,66,33)"/><text x="31.7859%" y="559.50">entry..</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.33%)</title><rect x="35.7843%" y="533" width="0.3268%" height="15" fill="rgb(234,215,21)"/><text x="36.0343%" y="543.50"></text></g><g><title>__pthread_disable_asynccancel (1 samples, 0.16%)</title><rect x="36.1111%" y="613" width="0.1634%" height="15" fill="rgb(222,191,20)"/><text x="36.3611%" y="623.50"></text></g><g><title>__x86_indirect_thunk_rax (1 samples, 0.16%)</title><rect x="36.2745%" y="613" width="0.1634%" height="15" fill="rgb(245,79,54)"/><text x="36.5245%" y="623.50"></text></g><g><title>release_sock (1 samples, 0.16%)</title><rect x="36.7647%" y="517" width="0.1634%" height="15" fill="rgb(240,10,37)"/><text x="37.0147%" y="527.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.16%)</title><rect x="36.7647%" y="501" width="0.1634%" height="15" fill="rgb(214,192,32)"/><text x="37.0147%" y="511.50"></text></g><g><title>preempt_count_add (1 samples, 0.16%)</title><rect x="36.7647%" y="485" width="0.1634%" height="15" fill="rgb(209,36,54)"/><text x="37.0147%" y="495.50"></text></g><g><title>in_lock_functions (1 samples, 0.16%)</title><rect x="36.7647%" y="469" width="0.1634%" height="15" fill="rgb(220,10,11)"/><text x="37.0147%" y="479.50"></text></g><g><title>netif_rx (1 samples, 0.16%)</title><rect x="37.7451%" y="357" width="0.1634%" height="15" fill="rgb(221,106,17)"/><text x="37.9951%" y="367.50"></text></g><g><title>netif_rx_internal (1 samples, 0.16%)</title><rect x="37.7451%" y="341" width="0.1634%" height="15" fill="rgb(251,142,44)"/><text x="37.9951%" y="351.50"></text></g><g><title>ktime_get_with_offset (1 samples, 0.16%)</title><rect x="37.7451%" y="325" width="0.1634%" height="15" fill="rgb(238,13,15)"/><text x="37.9951%" y="335.50"></text></g><g><title>read_tsc (1 samples, 0.16%)</title><rect x="37.7451%" y="309" width="0.1634%" height="15" fill="rgb(208,107,27)"/><text x="37.9951%" y="319.50"></text></g><g><title>sk_free (1 samples, 0.16%)</title><rect x="37.9085%" y="357" width="0.1634%" height="15" fill="rgb(205,136,37)"/><text x="38.1585%" y="367.50"></text></g><g><title>__dev_queue_xmit (5 samples, 0.82%)</title><rect x="37.4183%" y="405" width="0.8170%" height="15" fill="rgb(250,205,27)"/><text x="37.6683%" y="415.50"></text></g><g><title>dev_hard_start_xmit (3 samples, 0.49%)</title><rect x="37.7451%" y="389" width="0.4902%" height="15" fill="rgb(210,80,43)"/><text x="37.9951%" y="399.50"></text></g><g><title>loopback_xmit (3 samples, 0.49%)</title><rect x="37.7451%" y="373" width="0.4902%" height="15" fill="rgb(247,160,36)"/><text x="37.9951%" y="383.50"></text></g><g><title>skb_clone_tx_timestamp (1 samples, 0.16%)</title><rect x="38.0719%" y="357" width="0.1634%" height="15" fill="rgb(234,13,49)"/><text x="38.3219%" y="367.50"></text></g><g><title>__netif_receive_skb_core (1 samples, 0.16%)</title><rect x="38.2353%" y="293" width="0.1634%" height="15" fill="rgb(234,122,0)"/><text x="38.4853%" y="303.50"></text></g><g><title>_raw_spin_unlock (2 samples, 0.33%)</title><rect x="38.5621%" y="101" width="0.3268%" height="15" fill="rgb(207,146,38)"/><text x="38.8121%" y="111.50"></text></g><g><title>psi_task_change (1 samples, 0.16%)</title><rect x="38.8889%" y="85" width="0.1634%" height="15" fill="rgb(207,177,25)"/><text x="39.1389%" y="95.50"></text></g><g><title>psi_group_change (1 samples, 0.16%)</title><rect x="38.8889%" y="69" width="0.1634%" height="15" fill="rgb(211,178,42)"/><text x="39.1389%" y="79.50"></text></g><g><title>enqueue_task (3 samples, 0.49%)</title><rect x="38.8889%" y="101" width="0.4902%" height="15" fill="rgb(230,69,54)"/><text x="39.1389%" y="111.50"></text></g><g><title>uclamp_rq_inc_id (2 samples, 0.33%)</title><rect x="39.0523%" y="85" width="0.3268%" height="15" fill="rgb(214,135,41)"/><text x="39.3023%" y="95.50"></text></g><g><title>enqueue_task_fair (2 samples, 0.33%)</title><rect x="39.3791%" y="101" width="0.3268%" height="15" fill="rgb(237,67,25)"/><text x="39.6291%" y="111.50"></text></g><g><title>enqueue_entity (2 samples, 0.33%)</title><rect x="39.3791%" y="85" width="0.3268%" height="15" fill="rgb(222,189,50)"/><text x="39.6291%" y="95.50"></text></g><g><title>update_load_avg (2 samples, 0.33%)</title><rect x="39.3791%" y="69" width="0.3268%" height="15" fill="rgb(245,148,34)"/><text x="39.6291%" y="79.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.16%)</title><rect x="39.5425%" y="53" width="0.1634%" height="15" fill="rgb(222,29,6)"/><text x="39.7925%" y="63.50"></text></g><g><title>select_task_rq_fair (2 samples, 0.33%)</title><rect x="39.7059%" y="101" width="0.3268%" height="15" fill="rgb(221,189,43)"/><text x="39.9559%" y="111.50"></text></g><g><title>available_idle_cpu (1 samples, 0.16%)</title><rect x="39.8693%" y="85" width="0.1634%" height="15" fill="rgb(207,36,27)"/><text x="40.1193%" y="95.50"></text></g><g><title>ttwu_do_wakeup (2 samples, 0.33%)</title><rect x="40.0327%" y="101" width="0.3268%" height="15" fill="rgb(217,90,24)"/><text x="40.2827%" y="111.50"></text></g><g><title>check_preempt_curr (2 samples, 0.33%)</title><rect x="40.0327%" y="85" width="0.3268%" height="15" fill="rgb(224,66,35)"/><text x="40.2827%" y="95.50"></text></g><g><title>resched_curr (2 samples, 0.33%)</title><rect x="40.0327%" y="69" width="0.3268%" height="15" fill="rgb(221,13,50)"/><text x="40.2827%" y="79.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.16%)</title><rect x="40.1961%" y="53" width="0.1634%" height="15" fill="rgb(236,68,49)"/><text x="40.4461%" y="63.50"></text></g><g><title>sock_def_readable (12 samples, 1.96%)</title><rect x="38.5621%" y="181" width="1.9608%" height="15" fill="rgb(229,146,28)"/><text x="38.8121%" y="191.50">s..</text></g><g><title>__wake_up_common_lock (12 samples, 1.96%)</title><rect x="38.5621%" y="165" width="1.9608%" height="15" fill="rgb(225,31,38)"/><text x="38.8121%" y="175.50">_..</text></g><g><title>__wake_up_common (12 samples, 1.96%)</title><rect x="38.5621%" y="149" width="1.9608%" height="15" fill="rgb(250,208,3)"/><text x="38.8121%" y="159.50">_..</text></g><g><title>pollwake (12 samples, 1.96%)</title><rect x="38.5621%" y="133" width="1.9608%" height="15" fill="rgb(246,54,23)"/><text x="38.8121%" y="143.50">p..</text></g><g><title>try_to_wake_up (12 samples, 1.96%)</title><rect x="38.5621%" y="117" width="1.9608%" height="15" fill="rgb(243,76,11)"/><text x="38.8121%" y="127.50">t..</text></g><g><title>update_rq_clock (1 samples, 0.16%)</title><rect x="40.3595%" y="101" width="0.1634%" height="15" fill="rgb(245,21,50)"/><text x="40.6095%" y="111.50"></text></g><g><title>tcp_ack (2 samples, 0.33%)</title><rect x="40.5229%" y="181" width="0.3268%" height="15" fill="rgb(228,9,43)"/><text x="40.7729%" y="191.50"></text></g><g><title>__kfree_skb (1 samples, 0.16%)</title><rect x="40.6863%" y="165" width="0.1634%" height="15" fill="rgb(208,100,47)"/><text x="40.9363%" y="175.50"></text></g><g><title>kfree (1 samples, 0.16%)</title><rect x="40.6863%" y="149" width="0.1634%" height="15" fill="rgb(232,26,8)"/><text x="40.9363%" y="159.50"></text></g><g><title>__slab_free (1 samples, 0.16%)</title><rect x="40.6863%" y="133" width="0.1634%" height="15" fill="rgb(216,166,38)"/><text x="40.9363%" y="143.50"></text></g><g><title>__ip_queue_xmit (24 samples, 3.92%)</title><rect x="37.0915%" y="453" width="3.9216%" height="15" fill="rgb(251,202,51)"/><text x="37.3415%" y="463.50">__ip..</text></g><g><title>ip_output (24 samples, 3.92%)</title><rect x="37.0915%" y="437" width="3.9216%" height="15" fill="rgb(254,216,34)"/><text x="37.3415%" y="447.50">ip_o..</text></g><g><title>ip_finish_output2 (24 samples, 3.92%)</title><rect x="37.0915%" y="421" width="3.9216%" height="15" fill="rgb(251,32,27)"/><text x="37.3415%" y="431.50">ip_f..</text></g><g><title>__local_bh_enable_ip (17 samples, 2.78%)</title><rect x="38.2353%" y="405" width="2.7778%" height="15" fill="rgb(208,127,28)"/><text x="38.4853%" y="415.50">__..</text></g><g><title>do_softirq (17 samples, 2.78%)</title><rect x="38.2353%" y="389" width="2.7778%" height="15" fill="rgb(224,137,22)"/><text x="38.4853%" y="399.50">do..</text></g><g><title>do_softirq_own_stack (17 samples, 2.78%)</title><rect x="38.2353%" y="373" width="2.7778%" height="15" fill="rgb(254,70,32)"/><text x="38.4853%" y="383.50">do..</text></g><g><title>__do_softirq (17 samples, 2.78%)</title><rect x="38.2353%" y="357" width="2.7778%" height="15" fill="rgb(229,75,37)"/><text x="38.4853%" y="367.50">__..</text></g><g><title>net_rx_action (17 samples, 2.78%)</title><rect x="38.2353%" y="341" width="2.7778%" height="15" fill="rgb(252,64,23)"/><text x="38.4853%" y="351.50">ne..</text></g><g><title>process_backlog (17 samples, 2.78%)</title><rect x="38.2353%" y="325" width="2.7778%" height="15" fill="rgb(232,162,48)"/><text x="38.4853%" y="335.50">pr..</text></g><g><title>__netif_receive_skb_one_core (17 samples, 2.78%)</title><rect x="38.2353%" y="309" width="2.7778%" height="15" fill="rgb(246,160,12)"/><text x="38.4853%" y="319.50">__..</text></g><g><title>ip_rcv (16 samples, 2.61%)</title><rect x="38.3987%" y="293" width="2.6144%" height="15" fill="rgb(247,166,0)"/><text x="38.6487%" y="303.50">ip..</text></g><g><title>ip_local_deliver (16 samples, 2.61%)</title><rect x="38.3987%" y="277" width="2.6144%" height="15" fill="rgb(249,219,21)"/><text x="38.6487%" y="287.50">ip..</text></g><g><title>ip_local_deliver_finish (16 samples, 2.61%)</title><rect x="38.3987%" y="261" width="2.6144%" height="15" fill="rgb(205,209,3)"/><text x="38.6487%" y="271.50">ip..</text></g><g><title>ip_protocol_deliver_rcu (16 samples, 2.61%)</title><rect x="38.3987%" y="245" width="2.6144%" height="15" fill="rgb(243,44,1)"/><text x="38.6487%" y="255.50">ip..</text></g><g><title>tcp_v4_rcv (15 samples, 2.45%)</title><rect x="38.5621%" y="229" width="2.4510%" height="15" fill="rgb(206,159,16)"/><text x="38.8121%" y="239.50">tc..</text></g><g><title>tcp_v4_do_rcv (15 samples, 2.45%)</title><rect x="38.5621%" y="213" width="2.4510%" height="15" fill="rgb(244,77,30)"/><text x="38.8121%" y="223.50">tc..</text></g><g><title>tcp_rcv_established (15 samples, 2.45%)</title><rect x="38.5621%" y="197" width="2.4510%" height="15" fill="rgb(218,69,12)"/><text x="38.8121%" y="207.50">tc..</text></g><g><title>tcp_queue_rcv (1 samples, 0.16%)</title><rect x="40.8497%" y="181" width="0.1634%" height="15" fill="rgb(212,87,7)"/><text x="41.0997%" y="191.50"></text></g><g><title>__tcp_transmit_skb (25 samples, 4.08%)</title><rect x="37.0915%" y="469" width="4.0850%" height="15" fill="rgb(245,114,25)"/><text x="37.3415%" y="479.50">__tc..</text></g><g><title>tcp_update_skb_after_send (1 samples, 0.16%)</title><rect x="41.0131%" y="453" width="0.1634%" height="15" fill="rgb(210,61,42)"/><text x="41.2631%" y="463.50"></text></g><g><title>__tcp_push_pending_frames (27 samples, 4.41%)</title><rect x="37.0915%" y="501" width="4.4118%" height="15" fill="rgb(211,52,33)"/><text x="37.3415%" y="511.50">__tcp..</text></g><g><title>tcp_write_xmit (27 samples, 4.41%)</title><rect x="37.0915%" y="485" width="4.4118%" height="15" fill="rgb(234,58,33)"/><text x="37.3415%" y="495.50">tcp_w..</text></g><g><title>tcp_event_new_data_sent (2 samples, 0.33%)</title><rect x="41.1765%" y="469" width="0.3268%" height="15" fill="rgb(220,115,36)"/><text x="41.4265%" y="479.50"></text></g><g><title>sk_reset_timer (2 samples, 0.33%)</title><rect x="41.1765%" y="453" width="0.3268%" height="15" fill="rgb(243,153,54)"/><text x="41.4265%" y="463.50"></text></g><g><title>__mod_timer (1 samples, 0.16%)</title><rect x="41.3399%" y="437" width="0.1634%" height="15" fill="rgb(251,47,18)"/><text x="41.5899%" y="447.50"></text></g><g><title>sk_stream_alloc_skb (1 samples, 0.16%)</title><rect x="41.5033%" y="501" width="0.1634%" height="15" fill="rgb(242,102,42)"/><text x="41.7533%" y="511.50"></text></g><g><title>__alloc_skb (1 samples, 0.16%)</title><rect x="41.5033%" y="485" width="0.1634%" height="15" fill="rgb(234,31,38)"/><text x="41.7533%" y="495.50"></text></g><g><title>sock_sendmsg (31 samples, 5.07%)</title><rect x="36.7647%" y="549" width="5.0654%" height="15" fill="rgb(221,117,51)"/><text x="37.0147%" y="559.50">sock_s..</text></g><g><title>tcp_sendmsg (31 samples, 5.07%)</title><rect x="36.7647%" y="533" width="5.0654%" height="15" fill="rgb(212,20,18)"/><text x="37.0147%" y="543.50">tcp_se..</text></g><g><title>tcp_sendmsg_locked (30 samples, 4.90%)</title><rect x="36.9281%" y="517" width="4.9020%" height="15" fill="rgb(245,133,36)"/><text x="37.1781%" y="527.50">tcp_se..</text></g><g><title>tcp_send_mss (1 samples, 0.16%)</title><rect x="41.6667%" y="501" width="0.1634%" height="15" fill="rgb(212,6,19)"/><text x="41.9167%" y="511.50"></text></g><g><title>__x64_sys_sendto (33 samples, 5.39%)</title><rect x="36.6013%" y="581" width="5.3922%" height="15" fill="rgb(218,1,36)"/><text x="36.8513%" y="591.50">__x64_s..</text></g><g><title>__sys_sendto (32 samples, 5.23%)</title><rect x="36.7647%" y="565" width="5.2288%" height="15" fill="rgb(246,84,54)"/><text x="37.0147%" y="575.50">__sys_..</text></g><g><title>sockfd_lookup_light (1 samples, 0.16%)</title><rect x="41.8301%" y="549" width="0.1634%" height="15" fill="rgb(242,110,6)"/><text x="42.0801%" y="559.50"></text></g><g><title>__fget_light (1 samples, 0.16%)</title><rect x="41.8301%" y="533" width="0.1634%" height="15" fill="rgb(214,47,5)"/><text x="42.0801%" y="543.50"></text></g><g><title>__fget_files (1 samples, 0.16%)</title><rect x="41.8301%" y="517" width="0.1634%" height="15" fill="rgb(218,159,25)"/><text x="42.0801%" y="527.50"></text></g><g><title>syscall_slow_exit_work (1 samples, 0.16%)</title><rect x="41.9935%" y="581" width="0.1634%" height="15" fill="rgb(215,211,28)"/><text x="42.2435%" y="591.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.16%)</title><rect x="41.9935%" y="565" width="0.1634%" height="15" fill="rgb(238,59,32)"/><text x="42.2435%" y="575.50"></text></g><g><title>do_syscall_64 (36 samples, 5.88%)</title><rect x="36.4379%" y="597" width="5.8824%" height="15" fill="rgb(226,82,3)"/><text x="36.6879%" y="607.50">do_sysc..</text></g><g><title>syscall_trace_enter (1 samples, 0.16%)</title><rect x="42.1569%" y="581" width="0.1634%" height="15" fill="rgb(240,164,32)"/><text x="42.4069%" y="591.50"></text></g><g><title>__audit_syscall_entry (1 samples, 0.16%)</title><rect x="42.1569%" y="565" width="0.1634%" height="15" fill="rgb(232,46,7)"/><text x="42.4069%" y="575.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (81 samples, 13.24%)</title><rect x="29.5752%" y="725" width="13.2353%" height="15" fill="rgb(229,129,53)"/><text x="29.8252%" y="735.50">&lt;decor::Shim as msql..</text></g><g><title>mysql::conn::Conn::_query (73 samples, 11.93%)</title><rect x="30.8824%" y="709" width="11.9281%" height="15" fill="rgb(234,188,29)"/><text x="31.1324%" y="719.50">mysql::conn::Conn:..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (41 samples, 6.70%)</title><rect x="36.1111%" y="693" width="6.6993%" height="15" fill="rgb(246,141,4)"/><text x="36.3611%" y="703.50">mysql_com..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (41 samples, 6.70%)</title><rect x="36.1111%" y="677" width="6.6993%" height="15" fill="rgb(229,23,39)"/><text x="36.3611%" y="687.50">std::io::..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (41 samples, 6.70%)</title><rect x="36.1111%" y="661" width="6.6993%" height="15" fill="rgb(206,12,3)"/><text x="36.3611%" y="671.50">&lt;std::net..</text></g><g><title>std::sys_common::net::TcpStream::write (41 samples, 6.70%)</title><rect x="36.1111%" y="645" width="6.6993%" height="15" fill="rgb(252,226,20)"/><text x="36.3611%" y="655.50">std::sys_..</text></g><g><title>__libc_send (41 samples, 6.70%)</title><rect x="36.1111%" y="629" width="6.6993%" height="15" fill="rgb(216,123,35)"/><text x="36.3611%" y="639.50">__libc_se..</text></g><g><title>entry_SYSCALL_64 (39 samples, 6.37%)</title><rect x="36.4379%" y="613" width="6.3725%" height="15" fill="rgb(212,68,40)"/><text x="36.6879%" y="623.50">entry_SY..</text></g><g><title>prepare_exit_to_usermode (3 samples, 0.49%)</title><rect x="42.3203%" y="597" width="0.4902%" height="15" fill="rgb(254,125,32)"/><text x="42.5703%" y="607.50"></text></g><g><title>__pthread_disable_asynccancel (1 samples, 0.16%)</title><rect x="42.9739%" y="613" width="0.1634%" height="15" fill="rgb(253,97,22)"/><text x="43.2239%" y="623.50"></text></g><g><title>__pthread_enable_asynccancel (1 samples, 0.16%)</title><rect x="43.1373%" y="613" width="0.1634%" height="15" fill="rgb(241,101,14)"/><text x="43.3873%" y="623.50"></text></g><g><title>import_single_range (1 samples, 0.16%)</title><rect x="43.3007%" y="549" width="0.1634%" height="15" fill="rgb(238,103,29)"/><text x="43.5507%" y="559.50"></text></g><g><title>__kfree_skb (1 samples, 0.16%)</title><rect x="43.4641%" y="517" width="0.1634%" height="15" fill="rgb(233,195,47)"/><text x="43.7141%" y="527.50"></text></g><g><title>skb_release_head_state (1 samples, 0.16%)</title><rect x="43.4641%" y="501" width="0.1634%" height="15" fill="rgb(246,218,30)"/><text x="43.7141%" y="511.50"></text></g><g><title>dst_release (1 samples, 0.16%)</title><rect x="43.4641%" y="485" width="0.1634%" height="15" fill="rgb(219,145,47)"/><text x="43.7141%" y="495.50"></text></g><g><title>__tcp_send_ack.part.0 (1 samples, 0.16%)</title><rect x="43.6275%" y="517" width="0.1634%" height="15" fill="rgb(243,12,26)"/><text x="43.8775%" y="527.50"></text></g><g><title>__alloc_skb (1 samples, 0.16%)</title><rect x="43.6275%" y="501" width="0.1634%" height="15" fill="rgb(214,87,16)"/><text x="43.8775%" y="511.50"></text></g><g><title>__ksize (1 samples, 0.16%)</title><rect x="43.6275%" y="485" width="0.1634%" height="15" fill="rgb(208,99,42)"/><text x="43.8775%" y="495.50"></text></g><g><title>__dev_queue_xmit (2 samples, 0.33%)</title><rect x="43.7908%" y="453" width="0.3268%" height="15" fill="rgb(253,99,2)"/><text x="44.0408%" y="463.50"></text></g><g><title>dev_hard_start_xmit (1 samples, 0.16%)</title><rect x="43.9542%" y="437" width="0.1634%" height="15" fill="rgb(220,168,23)"/><text x="44.2042%" y="447.50"></text></g><g><title>loopback_xmit (1 samples, 0.16%)</title><rect x="43.9542%" y="421" width="0.1634%" height="15" fill="rgb(242,38,24)"/><text x="44.2042%" y="431.50"></text></g><g><title>netif_rx (1 samples, 0.16%)</title><rect x="43.9542%" y="405" width="0.1634%" height="15" fill="rgb(225,182,9)"/><text x="44.2042%" y="415.50"></text></g><g><title>netif_rx_internal (1 samples, 0.16%)</title><rect x="43.9542%" y="389" width="0.1634%" height="15" fill="rgb(243,178,37)"/><text x="44.2042%" y="399.50"></text></g><g><title>enqueue_to_backlog (1 samples, 0.16%)</title><rect x="43.9542%" y="373" width="0.1634%" height="15" fill="rgb(232,139,19)"/><text x="44.2042%" y="383.50"></text></g><g><title>__raise_softirq_irqoff (1 samples, 0.16%)</title><rect x="43.9542%" y="357" width="0.1634%" height="15" fill="rgb(225,201,24)"/><text x="44.2042%" y="367.50"></text></g><g><title>__kfree_skb (1 samples, 0.16%)</title><rect x="44.1176%" y="229" width="0.1634%" height="15" fill="rgb(221,47,46)"/><text x="44.3676%" y="239.50"></text></g><g><title>skb_release_head_state (1 samples, 0.16%)</title><rect x="44.1176%" y="213" width="0.1634%" height="15" fill="rgb(249,23,13)"/><text x="44.3676%" y="223.50"></text></g><g><title>dst_release (1 samples, 0.16%)</title><rect x="44.1176%" y="197" width="0.1634%" height="15" fill="rgb(219,9,5)"/><text x="44.3676%" y="207.50"></text></g><g><title>ip_local_deliver (2 samples, 0.33%)</title><rect x="44.1176%" y="325" width="0.3268%" height="15" fill="rgb(254,171,16)"/><text x="44.3676%" y="335.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.33%)</title><rect x="44.1176%" y="309" width="0.3268%" height="15" fill="rgb(230,171,20)"/><text x="44.3676%" y="319.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.33%)</title><rect x="44.1176%" y="293" width="0.3268%" height="15" fill="rgb(210,71,41)"/><text x="44.3676%" y="303.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.33%)</title><rect x="44.1176%" y="277" width="0.3268%" height="15" fill="rgb(206,173,20)"/><text x="44.3676%" y="287.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.33%)</title><rect x="44.1176%" y="261" width="0.3268%" height="15" fill="rgb(233,88,34)"/><text x="44.3676%" y="271.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.33%)</title><rect x="44.1176%" y="245" width="0.3268%" height="15" fill="rgb(223,209,46)"/><text x="44.3676%" y="255.50"></text></g><g><title>tcp_ack (1 samples, 0.16%)</title><rect x="44.2810%" y="229" width="0.1634%" height="15" fill="rgb(250,43,18)"/><text x="44.5310%" y="239.50"></text></g><g><title>__kfree_skb (1 samples, 0.16%)</title><rect x="44.2810%" y="213" width="0.1634%" height="15" fill="rgb(208,13,10)"/><text x="44.5310%" y="223.50"></text></g><g><title>__tcp_transmit_skb (5 samples, 0.82%)</title><rect x="43.7908%" y="517" width="0.8170%" height="15" fill="rgb(212,200,36)"/><text x="44.0408%" y="527.50"></text></g><g><title>__ip_queue_xmit (5 samples, 0.82%)</title><rect x="43.7908%" y="501" width="0.8170%" height="15" fill="rgb(225,90,30)"/><text x="44.0408%" y="511.50"></text></g><g><title>ip_output (5 samples, 0.82%)</title><rect x="43.7908%" y="485" width="0.8170%" height="15" fill="rgb(236,182,39)"/><text x="44.0408%" y="495.50"></text></g><g><title>ip_finish_output2 (5 samples, 0.82%)</title><rect x="43.7908%" y="469" width="0.8170%" height="15" fill="rgb(212,144,35)"/><text x="44.0408%" y="479.50"></text></g><g><title>__local_bh_enable_ip (3 samples, 0.49%)</title><rect x="44.1176%" y="453" width="0.4902%" height="15" fill="rgb(228,63,44)"/><text x="44.3676%" y="463.50"></text></g><g><title>do_softirq (3 samples, 0.49%)</title><rect x="44.1176%" y="437" width="0.4902%" height="15" fill="rgb(228,109,6)"/><text x="44.3676%" y="447.50"></text></g><g><title>do_softirq_own_stack (3 samples, 0.49%)</title><rect x="44.1176%" y="421" width="0.4902%" height="15" fill="rgb(238,117,24)"/><text x="44.3676%" y="431.50"></text></g><g><title>__do_softirq (3 samples, 0.49%)</title><rect x="44.1176%" y="405" width="0.4902%" height="15" fill="rgb(242,26,26)"/><text x="44.3676%" y="415.50"></text></g><g><title>net_rx_action (3 samples, 0.49%)</title><rect x="44.1176%" y="389" width="0.4902%" height="15" fill="rgb(221,92,48)"/><text x="44.3676%" y="399.50"></text></g><g><title>process_backlog (3 samples, 0.49%)</title><rect x="44.1176%" y="373" width="0.4902%" height="15" fill="rgb(209,209,32)"/><text x="44.3676%" y="383.50"></text></g><g><title>__netif_receive_skb_one_core (3 samples, 0.49%)</title><rect x="44.1176%" y="357" width="0.4902%" height="15" fill="rgb(221,70,22)"/><text x="44.3676%" y="367.50"></text></g><g><title>ip_rcv (3 samples, 0.49%)</title><rect x="44.1176%" y="341" width="0.4902%" height="15" fill="rgb(248,145,5)"/><text x="44.3676%" y="351.50"></text></g><g><title>ip_rcv_core (1 samples, 0.16%)</title><rect x="44.4444%" y="325" width="0.1634%" height="15" fill="rgb(226,116,26)"/><text x="44.6944%" y="335.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.16%)</title><rect x="44.4444%" y="309" width="0.1634%" height="15" fill="rgb(244,5,17)"/><text x="44.6944%" y="319.50"></text></g><g><title>release_sock (1 samples, 0.16%)</title><rect x="44.6078%" y="517" width="0.1634%" height="15" fill="rgb(252,159,33)"/><text x="44.8578%" y="527.50"></text></g><g><title>tcp_release_cb (1 samples, 0.16%)</title><rect x="44.6078%" y="501" width="0.1634%" height="15" fill="rgb(206,71,0)"/><text x="44.8578%" y="511.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.16%)</title><rect x="44.9346%" y="501" width="0.1634%" height="15" fill="rgb(233,118,54)"/><text x="45.1846%" y="511.50"></text></g><g><title>preempt_count_sub (1 samples, 0.16%)</title><rect x="44.9346%" y="485" width="0.1634%" height="15" fill="rgb(234,83,48)"/><text x="45.1846%" y="495.50"></text></g><g><title>dequeue_task_fair (1 samples, 0.16%)</title><rect x="45.7516%" y="437" width="0.1634%" height="15" fill="rgb(228,3,54)"/><text x="46.0016%" y="447.50"></text></g><g><title>dequeue_entity (1 samples, 0.16%)</title><rect x="45.7516%" y="421" width="0.1634%" height="15" fill="rgb(226,155,13)"/><text x="46.0016%" y="431.50"></text></g><g><title>update_cfs_group (1 samples, 0.16%)</title><rect x="45.7516%" y="405" width="0.1634%" height="15" fill="rgb(241,28,37)"/><text x="46.0016%" y="415.50"></text></g><g><title>finish_task_switch (1 samples, 0.16%)</title><rect x="45.9150%" y="437" width="0.1634%" height="15" fill="rgb(233,93,10)"/><text x="46.1650%" y="447.50"></text></g><g><title>psi_task_change (4 samples, 0.65%)</title><rect x="46.0784%" y="437" width="0.6536%" height="15" fill="rgb(225,113,19)"/><text x="46.3284%" y="447.50"></text></g><g><title>psi_group_change (4 samples, 0.65%)</title><rect x="46.0784%" y="421" width="0.6536%" height="15" fill="rgb(241,2,18)"/><text x="46.3284%" y="431.50"></text></g><g><title>record_times (3 samples, 0.49%)</title><rect x="46.2418%" y="405" width="0.4902%" height="15" fill="rgb(228,207,21)"/><text x="46.4918%" y="415.50"></text></g><g><title>sched_clock_cpu (3 samples, 0.49%)</title><rect x="46.2418%" y="389" width="0.4902%" height="15" fill="rgb(213,211,35)"/><text x="46.4918%" y="399.50"></text></g><g><title>sched_clock (3 samples, 0.49%)</title><rect x="46.2418%" y="373" width="0.4902%" height="15" fill="rgb(209,83,10)"/><text x="46.4918%" y="383.50"></text></g><g><title>native_sched_clock (2 samples, 0.33%)</title><rect x="46.4052%" y="357" width="0.3268%" height="15" fill="rgb(209,164,1)"/><text x="46.6552%" y="367.50"></text></g><g><title>put_prev_task_fair (1 samples, 0.16%)</title><rect x="46.7320%" y="437" width="0.1634%" height="15" fill="rgb(213,184,43)"/><text x="46.9820%" y="447.50"></text></g><g><title>put_prev_entity (1 samples, 0.16%)</title><rect x="46.7320%" y="421" width="0.1634%" height="15" fill="rgb(231,61,34)"/><text x="46.9820%" y="431.50"></text></g><g><title>rcu_note_context_switch (1 samples, 0.16%)</title><rect x="46.8954%" y="437" width="0.1634%" height="15" fill="rgb(235,75,3)"/><text x="47.1454%" y="447.50"></text></g><g><title>do_syscall_64 (24 samples, 3.92%)</title><rect x="43.3007%" y="597" width="3.9216%" height="15" fill="rgb(220,106,47)"/><text x="43.5507%" y="607.50">do_s..</text></g><g><title>__x64_sys_recvfrom (24 samples, 3.92%)</title><rect x="43.3007%" y="581" width="3.9216%" height="15" fill="rgb(210,196,33)"/><text x="43.5507%" y="591.50">__x6..</text></g><g><title>__sys_recvfrom (24 samples, 3.92%)</title><rect x="43.3007%" y="565" width="3.9216%" height="15" fill="rgb(229,154,42)"/><text x="43.5507%" y="575.50">__sy..</text></g><g><title>inet_recvmsg (23 samples, 3.76%)</title><rect x="43.4641%" y="549" width="3.7582%" height="15" fill="rgb(228,114,26)"/><text x="43.7141%" y="559.50">inet..</text></g><g><title>tcp_recvmsg (23 samples, 3.76%)</title><rect x="43.4641%" y="533" width="3.7582%" height="15" fill="rgb(208,144,1)"/><text x="43.7141%" y="543.50">tcp_..</text></g><g><title>sk_wait_data (15 samples, 2.45%)</title><rect x="44.7712%" y="517" width="2.4510%" height="15" fill="rgb(239,112,37)"/><text x="45.0212%" y="527.50">sk..</text></g><g><title>wait_woken (13 samples, 2.12%)</title><rect x="45.0980%" y="501" width="2.1242%" height="15" fill="rgb(210,96,50)"/><text x="45.3480%" y="511.50">w..</text></g><g><title>schedule_timeout (12 samples, 1.96%)</title><rect x="45.2614%" y="485" width="1.9608%" height="15" fill="rgb(222,178,2)"/><text x="45.5114%" y="495.50">s..</text></g><g><title>schedule (11 samples, 1.80%)</title><rect x="45.4248%" y="469" width="1.7974%" height="15" fill="rgb(226,74,18)"/><text x="45.6748%" y="479.50">s..</text></g><g><title>__schedule (11 samples, 1.80%)</title><rect x="45.4248%" y="453" width="1.7974%" height="15" fill="rgb(225,67,54)"/><text x="45.6748%" y="463.50">_..</text></g><g><title>update_rq_clock (1 samples, 0.16%)</title><rect x="47.0588%" y="437" width="0.1634%" height="15" fill="rgb(251,92,32)"/><text x="47.3088%" y="447.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.16%)</title><rect x="47.0588%" y="421" width="0.1634%" height="15" fill="rgb(228,149,22)"/><text x="47.3088%" y="431.50"></text></g><g><title>sched_clock (1 samples, 0.16%)</title><rect x="47.0588%" y="405" width="0.1634%" height="15" fill="rgb(243,54,13)"/><text x="47.3088%" y="415.50"></text></g><g><title>native_sched_clock (1 samples, 0.16%)</title><rect x="47.0588%" y="389" width="0.1634%" height="15" fill="rgb(243,180,28)"/><text x="47.3088%" y="399.50"></text></g><g><title>entry_SYSCALL_64 (30 samples, 4.90%)</title><rect x="43.3007%" y="613" width="4.9020%" height="15" fill="rgb(208,167,24)"/><text x="43.5507%" y="623.50">entry_..</text></g><g><title>prepare_exit_to_usermode (6 samples, 0.98%)</title><rect x="47.2222%" y="597" width="0.9804%" height="15" fill="rgb(245,73,45)"/><text x="47.4722%" y="607.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (33 samples, 5.39%)</title><rect x="42.9739%" y="709" width="5.3922%" height="15" fill="rgb(237,203,48)"/><text x="43.2239%" y="719.50">&lt;std::i..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (33 samples, 5.39%)</title><rect x="42.9739%" y="693" width="5.3922%" height="15" fill="rgb(211,197,16)"/><text x="43.2239%" y="703.50">&lt;std::n..</text></g><g><title>std::sys_common::net::TcpStream::read (33 samples, 5.39%)</title><rect x="42.9739%" y="677" width="5.3922%" height="15" fill="rgb(243,99,51)"/><text x="43.2239%" y="687.50">std::sy..</text></g><g><title>std::sys::unix::net::Socket::read (33 samples, 5.39%)</title><rect x="42.9739%" y="661" width="5.3922%" height="15" fill="rgb(215,123,29)"/><text x="43.2239%" y="671.50">std::sy..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (33 samples, 5.39%)</title><rect x="42.9739%" y="645" width="5.3922%" height="15" fill="rgb(239,186,37)"/><text x="43.2239%" y="655.50">std::sy..</text></g><g><title>__libc_recv (33 samples, 5.39%)</title><rect x="42.9739%" y="629" width="5.3922%" height="15" fill="rgb(252,136,39)"/><text x="43.2239%" y="639.50">__libc_..</text></g><g><title>syscall_return_via_sysret (1 samples, 0.16%)</title><rect x="48.2026%" y="613" width="0.1634%" height="15" fill="rgb(223,213,32)"/><text x="48.4526%" y="623.50"></text></g><g><title>msql_srv::packet::PacketReader&lt;R&gt;::next (36 samples, 5.88%)</title><rect x="42.8105%" y="725" width="5.8824%" height="15" fill="rgb(233,115,5)"/><text x="43.0605%" y="735.50">msql_sr..</text></g><g><title>__memset_avx2_erms (2 samples, 0.33%)</title><rect x="48.3660%" y="709" width="0.3268%" height="15" fill="rgb(207,226,44)"/><text x="48.6160%" y="719.50"></text></g><g><title>__sk_dst_check (1 samples, 0.16%)</title><rect x="49.5098%" y="485" width="0.1634%" height="15" fill="rgb(208,126,0)"/><text x="49.7598%" y="495.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.16%)</title><rect x="50.0000%" y="437" width="0.1634%" height="15" fill="rgb(244,66,21)"/><text x="50.2500%" y="447.50"></text></g><g><title>preempt_count_sub (1 samples, 0.16%)</title><rect x="50.0000%" y="421" width="0.1634%" height="15" fill="rgb(222,97,12)"/><text x="50.2500%" y="431.50"></text></g><g><title>enqueue_to_backlog (1 samples, 0.16%)</title><rect x="50.3268%" y="373" width="0.1634%" height="15" fill="rgb(219,213,19)"/><text x="50.5768%" y="383.50"></text></g><g><title>dev_hard_start_xmit (3 samples, 0.49%)</title><rect x="50.1634%" y="437" width="0.4902%" height="15" fill="rgb(252,169,30)"/><text x="50.4134%" y="447.50"></text></g><g><title>loopback_xmit (2 samples, 0.33%)</title><rect x="50.3268%" y="421" width="0.3268%" height="15" fill="rgb(206,32,51)"/><text x="50.5768%" y="431.50"></text></g><g><title>netif_rx (2 samples, 0.33%)</title><rect x="50.3268%" y="405" width="0.3268%" height="15" fill="rgb(250,172,42)"/><text x="50.5768%" y="415.50"></text></g><g><title>netif_rx_internal (2 samples, 0.33%)</title><rect x="50.3268%" y="389" width="0.3268%" height="15" fill="rgb(209,34,43)"/><text x="50.5768%" y="399.50"></text></g><g><title>ktime_get_with_offset (1 samples, 0.16%)</title><rect x="50.4902%" y="373" width="0.1634%" height="15" fill="rgb(223,11,35)"/><text x="50.7402%" y="383.50"></text></g><g><title>read_tsc (1 samples, 0.16%)</title><rect x="50.4902%" y="357" width="0.1634%" height="15" fill="rgb(251,219,26)"/><text x="50.7402%" y="367.50"></text></g><g><title>netdev_core_pick_tx (1 samples, 0.16%)</title><rect x="50.6536%" y="437" width="0.1634%" height="15" fill="rgb(231,119,3)"/><text x="50.9036%" y="447.50"></text></g><g><title>netif_skb_features (1 samples, 0.16%)</title><rect x="50.8170%" y="421" width="0.1634%" height="15" fill="rgb(216,97,11)"/><text x="51.0670%" y="431.50"></text></g><g><title>__dev_queue_xmit (7 samples, 1.14%)</title><rect x="50.0000%" y="453" width="1.1438%" height="15" fill="rgb(223,59,9)"/><text x="50.2500%" y="463.50"></text></g><g><title>validate_xmit_skb (2 samples, 0.33%)</title><rect x="50.8170%" y="437" width="0.3268%" height="15" fill="rgb(233,93,31)"/><text x="51.0670%" y="447.50"></text></g><g><title>skb_csum_hwoffload_help (1 samples, 0.16%)</title><rect x="50.9804%" y="421" width="0.1634%" height="15" fill="rgb(239,81,33)"/><text x="51.2304%" y="431.50"></text></g><g><title>__netif_receive_skb_core (3 samples, 0.49%)</title><rect x="51.3072%" y="341" width="0.4902%" height="15" fill="rgb(213,120,34)"/><text x="51.5572%" y="351.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.16%)</title><rect x="52.6144%" y="165" width="0.1634%" height="15" fill="rgb(243,49,53)"/><text x="52.8644%" y="175.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.16%)</title><rect x="52.7778%" y="165" width="0.1634%" height="15" fill="rgb(247,216,33)"/><text x="53.0278%" y="175.50"></text></g><g><title>enqueue_task (1 samples, 0.16%)</title><rect x="52.9412%" y="165" width="0.1634%" height="15" fill="rgb(226,26,14)"/><text x="53.1912%" y="175.50"></text></g><g><title>psi_task_change (1 samples, 0.16%)</title><rect x="52.9412%" y="149" width="0.1634%" height="15" fill="rgb(215,49,53)"/><text x="53.1912%" y="159.50"></text></g><g><title>psi_group_change (1 samples, 0.16%)</title><rect x="52.9412%" y="133" width="0.1634%" height="15" fill="rgb(245,162,40)"/><text x="53.1912%" y="143.50"></text></g><g><title>enqueue_task_fair (2 samples, 0.33%)</title><rect x="53.1046%" y="165" width="0.3268%" height="15" fill="rgb(229,68,17)"/><text x="53.3546%" y="175.50"></text></g><g><title>enqueue_entity (2 samples, 0.33%)</title><rect x="53.1046%" y="149" width="0.3268%" height="15" fill="rgb(213,182,10)"/><text x="53.3546%" y="159.50"></text></g><g><title>ttwu_do_wakeup (1 samples, 0.16%)</title><rect x="53.4314%" y="165" width="0.1634%" height="15" fill="rgb(245,125,30)"/><text x="53.6814%" y="175.50"></text></g><g><title>__wake_up_common (9 samples, 1.47%)</title><rect x="52.4510%" y="197" width="1.4706%" height="15" fill="rgb(232,202,2)"/><text x="52.7010%" y="207.50"></text></g><g><title>try_to_wake_up (9 samples, 1.47%)</title><rect x="52.4510%" y="181" width="1.4706%" height="15" fill="rgb(237,140,51)"/><text x="52.7010%" y="191.50"></text></g><g><title>update_rq_clock (2 samples, 0.33%)</title><rect x="53.5948%" y="165" width="0.3268%" height="15" fill="rgb(236,157,25)"/><text x="53.8448%" y="175.50"></text></g><g><title>sock_def_readable (10 samples, 1.63%)</title><rect x="52.4510%" y="229" width="1.6340%" height="15" fill="rgb(219,209,0)"/><text x="52.7010%" y="239.50"></text></g><g><title>__wake_up_common_lock (10 samples, 1.63%)</title><rect x="52.4510%" y="213" width="1.6340%" height="15" fill="rgb(240,116,54)"/><text x="52.7010%" y="223.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.16%)</title><rect x="53.9216%" y="197" width="0.1634%" height="15" fill="rgb(216,10,36)"/><text x="54.1716%" y="207.50"></text></g><g><title>tcp_ack (2 samples, 0.33%)</title><rect x="54.0850%" y="229" width="0.3268%" height="15" fill="rgb(222,72,44)"/><text x="54.3350%" y="239.50"></text></g><g><title>__kfree_skb (1 samples, 0.16%)</title><rect x="54.2484%" y="213" width="0.1634%" height="15" fill="rgb(232,159,9)"/><text x="54.4984%" y="223.50"></text></g><g><title>skb_release_data (1 samples, 0.16%)</title><rect x="54.2484%" y="197" width="0.1634%" height="15" fill="rgb(210,39,32)"/><text x="54.4984%" y="207.50"></text></g><g><title>tcp_mstamp_refresh (1 samples, 0.16%)</title><rect x="54.4118%" y="229" width="0.1634%" height="15" fill="rgb(216,194,45)"/><text x="54.6618%" y="239.50"></text></g><g><title>__ip_queue_xmit (33 samples, 5.39%)</title><rect x="49.5098%" y="501" width="5.3922%" height="15" fill="rgb(218,18,35)"/><text x="49.7598%" y="511.50">__ip_qu..</text></g><g><title>ip_output (32 samples, 5.23%)</title><rect x="49.6732%" y="485" width="5.2288%" height="15" fill="rgb(207,83,51)"/><text x="49.9232%" y="495.50">ip_out..</text></g><g><title>ip_finish_output2 (32 samples, 5.23%)</title><rect x="49.6732%" y="469" width="5.2288%" height="15" fill="rgb(225,63,43)"/><text x="49.9232%" y="479.50">ip_fin..</text></g><g><title>__local_bh_enable_ip (23 samples, 3.76%)</title><rect x="51.1438%" y="453" width="3.7582%" height="15" fill="rgb(207,57,36)"/><text x="51.3938%" y="463.50">__lo..</text></g><g><title>do_softirq (23 samples, 3.76%)</title><rect x="51.1438%" y="437" width="3.7582%" height="15" fill="rgb(216,99,33)"/><text x="51.3938%" y="447.50">do_s..</text></g><g><title>do_softirq_own_stack (23 samples, 3.76%)</title><rect x="51.1438%" y="421" width="3.7582%" height="15" fill="rgb(225,42,16)"/><text x="51.3938%" y="431.50">do_s..</text></g><g><title>__do_softirq (23 samples, 3.76%)</title><rect x="51.1438%" y="405" width="3.7582%" height="15" fill="rgb(220,201,45)"/><text x="51.3938%" y="415.50">__do..</text></g><g><title>net_rx_action (22 samples, 3.59%)</title><rect x="51.3072%" y="389" width="3.5948%" height="15" fill="rgb(225,33,4)"/><text x="51.5572%" y="399.50">net_..</text></g><g><title>process_backlog (22 samples, 3.59%)</title><rect x="51.3072%" y="373" width="3.5948%" height="15" fill="rgb(224,33,50)"/><text x="51.5572%" y="383.50">proc..</text></g><g><title>__netif_receive_skb_one_core (22 samples, 3.59%)</title><rect x="51.3072%" y="357" width="3.5948%" height="15" fill="rgb(246,198,51)"/><text x="51.5572%" y="367.50">__ne..</text></g><g><title>ip_rcv (19 samples, 3.10%)</title><rect x="51.7974%" y="341" width="3.1046%" height="15" fill="rgb(205,22,4)"/><text x="52.0474%" y="351.50">ip_..</text></g><g><title>ip_local_deliver (19 samples, 3.10%)</title><rect x="51.7974%" y="325" width="3.1046%" height="15" fill="rgb(206,3,8)"/><text x="52.0474%" y="335.50">ip_..</text></g><g><title>ip_local_deliver_finish (17 samples, 2.78%)</title><rect x="52.1242%" y="309" width="2.7778%" height="15" fill="rgb(251,23,15)"/><text x="52.3742%" y="319.50">ip..</text></g><g><title>ip_protocol_deliver_rcu (17 samples, 2.78%)</title><rect x="52.1242%" y="293" width="2.7778%" height="15" fill="rgb(252,88,28)"/><text x="52.3742%" y="303.50">ip..</text></g><g><title>tcp_v4_rcv (17 samples, 2.78%)</title><rect x="52.1242%" y="277" width="2.7778%" height="15" fill="rgb(212,127,14)"/><text x="52.3742%" y="287.50">tc..</text></g><g><title>tcp_v4_do_rcv (16 samples, 2.61%)</title><rect x="52.2876%" y="261" width="2.6144%" height="15" fill="rgb(247,145,37)"/><text x="52.5376%" y="271.50">tc..</text></g><g><title>tcp_rcv_established (16 samples, 2.61%)</title><rect x="52.2876%" y="245" width="2.6144%" height="15" fill="rgb(209,117,53)"/><text x="52.5376%" y="255.50">tc..</text></g><g><title>tcp_queue_rcv (2 samples, 0.33%)</title><rect x="54.5752%" y="229" width="0.3268%" height="15" fill="rgb(212,90,42)"/><text x="54.8252%" y="239.50"></text></g><g><title>bictcp_cwnd_event (1 samples, 0.16%)</title><rect x="54.9020%" y="501" width="0.1634%" height="15" fill="rgb(218,164,37)"/><text x="55.1520%" y="511.50"></text></g><g><title>__tcp_transmit_skb (38 samples, 6.21%)</title><rect x="49.0196%" y="517" width="6.2092%" height="15" fill="rgb(246,65,34)"/><text x="49.2696%" y="527.50">__tcp_tr..</text></g><g><title>skb_clone (1 samples, 0.16%)</title><rect x="55.0654%" y="501" width="0.1634%" height="15" fill="rgb(231,100,33)"/><text x="55.3154%" y="511.50"></text></g><g><title>tcp_event_new_data_sent (1 samples, 0.16%)</title><rect x="55.2288%" y="517" width="0.1634%" height="15" fill="rgb(228,126,14)"/><text x="55.4788%" y="527.50"></text></g><g><title>sk_reset_timer (1 samples, 0.16%)</title><rect x="55.2288%" y="501" width="0.1634%" height="15" fill="rgb(215,173,21)"/><text x="55.4788%" y="511.50"></text></g><g><title>__mod_timer (1 samples, 0.16%)</title><rect x="55.2288%" y="485" width="0.1634%" height="15" fill="rgb(210,6,40)"/><text x="55.4788%" y="495.50"></text></g><g><title>__tcp_push_pending_frames (41 samples, 6.70%)</title><rect x="48.8562%" y="549" width="6.6993%" height="15" fill="rgb(212,48,18)"/><text x="49.1062%" y="559.50">__tcp_pus..</text></g><g><title>tcp_write_xmit (41 samples, 6.70%)</title><rect x="48.8562%" y="533" width="6.6993%" height="15" fill="rgb(230,214,11)"/><text x="49.1062%" y="543.50">tcp_write..</text></g><g><title>tcp_schedule_loss_probe.part.0 (1 samples, 0.16%)</title><rect x="55.3922%" y="517" width="0.1634%" height="15" fill="rgb(254,105,39)"/><text x="55.6422%" y="527.50"></text></g><g><title>sk_stream_alloc_skb (2 samples, 0.33%)</title><rect x="55.5556%" y="549" width="0.3268%" height="15" fill="rgb(245,158,5)"/><text x="55.8056%" y="559.50"></text></g><g><title>__alloc_skb (2 samples, 0.33%)</title><rect x="55.5556%" y="533" width="0.3268%" height="15" fill="rgb(249,208,11)"/><text x="55.8056%" y="543.50"></text></g><g><title>__kmalloc_node_track_caller (1 samples, 0.16%)</title><rect x="55.7190%" y="517" width="0.1634%" height="15" fill="rgb(210,39,28)"/><text x="55.9690%" y="527.50"></text></g><g><title>kmalloc_slab (1 samples, 0.16%)</title><rect x="55.7190%" y="501" width="0.1634%" height="15" fill="rgb(211,56,53)"/><text x="55.9690%" y="511.50"></text></g><g><title>skb_do_copy_data_nocache (2 samples, 0.33%)</title><rect x="55.8824%" y="549" width="0.3268%" height="15" fill="rgb(226,201,30)"/><text x="56.1324%" y="559.50"></text></g><g><title>_copy_from_iter_full (2 samples, 0.33%)</title><rect x="55.8824%" y="533" width="0.3268%" height="15" fill="rgb(239,101,34)"/><text x="56.1324%" y="543.50"></text></g><g><title>copy_user_generic_unrolled (2 samples, 0.33%)</title><rect x="55.8824%" y="517" width="0.3268%" height="15" fill="rgb(226,209,5)"/><text x="56.1324%" y="527.50"></text></g><g><title>sock_sendmsg (46 samples, 7.52%)</title><rect x="48.8562%" y="597" width="7.5163%" height="15" fill="rgb(250,105,47)"/><text x="49.1062%" y="607.50">sock_sendm..</text></g><g><title>tcp_sendmsg (46 samples, 7.52%)</title><rect x="48.8562%" y="581" width="7.5163%" height="15" fill="rgb(230,72,3)"/><text x="49.1062%" y="591.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (46 samples, 7.52%)</title><rect x="48.8562%" y="565" width="7.5163%" height="15" fill="rgb(232,218,39)"/><text x="49.1062%" y="575.50">tcp_sendms..</text></g><g><title>tcp_rate_check_app_limited (1 samples, 0.16%)</title><rect x="56.2092%" y="549" width="0.1634%" height="15" fill="rgb(248,166,6)"/><text x="56.4592%" y="559.50"></text></g><g><title>__x64_sys_sendto (48 samples, 7.84%)</title><rect x="48.6928%" y="629" width="7.8431%" height="15" fill="rgb(247,89,20)"/><text x="48.9428%" y="639.50">__x64_sys_s..</text></g><g><title>__sys_sendto (48 samples, 7.84%)</title><rect x="48.6928%" y="613" width="7.8431%" height="15" fill="rgb(248,130,54)"/><text x="48.9428%" y="623.50">__sys_sendto</text></g><g><title>sockfd_lookup_light (1 samples, 0.16%)</title><rect x="56.3725%" y="597" width="0.1634%" height="15" fill="rgb(234,196,4)"/><text x="56.6225%" y="607.50"></text></g><g><title>__fget_light (1 samples, 0.16%)</title><rect x="56.3725%" y="581" width="0.1634%" height="15" fill="rgb(250,143,31)"/><text x="56.6225%" y="591.50"></text></g><g><title>__fget_files (1 samples, 0.16%)</title><rect x="56.3725%" y="565" width="0.1634%" height="15" fill="rgb(211,110,34)"/><text x="56.6225%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (50 samples, 8.17%)</title><rect x="48.6928%" y="661" width="8.1699%" height="15" fill="rgb(215,124,48)"/><text x="48.9428%" y="671.50">entry_SYSCA..</text></g><g><title>do_syscall_64 (50 samples, 8.17%)</title><rect x="48.6928%" y="645" width="8.1699%" height="15" fill="rgb(216,46,13)"/><text x="48.9428%" y="655.50">do_syscall_..</text></g><g><title>syscall_slow_exit_work (2 samples, 0.33%)</title><rect x="56.5359%" y="629" width="0.3268%" height="15" fill="rgb(205,184,25)"/><text x="56.7859%" y="639.50"></text></g><g><title>decor::Shim::run_on_tcp (172 samples, 28.10%)</title><rect x="28.9216%" y="757" width="28.1046%" height="15" fill="rgb(228,1,10)"/><text x="29.1716%" y="767.50">decor::Shim::run_on_tcp</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (172 samples, 28.10%)</title><rect x="28.9216%" y="741" width="28.1046%" height="15" fill="rgb(213,116,27)"/><text x="29.1716%" y="751.50">msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (51 samples, 8.33%)</title><rect x="48.6928%" y="725" width="8.3333%" height="15" fill="rgb(241,95,50)"/><text x="48.9428%" y="735.50">std::io::buf..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (51 samples, 8.33%)</title><rect x="48.6928%" y="709" width="8.3333%" height="15" fill="rgb(238,48,32)"/><text x="48.9428%" y="719.50">&lt;std::net::t..</text></g><g><title>std::sys_common::net::TcpStream::write (51 samples, 8.33%)</title><rect x="48.6928%" y="693" width="8.3333%" height="15" fill="rgb(235,113,49)"/><text x="48.9428%" y="703.50">std::sys_com..</text></g><g><title>__libc_send (51 samples, 8.33%)</title><rect x="48.6928%" y="677" width="8.3333%" height="15" fill="rgb(205,127,43)"/><text x="48.9428%" y="687.50">__libc_send</text></g><g><title>syscall_return_via_sysret (1 samples, 0.16%)</title><rect x="56.8627%" y="661" width="0.1634%" height="15" fill="rgb(250,162,2)"/><text x="57.1127%" y="671.50"></text></g><g><title>__GI___clone (173 samples, 28.27%)</title><rect x="28.9216%" y="869" width="28.2680%" height="15" fill="rgb(220,13,41)"/><text x="29.1716%" y="879.50">__GI___clone</text></g><g><title>start_thread (173 samples, 28.27%)</title><rect x="28.9216%" y="853" width="28.2680%" height="15" fill="rgb(249,221,25)"/><text x="29.1716%" y="863.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (173 samples, 28.27%)</title><rect x="28.9216%" y="837" width="28.2680%" height="15" fill="rgb(215,208,19)"/><text x="29.1716%" y="847.50">std::sys::unix::thread::Thread::new::thread_s..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (173 samples, 28.27%)</title><rect x="28.9216%" y="821" width="28.2680%" height="15" fill="rgb(236,175,2)"/><text x="29.1716%" y="831.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (173 samples, 28.27%)</title><rect x="28.9216%" y="805" width="28.2680%" height="15" fill="rgb(241,52,2)"/><text x="29.1716%" y="815.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function:..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (173 samples, 28.27%)</title><rect x="28.9216%" y="789" width="28.2680%" height="15" fill="rgb(248,140,14)"/><text x="29.1716%" y="799.50">core::ops::function::FnOnce::call_once{{vtabl..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (173 samples, 28.27%)</title><rect x="28.9216%" y="773" width="28.2680%" height="15" fill="rgb(253,22,42)"/><text x="29.1716%" y="783.50">std::sys_common::backtrace::__rust_begin_shor..</text></g><g><title>mysql::conn::Conn::new (1 samples, 0.16%)</title><rect x="57.0261%" y="757" width="0.1634%" height="15" fill="rgb(234,61,47)"/><text x="57.2761%" y="767.50"></text></g><g><title>mysql::conn::opts::from_url (1 samples, 0.16%)</title><rect x="57.0261%" y="741" width="0.1634%" height="15" fill="rgb(208,226,15)"/><text x="57.2761%" y="751.50"></text></g><g><title>url::host::Host::parse (1 samples, 0.16%)</title><rect x="57.0261%" y="725" width="0.1634%" height="15" fill="rgb(217,221,4)"/><text x="57.2761%" y="735.50"></text></g><g><title>idna::domain_to_ascii (1 samples, 0.16%)</title><rect x="57.0261%" y="709" width="0.1634%" height="15" fill="rgb(212,174,34)"/><text x="57.2761%" y="719.50"></text></g><g><title>idna::uts46::Config::to_ascii (1 samples, 0.16%)</title><rect x="57.0261%" y="693" width="0.1634%" height="15" fill="rgb(253,83,4)"/><text x="57.2761%" y="703.50"></text></g><g><title>idna::uts46::processing (1 samples, 0.16%)</title><rect x="57.0261%" y="677" width="0.1634%" height="15" fill="rgb(250,195,49)"/><text x="57.2761%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (1 samples, 0.16%)</title><rect x="57.0261%" y="661" width="0.1634%" height="15" fill="rgb(241,192,25)"/><text x="57.2761%" y="671.50"></text></g><g><title>unicode_normalization::lookups::composition_table (1 samples, 0.16%)</title><rect x="57.0261%" y="645" width="0.1634%" height="15" fill="rgb(208,124,10)"/><text x="57.2761%" y="655.50"></text></g><g><title>_int_free (1 samples, 0.16%)</title><rect x="57.1895%" y="693" width="0.1634%" height="15" fill="rgb(222,33,0)"/><text x="57.4395%" y="703.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.16%)</title><rect x="57.3529%" y="693" width="0.1634%" height="15" fill="rgb(234,209,28)"/><text x="57.6029%" y="703.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.16%)</title><rect x="57.3529%" y="677" width="0.1634%" height="15" fill="rgb(224,11,23)"/><text x="57.6029%" y="687.50"></text></g><g><title>core::fmt::write (1 samples, 0.16%)</title><rect x="57.3529%" y="661" width="0.1634%" height="15" fill="rgb(232,99,1)"/><text x="57.6029%" y="671.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.16%)</title><rect x="57.5163%" y="693" width="0.1634%" height="15" fill="rgb(237,95,45)"/><text x="57.7663%" y="703.50"></text></g><g><title>hwloc_topology_destroy (1 samples, 0.16%)</title><rect x="57.5163%" y="677" width="0.1634%" height="15" fill="rgb(208,109,11)"/><text x="57.7663%" y="687.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.16%)</title><rect x="57.5163%" y="661" width="0.1634%" height="15" fill="rgb(216,190,48)"/><text x="57.7663%" y="671.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.16%)</title><rect x="57.5163%" y="645" width="0.1634%" height="15" fill="rgb(251,171,36)"/><text x="57.7663%" y="655.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.16%)</title><rect x="57.5163%" y="629" width="0.1634%" height="15" fill="rgb(230,62,22)"/><text x="57.7663%" y="639.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.16%)</title><rect x="57.5163%" y="613" width="0.1634%" height="15" fill="rgb(225,114,35)"/><text x="57.7663%" y="623.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.16%)</title><rect x="57.5163%" y="597" width="0.1634%" height="15" fill="rgb(215,118,42)"/><text x="57.7663%" y="607.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.16%)</title><rect x="57.5163%" y="581" width="0.1634%" height="15" fill="rgb(243,119,21)"/><text x="57.7663%" y="591.50"></text></g><g><title>hwloc_bitmap_free (1 samples, 0.16%)</title><rect x="57.5163%" y="565" width="0.1634%" height="15" fill="rgb(252,177,53)"/><text x="57.7663%" y="575.50"></text></g><g><title>_int_free (1 samples, 0.16%)</title><rect x="57.5163%" y="549" width="0.1634%" height="15" fill="rgb(237,209,29)"/><text x="57.7663%" y="559.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.33%)</title><rect x="57.6797%" y="613" width="0.3268%" height="15" fill="rgb(212,65,23)"/><text x="57.9297%" y="623.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.16%)</title><rect x="57.8431%" y="597" width="0.1634%" height="15" fill="rgb(230,222,46)"/><text x="58.0931%" y="607.50"></text></g><g><title>do_syscall_64 (235 samples, 38.40%)</title><rect x="58.1699%" y="565" width="38.3987%" height="15" fill="rgb(215,135,32)"/><text x="58.4199%" y="575.50">do_syscall_64</text></g><g><title>__x64_sys_sched_setaffinity (235 samples, 38.40%)</title><rect x="58.1699%" y="549" width="38.3987%" height="15" fill="rgb(246,101,22)"/><text x="58.4199%" y="559.50">__x64_sys_sched_setaffinity</text></g><g><title>sched_setaffinity (235 samples, 38.40%)</title><rect x="58.1699%" y="533" width="38.3987%" height="15" fill="rgb(206,107,13)"/><text x="58.4199%" y="543.50">sched_setaffinity</text></g><g><title>__set_cpus_allowed_ptr (235 samples, 38.40%)</title><rect x="58.1699%" y="517" width="38.3987%" height="15" fill="rgb(250,100,44)"/><text x="58.4199%" y="527.50">__set_cpus_allowed_ptr</text></g><g><title>stop_one_cpu (235 samples, 38.40%)</title><rect x="58.1699%" y="501" width="38.3987%" height="15" fill="rgb(231,147,38)"/><text x="58.4199%" y="511.50">stop_one_cpu</text></g><g><title>cpu_stop_queue_work (234 samples, 38.24%)</title><rect x="58.3333%" y="485" width="38.2353%" height="15" fill="rgb(229,8,40)"/><text x="58.5833%" y="495.50">cpu_stop_queue_work</text></g><g><title>preempt_schedule_thunk (234 samples, 38.24%)</title><rect x="58.3333%" y="469" width="38.2353%" height="15" fill="rgb(221,135,30)"/><text x="58.5833%" y="479.50">preempt_schedule_thunk</text></g><g><title>preempt_schedule_common (234 samples, 38.24%)</title><rect x="58.3333%" y="453" width="38.2353%" height="15" fill="rgb(249,193,18)"/><text x="58.5833%" y="463.50">preempt_schedule_common</text></g><g><title>__schedule (234 samples, 38.24%)</title><rect x="58.3333%" y="437" width="38.2353%" height="15" fill="rgb(209,133,39)"/><text x="58.5833%" y="447.50">__schedule</text></g><g><title>finish_task_switch (234 samples, 38.24%)</title><rect x="58.3333%" y="421" width="38.2353%" height="15" fill="rgb(232,100,14)"/><text x="58.5833%" y="431.50">finish_task_switch</text></g><g><title>__perf_event_task_sched_in (234 samples, 38.24%)</title><rect x="58.3333%" y="405" width="38.2353%" height="15" fill="rgb(224,185,1)"/><text x="58.5833%" y="415.50">__perf_event_task_sched_in</text></g><g><title>__intel_pmu_enable_all.constprop.0 (234 samples, 38.24%)</title><rect x="58.3333%" y="389" width="38.2353%" height="15" fill="rgb(223,139,8)"/><text x="58.5833%" y="399.50">__intel_pmu_enable_all.constprop.0</text></g><g><title>native_write_msr (234 samples, 38.24%)</title><rect x="58.3333%" y="373" width="38.2353%" height="15" fill="rgb(232,213,38)"/><text x="58.5833%" y="383.50">native_write_msr</text></g><g><title>entry_SYSCALL_64 (236 samples, 38.56%)</title><rect x="58.1699%" y="581" width="38.5621%" height="15" fill="rgb(207,94,22)"/><text x="58.4199%" y="591.50">entry_SYSCALL_64</text></g><g><title>prepare_exit_to_usermode (1 samples, 0.16%)</title><rect x="96.5686%" y="565" width="0.1634%" height="15" fill="rgb(219,183,54)"/><text x="96.8186%" y="575.50"></text></g><g><title>[libhwloc.so.15.2.0] (240 samples, 39.22%)</title><rect x="57.6797%" y="629" width="39.2157%" height="15" fill="rgb(216,185,54)"/><text x="57.9297%" y="639.50">[libhwloc.so.15.2.0]</text></g><g><title>hwloc_linux_set_tid_cpubind (238 samples, 38.89%)</title><rect x="58.0065%" y="613" width="38.8889%" height="15" fill="rgb(254,217,39)"/><text x="58.2565%" y="623.50">hwloc_linux_set_tid_cpubind</text></g><g><title>__GI___sched_setaffinity_new (238 samples, 38.89%)</title><rect x="58.0065%" y="597" width="38.8889%" height="15" fill="rgb(240,178,23)"/><text x="58.2565%" y="607.50">__GI___sched_setaffinity_new</text></g><g><title>syscall_return_via_sysret (1 samples, 0.16%)</title><rect x="96.7320%" y="581" width="0.1634%" height="15" fill="rgb(218,11,47)"/><text x="96.9820%" y="591.50"></text></g><g><title>hwloc::Topology::new (241 samples, 39.38%)</title><rect x="57.6797%" y="693" width="39.3791%" height="15" fill="rgb(218,51,51)"/><text x="57.9297%" y="703.50">hwloc::Topology::new</text></g><g><title>hwloc_topology_load (241 samples, 39.38%)</title><rect x="57.6797%" y="677" width="39.3791%" height="15" fill="rgb(238,126,27)"/><text x="57.9297%" y="687.50">hwloc_topology_load</text></g><g><title>[libhwloc.so.15.2.0] (241 samples, 39.38%)</title><rect x="57.6797%" y="661" width="39.3791%" height="15" fill="rgb(249,202,22)"/><text x="57.9297%" y="671.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (241 samples, 39.38%)</title><rect x="57.6797%" y="645" width="39.3791%" height="15" fill="rgb(254,195,49)"/><text x="57.9297%" y="655.50">[libhwloc.so.15.2.0]</text></g><g><title>fgets (1 samples, 0.16%)</title><rect x="96.8954%" y="629" width="0.1634%" height="15" fill="rgb(208,123,14)"/><text x="97.1454%" y="639.50"></text></g><g><title>__GI__IO_getline_info (1 samples, 0.16%)</title><rect x="96.8954%" y="613" width="0.1634%" height="15" fill="rgb(224,200,8)"/><text x="97.1454%" y="623.50"></text></g><g><title>__GI__IO_default_uflow (1 samples, 0.16%)</title><rect x="96.8954%" y="597" width="0.1634%" height="15" fill="rgb(217,61,36)"/><text x="97.1454%" y="607.50"></text></g><g><title>__GI__IO_file_underflow (1 samples, 0.16%)</title><rect x="96.8954%" y="581" width="0.1634%" height="15" fill="rgb(206,35,45)"/><text x="97.1454%" y="591.50"></text></g><g><title>__GI___read (1 samples, 0.16%)</title><rect x="96.8954%" y="565" width="0.1634%" height="15" fill="rgb(217,65,33)"/><text x="97.1454%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.16%)</title><rect x="96.8954%" y="549" width="0.1634%" height="15" fill="rgb(222,158,48)"/><text x="97.1454%" y="559.50"></text></g><g><title>do_syscall_64 (1 samples, 0.16%)</title><rect x="96.8954%" y="533" width="0.1634%" height="15" fill="rgb(254,2,54)"/><text x="97.1454%" y="543.50"></text></g><g><title>ksys_read (1 samples, 0.16%)</title><rect x="96.8954%" y="517" width="0.1634%" height="15" fill="rgb(250,143,38)"/><text x="97.1454%" y="527.50"></text></g><g><title>vfs_read (1 samples, 0.16%)</title><rect x="96.8954%" y="501" width="0.1634%" height="15" fill="rgb(248,25,0)"/><text x="97.1454%" y="511.50"></text></g><g><title>seq_read (1 samples, 0.16%)</title><rect x="96.8954%" y="485" width="0.1634%" height="15" fill="rgb(206,152,27)"/><text x="97.1454%" y="495.50"></text></g><g><title>show_cpuinfo (1 samples, 0.16%)</title><rect x="96.8954%" y="469" width="0.1634%" height="15" fill="rgb(240,77,30)"/><text x="97.1454%" y="479.50"></text></g><g><title>seq_printf (1 samples, 0.16%)</title><rect x="96.8954%" y="453" width="0.1634%" height="15" fill="rgb(231,5,3)"/><text x="97.1454%" y="463.50"></text></g><g><title>vsnprintf (1 samples, 0.16%)</title><rect x="96.8954%" y="437" width="0.1634%" height="15" fill="rgb(207,226,32)"/><text x="97.1454%" y="447.50"></text></g><g><title>format_decode (1 samples, 0.16%)</title><rect x="96.8954%" y="421" width="0.1634%" height="15" fill="rgb(222,207,47)"/><text x="97.1454%" y="431.50"></text></g><g><title>&lt;mysql::conn::query_result::SetIteratorState as core::convert::From&lt;mysql::conn::query_result::Or&lt;alloc::vec::Vec&lt;mysql_common::packets::Column&gt;,mysql_common::packets::OkPacket&gt;&gt;&gt;::from (1 samples, 0.16%)</title><rect x="97.0588%" y="677" width="0.1634%" height="15" fill="rgb(229,115,45)"/><text x="97.3088%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.16%)</title><rect x="97.2222%" y="677" width="0.1634%" height="15" fill="rgb(224,191,6)"/><text x="97.4722%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.16%)</title><rect x="97.7124%" y="661" width="0.1634%" height="15" fill="rgb(230,227,24)"/><text x="97.9624%" y="671.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (6 samples, 0.98%)</title><rect x="97.0588%" y="693" width="0.9804%" height="15" fill="rgb(228,80,19)"/><text x="97.3088%" y="703.50"></text></g><g><title>mysql::conn::Conn::_query (4 samples, 0.65%)</title><rect x="97.3856%" y="677" width="0.6536%" height="15" fill="rgb(247,229,0)"/><text x="97.6356%" y="687.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.16%)</title><rect x="97.8758%" y="661" width="0.1634%" height="15" fill="rgb(237,194,15)"/><text x="98.1258%" y="671.50"></text></g><g><title>__libc_start_main (251 samples, 41.01%)</title><rect x="57.1895%" y="853" width="41.0131%" height="15" fill="rgb(219,203,20)"/><text x="57.4395%" y="863.50">__libc_start_main</text></g><g><title>main (251 samples, 41.01%)</title><rect x="57.1895%" y="837" width="41.0131%" height="15" fill="rgb(234,128,8)"/><text x="57.4395%" y="847.50">main</text></g><g><title>std::rt::lang_start_internal (251 samples, 41.01%)</title><rect x="57.1895%" y="821" width="41.0131%" height="15" fill="rgb(248,202,8)"/><text x="57.4395%" y="831.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (251 samples, 41.01%)</title><rect x="57.1895%" y="805" width="41.0131%" height="15" fill="rgb(206,104,37)"/><text x="57.4395%" y="815.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (251 samples, 41.01%)</title><rect x="57.1895%" y="789" width="41.0131%" height="15" fill="rgb(223,8,27)"/><text x="57.4395%" y="799.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (251 samples, 41.01%)</title><rect x="57.1895%" y="773" width="41.0131%" height="15" fill="rgb(216,217,28)"/><text x="57.4395%" y="783.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (251 samples, 41.01%)</title><rect x="57.1895%" y="757" width="41.0131%" height="15" fill="rgb(249,199,1)"/><text x="57.4395%" y="767.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; fo..</text></g><g><title>std::rt::lang_start::_{{closure}} (251 samples, 41.01%)</title><rect x="57.1895%" y="741" width="41.0131%" height="15" fill="rgb(240,85,17)"/><text x="57.4395%" y="751.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (251 samples, 41.01%)</title><rect x="57.1895%" y="725" width="41.0131%" height="15" fill="rgb(206,108,45)"/><text x="57.4395%" y="735.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>lobsters::main (251 samples, 41.01%)</title><rect x="57.1895%" y="709" width="41.0131%" height="15" fill="rgb(245,210,41)"/><text x="57.4395%" y="719.50">lobsters::main</text></g><g><title>std::net::each_addr (1 samples, 0.16%)</title><rect x="98.0392%" y="693" width="0.1634%" height="15" fill="rgb(206,13,37)"/><text x="98.2892%" y="703.50"></text></g><g><title>std::sys_common::net::TcpListener::bind (1 samples, 0.16%)</title><rect x="98.0392%" y="677" width="0.1634%" height="15" fill="rgb(250,61,18)"/><text x="98.2892%" y="687.50"></text></g><g><title>std::sys::unix::net::Socket::new (1 samples, 0.16%)</title><rect x="98.0392%" y="661" width="0.1634%" height="15" fill="rgb(235,172,48)"/><text x="98.2892%" y="671.50"></text></g><g><title>__GI___socket (1 samples, 0.16%)</title><rect x="98.0392%" y="645" width="0.1634%" height="15" fill="rgb(249,201,17)"/><text x="98.2892%" y="655.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.16%)</title><rect x="98.0392%" y="629" width="0.1634%" height="15" fill="rgb(219,208,6)"/><text x="98.2892%" y="639.50"></text></g><g><title>do_syscall_64 (1 samples, 0.16%)</title><rect x="98.0392%" y="613" width="0.1634%" height="15" fill="rgb(248,31,23)"/><text x="98.2892%" y="623.50"></text></g><g><title>__x64_sys_socket (1 samples, 0.16%)</title><rect x="98.0392%" y="597" width="0.1634%" height="15" fill="rgb(245,15,42)"/><text x="98.2892%" y="607.50"></text></g><g><title>__sys_socket (1 samples, 0.16%)</title><rect x="98.0392%" y="581" width="0.1634%" height="15" fill="rgb(222,217,39)"/><text x="98.2892%" y="591.50"></text></g><g><title>sock_alloc_file (1 samples, 0.16%)</title><rect x="98.0392%" y="565" width="0.1634%" height="15" fill="rgb(210,219,27)"/><text x="98.2892%" y="575.50"></text></g><g><title>alloc_file_pseudo (1 samples, 0.16%)</title><rect x="98.0392%" y="549" width="0.1634%" height="15" fill="rgb(252,166,36)"/><text x="98.2892%" y="559.50"></text></g><g><title>d_alloc_pseudo (1 samples, 0.16%)</title><rect x="98.0392%" y="533" width="0.1634%" height="15" fill="rgb(245,132,34)"/><text x="98.2892%" y="543.50"></text></g><g><title>_start (252 samples, 41.18%)</title><rect x="57.1895%" y="869" width="41.1765%" height="15" fill="rgb(236,54,3)"/><text x="57.4395%" y="879.50">_start</text></g><g><title>_dl_start (1 samples, 0.16%)</title><rect x="98.2026%" y="853" width="0.1634%" height="15" fill="rgb(241,173,43)"/><text x="98.4526%" y="863.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.16%)</title><rect x="98.2026%" y="837" width="0.1634%" height="15" fill="rgb(215,190,9)"/><text x="98.4526%" y="847.50"></text></g><g><title>dl_main (1 samples, 0.16%)</title><rect x="98.2026%" y="821" width="0.1634%" height="15" fill="rgb(242,101,16)"/><text x="98.4526%" y="831.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.16%)</title><rect x="98.2026%" y="805" width="0.1634%" height="15" fill="rgb(223,190,21)"/><text x="98.4526%" y="815.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.16%)</title><rect x="98.2026%" y="789" width="0.1634%" height="15" fill="rgb(215,228,25)"/><text x="98.4526%" y="799.50"></text></g><g><title>openaux (1 samples, 0.16%)</title><rect x="98.2026%" y="773" width="0.1634%" height="15" fill="rgb(225,36,22)"/><text x="98.4526%" y="783.50"></text></g><g><title>_dl_map_object (1 samples, 0.16%)</title><rect x="98.2026%" y="757" width="0.1634%" height="15" fill="rgb(251,106,46)"/><text x="98.4526%" y="767.50"></text></g><g><title>open_verify.constprop.0 (1 samples, 0.16%)</title><rect x="98.2026%" y="741" width="0.1634%" height="15" fill="rgb(208,90,1)"/><text x="98.4526%" y="751.50"></text></g><g><title>__GI___open_nocancel (1 samples, 0.16%)</title><rect x="98.2026%" y="725" width="0.1634%" height="15" fill="rgb(243,10,4)"/><text x="98.4526%" y="735.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.16%)</title><rect x="98.2026%" y="709" width="0.1634%" height="15" fill="rgb(212,137,27)"/><text x="98.4526%" y="719.50"></text></g><g><title>do_syscall_64 (1 samples, 0.16%)</title><rect x="98.2026%" y="693" width="0.1634%" height="15" fill="rgb(231,220,49)"/><text x="98.4526%" y="703.50"></text></g><g><title>__x64_sys_openat (1 samples, 0.16%)</title><rect x="98.2026%" y="677" width="0.1634%" height="15" fill="rgb(237,96,20)"/><text x="98.4526%" y="687.50"></text></g><g><title>do_sys_openat2 (1 samples, 0.16%)</title><rect x="98.2026%" y="661" width="0.1634%" height="15" fill="rgb(239,229,30)"/><text x="98.4526%" y="671.50"></text></g><g><title>getname_flags.part.0 (1 samples, 0.16%)</title><rect x="98.2026%" y="645" width="0.1634%" height="15" fill="rgb(219,65,33)"/><text x="98.4526%" y="655.50"></text></g><g><title>kmem_cache_alloc (1 samples, 0.16%)</title><rect x="98.2026%" y="629" width="0.1634%" height="15" fill="rgb(243,134,7)"/><text x="98.4526%" y="639.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.16%)</title><rect x="98.5294%" y="757" width="0.1634%" height="15" fill="rgb(216,177,54)"/><text x="98.7794%" y="767.50"></text></g><g><title>free_pages_and_swap_cache (1 samples, 0.16%)</title><rect x="98.5294%" y="741" width="0.1634%" height="15" fill="rgb(211,160,20)"/><text x="98.7794%" y="751.50"></text></g><g><title>[vmlinux] (2 samples, 0.33%)</title><rect x="98.5294%" y="837" width="0.3268%" height="15" fill="rgb(239,85,39)"/><text x="98.7794%" y="847.50"></text></g><g><title>do_group_exit (2 samples, 0.33%)</title><rect x="98.5294%" y="821" width="0.3268%" height="15" fill="rgb(232,125,22)"/><text x="98.7794%" y="831.50"></text></g><g><title>do_exit (2 samples, 0.33%)</title><rect x="98.5294%" y="805" width="0.3268%" height="15" fill="rgb(244,57,34)"/><text x="98.7794%" y="815.50"></text></g><g><title>mmput (2 samples, 0.33%)</title><rect x="98.5294%" y="789" width="0.3268%" height="15" fill="rgb(214,203,32)"/><text x="98.7794%" y="799.50"></text></g><g><title>exit_mmap (2 samples, 0.33%)</title><rect x="98.5294%" y="773" width="0.3268%" height="15" fill="rgb(207,58,43)"/><text x="98.7794%" y="783.50"></text></g><g><title>unmap_vmas (1 samples, 0.16%)</title><rect x="98.6928%" y="757" width="0.1634%" height="15" fill="rgb(215,193,15)"/><text x="98.9428%" y="767.50"></text></g><g><title>unmap_page_range (1 samples, 0.16%)</title><rect x="98.6928%" y="741" width="0.1634%" height="15" fill="rgb(232,15,44)"/><text x="98.9428%" y="751.50"></text></g><g><title>mark_page_accessed (1 samples, 0.16%)</title><rect x="98.6928%" y="725" width="0.1634%" height="15" fill="rgb(212,3,48)"/><text x="98.9428%" y="735.50"></text></g><g><title>lobsters (606 samples, 99.02%)</title><rect x="0.0000%" y="885" width="99.0196%" height="15" fill="rgb(218,128,7)"/><text x="0.2500%" y="895.50">lobsters</text></g><g><title>entry_SYSCALL_64 (4 samples, 0.65%)</title><rect x="98.3660%" y="869" width="0.6536%" height="15" fill="rgb(226,216,39)"/><text x="98.6160%" y="879.50"></text></g><g><title>do_syscall_64 (3 samples, 0.49%)</title><rect x="98.5294%" y="853" width="0.4902%" height="15" fill="rgb(243,47,51)"/><text x="98.7794%" y="863.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.16%)</title><rect x="98.8562%" y="837" width="0.1634%" height="15" fill="rgb(241,183,40)"/><text x="99.1062%" y="847.50"></text></g><g><title>do_execve (1 samples, 0.16%)</title><rect x="98.8562%" y="821" width="0.1634%" height="15" fill="rgb(231,217,32)"/><text x="99.1062%" y="831.50"></text></g><g><title>__do_execve_file (1 samples, 0.16%)</title><rect x="98.8562%" y="805" width="0.1634%" height="15" fill="rgb(229,61,38)"/><text x="99.1062%" y="815.50"></text></g><g><title>search_binary_handler.part.0 (1 samples, 0.16%)</title><rect x="98.8562%" y="789" width="0.1634%" height="15" fill="rgb(225,210,5)"/><text x="99.1062%" y="799.50"></text></g><g><title>load_elf_binary (1 samples, 0.16%)</title><rect x="98.8562%" y="773" width="0.1634%" height="15" fill="rgb(231,79,45)"/><text x="99.1062%" y="783.50"></text></g><g><title>elf_map (1 samples, 0.16%)</title><rect x="98.8562%" y="757" width="0.1634%" height="15" fill="rgb(224,100,7)"/><text x="99.1062%" y="767.50"></text></g><g><title>vm_mmap_pgoff (1 samples, 0.16%)</title><rect x="98.8562%" y="741" width="0.1634%" height="15" fill="rgb(241,198,18)"/><text x="99.1062%" y="751.50"></text></g><g><title>do_mmap (1 samples, 0.16%)</title><rect x="98.8562%" y="725" width="0.1634%" height="15" fill="rgb(252,97,53)"/><text x="99.1062%" y="735.50"></text></g><g><title>mmap_region (1 samples, 0.16%)</title><rect x="98.8562%" y="709" width="0.1634%" height="15" fill="rgb(220,88,7)"/><text x="99.1062%" y="719.50"></text></g><g><title>perf_event_mmap (1 samples, 0.16%)</title><rect x="98.8562%" y="693" width="0.1634%" height="15" fill="rgb(213,176,14)"/><text x="99.1062%" y="703.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.16%)</title><rect x="98.8562%" y="677" width="0.1634%" height="15" fill="rgb(246,73,7)"/><text x="99.1062%" y="687.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.16%)</title><rect x="98.8562%" y="661" width="0.1634%" height="15" fill="rgb(245,64,36)"/><text x="99.1062%" y="671.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.16%)</title><rect x="98.8562%" y="645" width="0.1634%" height="15" fill="rgb(245,80,10)"/><text x="99.1062%" y="655.50"></text></g><g><title>all (612 samples, 100%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(232,107,50)"/><text x="0.2500%" y="911.50"></text></g><g><title>perf (6 samples, 0.98%)</title><rect x="99.0196%" y="885" width="0.9804%" height="15" fill="rgb(253,3,0)"/><text x="99.2696%" y="895.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.98%)</title><rect x="99.0196%" y="869" width="0.9804%" height="15" fill="rgb(212,99,53)"/><text x="99.2696%" y="879.50"></text></g><g><title>do_syscall_64 (6 samples, 0.98%)</title><rect x="99.0196%" y="853" width="0.9804%" height="15" fill="rgb(249,111,54)"/><text x="99.2696%" y="863.50"></text></g><g><title>__x64_sys_execve (6 samples, 0.98%)</title><rect x="99.0196%" y="837" width="0.9804%" height="15" fill="rgb(249,55,30)"/><text x="99.2696%" y="847.50"></text></g><g><title>do_execve (6 samples, 0.98%)</title><rect x="99.0196%" y="821" width="0.9804%" height="15" fill="rgb(237,47,42)"/><text x="99.2696%" y="831.50"></text></g><g><title>__do_execve_file (6 samples, 0.98%)</title><rect x="99.0196%" y="805" width="0.9804%" height="15" fill="rgb(211,20,18)"/><text x="99.2696%" y="815.50"></text></g><g><title>search_binary_handler.part.0 (6 samples, 0.98%)</title><rect x="99.0196%" y="789" width="0.9804%" height="15" fill="rgb(231,203,46)"/><text x="99.2696%" y="799.50"></text></g><g><title>load_elf_binary (6 samples, 0.98%)</title><rect x="99.0196%" y="773" width="0.9804%" height="15" fill="rgb(237,142,3)"/><text x="99.2696%" y="783.50"></text></g><g><title>setup_new_exec (6 samples, 0.98%)</title><rect x="99.0196%" y="757" width="0.9804%" height="15" fill="rgb(241,107,1)"/><text x="99.2696%" y="767.50"></text></g><g><title>perf_event_exec (6 samples, 0.98%)</title><rect x="99.0196%" y="741" width="0.9804%" height="15" fill="rgb(229,83,13)"/><text x="99.2696%" y="751.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.82%)</title><rect x="99.1830%" y="725" width="0.8170%" height="15" fill="rgb(241,91,40)"/><text x="99.4330%" y="735.50"></text></g><g><title>native_write_msr (5 samples, 0.82%)</title><rect x="99.1830%" y="709" width="0.8170%" height="15" fill="rgb(225,3,45)"/><text x="99.4330%" y="719.50"></text></g></svg></svg>