<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="998" onload="init(evt)" viewBox="0 0 1200 998" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="998" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="981.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="981.00"> </text><svg id="frames" x="10" width="1180"><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.15%)</title><rect x="0.0000%" y="901" width="0.1497%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="911.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (2 samples, 0.30%)</title><rect x="0.1497%" y="901" width="0.2994%" height="15" fill="rgb(217,0,24)"/><text x="0.3997%" y="911.50"></text></g><g><title>std::sys_common::net::TcpStream::read (2 samples, 0.30%)</title><rect x="0.1497%" y="885" width="0.2994%" height="15" fill="rgb(221,193,54)"/><text x="0.3997%" y="895.50"></text></g><g><title>std::sys::unix::net::Socket::read (2 samples, 0.30%)</title><rect x="0.1497%" y="869" width="0.2994%" height="15" fill="rgb(248,212,6)"/><text x="0.3997%" y="879.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (2 samples, 0.30%)</title><rect x="0.1497%" y="853" width="0.2994%" height="15" fill="rgb(208,68,35)"/><text x="0.3997%" y="863.50"></text></g><g><title>__libc_recv (2 samples, 0.30%)</title><rect x="0.1497%" y="837" width="0.2994%" height="15" fill="rgb(232,128,0)"/><text x="0.3997%" y="847.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.30%)</title><rect x="0.1497%" y="821" width="0.2994%" height="15" fill="rgb(207,160,47)"/><text x="0.3997%" y="831.50"></text></g><g><title>_int_free (1 samples, 0.15%)</title><rect x="0.4491%" y="901" width="0.1497%" height="15" fill="rgb(228,23,34)"/><text x="0.6991%" y="911.50"></text></g><g><title>[[heap]] (6 samples, 0.90%)</title><rect x="0.0000%" y="917" width="0.8982%" height="15" fill="rgb(218,30,26)"/><text x="0.2500%" y="927.50"></text></g><g><title>hwloc_linux_set_tid_cpubind (2 samples, 0.30%)</title><rect x="0.5988%" y="901" width="0.2994%" height="15" fill="rgb(220,122,19)"/><text x="0.8488%" y="911.50"></text></g><g><title>[[stack]] (1 samples, 0.15%)</title><rect x="0.8982%" y="917" width="0.1497%" height="15" fill="rgb(250,228,42)"/><text x="1.1482%" y="927.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (1 samples, 0.15%)</title><rect x="0.8982%" y="901" width="0.1497%" height="15" fill="rgb(240,193,28)"/><text x="1.1482%" y="911.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.15%)</title><rect x="1.0479%" y="901" width="0.1497%" height="15" fill="rgb(216,20,37)"/><text x="1.2979%" y="911.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.15%)</title><rect x="1.1976%" y="901" width="0.1497%" height="15" fill="rgb(206,188,39)"/><text x="1.4476%" y="911.50"></text></g><g><title>std::sys_common::net::TcpStream::read (1 samples, 0.15%)</title><rect x="1.1976%" y="885" width="0.1497%" height="15" fill="rgb(217,207,13)"/><text x="1.4476%" y="895.50"></text></g><g><title>std::sys::unix::net::Socket::read (1 samples, 0.15%)</title><rect x="1.1976%" y="869" width="0.1497%" height="15" fill="rgb(231,73,38)"/><text x="1.4476%" y="879.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (1 samples, 0.15%)</title><rect x="1.1976%" y="853" width="0.1497%" height="15" fill="rgb(225,20,46)"/><text x="1.4476%" y="863.50"></text></g><g><title>__libc_recv (1 samples, 0.15%)</title><rect x="1.1976%" y="837" width="0.1497%" height="15" fill="rgb(210,31,41)"/><text x="1.4476%" y="847.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.15%)</title><rect x="1.1976%" y="821" width="0.1497%" height="15" fill="rgb(221,200,47)"/><text x="1.4476%" y="831.50"></text></g><g><title>_int_free (1 samples, 0.15%)</title><rect x="1.3473%" y="901" width="0.1497%" height="15" fill="rgb(226,26,5)"/><text x="1.5973%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="1.4970%" y="901" width="0.1497%" height="15" fill="rgb(249,33,26)"/><text x="1.7470%" y="911.50"></text></g><g><title>decor::helpers::answer_rows (1 samples, 0.15%)</title><rect x="1.6467%" y="901" width="0.1497%" height="15" fill="rgb(235,183,28)"/><text x="1.8967%" y="911.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.15%)</title><rect x="1.7964%" y="901" width="0.1497%" height="15" fill="rgb(221,5,38)"/><text x="2.0464%" y="911.50"></text></g><g><title>[anon] (7 samples, 1.05%)</title><rect x="1.0479%" y="917" width="1.0479%" height="15" fill="rgb(247,18,42)"/><text x="1.2979%" y="927.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (1 samples, 0.15%)</title><rect x="1.9461%" y="901" width="0.1497%" height="15" fill="rgb(241,131,45)"/><text x="2.1961%" y="911.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.15%)</title><rect x="2.0958%" y="917" width="0.1497%" height="15" fill="rgb(249,31,29)"/><text x="2.3458%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="2.0958%" y="901" width="0.1497%" height="15" fill="rgb(225,111,53)"/><text x="2.3458%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="2.2455%" y="821" width="0.1497%" height="15" fill="rgb(238,160,17)"/><text x="2.4955%" y="831.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.15%)</title><rect x="2.2455%" y="805" width="0.1497%" height="15" fill="rgb(214,148,48)"/><text x="2.4955%" y="815.50"></text></g><g><title>_int_realloc (1 samples, 0.15%)</title><rect x="2.2455%" y="789" width="0.1497%" height="15" fill="rgb(232,36,49)"/><text x="2.4955%" y="799.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="2.2455%" y="773" width="0.1497%" height="15" fill="rgb(209,103,24)"/><text x="2.4955%" y="783.50"></text></g><g><title>sysmalloc (1 samples, 0.15%)</title><rect x="2.2455%" y="757" width="0.1497%" height="15" fill="rgb(229,88,8)"/><text x="2.4955%" y="767.50"></text></g><g><title>__GI___mprotect (1 samples, 0.15%)</title><rect x="2.2455%" y="741" width="0.1497%" height="15" fill="rgb(213,181,19)"/><text x="2.4955%" y="751.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.15%)</title><rect x="2.2455%" y="725" width="0.1497%" height="15" fill="rgb(254,191,54)"/><text x="2.4955%" y="735.50"></text></g><g><title>do_syscall_64 (1 samples, 0.15%)</title><rect x="2.2455%" y="709" width="0.1497%" height="15" fill="rgb(241,83,37)"/><text x="2.4955%" y="719.50"></text></g><g><title>__x64_sys_mprotect (1 samples, 0.15%)</title><rect x="2.2455%" y="693" width="0.1497%" height="15" fill="rgb(233,36,39)"/><text x="2.4955%" y="703.50"></text></g><g><title>do_mprotect_pkey (1 samples, 0.15%)</title><rect x="2.2455%" y="677" width="0.1497%" height="15" fill="rgb(226,3,54)"/><text x="2.4955%" y="687.50"></text></g><g><title>mprotect_fixup (1 samples, 0.15%)</title><rect x="2.2455%" y="661" width="0.1497%" height="15" fill="rgb(245,192,40)"/><text x="2.4955%" y="671.50"></text></g><g><title>perf_event_mmap (1 samples, 0.15%)</title><rect x="2.2455%" y="645" width="0.1497%" height="15" fill="rgb(238,167,29)"/><text x="2.4955%" y="655.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.15%)</title><rect x="2.2455%" y="629" width="0.1497%" height="15" fill="rgb(232,182,51)"/><text x="2.4955%" y="639.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.15%)</title><rect x="2.2455%" y="613" width="0.1497%" height="15" fill="rgb(231,60,39)"/><text x="2.4955%" y="623.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.15%)</title><rect x="2.2455%" y="597" width="0.1497%" height="15" fill="rgb(208,69,12)"/><text x="2.4955%" y="607.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (2 samples, 0.30%)</title><rect x="2.2455%" y="901" width="0.2994%" height="15" fill="rgb(235,93,37)"/><text x="2.4955%" y="911.50"></text></g><g><title>decor::Shim::create_schema (2 samples, 0.30%)</title><rect x="2.2455%" y="885" width="0.2994%" height="15" fill="rgb(213,116,39)"/><text x="2.4955%" y="895.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (2 samples, 0.30%)</title><rect x="2.2455%" y="869" width="0.2994%" height="15" fill="rgb(222,207,29)"/><text x="2.4955%" y="879.50"></text></g><g><title>sql_parser::parser::parse_statements (2 samples, 0.30%)</title><rect x="2.2455%" y="853" width="0.2994%" height="15" fill="rgb(206,96,30)"/><text x="2.4955%" y="863.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (2 samples, 0.30%)</title><rect x="2.2455%" y="837" width="0.2994%" height="15" fill="rgb(218,138,4)"/><text x="2.4955%" y="847.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (1 samples, 0.15%)</title><rect x="2.3952%" y="821" width="0.1497%" height="15" fill="rgb(250,191,14)"/><text x="2.6452%" y="831.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (1 samples, 0.15%)</title><rect x="2.3952%" y="805" width="0.1497%" height="15" fill="rgb(239,60,40)"/><text x="2.6452%" y="815.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.15%)</title><rect x="2.5449%" y="741" width="0.1497%" height="15" fill="rgb(206,27,48)"/><text x="2.7949%" y="751.50"></text></g><g><title>hwloc_topology_destroy (1 samples, 0.15%)</title><rect x="2.5449%" y="725" width="0.1497%" height="15" fill="rgb(225,35,8)"/><text x="2.7949%" y="735.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.15%)</title><rect x="2.5449%" y="709" width="0.1497%" height="15" fill="rgb(250,213,24)"/><text x="2.7949%" y="719.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.15%)</title><rect x="2.5449%" y="693" width="0.1497%" height="15" fill="rgb(247,123,22)"/><text x="2.7949%" y="703.50"></text></g><g><title>dlclose (1 samples, 0.15%)</title><rect x="2.5449%" y="677" width="0.1497%" height="15" fill="rgb(231,138,38)"/><text x="2.7949%" y="687.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.15%)</title><rect x="2.5449%" y="661" width="0.1497%" height="15" fill="rgb(231,145,46)"/><text x="2.7949%" y="671.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.15%)</title><rect x="2.5449%" y="645" width="0.1497%" height="15" fill="rgb(251,118,11)"/><text x="2.7949%" y="655.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.15%)</title><rect x="2.5449%" y="629" width="0.1497%" height="15" fill="rgb(217,147,25)"/><text x="2.7949%" y="639.50"></text></g><g><title>_dl_close (1 samples, 0.15%)</title><rect x="2.5449%" y="613" width="0.1497%" height="15" fill="rgb(247,81,37)"/><text x="2.7949%" y="623.50"></text></g><g><title>_dl_close_worker (1 samples, 0.15%)</title><rect x="2.5449%" y="597" width="0.1497%" height="15" fill="rgb(209,12,38)"/><text x="2.7949%" y="607.50"></text></g><g><title>_dl_unmap (1 samples, 0.15%)</title><rect x="2.5449%" y="581" width="0.1497%" height="15" fill="rgb(227,1,9)"/><text x="2.7949%" y="591.50"></text></g><g><title>munmap (1 samples, 0.15%)</title><rect x="2.5449%" y="565" width="0.1497%" height="15" fill="rgb(248,47,43)"/><text x="2.7949%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.15%)</title><rect x="2.5449%" y="549" width="0.1497%" height="15" fill="rgb(221,10,30)"/><text x="2.7949%" y="559.50"></text></g><g><title>do_syscall_64 (1 samples, 0.15%)</title><rect x="2.5449%" y="533" width="0.1497%" height="15" fill="rgb(210,229,1)"/><text x="2.7949%" y="543.50"></text></g><g><title>__x64_sys_munmap (1 samples, 0.15%)</title><rect x="2.5449%" y="517" width="0.1497%" height="15" fill="rgb(222,148,37)"/><text x="2.7949%" y="527.50"></text></g><g><title>__vm_munmap (1 samples, 0.15%)</title><rect x="2.5449%" y="501" width="0.1497%" height="15" fill="rgb(234,67,33)"/><text x="2.7949%" y="511.50"></text></g><g><title>__do_munmap (1 samples, 0.15%)</title><rect x="2.5449%" y="485" width="0.1497%" height="15" fill="rgb(247,98,35)"/><text x="2.7949%" y="495.50"></text></g><g><title>unmap_region (1 samples, 0.15%)</title><rect x="2.5449%" y="469" width="0.1497%" height="15" fill="rgb(247,138,52)"/><text x="2.7949%" y="479.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.15%)</title><rect x="2.5449%" y="453" width="0.1497%" height="15" fill="rgb(213,79,30)"/><text x="2.7949%" y="463.50"></text></g><g><title>flush_tlb_mm_range (1 samples, 0.15%)</title><rect x="2.5449%" y="437" width="0.1497%" height="15" fill="rgb(246,177,23)"/><text x="2.7949%" y="447.50"></text></g><g><title>flush_tlb_func_common.constprop.0 (1 samples, 0.15%)</title><rect x="2.5449%" y="421" width="0.1497%" height="15" fill="rgb(230,62,27)"/><text x="2.7949%" y="431.50"></text></g><g><title>native_flush_tlb_one_user (1 samples, 0.15%)</title><rect x="2.5449%" y="405" width="0.1497%" height="15" fill="rgb(216,154,8)"/><text x="2.7949%" y="415.50"></text></g><g><title>hwloc::Topology::new (1 samples, 0.15%)</title><rect x="2.6946%" y="741" width="0.1497%" height="15" fill="rgb(244,35,45)"/><text x="2.9446%" y="751.50"></text></g><g><title>hwloc_topology_load (1 samples, 0.15%)</title><rect x="2.6946%" y="725" width="0.1497%" height="15" fill="rgb(251,115,12)"/><text x="2.9446%" y="735.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.15%)</title><rect x="2.6946%" y="709" width="0.1497%" height="15" fill="rgb(240,54,50)"/><text x="2.9446%" y="719.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.15%)</title><rect x="2.6946%" y="693" width="0.1497%" height="15" fill="rgb(233,84,52)"/><text x="2.9446%" y="703.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.15%)</title><rect x="2.6946%" y="677" width="0.1497%" height="15" fill="rgb(207,117,47)"/><text x="2.9446%" y="687.50"></text></g><g><title>__libc_read (1 samples, 0.15%)</title><rect x="2.6946%" y="661" width="0.1497%" height="15" fill="rgb(249,43,39)"/><text x="2.9446%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.15%)</title><rect x="2.6946%" y="645" width="0.1497%" height="15" fill="rgb(209,38,44)"/><text x="2.9446%" y="655.50"></text></g><g><title>do_syscall_64 (1 samples, 0.15%)</title><rect x="2.6946%" y="629" width="0.1497%" height="15" fill="rgb(236,212,23)"/><text x="2.9446%" y="639.50"></text></g><g><title>ksys_read (1 samples, 0.15%)</title><rect x="2.6946%" y="613" width="0.1497%" height="15" fill="rgb(242,79,21)"/><text x="2.9446%" y="623.50"></text></g><g><title>vfs_read (1 samples, 0.15%)</title><rect x="2.6946%" y="597" width="0.1497%" height="15" fill="rgb(211,96,35)"/><text x="2.9446%" y="607.50"></text></g><g><title>seq_read (1 samples, 0.15%)</title><rect x="2.6946%" y="581" width="0.1497%" height="15" fill="rgb(253,215,40)"/><text x="2.9446%" y="591.50"></text></g><g><title>sysfs_kf_seq_show (1 samples, 0.15%)</title><rect x="2.6946%" y="565" width="0.1497%" height="15" fill="rgb(211,81,21)"/><text x="2.9446%" y="575.50"></text></g><g><title>__pthread_disable_asynccancel (1 samples, 0.15%)</title><rect x="2.9940%" y="629" width="0.1497%" height="15" fill="rgb(208,190,38)"/><text x="3.2440%" y="639.50"></text></g><g><title>__x86_indirect_thunk_rax (1 samples, 0.15%)</title><rect x="3.1437%" y="629" width="0.1497%" height="15" fill="rgb(235,213,38)"/><text x="3.3937%" y="639.50"></text></g><g><title>release_sock (1 samples, 0.15%)</title><rect x="3.7425%" y="533" width="0.1497%" height="15" fill="rgb(237,122,38)"/><text x="3.9925%" y="543.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.15%)</title><rect x="3.7425%" y="517" width="0.1497%" height="15" fill="rgb(244,218,35)"/><text x="3.9925%" y="527.50"></text></g><g><title>__ip_local_out (1 samples, 0.15%)</title><rect x="5.9880%" y="453" width="0.1497%" height="15" fill="rgb(240,68,47)"/><text x="6.2380%" y="463.50"></text></g><g><title>ip_send_check (1 samples, 0.15%)</title><rect x="5.9880%" y="437" width="0.1497%" height="15" fill="rgb(210,16,53)"/><text x="6.2380%" y="447.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.15%)</title><rect x="6.1377%" y="453" width="0.1497%" height="15" fill="rgb(235,124,12)"/><text x="6.3877%" y="463.50"></text></g><g><title>__sk_dst_check (1 samples, 0.15%)</title><rect x="6.2874%" y="453" width="0.1497%" height="15" fill="rgb(224,169,11)"/><text x="6.5374%" y="463.50"></text></g><g><title>ipv4_dst_check (1 samples, 0.15%)</title><rect x="6.2874%" y="437" width="0.1497%" height="15" fill="rgb(250,166,2)"/><text x="6.5374%" y="447.50"></text></g><g><title>__ip_finish_output (3 samples, 0.45%)</title><rect x="6.5868%" y="437" width="0.4491%" height="15" fill="rgb(242,216,29)"/><text x="6.8368%" y="447.50"></text></g><g><title>enqueue_to_backlog (1 samples, 0.15%)</title><rect x="7.6347%" y="341" width="0.1497%" height="15" fill="rgb(230,116,27)"/><text x="7.8847%" y="351.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.15%)</title><rect x="7.6347%" y="325" width="0.1497%" height="15" fill="rgb(228,99,48)"/><text x="7.8847%" y="335.50"></text></g><g><title>dev_hard_start_xmit (3 samples, 0.45%)</title><rect x="7.4850%" y="405" width="0.4491%" height="15" fill="rgb(253,11,6)"/><text x="7.7350%" y="415.50"></text></g><g><title>loopback_xmit (3 samples, 0.45%)</title><rect x="7.4850%" y="389" width="0.4491%" height="15" fill="rgb(247,143,39)"/><text x="7.7350%" y="399.50"></text></g><g><title>netif_rx (3 samples, 0.45%)</title><rect x="7.4850%" y="373" width="0.4491%" height="15" fill="rgb(236,97,10)"/><text x="7.7350%" y="383.50"></text></g><g><title>netif_rx_internal (2 samples, 0.30%)</title><rect x="7.6347%" y="357" width="0.2994%" height="15" fill="rgb(233,208,19)"/><text x="7.8847%" y="367.50"></text></g><g><title>ktime_get_with_offset (1 samples, 0.15%)</title><rect x="7.7844%" y="341" width="0.1497%" height="15" fill="rgb(216,164,2)"/><text x="8.0344%" y="351.50"></text></g><g><title>__dev_queue_xmit (4 samples, 0.60%)</title><rect x="7.4850%" y="421" width="0.5988%" height="15" fill="rgb(220,129,5)"/><text x="7.7350%" y="431.50"></text></g><g><title>validate_xmit_skb (1 samples, 0.15%)</title><rect x="7.9341%" y="405" width="0.1497%" height="15" fill="rgb(242,17,10)"/><text x="8.1841%" y="415.50"></text></g><g><title>__netif_receive_skb_core (2 samples, 0.30%)</title><rect x="8.0838%" y="309" width="0.2994%" height="15" fill="rgb(242,107,0)"/><text x="8.3338%" y="319.50"></text></g><g><title>raw_local_deliver (1 samples, 0.15%)</title><rect x="8.5329%" y="245" width="0.1497%" height="15" fill="rgb(251,28,31)"/><text x="8.7829%" y="255.50"></text></g><g><title>__inet_lookup_established (1 samples, 0.15%)</title><rect x="8.6826%" y="229" width="0.1497%" height="15" fill="rgb(233,223,10)"/><text x="8.9326%" y="239.50"></text></g><g><title>inet_ehashfn (1 samples, 0.15%)</title><rect x="8.6826%" y="213" width="0.1497%" height="15" fill="rgb(215,21,27)"/><text x="8.9326%" y="223.50"></text></g><g><title>__mod_timer (1 samples, 0.15%)</title><rect x="8.9820%" y="181" width="0.1497%" height="15" fill="rgb(232,23,21)"/><text x="9.2320%" y="191.50"></text></g><g><title>sk_reset_timer (2 samples, 0.30%)</title><rect x="8.9820%" y="197" width="0.2994%" height="15" fill="rgb(244,5,23)"/><text x="9.2320%" y="207.50"></text></g><g><title>mod_timer (1 samples, 0.15%)</title><rect x="9.1317%" y="181" width="0.1497%" height="15" fill="rgb(226,81,46)"/><text x="9.3817%" y="191.50"></text></g><g><title>psi_task_change (8 samples, 1.20%)</title><rect x="9.7305%" y="117" width="1.1976%" height="15" fill="rgb(247,70,30)"/><text x="9.9805%" y="127.50"></text></g><g><title>psi_group_change (8 samples, 1.20%)</title><rect x="9.7305%" y="101" width="1.1976%" height="15" fill="rgb(212,68,19)"/><text x="9.9805%" y="111.50"></text></g><g><title>record_times (3 samples, 0.45%)</title><rect x="10.4790%" y="85" width="0.4491%" height="15" fill="rgb(240,187,13)"/><text x="10.7290%" y="95.50"></text></g><g><title>sched_clock_cpu (3 samples, 0.45%)</title><rect x="10.4790%" y="69" width="0.4491%" height="15" fill="rgb(223,113,26)"/><text x="10.7290%" y="79.50"></text></g><g><title>sched_clock (3 samples, 0.45%)</title><rect x="10.4790%" y="53" width="0.4491%" height="15" fill="rgb(206,192,2)"/><text x="10.7290%" y="63.50"></text></g><g><title>native_sched_clock (3 samples, 0.45%)</title><rect x="10.4790%" y="37" width="0.4491%" height="15" fill="rgb(241,108,4)"/><text x="10.7290%" y="47.50"></text></g><g><title>enqueue_task (12 samples, 1.80%)</title><rect x="9.5808%" y="133" width="1.7964%" height="15" fill="rgb(247,173,49)"/><text x="9.8308%" y="143.50">e..</text></g><g><title>uclamp_rq_inc_id (3 samples, 0.45%)</title><rect x="10.9281%" y="117" width="0.4491%" height="15" fill="rgb(224,114,35)"/><text x="11.1781%" y="127.50"></text></g><g><title>reweight_entity (1 samples, 0.15%)</title><rect x="11.9760%" y="101" width="0.1497%" height="15" fill="rgb(245,159,27)"/><text x="12.2260%" y="111.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.15%)</title><rect x="12.1257%" y="85" width="0.1497%" height="15" fill="rgb(245,172,44)"/><text x="12.3757%" y="95.50"></text></g><g><title>enqueue_task_fair (9 samples, 1.35%)</title><rect x="11.3772%" y="133" width="1.3473%" height="15" fill="rgb(236,23,11)"/><text x="11.6272%" y="143.50"></text></g><g><title>enqueue_entity (8 samples, 1.20%)</title><rect x="11.5269%" y="117" width="1.1976%" height="15" fill="rgb(205,117,38)"/><text x="11.7769%" y="127.50"></text></g><g><title>update_load_avg (4 samples, 0.60%)</title><rect x="12.1257%" y="101" width="0.5988%" height="15" fill="rgb(237,72,25)"/><text x="12.3757%" y="111.50"></text></g><g><title>__update_load_avg_se (3 samples, 0.45%)</title><rect x="12.2754%" y="85" width="0.4491%" height="15" fill="rgb(244,70,9)"/><text x="12.5254%" y="95.50"></text></g><g><title>ttwu_do_wakeup (1 samples, 0.15%)</title><rect x="12.7246%" y="133" width="0.1497%" height="15" fill="rgb(217,125,39)"/><text x="12.9746%" y="143.50"></text></g><g><title>check_preempt_curr (1 samples, 0.15%)</title><rect x="12.7246%" y="117" width="0.1497%" height="15" fill="rgb(235,36,10)"/><text x="12.9746%" y="127.50"></text></g><g><title>__wake_up_common (26 samples, 3.89%)</title><rect x="9.2814%" y="165" width="3.8922%" height="15" fill="rgb(251,123,47)"/><text x="9.5314%" y="175.50">__wa..</text></g><g><title>try_to_wake_up (25 samples, 3.74%)</title><rect x="9.4311%" y="149" width="3.7425%" height="15" fill="rgb(221,13,13)"/><text x="9.6811%" y="159.50">try_..</text></g><g><title>update_rq_clock (2 samples, 0.30%)</title><rect x="12.8743%" y="133" width="0.2994%" height="15" fill="rgb(238,131,9)"/><text x="13.1243%" y="143.50"></text></g><g><title>sock_def_readable (27 samples, 4.04%)</title><rect x="9.2814%" y="197" width="4.0419%" height="15" fill="rgb(211,50,8)"/><text x="9.5314%" y="207.50">sock..</text></g><g><title>__wake_up_common_lock (27 samples, 4.04%)</title><rect x="9.2814%" y="181" width="4.0419%" height="15" fill="rgb(245,182,24)"/><text x="9.5314%" y="191.50">__wa..</text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.15%)</title><rect x="13.1737%" y="165" width="0.1497%" height="15" fill="rgb(242,14,37)"/><text x="13.4237%" y="175.50"></text></g><g><title>__kfree_skb (3 samples, 0.45%)</title><rect x="13.7725%" y="181" width="0.4491%" height="15" fill="rgb(246,228,12)"/><text x="14.0225%" y="191.50"></text></g><g><title>kfree (2 samples, 0.30%)</title><rect x="13.9222%" y="165" width="0.2994%" height="15" fill="rgb(213,55,15)"/><text x="14.1722%" y="175.50"></text></g><g><title>__slab_free (2 samples, 0.30%)</title><rect x="13.9222%" y="149" width="0.2994%" height="15" fill="rgb(209,9,3)"/><text x="14.1722%" y="159.50"></text></g><g><title>apic_timer_interrupt (1 samples, 0.15%)</title><rect x="14.0719%" y="133" width="0.1497%" height="15" fill="rgb(230,59,30)"/><text x="14.3219%" y="143.50"></text></g><g><title>smp_apic_timer_interrupt (1 samples, 0.15%)</title><rect x="14.0719%" y="117" width="0.1497%" height="15" fill="rgb(209,121,21)"/><text x="14.3219%" y="127.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.15%)</title><rect x="14.0719%" y="101" width="0.1497%" height="15" fill="rgb(220,109,13)"/><text x="14.3219%" y="111.50"></text></g><g><title>clockevents_program_event (1 samples, 0.15%)</title><rect x="14.0719%" y="85" width="0.1497%" height="15" fill="rgb(232,18,1)"/><text x="14.3219%" y="95.50"></text></g><g><title>ktime_get (1 samples, 0.15%)</title><rect x="14.0719%" y="69" width="0.1497%" height="15" fill="rgb(215,41,42)"/><text x="14.3219%" y="79.50"></text></g><g><title>read_tsc (1 samples, 0.15%)</title><rect x="14.0719%" y="53" width="0.1497%" height="15" fill="rgb(224,123,36)"/><text x="14.3219%" y="63.50"></text></g><g><title>kmem_cache_free (1 samples, 0.15%)</title><rect x="14.2216%" y="181" width="0.1497%" height="15" fill="rgb(240,125,3)"/><text x="14.4716%" y="191.50"></text></g><g><title>rb_first (1 samples, 0.15%)</title><rect x="14.3713%" y="181" width="0.1497%" height="15" fill="rgb(205,98,50)"/><text x="14.6213%" y="191.50"></text></g><g><title>tcp_ack (10 samples, 1.50%)</title><rect x="13.3234%" y="197" width="1.4970%" height="15" fill="rgb(205,185,37)"/><text x="13.5734%" y="207.50"></text></g><g><title>tcp_update_pacing_rate (2 samples, 0.30%)</title><rect x="14.5210%" y="181" width="0.2994%" height="15" fill="rgb(238,207,15)"/><text x="14.7710%" y="191.50"></text></g><g><title>tcp_queue_rcv (1 samples, 0.15%)</title><rect x="14.8204%" y="197" width="0.1497%" height="15" fill="rgb(213,199,42)"/><text x="15.0704%" y="207.50"></text></g><g><title>ip_local_deliver (44 samples, 6.59%)</title><rect x="8.5329%" y="293" width="6.5868%" height="15" fill="rgb(235,201,11)"/><text x="8.7829%" y="303.50">ip_local_..</text></g><g><title>ip_local_deliver_finish (44 samples, 6.59%)</title><rect x="8.5329%" y="277" width="6.5868%" height="15" fill="rgb(207,46,11)"/><text x="8.7829%" y="287.50">ip_local_..</text></g><g><title>ip_protocol_deliver_rcu (44 samples, 6.59%)</title><rect x="8.5329%" y="261" width="6.5868%" height="15" fill="rgb(241,35,35)"/><text x="8.7829%" y="271.50">ip_protoc..</text></g><g><title>tcp_v4_rcv (43 samples, 6.44%)</title><rect x="8.6826%" y="245" width="6.4371%" height="15" fill="rgb(243,32,47)"/><text x="8.9326%" y="255.50">tcp_v4_r..</text></g><g><title>tcp_v4_do_rcv (42 samples, 6.29%)</title><rect x="8.8323%" y="229" width="6.2874%" height="15" fill="rgb(247,202,23)"/><text x="9.0823%" y="239.50">tcp_v4_d..</text></g><g><title>tcp_rcv_established (42 samples, 6.29%)</title><rect x="8.8323%" y="213" width="6.2874%" height="15" fill="rgb(219,102,11)"/><text x="9.0823%" y="223.50">tcp_rcv_..</text></g><g><title>tcp_send_delayed_ack (1 samples, 0.15%)</title><rect x="14.9701%" y="197" width="0.1497%" height="15" fill="rgb(243,110,44)"/><text x="15.2201%" y="207.50"></text></g><g><title>__netif_receive_skb_one_core (50 samples, 7.49%)</title><rect x="8.0838%" y="325" width="7.4850%" height="15" fill="rgb(222,74,54)"/><text x="8.3338%" y="335.50">__netif_re..</text></g><g><title>ip_rcv (48 samples, 7.19%)</title><rect x="8.3832%" y="309" width="7.1856%" height="15" fill="rgb(216,99,12)"/><text x="8.6332%" y="319.50">ip_rcv</text></g><g><title>ip_rcv_core (3 samples, 0.45%)</title><rect x="15.1198%" y="293" width="0.4491%" height="15" fill="rgb(226,22,26)"/><text x="15.3698%" y="303.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.15%)</title><rect x="15.4192%" y="277" width="0.1497%" height="15" fill="rgb(217,163,10)"/><text x="15.6692%" y="287.50"></text></g><g><title>ip_finish_output2 (58 samples, 8.68%)</title><rect x="7.0359%" y="437" width="8.6826%" height="15" fill="rgb(213,25,53)"/><text x="7.2859%" y="447.50">ip_finish_ou..</text></g><g><title>__local_bh_enable_ip (51 samples, 7.63%)</title><rect x="8.0838%" y="421" width="7.6347%" height="15" fill="rgb(252,105,26)"/><text x="8.3338%" y="431.50">__local_bh..</text></g><g><title>do_softirq (51 samples, 7.63%)</title><rect x="8.0838%" y="405" width="7.6347%" height="15" fill="rgb(220,39,43)"/><text x="8.3338%" y="415.50">do_softirq</text></g><g><title>do_softirq_own_stack (51 samples, 7.63%)</title><rect x="8.0838%" y="389" width="7.6347%" height="15" fill="rgb(229,68,48)"/><text x="8.3338%" y="399.50">do_softirq..</text></g><g><title>__do_softirq (51 samples, 7.63%)</title><rect x="8.0838%" y="373" width="7.6347%" height="15" fill="rgb(252,8,32)"/><text x="8.3338%" y="383.50">__do_softi..</text></g><g><title>net_rx_action (51 samples, 7.63%)</title><rect x="8.0838%" y="357" width="7.6347%" height="15" fill="rgb(223,20,43)"/><text x="8.3338%" y="367.50">net_rx_act..</text></g><g><title>process_backlog (51 samples, 7.63%)</title><rect x="8.0838%" y="341" width="7.6347%" height="15" fill="rgb(229,81,49)"/><text x="8.3338%" y="351.50">process_ba..</text></g><g><title>_raw_spin_unlock (1 samples, 0.15%)</title><rect x="15.5689%" y="325" width="0.1497%" height="15" fill="rgb(236,28,36)"/><text x="15.8189%" y="335.50"></text></g><g><title>__ip_queue_xmit (68 samples, 10.18%)</title><rect x="5.6886%" y="469" width="10.1796%" height="15" fill="rgb(249,185,26)"/><text x="5.9386%" y="479.50">__ip_queue_xmit</text></g><g><title>ip_output (63 samples, 9.43%)</title><rect x="6.4371%" y="453" width="9.4311%" height="15" fill="rgb(249,174,33)"/><text x="6.6871%" y="463.50">ip_output</text></g><g><title>ip_finish_output (1 samples, 0.15%)</title><rect x="15.7186%" y="437" width="0.1497%" height="15" fill="rgb(233,201,37)"/><text x="15.9686%" y="447.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (1 samples, 0.15%)</title><rect x="15.7186%" y="421" width="0.1497%" height="15" fill="rgb(221,78,26)"/><text x="15.9686%" y="431.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.15%)</title><rect x="15.7186%" y="405" width="0.1497%" height="15" fill="rgb(250,127,30)"/><text x="15.9686%" y="415.50"></text></g><g><title>ip_queue_xmit (1 samples, 0.15%)</title><rect x="15.8683%" y="469" width="0.1497%" height="15" fill="rgb(230,49,44)"/><text x="16.1183%" y="479.50"></text></g><g><title>__tcp_transmit_skb (74 samples, 11.08%)</title><rect x="5.0898%" y="485" width="11.0778%" height="15" fill="rgb(229,67,23)"/><text x="5.3398%" y="495.50">__tcp_transmit_s..</text></g><g><title>skb_clone (1 samples, 0.15%)</title><rect x="16.0180%" y="469" width="0.1497%" height="15" fill="rgb(249,83,47)"/><text x="16.2680%" y="479.50"></text></g><g><title>__copy_skb_header (1 samples, 0.15%)</title><rect x="16.0180%" y="453" width="0.1497%" height="15" fill="rgb(215,43,3)"/><text x="16.2680%" y="463.50"></text></g><g><title>__tcp_push_pending_frames (78 samples, 11.68%)</title><rect x="4.9401%" y="517" width="11.6766%" height="15" fill="rgb(238,154,13)"/><text x="5.1901%" y="527.50">__tcp_push_pendin..</text></g><g><title>tcp_write_xmit (78 samples, 11.68%)</title><rect x="4.9401%" y="501" width="11.6766%" height="15" fill="rgb(219,56,2)"/><text x="5.1901%" y="511.50">tcp_write_xmit</text></g><g><title>tcp_event_new_data_sent (3 samples, 0.45%)</title><rect x="16.1677%" y="485" width="0.4491%" height="15" fill="rgb(233,0,4)"/><text x="16.4177%" y="495.50"></text></g><g><title>sk_reset_timer (2 samples, 0.30%)</title><rect x="16.3174%" y="469" width="0.2994%" height="15" fill="rgb(235,30,7)"/><text x="16.5674%" y="479.50"></text></g><g><title>__mod_timer (2 samples, 0.30%)</title><rect x="16.3174%" y="453" width="0.2994%" height="15" fill="rgb(250,79,13)"/><text x="16.5674%" y="463.50"></text></g><g><title>lock_timer_base.constprop.0 (1 samples, 0.15%)</title><rect x="16.4671%" y="437" width="0.1497%" height="15" fill="rgb(211,146,34)"/><text x="16.7171%" y="447.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.15%)</title><rect x="16.4671%" y="421" width="0.1497%" height="15" fill="rgb(228,22,38)"/><text x="16.7171%" y="431.50"></text></g><g><title>sk_page_frag_refill (1 samples, 0.15%)</title><rect x="16.6168%" y="517" width="0.1497%" height="15" fill="rgb(235,168,5)"/><text x="16.8668%" y="527.50"></text></g><g><title>skb_page_frag_refill (1 samples, 0.15%)</title><rect x="16.6168%" y="501" width="0.1497%" height="15" fill="rgb(221,155,16)"/><text x="16.8668%" y="511.50"></text></g><g><title>__kmalloc_node_track_caller (3 samples, 0.45%)</title><rect x="17.0659%" y="485" width="0.4491%" height="15" fill="rgb(215,215,53)"/><text x="17.3159%" y="495.50"></text></g><g><title>sk_stream_alloc_skb (7 samples, 1.05%)</title><rect x="16.7665%" y="517" width="1.0479%" height="15" fill="rgb(223,4,10)"/><text x="17.0165%" y="527.50"></text></g><g><title>__alloc_skb (7 samples, 1.05%)</title><rect x="16.7665%" y="501" width="1.0479%" height="15" fill="rgb(234,103,6)"/><text x="17.0165%" y="511.50"></text></g><g><title>__ksize (2 samples, 0.30%)</title><rect x="17.5150%" y="485" width="0.2994%" height="15" fill="rgb(227,97,0)"/><text x="17.7650%" y="495.50"></text></g><g><title>skb_do_copy_data_nocache (1 samples, 0.15%)</title><rect x="17.8144%" y="517" width="0.1497%" height="15" fill="rgb(234,150,53)"/><text x="18.0644%" y="527.50"></text></g><g><title>_copy_from_iter_full (1 samples, 0.15%)</title><rect x="17.8144%" y="501" width="0.1497%" height="15" fill="rgb(228,201,54)"/><text x="18.0644%" y="511.50"></text></g><g><title>skb_entail (1 samples, 0.15%)</title><rect x="17.9641%" y="517" width="0.1497%" height="15" fill="rgb(222,22,37)"/><text x="18.2141%" y="527.50"></text></g><g><title>tcp_chrono_start (1 samples, 0.15%)</title><rect x="17.9641%" y="501" width="0.1497%" height="15" fill="rgb(237,53,32)"/><text x="18.2141%" y="511.50"></text></g><g><title>sock_sendmsg (100 samples, 14.97%)</title><rect x="3.7425%" y="565" width="14.9701%" height="15" fill="rgb(233,25,53)"/><text x="3.9925%" y="575.50">sock_sendmsg</text></g><g><title>tcp_sendmsg (100 samples, 14.97%)</title><rect x="3.7425%" y="549" width="14.9701%" height="15" fill="rgb(210,40,34)"/><text x="3.9925%" y="559.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (99 samples, 14.82%)</title><rect x="3.8922%" y="533" width="14.8204%" height="15" fill="rgb(241,220,44)"/><text x="4.1422%" y="543.50">tcp_sendmsg_locked</text></g><g><title>tcp_send_mss (4 samples, 0.60%)</title><rect x="18.1138%" y="517" width="0.5988%" height="15" fill="rgb(235,28,35)"/><text x="18.3638%" y="527.50"></text></g><g><title>tcp_current_mss (2 samples, 0.30%)</title><rect x="18.4132%" y="501" width="0.2994%" height="15" fill="rgb(210,56,17)"/><text x="18.6632%" y="511.50"></text></g><g><title>__x64_sys_sendto (102 samples, 15.27%)</title><rect x="3.5928%" y="597" width="15.2695%" height="15" fill="rgb(224,130,29)"/><text x="3.8428%" y="607.50">__x64_sys_sendto</text></g><g><title>__sys_sendto (102 samples, 15.27%)</title><rect x="3.5928%" y="581" width="15.2695%" height="15" fill="rgb(235,212,8)"/><text x="3.8428%" y="591.50">__sys_sendto</text></g><g><title>sockfd_lookup_light (1 samples, 0.15%)</title><rect x="18.7126%" y="565" width="0.1497%" height="15" fill="rgb(223,33,50)"/><text x="18.9626%" y="575.50"></text></g><g><title>__fget_light (1 samples, 0.15%)</title><rect x="18.7126%" y="549" width="0.1497%" height="15" fill="rgb(219,149,13)"/><text x="18.9626%" y="559.50"></text></g><g><title>__fget_files (1 samples, 0.15%)</title><rect x="18.7126%" y="533" width="0.1497%" height="15" fill="rgb(250,156,29)"/><text x="18.9626%" y="543.50"></text></g><g><title>syscall_slow_exit_work (1 samples, 0.15%)</title><rect x="18.8623%" y="597" width="0.1497%" height="15" fill="rgb(216,193,19)"/><text x="19.1123%" y="607.50"></text></g><g><title>do_syscall_64 (106 samples, 15.87%)</title><rect x="3.2934%" y="613" width="15.8683%" height="15" fill="rgb(216,135,14)"/><text x="3.5434%" y="623.50">do_syscall_64</text></g><g><title>syscall_trace_enter (1 samples, 0.15%)</title><rect x="19.0120%" y="597" width="0.1497%" height="15" fill="rgb(241,47,5)"/><text x="19.2620%" y="607.50"></text></g><g><title>entry_SYSCALL_64 (110 samples, 16.47%)</title><rect x="3.2934%" y="629" width="16.4671%" height="15" fill="rgb(233,42,35)"/><text x="3.5434%" y="639.50">entry_SYSCALL_64</text></g><g><title>prepare_exit_to_usermode (4 samples, 0.60%)</title><rect x="19.1617%" y="613" width="0.5988%" height="15" fill="rgb(231,13,6)"/><text x="19.4117%" y="623.50"></text></g><g><title>__libc_start_main (117 samples, 17.51%)</title><rect x="2.5449%" y="901" width="17.5150%" height="15" fill="rgb(207,181,40)"/><text x="2.7949%" y="911.50">__libc_start_main</text></g><g><title>main (117 samples, 17.51%)</title><rect x="2.5449%" y="885" width="17.5150%" height="15" fill="rgb(254,173,49)"/><text x="2.7949%" y="895.50">main</text></g><g><title>std::rt::lang_start_internal (117 samples, 17.51%)</title><rect x="2.5449%" y="869" width="17.5150%" height="15" fill="rgb(221,1,38)"/><text x="2.7949%" y="879.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (117 samples, 17.51%)</title><rect x="2.5449%" y="853" width="17.5150%" height="15" fill="rgb(206,124,46)"/><text x="2.7949%" y="863.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (117 samples, 17.51%)</title><rect x="2.5449%" y="837" width="17.5150%" height="15" fill="rgb(249,21,11)"/><text x="2.7949%" y="847.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (117 samples, 17.51%)</title><rect x="2.5449%" y="821" width="17.5150%" height="15" fill="rgb(222,201,40)"/><text x="2.7949%" y="831.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (117 samples, 17.51%)</title><rect x="2.5449%" y="805" width="17.5150%" height="15" fill="rgb(235,61,29)"/><text x="2.7949%" y="815.50">core::ops::function::impls:..</text></g><g><title>std::rt::lang_start::_{{closure}} (117 samples, 17.51%)</title><rect x="2.5449%" y="789" width="17.5150%" height="15" fill="rgb(219,207,3)"/><text x="2.7949%" y="799.50">std::rt::lang_start::_{{clo..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (117 samples, 17.51%)</title><rect x="2.5449%" y="773" width="17.5150%" height="15" fill="rgb(222,56,46)"/><text x="2.7949%" y="783.50">std::sys_common::backtrace:..</text></g><g><title>lobsters::main (117 samples, 17.51%)</title><rect x="2.5449%" y="757" width="17.5150%" height="15" fill="rgb(239,76,54)"/><text x="2.7949%" y="767.50">lobsters::main</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (115 samples, 17.22%)</title><rect x="2.8443%" y="741" width="17.2156%" height="15" fill="rgb(231,124,27)"/><text x="3.0943%" y="751.50">mysql::conn::queryable::Que..</text></g><g><title>mysql::conn::Conn::_query (115 samples, 17.22%)</title><rect x="2.8443%" y="725" width="17.2156%" height="15" fill="rgb(249,195,6)"/><text x="3.0943%" y="735.50">mysql::conn::Conn::_query</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (115 samples, 17.22%)</title><rect x="2.8443%" y="709" width="17.2156%" height="15" fill="rgb(237,174,47)"/><text x="3.0943%" y="719.50">mysql_common::proto::sync_f..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (115 samples, 17.22%)</title><rect x="2.8443%" y="693" width="17.2156%" height="15" fill="rgb(206,201,31)"/><text x="3.0943%" y="703.50">std::io::buffered::BufWrite..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (115 samples, 17.22%)</title><rect x="2.8443%" y="677" width="17.2156%" height="15" fill="rgb(231,57,52)"/><text x="3.0943%" y="687.50">&lt;std::net::tcp::TcpStream a..</text></g><g><title>std::sys_common::net::TcpStream::write (115 samples, 17.22%)</title><rect x="2.8443%" y="661" width="17.2156%" height="15" fill="rgb(248,177,22)"/><text x="3.0943%" y="671.50">std::sys_common::net::TcpSt..</text></g><g><title>__libc_send (114 samples, 17.07%)</title><rect x="2.9940%" y="645" width="17.0659%" height="15" fill="rgb(215,211,37)"/><text x="3.2440%" y="655.50">__libc_send</text></g><g><title>syscall_return_via_sysret (2 samples, 0.30%)</title><rect x="19.7605%" y="629" width="0.2994%" height="15" fill="rgb(241,128,51)"/><text x="20.0105%" y="639.50"></text></g><g><title>__rdl_alloc (1 samples, 0.15%)</title><rect x="20.0599%" y="901" width="0.1497%" height="15" fill="rgb(227,165,31)"/><text x="20.3099%" y="911.50"></text></g><g><title>_int_free (1 samples, 0.15%)</title><rect x="20.2096%" y="901" width="0.1497%" height="15" fill="rgb(228,167,24)"/><text x="20.4596%" y="911.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.15%)</title><rect x="20.3593%" y="789" width="0.1497%" height="15" fill="rgb(228,143,12)"/><text x="20.6093%" y="799.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::len_utf8 (1 samples, 0.15%)</title><rect x="20.3593%" y="773" width="0.1497%" height="15" fill="rgb(249,149,8)"/><text x="20.6093%" y="783.50"></text></g><g><title>core::char::methods::len_utf8 (1 samples, 0.15%)</title><rect x="20.3593%" y="757" width="0.1497%" height="15" fill="rgb(243,35,44)"/><text x="20.6093%" y="767.50"></text></g><g><title>decor::Shim::create_schema (2 samples, 0.30%)</title><rect x="20.3593%" y="901" width="0.2994%" height="15" fill="rgb(246,89,9)"/><text x="20.6093%" y="911.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (2 samples, 0.30%)</title><rect x="20.3593%" y="885" width="0.2994%" height="15" fill="rgb(233,213,13)"/><text x="20.6093%" y="895.50"></text></g><g><title>sql_parser::parser::parse_statements (2 samples, 0.30%)</title><rect x="20.3593%" y="869" width="0.2994%" height="15" fill="rgb(233,141,41)"/><text x="20.6093%" y="879.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (2 samples, 0.30%)</title><rect x="20.3593%" y="853" width="0.2994%" height="15" fill="rgb(239,167,4)"/><text x="20.6093%" y="863.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (2 samples, 0.30%)</title><rect x="20.3593%" y="837" width="0.2994%" height="15" fill="rgb(209,217,16)"/><text x="20.6093%" y="847.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (2 samples, 0.30%)</title><rect x="20.3593%" y="821" width="0.2994%" height="15" fill="rgb(219,88,35)"/><text x="20.6093%" y="831.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (2 samples, 0.30%)</title><rect x="20.3593%" y="805" width="0.2994%" height="15" fill="rgb(220,193,23)"/><text x="20.6093%" y="815.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (1 samples, 0.15%)</title><rect x="20.5090%" y="789" width="0.1497%" height="15" fill="rgb(230,90,52)"/><text x="20.7590%" y="799.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (1 samples, 0.15%)</title><rect x="20.5090%" y="773" width="0.1497%" height="15" fill="rgb(252,106,19)"/><text x="20.7590%" y="783.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.15%)</title><rect x="20.5090%" y="757" width="0.1497%" height="15" fill="rgb(206,74,20)"/><text x="20.7590%" y="767.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query_drop (1 samples, 0.15%)</title><rect x="20.6587%" y="901" width="0.1497%" height="15" fill="rgb(230,138,44)"/><text x="20.9087%" y="911.50"></text></g><g><title>decor::query_transformer::QueryTransformer::issue_to_dt_and_get_mv_stmt (1 samples, 0.15%)</title><rect x="20.6587%" y="885" width="0.1497%" height="15" fill="rgb(235,182,43)"/><text x="20.9087%" y="895.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (1 samples, 0.15%)</title><rect x="20.6587%" y="869" width="0.1497%" height="15" fill="rgb(242,16,51)"/><text x="20.9087%" y="879.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (1 samples, 0.15%)</title><rect x="20.6587%" y="853" width="0.1497%" height="15" fill="rgb(248,9,4)"/><text x="20.9087%" y="863.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.15%)</title><rect x="20.6587%" y="837" width="0.1497%" height="15" fill="rgb(210,31,22)"/><text x="20.9087%" y="847.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.15%)</title><rect x="20.6587%" y="821" width="0.1497%" height="15" fill="rgb(239,54,39)"/><text x="20.9087%" y="831.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.15%)</title><rect x="20.6587%" y="805" width="0.1497%" height="15" fill="rgb(230,99,41)"/><text x="20.9087%" y="815.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="20.6587%" y="789" width="0.1497%" height="15" fill="rgb(253,106,12)"/><text x="20.9087%" y="799.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (1 samples, 0.15%)</title><rect x="20.6587%" y="773" width="0.1497%" height="15" fill="rgb(213,46,41)"/><text x="20.9087%" y="783.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (1 samples, 0.15%)</title><rect x="20.6587%" y="757" width="0.1497%" height="15" fill="rgb(215,133,35)"/><text x="20.9087%" y="767.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.15%)</title><rect x="20.6587%" y="741" width="0.1497%" height="15" fill="rgb(213,28,5)"/><text x="20.9087%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="20.6587%" y="725" width="0.1497%" height="15" fill="rgb(215,77,49)"/><text x="20.9087%" y="735.50"></text></g><g><title>__rust_alloc (1 samples, 0.15%)</title><rect x="20.6587%" y="709" width="0.1497%" height="15" fill="rgb(248,100,22)"/><text x="20.9087%" y="719.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.15%)</title><rect x="20.8084%" y="869" width="0.1497%" height="15" fill="rgb(208,67,9)"/><text x="21.0584%" y="879.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.15%)</title><rect x="20.8084%" y="853" width="0.1497%" height="15" fill="rgb(219,133,21)"/><text x="21.0584%" y="863.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.15%)</title><rect x="20.8084%" y="837" width="0.1497%" height="15" fill="rgb(246,46,29)"/><text x="21.0584%" y="847.50"></text></g><g><title>dlopen (1 samples, 0.15%)</title><rect x="20.8084%" y="821" width="0.1497%" height="15" fill="rgb(246,185,52)"/><text x="21.0584%" y="831.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.15%)</title><rect x="20.8084%" y="805" width="0.1497%" height="15" fill="rgb(252,136,11)"/><text x="21.0584%" y="815.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.15%)</title><rect x="20.8084%" y="789" width="0.1497%" height="15" fill="rgb(219,138,53)"/><text x="21.0584%" y="799.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.15%)</title><rect x="20.8084%" y="773" width="0.1497%" height="15" fill="rgb(211,51,23)"/><text x="21.0584%" y="783.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.15%)</title><rect x="20.8084%" y="757" width="0.1497%" height="15" fill="rgb(247,221,28)"/><text x="21.0584%" y="767.50"></text></g><g><title>_dl_open (1 samples, 0.15%)</title><rect x="20.8084%" y="741" width="0.1497%" height="15" fill="rgb(251,222,45)"/><text x="21.0584%" y="751.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.15%)</title><rect x="20.8084%" y="725" width="0.1497%" height="15" fill="rgb(217,162,53)"/><text x="21.0584%" y="735.50"></text></g><g><title>dl_open_worker (1 samples, 0.15%)</title><rect x="20.8084%" y="709" width="0.1497%" height="15" fill="rgb(229,93,14)"/><text x="21.0584%" y="719.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.15%)</title><rect x="20.8084%" y="693" width="0.1497%" height="15" fill="rgb(209,67,49)"/><text x="21.0584%" y="703.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.15%)</title><rect x="20.8084%" y="677" width="0.1497%" height="15" fill="rgb(213,87,29)"/><text x="21.0584%" y="687.50"></text></g><g><title>do_lookup_x (1 samples, 0.15%)</title><rect x="20.8084%" y="661" width="0.1497%" height="15" fill="rgb(205,151,52)"/><text x="21.0584%" y="671.50"></text></g><g><title>hwloc::Topology::new (2 samples, 0.30%)</title><rect x="20.8084%" y="885" width="0.2994%" height="15" fill="rgb(253,215,39)"/><text x="21.0584%" y="895.50"></text></g><g><title>hwloc_topology_load (1 samples, 0.15%)</title><rect x="20.9581%" y="869" width="0.1497%" height="15" fill="rgb(221,220,41)"/><text x="21.2081%" y="879.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.15%)</title><rect x="20.9581%" y="853" width="0.1497%" height="15" fill="rgb(218,133,21)"/><text x="21.2081%" y="863.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.15%)</title><rect x="20.9581%" y="837" width="0.1497%" height="15" fill="rgb(221,193,43)"/><text x="21.2081%" y="847.50"></text></g><g><title>__isoc99_fscanf (1 samples, 0.15%)</title><rect x="20.9581%" y="821" width="0.1497%" height="15" fill="rgb(240,128,52)"/><text x="21.2081%" y="831.50"></text></g><g><title>__vfscanf_internal (1 samples, 0.15%)</title><rect x="20.9581%" y="805" width="0.1497%" height="15" fill="rgb(253,114,12)"/><text x="21.2081%" y="815.50"></text></g><g><title>__GI__IO_default_uflow (1 samples, 0.15%)</title><rect x="20.9581%" y="789" width="0.1497%" height="15" fill="rgb(215,223,47)"/><text x="21.2081%" y="799.50"></text></g><g><title>__GI__IO_file_underflow (1 samples, 0.15%)</title><rect x="20.9581%" y="773" width="0.1497%" height="15" fill="rgb(248,225,23)"/><text x="21.2081%" y="783.50"></text></g><g><title>__GI___read (1 samples, 0.15%)</title><rect x="20.9581%" y="757" width="0.1497%" height="15" fill="rgb(250,108,0)"/><text x="21.2081%" y="767.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.15%)</title><rect x="20.9581%" y="741" width="0.1497%" height="15" fill="rgb(228,208,7)"/><text x="21.2081%" y="751.50"></text></g><g><title>do_syscall_64 (1 samples, 0.15%)</title><rect x="20.9581%" y="725" width="0.1497%" height="15" fill="rgb(244,45,10)"/><text x="21.2081%" y="735.50"></text></g><g><title>ksys_read (1 samples, 0.15%)</title><rect x="20.9581%" y="709" width="0.1497%" height="15" fill="rgb(207,125,25)"/><text x="21.2081%" y="719.50"></text></g><g><title>vfs_read (1 samples, 0.15%)</title><rect x="20.9581%" y="693" width="0.1497%" height="15" fill="rgb(210,195,18)"/><text x="21.2081%" y="703.50"></text></g><g><title>seq_read (1 samples, 0.15%)</title><rect x="20.9581%" y="677" width="0.1497%" height="15" fill="rgb(249,80,12)"/><text x="21.2081%" y="687.50"></text></g><g><title>show_cpuinfo (1 samples, 0.15%)</title><rect x="20.9581%" y="661" width="0.1497%" height="15" fill="rgb(221,65,9)"/><text x="21.2081%" y="671.50"></text></g><g><title>seq_printf (1 samples, 0.15%)</title><rect x="20.9581%" y="645" width="0.1497%" height="15" fill="rgb(235,49,36)"/><text x="21.2081%" y="655.50"></text></g><g><title>vsnprintf (1 samples, 0.15%)</title><rect x="20.9581%" y="629" width="0.1497%" height="15" fill="rgb(225,32,20)"/><text x="21.2081%" y="639.50"></text></g><g><title>number (1 samples, 0.15%)</title><rect x="20.9581%" y="613" width="0.1497%" height="15" fill="rgb(215,141,46)"/><text x="21.2081%" y="623.50"></text></g><g><title>__pthread_disable_asynccancel (1 samples, 0.15%)</title><rect x="21.2575%" y="709" width="0.1497%" height="15" fill="rgb(250,160,47)"/><text x="21.5075%" y="719.50"></text></g><g><title>dst_release (1 samples, 0.15%)</title><rect x="21.7066%" y="581" width="0.1497%" height="15" fill="rgb(216,222,40)"/><text x="21.9566%" y="591.50"></text></g><g><title>__kfree_skb (2 samples, 0.30%)</title><rect x="21.7066%" y="613" width="0.2994%" height="15" fill="rgb(234,217,39)"/><text x="21.9566%" y="623.50"></text></g><g><title>skb_release_head_state (2 samples, 0.30%)</title><rect x="21.7066%" y="597" width="0.2994%" height="15" fill="rgb(207,178,40)"/><text x="21.9566%" y="607.50"></text></g><g><title>sock_rfree (1 samples, 0.15%)</title><rect x="21.8563%" y="581" width="0.1497%" height="15" fill="rgb(221,136,13)"/><text x="22.1063%" y="591.50"></text></g><g><title>ns_to_timespec64 (1 samples, 0.15%)</title><rect x="22.0060%" y="613" width="0.1497%" height="15" fill="rgb(249,199,10)"/><text x="22.2560%" y="623.50"></text></g><g><title>add_wait_queue (1 samples, 0.15%)</title><rect x="22.1557%" y="597" width="0.1497%" height="15" fill="rgb(249,222,13)"/><text x="22.4057%" y="607.50"></text></g><g><title>release_sock (1 samples, 0.15%)</title><rect x="22.3054%" y="597" width="0.1497%" height="15" fill="rgb(244,185,38)"/><text x="22.5554%" y="607.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.15%)</title><rect x="22.3054%" y="581" width="0.1497%" height="15" fill="rgb(236,202,9)"/><text x="22.5554%" y="591.50"></text></g><g><title>__perf_event_task_sched_out (1 samples, 0.15%)</title><rect x="22.4551%" y="533" width="0.1497%" height="15" fill="rgb(250,229,37)"/><text x="22.7051%" y="543.50"></text></g><g><title>ctx_sched_out (1 samples, 0.15%)</title><rect x="22.4551%" y="517" width="0.1497%" height="15" fill="rgb(206,174,23)"/><text x="22.7051%" y="527.50"></text></g><g><title>intel_pmu_disable_all (1 samples, 0.15%)</title><rect x="22.4551%" y="501" width="0.1497%" height="15" fill="rgb(211,33,43)"/><text x="22.7051%" y="511.50"></text></g><g><title>account_entity_dequeue (1 samples, 0.15%)</title><rect x="22.6048%" y="501" width="0.1497%" height="15" fill="rgb(245,58,50)"/><text x="22.8548%" y="511.50"></text></g><g><title>dequeue_task_fair (4 samples, 0.60%)</title><rect x="22.6048%" y="533" width="0.5988%" height="15" fill="rgb(244,68,36)"/><text x="22.8548%" y="543.50"></text></g><g><title>dequeue_entity (4 samples, 0.60%)</title><rect x="22.6048%" y="517" width="0.5988%" height="15" fill="rgb(232,229,15)"/><text x="22.8548%" y="527.50"></text></g><g><title>update_load_avg (3 samples, 0.45%)</title><rect x="22.7545%" y="501" width="0.4491%" height="15" fill="rgb(254,30,23)"/><text x="23.0045%" y="511.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.15%)</title><rect x="23.0539%" y="485" width="0.1497%" height="15" fill="rgb(235,160,14)"/><text x="23.3039%" y="495.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (2 samples, 0.30%)</title><rect x="23.2036%" y="501" width="0.2994%" height="15" fill="rgb(212,155,44)"/><text x="23.4536%" y="511.50"></text></g><g><title>native_write_msr (2 samples, 0.30%)</title><rect x="23.2036%" y="485" width="0.2994%" height="15" fill="rgb(226,2,50)"/><text x="23.4536%" y="495.50"></text></g><g><title>__perf_event_task_sched_in (3 samples, 0.45%)</title><rect x="23.2036%" y="517" width="0.4491%" height="15" fill="rgb(234,177,6)"/><text x="23.4536%" y="527.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.15%)</title><rect x="23.5030%" y="501" width="0.1497%" height="15" fill="rgb(217,24,9)"/><text x="23.7530%" y="511.50"></text></g><g><title>preempt_count_sub (1 samples, 0.15%)</title><rect x="23.5030%" y="485" width="0.1497%" height="15" fill="rgb(220,13,46)"/><text x="23.7530%" y="495.50"></text></g><g><title>finish_task_switch (4 samples, 0.60%)</title><rect x="23.2036%" y="533" width="0.5988%" height="15" fill="rgb(239,221,27)"/><text x="23.4536%" y="543.50"></text></g><g><title>_raw_spin_unlock_irq (1 samples, 0.15%)</title><rect x="23.6527%" y="517" width="0.1497%" height="15" fill="rgb(222,198,25)"/><text x="23.9027%" y="527.50"></text></g><g><title>apic_timer_interrupt (1 samples, 0.15%)</title><rect x="23.6527%" y="501" width="0.1497%" height="15" fill="rgb(211,99,13)"/><text x="23.9027%" y="511.50"></text></g><g><title>smp_apic_timer_interrupt (1 samples, 0.15%)</title><rect x="23.6527%" y="485" width="0.1497%" height="15" fill="rgb(232,111,31)"/><text x="23.9027%" y="495.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.15%)</title><rect x="23.6527%" y="469" width="0.1497%" height="15" fill="rgb(245,82,37)"/><text x="23.9027%" y="479.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.15%)</title><rect x="23.6527%" y="453" width="0.1497%" height="15" fill="rgb(227,149,46)"/><text x="23.9027%" y="463.50"></text></g><g><title>tick_sched_timer (1 samples, 0.15%)</title><rect x="23.6527%" y="437" width="0.1497%" height="15" fill="rgb(218,36,50)"/><text x="23.9027%" y="447.50"></text></g><g><title>pick_next_task_fair (1 samples, 0.15%)</title><rect x="23.8024%" y="533" width="0.1497%" height="15" fill="rgb(226,80,48)"/><text x="24.0524%" y="543.50"></text></g><g><title>newidle_balance (1 samples, 0.15%)</title><rect x="23.8024%" y="517" width="0.1497%" height="15" fill="rgb(238,224,15)"/><text x="24.0524%" y="527.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.15%)</title><rect x="23.9521%" y="517" width="0.1497%" height="15" fill="rgb(241,136,10)"/><text x="24.2021%" y="527.50"></text></g><g><title>pick_next_task_idle (2 samples, 0.30%)</title><rect x="23.9521%" y="533" width="0.2994%" height="15" fill="rgb(208,32,45)"/><text x="24.2021%" y="543.50"></text></g><g><title>__update_idle_core (1 samples, 0.15%)</title><rect x="24.1018%" y="517" width="0.1497%" height="15" fill="rgb(207,135,9)"/><text x="24.3518%" y="527.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.15%)</title><rect x="24.1018%" y="501" width="0.1497%" height="15" fill="rgb(206,86,44)"/><text x="24.3518%" y="511.50"></text></g><g><title>psi_task_change (2 samples, 0.30%)</title><rect x="24.2515%" y="533" width="0.2994%" height="15" fill="rgb(245,177,15)"/><text x="24.5015%" y="543.50"></text></g><g><title>psi_group_change (2 samples, 0.30%)</title><rect x="24.2515%" y="517" width="0.2994%" height="15" fill="rgb(206,64,50)"/><text x="24.5015%" y="527.50"></text></g><g><title>record_times (2 samples, 0.30%)</title><rect x="24.2515%" y="501" width="0.2994%" height="15" fill="rgb(234,36,40)"/><text x="24.5015%" y="511.50"></text></g><g><title>sched_clock_cpu (2 samples, 0.30%)</title><rect x="24.2515%" y="485" width="0.2994%" height="15" fill="rgb(213,64,8)"/><text x="24.5015%" y="495.50"></text></g><g><title>sched_clock (2 samples, 0.30%)</title><rect x="24.2515%" y="469" width="0.2994%" height="15" fill="rgb(210,75,36)"/><text x="24.5015%" y="479.50"></text></g><g><title>native_sched_clock (2 samples, 0.30%)</title><rect x="24.2515%" y="453" width="0.2994%" height="15" fill="rgb(229,88,21)"/><text x="24.5015%" y="463.50"></text></g><g><title>uclamp_rq_dec_id (2 samples, 0.30%)</title><rect x="24.5509%" y="533" width="0.2994%" height="15" fill="rgb(252,204,47)"/><text x="24.8009%" y="543.50"></text></g><g><title>sk_wait_data (19 samples, 2.84%)</title><rect x="22.1557%" y="613" width="2.8443%" height="15" fill="rgb(208,77,27)"/><text x="22.4057%" y="623.50">sk..</text></g><g><title>wait_woken (17 samples, 2.54%)</title><rect x="22.4551%" y="597" width="2.5449%" height="15" fill="rgb(221,76,26)"/><text x="22.7051%" y="607.50">wa..</text></g><g><title>schedule_timeout (17 samples, 2.54%)</title><rect x="22.4551%" y="581" width="2.5449%" height="15" fill="rgb(225,139,18)"/><text x="22.7051%" y="591.50">sc..</text></g><g><title>schedule (17 samples, 2.54%)</title><rect x="22.4551%" y="565" width="2.5449%" height="15" fill="rgb(230,137,11)"/><text x="22.7051%" y="575.50">sc..</text></g><g><title>__schedule (17 samples, 2.54%)</title><rect x="22.4551%" y="549" width="2.5449%" height="15" fill="rgb(212,28,1)"/><text x="22.7051%" y="559.50">__..</text></g><g><title>update_rq_clock (1 samples, 0.15%)</title><rect x="24.8503%" y="533" width="0.1497%" height="15" fill="rgb(248,164,17)"/><text x="25.1003%" y="543.50"></text></g><g><title>_copy_to_iter (1 samples, 0.15%)</title><rect x="25.1497%" y="581" width="0.1497%" height="15" fill="rgb(222,171,42)"/><text x="25.3997%" y="591.50"></text></g><g><title>skb_copy_datagram_iter (4 samples, 0.60%)</title><rect x="25.0000%" y="613" width="0.5988%" height="15" fill="rgb(243,84,45)"/><text x="25.2500%" y="623.50"></text></g><g><title>__skb_datagram_iter (4 samples, 0.60%)</title><rect x="25.0000%" y="597" width="0.5988%" height="15" fill="rgb(252,49,23)"/><text x="25.2500%" y="607.50"></text></g><g><title>simple_copy_to_iter (2 samples, 0.30%)</title><rect x="25.2994%" y="581" width="0.2994%" height="15" fill="rgb(215,19,7)"/><text x="25.5494%" y="591.50"></text></g><g><title>__check_object_size (2 samples, 0.30%)</title><rect x="25.2994%" y="565" width="0.2994%" height="15" fill="rgb(238,81,41)"/><text x="25.5494%" y="575.50"></text></g><g><title>__virt_addr_valid (1 samples, 0.15%)</title><rect x="25.4491%" y="549" width="0.1497%" height="15" fill="rgb(210,199,37)"/><text x="25.6991%" y="559.50"></text></g><g><title>inet_recvmsg (28 samples, 4.19%)</title><rect x="21.5569%" y="645" width="4.1916%" height="15" fill="rgb(244,192,49)"/><text x="21.8069%" y="655.50">inet_..</text></g><g><title>tcp_recvmsg (28 samples, 4.19%)</title><rect x="21.5569%" y="629" width="4.1916%" height="15" fill="rgb(226,211,11)"/><text x="21.8069%" y="639.50">tcp_r..</text></g><g><title>tcp_cleanup_rbuf (1 samples, 0.15%)</title><rect x="25.5988%" y="613" width="0.1497%" height="15" fill="rgb(236,162,54)"/><text x="25.8488%" y="623.50"></text></g><g><title>__x64_sys_recvfrom (30 samples, 4.49%)</title><rect x="21.4072%" y="677" width="4.4910%" height="15" fill="rgb(220,229,9)"/><text x="21.6572%" y="687.50">__x64..</text></g><g><title>__sys_recvfrom (30 samples, 4.49%)</title><rect x="21.4072%" y="661" width="4.4910%" height="15" fill="rgb(250,87,22)"/><text x="21.6572%" y="671.50">__sys..</text></g><g><title>sockfd_lookup_light (1 samples, 0.15%)</title><rect x="25.7485%" y="645" width="0.1497%" height="15" fill="rgb(239,43,17)"/><text x="25.9985%" y="655.50"></text></g><g><title>__fget_light (1 samples, 0.15%)</title><rect x="25.7485%" y="629" width="0.1497%" height="15" fill="rgb(231,177,25)"/><text x="25.9985%" y="639.50"></text></g><g><title>do_syscall_64 (31 samples, 4.64%)</title><rect x="21.4072%" y="693" width="4.6407%" height="15" fill="rgb(219,179,1)"/><text x="21.6572%" y="703.50">do_sy..</text></g><g><title>syscall_slow_exit_work (1 samples, 0.15%)</title><rect x="25.8982%" y="677" width="0.1497%" height="15" fill="rgb(238,219,53)"/><text x="26.1482%" y="687.50"></text></g><g><title>entry_SYSCALL_64 (32 samples, 4.79%)</title><rect x="21.4072%" y="709" width="4.7904%" height="15" fill="rgb(232,167,36)"/><text x="21.6572%" y="719.50">entry_..</text></g><g><title>prepare_exit_to_usermode (1 samples, 0.15%)</title><rect x="26.0479%" y="693" width="0.1497%" height="15" fill="rgb(244,19,51)"/><text x="26.2979%" y="703.50"></text></g><g><title>__libc_recv (37 samples, 5.54%)</title><rect x="21.1078%" y="725" width="5.5389%" height="15" fill="rgb(224,6,22)"/><text x="21.3578%" y="735.50">__libc_..</text></g><g><title>syscall_return_via_sysret (3 samples, 0.45%)</title><rect x="26.1976%" y="709" width="0.4491%" height="15" fill="rgb(224,145,5)"/><text x="26.4476%" y="719.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (38 samples, 5.69%)</title><rect x="21.1078%" y="805" width="5.6886%" height="15" fill="rgb(234,130,49)"/><text x="21.3578%" y="815.50">&lt;std::i..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (38 samples, 5.69%)</title><rect x="21.1078%" y="789" width="5.6886%" height="15" fill="rgb(254,6,2)"/><text x="21.3578%" y="799.50">&lt;std::n..</text></g><g><title>std::sys_common::net::TcpStream::read (38 samples, 5.69%)</title><rect x="21.1078%" y="773" width="5.6886%" height="15" fill="rgb(208,96,46)"/><text x="21.3578%" y="783.50">std::sy..</text></g><g><title>std::sys::unix::net::Socket::read (38 samples, 5.69%)</title><rect x="21.1078%" y="757" width="5.6886%" height="15" fill="rgb(239,3,39)"/><text x="21.3578%" y="767.50">std::sy..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (38 samples, 5.69%)</title><rect x="21.1078%" y="741" width="5.6886%" height="15" fill="rgb(233,210,1)"/><text x="21.3578%" y="751.50">std::sy..</text></g><g><title>std::sys::unix::cvt (1 samples, 0.15%)</title><rect x="26.6467%" y="725" width="0.1497%" height="15" fill="rgb(244,137,37)"/><text x="26.8967%" y="735.50"></text></g><g><title>&lt;isize as std::sys::unix::IsMinusOne&gt;::is_minus_one (1 samples, 0.15%)</title><rect x="26.6467%" y="709" width="0.1497%" height="15" fill="rgb(240,136,2)"/><text x="26.8967%" y="719.50"></text></g><g><title>__rdl_alloc (1 samples, 0.15%)</title><rect x="26.9461%" y="741" width="0.1497%" height="15" fill="rgb(239,18,37)"/><text x="27.1961%" y="751.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.15%)</title><rect x="26.9461%" y="725" width="0.1497%" height="15" fill="rgb(218,185,22)"/><text x="27.1961%" y="735.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (41 samples, 6.14%)</title><rect x="21.1078%" y="821" width="6.1377%" height="15" fill="rgb(225,218,4)"/><text x="21.3578%" y="831.50">&lt;mysql_c..</text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (3 samples, 0.45%)</title><rect x="26.7964%" y="805" width="0.4491%" height="15" fill="rgb(230,182,32)"/><text x="27.0464%" y="815.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (3 samples, 0.45%)</title><rect x="26.7964%" y="789" width="0.4491%" height="15" fill="rgb(242,56,43)"/><text x="27.0464%" y="799.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (3 samples, 0.45%)</title><rect x="26.7964%" y="773" width="0.4491%" height="15" fill="rgb(233,99,24)"/><text x="27.0464%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.45%)</title><rect x="26.7964%" y="757" width="0.4491%" height="15" fill="rgb(234,209,42)"/><text x="27.0464%" y="767.50"></text></g><g><title>__rust_alloc (1 samples, 0.15%)</title><rect x="27.0958%" y="741" width="0.1497%" height="15" fill="rgb(227,7,12)"/><text x="27.3458%" y="751.50"></text></g><g><title>mysql::conn::Conn::read_packet (42 samples, 6.29%)</title><rect x="21.1078%" y="837" width="6.2874%" height="15" fill="rgb(245,203,43)"/><text x="21.3578%" y="847.50">mysql::c..</text></g><g><title>std::io::error::Error::_new (1 samples, 0.15%)</title><rect x="27.2455%" y="821" width="0.1497%" height="15" fill="rgb(238,205,33)"/><text x="27.4955%" y="831.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.15%)</title><rect x="27.2455%" y="805" width="0.1497%" height="15" fill="rgb(231,56,7)"/><text x="27.4955%" y="815.50"></text></g><g><title>lobsters::main (45 samples, 6.74%)</title><rect x="20.8084%" y="901" width="6.7365%" height="15" fill="rgb(244,186,29)"/><text x="21.0584%" y="911.50">lobsters:..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (43 samples, 6.44%)</title><rect x="21.1078%" y="885" width="6.4371%" height="15" fill="rgb(234,111,31)"/><text x="21.3578%" y="895.50">mysql::c..</text></g><g><title>mysql::conn::Conn::_query (43 samples, 6.44%)</title><rect x="21.1078%" y="869" width="6.4371%" height="15" fill="rgb(241,149,10)"/><text x="21.3578%" y="879.50">mysql::c..</text></g><g><title>mysql::conn::Conn::handle_result_set (43 samples, 6.44%)</title><rect x="21.1078%" y="853" width="6.4371%" height="15" fill="rgb(249,206,44)"/><text x="21.3578%" y="863.50">mysql::c..</text></g><g><title>mysql_common::packets::parse_ok_packet (1 samples, 0.15%)</title><rect x="27.3952%" y="837" width="0.1497%" height="15" fill="rgb(251,153,30)"/><text x="27.6452%" y="847.50"></text></g><g><title>mysql_common::io::ReadMysqlExt::read_lenenc_int (1 samples, 0.15%)</title><rect x="27.3952%" y="821" width="0.1497%" height="15" fill="rgb(239,152,38)"/><text x="27.6452%" y="831.50"></text></g><g><title>core::fmt::write (1 samples, 0.15%)</title><rect x="27.5449%" y="837" width="0.1497%" height="15" fill="rgb(249,139,47)"/><text x="27.7949%" y="847.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (1 samples, 0.15%)</title><rect x="27.5449%" y="821" width="0.1497%" height="15" fill="rgb(244,64,35)"/><text x="27.7949%" y="831.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::CreateTableStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.15%)</title><rect x="27.5449%" y="805" width="0.1497%" height="15" fill="rgb(216,46,15)"/><text x="27.7949%" y="815.50"></text></g><g><title>&lt;sql_parser::ast::defs::ddl::ColumnDef as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.15%)</title><rect x="27.5449%" y="789" width="0.1497%" height="15" fill="rgb(250,74,19)"/><text x="27.7949%" y="799.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.15%)</title><rect x="27.5449%" y="773" width="0.1497%" height="15" fill="rgb(249,42,33)"/><text x="27.7949%" y="783.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (1 samples, 0.15%)</title><rect x="27.5449%" y="757" width="0.1497%" height="15" fill="rgb(242,149,17)"/><text x="27.7949%" y="767.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.15%)</title><rect x="27.5449%" y="741" width="0.1497%" height="15" fill="rgb(244,29,21)"/><text x="27.7949%" y="751.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (1 samples, 0.15%)</title><rect x="27.5449%" y="725" width="0.1497%" height="15" fill="rgb(220,130,37)"/><text x="27.7949%" y="735.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (1 samples, 0.15%)</title><rect x="27.5449%" y="709" width="0.1497%" height="15" fill="rgb(211,67,2)"/><text x="27.7949%" y="719.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.15%)</title><rect x="27.5449%" y="693" width="0.1497%" height="15" fill="rgb(235,68,52)"/><text x="27.7949%" y="703.50"></text></g><g><title>mysql::conn::Conn::start_transaction (2 samples, 0.30%)</title><rect x="27.6946%" y="837" width="0.2994%" height="15" fill="rgb(246,142,3)"/><text x="27.9446%" y="847.50"></text></g><g><title>mysql::conn::Conn::_start_transaction (2 samples, 0.30%)</title><rect x="27.6946%" y="821" width="0.2994%" height="15" fill="rgb(241,25,7)"/><text x="27.9446%" y="831.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (2 samples, 0.30%)</title><rect x="27.6946%" y="805" width="0.2994%" height="15" fill="rgb(242,119,39)"/><text x="27.9446%" y="815.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.30%)</title><rect x="27.6946%" y="789" width="0.2994%" height="15" fill="rgb(241,98,45)"/><text x="27.9446%" y="799.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (2 samples, 0.30%)</title><rect x="27.6946%" y="773" width="0.2994%" height="15" fill="rgb(254,28,30)"/><text x="27.9446%" y="783.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (2 samples, 0.30%)</title><rect x="27.6946%" y="757" width="0.2994%" height="15" fill="rgb(241,142,54)"/><text x="27.9446%" y="767.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (2 samples, 0.30%)</title><rect x="27.6946%" y="741" width="0.2994%" height="15" fill="rgb(222,85,15)"/><text x="27.9446%" y="751.50"></text></g><g><title>std::sys_common::net::TcpStream::write (2 samples, 0.30%)</title><rect x="27.6946%" y="725" width="0.2994%" height="15" fill="rgb(210,85,47)"/><text x="27.9446%" y="735.50"></text></g><g><title>__libc_send (2 samples, 0.30%)</title><rect x="27.6946%" y="709" width="0.2994%" height="15" fill="rgb(224,206,25)"/><text x="27.9446%" y="719.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.30%)</title><rect x="27.6946%" y="693" width="0.2994%" height="15" fill="rgb(243,201,19)"/><text x="27.9446%" y="703.50"></text></g><g><title>do_syscall_64 (2 samples, 0.30%)</title><rect x="27.6946%" y="677" width="0.2994%" height="15" fill="rgb(236,59,4)"/><text x="27.9446%" y="687.50"></text></g><g><title>__x64_sys_sendto (2 samples, 0.30%)</title><rect x="27.6946%" y="661" width="0.2994%" height="15" fill="rgb(254,179,45)"/><text x="27.9446%" y="671.50"></text></g><g><title>__sys_sendto (2 samples, 0.30%)</title><rect x="27.6946%" y="645" width="0.2994%" height="15" fill="rgb(226,14,10)"/><text x="27.9446%" y="655.50"></text></g><g><title>sock_sendmsg (2 samples, 0.30%)</title><rect x="27.6946%" y="629" width="0.2994%" height="15" fill="rgb(244,27,41)"/><text x="27.9446%" y="639.50"></text></g><g><title>tcp_sendmsg (2 samples, 0.30%)</title><rect x="27.6946%" y="613" width="0.2994%" height="15" fill="rgb(235,35,32)"/><text x="27.9446%" y="623.50"></text></g><g><title>tcp_sendmsg_locked (2 samples, 0.30%)</title><rect x="27.6946%" y="597" width="0.2994%" height="15" fill="rgb(218,68,31)"/><text x="27.9446%" y="607.50"></text></g><g><title>__tcp_push_pending_frames (2 samples, 0.30%)</title><rect x="27.6946%" y="581" width="0.2994%" height="15" fill="rgb(207,120,37)"/><text x="27.9446%" y="591.50"></text></g><g><title>tcp_write_xmit (2 samples, 0.30%)</title><rect x="27.6946%" y="565" width="0.2994%" height="15" fill="rgb(227,98,0)"/><text x="27.9446%" y="575.50"></text></g><g><title>__tcp_transmit_skb (2 samples, 0.30%)</title><rect x="27.6946%" y="549" width="0.2994%" height="15" fill="rgb(207,7,3)"/><text x="27.9446%" y="559.50"></text></g><g><title>__ip_queue_xmit (2 samples, 0.30%)</title><rect x="27.6946%" y="533" width="0.2994%" height="15" fill="rgb(206,98,19)"/><text x="27.9446%" y="543.50"></text></g><g><title>ip_output (2 samples, 0.30%)</title><rect x="27.6946%" y="517" width="0.2994%" height="15" fill="rgb(217,5,26)"/><text x="27.9446%" y="527.50"></text></g><g><title>ip_finish_output2 (2 samples, 0.30%)</title><rect x="27.6946%" y="501" width="0.2994%" height="15" fill="rgb(235,190,38)"/><text x="27.9446%" y="511.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.15%)</title><rect x="27.8443%" y="485" width="0.1497%" height="15" fill="rgb(247,86,24)"/><text x="28.0943%" y="495.50"></text></g><g><title>do_softirq (1 samples, 0.15%)</title><rect x="27.8443%" y="469" width="0.1497%" height="15" fill="rgb(205,101,16)"/><text x="28.0943%" y="479.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.15%)</title><rect x="27.8443%" y="453" width="0.1497%" height="15" fill="rgb(246,168,33)"/><text x="28.0943%" y="463.50"></text></g><g><title>__do_softirq (1 samples, 0.15%)</title><rect x="27.8443%" y="437" width="0.1497%" height="15" fill="rgb(231,114,1)"/><text x="28.0943%" y="447.50"></text></g><g><title>net_rx_action (1 samples, 0.15%)</title><rect x="27.8443%" y="421" width="0.1497%" height="15" fill="rgb(207,184,53)"/><text x="28.0943%" y="431.50"></text></g><g><title>process_backlog (1 samples, 0.15%)</title><rect x="27.8443%" y="405" width="0.1497%" height="15" fill="rgb(224,95,51)"/><text x="28.0943%" y="415.50"></text></g><g><title>__netif_receive_skb_one_core (1 samples, 0.15%)</title><rect x="27.8443%" y="389" width="0.1497%" height="15" fill="rgb(212,188,45)"/><text x="28.0943%" y="399.50"></text></g><g><title>ip_rcv (1 samples, 0.15%)</title><rect x="27.8443%" y="373" width="0.1497%" height="15" fill="rgb(223,154,38)"/><text x="28.0943%" y="383.50"></text></g><g><title>ip_local_deliver (1 samples, 0.15%)</title><rect x="27.8443%" y="357" width="0.1497%" height="15" fill="rgb(251,22,52)"/><text x="28.0943%" y="367.50"></text></g><g><title>ip_local_deliver_finish (1 samples, 0.15%)</title><rect x="27.8443%" y="341" width="0.1497%" height="15" fill="rgb(229,209,22)"/><text x="28.0943%" y="351.50"></text></g><g><title>ip_protocol_deliver_rcu (1 samples, 0.15%)</title><rect x="27.8443%" y="325" width="0.1497%" height="15" fill="rgb(234,138,34)"/><text x="28.0943%" y="335.50"></text></g><g><title>tcp_v4_rcv (1 samples, 0.15%)</title><rect x="27.8443%" y="309" width="0.1497%" height="15" fill="rgb(212,95,11)"/><text x="28.0943%" y="319.50"></text></g><g><title>tcp_v4_do_rcv (1 samples, 0.15%)</title><rect x="27.8443%" y="293" width="0.1497%" height="15" fill="rgb(240,179,47)"/><text x="28.0943%" y="303.50"></text></g><g><title>tcp_rcv_established (1 samples, 0.15%)</title><rect x="27.8443%" y="277" width="0.1497%" height="15" fill="rgb(240,163,11)"/><text x="28.0943%" y="287.50"></text></g><g><title>sock_def_readable (1 samples, 0.15%)</title><rect x="27.8443%" y="261" width="0.1497%" height="15" fill="rgb(236,37,12)"/><text x="28.0943%" y="271.50"></text></g><g><title>__wake_up_common_lock (1 samples, 0.15%)</title><rect x="27.8443%" y="245" width="0.1497%" height="15" fill="rgb(232,164,16)"/><text x="28.0943%" y="255.50"></text></g><g><title>__wake_up_common (1 samples, 0.15%)</title><rect x="27.8443%" y="229" width="0.1497%" height="15" fill="rgb(244,205,15)"/><text x="28.0943%" y="239.50"></text></g><g><title>pollwake (1 samples, 0.15%)</title><rect x="27.8443%" y="213" width="0.1497%" height="15" fill="rgb(223,117,47)"/><text x="28.0943%" y="223.50"></text></g><g><title>try_to_wake_up (1 samples, 0.15%)</title><rect x="27.8443%" y="197" width="0.1497%" height="15" fill="rgb(244,107,35)"/><text x="28.0943%" y="207.50"></text></g><g><title>ttwu_do_wakeup (1 samples, 0.15%)</title><rect x="27.8443%" y="181" width="0.1497%" height="15" fill="rgb(205,140,8)"/><text x="28.0943%" y="191.50"></text></g><g><title>check_preempt_curr (1 samples, 0.15%)</title><rect x="27.8443%" y="165" width="0.1497%" height="15" fill="rgb(228,84,46)"/><text x="28.0943%" y="175.50"></text></g><g><title>resched_curr (1 samples, 0.15%)</title><rect x="27.8443%" y="149" width="0.1497%" height="15" fill="rgb(254,188,9)"/><text x="28.0943%" y="159.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (4 samples, 0.60%)</title><rect x="27.5449%" y="901" width="0.5988%" height="15" fill="rgb(206,112,54)"/><text x="27.7949%" y="911.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (4 samples, 0.60%)</title><rect x="27.5449%" y="885" width="0.5988%" height="15" fill="rgb(216,84,49)"/><text x="27.7949%" y="895.50"></text></g><g><title>decor::Shim::create_schema (4 samples, 0.60%)</title><rect x="27.5449%" y="869" width="0.5988%" height="15" fill="rgb(214,194,35)"/><text x="27.7949%" y="879.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query_drop (4 samples, 0.60%)</title><rect x="27.5449%" y="853" width="0.5988%" height="15" fill="rgb(249,28,3)"/><text x="27.7949%" y="863.50"></text></g><g><title>mysql::conn::transaction::Transaction::commit (1 samples, 0.15%)</title><rect x="27.9940%" y="837" width="0.1497%" height="15" fill="rgb(222,56,52)"/><text x="28.2440%" y="847.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (1 samples, 0.15%)</title><rect x="27.9940%" y="821" width="0.1497%" height="15" fill="rgb(245,217,50)"/><text x="28.2440%" y="831.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.15%)</title><rect x="27.9940%" y="805" width="0.1497%" height="15" fill="rgb(213,201,24)"/><text x="28.2440%" y="815.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.15%)</title><rect x="27.9940%" y="789" width="0.1497%" height="15" fill="rgb(248,116,28)"/><text x="28.2440%" y="799.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.15%)</title><rect x="27.9940%" y="773" width="0.1497%" height="15" fill="rgb(219,72,43)"/><text x="28.2440%" y="783.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.15%)</title><rect x="27.9940%" y="757" width="0.1497%" height="15" fill="rgb(209,138,14)"/><text x="28.2440%" y="767.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1 samples, 0.15%)</title><rect x="27.9940%" y="741" width="0.1497%" height="15" fill="rgb(222,18,33)"/><text x="28.2440%" y="751.50"></text></g><g><title>__libc_send (1 samples, 0.15%)</title><rect x="27.9940%" y="725" width="0.1497%" height="15" fill="rgb(213,199,7)"/><text x="28.2440%" y="735.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.15%)</title><rect x="27.9940%" y="709" width="0.1497%" height="15" fill="rgb(250,110,10)"/><text x="28.2440%" y="719.50"></text></g><g><title>do_syscall_64 (1 samples, 0.15%)</title><rect x="27.9940%" y="693" width="0.1497%" height="15" fill="rgb(248,123,6)"/><text x="28.2440%" y="703.50"></text></g><g><title>__x64_sys_sendto (1 samples, 0.15%)</title><rect x="27.9940%" y="677" width="0.1497%" height="15" fill="rgb(206,91,31)"/><text x="28.2440%" y="687.50"></text></g><g><title>__sys_sendto (1 samples, 0.15%)</title><rect x="27.9940%" y="661" width="0.1497%" height="15" fill="rgb(211,154,13)"/><text x="28.2440%" y="671.50"></text></g><g><title>sock_sendmsg (1 samples, 0.15%)</title><rect x="27.9940%" y="645" width="0.1497%" height="15" fill="rgb(225,148,7)"/><text x="28.2440%" y="655.50"></text></g><g><title>tcp_sendmsg (1 samples, 0.15%)</title><rect x="27.9940%" y="629" width="0.1497%" height="15" fill="rgb(220,160,43)"/><text x="28.2440%" y="639.50"></text></g><g><title>tcp_sendmsg_locked (1 samples, 0.15%)</title><rect x="27.9940%" y="613" width="0.1497%" height="15" fill="rgb(213,52,39)"/><text x="28.2440%" y="623.50"></text></g><g><title>tcp_send_mss (1 samples, 0.15%)</title><rect x="27.9940%" y="597" width="0.1497%" height="15" fill="rgb(243,137,7)"/><text x="28.2440%" y="607.50"></text></g><g><title>mysql::conn::Conn::handle_ok (3 samples, 0.45%)</title><rect x="28.1437%" y="901" width="0.4491%" height="15" fill="rgb(230,79,13)"/><text x="28.3937%" y="911.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (1 samples, 0.15%)</title><rect x="28.5928%" y="901" width="0.1497%" height="15" fill="rgb(247,105,23)"/><text x="28.8428%" y="911.50"></text></g><g><title>regex::compile::Compiler::c (1 samples, 0.15%)</title><rect x="28.7425%" y="869" width="0.1497%" height="15" fill="rgb(223,179,41)"/><text x="28.9925%" y="879.50"></text></g><g><title>regex::compile::Compiler::c_repeat_range (1 samples, 0.15%)</title><rect x="28.7425%" y="853" width="0.1497%" height="15" fill="rgb(218,9,34)"/><text x="28.9925%" y="863.50"></text></g><g><title>regex::compile::Compiler::c_concat (1 samples, 0.15%)</title><rect x="28.7425%" y="837" width="0.1497%" height="15" fill="rgb(222,106,8)"/><text x="28.9925%" y="847.50"></text></g><g><title>regex::compile::Compiler::c_class (1 samples, 0.15%)</title><rect x="28.7425%" y="821" width="0.1497%" height="15" fill="rgb(211,220,0)"/><text x="28.9925%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="28.7425%" y="805" width="0.1497%" height="15" fill="rgb(229,52,16)"/><text x="28.9925%" y="815.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.15%)</title><rect x="28.7425%" y="789" width="0.1497%" height="15" fill="rgb(212,155,18)"/><text x="28.9925%" y="799.50"></text></g><g><title>_int_realloc (1 samples, 0.15%)</title><rect x="28.7425%" y="773" width="0.1497%" height="15" fill="rgb(242,21,14)"/><text x="28.9925%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.15%)</title><rect x="28.7425%" y="757" width="0.1497%" height="15" fill="rgb(222,19,48)"/><text x="28.9925%" y="767.50"></text></g><g><title>page_fault (1 samples, 0.15%)</title><rect x="28.7425%" y="741" width="0.1497%" height="15" fill="rgb(232,45,27)"/><text x="28.9925%" y="751.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.15%)</title><rect x="28.7425%" y="725" width="0.1497%" height="15" fill="rgb(249,103,42)"/><text x="28.9925%" y="735.50"></text></g><g><title>handle_mm_fault (1 samples, 0.15%)</title><rect x="28.7425%" y="709" width="0.1497%" height="15" fill="rgb(246,81,33)"/><text x="28.9925%" y="719.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.15%)</title><rect x="28.7425%" y="693" width="0.1497%" height="15" fill="rgb(252,33,42)"/><text x="28.9925%" y="703.50"></text></g><g><title>mem_cgroup_try_charge_delay (1 samples, 0.15%)</title><rect x="28.7425%" y="677" width="0.1497%" height="15" fill="rgb(209,212,41)"/><text x="28.9925%" y="687.50"></text></g><g><title>mem_cgroup_try_charge (1 samples, 0.15%)</title><rect x="28.7425%" y="661" width="0.1497%" height="15" fill="rgb(207,154,6)"/><text x="28.9925%" y="671.50"></text></g><g><title>regex::exec::ExecBuilder::build (2 samples, 0.30%)</title><rect x="28.7425%" y="901" width="0.2994%" height="15" fill="rgb(223,64,47)"/><text x="28.9925%" y="911.50"></text></g><g><title>regex::compile::Compiler::compile (2 samples, 0.30%)</title><rect x="28.7425%" y="885" width="0.2994%" height="15" fill="rgb(211,161,38)"/><text x="28.9925%" y="895.50"></text></g><g><title>regex::compile::Compiler::compile_finish (1 samples, 0.15%)</title><rect x="28.8922%" y="869" width="0.1497%" height="15" fill="rgb(219,138,40)"/><text x="29.1422%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.15%)</title><rect x="28.8922%" y="853" width="0.1497%" height="15" fill="rgb(241,228,46)"/><text x="29.1422%" y="863.50"></text></g><g><title>page_fault (1 samples, 0.15%)</title><rect x="28.8922%" y="837" width="0.1497%" height="15" fill="rgb(223,209,38)"/><text x="29.1422%" y="847.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.15%)</title><rect x="28.8922%" y="821" width="0.1497%" height="15" fill="rgb(236,164,45)"/><text x="29.1422%" y="831.50"></text></g><g><title>handle_mm_fault (1 samples, 0.15%)</title><rect x="28.8922%" y="805" width="0.1497%" height="15" fill="rgb(231,15,5)"/><text x="29.1422%" y="815.50"></text></g><g><title>__count_memcg_events.part.0 (1 samples, 0.15%)</title><rect x="28.8922%" y="789" width="0.1497%" height="15" fill="rgb(252,35,15)"/><text x="29.1422%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (1 samples, 0.15%)</title><rect x="29.0419%" y="901" width="0.1497%" height="15" fill="rgb(248,181,18)"/><text x="29.2919%" y="911.50"></text></g><g><title>sql_parser::parser::Parser::parse_columns (1 samples, 0.15%)</title><rect x="29.0419%" y="885" width="0.1497%" height="15" fill="rgb(233,39,42)"/><text x="29.2919%" y="895.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (1 samples, 0.15%)</title><rect x="29.0419%" y="869" width="0.1497%" height="15" fill="rgb(238,110,33)"/><text x="29.2919%" y="879.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (1 samples, 0.15%)</title><rect x="29.0419%" y="853" width="0.1497%" height="15" fill="rgb(233,195,10)"/><text x="29.2919%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (1 samples, 0.15%)</title><rect x="29.0419%" y="837" width="0.1497%" height="15" fill="rgb(254,105,3)"/><text x="29.2919%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::expected (1 samples, 0.15%)</title><rect x="29.0419%" y="821" width="0.1497%" height="15" fill="rgb(221,225,9)"/><text x="29.2919%" y="831.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="29.0419%" y="805" width="0.1497%" height="15" fill="rgb(224,227,45)"/><text x="29.2919%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="29.0419%" y="789" width="0.1497%" height="15" fill="rgb(229,198,43)"/><text x="29.2919%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.15%)</title><rect x="29.0419%" y="773" width="0.1497%" height="15" fill="rgb(206,209,35)"/><text x="29.2919%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.15%)</title><rect x="29.0419%" y="757" width="0.1497%" height="15" fill="rgb(245,195,53)"/><text x="29.2919%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.15%)</title><rect x="29.0419%" y="741" width="0.1497%" height="15" fill="rgb(240,92,26)"/><text x="29.2919%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.15%)</title><rect x="29.0419%" y="725" width="0.1497%" height="15" fill="rgb(207,40,23)"/><text x="29.2919%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.15%)</title><rect x="29.0419%" y="709" width="0.1497%" height="15" fill="rgb(223,111,35)"/><text x="29.2919%" y="719.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="29.0419%" y="693" width="0.1497%" height="15" fill="rgb(229,147,28)"/><text x="29.2919%" y="703.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.15%)</title><rect x="29.0419%" y="677" width="0.1497%" height="15" fill="rgb(211,29,28)"/><text x="29.2919%" y="687.50"></text></g><g><title>sql_parser::parser::parse_statements (3 samples, 0.45%)</title><rect x="29.1916%" y="901" width="0.4491%" height="15" fill="rgb(228,72,33)"/><text x="29.4416%" y="911.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (3 samples, 0.45%)</title><rect x="29.1916%" y="885" width="0.4491%" height="15" fill="rgb(205,214,31)"/><text x="29.4416%" y="895.50"></text></g><g><title>sql_parser::parser::Parser::parse_columns (3 samples, 0.45%)</title><rect x="29.1916%" y="869" width="0.4491%" height="15" fill="rgb(224,111,15)"/><text x="29.4416%" y="879.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (2 samples, 0.30%)</title><rect x="29.3413%" y="853" width="0.2994%" height="15" fill="rgb(253,21,26)"/><text x="29.5913%" y="863.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.15%)</title><rect x="29.4910%" y="837" width="0.1497%" height="15" fill="rgb(245,139,43)"/><text x="29.7410%" y="847.50"></text></g><g><title>start_thread (2 samples, 0.30%)</title><rect x="29.6407%" y="901" width="0.2994%" height="15" fill="rgb(252,170,7)"/><text x="29.8907%" y="911.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (2 samples, 0.30%)</title><rect x="29.6407%" y="885" width="0.2994%" height="15" fill="rgb(231,118,14)"/><text x="29.8907%" y="895.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (2 samples, 0.30%)</title><rect x="29.6407%" y="869" width="0.2994%" height="15" fill="rgb(238,83,0)"/><text x="29.8907%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (2 samples, 0.30%)</title><rect x="29.6407%" y="853" width="0.2994%" height="15" fill="rgb(221,39,39)"/><text x="29.8907%" y="863.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (2 samples, 0.30%)</title><rect x="29.6407%" y="837" width="0.2994%" height="15" fill="rgb(222,119,46)"/><text x="29.8907%" y="847.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2 samples, 0.30%)</title><rect x="29.6407%" y="821" width="0.2994%" height="15" fill="rgb(222,165,49)"/><text x="29.8907%" y="831.50"></text></g><g><title>decor::Shim::run_on_tcp (2 samples, 0.30%)</title><rect x="29.6407%" y="805" width="0.2994%" height="15" fill="rgb(219,113,52)"/><text x="29.8907%" y="815.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (2 samples, 0.30%)</title><rect x="29.6407%" y="789" width="0.2994%" height="15" fill="rgb(214,7,15)"/><text x="29.8907%" y="799.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (2 samples, 0.30%)</title><rect x="29.6407%" y="773" width="0.2994%" height="15" fill="rgb(235,32,4)"/><text x="29.8907%" y="783.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.30%)</title><rect x="29.6407%" y="757" width="0.2994%" height="15" fill="rgb(238,90,54)"/><text x="29.8907%" y="767.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (2 samples, 0.30%)</title><rect x="29.6407%" y="741" width="0.2994%" height="15" fill="rgb(213,208,19)"/><text x="29.8907%" y="751.50"></text></g><g><title>mysql::conn::Conn::read_packet (2 samples, 0.30%)</title><rect x="29.6407%" y="725" width="0.2994%" height="15" fill="rgb(233,156,4)"/><text x="29.8907%" y="735.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.30%)</title><rect x="29.6407%" y="709" width="0.2994%" height="15" fill="rgb(207,194,5)"/><text x="29.8907%" y="719.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (2 samples, 0.30%)</title><rect x="29.6407%" y="693" width="0.2994%" height="15" fill="rgb(206,111,30)"/><text x="29.8907%" y="703.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (2 samples, 0.30%)</title><rect x="29.6407%" y="677" width="0.2994%" height="15" fill="rgb(243,70,54)"/><text x="29.8907%" y="687.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.30%)</title><rect x="29.6407%" y="661" width="0.2994%" height="15" fill="rgb(242,28,8)"/><text x="29.8907%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="29.7904%" y="645" width="0.1497%" height="15" fill="rgb(219,106,18)"/><text x="30.0404%" y="655.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.15%)</title><rect x="29.9401%" y="901" width="0.1497%" height="15" fill="rgb(244,222,10)"/><text x="30.1901%" y="911.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (1 samples, 0.15%)</title><rect x="30.0898%" y="901" width="0.1497%" height="15" fill="rgb(236,179,52)"/><text x="30.3398%" y="911.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.15%)</title><rect x="30.0898%" y="885" width="0.1497%" height="15" fill="rgb(213,23,39)"/><text x="30.3398%" y="895.50"></text></g><g><title>lobsters::main (1 samples, 0.15%)</title><rect x="30.0898%" y="869" width="0.1497%" height="15" fill="rgb(238,48,10)"/><text x="30.3398%" y="879.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (1 samples, 0.15%)</title><rect x="30.0898%" y="853" width="0.1497%" height="15" fill="rgb(251,196,23)"/><text x="30.3398%" y="863.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.15%)</title><rect x="30.0898%" y="837" width="0.1497%" height="15" fill="rgb(250,152,24)"/><text x="30.3398%" y="847.50"></text></g><g><title>mysql::conn::query_result::QueryResult&lt;T&gt;::handle_next (1 samples, 0.15%)</title><rect x="30.0898%" y="821" width="0.1497%" height="15" fill="rgb(209,150,17)"/><text x="30.3398%" y="831.50"></text></g><g><title>mysql::conn::Conn::more_results_exists (1 samples, 0.15%)</title><rect x="30.0898%" y="805" width="0.1497%" height="15" fill="rgb(234,202,34)"/><text x="30.3398%" y="815.50"></text></g><g><title>hwloc::Topology::new (2 samples, 0.30%)</title><rect x="30.2395%" y="773" width="0.2994%" height="15" fill="rgb(253,148,53)"/><text x="30.4895%" y="783.50"></text></g><g><title>hwloc_topology_load (2 samples, 0.30%)</title><rect x="30.2395%" y="757" width="0.2994%" height="15" fill="rgb(218,129,16)"/><text x="30.4895%" y="767.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.30%)</title><rect x="30.2395%" y="741" width="0.2994%" height="15" fill="rgb(216,85,19)"/><text x="30.4895%" y="751.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.30%)</title><rect x="30.2395%" y="725" width="0.2994%" height="15" fill="rgb(235,228,7)"/><text x="30.4895%" y="735.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.30%)</title><rect x="30.2395%" y="709" width="0.2994%" height="15" fill="rgb(245,175,0)"/><text x="30.4895%" y="719.50"></text></g><g><title>__GI___openat (2 samples, 0.30%)</title><rect x="30.2395%" y="693" width="0.2994%" height="15" fill="rgb(208,168,36)"/><text x="30.4895%" y="703.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.30%)</title><rect x="30.2395%" y="677" width="0.2994%" height="15" fill="rgb(246,171,24)"/><text x="30.4895%" y="687.50"></text></g><g><title>do_syscall_64 (2 samples, 0.30%)</title><rect x="30.2395%" y="661" width="0.2994%" height="15" fill="rgb(215,142,24)"/><text x="30.4895%" y="671.50"></text></g><g><title>__x64_sys_openat (2 samples, 0.30%)</title><rect x="30.2395%" y="645" width="0.2994%" height="15" fill="rgb(250,187,7)"/><text x="30.4895%" y="655.50"></text></g><g><title>do_sys_openat2 (2 samples, 0.30%)</title><rect x="30.2395%" y="629" width="0.2994%" height="15" fill="rgb(228,66,33)"/><text x="30.4895%" y="639.50"></text></g><g><title>do_filp_open (2 samples, 0.30%)</title><rect x="30.2395%" y="613" width="0.2994%" height="15" fill="rgb(234,215,21)"/><text x="30.4895%" y="623.50"></text></g><g><title>path_openat (2 samples, 0.30%)</title><rect x="30.2395%" y="597" width="0.2994%" height="15" fill="rgb(222,191,20)"/><text x="30.4895%" y="607.50"></text></g><g><title>link_path_walk (2 samples, 0.30%)</title><rect x="30.2395%" y="581" width="0.2994%" height="15" fill="rgb(245,79,54)"/><text x="30.4895%" y="591.50"></text></g><g><title>walk_component (2 samples, 0.30%)</title><rect x="30.2395%" y="565" width="0.2994%" height="15" fill="rgb(240,10,37)"/><text x="30.4895%" y="575.50"></text></g><g><title>lookup_fast.constprop.0 (1 samples, 0.15%)</title><rect x="30.3892%" y="549" width="0.1497%" height="15" fill="rgb(214,192,32)"/><text x="30.6392%" y="559.50"></text></g><g><title>__d_lookup (1 samples, 0.15%)</title><rect x="30.3892%" y="533" width="0.1497%" height="15" fill="rgb(209,36,54)"/><text x="30.6392%" y="543.50"></text></g><g><title>std::rt::lang_start_internal (5 samples, 0.75%)</title><rect x="30.2395%" y="901" width="0.7485%" height="15" fill="rgb(220,10,11)"/><text x="30.4895%" y="911.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.75%)</title><rect x="30.2395%" y="885" width="0.7485%" height="15" fill="rgb(221,106,17)"/><text x="30.4895%" y="895.50"></text></g><g><title>std::panicking::try (5 samples, 0.75%)</title><rect x="30.2395%" y="869" width="0.7485%" height="15" fill="rgb(251,142,44)"/><text x="30.4895%" y="879.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.75%)</title><rect x="30.2395%" y="853" width="0.7485%" height="15" fill="rgb(238,13,15)"/><text x="30.4895%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (5 samples, 0.75%)</title><rect x="30.2395%" y="837" width="0.7485%" height="15" fill="rgb(208,107,27)"/><text x="30.4895%" y="847.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (5 samples, 0.75%)</title><rect x="30.2395%" y="821" width="0.7485%" height="15" fill="rgb(205,136,37)"/><text x="30.4895%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (5 samples, 0.75%)</title><rect x="30.2395%" y="805" width="0.7485%" height="15" fill="rgb(250,205,27)"/><text x="30.4895%" y="815.50"></text></g><g><title>lobsters::main (5 samples, 0.75%)</title><rect x="30.2395%" y="789" width="0.7485%" height="15" fill="rgb(210,80,43)"/><text x="30.4895%" y="799.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (3 samples, 0.45%)</title><rect x="30.5389%" y="773" width="0.4491%" height="15" fill="rgb(247,160,36)"/><text x="30.7889%" y="783.50"></text></g><g><title>mysql::conn::Conn::_query (3 samples, 0.45%)</title><rect x="30.5389%" y="757" width="0.4491%" height="15" fill="rgb(234,13,49)"/><text x="30.7889%" y="767.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (3 samples, 0.45%)</title><rect x="30.5389%" y="741" width="0.4491%" height="15" fill="rgb(234,122,0)"/><text x="30.7889%" y="751.50"></text></g><g><title>__GI___libc_free (1 samples, 0.15%)</title><rect x="30.8383%" y="725" width="0.1497%" height="15" fill="rgb(207,146,38)"/><text x="31.0883%" y="735.50"></text></g><g><title>[unknown] (193 samples, 28.89%)</title><rect x="2.2455%" y="917" width="28.8922%" height="15" fill="rgb(207,177,25)"/><text x="2.4955%" y="927.50">[unknown]</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.15%)</title><rect x="30.9880%" y="901" width="0.1497%" height="15" fill="rgb(211,178,42)"/><text x="31.2380%" y="911.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (1 samples, 0.15%)</title><rect x="30.9880%" y="885" width="0.1497%" height="15" fill="rgb(230,69,54)"/><text x="31.2380%" y="895.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (1 samples, 0.15%)</title><rect x="30.9880%" y="869" width="0.1497%" height="15" fill="rgb(214,135,41)"/><text x="31.2380%" y="879.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (1 samples, 0.15%)</title><rect x="30.9880%" y="853" width="0.1497%" height="15" fill="rgb(237,67,25)"/><text x="31.2380%" y="863.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.15%)</title><rect x="30.9880%" y="837" width="0.1497%" height="15" fill="rgb(222,189,50)"/><text x="31.2380%" y="847.50"></text></g><g><title>decor::Shim::run_on_tcp (1 samples, 0.15%)</title><rect x="30.9880%" y="821" width="0.1497%" height="15" fill="rgb(245,148,34)"/><text x="31.2380%" y="831.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (1 samples, 0.15%)</title><rect x="30.9880%" y="805" width="0.1497%" height="15" fill="rgb(222,29,6)"/><text x="31.2380%" y="815.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (1 samples, 0.15%)</title><rect x="30.9880%" y="789" width="0.1497%" height="15" fill="rgb(221,189,43)"/><text x="31.2380%" y="799.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.15%)</title><rect x="30.9880%" y="773" width="0.1497%" height="15" fill="rgb(207,36,27)"/><text x="31.2380%" y="783.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.15%)</title><rect x="30.9880%" y="757" width="0.1497%" height="15" fill="rgb(217,90,24)"/><text x="31.2380%" y="767.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.15%)</title><rect x="30.9880%" y="741" width="0.1497%" height="15" fill="rgb(224,66,35)"/><text x="31.2380%" y="751.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="30.9880%" y="725" width="0.1497%" height="15" fill="rgb(221,13,50)"/><text x="31.2380%" y="735.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (1 samples, 0.15%)</title><rect x="30.9880%" y="709" width="0.1497%" height="15" fill="rgb(236,68,49)"/><text x="31.2380%" y="719.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (1 samples, 0.15%)</title><rect x="30.9880%" y="693" width="0.1497%" height="15" fill="rgb(229,146,28)"/><text x="31.2380%" y="703.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.15%)</title><rect x="30.9880%" y="677" width="0.1497%" height="15" fill="rgb(225,31,38)"/><text x="31.2380%" y="687.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.15%)</title><rect x="30.9880%" y="661" width="0.1497%" height="15" fill="rgb(250,208,3)"/><text x="31.2380%" y="671.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (1 samples, 0.15%)</title><rect x="31.2874%" y="773" width="0.1497%" height="15" fill="rgb(246,54,23)"/><text x="31.5374%" y="783.50"></text></g><g><title>core::fmt::write (1 samples, 0.15%)</title><rect x="31.2874%" y="757" width="0.1497%" height="15" fill="rgb(243,76,11)"/><text x="31.5374%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (1 samples, 0.15%)</title><rect x="31.2874%" y="741" width="0.1497%" height="15" fill="rgb(245,21,50)"/><text x="31.5374%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.15%)</title><rect x="31.2874%" y="725" width="0.1497%" height="15" fill="rgb(228,9,43)"/><text x="31.5374%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.15%)</title><rect x="31.2874%" y="709" width="0.1497%" height="15" fill="rgb(208,100,47)"/><text x="31.5374%" y="719.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.15%)</title><rect x="31.2874%" y="693" width="0.1497%" height="15" fill="rgb(232,26,8)"/><text x="31.5374%" y="703.50"></text></g><g><title>__rust_dealloc (1 samples, 0.15%)</title><rect x="31.2874%" y="677" width="0.1497%" height="15" fill="rgb(216,166,38)"/><text x="31.5374%" y="687.50"></text></g><g><title>mysql::conn::Conn::handle_ok (1 samples, 0.15%)</title><rect x="31.5868%" y="725" width="0.1497%" height="15" fill="rgb(251,202,51)"/><text x="31.8368%" y="735.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.15%)</title><rect x="31.8862%" y="709" width="0.1497%" height="15" fill="rgb(254,216,34)"/><text x="32.1362%" y="719.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="31.8862%" y="693" width="0.1497%" height="15" fill="rgb(251,32,27)"/><text x="32.1362%" y="703.50"></text></g><g><title>__kfree_skb (1 samples, 0.15%)</title><rect x="33.0838%" y="501" width="0.1497%" height="15" fill="rgb(208,127,28)"/><text x="33.3338%" y="511.50"></text></g><g><title>skb_release_head_state (1 samples, 0.15%)</title><rect x="33.0838%" y="485" width="0.1497%" height="15" fill="rgb(224,137,22)"/><text x="33.3338%" y="495.50"></text></g><g><title>dst_release (1 samples, 0.15%)</title><rect x="33.0838%" y="469" width="0.1497%" height="15" fill="rgb(254,70,32)"/><text x="33.3338%" y="479.50"></text></g><g><title>_raw_spin_lock_bh (2 samples, 0.30%)</title><rect x="33.2335%" y="485" width="0.2994%" height="15" fill="rgb(229,75,37)"/><text x="33.4835%" y="495.50"></text></g><g><title>preempt_count_add (1 samples, 0.15%)</title><rect x="33.3832%" y="469" width="0.1497%" height="15" fill="rgb(252,64,23)"/><text x="33.6332%" y="479.50"></text></g><g><title>remove_wait_queue (3 samples, 0.45%)</title><rect x="33.5329%" y="485" width="0.4491%" height="15" fill="rgb(232,162,48)"/><text x="33.7829%" y="495.50"></text></g><g><title>_raw_spin_lock_irqsave (3 samples, 0.45%)</title><rect x="33.5329%" y="469" width="0.4491%" height="15" fill="rgb(246,160,12)"/><text x="33.7829%" y="479.50"></text></g><g><title>finish_task_switch (1 samples, 0.15%)</title><rect x="34.5808%" y="421" width="0.1497%" height="15" fill="rgb(247,166,0)"/><text x="34.8308%" y="431.50"></text></g><g><title>_raw_spin_unlock_irq (1 samples, 0.15%)</title><rect x="34.5808%" y="405" width="0.1497%" height="15" fill="rgb(249,219,21)"/><text x="34.8308%" y="415.50"></text></g><g><title>preempt_count_sub (1 samples, 0.15%)</title><rect x="34.5808%" y="389" width="0.1497%" height="15" fill="rgb(205,209,3)"/><text x="34.8308%" y="399.50"></text></g><g><title>pick_next_task_fair (1 samples, 0.15%)</title><rect x="34.7305%" y="421" width="0.1497%" height="15" fill="rgb(243,44,1)"/><text x="34.9805%" y="431.50"></text></g><g><title>newidle_balance (1 samples, 0.15%)</title><rect x="34.7305%" y="405" width="0.1497%" height="15" fill="rgb(206,159,16)"/><text x="34.9805%" y="415.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.15%)</title><rect x="34.7305%" y="389" width="0.1497%" height="15" fill="rgb(244,77,30)"/><text x="34.9805%" y="399.50"></text></g><g><title>psi_task_change (3 samples, 0.45%)</title><rect x="34.8802%" y="421" width="0.4491%" height="15" fill="rgb(218,69,12)"/><text x="35.1302%" y="431.50"></text></g><g><title>psi_group_change (2 samples, 0.30%)</title><rect x="35.0299%" y="405" width="0.2994%" height="15" fill="rgb(212,87,7)"/><text x="35.2799%" y="415.50"></text></g><g><title>record_times (1 samples, 0.15%)</title><rect x="35.1796%" y="389" width="0.1497%" height="15" fill="rgb(245,114,25)"/><text x="35.4296%" y="399.50"></text></g><g><title>sk_wait_data (15 samples, 2.25%)</title><rect x="33.2335%" y="501" width="2.2455%" height="15" fill="rgb(210,61,42)"/><text x="33.4835%" y="511.50">s..</text></g><g><title>wait_woken (10 samples, 1.50%)</title><rect x="33.9820%" y="485" width="1.4970%" height="15" fill="rgb(211,52,33)"/><text x="34.2320%" y="495.50"></text></g><g><title>schedule_timeout (9 samples, 1.35%)</title><rect x="34.1317%" y="469" width="1.3473%" height="15" fill="rgb(234,58,33)"/><text x="34.3817%" y="479.50"></text></g><g><title>schedule (9 samples, 1.35%)</title><rect x="34.1317%" y="453" width="1.3473%" height="15" fill="rgb(220,115,36)"/><text x="34.3817%" y="463.50"></text></g><g><title>__schedule (9 samples, 1.35%)</title><rect x="34.1317%" y="437" width="1.3473%" height="15" fill="rgb(243,153,54)"/><text x="34.3817%" y="447.50"></text></g><g><title>update_rq_clock (1 samples, 0.15%)</title><rect x="35.3293%" y="421" width="0.1497%" height="15" fill="rgb(251,47,18)"/><text x="35.5793%" y="431.50"></text></g><g><title>update_irq_load_avg (1 samples, 0.15%)</title><rect x="35.3293%" y="405" width="0.1497%" height="15" fill="rgb(242,102,42)"/><text x="35.5793%" y="415.50"></text></g><g><title>inet_recvmsg (22 samples, 3.29%)</title><rect x="32.3353%" y="533" width="3.2934%" height="15" fill="rgb(234,31,38)"/><text x="32.5853%" y="543.50">ine..</text></g><g><title>tcp_recvmsg (22 samples, 3.29%)</title><rect x="32.3353%" y="517" width="3.2934%" height="15" fill="rgb(221,117,51)"/><text x="32.5853%" y="527.50">tcp..</text></g><g><title>tcp_cleanup_rbuf (1 samples, 0.15%)</title><rect x="35.4790%" y="501" width="0.1497%" height="15" fill="rgb(212,20,18)"/><text x="35.7290%" y="511.50"></text></g><g><title>do_syscall_64 (23 samples, 3.44%)</title><rect x="32.3353%" y="581" width="3.4431%" height="15" fill="rgb(245,133,36)"/><text x="32.5853%" y="591.50">do_..</text></g><g><title>__x64_sys_recvfrom (23 samples, 3.44%)</title><rect x="32.3353%" y="565" width="3.4431%" height="15" fill="rgb(212,6,19)"/><text x="32.5853%" y="575.50">__x..</text></g><g><title>__sys_recvfrom (23 samples, 3.44%)</title><rect x="32.3353%" y="549" width="3.4431%" height="15" fill="rgb(218,1,36)"/><text x="32.5853%" y="559.50">__s..</text></g><g><title>sockfd_lookup_light (1 samples, 0.15%)</title><rect x="35.6287%" y="533" width="0.1497%" height="15" fill="rgb(246,84,54)"/><text x="35.8787%" y="543.50"></text></g><g><title>__fget_light (1 samples, 0.15%)</title><rect x="35.6287%" y="517" width="0.1497%" height="15" fill="rgb(242,110,6)"/><text x="35.8787%" y="527.50"></text></g><g><title>__fget_files (1 samples, 0.15%)</title><rect x="35.6287%" y="501" width="0.1497%" height="15" fill="rgb(214,47,5)"/><text x="35.8787%" y="511.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.15%)</title><rect x="35.6287%" y="485" width="0.1497%" height="15" fill="rgb(218,159,25)"/><text x="35.8787%" y="495.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (27 samples, 4.04%)</title><rect x="32.1856%" y="693" width="4.0419%" height="15" fill="rgb(215,211,28)"/><text x="32.4356%" y="703.50">&lt;std..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (27 samples, 4.04%)</title><rect x="32.1856%" y="677" width="4.0419%" height="15" fill="rgb(238,59,32)"/><text x="32.4356%" y="687.50">&lt;std..</text></g><g><title>std::sys_common::net::TcpStream::read (27 samples, 4.04%)</title><rect x="32.1856%" y="661" width="4.0419%" height="15" fill="rgb(226,82,3)"/><text x="32.4356%" y="671.50">std:..</text></g><g><title>std::sys::unix::net::Socket::read (27 samples, 4.04%)</title><rect x="32.1856%" y="645" width="4.0419%" height="15" fill="rgb(240,164,32)"/><text x="32.4356%" y="655.50">std:..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (27 samples, 4.04%)</title><rect x="32.1856%" y="629" width="4.0419%" height="15" fill="rgb(232,46,7)"/><text x="32.4356%" y="639.50">std:..</text></g><g><title>__libc_recv (27 samples, 4.04%)</title><rect x="32.1856%" y="613" width="4.0419%" height="15" fill="rgb(229,129,53)"/><text x="32.4356%" y="623.50">__li..</text></g><g><title>entry_SYSCALL_64 (27 samples, 4.04%)</title><rect x="32.1856%" y="597" width="4.0419%" height="15" fill="rgb(234,188,29)"/><text x="32.4356%" y="607.50">entr..</text></g><g><title>prepare_exit_to_usermode (3 samples, 0.45%)</title><rect x="35.7784%" y="581" width="0.4491%" height="15" fill="rgb(246,141,4)"/><text x="36.0284%" y="591.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (34 samples, 5.09%)</title><rect x="31.5868%" y="741" width="5.0898%" height="15" fill="rgb(229,23,39)"/><text x="31.8368%" y="751.50">mysql:..</text></g><g><title>mysql::conn::Conn::read_packet (33 samples, 4.94%)</title><rect x="31.7365%" y="725" width="4.9401%" height="15" fill="rgb(206,12,3)"/><text x="31.9865%" y="735.50">mysql:..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (31 samples, 4.64%)</title><rect x="32.0359%" y="709" width="4.6407%" height="15" fill="rgb(252,226,20)"/><text x="32.2859%" y="719.50">&lt;mysq..</text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (3 samples, 0.45%)</title><rect x="36.2275%" y="693" width="0.4491%" height="15" fill="rgb(216,123,35)"/><text x="36.4775%" y="703.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::reset_seq_id (1 samples, 0.15%)</title><rect x="36.6766%" y="741" width="0.1497%" height="15" fill="rgb(212,68,40)"/><text x="36.9266%" y="751.50"></text></g><g><title>__pthread_disable_asynccancel (1 samples, 0.15%)</title><rect x="36.9760%" y="661" width="0.1497%" height="15" fill="rgb(254,125,32)"/><text x="37.2260%" y="671.50"></text></g><g><title>inet_sendmsg (1 samples, 0.15%)</title><rect x="37.2754%" y="581" width="0.1497%" height="15" fill="rgb(253,97,22)"/><text x="37.5254%" y="591.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.15%)</title><rect x="37.4251%" y="565" width="0.1497%" height="15" fill="rgb(241,101,14)"/><text x="37.6751%" y="575.50"></text></g><g><title>preempt_count_sub (1 samples, 0.15%)</title><rect x="37.4251%" y="549" width="0.1497%" height="15" fill="rgb(238,103,29)"/><text x="37.6751%" y="559.50"></text></g><g><title>__ip_finish_output (2 samples, 0.30%)</title><rect x="37.8743%" y="469" width="0.2994%" height="15" fill="rgb(233,195,47)"/><text x="38.1243%" y="479.50"></text></g><g><title>ipv4_mtu (2 samples, 0.30%)</title><rect x="37.8743%" y="453" width="0.2994%" height="15" fill="rgb(246,218,30)"/><text x="38.1243%" y="463.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.30%)</title><rect x="38.1737%" y="437" width="0.2994%" height="15" fill="rgb(219,145,47)"/><text x="38.4237%" y="447.50"></text></g><g><title>loopback_xmit (2 samples, 0.30%)</title><rect x="38.1737%" y="421" width="0.2994%" height="15" fill="rgb(243,12,26)"/><text x="38.4237%" y="431.50"></text></g><g><title>netif_rx (1 samples, 0.15%)</title><rect x="38.3234%" y="405" width="0.1497%" height="15" fill="rgb(214,87,16)"/><text x="38.5734%" y="415.50"></text></g><g><title>netif_rx_internal (1 samples, 0.15%)</title><rect x="38.3234%" y="389" width="0.1497%" height="15" fill="rgb(208,99,42)"/><text x="38.5734%" y="399.50"></text></g><g><title>enqueue_to_backlog (1 samples, 0.15%)</title><rect x="38.3234%" y="373" width="0.1497%" height="15" fill="rgb(253,99,2)"/><text x="38.5734%" y="383.50"></text></g><g><title>__dev_queue_xmit (3 samples, 0.45%)</title><rect x="38.1737%" y="453" width="0.4491%" height="15" fill="rgb(220,168,23)"/><text x="38.4237%" y="463.50"></text></g><g><title>netdev_core_pick_tx (1 samples, 0.15%)</title><rect x="38.4731%" y="437" width="0.1497%" height="15" fill="rgb(242,38,24)"/><text x="38.7231%" y="447.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.15%)</title><rect x="38.6228%" y="389" width="0.1497%" height="15" fill="rgb(225,182,9)"/><text x="38.8728%" y="399.50"></text></g><g><title>irqtime_account_irq (1 samples, 0.15%)</title><rect x="38.7725%" y="389" width="0.1497%" height="15" fill="rgb(243,178,37)"/><text x="39.0225%" y="399.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.15%)</title><rect x="38.7725%" y="373" width="0.1497%" height="15" fill="rgb(232,139,19)"/><text x="39.0225%" y="383.50"></text></g><g><title>sched_clock (1 samples, 0.15%)</title><rect x="38.7725%" y="357" width="0.1497%" height="15" fill="rgb(225,201,24)"/><text x="39.0225%" y="367.50"></text></g><g><title>native_sched_clock (1 samples, 0.15%)</title><rect x="38.7725%" y="341" width="0.1497%" height="15" fill="rgb(221,47,46)"/><text x="39.0225%" y="351.50"></text></g><g><title>__netif_receive_skb_core (1 samples, 0.15%)</title><rect x="38.9222%" y="341" width="0.1497%" height="15" fill="rgb(249,23,13)"/><text x="39.1722%" y="351.50"></text></g><g><title>__inet_lookup_established (1 samples, 0.15%)</title><rect x="39.3713%" y="261" width="0.1497%" height="15" fill="rgb(219,9,5)"/><text x="39.6213%" y="271.50"></text></g><g><title>psi_flags_change (1 samples, 0.15%)</title><rect x="40.2695%" y="117" width="0.1497%" height="15" fill="rgb(254,171,16)"/><text x="40.5195%" y="127.50"></text></g><g><title>psi_task_change (2 samples, 0.30%)</title><rect x="40.2695%" y="133" width="0.2994%" height="15" fill="rgb(230,171,20)"/><text x="40.5195%" y="143.50"></text></g><g><title>psi_group_change (1 samples, 0.15%)</title><rect x="40.4192%" y="117" width="0.1497%" height="15" fill="rgb(210,71,41)"/><text x="40.6692%" y="127.50"></text></g><g><title>record_times (1 samples, 0.15%)</title><rect x="40.4192%" y="101" width="0.1497%" height="15" fill="rgb(206,173,20)"/><text x="40.6692%" y="111.50"></text></g><g><title>enqueue_task (4 samples, 0.60%)</title><rect x="40.2695%" y="149" width="0.5988%" height="15" fill="rgb(233,88,34)"/><text x="40.5195%" y="159.50"></text></g><g><title>uclamp_rq_inc_id (2 samples, 0.30%)</title><rect x="40.5689%" y="133" width="0.2994%" height="15" fill="rgb(223,209,46)"/><text x="40.8189%" y="143.50"></text></g><g><title>enqueue_task_fair (2 samples, 0.30%)</title><rect x="40.8683%" y="149" width="0.2994%" height="15" fill="rgb(250,43,18)"/><text x="41.1183%" y="159.50"></text></g><g><title>enqueue_entity (1 samples, 0.15%)</title><rect x="41.0180%" y="133" width="0.1497%" height="15" fill="rgb(208,13,10)"/><text x="41.2680%" y="143.50"></text></g><g><title>update_cfs_group (1 samples, 0.15%)</title><rect x="41.0180%" y="117" width="0.1497%" height="15" fill="rgb(212,200,36)"/><text x="41.2680%" y="127.50"></text></g><g><title>select_task_rq_fair (1 samples, 0.15%)</title><rect x="41.1677%" y="149" width="0.1497%" height="15" fill="rgb(225,90,30)"/><text x="41.4177%" y="159.50"></text></g><g><title>available_idle_cpu (1 samples, 0.15%)</title><rect x="41.1677%" y="133" width="0.1497%" height="15" fill="rgb(236,182,39)"/><text x="41.4177%" y="143.50"></text></g><g><title>ttwu_do_wakeup (1 samples, 0.15%)</title><rect x="41.3174%" y="149" width="0.1497%" height="15" fill="rgb(212,144,35)"/><text x="41.5674%" y="159.50"></text></g><g><title>check_preempt_curr (1 samples, 0.15%)</title><rect x="41.3174%" y="133" width="0.1497%" height="15" fill="rgb(228,63,44)"/><text x="41.5674%" y="143.50"></text></g><g><title>resched_curr (1 samples, 0.15%)</title><rect x="41.3174%" y="117" width="0.1497%" height="15" fill="rgb(228,109,6)"/><text x="41.5674%" y="127.50"></text></g><g><title>__wake_up_common (10 samples, 1.50%)</title><rect x="40.1198%" y="197" width="1.4970%" height="15" fill="rgb(238,117,24)"/><text x="40.3698%" y="207.50"></text></g><g><title>pollwake (10 samples, 1.50%)</title><rect x="40.1198%" y="181" width="1.4970%" height="15" fill="rgb(242,26,26)"/><text x="40.3698%" y="191.50"></text></g><g><title>try_to_wake_up (9 samples, 1.35%)</title><rect x="40.2695%" y="165" width="1.3473%" height="15" fill="rgb(221,92,48)"/><text x="40.5195%" y="175.50"></text></g><g><title>update_rq_clock (1 samples, 0.15%)</title><rect x="41.4671%" y="149" width="0.1497%" height="15" fill="rgb(209,209,32)"/><text x="41.7171%" y="159.50"></text></g><g><title>sock_def_readable (14 samples, 2.10%)</title><rect x="39.6707%" y="229" width="2.0958%" height="15" fill="rgb(221,70,22)"/><text x="39.9207%" y="239.50">s..</text></g><g><title>__wake_up_common_lock (11 samples, 1.65%)</title><rect x="40.1198%" y="213" width="1.6467%" height="15" fill="rgb(248,145,5)"/><text x="40.3698%" y="223.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.15%)</title><rect x="41.6168%" y="197" width="0.1497%" height="15" fill="rgb(226,116,26)"/><text x="41.8668%" y="207.50"></text></g><g><title>__kfree_skb (1 samples, 0.15%)</title><rect x="42.0659%" y="213" width="0.1497%" height="15" fill="rgb(244,5,17)"/><text x="42.3159%" y="223.50"></text></g><g><title>kfree (1 samples, 0.15%)</title><rect x="42.0659%" y="197" width="0.1497%" height="15" fill="rgb(252,159,33)"/><text x="42.3159%" y="207.50"></text></g><g><title>__slab_free (1 samples, 0.15%)</title><rect x="42.0659%" y="181" width="0.1497%" height="15" fill="rgb(206,71,0)"/><text x="42.3159%" y="191.50"></text></g><g><title>kmem_cache_free (1 samples, 0.15%)</title><rect x="42.2156%" y="213" width="0.1497%" height="15" fill="rgb(233,118,54)"/><text x="42.4656%" y="223.50"></text></g><g><title>ip_local_deliver (23 samples, 3.44%)</title><rect x="39.0719%" y="325" width="3.4431%" height="15" fill="rgb(234,83,48)"/><text x="39.3219%" y="335.50">ip_..</text></g><g><title>ip_local_deliver_finish (23 samples, 3.44%)</title><rect x="39.0719%" y="309" width="3.4431%" height="15" fill="rgb(228,3,54)"/><text x="39.3219%" y="319.50">ip_..</text></g><g><title>ip_protocol_deliver_rcu (22 samples, 3.29%)</title><rect x="39.2216%" y="293" width="3.2934%" height="15" fill="rgb(226,155,13)"/><text x="39.4716%" y="303.50">ip_..</text></g><g><title>tcp_v4_rcv (22 samples, 3.29%)</title><rect x="39.2216%" y="277" width="3.2934%" height="15" fill="rgb(241,28,37)"/><text x="39.4716%" y="287.50">tcp..</text></g><g><title>tcp_v4_do_rcv (20 samples, 2.99%)</title><rect x="39.5210%" y="261" width="2.9940%" height="15" fill="rgb(233,93,10)"/><text x="39.7710%" y="271.50">tcp..</text></g><g><title>tcp_rcv_established (20 samples, 2.99%)</title><rect x="39.5210%" y="245" width="2.9940%" height="15" fill="rgb(225,113,19)"/><text x="39.7710%" y="255.50">tcp..</text></g><g><title>tcp_ack (5 samples, 0.75%)</title><rect x="41.7665%" y="229" width="0.7485%" height="15" fill="rgb(241,2,18)"/><text x="42.0165%" y="239.50"></text></g><g><title>tcp_rack_update_reo_wnd (1 samples, 0.15%)</title><rect x="42.3653%" y="213" width="0.1497%" height="15" fill="rgb(228,207,21)"/><text x="42.6153%" y="223.50"></text></g><g><title>__netif_receive_skb_one_core (26 samples, 3.89%)</title><rect x="38.9222%" y="357" width="3.8922%" height="15" fill="rgb(213,211,35)"/><text x="39.1722%" y="367.50">__ne..</text></g><g><title>ip_rcv (25 samples, 3.74%)</title><rect x="39.0719%" y="341" width="3.7425%" height="15" fill="rgb(209,83,10)"/><text x="39.3219%" y="351.50">ip_r..</text></g><g><title>ip_rcv_core (2 samples, 0.30%)</title><rect x="42.5150%" y="325" width="0.2994%" height="15" fill="rgb(209,164,1)"/><text x="42.7650%" y="335.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.15%)</title><rect x="42.6647%" y="309" width="0.1497%" height="15" fill="rgb(213,184,43)"/><text x="42.9147%" y="319.50"></text></g><g><title>net_rx_action (27 samples, 4.04%)</title><rect x="38.9222%" y="389" width="4.0419%" height="15" fill="rgb(231,61,34)"/><text x="39.1722%" y="399.50">net_..</text></g><g><title>process_backlog (27 samples, 4.04%)</title><rect x="38.9222%" y="373" width="4.0419%" height="15" fill="rgb(235,75,3)"/><text x="39.1722%" y="383.50">proc..</text></g><g><title>_raw_spin_lock (1 samples, 0.15%)</title><rect x="42.8144%" y="357" width="0.1497%" height="15" fill="rgb(220,106,47)"/><text x="43.0644%" y="367.50"></text></g><g><title>__ip_queue_xmit (35 samples, 5.24%)</title><rect x="37.8743%" y="501" width="5.2395%" height="15" fill="rgb(210,196,33)"/><text x="38.1243%" y="511.50">__ip_q..</text></g><g><title>ip_output (35 samples, 5.24%)</title><rect x="37.8743%" y="485" width="5.2395%" height="15" fill="rgb(229,154,42)"/><text x="38.1243%" y="495.50">ip_out..</text></g><g><title>ip_finish_output2 (33 samples, 4.94%)</title><rect x="38.1737%" y="469" width="4.9401%" height="15" fill="rgb(228,114,26)"/><text x="38.4237%" y="479.50">ip_fin..</text></g><g><title>__local_bh_enable_ip (30 samples, 4.49%)</title><rect x="38.6228%" y="453" width="4.4910%" height="15" fill="rgb(208,144,1)"/><text x="38.8728%" y="463.50">__loc..</text></g><g><title>do_softirq (30 samples, 4.49%)</title><rect x="38.6228%" y="437" width="4.4910%" height="15" fill="rgb(239,112,37)"/><text x="38.8728%" y="447.50">do_so..</text></g><g><title>do_softirq_own_stack (30 samples, 4.49%)</title><rect x="38.6228%" y="421" width="4.4910%" height="15" fill="rgb(210,96,50)"/><text x="38.8728%" y="431.50">do_so..</text></g><g><title>__do_softirq (30 samples, 4.49%)</title><rect x="38.6228%" y="405" width="4.4910%" height="15" fill="rgb(222,178,2)"/><text x="38.8728%" y="415.50">__do_..</text></g><g><title>preempt_count_add (1 samples, 0.15%)</title><rect x="42.9641%" y="389" width="0.1497%" height="15" fill="rgb(226,74,18)"/><text x="43.2141%" y="399.50"></text></g><g><title>bictcp_cwnd_event (1 samples, 0.15%)</title><rect x="43.1138%" y="501" width="0.1497%" height="15" fill="rgb(225,67,54)"/><text x="43.3638%" y="511.50"></text></g><g><title>__tcp_transmit_skb (37 samples, 5.54%)</title><rect x="37.8743%" y="517" width="5.5389%" height="15" fill="rgb(251,92,32)"/><text x="38.1243%" y="527.50">__tcp_t..</text></g><g><title>tcp_established_options (1 samples, 0.15%)</title><rect x="43.2635%" y="501" width="0.1497%" height="15" fill="rgb(228,149,22)"/><text x="43.5135%" y="511.50"></text></g><g><title>__tcp_push_pending_frames (39 samples, 5.84%)</title><rect x="37.7246%" y="549" width="5.8383%" height="15" fill="rgb(243,54,13)"/><text x="37.9746%" y="559.50">__tcp_p..</text></g><g><title>tcp_write_xmit (39 samples, 5.84%)</title><rect x="37.7246%" y="533" width="5.8383%" height="15" fill="rgb(243,180,28)"/><text x="37.9746%" y="543.50">tcp_wri..</text></g><g><title>tcp_event_new_data_sent (1 samples, 0.15%)</title><rect x="43.4132%" y="517" width="0.1497%" height="15" fill="rgb(208,167,24)"/><text x="43.6632%" y="527.50"></text></g><g><title>sk_stream_alloc_skb (3 samples, 0.45%)</title><rect x="43.5629%" y="549" width="0.4491%" height="15" fill="rgb(245,73,45)"/><text x="43.8129%" y="559.50"></text></g><g><title>__alloc_skb (2 samples, 0.30%)</title><rect x="43.7126%" y="533" width="0.2994%" height="15" fill="rgb(237,203,48)"/><text x="43.9626%" y="543.50"></text></g><g><title>__ksize (1 samples, 0.15%)</title><rect x="43.8623%" y="517" width="0.1497%" height="15" fill="rgb(211,197,16)"/><text x="44.1123%" y="527.50"></text></g><g><title>tcp_rate_check_app_limited (1 samples, 0.15%)</title><rect x="44.0120%" y="549" width="0.1497%" height="15" fill="rgb(243,99,51)"/><text x="44.2620%" y="559.50"></text></g><g><title>do_syscall_64 (48 samples, 7.19%)</title><rect x="37.1257%" y="645" width="7.1856%" height="15" fill="rgb(215,123,29)"/><text x="37.3757%" y="655.50">do_syscall..</text></g><g><title>__x64_sys_sendto (47 samples, 7.04%)</title><rect x="37.2754%" y="629" width="7.0359%" height="15" fill="rgb(239,186,37)"/><text x="37.5254%" y="639.50">__x64_sys..</text></g><g><title>__sys_sendto (47 samples, 7.04%)</title><rect x="37.2754%" y="613" width="7.0359%" height="15" fill="rgb(252,136,39)"/><text x="37.5254%" y="623.50">__sys_sen..</text></g><g><title>sock_sendmsg (47 samples, 7.04%)</title><rect x="37.2754%" y="597" width="7.0359%" height="15" fill="rgb(223,213,32)"/><text x="37.5254%" y="607.50">sock_send..</text></g><g><title>tcp_sendmsg (46 samples, 6.89%)</title><rect x="37.4251%" y="581" width="6.8862%" height="15" fill="rgb(233,115,5)"/><text x="37.6751%" y="591.50">tcp_sendm..</text></g><g><title>tcp_sendmsg_locked (45 samples, 6.74%)</title><rect x="37.5749%" y="565" width="6.7365%" height="15" fill="rgb(207,226,44)"/><text x="37.8249%" y="575.50">tcp_sendm..</text></g><g><title>tcp_send_mss (1 samples, 0.15%)</title><rect x="44.1617%" y="549" width="0.1497%" height="15" fill="rgb(208,126,0)"/><text x="44.4117%" y="559.50"></text></g><g><title>entry_SYSCALL_64 (49 samples, 7.34%)</title><rect x="37.1257%" y="661" width="7.3353%" height="15" fill="rgb(244,66,21)"/><text x="37.3757%" y="671.50">entry_SYSC..</text></g><g><title>prepare_exit_to_usermode (1 samples, 0.15%)</title><rect x="44.3114%" y="645" width="0.1497%" height="15" fill="rgb(222,97,12)"/><text x="44.5614%" y="655.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (88 samples, 13.17%)</title><rect x="31.4371%" y="773" width="13.1737%" height="15" fill="rgb(219,213,19)"/><text x="31.6871%" y="783.50">&lt;decor::Shim as msql..</text></g><g><title>mysql::conn::Conn::_query (87 samples, 13.02%)</title><rect x="31.5868%" y="757" width="13.0240%" height="15" fill="rgb(252,169,30)"/><text x="31.8368%" y="767.50">mysql::conn::Conn::_..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (52 samples, 7.78%)</title><rect x="36.8263%" y="741" width="7.7844%" height="15" fill="rgb(206,32,51)"/><text x="37.0763%" y="751.50">mysql_commo..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (52 samples, 7.78%)</title><rect x="36.8263%" y="725" width="7.7844%" height="15" fill="rgb(250,172,42)"/><text x="37.0763%" y="735.50">std::io::bu..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (52 samples, 7.78%)</title><rect x="36.8263%" y="709" width="7.7844%" height="15" fill="rgb(209,34,43)"/><text x="37.0763%" y="719.50">&lt;std::net::..</text></g><g><title>std::sys_common::net::TcpStream::write (52 samples, 7.78%)</title><rect x="36.8263%" y="693" width="7.7844%" height="15" fill="rgb(223,11,35)"/><text x="37.0763%" y="703.50">std::sys_co..</text></g><g><title>__libc_send (52 samples, 7.78%)</title><rect x="36.8263%" y="677" width="7.7844%" height="15" fill="rgb(251,219,26)"/><text x="37.0763%" y="687.50">__libc_send</text></g><g><title>syscall_return_via_sysret (1 samples, 0.15%)</title><rect x="44.4611%" y="661" width="0.1497%" height="15" fill="rgb(231,119,3)"/><text x="44.7111%" y="671.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::flush (1 samples, 0.15%)</title><rect x="44.6108%" y="773" width="0.1497%" height="15" fill="rgb(216,97,11)"/><text x="44.8608%" y="783.50"></text></g><g><title>__pthread_disable_asynccancel (1 samples, 0.15%)</title><rect x="44.7605%" y="661" width="0.1497%" height="15" fill="rgb(223,59,9)"/><text x="45.0105%" y="671.50"></text></g><g><title>__pthread_enable_asynccancel (1 samples, 0.15%)</title><rect x="44.9102%" y="661" width="0.1497%" height="15" fill="rgb(233,93,31)"/><text x="45.1602%" y="671.50"></text></g><g><title>__x86_indirect_thunk_rax (1 samples, 0.15%)</title><rect x="45.0599%" y="661" width="0.1497%" height="15" fill="rgb(239,81,33)"/><text x="45.3099%" y="671.50"></text></g><g><title>skb_release_data (2 samples, 0.30%)</title><rect x="45.5090%" y="549" width="0.2994%" height="15" fill="rgb(213,120,34)"/><text x="45.7590%" y="559.50"></text></g><g><title>__kfree_skb (3 samples, 0.45%)</title><rect x="45.5090%" y="565" width="0.4491%" height="15" fill="rgb(243,49,53)"/><text x="45.7590%" y="575.50"></text></g><g><title>skb_release_head_state (1 samples, 0.15%)</title><rect x="45.8084%" y="549" width="0.1497%" height="15" fill="rgb(247,216,33)"/><text x="46.0584%" y="559.50"></text></g><g><title>dst_release (1 samples, 0.15%)</title><rect x="45.8084%" y="533" width="0.1497%" height="15" fill="rgb(226,26,14)"/><text x="46.0584%" y="543.50"></text></g><g><title>__sk_dst_check (1 samples, 0.15%)</title><rect x="45.9581%" y="533" width="0.1497%" height="15" fill="rgb(215,49,53)"/><text x="46.2081%" y="543.50"></text></g><g><title>__kfree_skb_flush (1 samples, 0.15%)</title><rect x="46.1078%" y="421" width="0.1497%" height="15" fill="rgb(245,162,40)"/><text x="46.3578%" y="431.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.15%)</title><rect x="46.1078%" y="405" width="0.1497%" height="15" fill="rgb(229,68,17)"/><text x="46.3578%" y="415.50"></text></g><g><title>__tcp_transmit_skb (5 samples, 0.75%)</title><rect x="45.9581%" y="565" width="0.7485%" height="15" fill="rgb(213,182,10)"/><text x="46.2081%" y="575.50"></text></g><g><title>__ip_queue_xmit (5 samples, 0.75%)</title><rect x="45.9581%" y="549" width="0.7485%" height="15" fill="rgb(245,125,30)"/><text x="46.2081%" y="559.50"></text></g><g><title>ip_output (4 samples, 0.60%)</title><rect x="46.1078%" y="533" width="0.5988%" height="15" fill="rgb(232,202,2)"/><text x="46.3578%" y="543.50"></text></g><g><title>ip_finish_output2 (4 samples, 0.60%)</title><rect x="46.1078%" y="517" width="0.5988%" height="15" fill="rgb(237,140,51)"/><text x="46.3578%" y="527.50"></text></g><g><title>__local_bh_enable_ip (4 samples, 0.60%)</title><rect x="46.1078%" y="501" width="0.5988%" height="15" fill="rgb(236,157,25)"/><text x="46.3578%" y="511.50"></text></g><g><title>do_softirq (4 samples, 0.60%)</title><rect x="46.1078%" y="485" width="0.5988%" height="15" fill="rgb(219,209,0)"/><text x="46.3578%" y="495.50"></text></g><g><title>do_softirq_own_stack (4 samples, 0.60%)</title><rect x="46.1078%" y="469" width="0.5988%" height="15" fill="rgb(240,116,54)"/><text x="46.3578%" y="479.50"></text></g><g><title>__do_softirq (4 samples, 0.60%)</title><rect x="46.1078%" y="453" width="0.5988%" height="15" fill="rgb(216,10,36)"/><text x="46.3578%" y="463.50"></text></g><g><title>net_rx_action (4 samples, 0.60%)</title><rect x="46.1078%" y="437" width="0.5988%" height="15" fill="rgb(222,72,44)"/><text x="46.3578%" y="447.50"></text></g><g><title>process_backlog (3 samples, 0.45%)</title><rect x="46.2575%" y="421" width="0.4491%" height="15" fill="rgb(232,159,9)"/><text x="46.5075%" y="431.50"></text></g><g><title>__netif_receive_skb_one_core (3 samples, 0.45%)</title><rect x="46.2575%" y="405" width="0.4491%" height="15" fill="rgb(210,39,32)"/><text x="46.5075%" y="415.50"></text></g><g><title>ip_rcv (3 samples, 0.45%)</title><rect x="46.2575%" y="389" width="0.4491%" height="15" fill="rgb(216,194,45)"/><text x="46.5075%" y="399.50"></text></g><g><title>ip_local_deliver (3 samples, 0.45%)</title><rect x="46.2575%" y="373" width="0.4491%" height="15" fill="rgb(218,18,35)"/><text x="46.5075%" y="383.50"></text></g><g><title>ip_local_deliver_finish (3 samples, 0.45%)</title><rect x="46.2575%" y="357" width="0.4491%" height="15" fill="rgb(207,83,51)"/><text x="46.5075%" y="367.50"></text></g><g><title>ip_protocol_deliver_rcu (3 samples, 0.45%)</title><rect x="46.2575%" y="341" width="0.4491%" height="15" fill="rgb(225,63,43)"/><text x="46.5075%" y="351.50"></text></g><g><title>tcp_v4_rcv (3 samples, 0.45%)</title><rect x="46.2575%" y="325" width="0.4491%" height="15" fill="rgb(207,57,36)"/><text x="46.5075%" y="335.50"></text></g><g><title>tcp_v4_do_rcv (3 samples, 0.45%)</title><rect x="46.2575%" y="309" width="0.4491%" height="15" fill="rgb(216,99,33)"/><text x="46.5075%" y="319.50"></text></g><g><title>tcp_rcv_established (3 samples, 0.45%)</title><rect x="46.2575%" y="293" width="0.4491%" height="15" fill="rgb(225,42,16)"/><text x="46.5075%" y="303.50"></text></g><g><title>tcp_ack (3 samples, 0.45%)</title><rect x="46.2575%" y="277" width="0.4491%" height="15" fill="rgb(220,201,45)"/><text x="46.5075%" y="287.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.15%)</title><rect x="46.7066%" y="549" width="0.1497%" height="15" fill="rgb(225,33,4)"/><text x="46.9566%" y="559.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.15%)</title><rect x="46.7066%" y="533" width="0.1497%" height="15" fill="rgb(224,33,50)"/><text x="46.9566%" y="543.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.15%)</title><rect x="46.8563%" y="549" width="0.1497%" height="15" fill="rgb(246,198,51)"/><text x="47.1063%" y="559.50"></text></g><g><title>preempt_count_add (1 samples, 0.15%)</title><rect x="46.8563%" y="533" width="0.1497%" height="15" fill="rgb(205,22,4)"/><text x="47.1063%" y="543.50"></text></g><g><title>_raw_spin_unlock_irqrestore (1 samples, 0.15%)</title><rect x="47.0060%" y="549" width="0.1497%" height="15" fill="rgb(206,3,8)"/><text x="47.2560%" y="559.50"></text></g><g><title>__cgroup_account_cputime (1 samples, 0.15%)</title><rect x="47.6048%" y="437" width="0.1497%" height="15" fill="rgb(251,23,15)"/><text x="47.8548%" y="447.50"></text></g><g><title>dequeue_task_fair (2 samples, 0.30%)</title><rect x="47.6048%" y="485" width="0.2994%" height="15" fill="rgb(252,88,28)"/><text x="47.8548%" y="495.50"></text></g><g><title>dequeue_entity (2 samples, 0.30%)</title><rect x="47.6048%" y="469" width="0.2994%" height="15" fill="rgb(212,127,14)"/><text x="47.8548%" y="479.50"></text></g><g><title>update_curr (2 samples, 0.30%)</title><rect x="47.6048%" y="453" width="0.2994%" height="15" fill="rgb(247,145,37)"/><text x="47.8548%" y="463.50"></text></g><g><title>cpuacct_charge (1 samples, 0.15%)</title><rect x="47.7545%" y="437" width="0.1497%" height="15" fill="rgb(209,117,53)"/><text x="48.0045%" y="447.50"></text></g><g><title>finish_task_switch (1 samples, 0.15%)</title><rect x="47.9042%" y="485" width="0.1497%" height="15" fill="rgb(212,90,42)"/><text x="48.1542%" y="495.50"></text></g><g><title>__perf_event_task_sched_in (1 samples, 0.15%)</title><rect x="47.9042%" y="469" width="0.1497%" height="15" fill="rgb(218,164,37)"/><text x="48.1542%" y="479.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.15%)</title><rect x="47.9042%" y="453" width="0.1497%" height="15" fill="rgb(246,65,34)"/><text x="48.1542%" y="463.50"></text></g><g><title>psi_task_change (2 samples, 0.30%)</title><rect x="48.0539%" y="485" width="0.2994%" height="15" fill="rgb(231,100,33)"/><text x="48.3039%" y="495.50"></text></g><g><title>psi_group_change (2 samples, 0.30%)</title><rect x="48.0539%" y="469" width="0.2994%" height="15" fill="rgb(228,126,14)"/><text x="48.3039%" y="479.50"></text></g><g><title>uclamp_rq_dec_id (1 samples, 0.15%)</title><rect x="48.3533%" y="485" width="0.1497%" height="15" fill="rgb(215,173,21)"/><text x="48.6033%" y="495.50"></text></g><g><title>sk_wait_data (13 samples, 1.95%)</title><rect x="46.7066%" y="565" width="1.9461%" height="15" fill="rgb(210,6,40)"/><text x="46.9566%" y="575.50">s..</text></g><g><title>wait_woken (10 samples, 1.50%)</title><rect x="47.1557%" y="549" width="1.4970%" height="15" fill="rgb(212,48,18)"/><text x="47.4057%" y="559.50"></text></g><g><title>schedule_timeout (8 samples, 1.20%)</title><rect x="47.4551%" y="533" width="1.1976%" height="15" fill="rgb(230,214,11)"/><text x="47.7051%" y="543.50"></text></g><g><title>schedule (8 samples, 1.20%)</title><rect x="47.4551%" y="517" width="1.1976%" height="15" fill="rgb(254,105,39)"/><text x="47.7051%" y="527.50"></text></g><g><title>__schedule (8 samples, 1.20%)</title><rect x="47.4551%" y="501" width="1.1976%" height="15" fill="rgb(245,158,5)"/><text x="47.7051%" y="511.50"></text></g><g><title>update_rq_clock (1 samples, 0.15%)</title><rect x="48.5030%" y="485" width="0.1497%" height="15" fill="rgb(249,208,11)"/><text x="48.7530%" y="495.50"></text></g><g><title>update_irq_load_avg (1 samples, 0.15%)</title><rect x="48.5030%" y="469" width="0.1497%" height="15" fill="rgb(210,39,28)"/><text x="48.7530%" y="479.50"></text></g><g><title>__x64_sys_recvfrom (23 samples, 3.44%)</title><rect x="45.3593%" y="629" width="3.4431%" height="15" fill="rgb(211,56,53)"/><text x="45.6093%" y="639.50">__x..</text></g><g><title>__sys_recvfrom (23 samples, 3.44%)</title><rect x="45.3593%" y="613" width="3.4431%" height="15" fill="rgb(226,201,30)"/><text x="45.6093%" y="623.50">__s..</text></g><g><title>inet_recvmsg (23 samples, 3.44%)</title><rect x="45.3593%" y="597" width="3.4431%" height="15" fill="rgb(239,101,34)"/><text x="45.6093%" y="607.50">ine..</text></g><g><title>tcp_recvmsg (23 samples, 3.44%)</title><rect x="45.3593%" y="581" width="3.4431%" height="15" fill="rgb(226,209,5)"/><text x="45.6093%" y="591.50">tcp..</text></g><g><title>skb_copy_datagram_iter (1 samples, 0.15%)</title><rect x="48.6527%" y="565" width="0.1497%" height="15" fill="rgb(250,105,47)"/><text x="48.9027%" y="575.50"></text></g><g><title>__skb_datagram_iter (1 samples, 0.15%)</title><rect x="48.6527%" y="549" width="0.1497%" height="15" fill="rgb(230,72,3)"/><text x="48.9027%" y="559.50"></text></g><g><title>simple_copy_to_iter (1 samples, 0.15%)</title><rect x="48.6527%" y="533" width="0.1497%" height="15" fill="rgb(232,218,39)"/><text x="48.9027%" y="543.50"></text></g><g><title>__check_object_size (1 samples, 0.15%)</title><rect x="48.6527%" y="517" width="0.1497%" height="15" fill="rgb(248,166,6)"/><text x="48.9027%" y="527.50"></text></g><g><title>do_syscall_64 (24 samples, 3.59%)</title><rect x="45.3593%" y="645" width="3.5928%" height="15" fill="rgb(247,89,20)"/><text x="45.6093%" y="655.50">do_s..</text></g><g><title>syscall_slow_exit_work (1 samples, 0.15%)</title><rect x="48.8024%" y="629" width="0.1497%" height="15" fill="rgb(248,130,54)"/><text x="49.0524%" y="639.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.15%)</title><rect x="48.8024%" y="613" width="0.1497%" height="15" fill="rgb(234,196,4)"/><text x="49.0524%" y="623.50"></text></g><g><title>unroll_tree_refs (1 samples, 0.15%)</title><rect x="48.8024%" y="597" width="0.1497%" height="15" fill="rgb(250,143,31)"/><text x="49.0524%" y="607.50"></text></g><g><title>entry_SYSCALL_64 (28 samples, 4.19%)</title><rect x="45.2096%" y="661" width="4.1916%" height="15" fill="rgb(211,110,34)"/><text x="45.4596%" y="671.50">entry..</text></g><g><title>prepare_exit_to_usermode (3 samples, 0.45%)</title><rect x="48.9521%" y="645" width="0.4491%" height="15" fill="rgb(215,124,48)"/><text x="49.2021%" y="655.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (32 samples, 4.79%)</title><rect x="44.7605%" y="741" width="4.7904%" height="15" fill="rgb(216,46,13)"/><text x="45.0105%" y="751.50">&lt;std::..</text></g><g><title>std::sys_common::net::TcpStream::read (32 samples, 4.79%)</title><rect x="44.7605%" y="725" width="4.7904%" height="15" fill="rgb(205,184,25)"/><text x="45.0105%" y="735.50">std::s..</text></g><g><title>std::sys::unix::net::Socket::read (32 samples, 4.79%)</title><rect x="44.7605%" y="709" width="4.7904%" height="15" fill="rgb(228,1,10)"/><text x="45.0105%" y="719.50">std::s..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (32 samples, 4.79%)</title><rect x="44.7605%" y="693" width="4.7904%" height="15" fill="rgb(213,116,27)"/><text x="45.0105%" y="703.50">std::s..</text></g><g><title>__libc_recv (32 samples, 4.79%)</title><rect x="44.7605%" y="677" width="4.7904%" height="15" fill="rgb(241,95,50)"/><text x="45.0105%" y="687.50">__libc..</text></g><g><title>syscall_return_via_sysret (1 samples, 0.15%)</title><rect x="49.4012%" y="661" width="0.1497%" height="15" fill="rgb(238,48,32)"/><text x="49.6512%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.15%)</title><rect x="49.5509%" y="741" width="0.1497%" height="15" fill="rgb(235,113,49)"/><text x="49.8009%" y="751.50"></text></g><g><title>msql_srv::packet::PacketReader&lt;R&gt;::next (34 samples, 5.09%)</title><rect x="44.7605%" y="773" width="5.0898%" height="15" fill="rgb(205,127,43)"/><text x="45.0105%" y="783.50">msql_s..</text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (34 samples, 5.09%)</title><rect x="44.7605%" y="757" width="5.0898%" height="15" fill="rgb(250,162,2)"/><text x="45.0105%" y="767.50">&lt;std::..</text></g><g><title>std::net::tcp::TcpStream::set_nodelay (1 samples, 0.15%)</title><rect x="49.7006%" y="741" width="0.1497%" height="15" fill="rgb(220,13,41)"/><text x="49.9506%" y="751.50"></text></g><g><title>std::sys_common::net::TcpStream::set_nodelay (1 samples, 0.15%)</title><rect x="49.7006%" y="725" width="0.1497%" height="15" fill="rgb(249,221,25)"/><text x="49.9506%" y="735.50"></text></g><g><title>std::sys::unix::net::Socket::set_nodelay (1 samples, 0.15%)</title><rect x="49.7006%" y="709" width="0.1497%" height="15" fill="rgb(215,208,19)"/><text x="49.9506%" y="719.50"></text></g><g><title>std::sys_common::net::setsockopt (1 samples, 0.15%)</title><rect x="49.7006%" y="693" width="0.1497%" height="15" fill="rgb(236,175,2)"/><text x="49.9506%" y="703.50"></text></g><g><title>__libc_recv (1 samples, 0.15%)</title><rect x="49.7006%" y="677" width="0.1497%" height="15" fill="rgb(241,52,2)"/><text x="49.9506%" y="687.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.15%)</title><rect x="49.7006%" y="661" width="0.1497%" height="15" fill="rgb(248,140,14)"/><text x="49.9506%" y="671.50"></text></g><g><title>__pthread_disable_asynccancel (1 samples, 0.15%)</title><rect x="49.8503%" y="709" width="0.1497%" height="15" fill="rgb(253,22,42)"/><text x="50.1003%" y="719.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.15%)</title><rect x="50.4491%" y="613" width="0.1497%" height="15" fill="rgb(234,61,47)"/><text x="50.6991%" y="623.50"></text></g><g><title>release_sock (1 samples, 0.15%)</title><rect x="50.5988%" y="613" width="0.1497%" height="15" fill="rgb(208,226,15)"/><text x="50.8488%" y="623.50"></text></g><g><title>__sk_dst_check (2 samples, 0.30%)</title><rect x="50.8982%" y="533" width="0.2994%" height="15" fill="rgb(217,221,4)"/><text x="51.1482%" y="543.50"></text></g><g><title>ipv4_dst_check (2 samples, 0.30%)</title><rect x="50.8982%" y="517" width="0.2994%" height="15" fill="rgb(212,174,34)"/><text x="51.1482%" y="527.50"></text></g><g><title>dev_hard_start_xmit (1 samples, 0.15%)</title><rect x="51.4970%" y="485" width="0.1497%" height="15" fill="rgb(253,83,4)"/><text x="51.7470%" y="495.50"></text></g><g><title>loopback_xmit (1 samples, 0.15%)</title><rect x="51.4970%" y="469" width="0.1497%" height="15" fill="rgb(250,195,49)"/><text x="51.7470%" y="479.50"></text></g><g><title>netif_rx (1 samples, 0.15%)</title><rect x="51.4970%" y="453" width="0.1497%" height="15" fill="rgb(241,192,25)"/><text x="51.7470%" y="463.50"></text></g><g><title>netif_rx_internal (1 samples, 0.15%)</title><rect x="51.4970%" y="437" width="0.1497%" height="15" fill="rgb(208,124,10)"/><text x="51.7470%" y="447.50"></text></g><g><title>preempt_count_add (1 samples, 0.15%)</title><rect x="51.4970%" y="421" width="0.1497%" height="15" fill="rgb(222,33,0)"/><text x="51.7470%" y="431.50"></text></g><g><title>__dev_queue_xmit (2 samples, 0.30%)</title><rect x="51.4970%" y="501" width="0.2994%" height="15" fill="rgb(234,209,28)"/><text x="51.7470%" y="511.50"></text></g><g><title>validate_xmit_skb (1 samples, 0.15%)</title><rect x="51.6467%" y="485" width="0.1497%" height="15" fill="rgb(224,11,23)"/><text x="51.8967%" y="495.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.15%)</title><rect x="51.7964%" y="469" width="0.1497%" height="15" fill="rgb(232,99,1)"/><text x="52.0464%" y="479.50"></text></g><g><title>__netif_receive_skb_core (2 samples, 0.30%)</title><rect x="52.2455%" y="389" width="0.2994%" height="15" fill="rgb(237,95,45)"/><text x="52.4955%" y="399.50"></text></g><g><title>raw_local_deliver (1 samples, 0.15%)</title><rect x="52.6946%" y="325" width="0.1497%" height="15" fill="rgb(208,109,11)"/><text x="52.9446%" y="335.50"></text></g><g><title>__inet_lookup_established (3 samples, 0.45%)</title><rect x="52.8443%" y="309" width="0.4491%" height="15" fill="rgb(216,190,48)"/><text x="53.0943%" y="319.50"></text></g><g><title>inet_ehashfn (1 samples, 0.15%)</title><rect x="53.1437%" y="293" width="0.1497%" height="15" fill="rgb(251,171,36)"/><text x="53.3937%" y="303.50"></text></g><g><title>sk_filter_trim_cap (1 samples, 0.15%)</title><rect x="53.2934%" y="309" width="0.1497%" height="15" fill="rgb(230,62,22)"/><text x="53.5434%" y="319.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (1 samples, 0.15%)</title><rect x="53.2934%" y="293" width="0.1497%" height="15" fill="rgb(225,114,35)"/><text x="53.5434%" y="303.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.15%)</title><rect x="53.8922%" y="213" width="0.1497%" height="15" fill="rgb(215,118,42)"/><text x="54.1422%" y="223.50"></text></g><g><title>preempt_count_sub (1 samples, 0.15%)</title><rect x="53.8922%" y="197" width="0.1497%" height="15" fill="rgb(243,119,21)"/><text x="54.1422%" y="207.50"></text></g><g><title>enqueue_task (5 samples, 0.75%)</title><rect x="54.0419%" y="213" width="0.7485%" height="15" fill="rgb(252,177,53)"/><text x="54.2919%" y="223.50"></text></g><g><title>psi_task_change (5 samples, 0.75%)</title><rect x="54.0419%" y="197" width="0.7485%" height="15" fill="rgb(237,209,29)"/><text x="54.2919%" y="207.50"></text></g><g><title>psi_group_change (5 samples, 0.75%)</title><rect x="54.0419%" y="181" width="0.7485%" height="15" fill="rgb(212,65,23)"/><text x="54.2919%" y="191.50"></text></g><g><title>record_times (1 samples, 0.15%)</title><rect x="54.6407%" y="165" width="0.1497%" height="15" fill="rgb(230,222,46)"/><text x="54.8907%" y="175.50"></text></g><g><title>enqueue_task_fair (1 samples, 0.15%)</title><rect x="54.7904%" y="213" width="0.1497%" height="15" fill="rgb(215,135,32)"/><text x="55.0404%" y="223.50"></text></g><g><title>enqueue_entity (1 samples, 0.15%)</title><rect x="54.7904%" y="197" width="0.1497%" height="15" fill="rgb(246,101,22)"/><text x="55.0404%" y="207.50"></text></g><g><title>ttwu_do_wakeup (1 samples, 0.15%)</title><rect x="54.9401%" y="213" width="0.1497%" height="15" fill="rgb(206,107,13)"/><text x="55.1901%" y="223.50"></text></g><g><title>check_preempt_curr (1 samples, 0.15%)</title><rect x="54.9401%" y="197" width="0.1497%" height="15" fill="rgb(250,100,44)"/><text x="55.1901%" y="207.50"></text></g><g><title>resched_curr (1 samples, 0.15%)</title><rect x="54.9401%" y="181" width="0.1497%" height="15" fill="rgb(231,147,38)"/><text x="55.1901%" y="191.50"></text></g><g><title>sock_def_readable (10 samples, 1.50%)</title><rect x="53.7425%" y="277" width="1.4970%" height="15" fill="rgb(229,8,40)"/><text x="53.9925%" y="287.50"></text></g><g><title>__wake_up_common_lock (10 samples, 1.50%)</title><rect x="53.7425%" y="261" width="1.4970%" height="15" fill="rgb(221,135,30)"/><text x="53.9925%" y="271.50"></text></g><g><title>__wake_up_common (10 samples, 1.50%)</title><rect x="53.7425%" y="245" width="1.4970%" height="15" fill="rgb(249,193,18)"/><text x="53.9925%" y="255.50"></text></g><g><title>try_to_wake_up (10 samples, 1.50%)</title><rect x="53.7425%" y="229" width="1.4970%" height="15" fill="rgb(209,133,39)"/><text x="53.9925%" y="239.50"></text></g><g><title>update_rq_clock (1 samples, 0.15%)</title><rect x="55.0898%" y="213" width="0.1497%" height="15" fill="rgb(232,100,14)"/><text x="55.3398%" y="223.50"></text></g><g><title>kfree (2 samples, 0.30%)</title><rect x="55.2395%" y="245" width="0.2994%" height="15" fill="rgb(224,185,1)"/><text x="55.4895%" y="255.50"></text></g><g><title>slab_free_freelist_hook (1 samples, 0.15%)</title><rect x="55.3892%" y="229" width="0.1497%" height="15" fill="rgb(223,139,8)"/><text x="55.6392%" y="239.50"></text></g><g><title>__kfree_skb (6 samples, 0.90%)</title><rect x="55.2395%" y="261" width="0.8982%" height="15" fill="rgb(232,213,38)"/><text x="55.4895%" y="271.50"></text></g><g><title>skb_release_data (4 samples, 0.60%)</title><rect x="55.5389%" y="245" width="0.5988%" height="15" fill="rgb(207,94,22)"/><text x="55.7889%" y="255.50"></text></g><g><title>tcp_ack (7 samples, 1.05%)</title><rect x="55.2395%" y="277" width="1.0479%" height="15" fill="rgb(219,183,54)"/><text x="55.4895%" y="287.50"></text></g><g><title>tcp_rearm_rto (1 samples, 0.15%)</title><rect x="56.1377%" y="261" width="0.1497%" height="15" fill="rgb(216,185,54)"/><text x="56.3877%" y="271.50"></text></g><g><title>tcp_check_space (1 samples, 0.15%)</title><rect x="56.2874%" y="277" width="0.1497%" height="15" fill="rgb(254,217,39)"/><text x="56.5374%" y="287.50"></text></g><g><title>__netif_receive_skb_one_core (30 samples, 4.49%)</title><rect x="52.2455%" y="405" width="4.4910%" height="15" fill="rgb(240,178,23)"/><text x="52.4955%" y="415.50">__net..</text></g><g><title>ip_rcv (28 samples, 4.19%)</title><rect x="52.5449%" y="389" width="4.1916%" height="15" fill="rgb(218,11,47)"/><text x="52.7949%" y="399.50">ip_rcv</text></g><g><title>ip_local_deliver (28 samples, 4.19%)</title><rect x="52.5449%" y="373" width="4.1916%" height="15" fill="rgb(218,51,51)"/><text x="52.7949%" y="383.50">ip_lo..</text></g><g><title>ip_local_deliver_finish (27 samples, 4.04%)</title><rect x="52.6946%" y="357" width="4.0419%" height="15" fill="rgb(238,126,27)"/><text x="52.9446%" y="367.50">ip_l..</text></g><g><title>ip_protocol_deliver_rcu (27 samples, 4.04%)</title><rect x="52.6946%" y="341" width="4.0419%" height="15" fill="rgb(249,202,22)"/><text x="52.9446%" y="351.50">ip_p..</text></g><g><title>tcp_v4_rcv (26 samples, 3.89%)</title><rect x="52.8443%" y="325" width="3.8922%" height="15" fill="rgb(254,195,49)"/><text x="53.0943%" y="335.50">tcp_..</text></g><g><title>tcp_v4_do_rcv (22 samples, 3.29%)</title><rect x="53.4431%" y="309" width="3.2934%" height="15" fill="rgb(208,123,14)"/><text x="53.6931%" y="319.50">tcp..</text></g><g><title>tcp_rcv_established (21 samples, 3.14%)</title><rect x="53.5928%" y="293" width="3.1437%" height="15" fill="rgb(224,200,8)"/><text x="53.8428%" y="303.50">tcp..</text></g><g><title>tcp_queue_rcv (2 samples, 0.30%)</title><rect x="56.4371%" y="277" width="0.2994%" height="15" fill="rgb(217,61,36)"/><text x="56.6871%" y="287.50"></text></g><g><title>__ip_queue_xmit (42 samples, 6.29%)</title><rect x="50.8982%" y="549" width="6.2874%" height="15" fill="rgb(206,35,45)"/><text x="51.1482%" y="559.50">__ip_que..</text></g><g><title>ip_output (40 samples, 5.99%)</title><rect x="51.1976%" y="533" width="5.9880%" height="15" fill="rgb(217,65,33)"/><text x="51.4476%" y="543.50">ip_output</text></g><g><title>ip_finish_output2 (40 samples, 5.99%)</title><rect x="51.1976%" y="517" width="5.9880%" height="15" fill="rgb(222,158,48)"/><text x="51.4476%" y="527.50">ip_finis..</text></g><g><title>__local_bh_enable_ip (36 samples, 5.39%)</title><rect x="51.7964%" y="501" width="5.3892%" height="15" fill="rgb(254,2,54)"/><text x="52.0464%" y="511.50">__local..</text></g><g><title>do_softirq (36 samples, 5.39%)</title><rect x="51.7964%" y="485" width="5.3892%" height="15" fill="rgb(250,143,38)"/><text x="52.0464%" y="495.50">do_soft..</text></g><g><title>do_softirq_own_stack (35 samples, 5.24%)</title><rect x="51.9461%" y="469" width="5.2395%" height="15" fill="rgb(248,25,0)"/><text x="52.1961%" y="479.50">do_sof..</text></g><g><title>__do_softirq (35 samples, 5.24%)</title><rect x="51.9461%" y="453" width="5.2395%" height="15" fill="rgb(206,152,27)"/><text x="52.1961%" y="463.50">__do_s..</text></g><g><title>net_rx_action (35 samples, 5.24%)</title><rect x="51.9461%" y="437" width="5.2395%" height="15" fill="rgb(240,77,30)"/><text x="52.1961%" y="447.50">net_rx..</text></g><g><title>process_backlog (35 samples, 5.24%)</title><rect x="51.9461%" y="421" width="5.2395%" height="15" fill="rgb(231,5,3)"/><text x="52.1961%" y="431.50">proces..</text></g><g><title>_raw_spin_lock (3 samples, 0.45%)</title><rect x="56.7365%" y="405" width="0.4491%" height="15" fill="rgb(207,226,32)"/><text x="56.9865%" y="415.50"></text></g><g><title>preempt_count_add (1 samples, 0.15%)</title><rect x="57.0359%" y="389" width="0.1497%" height="15" fill="rgb(222,207,47)"/><text x="57.2859%" y="399.50"></text></g><g><title>bictcp_cwnd_event (1 samples, 0.15%)</title><rect x="57.1856%" y="549" width="0.1497%" height="15" fill="rgb(229,115,45)"/><text x="57.4356%" y="559.50"></text></g><g><title>tcp_rate_skb_sent (1 samples, 0.15%)</title><rect x="57.3353%" y="549" width="0.1497%" height="15" fill="rgb(224,191,6)"/><text x="57.5853%" y="559.50"></text></g><g><title>__tcp_transmit_skb (45 samples, 6.74%)</title><rect x="50.8982%" y="565" width="6.7365%" height="15" fill="rgb(230,227,24)"/><text x="51.1482%" y="575.50">__tcp_tra..</text></g><g><title>tcp_v4_send_check (1 samples, 0.15%)</title><rect x="57.4850%" y="549" width="0.1497%" height="15" fill="rgb(228,80,19)"/><text x="57.7350%" y="559.50"></text></g><g><title>__tcp_push_pending_frames (47 samples, 7.04%)</title><rect x="50.7485%" y="597" width="7.0359%" height="15" fill="rgb(247,229,0)"/><text x="50.9985%" y="607.50">__tcp_pus..</text></g><g><title>tcp_write_xmit (46 samples, 6.89%)</title><rect x="50.8982%" y="581" width="6.8862%" height="15" fill="rgb(237,194,15)"/><text x="51.1482%" y="591.50">tcp_write..</text></g><g><title>tcp_event_new_data_sent (1 samples, 0.15%)</title><rect x="57.6347%" y="565" width="0.1497%" height="15" fill="rgb(219,203,20)"/><text x="57.8847%" y="575.50"></text></g><g><title>tcp_rearm_rto (1 samples, 0.15%)</title><rect x="57.6347%" y="549" width="0.1497%" height="15" fill="rgb(234,128,8)"/><text x="57.8847%" y="559.50"></text></g><g><title>sk_page_frag_refill (3 samples, 0.45%)</title><rect x="57.7844%" y="597" width="0.4491%" height="15" fill="rgb(248,202,8)"/><text x="58.0344%" y="607.50"></text></g><g><title>skb_page_frag_refill (3 samples, 0.45%)</title><rect x="57.7844%" y="581" width="0.4491%" height="15" fill="rgb(206,104,37)"/><text x="58.0344%" y="591.50"></text></g><g><title>sk_stream_alloc_skb (2 samples, 0.30%)</title><rect x="58.2335%" y="597" width="0.2994%" height="15" fill="rgb(223,8,27)"/><text x="58.4835%" y="607.50"></text></g><g><title>__alloc_skb (2 samples, 0.30%)</title><rect x="58.2335%" y="581" width="0.2994%" height="15" fill="rgb(216,217,28)"/><text x="58.4835%" y="591.50"></text></g><g><title>__ksize (2 samples, 0.30%)</title><rect x="58.2335%" y="565" width="0.2994%" height="15" fill="rgb(249,199,1)"/><text x="58.4835%" y="575.50"></text></g><g><title>skb_do_copy_data_nocache (1 samples, 0.15%)</title><rect x="58.5329%" y="597" width="0.1497%" height="15" fill="rgb(240,85,17)"/><text x="58.7829%" y="607.50"></text></g><g><title>tcp_send_mss (2 samples, 0.30%)</title><rect x="58.6826%" y="597" width="0.2994%" height="15" fill="rgb(206,108,45)"/><text x="58.9326%" y="607.50"></text></g><g><title>tcp_current_mss (2 samples, 0.30%)</title><rect x="58.6826%" y="581" width="0.2994%" height="15" fill="rgb(245,210,41)"/><text x="58.9326%" y="591.50"></text></g><g><title>ipv4_mtu (1 samples, 0.15%)</title><rect x="58.8323%" y="565" width="0.1497%" height="15" fill="rgb(206,13,37)"/><text x="59.0823%" y="575.50"></text></g><g><title>sock_sendmsg (58 samples, 8.68%)</title><rect x="50.4491%" y="645" width="8.6826%" height="15" fill="rgb(250,61,18)"/><text x="50.6991%" y="655.50">sock_sendmsg</text></g><g><title>tcp_sendmsg (58 samples, 8.68%)</title><rect x="50.4491%" y="629" width="8.6826%" height="15" fill="rgb(235,172,48)"/><text x="50.6991%" y="639.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (56 samples, 8.38%)</title><rect x="50.7485%" y="613" width="8.3832%" height="15" fill="rgb(249,201,17)"/><text x="50.9985%" y="623.50">tcp_sendmsg_..</text></g><g><title>tcp_stream_memory_free (1 samples, 0.15%)</title><rect x="58.9820%" y="597" width="0.1497%" height="15" fill="rgb(219,208,6)"/><text x="59.2320%" y="607.50"></text></g><g><title>do_syscall_64 (61 samples, 9.13%)</title><rect x="50.1497%" y="693" width="9.1317%" height="15" fill="rgb(248,31,23)"/><text x="50.3997%" y="703.50">do_syscall_64</text></g><g><title>__x64_sys_sendto (61 samples, 9.13%)</title><rect x="50.1497%" y="677" width="9.1317%" height="15" fill="rgb(245,15,42)"/><text x="50.3997%" y="687.50">__x64_sys_sen..</text></g><g><title>__sys_sendto (61 samples, 9.13%)</title><rect x="50.1497%" y="661" width="9.1317%" height="15" fill="rgb(222,217,39)"/><text x="50.3997%" y="671.50">__sys_sendto</text></g><g><title>sockfd_lookup_light (1 samples, 0.15%)</title><rect x="59.1317%" y="645" width="0.1497%" height="15" fill="rgb(210,219,27)"/><text x="59.3817%" y="655.50"></text></g><g><title>__fget_light (1 samples, 0.15%)</title><rect x="59.1317%" y="629" width="0.1497%" height="15" fill="rgb(252,166,36)"/><text x="59.3817%" y="639.50"></text></g><g><title>__fget_files (1 samples, 0.15%)</title><rect x="59.1317%" y="613" width="0.1497%" height="15" fill="rgb(245,132,34)"/><text x="59.3817%" y="623.50"></text></g><g><title>entry_SYSCALL_64 (65 samples, 9.73%)</title><rect x="50.0000%" y="709" width="9.7305%" height="15" fill="rgb(236,54,3)"/><text x="50.2500%" y="719.50">entry_SYSCALL_..</text></g><g><title>prepare_exit_to_usermode (3 samples, 0.45%)</title><rect x="59.2814%" y="693" width="0.4491%" height="15" fill="rgb(241,173,43)"/><text x="59.5314%" y="703.50"></text></g><g><title>decor::Shim::run_on_tcp (193 samples, 28.89%)</title><rect x="31.1377%" y="805" width="28.8922%" height="15" fill="rgb(215,190,9)"/><text x="31.3877%" y="815.50">decor::Shim::run_on_tcp</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (193 samples, 28.89%)</title><rect x="31.1377%" y="789" width="28.8922%" height="15" fill="rgb(242,101,16)"/><text x="31.3877%" y="799.50">msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (68 samples, 10.18%)</title><rect x="49.8503%" y="773" width="10.1796%" height="15" fill="rgb(223,190,21)"/><text x="50.1003%" y="783.50">std::io::buffer..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (68 samples, 10.18%)</title><rect x="49.8503%" y="757" width="10.1796%" height="15" fill="rgb(215,228,25)"/><text x="50.1003%" y="767.50">&lt;std::net::tcp:..</text></g><g><title>std::sys_common::net::TcpStream::write (68 samples, 10.18%)</title><rect x="49.8503%" y="741" width="10.1796%" height="15" fill="rgb(225,36,22)"/><text x="50.1003%" y="751.50">std::sys_common..</text></g><g><title>__libc_send (68 samples, 10.18%)</title><rect x="49.8503%" y="725" width="10.1796%" height="15" fill="rgb(251,106,46)"/><text x="50.1003%" y="735.50">__libc_send</text></g><g><title>syscall_return_via_sysret (2 samples, 0.30%)</title><rect x="59.7305%" y="709" width="0.2994%" height="15" fill="rgb(208,90,1)"/><text x="59.9805%" y="719.50"></text></g><g><title>__GI___clone (194 samples, 29.04%)</title><rect x="31.1377%" y="917" width="29.0419%" height="15" fill="rgb(243,10,4)"/><text x="31.3877%" y="927.50">__GI___clone</text></g><g><title>start_thread (194 samples, 29.04%)</title><rect x="31.1377%" y="901" width="29.0419%" height="15" fill="rgb(212,137,27)"/><text x="31.3877%" y="911.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (194 samples, 29.04%)</title><rect x="31.1377%" y="885" width="29.0419%" height="15" fill="rgb(231,220,49)"/><text x="31.3877%" y="895.50">std::sys::unix::thread::Thread::new::thread_sta..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (194 samples, 29.04%)</title><rect x="31.1377%" y="869" width="29.0419%" height="15" fill="rgb(237,96,20)"/><text x="31.3877%" y="879.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::F..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (194 samples, 29.04%)</title><rect x="31.1377%" y="853" width="29.0419%" height="15" fill="rgb(239,229,30)"/><text x="31.3877%" y="863.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::F..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (194 samples, 29.04%)</title><rect x="31.1377%" y="837" width="29.0419%" height="15" fill="rgb(219,65,33)"/><text x="31.3877%" y="847.50">core::ops::function::FnOnce::call_once{{vtable-..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (194 samples, 29.04%)</title><rect x="31.1377%" y="821" width="29.0419%" height="15" fill="rgb(243,134,7)"/><text x="31.3877%" y="831.50">std::sys_common::backtrace::__rust_begin_short_..</text></g><g><title>mysql::conn::Conn::new (1 samples, 0.15%)</title><rect x="60.0299%" y="805" width="0.1497%" height="15" fill="rgb(216,177,54)"/><text x="60.2799%" y="815.50"></text></g><g><title>mysql::conn::Conn::connect_stream (1 samples, 0.15%)</title><rect x="60.0299%" y="789" width="0.1497%" height="15" fill="rgb(211,160,20)"/><text x="60.2799%" y="799.50"></text></g><g><title>mysql::io::Stream::connect_tcp (1 samples, 0.15%)</title><rect x="60.0299%" y="773" width="0.1497%" height="15" fill="rgb(239,85,39)"/><text x="60.2799%" y="783.50"></text></g><g><title>&lt;(&amp;str,u16) as std::net::addr::ToSocketAddrs&gt;::to_socket_addrs (1 samples, 0.15%)</title><rect x="60.0299%" y="757" width="0.1497%" height="15" fill="rgb(232,125,22)"/><text x="60.2799%" y="767.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (1 samples, 0.15%)</title><rect x="60.0299%" y="741" width="0.1497%" height="15" fill="rgb(244,57,34)"/><text x="60.2799%" y="751.50"></text></g><g><title>std::net::parser::&lt;impl core::str::traits::FromStr for std::net::ip::Ipv4Addr&gt;::from_str (1 samples, 0.15%)</title><rect x="60.0299%" y="725" width="0.1497%" height="15" fill="rgb(214,203,32)"/><text x="60.2799%" y="735.50"></text></g><g><title>std::net::parser::Parser::parse_with (1 samples, 0.15%)</title><rect x="60.0299%" y="709" width="0.1497%" height="15" fill="rgb(207,58,43)"/><text x="60.2799%" y="719.50"></text></g><g><title>std::net::parser::&lt;impl core::str::traits::FromStr for std::net::ip::Ipv4Addr&gt;::from_str::{{closure}} (1 samples, 0.15%)</title><rect x="60.0299%" y="693" width="0.1497%" height="15" fill="rgb(215,193,15)"/><text x="60.2799%" y="703.50"></text></g><g><title>std::net::parser::Parser::read_ipv4_addr (1 samples, 0.15%)</title><rect x="60.0299%" y="677" width="0.1497%" height="15" fill="rgb(232,15,44)"/><text x="60.2799%" y="687.50"></text></g><g><title>std::net::parser::Parser::read_atomically (1 samples, 0.15%)</title><rect x="60.0299%" y="661" width="0.1497%" height="15" fill="rgb(212,3,48)"/><text x="60.2799%" y="671.50"></text></g><g><title>std::net::parser::Parser::read_ipv4_addr::{{closure}} (1 samples, 0.15%)</title><rect x="60.0299%" y="645" width="0.1497%" height="15" fill="rgb(218,128,7)"/><text x="60.2799%" y="655.50"></text></g><g><title>std::net::parser::Parser::read_separator (1 samples, 0.15%)</title><rect x="60.0299%" y="629" width="0.1497%" height="15" fill="rgb(226,216,39)"/><text x="60.2799%" y="639.50"></text></g><g><title>std::net::parser::Parser::read_atomically (1 samples, 0.15%)</title><rect x="60.0299%" y="613" width="0.1497%" height="15" fill="rgb(243,47,51)"/><text x="60.2799%" y="623.50"></text></g><g><title>__GI_exit (1 samples, 0.15%)</title><rect x="60.1796%" y="885" width="0.1497%" height="15" fill="rgb(241,183,40)"/><text x="60.4296%" y="895.50"></text></g><g><title>__run_exit_handlers (1 samples, 0.15%)</title><rect x="60.1796%" y="869" width="0.1497%" height="15" fill="rgb(231,217,32)"/><text x="60.4296%" y="879.50"></text></g><g><title>_dl_fini (1 samples, 0.15%)</title><rect x="60.1796%" y="853" width="0.1497%" height="15" fill="rgb(229,61,38)"/><text x="60.4296%" y="863.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.15%)</title><rect x="60.1796%" y="837" width="0.1497%" height="15" fill="rgb(225,210,5)"/><text x="60.4296%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (1 samples, 0.15%)</title><rect x="60.7784%" y="565" width="0.1497%" height="15" fill="rgb(231,79,45)"/><text x="61.0284%" y="575.50"></text></g><g><title>alloc::fmt::format (5 samples, 0.75%)</title><rect x="60.4790%" y="741" width="0.7485%" height="15" fill="rgb(224,100,7)"/><text x="60.7290%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (5 samples, 0.75%)</title><rect x="60.4790%" y="725" width="0.7485%" height="15" fill="rgb(241,198,18)"/><text x="60.7290%" y="735.50"></text></g><g><title>core::fmt::write (5 samples, 0.75%)</title><rect x="60.4790%" y="709" width="0.7485%" height="15" fill="rgb(252,97,53)"/><text x="60.7290%" y="719.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (4 samples, 0.60%)</title><rect x="60.6287%" y="693" width="0.5988%" height="15" fill="rgb(220,88,7)"/><text x="60.8787%" y="703.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (4 samples, 0.60%)</title><rect x="60.6287%" y="677" width="0.5988%" height="15" fill="rgb(213,176,14)"/><text x="60.8787%" y="687.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.45%)</title><rect x="60.7784%" y="661" width="0.4491%" height="15" fill="rgb(246,73,7)"/><text x="61.0284%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.45%)</title><rect x="60.7784%" y="645" width="0.4491%" height="15" fill="rgb(245,64,36)"/><text x="61.0284%" y="655.50"></text></g><g><title>alloc::string::String::push_str (3 samples, 0.45%)</title><rect x="60.7784%" y="629" width="0.4491%" height="15" fill="rgb(245,80,10)"/><text x="61.0284%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (3 samples, 0.45%)</title><rect x="60.7784%" y="613" width="0.4491%" height="15" fill="rgb(232,107,50)"/><text x="61.0284%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.45%)</title><rect x="60.7784%" y="597" width="0.4491%" height="15" fill="rgb(253,3,0)"/><text x="61.0284%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (3 samples, 0.45%)</title><rect x="60.7784%" y="581" width="0.4491%" height="15" fill="rgb(212,99,53)"/><text x="61.0284%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.30%)</title><rect x="60.9281%" y="565" width="0.2994%" height="15" fill="rgb(249,111,54)"/><text x="61.1781%" y="575.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.30%)</title><rect x="60.9281%" y="549" width="0.2994%" height="15" fill="rgb(249,55,30)"/><text x="61.1781%" y="559.50"></text></g><g><title>[libhwloc.so.15.2.0] (4 samples, 0.60%)</title><rect x="61.2275%" y="661" width="0.5988%" height="15" fill="rgb(237,47,42)"/><text x="61.4775%" y="671.50"></text></g><g><title>[libhwloc.so.15.2.0] (4 samples, 0.60%)</title><rect x="61.2275%" y="645" width="0.5988%" height="15" fill="rgb(211,20,18)"/><text x="61.4775%" y="655.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.15%)</title><rect x="61.6766%" y="629" width="0.1497%" height="15" fill="rgb(231,203,46)"/><text x="61.9266%" y="639.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.15%)</title><rect x="61.6766%" y="613" width="0.1497%" height="15" fill="rgb(237,142,3)"/><text x="61.9266%" y="623.50"></text></g><g><title>hwloc_bitmap_alloc (1 samples, 0.15%)</title><rect x="61.6766%" y="597" width="0.1497%" height="15" fill="rgb(241,107,1)"/><text x="61.9266%" y="607.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="61.6766%" y="581" width="0.1497%" height="15" fill="rgb(229,83,13)"/><text x="61.9266%" y="591.50"></text></g><g><title>__GI___libc_free (1 samples, 0.15%)</title><rect x="61.9760%" y="645" width="0.1497%" height="15" fill="rgb(241,91,40)"/><text x="62.2260%" y="655.50"></text></g><g><title>__set_cpus_allowed_ptr (235 samples, 35.18%)</title><rect x="62.2754%" y="565" width="35.1796%" height="15" fill="rgb(225,3,45)"/><text x="62.5254%" y="575.50">__set_cpus_allowed_ptr</text></g><g><title>stop_one_cpu (235 samples, 35.18%)</title><rect x="62.2754%" y="549" width="35.1796%" height="15" fill="rgb(244,223,14)"/><text x="62.5254%" y="559.50">stop_one_cpu</text></g><g><title>cpu_stop_queue_work (235 samples, 35.18%)</title><rect x="62.2754%" y="533" width="35.1796%" height="15" fill="rgb(224,124,37)"/><text x="62.5254%" y="543.50">cpu_stop_queue_work</text></g><g><title>preempt_schedule_thunk (235 samples, 35.18%)</title><rect x="62.2754%" y="517" width="35.1796%" height="15" fill="rgb(251,171,30)"/><text x="62.5254%" y="527.50">preempt_schedule_thunk</text></g><g><title>preempt_schedule_common (235 samples, 35.18%)</title><rect x="62.2754%" y="501" width="35.1796%" height="15" fill="rgb(236,46,54)"/><text x="62.5254%" y="511.50">preempt_schedule_common</text></g><g><title>__schedule (235 samples, 35.18%)</title><rect x="62.2754%" y="485" width="35.1796%" height="15" fill="rgb(245,213,5)"/><text x="62.5254%" y="495.50">__schedule</text></g><g><title>finish_task_switch (235 samples, 35.18%)</title><rect x="62.2754%" y="469" width="35.1796%" height="15" fill="rgb(230,144,27)"/><text x="62.5254%" y="479.50">finish_task_switch</text></g><g><title>__perf_event_task_sched_in (235 samples, 35.18%)</title><rect x="62.2754%" y="453" width="35.1796%" height="15" fill="rgb(220,86,6)"/><text x="62.5254%" y="463.50">__perf_event_task_sched_in</text></g><g><title>__intel_pmu_enable_all.constprop.0 (235 samples, 35.18%)</title><rect x="62.2754%" y="437" width="35.1796%" height="15" fill="rgb(240,20,13)"/><text x="62.5254%" y="447.50">__intel_pmu_enable_all.constprop.0</text></g><g><title>native_write_msr (234 samples, 35.03%)</title><rect x="62.4251%" y="421" width="35.0299%" height="15" fill="rgb(217,89,34)"/><text x="62.6751%" y="431.50">native_write_msr</text></g><g><title>do_syscall_64 (236 samples, 35.33%)</title><rect x="62.2754%" y="613" width="35.3293%" height="15" fill="rgb(229,13,5)"/><text x="62.5254%" y="623.50">do_syscall_64</text></g><g><title>__x64_sys_sched_setaffinity (236 samples, 35.33%)</title><rect x="62.2754%" y="597" width="35.3293%" height="15" fill="rgb(244,67,35)"/><text x="62.5254%" y="607.50">__x64_sys_sched_setaffinity</text></g><g><title>sched_setaffinity (236 samples, 35.33%)</title><rect x="62.2754%" y="581" width="35.3293%" height="15" fill="rgb(221,40,2)"/><text x="62.5254%" y="591.50">sched_setaffinity</text></g><g><title>cpuset_cpus_allowed (1 samples, 0.15%)</title><rect x="97.4551%" y="565" width="0.1497%" height="15" fill="rgb(237,157,21)"/><text x="97.7051%" y="575.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.15%)</title><rect x="97.4551%" y="549" width="0.1497%" height="15" fill="rgb(222,94,11)"/><text x="97.7051%" y="559.50"></text></g><g><title>__GI___sched_setaffinity_new (238 samples, 35.63%)</title><rect x="62.1257%" y="645" width="35.6287%" height="15" fill="rgb(249,113,6)"/><text x="62.3757%" y="655.50">__GI___sched_setaffinity_new</text></g><g><title>entry_SYSCALL_64 (237 samples, 35.48%)</title><rect x="62.2754%" y="629" width="35.4790%" height="15" fill="rgb(238,137,36)"/><text x="62.5254%" y="639.50">entry_SYSCALL_64</text></g><g><title>prepare_exit_to_usermode (1 samples, 0.15%)</title><rect x="97.6048%" y="613" width="0.1497%" height="15" fill="rgb(210,102,26)"/><text x="97.8548%" y="623.50"></text></g><g><title>hwloc::Topology::new (245 samples, 36.68%)</title><rect x="61.2275%" y="741" width="36.6766%" height="15" fill="rgb(218,30,30)"/><text x="61.4775%" y="751.50">hwloc::Topology::new</text></g><g><title>hwloc_topology_load (245 samples, 36.68%)</title><rect x="61.2275%" y="725" width="36.6766%" height="15" fill="rgb(214,67,26)"/><text x="61.4775%" y="735.50">hwloc_topology_load</text></g><g><title>[libhwloc.so.15.2.0] (245 samples, 36.68%)</title><rect x="61.2275%" y="709" width="36.6766%" height="15" fill="rgb(251,9,53)"/><text x="61.4775%" y="719.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (245 samples, 36.68%)</title><rect x="61.2275%" y="693" width="36.6766%" height="15" fill="rgb(228,204,25)"/><text x="61.4775%" y="703.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (245 samples, 36.68%)</title><rect x="61.2275%" y="677" width="36.6766%" height="15" fill="rgb(207,153,8)"/><text x="61.4775%" y="687.50">[libhwloc.so.15.2.0]</text></g><g><title>hwloc_linux_set_tid_cpubind (241 samples, 36.08%)</title><rect x="61.8263%" y="661" width="36.0778%" height="15" fill="rgb(242,9,16)"/><text x="62.0763%" y="671.50">hwloc_linux_set_tid_cpubind</text></g><g><title>__sched_cpufree (1 samples, 0.15%)</title><rect x="97.7545%" y="645" width="0.1497%" height="15" fill="rgb(217,211,10)"/><text x="98.0045%" y="655.50"></text></g><g><title>lobsters::init_database (1 samples, 0.15%)</title><rect x="97.9042%" y="741" width="0.1497%" height="15" fill="rgb(219,228,52)"/><text x="98.1542%" y="751.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.15%)</title><rect x="97.9042%" y="725" width="0.1497%" height="15" fill="rgb(231,92,29)"/><text x="98.1542%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.15%)</title><rect x="97.9042%" y="709" width="0.1497%" height="15" fill="rgb(232,8,23)"/><text x="98.1542%" y="719.50"></text></g><g><title>core::fmt::write (1 samples, 0.15%)</title><rect x="97.9042%" y="693" width="0.1497%" height="15" fill="rgb(216,211,34)"/><text x="98.1542%" y="703.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.15%)</title><rect x="97.9042%" y="677" width="0.1497%" height="15" fill="rgb(236,151,0)"/><text x="98.1542%" y="687.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.15%)</title><rect x="97.9042%" y="661" width="0.1497%" height="15" fill="rgb(209,168,3)"/><text x="98.1542%" y="671.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.15%)</title><rect x="97.9042%" y="645" width="0.1497%" height="15" fill="rgb(208,129,28)"/><text x="98.1542%" y="655.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (1 samples, 0.15%)</title><rect x="97.9042%" y="629" width="0.1497%" height="15" fill="rgb(229,78,22)"/><text x="98.1542%" y="639.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (1 samples, 0.15%)</title><rect x="98.0539%" y="741" width="0.1497%" height="15" fill="rgb(228,187,13)"/><text x="98.3039%" y="751.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.15%)</title><rect x="98.0539%" y="725" width="0.1497%" height="15" fill="rgb(240,119,24)"/><text x="98.3039%" y="735.50"></text></g><g><title>__libc_start_main (255 samples, 38.17%)</title><rect x="60.1796%" y="901" width="38.1737%" height="15" fill="rgb(209,194,42)"/><text x="60.4296%" y="911.50">__libc_start_main</text></g><g><title>main (254 samples, 38.02%)</title><rect x="60.3293%" y="885" width="38.0240%" height="15" fill="rgb(247,200,46)"/><text x="60.5793%" y="895.50">main</text></g><g><title>std::rt::lang_start_internal (254 samples, 38.02%)</title><rect x="60.3293%" y="869" width="38.0240%" height="15" fill="rgb(218,76,16)"/><text x="60.5793%" y="879.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (254 samples, 38.02%)</title><rect x="60.3293%" y="853" width="38.0240%" height="15" fill="rgb(225,21,48)"/><text x="60.5793%" y="863.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (254 samples, 38.02%)</title><rect x="60.3293%" y="837" width="38.0240%" height="15" fill="rgb(239,223,50)"/><text x="60.5793%" y="847.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (254 samples, 38.02%)</title><rect x="60.3293%" y="821" width="38.0240%" height="15" fill="rgb(244,45,21)"/><text x="60.5793%" y="831.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (254 samples, 38.02%)</title><rect x="60.3293%" y="805" width="38.0240%" height="15" fill="rgb(232,33,43)"/><text x="60.5793%" y="815.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;..</text></g><g><title>std::rt::lang_start::_{{closure}} (254 samples, 38.02%)</title><rect x="60.3293%" y="789" width="38.0240%" height="15" fill="rgb(209,8,3)"/><text x="60.5793%" y="799.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (254 samples, 38.02%)</title><rect x="60.3293%" y="773" width="38.0240%" height="15" fill="rgb(214,25,53)"/><text x="60.5793%" y="783.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>lobsters::main (254 samples, 38.02%)</title><rect x="60.3293%" y="757" width="38.0240%" height="15" fill="rgb(254,186,54)"/><text x="60.5793%" y="767.50">lobsters::main</text></g><g><title>std::thread::spawn (1 samples, 0.15%)</title><rect x="98.2036%" y="741" width="0.1497%" height="15" fill="rgb(208,174,49)"/><text x="98.4536%" y="751.50"></text></g><g><title>std::sys::unix::thread::Thread::new (1 samples, 0.15%)</title><rect x="98.2036%" y="725" width="0.1497%" height="15" fill="rgb(233,191,51)"/><text x="98.4536%" y="735.50"></text></g><g><title>__pthread_create_2_1 (1 samples, 0.15%)</title><rect x="98.2036%" y="709" width="0.1497%" height="15" fill="rgb(222,134,10)"/><text x="98.4536%" y="719.50"></text></g><g><title>__GI___mprotect (1 samples, 0.15%)</title><rect x="98.2036%" y="693" width="0.1497%" height="15" fill="rgb(230,226,20)"/><text x="98.4536%" y="703.50"></text></g><g><title>__x86_indirect_thunk_rax (1 samples, 0.15%)</title><rect x="98.2036%" y="677" width="0.1497%" height="15" fill="rgb(251,111,25)"/><text x="98.4536%" y="687.50"></text></g><g><title>_start (256 samples, 38.32%)</title><rect x="60.1796%" y="917" width="38.3234%" height="15" fill="rgb(224,40,46)"/><text x="60.4296%" y="927.50">_start</text></g><g><title>_dl_start (1 samples, 0.15%)</title><rect x="98.3533%" y="901" width="0.1497%" height="15" fill="rgb(236,108,47)"/><text x="98.6033%" y="911.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.15%)</title><rect x="98.3533%" y="885" width="0.1497%" height="15" fill="rgb(234,93,0)"/><text x="98.6033%" y="895.50"></text></g><g><title>dl_main (1 samples, 0.15%)</title><rect x="98.3533%" y="869" width="0.1497%" height="15" fill="rgb(224,213,32)"/><text x="98.6033%" y="879.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.15%)</title><rect x="98.3533%" y="853" width="0.1497%" height="15" fill="rgb(251,11,48)"/><text x="98.6033%" y="863.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.15%)</title><rect x="98.3533%" y="837" width="0.1497%" height="15" fill="rgb(236,173,5)"/><text x="98.6033%" y="847.50"></text></g><g><title>openaux (1 samples, 0.15%)</title><rect x="98.3533%" y="821" width="0.1497%" height="15" fill="rgb(230,95,12)"/><text x="98.6033%" y="831.50"></text></g><g><title>_dl_map_object (1 samples, 0.15%)</title><rect x="98.3533%" y="805" width="0.1497%" height="15" fill="rgb(232,209,1)"/><text x="98.6033%" y="815.50"></text></g><g><title>_dl_map_object_from_fd (1 samples, 0.15%)</title><rect x="98.3533%" y="789" width="0.1497%" height="15" fill="rgb(232,6,1)"/><text x="98.6033%" y="799.50"></text></g><g><title>__mmap (1 samples, 0.15%)</title><rect x="98.3533%" y="773" width="0.1497%" height="15" fill="rgb(210,224,50)"/><text x="98.6033%" y="783.50"></text></g><g><title>syscall_return_via_sysret (1 samples, 0.15%)</title><rect x="98.3533%" y="757" width="0.1497%" height="15" fill="rgb(228,127,35)"/><text x="98.6033%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="98.5030%" y="917" width="0.1497%" height="15" fill="rgb(245,102,45)"/><text x="98.7530%" y="927.50"></text></g><g><title>[vmlinux] (1 samples, 0.15%)</title><rect x="98.6527%" y="885" width="0.1497%" height="15" fill="rgb(214,1,49)"/><text x="98.9027%" y="895.50"></text></g><g><title>do_group_exit (1 samples, 0.15%)</title><rect x="98.6527%" y="869" width="0.1497%" height="15" fill="rgb(226,163,40)"/><text x="98.9027%" y="879.50"></text></g><g><title>do_exit (1 samples, 0.15%)</title><rect x="98.6527%" y="853" width="0.1497%" height="15" fill="rgb(239,212,28)"/><text x="98.9027%" y="863.50"></text></g><g><title>mmput (1 samples, 0.15%)</title><rect x="98.6527%" y="837" width="0.1497%" height="15" fill="rgb(220,20,13)"/><text x="98.9027%" y="847.50"></text></g><g><title>exit_mmap (1 samples, 0.15%)</title><rect x="98.6527%" y="821" width="0.1497%" height="15" fill="rgb(210,164,35)"/><text x="98.9027%" y="831.50"></text></g><g><title>unmap_vmas (1 samples, 0.15%)</title><rect x="98.6527%" y="805" width="0.1497%" height="15" fill="rgb(248,109,41)"/><text x="98.9027%" y="815.50"></text></g><g><title>unmap_page_range (1 samples, 0.15%)</title><rect x="98.6527%" y="789" width="0.1497%" height="15" fill="rgb(238,23,50)"/><text x="98.9027%" y="799.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.30%)</title><rect x="98.6527%" y="917" width="0.2994%" height="15" fill="rgb(211,48,49)"/><text x="98.9027%" y="927.50"></text></g><g><title>do_syscall_64 (2 samples, 0.30%)</title><rect x="98.6527%" y="901" width="0.2994%" height="15" fill="rgb(223,36,21)"/><text x="98.9027%" y="911.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.15%)</title><rect x="98.8024%" y="885" width="0.1497%" height="15" fill="rgb(207,123,46)"/><text x="99.0524%" y="895.50"></text></g><g><title>do_execve (1 samples, 0.15%)</title><rect x="98.8024%" y="869" width="0.1497%" height="15" fill="rgb(240,218,32)"/><text x="99.0524%" y="879.50"></text></g><g><title>__do_execve_file (1 samples, 0.15%)</title><rect x="98.8024%" y="853" width="0.1497%" height="15" fill="rgb(252,5,43)"/><text x="99.0524%" y="863.50"></text></g><g><title>search_binary_handler.part.0 (1 samples, 0.15%)</title><rect x="98.8024%" y="837" width="0.1497%" height="15" fill="rgb(252,84,19)"/><text x="99.0524%" y="847.50"></text></g><g><title>load_elf_binary (1 samples, 0.15%)</title><rect x="98.8024%" y="821" width="0.1497%" height="15" fill="rgb(243,152,39)"/><text x="99.0524%" y="831.50"></text></g><g><title>__clear_user (1 samples, 0.15%)</title><rect x="98.8024%" y="805" width="0.1497%" height="15" fill="rgb(234,160,15)"/><text x="99.0524%" y="815.50"></text></g><g><title>page_fault (1 samples, 0.15%)</title><rect x="98.8024%" y="789" width="0.1497%" height="15" fill="rgb(237,34,20)"/><text x="99.0524%" y="799.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.15%)</title><rect x="98.8024%" y="773" width="0.1497%" height="15" fill="rgb(229,97,13)"/><text x="99.0524%" y="783.50"></text></g><g><title>handle_mm_fault (1 samples, 0.15%)</title><rect x="98.8024%" y="757" width="0.1497%" height="15" fill="rgb(234,71,50)"/><text x="99.0524%" y="767.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.15%)</title><rect x="98.8024%" y="741" width="0.1497%" height="15" fill="rgb(253,155,4)"/><text x="99.0524%" y="751.50"></text></g><g><title>__pud_alloc (1 samples, 0.15%)</title><rect x="98.8024%" y="725" width="0.1497%" height="15" fill="rgb(222,185,37)"/><text x="99.0524%" y="735.50"></text></g><g><title>get_zeroed_page (1 samples, 0.15%)</title><rect x="98.8024%" y="709" width="0.1497%" height="15" fill="rgb(251,177,13)"/><text x="99.0524%" y="719.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.15%)</title><rect x="98.8024%" y="693" width="0.1497%" height="15" fill="rgb(250,179,40)"/><text x="99.0524%" y="703.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.15%)</title><rect x="98.8024%" y="677" width="0.1497%" height="15" fill="rgb(242,44,2)"/><text x="99.0524%" y="687.50"></text></g><g><title>prep_new_page (1 samples, 0.15%)</title><rect x="98.8024%" y="661" width="0.1497%" height="15" fill="rgb(216,177,13)"/><text x="99.0524%" y="671.50"></text></g><g><title>kernel_init_free_pages (1 samples, 0.15%)</title><rect x="98.8024%" y="645" width="0.1497%" height="15" fill="rgb(216,106,43)"/><text x="99.0524%" y="655.50"></text></g><g><title>clear_page_erms (1 samples, 0.15%)</title><rect x="98.8024%" y="629" width="0.1497%" height="15" fill="rgb(216,183,2)"/><text x="99.0524%" y="639.50"></text></g><g><title>lobsters (662 samples, 99.10%)</title><rect x="0.0000%" y="933" width="99.1018%" height="15" fill="rgb(249,75,3)"/><text x="0.2500%" y="943.50">lobsters</text></g><g><title>page_fault (1 samples, 0.15%)</title><rect x="98.9521%" y="917" width="0.1497%" height="15" fill="rgb(219,67,39)"/><text x="99.2021%" y="927.50"></text></g><g><title>all (668 samples, 100%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(253,228,2)"/><text x="0.2500%" y="959.50"></text></g><g><title>perf (6 samples, 0.90%)</title><rect x="99.1018%" y="933" width="0.8982%" height="15" fill="rgb(235,138,27)"/><text x="99.3518%" y="943.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.90%)</title><rect x="99.1018%" y="917" width="0.8982%" height="15" fill="rgb(236,97,51)"/><text x="99.3518%" y="927.50"></text></g><g><title>do_syscall_64 (6 samples, 0.90%)</title><rect x="99.1018%" y="901" width="0.8982%" height="15" fill="rgb(240,80,30)"/><text x="99.3518%" y="911.50"></text></g><g><title>__x64_sys_execve (6 samples, 0.90%)</title><rect x="99.1018%" y="885" width="0.8982%" height="15" fill="rgb(230,178,19)"/><text x="99.3518%" y="895.50"></text></g><g><title>do_execve (6 samples, 0.90%)</title><rect x="99.1018%" y="869" width="0.8982%" height="15" fill="rgb(210,190,27)"/><text x="99.3518%" y="879.50"></text></g><g><title>__do_execve_file (6 samples, 0.90%)</title><rect x="99.1018%" y="853" width="0.8982%" height="15" fill="rgb(222,107,31)"/><text x="99.3518%" y="863.50"></text></g><g><title>search_binary_handler.part.0 (6 samples, 0.90%)</title><rect x="99.1018%" y="837" width="0.8982%" height="15" fill="rgb(216,127,34)"/><text x="99.3518%" y="847.50"></text></g><g><title>load_elf_binary (6 samples, 0.90%)</title><rect x="99.1018%" y="821" width="0.8982%" height="15" fill="rgb(234,116,52)"/><text x="99.3518%" y="831.50"></text></g><g><title>setup_new_exec (6 samples, 0.90%)</title><rect x="99.1018%" y="805" width="0.8982%" height="15" fill="rgb(222,124,15)"/><text x="99.3518%" y="815.50"></text></g><g><title>perf_event_exec (6 samples, 0.90%)</title><rect x="99.1018%" y="789" width="0.8982%" height="15" fill="rgb(231,179,28)"/><text x="99.3518%" y="799.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.75%)</title><rect x="99.2515%" y="773" width="0.7485%" height="15" fill="rgb(226,93,45)"/><text x="99.5015%" y="783.50"></text></g><g><title>native_write_msr (5 samples, 0.75%)</title><rect x="99.2515%" y="757" width="0.7485%" height="15" fill="rgb(215,8,51)"/><text x="99.5015%" y="767.50"></text></g></svg></svg>